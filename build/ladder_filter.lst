ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccTbuHvb.s 			page 1


   1              		.cpu cortex-m4
   2              		.arch armv7e-m
   3              		.fpu fpv4-sp-d16
   4              		.eabi_attribute 27, 1
   5              		.eabi_attribute 28, 1
   6              		.eabi_attribute 20, 1
   7              		.eabi_attribute 21, 1
   8              		.eabi_attribute 23, 3
   9              		.eabi_attribute 24, 1
  10              		.eabi_attribute 25, 1
  11              		.eabi_attribute 26, 1
  12              		.eabi_attribute 30, 2
  13              		.eabi_attribute 34, 1
  14              		.eabi_attribute 18, 4
  15              		.file	"ladder_filter.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text.MoogLP_init,"ax",%progbits
  20              		.align	1
  21              		.p2align 2,,3
  22              		.global	MoogLP_init
  23              		.syntax unified
  24              		.thumb
  25              		.thumb_func
  27              	MoogLP_init:
  28              	.LVL0:
  29              	.LFB3:
  30              		.file 1 "Core/Src/ladder_filter.c"
   1:Core/Src/ladder_filter.c **** /**
   2:Core/Src/ladder_filter.c ****  * @file ladder_filter.c
   3:Core/Src/ladder_filter.c ****  * @author johannes regnier
   4:Core/Src/ladder_filter.c ****  * @brief Zero delay feedback 4-pole ladder filter
   5:Core/Src/ladder_filter.c ****  * @note Simple implementation following Vadim Zavalishin (2008) - Preserving the LTI system topolo
   6:Core/Src/ladder_filter.c ****  * @version 0.1
   7:Core/Src/ladder_filter.c ****  * @date 2023-12-31
   8:Core/Src/ladder_filter.c ****  * 
   9:Core/Src/ladder_filter.c ****  * @copyright Copyright (c) 2023
  10:Core/Src/ladder_filter.c ****  * 
  11:Core/Src/ladder_filter.c ****  */
  12:Core/Src/ladder_filter.c **** 
  13:Core/Src/ladder_filter.c **** #include "ladder_filter.h"
  14:Core/Src/ladder_filter.c **** #include "helper_functions.h"
  15:Core/Src/ladder_filter.c **** #include "CONSTS.h"
  16:Core/Src/ladder_filter.c **** #include "lut_tan.h"
  17:Core/Src/ladder_filter.c **** 
  18:Core/Src/ladder_filter.c **** ZDFLadder_t Moog_filter;
  19:Core/Src/ladder_filter.c **** 
  20:Core/Src/ladder_filter.c **** 
  21:Core/Src/ladder_filter.c **** void MoogLP_init(ZDFLadder_t * filter){
  31              		.loc 1 21 39 view -0
  32              		.cfi_startproc
  33              		@ args = 0, pretend = 0, frame = 0
  34              		@ frame_needed = 0, uses_anonymous_args = 0
  35              		@ link register save eliminated.
  22:Core/Src/ladder_filter.c ****     filter->cutoff = 100.0f;
  36              		.loc 1 22 5 view .LVU1
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccTbuHvb.s 			page 2


  23:Core/Src/ladder_filter.c ****     filter->s1 = 0.0f;
  37              		.loc 1 23 16 is_stmt 0 view .LVU2
  38 0000 0023     		movs	r3, #0
  22:Core/Src/ladder_filter.c ****     filter->cutoff = 100.0f;
  39              		.loc 1 22 20 view .LVU3
  40 0002 044A     		ldr	r2, .L3
  41 0004 0260     		str	r2, [r0]	@ float
  42              		.loc 1 23 5 is_stmt 1 view .LVU4
  43              		.loc 1 23 16 is_stmt 0 view .LVU5
  44 0006 4360     		str	r3, [r0, #4]	@ float
  24:Core/Src/ladder_filter.c ****     filter->s2 = 0.0f;
  45              		.loc 1 24 5 is_stmt 1 view .LVU6
  46              		.loc 1 24 16 is_stmt 0 view .LVU7
  47 0008 8360     		str	r3, [r0, #8]	@ float
  25:Core/Src/ladder_filter.c ****     filter->s3 = 0.0f;
  48              		.loc 1 25 5 is_stmt 1 view .LVU8
  49              		.loc 1 25 16 is_stmt 0 view .LVU9
  50 000a C360     		str	r3, [r0, #12]	@ float
  26:Core/Src/ladder_filter.c ****     filter->s4 = 0.0f;
  51              		.loc 1 26 5 is_stmt 1 view .LVU10
  52              		.loc 1 26 16 is_stmt 0 view .LVU11
  53 000c 0361     		str	r3, [r0, #16]	@ float
  27:Core/Src/ladder_filter.c ****     filter->k = 0.0f;
  54              		.loc 1 27 5 is_stmt 1 view .LVU12
  55              		.loc 1 27 15 is_stmt 0 view .LVU13
  56 000e 4361     		str	r3, [r0, #20]	@ float
  28:Core/Src/ladder_filter.c **** }
  57              		.loc 1 28 1 view .LVU14
  58 0010 7047     		bx	lr
  59              	.L4:
  60 0012 00BF     		.align	2
  61              	.L3:
  62 0014 0000C842 		.word	1120403456
  63              		.cfi_endproc
  64              	.LFE3:
  66              		.global	__aeabi_f2d
  67              		.global	__aeabi_dmul
  68              		.global	__aeabi_d2f
  69              		.section	.text.MoogLP_compute,"ax",%progbits
  70              		.align	1
  71              		.p2align 2,,3
  72              		.global	MoogLP_compute
  73              		.syntax unified
  74              		.thumb
  75              		.thumb_func
  77              	MoogLP_compute:
  78              	.LVL1:
  79              	.LFB4:
  29:Core/Src/ladder_filter.c **** 
  30:Core/Src/ladder_filter.c **** 
  31:Core/Src/ladder_filter.c **** 
  32:Core/Src/ladder_filter.c **** 
  33:Core/Src/ladder_filter.c **** float MoogLP_compute(ZDFLadder_t * filter, float input)
  34:Core/Src/ladder_filter.c **** {
  80              		.loc 1 34 1 is_stmt 1 view -0
  81              		.cfi_startproc
  82              		@ args = 0, pretend = 0, frame = 0
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccTbuHvb.s 			page 3


  83              		@ frame_needed = 0, uses_anonymous_args = 0
  35:Core/Src/ladder_filter.c **** 	float f, one_over_oneplusf, g, G, y1, y2, y3, y4, feedback;
  84              		.loc 1 35 2 view .LVU16
  36:Core/Src/ladder_filter.c ****     f = interp_lin_lut(LUT_TAN_SIZE * (PI * filter->cutoff * TS), LUT_TAN_SIZE, tan_lut);
  85              		.loc 1 36 5 view .LVU17
  34:Core/Src/ladder_filter.c **** 	float f, one_over_oneplusf, g, G, y1, y2, y3, y4, feedback;
  86              		.loc 1 34 1 is_stmt 0 view .LVU18
  87 0000 10B5     		push	{r4, lr}
  88              		.cfi_def_cfa_offset 8
  89              		.cfi_offset 4, -8
  90              		.cfi_offset 14, -4
  91 0002 0446     		mov	r4, r0
  92 0004 2DED028B 		vpush.64	{d8}
  93              		.cfi_def_cfa_offset 16
  94              		.cfi_offset 80, -16
  95              		.cfi_offset 81, -12
  96              		.loc 1 36 51 view .LVU19
  97 0008 0068     		ldr	r0, [r0]	@ float
  98              	.LVL2:
  34:Core/Src/ladder_filter.c **** 	float f, one_over_oneplusf, g, G, y1, y2, y3, y4, feedback;
  99              		.loc 1 34 1 view .LVU20
 100 000a B0EE408A 		vmov.f32	s16, s0
 101              		.loc 1 36 51 view .LVU21
 102 000e FFF7FEFF 		bl	__aeabi_f2d
 103              	.LVL3:
 104              		.loc 1 36 43 view .LVU22
 105 0012 61A3     		adr	r3, .L14+8
 106 0014 D3E90023 		ldrd	r2, [r3]
 107 0018 FFF7FEFF 		bl	__aeabi_dmul
 108              	.LVL4:
 109              		.loc 1 36 60 view .LVU23
 110 001c 60A3     		adr	r3, .L14+16
 111 001e D3E90023 		ldrd	r2, [r3]
 112 0022 FFF7FEFF 		bl	__aeabi_dmul
 113              	.LVL5:
 114              		.loc 1 36 37 view .LVU24
 115 0026 5A4B     		ldr	r3, .L14
 116 0028 0022     		movs	r2, #0
 117 002a FFF7FEFF 		bl	__aeabi_dmul
 118              	.LVL6:
 119              		.loc 1 36 9 view .LVU25
 120 002e FFF7FEFF 		bl	__aeabi_d2f
 121              	.LVL7:
 122 0032 5849     		ldr	r1, .L14+4
 123 0034 00EE100A 		vmov	s0, r0
 124 0038 4FF40060 		mov	r0, #2048
 125 003c FFF7FEFF 		bl	interp_lin_lut
 126              	.LVL8:
  37:Core/Src/ladder_filter.c ****     // f = tanf(PI * filter->cutoff * TS);
  38:Core/Src/ladder_filter.c **** 	one_over_oneplusf = 1 / (1 + f);
 127              		.loc 1 38 29 view .LVU26
 128 0040 F7EE006A 		vmov.f32	s13, #1.0e+0
 129 0044 70EE267A 		vadd.f32	s15, s0, s13
  39:Core/Src/ladder_filter.c **** 	g = f * one_over_oneplusf;
  40:Core/Src/ladder_filter.c **** 	G = g*g*g*g;
  41:Core/Src/ladder_filter.c **** 	// at output of 4th stage
  42:Core/Src/ladder_filter.c **** 	y4 = ((one_over_oneplusf)*(filter->s4 + g*filter->s3 + g*g*filter->s2 + g*g*g*filter->s1) + G*inpu
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccTbuHvb.s 			page 4


 130              		.loc 1 42 50 view .LVU27
 131 0048 94ED036A 		vldr.32	s12, [r4, #12]
 132              		.loc 1 42 40 view .LVU28
 133 004c D4ED044A 		vldr.32	s9, [r4, #16]
 134              		.loc 1 42 86 view .LVU29
 135 0050 94ED017A 		vldr.32	s14, [r4, #4]
 136              		.loc 1 42 116 view .LVU30
 137 0054 94ED054A 		vldr.32	s8, [r4, #20]
  38:Core/Src/ladder_filter.c **** 	g = f * one_over_oneplusf;
 138              		.loc 1 38 20 view .LVU31
 139 0058 C6EEA73A 		vdiv.f32	s7, s13, s15
 140              		.loc 1 42 67 view .LVU32
 141 005c D4ED027A 		vldr.32	s15, [r4, #8]
  39:Core/Src/ladder_filter.c **** 	g = f * one_over_oneplusf;
 142              		.loc 1 39 4 view .LVU33
 143 0060 20EE235A 		vmul.f32	s10, s0, s7
 144              	.LBB14:
 145              	.LBB15:
 146              		.file 2 "Core/Inc/helper_functions.h"
   1:Core/Inc/helper_functions.h **** /**
   2:Core/Inc/helper_functions.h ****  * @file helper_functions.h
   3:Core/Inc/helper_functions.h ****  * @author johannes regnier
   4:Core/Inc/helper_functions.h ****  * @brief Various math tools 
   5:Core/Inc/helper_functions.h ****  * @version 0.1
   6:Core/Inc/helper_functions.h ****  * @date 2023-12-30
   7:Core/Inc/helper_functions.h ****  * 
   8:Core/Inc/helper_functions.h ****  * @copyright Copyright (c) 2023
   9:Core/Inc/helper_functions.h ****  * 
  10:Core/Inc/helper_functions.h ****  */
  11:Core/Inc/helper_functions.h **** 
  12:Core/Inc/helper_functions.h **** #ifndef _HELPER_FUNCTIONS_H
  13:Core/Inc/helper_functions.h **** #define _HELPER_FUNCTIONS_H
  14:Core/Inc/helper_functions.h **** 
  15:Core/Inc/helper_functions.h **** 
  16:Core/Inc/helper_functions.h **** #include <math.h>
  17:Core/Inc/helper_functions.h **** #include <stdint.h>
  18:Core/Inc/helper_functions.h **** 
  19:Core/Inc/helper_functions.h **** #ifndef NOMINMAX
  20:Core/Inc/helper_functions.h **** 
  21:Core/Inc/helper_functions.h **** #ifndef max
  22:Core/Inc/helper_functions.h **** #define max(a,b)            (((a) > (b)) ? (a) : (b))
  23:Core/Inc/helper_functions.h **** #endif
  24:Core/Inc/helper_functions.h **** 
  25:Core/Inc/helper_functions.h **** #ifndef min
  26:Core/Inc/helper_functions.h **** #define min(a,b)            (((a) < (b)) ? (a) : (b))
  27:Core/Inc/helper_functions.h **** #endif
  28:Core/Inc/helper_functions.h **** 
  29:Core/Inc/helper_functions.h **** #endif  /* NOMINMAX */
  30:Core/Inc/helper_functions.h **** 
  31:Core/Inc/helper_functions.h **** /**
  32:Core/Inc/helper_functions.h ****  * @brief Keep value between 0 and max
  33:Core/Inc/helper_functions.h ****  * 
  34:Core/Inc/helper_functions.h ****  * @param value 
  35:Core/Inc/helper_functions.h ****  * @param max 
  36:Core/Inc/helper_functions.h ****  * @return float 
  37:Core/Inc/helper_functions.h ****  */
  38:Core/Inc/helper_functions.h **** inline float wrap(float value, float max)   
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccTbuHvb.s 			page 5


  39:Core/Inc/helper_functions.h **** {
  40:Core/Inc/helper_functions.h ****     if (value < 0.f)
  41:Core/Inc/helper_functions.h ****         value += max;
  42:Core/Inc/helper_functions.h ****     if (value >= max)
  43:Core/Inc/helper_functions.h ****         value -= max;
  44:Core/Inc/helper_functions.h **** 
  45:Core/Inc/helper_functions.h ****     return value;
  46:Core/Inc/helper_functions.h **** }
  47:Core/Inc/helper_functions.h **** 
  48:Core/Inc/helper_functions.h **** inline float Crossfade(float a, float b, float fade)
  49:Core/Inc/helper_functions.h **** {
  50:Core/Inc/helper_functions.h ****     return a + (b - a) * fade;
  51:Core/Inc/helper_functions.h **** }
  52:Core/Inc/helper_functions.h **** 
  53:Core/Inc/helper_functions.h **** 
  54:Core/Inc/helper_functions.h **** /**
  55:Core/Inc/helper_functions.h ****  * @brief Pade-approximation of tanh for soft clipping
  56:Core/Inc/helper_functions.h ****  * @ from https://www.musicdsp.org/en/latest/Other/238-rational-tanh-approximation.html 
  57:Core/Inc/helper_functions.h ****  * @param x 
  58:Core/Inc/helper_functions.h ****  * @return float 
  59:Core/Inc/helper_functions.h ****  */
  60:Core/Inc/helper_functions.h **** inline float SoftClip(float x)
  61:Core/Inc/helper_functions.h **** {
  62:Core/Inc/helper_functions.h ****     if (x < -3.0f)
 147              		.loc 2 62 8 view .LVU34
 148 0064 F8EE081A 		vmov.f32	s3, #-3.0e+0
 149              	.LBE15:
 150              	.LBE14:
 151              		.loc 1 42 40 view .LVU35
 152 0068 E6EE054A 		vfma.f32	s9, s12, s10
  40:Core/Src/ladder_filter.c **** 	// at output of 4th stage
 153              		.loc 1 40 7 view .LVU36
 154 006c 25EE053A 		vmul.f32	s6, s10, s10
 155              	.LBB23:
 156              	.LBB18:
 157              		.loc 2 62 8 view .LVU37
 158 0070 B4EEE18A 		vcmpe.f32	s16, s3
 159              	.LBE18:
 160              	.LBE23:
 161              		.loc 1 42 55 view .LVU38
 162 0074 E3EE274A 		vfma.f32	s9, s6, s15
  40:Core/Src/ladder_filter.c **** 	// at output of 4th stage
 163              		.loc 1 40 9 view .LVU39
 164 0078 23EE052A 		vmul.f32	s4, s6, s10
 165              	.LBB24:
 166              	.LBB19:
 167              		.loc 2 62 8 view .LVU40
 168 007c F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 169              	.LBE19:
 170              	.LBE24:
  40:Core/Src/ladder_filter.c **** 	// at output of 4th stage
 171              		.loc 1 40 4 view .LVU41
 172 0080 62EE052A 		vmul.f32	s5, s4, s10
 173              		.loc 1 42 72 view .LVU42
 174 0084 E2EE074A 		vfma.f32	s9, s4, s14
 175              		.loc 1 42 95 view .LVU43
 176 0088 22EE883A 		vmul.f32	s6, s5, s16
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccTbuHvb.s 			page 6


 177              		.loc 1 42 108 view .LVU44
 178 008c B0EE662A 		vmov.f32	s4, s13
 179 0090 A4EE222A 		vfma.f32	s4, s8, s5
 180              		.loc 1 42 92 view .LVU45
 181 0094 A4EEA33A 		vfma.f32	s6, s9, s7
  36:Core/Src/ladder_filter.c ****     // f = tanf(PI * filter->cutoff * TS);
 182              		.loc 1 36 9 view .LVU46
 183 0098 F0EE405A 		vmov.f32	s11, s0
 184              	.LVL9:
  38:Core/Src/ladder_filter.c **** 	g = f * one_over_oneplusf;
 185              		.loc 1 38 2 is_stmt 1 view .LVU47
  39:Core/Src/ladder_filter.c **** 	G = g*g*g*g;
 186              		.loc 1 39 2 view .LVU48
  40:Core/Src/ladder_filter.c **** 	// at output of 4th stage
 187              		.loc 1 40 2 view .LVU49
 188              		.loc 1 42 2 view .LVU50
 189              		.loc 1 42 5 is_stmt 0 view .LVU51
 190 009c 83EE020A 		vdiv.f32	s0, s6, s4
 191              	.LVL10:
  43:Core/Src/ladder_filter.c **** 	// at other outputs
  44:Core/Src/ladder_filter.c **** 	feedback = (SoftClip(input) - SoftClip(filter->k*y4)); // naive but good enough
 192              		.loc 1 44 2 is_stmt 1 view .LVU52
 193              	.LBB25:
 194              	.LBI14:
  60:Core/Inc/helper_functions.h **** {
 195              		.loc 2 60 14 view .LVU53
 196              	.LBB20:
 197              		.loc 2 62 5 view .LVU54
 198              		.loc 2 62 8 is_stmt 0 view .LVU55
 199 00a0 72D4     		bmi	.L8
  63:Core/Inc/helper_functions.h ****     {
  64:Core/Inc/helper_functions.h ****         return -1.0f;
  65:Core/Inc/helper_functions.h ****     }
  66:Core/Inc/helper_functions.h ****     else if (x > 3.0f)
 200              		.loc 2 66 10 is_stmt 1 view .LVU56
 201              		.loc 2 66 13 is_stmt 0 view .LVU57
 202 00a2 F0EE084A 		vmov.f32	s9, #3.0e+0
 203 00a6 B4EEE48A 		vcmpe.f32	s16, s9
 204 00aa F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 205 00ae 55DD     		ble	.L13
 206              	.LVL11:
 207              	.L6:
 208              		.loc 2 66 13 view .LVU58
 209              	.LBE20:
 210              	.LBE25:
 211              		.loc 1 44 32 view .LVU59
 212 00b0 64EE004A 		vmul.f32	s9, s8, s0
 213              	.LVL12:
 214              	.LBB26:
 215              	.LBI26:
  60:Core/Inc/helper_functions.h **** {
 216              		.loc 2 60 14 is_stmt 1 view .LVU60
 217              	.LBB27:
  62:Core/Inc/helper_functions.h ****     {
 218              		.loc 2 62 5 view .LVU61
  62:Core/Inc/helper_functions.h ****     {
 219              		.loc 2 62 8 is_stmt 0 view .LVU62
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccTbuHvb.s 			page 7


 220 00b4 B8EE084A 		vmov.f32	s8, #-3.0e+0
 221 00b8 F4EEC44A 		vcmpe.f32	s9, s8
 222 00bc F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 223 00c0 5FD4     		bmi	.L10
 224              		.loc 2 66 10 is_stmt 1 view .LVU63
 225              		.loc 2 66 13 is_stmt 0 view .LVU64
 226 00c2 B0EE084A 		vmov.f32	s8, #3.0e+0
 227 00c6 F4EEC44A 		vcmpe.f32	s9, s8
 228 00ca F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 229 00ce 42DC     		bgt	.L11
 230              	.LVL13:
 231              	.LBB28:
 232              	.LBI28:
  60:Core/Inc/helper_functions.h **** {
 233              		.loc 2 60 14 is_stmt 1 view .LVU65
 234              	.LBB29:
  67:Core/Inc/helper_functions.h ****     {
  68:Core/Inc/helper_functions.h ****         return 1.0f;
  69:Core/Inc/helper_functions.h ****     }
  70:Core/Inc/helper_functions.h ****     else
  71:Core/Inc/helper_functions.h ****     {
  72:Core/Inc/helper_functions.h ****         return x * (27.0f + x * x) / (27.0f + 9.0f * x * x);
 235              		.loc 2 72 9 view .LVU66
 236              		.loc 2 72 27 is_stmt 0 view .LVU67
 237 00d0 B3EE0B4A 		vmov.f32	s8, #2.7e+1
 238              		.loc 2 72 52 view .LVU68
 239 00d4 F2EE022A 		vmov.f32	s5, #9.0e+0
 240 00d8 64EEA22A 		vmul.f32	s5, s9, s5
 241              		.loc 2 72 27 view .LVU69
 242 00dc B0EE442A 		vmov.f32	s4, s8
 243 00e0 A4EEA42A 		vfma.f32	s4, s9, s9
 244              		.loc 2 72 45 view .LVU70
 245 00e4 A4EEA24A 		vfma.f32	s8, s9, s5
 246              		.loc 2 72 18 view .LVU71
 247 00e8 64EE824A 		vmul.f32	s9, s9, s4
 248              	.LVL14:
 249              		.loc 2 72 45 view .LVU72
 250 00ec B0EE443A 		vmov.f32	s6, s8
 251              		.loc 2 72 36 view .LVU73
 252 00f0 84EE834A 		vdiv.f32	s8, s9, s6
 253              	.LVL15:
 254              	.L7:
 255              		.loc 2 72 36 view .LVU74
 256              	.LBE29:
 257              	.LBE28:
 258              	.LBE27:
 259              	.LBE26:
  45:Core/Src/ladder_filter.c **** 	y1 = g*feedback + (filter->s1) * one_over_oneplusf;
  46:Core/Src/ladder_filter.c **** 	y2 = g*y1 + filter->s2 * one_over_oneplusf;
  47:Core/Src/ladder_filter.c **** 	y3 = g*y2 + filter->s3 * one_over_oneplusf;
  48:Core/Src/ladder_filter.c **** 	//update states s = y + v = y + f*(x-y) (=2v + s = 2*f(x-y) + s)
  49:Core/Src/ladder_filter.c **** 	filter->s1 = y1 + f*(feedback - y1);
  50:Core/Src/ladder_filter.c **** 	filter->s2 = y2 + f*(y1 - y2);
  51:Core/Src/ladder_filter.c **** 	filter->s3 = y3 + f*(y2 - y3);
  52:Core/Src/ladder_filter.c **** 	filter->s4 = y4 + f*(y3 - y4);
  53:Core/Src/ladder_filter.c **** 	return(y4);
  54:Core/Src/ladder_filter.c **** }...
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccTbuHvb.s 			page 8


 260              		.loc 1 54 1 view .LVU75
 261 00f4 BDEC028B 		vldm	sp!, {d8}
 262              		.cfi_remember_state
 263              		.cfi_restore 80
 264              		.cfi_restore 81
 265              		.cfi_def_cfa_offset 8
  44:Core/Src/ladder_filter.c **** 	feedback = (SoftClip(input) - SoftClip(filter->k*y4)); // naive but good enough
 266              		.loc 1 44 11 view .LVU76
 267 00f8 76EEC46A 		vsub.f32	s13, s13, s8
 268              	.LVL16:
  45:Core/Src/ladder_filter.c **** 	y1 = g*feedback + (filter->s1) * one_over_oneplusf;
 269              		.loc 1 45 2 is_stmt 1 view .LVU77
  45:Core/Src/ladder_filter.c **** 	y1 = g*feedback + (filter->s1) * one_over_oneplusf;
 270              		.loc 1 45 33 is_stmt 0 view .LVU78
 271 00fc 27EE237A 		vmul.f32	s14, s14, s7
  46:Core/Src/ladder_filter.c **** 	y2 = g*y1 + filter->s2 * one_over_oneplusf;
 272              		.loc 1 46 25 view .LVU79
 273 0100 67EEA37A 		vmul.f32	s15, s15, s7
  45:Core/Src/ladder_filter.c **** 	y1 = g*feedback + (filter->s1) * one_over_oneplusf;
 274              		.loc 1 45 5 view .LVU80
 275 0104 A5EE267A 		vfma.f32	s14, s10, s13
 276              	.LVL17:
  46:Core/Src/ladder_filter.c **** 	y2 = g*y1 + filter->s2 * one_over_oneplusf;
 277              		.loc 1 46 2 is_stmt 1 view .LVU81
  47:Core/Src/ladder_filter.c **** 	y3 = g*y2 + filter->s3 * one_over_oneplusf;
 278              		.loc 1 47 25 is_stmt 0 view .LVU82
 279 0108 26EE236A 		vmul.f32	s12, s12, s7
  46:Core/Src/ladder_filter.c **** 	y2 = g*y1 + filter->s2 * one_over_oneplusf;
 280              		.loc 1 46 5 view .LVU83
 281 010c E5EE077A 		vfma.f32	s15, s10, s14
 282              	.LVL18:
  47:Core/Src/ladder_filter.c **** 	y3 = g*y2 + filter->s3 * one_over_oneplusf;
 283              		.loc 1 47 2 is_stmt 1 view .LVU84
  49:Core/Src/ladder_filter.c **** 	filter->s1 = y1 + f*(feedback - y1);
 284              		.loc 1 49 32 is_stmt 0 view .LVU85
 285 0110 76EEC76A 		vsub.f32	s13, s13, s14
 286              	.LVL19:
  49:Core/Src/ladder_filter.c **** 	filter->s1 = y1 + f*(feedback - y1);
 287              		.loc 1 49 18 view .LVU86
 288 0114 F0EE474A 		vmov.f32	s9, s14
 289 0118 E6EEA54A 		vfma.f32	s9, s13, s11
  47:Core/Src/ladder_filter.c **** 	y3 = g*y2 + filter->s3 * one_over_oneplusf;
 290              		.loc 1 47 5 view .LVU87
 291 011c F0EE466A 		vmov.f32	s13, s12
 292 0120 E5EE276A 		vfma.f32	s13, s10, s15
 293              	.LVL20:
  49:Core/Src/ladder_filter.c **** 	filter->s1 = y1 + f*(feedback - y1);
 294              		.loc 1 49 2 is_stmt 1 view .LVU88
  50:Core/Src/ladder_filter.c **** 	filter->s2 = y2 + f*(y1 - y2);
 295              		.loc 1 50 26 is_stmt 0 view .LVU89
 296 0124 37EE677A 		vsub.f32	s14, s14, s15
 297              	.LVL21:
  50:Core/Src/ladder_filter.c **** 	filter->s2 = y2 + f*(y1 - y2);
 298              		.loc 1 50 18 view .LVU90
 299 0128 B0EE676A 		vmov.f32	s12, s15
  51:Core/Src/ladder_filter.c **** 	filter->s3 = y3 + f*(y2 - y3);
 300              		.loc 1 51 26 view .LVU91
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccTbuHvb.s 			page 9


 301 012c 77EEE67A 		vsub.f32	s15, s15, s13
 302              	.LVL22:
  50:Core/Src/ladder_filter.c **** 	filter->s2 = y2 + f*(y1 - y2);
 303              		.loc 1 50 18 view .LVU92
 304 0130 A7EE256A 		vfma.f32	s12, s14, s11
 305              	.LVL23:
  52:Core/Src/ladder_filter.c **** 	filter->s4 = y4 + f*(y3 - y4);
 306              		.loc 1 52 26 view .LVU93
 307 0134 36EEC07A 		vsub.f32	s14, s13, s0
  51:Core/Src/ladder_filter.c **** 	filter->s3 = y3 + f*(y2 - y3);
 308              		.loc 1 51 18 view .LVU94
 309 0138 E7EEA56A 		vfma.f32	s13, s15, s11
 310              	.LVL24:
  52:Core/Src/ladder_filter.c **** 	filter->s4 = y4 + f*(y3 - y4);
 311              		.loc 1 52 18 view .LVU95
 312 013c F0EE407A 		vmov.f32	s15, s0
 313 0140 E7EE257A 		vfma.f32	s15, s14, s11
  49:Core/Src/ladder_filter.c **** 	filter->s1 = y1 + f*(feedback - y1);
 314              		.loc 1 49 13 view .LVU96
 315 0144 C4ED014A 		vstr.32	s9, [r4, #4]
  50:Core/Src/ladder_filter.c **** 	filter->s2 = y2 + f*(y1 - y2);
 316              		.loc 1 50 2 is_stmt 1 view .LVU97
  50:Core/Src/ladder_filter.c **** 	filter->s2 = y2 + f*(y1 - y2);
 317              		.loc 1 50 13 is_stmt 0 view .LVU98
 318 0148 84ED026A 		vstr.32	s12, [r4, #8]
  51:Core/Src/ladder_filter.c **** 	filter->s3 = y3 + f*(y2 - y3);
 319              		.loc 1 51 2 is_stmt 1 view .LVU99
  51:Core/Src/ladder_filter.c **** 	filter->s3 = y3 + f*(y2 - y3);
 320              		.loc 1 51 13 is_stmt 0 view .LVU100
 321 014c C4ED036A 		vstr.32	s13, [r4, #12]
  52:Core/Src/ladder_filter.c **** 	filter->s4 = y4 + f*(y3 - y4);
 322              		.loc 1 52 2 is_stmt 1 view .LVU101
  52:Core/Src/ladder_filter.c **** 	filter->s4 = y4 + f*(y3 - y4);
 323              		.loc 1 52 13 is_stmt 0 view .LVU102
 324 0150 C4ED047A 		vstr.32	s15, [r4, #16]
  53:Core/Src/ladder_filter.c **** 	return(y4);
 325              		.loc 1 53 2 is_stmt 1 view .LVU103
 326              		.loc 1 54 1 is_stmt 0 view .LVU104
 327 0154 10BD     		pop	{r4, pc}
 328              	.LVL25:
 329              	.L11:
 330              		.cfi_restore_state
 331              	.LBB32:
 332              	.LBB30:
  68:Core/Inc/helper_functions.h ****     }
 333              		.loc 2 68 16 view .LVU105
 334 0156 B7EE004A 		vmov.f32	s8, #1.0e+0
 335 015a CBE7     		b	.L7
 336              	.LVL26:
 337              	.L13:
  68:Core/Inc/helper_functions.h ****     }
 338              		.loc 2 68 16 view .LVU106
 339              	.LBE30:
 340              	.LBE32:
 341              	.LBB33:
 342              	.LBB21:
 343              	.LBB16:
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccTbuHvb.s 			page 10


 344              	.LBI16:
  60:Core/Inc/helper_functions.h **** {
 345              		.loc 2 60 14 is_stmt 1 view .LVU107
 346              	.LBB17:
 347              		.loc 2 72 9 view .LVU108
 348              		.loc 2 72 27 is_stmt 0 view .LVU109
 349 015c F3EE0B6A 		vmov.f32	s13, #2.7e+1
 350              		.loc 2 72 52 view .LVU110
 351 0160 B2EE023A 		vmov.f32	s6, #9.0e+0
 352 0164 28EE033A 		vmul.f32	s6, s16, s6
 353              		.loc 2 72 27 view .LVU111
 354 0168 F0EE662A 		vmov.f32	s5, s13
 355              	.LVL27:
 356              		.loc 2 72 27 view .LVU112
 357 016c E8EE082A 		vfma.f32	s5, s16, s16
 358              		.loc 2 72 45 view .LVU113
 359 0170 E8EE036A 		vfma.f32	s13, s16, s6
 360              		.loc 2 72 18 view .LVU114
 361 0174 28EE228A 		vmul.f32	s16, s16, s5
 362              	.LVL28:
 363              		.loc 2 72 45 view .LVU115
 364 0178 F0EE664A 		vmov.f32	s9, s13
 365              		.loc 2 72 36 view .LVU116
 366 017c C8EE246A 		vdiv.f32	s13, s16, s9
 367              	.LVL29:
 368              		.loc 2 72 36 view .LVU117
 369 0180 96E7     		b	.L6
 370              	.LVL30:
 371              	.L10:
 372              		.loc 2 72 36 view .LVU118
 373              	.LBE17:
 374              	.LBE16:
 375              	.LBE21:
 376              	.LBE33:
 377              	.LBB34:
 378              	.LBB31:
  64:Core/Inc/helper_functions.h ****     }
 379              		.loc 2 64 16 view .LVU119
 380 0182 BFEE004A 		vmov.f32	s8, #-1.0e+0
 381 0186 B5E7     		b	.L7
 382              	.LVL31:
 383              	.L8:
  64:Core/Inc/helper_functions.h ****     }
 384              		.loc 2 64 16 view .LVU120
 385              	.LBE31:
 386              	.LBE34:
 387              	.LBB35:
 388              	.LBB22:
 389 0188 FFEE006A 		vmov.f32	s13, #-1.0e+0
 390 018c 90E7     		b	.L6
 391              	.L15:
 392 018e 00BF     		.align	3
 393              	.L14:
 394 0190 0000A040 		.word	1084227584
 395 0194 00000000 		.word	tan_lut
 396 0198 EA2E4454 		.word	1413754602
 397 019c FB210940 		.word	1074340347
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccTbuHvb.s 			page 11


 398 01a0 000000C0 		.word	-1073741824
 399 01a4 F8C6F73E 		.word	1056425720
 400              	.LBE22:
 401              	.LBE35:
 402              		.cfi_endproc
 403              	.LFE4:
 405              		.global	Moog_filter
 406              		.section	.bss.Moog_filter,"aw",%nobits
 407              		.align	2
 410              	Moog_filter:
 411 0000 00000000 		.space	24
 411      00000000 
 411      00000000 
 411      00000000 
 411      00000000 
 412              		.text
 413              	.Letext0:
 414              		.file 3 "Core/Inc/ladder_filter.h"
 415              		.file 4 "/Users/johannes/Library/Application Support/Code/User/globalStorage/bmd.stm32-for-vscode/
 416              		.file 5 "/Users/johannes/Library/Application Support/Code/User/globalStorage/bmd.stm32-for-vscode/
 417              		.file 6 "Core/Inc/lut_tan.h"
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccTbuHvb.s 			page 12


DEFINED SYMBOLS
                            *ABS*:0000000000000000 ladder_filter.c
/var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccTbuHvb.s:20     .text.MoogLP_init:0000000000000000 $t
/var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccTbuHvb.s:27     .text.MoogLP_init:0000000000000000 MoogLP_init
/var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccTbuHvb.s:62     .text.MoogLP_init:0000000000000014 $d
/var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccTbuHvb.s:70     .text.MoogLP_compute:0000000000000000 $t
/var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccTbuHvb.s:77     .text.MoogLP_compute:0000000000000000 MoogLP_compute
/var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccTbuHvb.s:394    .text.MoogLP_compute:0000000000000190 $d
/var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccTbuHvb.s:410    .bss.Moog_filter:0000000000000000 Moog_filter
/var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccTbuHvb.s:407    .bss.Moog_filter:0000000000000000 $d

UNDEFINED SYMBOLS
__aeabi_f2d
__aeabi_dmul
__aeabi_d2f
interp_lin_lut
tan_lut
