ARM GAS  /var/folders/lp/x54gwt890xv47sdkqj1k04q40000gn/T//ccDNNL7g.s 			page 1


   1              		.cpu cortex-m4
   2              		.arch armv7e-m
   3              		.fpu fpv4-sp-d16
   4              		.eabi_attribute 27, 1
   5              		.eabi_attribute 28, 1
   6              		.eabi_attribute 20, 1
   7              		.eabi_attribute 21, 1
   8              		.eabi_attribute 23, 3
   9              		.eabi_attribute 24, 1
  10              		.eabi_attribute 25, 1
  11              		.eabi_attribute 26, 1
  12              		.eabi_attribute 30, 1
  13              		.eabi_attribute 34, 1
  14              		.eabi_attribute 18, 4
  15              		.file	"SEGGER_RTT_printf.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.file 1 "Core/Src/SEGGER_RTT_printf.c"
  20              		.section	.text._StoreChar,"ax",%progbits
  21              		.align	1
  22              		.syntax unified
  23              		.thumb
  24              		.thumb_func
  26              	_StoreChar:
  27              	.LVL0:
  28              	.LFB0:
   1:Core/Src/SEGGER_RTT_printf.c **** /*********************************************************************
   2:Core/Src/SEGGER_RTT_printf.c **** *                    SEGGER Microcontroller GmbH                     *
   3:Core/Src/SEGGER_RTT_printf.c **** *                        The Embedded Experts                        *
   4:Core/Src/SEGGER_RTT_printf.c **** **********************************************************************
   5:Core/Src/SEGGER_RTT_printf.c **** *                                                                    *
   6:Core/Src/SEGGER_RTT_printf.c **** *            (c) 1995 - 2019 SEGGER Microcontroller GmbH             *
   7:Core/Src/SEGGER_RTT_printf.c **** *                                                                    *
   8:Core/Src/SEGGER_RTT_printf.c **** *       www.segger.com     Support: support@segger.com               *
   9:Core/Src/SEGGER_RTT_printf.c **** *                                                                    *
  10:Core/Src/SEGGER_RTT_printf.c **** **********************************************************************
  11:Core/Src/SEGGER_RTT_printf.c **** *                                                                    *
  12:Core/Src/SEGGER_RTT_printf.c **** *       SEGGER RTT * Real Time Transfer for embedded targets         *
  13:Core/Src/SEGGER_RTT_printf.c **** *                                                                    *
  14:Core/Src/SEGGER_RTT_printf.c **** **********************************************************************
  15:Core/Src/SEGGER_RTT_printf.c **** *                                                                    *
  16:Core/Src/SEGGER_RTT_printf.c **** * All rights reserved.                                               *
  17:Core/Src/SEGGER_RTT_printf.c **** *                                                                    *
  18:Core/Src/SEGGER_RTT_printf.c **** * SEGGER strongly recommends to not make any changes                 *
  19:Core/Src/SEGGER_RTT_printf.c **** * to or modify the source code of this software in order to stay     *
  20:Core/Src/SEGGER_RTT_printf.c **** * compatible with the RTT protocol and J-Link.                       *
  21:Core/Src/SEGGER_RTT_printf.c **** *                                                                    *
  22:Core/Src/SEGGER_RTT_printf.c **** * Redistribution and use in source and binary forms, with or         *
  23:Core/Src/SEGGER_RTT_printf.c **** * without modification, are permitted provided that the following    *
  24:Core/Src/SEGGER_RTT_printf.c **** * condition is met:                                                  *
  25:Core/Src/SEGGER_RTT_printf.c **** *                                                                    *
  26:Core/Src/SEGGER_RTT_printf.c **** * o Redistributions of source code must retain the above copyright   *
  27:Core/Src/SEGGER_RTT_printf.c **** *   notice, this condition and the following disclaimer.             *
  28:Core/Src/SEGGER_RTT_printf.c **** *                                                                    *
  29:Core/Src/SEGGER_RTT_printf.c **** * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND             *
  30:Core/Src/SEGGER_RTT_printf.c **** * CONTRIBUTORS "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,        *
ARM GAS  /var/folders/lp/x54gwt890xv47sdkqj1k04q40000gn/T//ccDNNL7g.s 			page 2


  31:Core/Src/SEGGER_RTT_printf.c **** * INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF           *
  32:Core/Src/SEGGER_RTT_printf.c **** * MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE           *
  33:Core/Src/SEGGER_RTT_printf.c **** * DISCLAIMED. IN NO EVENT SHALL SEGGER Microcontroller BE LIABLE FOR *
  34:Core/Src/SEGGER_RTT_printf.c **** * ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR           *
  35:Core/Src/SEGGER_RTT_printf.c **** * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT  *
  36:Core/Src/SEGGER_RTT_printf.c **** * OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS;    *
  37:Core/Src/SEGGER_RTT_printf.c **** * OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF      *
  38:Core/Src/SEGGER_RTT_printf.c **** * LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT          *
  39:Core/Src/SEGGER_RTT_printf.c **** * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE  *
  40:Core/Src/SEGGER_RTT_printf.c **** * USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH   *
  41:Core/Src/SEGGER_RTT_printf.c **** * DAMAGE.                                                            *
  42:Core/Src/SEGGER_RTT_printf.c **** *                                                                    *
  43:Core/Src/SEGGER_RTT_printf.c **** **********************************************************************
  44:Core/Src/SEGGER_RTT_printf.c **** ---------------------------END-OF-HEADER------------------------------
  45:Core/Src/SEGGER_RTT_printf.c **** File    : SEGGER_RTT_printf.c
  46:Core/Src/SEGGER_RTT_printf.c **** Purpose : Replacement for printf to write formatted data via RTT
  47:Core/Src/SEGGER_RTT_printf.c **** Revision: $Rev: 17697 $
  48:Core/Src/SEGGER_RTT_printf.c **** ----------------------------------------------------------------------
  49:Core/Src/SEGGER_RTT_printf.c **** */
  50:Core/Src/SEGGER_RTT_printf.c **** #include "SEGGER_RTT.h"
  51:Core/Src/SEGGER_RTT_printf.c **** #include "SEGGER_RTT_Conf.h"
  52:Core/Src/SEGGER_RTT_printf.c **** 
  53:Core/Src/SEGGER_RTT_printf.c **** /*********************************************************************
  54:Core/Src/SEGGER_RTT_printf.c **** *
  55:Core/Src/SEGGER_RTT_printf.c **** *       Defines, configurable
  56:Core/Src/SEGGER_RTT_printf.c **** *
  57:Core/Src/SEGGER_RTT_printf.c **** **********************************************************************
  58:Core/Src/SEGGER_RTT_printf.c **** */
  59:Core/Src/SEGGER_RTT_printf.c **** 
  60:Core/Src/SEGGER_RTT_printf.c **** #ifndef SEGGER_RTT_PRINTF_BUFFER_SIZE
  61:Core/Src/SEGGER_RTT_printf.c ****   #define SEGGER_RTT_PRINTF_BUFFER_SIZE (64)
  62:Core/Src/SEGGER_RTT_printf.c **** #endif
  63:Core/Src/SEGGER_RTT_printf.c **** 
  64:Core/Src/SEGGER_RTT_printf.c **** #include <stdlib.h>
  65:Core/Src/SEGGER_RTT_printf.c **** #include <stdarg.h>
  66:Core/Src/SEGGER_RTT_printf.c **** 
  67:Core/Src/SEGGER_RTT_printf.c **** 
  68:Core/Src/SEGGER_RTT_printf.c **** #define FORMAT_FLAG_LEFT_JUSTIFY   (1u << 0)
  69:Core/Src/SEGGER_RTT_printf.c **** #define FORMAT_FLAG_PAD_ZERO       (1u << 1)
  70:Core/Src/SEGGER_RTT_printf.c **** #define FORMAT_FLAG_PRINT_SIGN     (1u << 2)
  71:Core/Src/SEGGER_RTT_printf.c **** #define FORMAT_FLAG_ALTERNATE      (1u << 3)
  72:Core/Src/SEGGER_RTT_printf.c **** 
  73:Core/Src/SEGGER_RTT_printf.c **** /*********************************************************************
  74:Core/Src/SEGGER_RTT_printf.c **** *
  75:Core/Src/SEGGER_RTT_printf.c **** *       Types
  76:Core/Src/SEGGER_RTT_printf.c **** *
  77:Core/Src/SEGGER_RTT_printf.c **** **********************************************************************
  78:Core/Src/SEGGER_RTT_printf.c **** */
  79:Core/Src/SEGGER_RTT_printf.c **** 
  80:Core/Src/SEGGER_RTT_printf.c **** typedef struct {
  81:Core/Src/SEGGER_RTT_printf.c ****   char*     pBuffer;
  82:Core/Src/SEGGER_RTT_printf.c ****   unsigned  BufferSize;
  83:Core/Src/SEGGER_RTT_printf.c ****   unsigned  Cnt;
  84:Core/Src/SEGGER_RTT_printf.c **** 
  85:Core/Src/SEGGER_RTT_printf.c ****   int   ReturnValue;
  86:Core/Src/SEGGER_RTT_printf.c **** 
  87:Core/Src/SEGGER_RTT_printf.c ****   unsigned RTTBufferIndex;
ARM GAS  /var/folders/lp/x54gwt890xv47sdkqj1k04q40000gn/T//ccDNNL7g.s 			page 3


  88:Core/Src/SEGGER_RTT_printf.c **** } SEGGER_RTT_PRINTF_DESC;
  89:Core/Src/SEGGER_RTT_printf.c **** 
  90:Core/Src/SEGGER_RTT_printf.c **** /*********************************************************************
  91:Core/Src/SEGGER_RTT_printf.c **** *
  92:Core/Src/SEGGER_RTT_printf.c **** *       Function prototypes
  93:Core/Src/SEGGER_RTT_printf.c **** *
  94:Core/Src/SEGGER_RTT_printf.c **** **********************************************************************
  95:Core/Src/SEGGER_RTT_printf.c **** */
  96:Core/Src/SEGGER_RTT_printf.c **** 
  97:Core/Src/SEGGER_RTT_printf.c **** /*********************************************************************
  98:Core/Src/SEGGER_RTT_printf.c **** *
  99:Core/Src/SEGGER_RTT_printf.c **** *       Static code
 100:Core/Src/SEGGER_RTT_printf.c **** *
 101:Core/Src/SEGGER_RTT_printf.c **** **********************************************************************
 102:Core/Src/SEGGER_RTT_printf.c **** */
 103:Core/Src/SEGGER_RTT_printf.c **** /*********************************************************************
 104:Core/Src/SEGGER_RTT_printf.c **** *
 105:Core/Src/SEGGER_RTT_printf.c **** *       _StoreChar
 106:Core/Src/SEGGER_RTT_printf.c **** */
 107:Core/Src/SEGGER_RTT_printf.c **** static void _StoreChar(SEGGER_RTT_PRINTF_DESC * p, char c) {
  29              		.loc 1 107 60 view -0
  30              		.cfi_startproc
  31              		@ args = 0, pretend = 0, frame = 0
  32              		@ frame_needed = 0, uses_anonymous_args = 0
  33              		.loc 1 107 60 is_stmt 0 view .LVU1
  34 0000 10B5     		push	{r4, lr}
  35              		.cfi_def_cfa_offset 8
  36              		.cfi_offset 4, -8
  37              		.cfi_offset 14, -4
  38 0002 0446     		mov	r4, r0
 108:Core/Src/SEGGER_RTT_printf.c ****   unsigned Cnt;
  39              		.loc 1 108 3 is_stmt 1 view .LVU2
 109:Core/Src/SEGGER_RTT_printf.c **** 
 110:Core/Src/SEGGER_RTT_printf.c ****   Cnt = p->Cnt;
  40              		.loc 1 110 3 view .LVU3
  41              		.loc 1 110 7 is_stmt 0 view .LVU4
  42 0004 8268     		ldr	r2, [r0, #8]
  43              	.LVL1:
 111:Core/Src/SEGGER_RTT_printf.c ****   if ((Cnt + 1u) <= p->BufferSize) {
  44              		.loc 1 111 3 is_stmt 1 view .LVU5
  45              		.loc 1 111 12 is_stmt 0 view .LVU6
  46 0006 531C     		adds	r3, r2, #1
  47              		.loc 1 111 22 view .LVU7
  48 0008 4068     		ldr	r0, [r0, #4]
  49              	.LVL2:
  50              		.loc 1 111 6 view .LVU8
  51 000a 8342     		cmp	r3, r0
  52 000c 05D8     		bhi	.L2
 112:Core/Src/SEGGER_RTT_printf.c ****     *(p->pBuffer + Cnt) = c;
  53              		.loc 1 112 5 is_stmt 1 view .LVU9
  54              		.loc 1 112 8 is_stmt 0 view .LVU10
  55 000e 2068     		ldr	r0, [r4]
  56              		.loc 1 112 25 view .LVU11
  57 0010 8154     		strb	r1, [r0, r2]
 113:Core/Src/SEGGER_RTT_printf.c ****     p->Cnt = Cnt + 1u;
  58              		.loc 1 113 5 is_stmt 1 view .LVU12
  59              		.loc 1 113 12 is_stmt 0 view .LVU13
ARM GAS  /var/folders/lp/x54gwt890xv47sdkqj1k04q40000gn/T//ccDNNL7g.s 			page 4


  60 0012 A360     		str	r3, [r4, #8]
 114:Core/Src/SEGGER_RTT_printf.c ****     p->ReturnValue++;
  61              		.loc 1 114 5 is_stmt 1 view .LVU14
  62              		.loc 1 114 6 is_stmt 0 view .LVU15
  63 0014 E368     		ldr	r3, [r4, #12]
  64              		.loc 1 114 19 view .LVU16
  65 0016 0133     		adds	r3, r3, #1
  66 0018 E360     		str	r3, [r4, #12]
  67              	.L2:
 115:Core/Src/SEGGER_RTT_printf.c ****   }
 116:Core/Src/SEGGER_RTT_printf.c ****   //
 117:Core/Src/SEGGER_RTT_printf.c ****   // Write part of string, when the buffer is full
 118:Core/Src/SEGGER_RTT_printf.c ****   //
 119:Core/Src/SEGGER_RTT_printf.c ****   if (p->Cnt == p->BufferSize) {
  68              		.loc 1 119 3 is_stmt 1 view .LVU17
  69              		.loc 1 119 8 is_stmt 0 view .LVU18
  70 001a A268     		ldr	r2, [r4, #8]
  71              	.LVL3:
  72              		.loc 1 119 18 view .LVU19
  73 001c 6368     		ldr	r3, [r4, #4]
  74              		.loc 1 119 6 view .LVU20
  75 001e 9A42     		cmp	r2, r3
  76 0020 00D0     		beq	.L6
  77              	.LVL4:
  78              	.L1:
 120:Core/Src/SEGGER_RTT_printf.c ****     if (SEGGER_RTT_Write(p->RTTBufferIndex, p->pBuffer, p->Cnt) != p->Cnt) {
 121:Core/Src/SEGGER_RTT_printf.c ****       p->ReturnValue = -1;
 122:Core/Src/SEGGER_RTT_printf.c ****     } else {
 123:Core/Src/SEGGER_RTT_printf.c ****       p->Cnt = 0u;
 124:Core/Src/SEGGER_RTT_printf.c ****     }
 125:Core/Src/SEGGER_RTT_printf.c ****   }
 126:Core/Src/SEGGER_RTT_printf.c **** }
  79              		.loc 1 126 1 view .LVU21
  80 0022 10BD     		pop	{r4, pc}
  81              	.LVL5:
  82              	.L6:
 120:Core/Src/SEGGER_RTT_printf.c ****     if (SEGGER_RTT_Write(p->RTTBufferIndex, p->pBuffer, p->Cnt) != p->Cnt) {
  83              		.loc 1 120 5 is_stmt 1 view .LVU22
 120:Core/Src/SEGGER_RTT_printf.c ****     if (SEGGER_RTT_Write(p->RTTBufferIndex, p->pBuffer, p->Cnt) != p->Cnt) {
  84              		.loc 1 120 9 is_stmt 0 view .LVU23
  85 0024 2168     		ldr	r1, [r4]
  86              	.LVL6:
 120:Core/Src/SEGGER_RTT_printf.c ****     if (SEGGER_RTT_Write(p->RTTBufferIndex, p->pBuffer, p->Cnt) != p->Cnt) {
  87              		.loc 1 120 9 view .LVU24
  88 0026 2069     		ldr	r0, [r4, #16]
  89 0028 FFF7FEFF 		bl	SEGGER_RTT_Write
  90              	.LVL7:
 120:Core/Src/SEGGER_RTT_printf.c ****     if (SEGGER_RTT_Write(p->RTTBufferIndex, p->pBuffer, p->Cnt) != p->Cnt) {
  91              		.loc 1 120 69 discriminator 1 view .LVU25
  92 002c A368     		ldr	r3, [r4, #8]
 120:Core/Src/SEGGER_RTT_printf.c ****     if (SEGGER_RTT_Write(p->RTTBufferIndex, p->pBuffer, p->Cnt) != p->Cnt) {
  93              		.loc 1 120 8 discriminator 1 view .LVU26
  94 002e 9842     		cmp	r0, r3
  95 0030 03D0     		beq	.L4
 121:Core/Src/SEGGER_RTT_printf.c ****     } else {
  96              		.loc 1 121 7 is_stmt 1 view .LVU27
 121:Core/Src/SEGGER_RTT_printf.c ****     } else {
ARM GAS  /var/folders/lp/x54gwt890xv47sdkqj1k04q40000gn/T//ccDNNL7g.s 			page 5


  97              		.loc 1 121 22 is_stmt 0 view .LVU28
  98 0032 4FF0FF33 		mov	r3, #-1
  99 0036 E360     		str	r3, [r4, #12]
 100 0038 F3E7     		b	.L1
 101              	.L4:
 123:Core/Src/SEGGER_RTT_printf.c ****     }
 102              		.loc 1 123 7 is_stmt 1 view .LVU29
 123:Core/Src/SEGGER_RTT_printf.c ****     }
 103              		.loc 1 123 14 is_stmt 0 view .LVU30
 104 003a 0023     		movs	r3, #0
 105 003c A360     		str	r3, [r4, #8]
 106              		.loc 1 126 1 view .LVU31
 107 003e F0E7     		b	.L1
 108              		.cfi_endproc
 109              	.LFE0:
 111              		.section	.text._PrintUnsigned,"ax",%progbits
 112              		.align	1
 113              		.syntax unified
 114              		.thumb
 115              		.thumb_func
 117              	_PrintUnsigned:
 118              	.LVL8:
 119              	.LFB1:
 127:Core/Src/SEGGER_RTT_printf.c **** 
 128:Core/Src/SEGGER_RTT_printf.c **** /*********************************************************************
 129:Core/Src/SEGGER_RTT_printf.c **** *
 130:Core/Src/SEGGER_RTT_printf.c **** *       _PrintUnsigned
 131:Core/Src/SEGGER_RTT_printf.c **** */
 132:Core/Src/SEGGER_RTT_printf.c **** static void _PrintUnsigned(SEGGER_RTT_PRINTF_DESC * pBufferDesc, unsigned v, unsigned Base, unsigne
 120              		.loc 1 132 156 is_stmt 1 view -0
 121              		.cfi_startproc
 122              		@ args = 8, pretend = 0, frame = 0
 123              		@ frame_needed = 0, uses_anonymous_args = 0
 124              		.loc 1 132 156 is_stmt 0 view .LVU33
 125 0000 2DE9F84F 		push	{r3, r4, r5, r6, r7, r8, r9, r10, fp, lr}
 126              		.cfi_def_cfa_offset 40
 127              		.cfi_offset 3, -40
 128              		.cfi_offset 4, -36
 129              		.cfi_offset 5, -32
 130              		.cfi_offset 6, -28
 131              		.cfi_offset 7, -24
 132              		.cfi_offset 8, -20
 133              		.cfi_offset 9, -16
 134              		.cfi_offset 10, -12
 135              		.cfi_offset 11, -8
 136              		.cfi_offset 14, -4
 137 0004 8146     		mov	r9, r0
 138 0006 0F46     		mov	r7, r1
 139 0008 1546     		mov	r5, r2
 140 000a 1E46     		mov	r6, r3
 141 000c DDF828A0 		ldr	r10, [sp, #40]
 142 0010 0B9A     		ldr	r2, [sp, #44]
 143              	.LVL9:
 133:Core/Src/SEGGER_RTT_printf.c ****   static const char _aV2C[16] = {'0', '1', '2', '3', '4', '5', '6', '7', '8', '9', 'A', 'B', 'C', '
 144              		.loc 1 133 3 is_stmt 1 view .LVU34
 134:Core/Src/SEGGER_RTT_printf.c ****   unsigned Div;
 145              		.loc 1 134 3 view .LVU35
ARM GAS  /var/folders/lp/x54gwt890xv47sdkqj1k04q40000gn/T//ccDNNL7g.s 			page 6


 135:Core/Src/SEGGER_RTT_printf.c ****   unsigned Digit;
 146              		.loc 1 135 3 view .LVU36
 136:Core/Src/SEGGER_RTT_printf.c ****   unsigned Number;
 147              		.loc 1 136 3 view .LVU37
 137:Core/Src/SEGGER_RTT_printf.c ****   unsigned Width;
 148              		.loc 1 137 3 view .LVU38
 138:Core/Src/SEGGER_RTT_printf.c ****   char c;
 149              		.loc 1 138 3 view .LVU39
 139:Core/Src/SEGGER_RTT_printf.c **** 
 140:Core/Src/SEGGER_RTT_printf.c ****   Number = v;
 150              		.loc 1 140 3 view .LVU40
 141:Core/Src/SEGGER_RTT_printf.c ****   Digit = 1u;
 151              		.loc 1 141 3 view .LVU41
 142:Core/Src/SEGGER_RTT_printf.c ****   //
 143:Core/Src/SEGGER_RTT_printf.c ****   // Get actual field width
 144:Core/Src/SEGGER_RTT_printf.c ****   //
 145:Core/Src/SEGGER_RTT_printf.c ****   Width = 1u;
 152              		.loc 1 145 3 view .LVU42
 146:Core/Src/SEGGER_RTT_printf.c ****   while (Number >= Base) {
 153              		.loc 1 146 3 view .LVU43
 140:Core/Src/SEGGER_RTT_printf.c ****   Digit = 1u;
 154              		.loc 1 140 10 is_stmt 0 view .LVU44
 155 0012 0B46     		mov	r3, r1
 156              	.LVL10:
 145:Core/Src/SEGGER_RTT_printf.c ****   while (Number >= Base) {
 157              		.loc 1 145 9 view .LVU45
 158 0014 4FF00108 		mov	r8, #1
 159              		.loc 1 146 9 view .LVU46
 160 0018 03E0     		b	.L8
 161              	.LVL11:
 162              	.L9:
 147:Core/Src/SEGGER_RTT_printf.c ****     Number = (Number / Base);
 163              		.loc 1 147 5 is_stmt 1 view .LVU47
 164              		.loc 1 147 12 is_stmt 0 view .LVU48
 165 001a B3FBF5F3 		udiv	r3, r3, r5
 166              	.LVL12:
 148:Core/Src/SEGGER_RTT_printf.c ****     Width++;
 167              		.loc 1 148 5 is_stmt 1 view .LVU49
 168              		.loc 1 148 10 is_stmt 0 view .LVU50
 169 001e 08F10108 		add	r8, r8, #1
 170              	.LVL13:
 171              	.L8:
 146:Core/Src/SEGGER_RTT_printf.c ****     Number = (Number / Base);
 172              		.loc 1 146 17 is_stmt 1 view .LVU51
 173 0022 AB42     		cmp	r3, r5
 174 0024 F9D2     		bcs	.L9
 149:Core/Src/SEGGER_RTT_printf.c ****   }
 150:Core/Src/SEGGER_RTT_printf.c ****   if (NumDigits > Width) {
 175              		.loc 1 150 3 view .LVU52
 176              		.loc 1 150 6 is_stmt 0 view .LVU53
 177 0026 B045     		cmp	r8, r6
 178 0028 00D2     		bcs	.L10
 151:Core/Src/SEGGER_RTT_printf.c ****     Width = NumDigits;
 179              		.loc 1 151 11 view .LVU54
 180 002a B046     		mov	r8, r6
 181              	.LVL14:
 182              	.L10:
ARM GAS  /var/folders/lp/x54gwt890xv47sdkqj1k04q40000gn/T//ccDNNL7g.s 			page 7


 152:Core/Src/SEGGER_RTT_printf.c ****   }
 153:Core/Src/SEGGER_RTT_printf.c ****   //
 154:Core/Src/SEGGER_RTT_printf.c ****   // Print leading chars if necessary
 155:Core/Src/SEGGER_RTT_printf.c ****   //
 156:Core/Src/SEGGER_RTT_printf.c ****   if ((FormatFlags & FORMAT_FLAG_LEFT_JUSTIFY) == 0u) {
 183              		.loc 1 156 3 is_stmt 1 view .LVU55
 184              		.loc 1 156 6 is_stmt 0 view .LVU56
 185 002c 12F0010B 		ands	fp, r2, #1
 186 0030 18D1     		bne	.L11
 157:Core/Src/SEGGER_RTT_printf.c ****     if (FieldWidth != 0u) {
 187              		.loc 1 157 5 is_stmt 1 view .LVU57
 188              		.loc 1 157 8 is_stmt 0 view .LVU58
 189 0032 BAF1000F 		cmp	r10, #0
 190 0036 15D0     		beq	.L11
 158:Core/Src/SEGGER_RTT_printf.c ****       if (((FormatFlags & FORMAT_FLAG_PAD_ZERO) == FORMAT_FLAG_PAD_ZERO) && (NumDigits == 0u)) {
 191              		.loc 1 158 7 is_stmt 1 view .LVU59
 192              		.loc 1 158 10 is_stmt 0 view .LVU60
 193 0038 12F0020F 		tst	r2, #2
 194 003c 02D0     		beq	.L24
 195              		.loc 1 158 74 discriminator 1 view .LVU61
 196 003e BEB1     		cbz	r6, .L25
 159:Core/Src/SEGGER_RTT_printf.c ****         c = '0';
 160:Core/Src/SEGGER_RTT_printf.c ****       } else {
 161:Core/Src/SEGGER_RTT_printf.c ****         c = ' ';
 197              		.loc 1 161 11 view .LVU62
 198 0040 2024     		movs	r4, #32
 199 0042 00E0     		b	.L13
 200              	.L24:
 201 0044 2024     		movs	r4, #32
 202              	.LVL15:
 203              	.L13:
 162:Core/Src/SEGGER_RTT_printf.c ****       }
 163:Core/Src/SEGGER_RTT_printf.c ****       while ((FieldWidth != 0u) && (Width < FieldWidth)) {
 204              		.loc 1 163 33 is_stmt 1 view .LVU63
 205 0046 BAF1000F 		cmp	r10, #0
 206 004a 0BD0     		beq	.L11
 207              		.loc 1 163 33 is_stmt 0 discriminator 1 view .LVU64
 208 004c C245     		cmp	r10, r8
 209 004e 09D9     		bls	.L11
 164:Core/Src/SEGGER_RTT_printf.c ****         FieldWidth--;
 210              		.loc 1 164 9 is_stmt 1 view .LVU65
 211              		.loc 1 164 19 is_stmt 0 view .LVU66
 212 0050 0AF1FF3A 		add	r10, r10, #-1
 213              	.LVL16:
 165:Core/Src/SEGGER_RTT_printf.c ****         _StoreChar(pBufferDesc, c);
 214              		.loc 1 165 9 is_stmt 1 view .LVU67
 215 0054 2146     		mov	r1, r4
 216 0056 4846     		mov	r0, r9
 217 0058 FFF7FEFF 		bl	_StoreChar
 218              	.LVL17:
 166:Core/Src/SEGGER_RTT_printf.c ****         if (pBufferDesc->ReturnValue < 0) {
 219              		.loc 1 166 9 view .LVU68
 220              		.loc 1 166 24 is_stmt 0 view .LVU69
 221 005c D9F80C30 		ldr	r3, [r9, #12]
 222              		.loc 1 166 12 view .LVU70
 223 0060 002B     		cmp	r3, #0
 224 0062 F0DA     		bge	.L13
ARM GAS  /var/folders/lp/x54gwt890xv47sdkqj1k04q40000gn/T//ccDNNL7g.s 			page 8


 225              	.LVL18:
 226              	.L11:
 167:Core/Src/SEGGER_RTT_printf.c ****           break;
 168:Core/Src/SEGGER_RTT_printf.c ****         }
 169:Core/Src/SEGGER_RTT_printf.c ****       }
 170:Core/Src/SEGGER_RTT_printf.c ****     }
 171:Core/Src/SEGGER_RTT_printf.c ****   }
 172:Core/Src/SEGGER_RTT_printf.c ****   if (pBufferDesc->ReturnValue >= 0) {
 227              		.loc 1 172 3 is_stmt 1 view .LVU71
 228              		.loc 1 172 18 is_stmt 0 view .LVU72
 229 0064 D9F80C30 		ldr	r3, [r9, #12]
 230              		.loc 1 172 6 view .LVU73
 231 0068 002B     		cmp	r3, #0
 232 006a 25DB     		blt	.L7
 141:Core/Src/SEGGER_RTT_printf.c ****   //
 233              		.loc 1 141 9 view .LVU74
 234 006c 0124     		movs	r4, #1
 235 006e 04E0     		b	.L19
 236              	.LVL19:
 237              	.L25:
 159:Core/Src/SEGGER_RTT_printf.c ****       } else {
 238              		.loc 1 159 11 view .LVU75
 239 0070 3024     		movs	r4, #48
 240 0072 E8E7     		b	.L13
 241              	.LVL20:
 242              	.L28:
 173:Core/Src/SEGGER_RTT_printf.c ****     //
 174:Core/Src/SEGGER_RTT_printf.c ****     // Compute Digit.
 175:Core/Src/SEGGER_RTT_printf.c ****     // Loop until Digit has the value of the highest digit required.
 176:Core/Src/SEGGER_RTT_printf.c ****     // Example: If the output is 345 (Base 10), loop 2 times until Digit is 100.
 177:Core/Src/SEGGER_RTT_printf.c ****     //
 178:Core/Src/SEGGER_RTT_printf.c ****     while (1) {
 179:Core/Src/SEGGER_RTT_printf.c ****       if (NumDigits > 1u) {       // User specified a min number of digits to print? => Make sure w
 180:Core/Src/SEGGER_RTT_printf.c ****         NumDigits--;
 243              		.loc 1 180 9 is_stmt 1 view .LVU76
 244              		.loc 1 180 18 is_stmt 0 view .LVU77
 245 0074 013E     		subs	r6, r6, #1
 246              	.LVL21:
 247              	.L17:
 181:Core/Src/SEGGER_RTT_printf.c ****       } else {
 182:Core/Src/SEGGER_RTT_printf.c ****         Div = v / Digit;
 183:Core/Src/SEGGER_RTT_printf.c ****         if (Div < Base) {        // Is our divider big enough to extract the highest digit from val
 184:Core/Src/SEGGER_RTT_printf.c ****           break;
 185:Core/Src/SEGGER_RTT_printf.c ****         }
 186:Core/Src/SEGGER_RTT_printf.c ****       }
 187:Core/Src/SEGGER_RTT_printf.c ****       Digit *= Base;
 248              		.loc 1 187 7 is_stmt 1 view .LVU78
 249              		.loc 1 187 13 is_stmt 0 view .LVU79
 250 0076 05FB04F4 		mul	r4, r5, r4
 251              	.LVL22:
 178:Core/Src/SEGGER_RTT_printf.c ****       if (NumDigits > 1u) {       // User specified a min number of digits to print? => Make sure w
 252              		.loc 1 178 11 is_stmt 1 view .LVU80
 253              	.L19:
 178:Core/Src/SEGGER_RTT_printf.c ****       if (NumDigits > 1u) {       // User specified a min number of digits to print? => Make sure w
 254              		.loc 1 178 5 view .LVU81
 179:Core/Src/SEGGER_RTT_printf.c ****         NumDigits--;
 255              		.loc 1 179 7 view .LVU82
ARM GAS  /var/folders/lp/x54gwt890xv47sdkqj1k04q40000gn/T//ccDNNL7g.s 			page 9


 179:Core/Src/SEGGER_RTT_printf.c ****         NumDigits--;
 256              		.loc 1 179 10 is_stmt 0 view .LVU83
 257 007a 012E     		cmp	r6, #1
 258 007c FAD8     		bhi	.L28
 182:Core/Src/SEGGER_RTT_printf.c ****         if (Div < Base) {        // Is our divider big enough to extract the highest digit from val
 259              		.loc 1 182 9 is_stmt 1 view .LVU84
 182:Core/Src/SEGGER_RTT_printf.c ****         if (Div < Base) {        // Is our divider big enough to extract the highest digit from val
 260              		.loc 1 182 13 is_stmt 0 view .LVU85
 261 007e B7FBF4F3 		udiv	r3, r7, r4
 262              	.LVL23:
 183:Core/Src/SEGGER_RTT_printf.c ****           break;
 263              		.loc 1 183 9 is_stmt 1 view .LVU86
 183:Core/Src/SEGGER_RTT_printf.c ****           break;
 264              		.loc 1 183 12 is_stmt 0 view .LVU87
 265 0082 9D42     		cmp	r5, r3
 266 0084 F7D9     		bls	.L17
 267 0086 00E0     		b	.L18
 268              	.LVL24:
 269              	.L26:
 188:Core/Src/SEGGER_RTT_printf.c ****     }
 189:Core/Src/SEGGER_RTT_printf.c ****     //
 190:Core/Src/SEGGER_RTT_printf.c ****     // Output digits
 191:Core/Src/SEGGER_RTT_printf.c ****     //
 192:Core/Src/SEGGER_RTT_printf.c ****     do {
 193:Core/Src/SEGGER_RTT_printf.c ****       Div = v / Digit;
 194:Core/Src/SEGGER_RTT_printf.c ****       v -= Div * Digit;
 195:Core/Src/SEGGER_RTT_printf.c ****       _StoreChar(pBufferDesc, _aV2C[Div]);
 196:Core/Src/SEGGER_RTT_printf.c ****       if (pBufferDesc->ReturnValue < 0) {
 197:Core/Src/SEGGER_RTT_printf.c ****         break;
 198:Core/Src/SEGGER_RTT_printf.c ****       }
 199:Core/Src/SEGGER_RTT_printf.c ****       Digit /= Base;
 270              		.loc 1 199 13 view .LVU88
 271 0088 1C46     		mov	r4, r3
 272              	.LVL25:
 273              	.L18:
 192:Core/Src/SEGGER_RTT_printf.c ****       Div = v / Digit;
 274              		.loc 1 192 5 is_stmt 1 view .LVU89
 193:Core/Src/SEGGER_RTT_printf.c ****       v -= Div * Digit;
 275              		.loc 1 193 7 view .LVU90
 193:Core/Src/SEGGER_RTT_printf.c ****       v -= Div * Digit;
 276              		.loc 1 193 11 is_stmt 0 view .LVU91
 277 008a B7FBF4F3 		udiv	r3, r7, r4
 278              	.LVL26:
 194:Core/Src/SEGGER_RTT_printf.c ****       _StoreChar(pBufferDesc, _aV2C[Div]);
 279              		.loc 1 194 7 is_stmt 1 view .LVU92
 280 008e 04FB1377 		mls	r7, r4, r3, r7
 281              	.LVL27:
 195:Core/Src/SEGGER_RTT_printf.c ****       if (pBufferDesc->ReturnValue < 0) {
 282              		.loc 1 195 7 view .LVU93
 283 0092 124A     		ldr	r2, .L29
 284 0094 D15C     		ldrb	r1, [r2, r3]	@ zero_extendqisi2
 285 0096 4846     		mov	r0, r9
 286 0098 FFF7FEFF 		bl	_StoreChar
 287              	.LVL28:
 196:Core/Src/SEGGER_RTT_printf.c ****         break;
 288              		.loc 1 196 7 view .LVU94
 196:Core/Src/SEGGER_RTT_printf.c ****         break;
ARM GAS  /var/folders/lp/x54gwt890xv47sdkqj1k04q40000gn/T//ccDNNL7g.s 			page 10


 289              		.loc 1 196 22 is_stmt 0 view .LVU95
 290 009c D9F80C30 		ldr	r3, [r9, #12]
 196:Core/Src/SEGGER_RTT_printf.c ****         break;
 291              		.loc 1 196 10 view .LVU96
 292 00a0 002B     		cmp	r3, #0
 293 00a2 03DB     		blt	.L20
 294              		.loc 1 199 7 is_stmt 1 view .LVU97
 295              		.loc 1 199 13 is_stmt 0 view .LVU98
 296 00a4 B4FBF5F3 		udiv	r3, r4, r5
 297              	.LVL29:
 200:Core/Src/SEGGER_RTT_printf.c ****     } while (Digit);
 298              		.loc 1 200 14 is_stmt 1 view .LVU99
 299 00a8 AC42     		cmp	r4, r5
 300 00aa EDD2     		bcs	.L26
 301              	.LVL30:
 302              	.L20:
 201:Core/Src/SEGGER_RTT_printf.c ****     //
 202:Core/Src/SEGGER_RTT_printf.c ****     // Print trailing spaces if necessary
 203:Core/Src/SEGGER_RTT_printf.c ****     //
 204:Core/Src/SEGGER_RTT_printf.c ****     if ((FormatFlags & FORMAT_FLAG_LEFT_JUSTIFY) == FORMAT_FLAG_LEFT_JUSTIFY) {
 303              		.loc 1 204 5 view .LVU100
 304              		.loc 1 204 8 is_stmt 0 view .LVU101
 305 00ac BBF1000F 		cmp	fp, #0
 306 00b0 02D0     		beq	.L7
 205:Core/Src/SEGGER_RTT_printf.c ****       if (FieldWidth != 0u) {
 307              		.loc 1 205 7 is_stmt 1 view .LVU102
 308              		.loc 1 205 10 is_stmt 0 view .LVU103
 309 00b2 BAF1000F 		cmp	r10, #0
 310 00b6 01D1     		bne	.L21
 311              	.LVL31:
 312              	.L7:
 206:Core/Src/SEGGER_RTT_printf.c ****         while ((FieldWidth != 0u) && (Width < FieldWidth)) {
 207:Core/Src/SEGGER_RTT_printf.c ****           FieldWidth--;
 208:Core/Src/SEGGER_RTT_printf.c ****           _StoreChar(pBufferDesc, ' ');
 209:Core/Src/SEGGER_RTT_printf.c ****           if (pBufferDesc->ReturnValue < 0) {
 210:Core/Src/SEGGER_RTT_printf.c ****             break;
 211:Core/Src/SEGGER_RTT_printf.c ****           }
 212:Core/Src/SEGGER_RTT_printf.c ****         }
 213:Core/Src/SEGGER_RTT_printf.c ****       }
 214:Core/Src/SEGGER_RTT_printf.c ****     }
 215:Core/Src/SEGGER_RTT_printf.c ****   }
 216:Core/Src/SEGGER_RTT_printf.c **** }
 313              		.loc 1 216 1 view .LVU104
 314 00b8 BDE8F88F 		pop	{r3, r4, r5, r6, r7, r8, r9, r10, fp, pc}
 315              	.LVL32:
 316              	.L21:
 206:Core/Src/SEGGER_RTT_printf.c ****         while ((FieldWidth != 0u) && (Width < FieldWidth)) {
 317              		.loc 1 206 35 is_stmt 1 view .LVU105
 318 00bc BAF1000F 		cmp	r10, #0
 319 00c0 FAD0     		beq	.L7
 206:Core/Src/SEGGER_RTT_printf.c ****         while ((FieldWidth != 0u) && (Width < FieldWidth)) {
 320              		.loc 1 206 35 is_stmt 0 discriminator 1 view .LVU106
 321 00c2 C245     		cmp	r10, r8
 322 00c4 F8D9     		bls	.L7
 207:Core/Src/SEGGER_RTT_printf.c ****           _StoreChar(pBufferDesc, ' ');
 323              		.loc 1 207 11 is_stmt 1 view .LVU107
 207:Core/Src/SEGGER_RTT_printf.c ****           _StoreChar(pBufferDesc, ' ');
ARM GAS  /var/folders/lp/x54gwt890xv47sdkqj1k04q40000gn/T//ccDNNL7g.s 			page 11


 324              		.loc 1 207 21 is_stmt 0 view .LVU108
 325 00c6 0AF1FF3A 		add	r10, r10, #-1
 326              	.LVL33:
 208:Core/Src/SEGGER_RTT_printf.c ****           if (pBufferDesc->ReturnValue < 0) {
 327              		.loc 1 208 11 is_stmt 1 view .LVU109
 328 00ca 2021     		movs	r1, #32
 329 00cc 4846     		mov	r0, r9
 330 00ce FFF7FEFF 		bl	_StoreChar
 331              	.LVL34:
 209:Core/Src/SEGGER_RTT_printf.c ****             break;
 332              		.loc 1 209 11 view .LVU110
 209:Core/Src/SEGGER_RTT_printf.c ****             break;
 333              		.loc 1 209 26 is_stmt 0 view .LVU111
 334 00d2 D9F80C30 		ldr	r3, [r9, #12]
 209:Core/Src/SEGGER_RTT_printf.c ****             break;
 335              		.loc 1 209 14 view .LVU112
 336 00d6 002B     		cmp	r3, #0
 337 00d8 F0DA     		bge	.L21
 338 00da EDE7     		b	.L7
 339              	.L30:
 340              		.align	2
 341              	.L29:
 342 00dc 00000000 		.word	_aV2C.0
 343              		.cfi_endproc
 344              	.LFE1:
 346              		.section	.text._PrintInt,"ax",%progbits
 347              		.align	1
 348              		.syntax unified
 349              		.thumb
 350              		.thumb_func
 352              	_PrintInt:
 353              	.LVL35:
 354              	.LFB2:
 217:Core/Src/SEGGER_RTT_printf.c **** 
 218:Core/Src/SEGGER_RTT_printf.c **** /*********************************************************************
 219:Core/Src/SEGGER_RTT_printf.c **** *
 220:Core/Src/SEGGER_RTT_printf.c **** *       _PrintInt
 221:Core/Src/SEGGER_RTT_printf.c **** */
 222:Core/Src/SEGGER_RTT_printf.c **** static void _PrintInt(SEGGER_RTT_PRINTF_DESC * pBufferDesc, int v, unsigned Base, unsigned NumDigit
 355              		.loc 1 222 146 is_stmt 1 view -0
 356              		.cfi_startproc
 357              		@ args = 8, pretend = 0, frame = 0
 358              		@ frame_needed = 0, uses_anonymous_args = 0
 359              		.loc 1 222 146 is_stmt 0 view .LVU114
 360 0000 2DE9F047 		push	{r4, r5, r6, r7, r8, r9, r10, lr}
 361              		.cfi_def_cfa_offset 32
 362              		.cfi_offset 4, -32
 363              		.cfi_offset 5, -28
 364              		.cfi_offset 6, -24
 365              		.cfi_offset 7, -20
 366              		.cfi_offset 8, -16
 367              		.cfi_offset 9, -12
 368              		.cfi_offset 10, -8
 369              		.cfi_offset 14, -4
 370 0004 82B0     		sub	sp, sp, #8
 371              		.cfi_def_cfa_offset 40
 372 0006 0746     		mov	r7, r0
ARM GAS  /var/folders/lp/x54gwt890xv47sdkqj1k04q40000gn/T//ccDNNL7g.s 			page 12


 373 0008 8846     		mov	r8, r1
 374 000a 1546     		mov	r5, r2
 375 000c 9946     		mov	r9, r3
 376 000e 0A9E     		ldr	r6, [sp, #40]
 377 0010 DDF82CA0 		ldr	r10, [sp, #44]
 223:Core/Src/SEGGER_RTT_printf.c ****   unsigned Width;
 378              		.loc 1 223 3 is_stmt 1 view .LVU115
 224:Core/Src/SEGGER_RTT_printf.c ****   int Number;
 379              		.loc 1 224 3 view .LVU116
 225:Core/Src/SEGGER_RTT_printf.c **** 
 226:Core/Src/SEGGER_RTT_printf.c ****   Number = (v < 0) ? -v : v;
 380              		.loc 1 226 3 view .LVU117
 381              		.loc 1 226 10 is_stmt 0 view .LVU118
 382 0014 81EAE17C 		eor	ip, r1, r1, asr #31
 383 0018 ACEBE17C 		sub	ip, ip, r1, asr #31
 384              	.LVL36:
 227:Core/Src/SEGGER_RTT_printf.c **** 
 228:Core/Src/SEGGER_RTT_printf.c ****   //
 229:Core/Src/SEGGER_RTT_printf.c ****   // Get actual field width
 230:Core/Src/SEGGER_RTT_printf.c ****   //
 231:Core/Src/SEGGER_RTT_printf.c ****   Width = 1u;
 385              		.loc 1 231 3 is_stmt 1 view .LVU119
 232:Core/Src/SEGGER_RTT_printf.c ****   while (Number >= (int)Base) {
 386              		.loc 1 232 3 view .LVU120
 231:Core/Src/SEGGER_RTT_printf.c ****   while (Number >= (int)Base) {
 387              		.loc 1 231 9 is_stmt 0 view .LVU121
 388 001c 0124     		movs	r4, #1
 389              		.loc 1 232 9 view .LVU122
 390 001e 02E0     		b	.L32
 391              	.LVL37:
 392              	.L33:
 233:Core/Src/SEGGER_RTT_printf.c ****     Number = (Number / (int)Base);
 393              		.loc 1 233 5 is_stmt 1 view .LVU123
 394              		.loc 1 233 12 is_stmt 0 view .LVU124
 395 0020 9CFBF5FC 		sdiv	ip, ip, r5
 396              	.LVL38:
 234:Core/Src/SEGGER_RTT_printf.c ****     Width++;
 397              		.loc 1 234 5 is_stmt 1 view .LVU125
 398              		.loc 1 234 10 is_stmt 0 view .LVU126
 399 0024 0134     		adds	r4, r4, #1
 400              	.LVL39:
 401              	.L32:
 232:Core/Src/SEGGER_RTT_printf.c ****     Number = (Number / (int)Base);
 402              		.loc 1 232 17 is_stmt 1 view .LVU127
 403 0026 6545     		cmp	r5, ip
 404 0028 FADD     		ble	.L33
 235:Core/Src/SEGGER_RTT_printf.c ****   }
 236:Core/Src/SEGGER_RTT_printf.c ****   if (NumDigits > Width) {
 405              		.loc 1 236 3 view .LVU128
 406              		.loc 1 236 6 is_stmt 0 view .LVU129
 407 002a 4C45     		cmp	r4, r9
 408 002c 00D2     		bcs	.L34
 237:Core/Src/SEGGER_RTT_printf.c ****     Width = NumDigits;
 409              		.loc 1 237 11 view .LVU130
 410 002e 4C46     		mov	r4, r9
 411              	.LVL40:
 412              	.L34:
ARM GAS  /var/folders/lp/x54gwt890xv47sdkqj1k04q40000gn/T//ccDNNL7g.s 			page 13


 238:Core/Src/SEGGER_RTT_printf.c ****   }
 239:Core/Src/SEGGER_RTT_printf.c ****   if ((FieldWidth > 0u) && ((v < 0) || ((FormatFlags & FORMAT_FLAG_PRINT_SIGN) == FORMAT_FLAG_PRINT
 413              		.loc 1 239 3 is_stmt 1 view .LVU131
 414              		.loc 1 239 6 is_stmt 0 view .LVU132
 415 0030 36B1     		cbz	r6, .L35
 416              		.loc 1 239 25 discriminator 1 view .LVU133
 417 0032 B8F1000F 		cmp	r8, #0
 418 0036 02DB     		blt	.L36
 419              		.loc 1 239 37 discriminator 2 view .LVU134
 420 0038 1AF0040F 		tst	r10, #4
 421 003c 00D0     		beq	.L35
 422              	.L36:
 240:Core/Src/SEGGER_RTT_printf.c ****     FieldWidth--;
 423              		.loc 1 240 5 is_stmt 1 view .LVU135
 424              		.loc 1 240 15 is_stmt 0 view .LVU136
 425 003e 013E     		subs	r6, r6, #1
 426              	.LVL41:
 427              	.L35:
 241:Core/Src/SEGGER_RTT_printf.c ****   }
 242:Core/Src/SEGGER_RTT_printf.c **** 
 243:Core/Src/SEGGER_RTT_printf.c ****   //
 244:Core/Src/SEGGER_RTT_printf.c ****   // Print leading spaces if necessary
 245:Core/Src/SEGGER_RTT_printf.c ****   //
 246:Core/Src/SEGGER_RTT_printf.c ****   if ((((FormatFlags & FORMAT_FLAG_PAD_ZERO) == 0u) || (NumDigits != 0u)) && ((FormatFlags & FORMAT
 428              		.loc 1 246 3 is_stmt 1 view .LVU137
 429              		.loc 1 246 6 is_stmt 0 view .LVU138
 430 0040 1AF0020F 		tst	r10, #2
 431 0044 02D0     		beq	.L37
 432              		.loc 1 246 53 discriminator 2 view .LVU139
 433 0046 B9F1000F 		cmp	r9, #0
 434 004a 03D0     		beq	.L38
 435              	.L37:
 436              		.loc 1 246 75 discriminator 3 view .LVU140
 437 004c 1AF0010F 		tst	r10, #1
 438 0050 00D1     		bne	.L38
 247:Core/Src/SEGGER_RTT_printf.c ****     if (FieldWidth != 0u) {
 439              		.loc 1 247 5 is_stmt 1 view .LVU141
 440              		.loc 1 247 8 is_stmt 0 view .LVU142
 441 0052 AEB9     		cbnz	r6, .L39
 442              	.LVL42:
 443              	.L38:
 248:Core/Src/SEGGER_RTT_printf.c ****       while ((FieldWidth != 0u) && (Width < FieldWidth)) {
 249:Core/Src/SEGGER_RTT_printf.c ****         FieldWidth--;
 250:Core/Src/SEGGER_RTT_printf.c ****         _StoreChar(pBufferDesc, ' ');
 251:Core/Src/SEGGER_RTT_printf.c ****         if (pBufferDesc->ReturnValue < 0) {
 252:Core/Src/SEGGER_RTT_printf.c ****           break;
 253:Core/Src/SEGGER_RTT_printf.c ****         }
 254:Core/Src/SEGGER_RTT_printf.c ****       }
 255:Core/Src/SEGGER_RTT_printf.c ****     }
 256:Core/Src/SEGGER_RTT_printf.c ****   }
 257:Core/Src/SEGGER_RTT_printf.c ****   //
 258:Core/Src/SEGGER_RTT_printf.c ****   // Print sign if necessary
 259:Core/Src/SEGGER_RTT_printf.c ****   //
 260:Core/Src/SEGGER_RTT_printf.c ****   if (pBufferDesc->ReturnValue >= 0) {
 444              		.loc 1 260 3 is_stmt 1 view .LVU143
 445              		.loc 1 260 18 is_stmt 0 view .LVU144
 446 0054 FB68     		ldr	r3, [r7, #12]
ARM GAS  /var/folders/lp/x54gwt890xv47sdkqj1k04q40000gn/T//ccDNNL7g.s 			page 14


 447              		.loc 1 260 6 view .LVU145
 448 0056 002B     		cmp	r3, #0
 449 0058 0FDB     		blt	.L31
 261:Core/Src/SEGGER_RTT_printf.c ****     if (v < 0) {
 450              		.loc 1 261 5 is_stmt 1 view .LVU146
 451              		.loc 1 261 8 is_stmt 0 view .LVU147
 452 005a B8F1000F 		cmp	r8, #0
 453 005e 1CDB     		blt	.L49
 262:Core/Src/SEGGER_RTT_printf.c ****       v = -v;
 263:Core/Src/SEGGER_RTT_printf.c ****       _StoreChar(pBufferDesc, '-');
 264:Core/Src/SEGGER_RTT_printf.c ****     } else if ((FormatFlags & FORMAT_FLAG_PRINT_SIGN) == FORMAT_FLAG_PRINT_SIGN) {
 454              		.loc 1 264 12 is_stmt 1 view .LVU148
 455              		.loc 1 264 15 is_stmt 0 view .LVU149
 456 0060 1AF0040F 		tst	r10, #4
 457 0064 20D1     		bne	.L50
 458              	.L43:
 265:Core/Src/SEGGER_RTT_printf.c ****       _StoreChar(pBufferDesc, '+');
 266:Core/Src/SEGGER_RTT_printf.c ****     } else {
 267:Core/Src/SEGGER_RTT_printf.c **** 
 268:Core/Src/SEGGER_RTT_printf.c ****     }
 459              		.loc 1 268 5 is_stmt 1 view .LVU150
 269:Core/Src/SEGGER_RTT_printf.c ****     if (pBufferDesc->ReturnValue >= 0) {
 460              		.loc 1 269 5 view .LVU151
 461              		.loc 1 269 20 is_stmt 0 view .LVU152
 462 0066 FB68     		ldr	r3, [r7, #12]
 463              		.loc 1 269 8 view .LVU153
 464 0068 002B     		cmp	r3, #0
 465 006a 06DB     		blt	.L31
 270:Core/Src/SEGGER_RTT_printf.c ****       //
 271:Core/Src/SEGGER_RTT_printf.c ****       // Print leading zeros if necessary
 272:Core/Src/SEGGER_RTT_printf.c ****       //
 273:Core/Src/SEGGER_RTT_printf.c ****       if (((FormatFlags & FORMAT_FLAG_PAD_ZERO) == FORMAT_FLAG_PAD_ZERO) && ((FormatFlags & FORMAT_
 466              		.loc 1 273 7 is_stmt 1 view .LVU154
 467              		.loc 1 273 74 is_stmt 0 view .LVU155
 468 006c 0AF00303 		and	r3, r10, #3
 469              		.loc 1 273 10 view .LVU156
 470 0070 022B     		cmp	r3, #2
 471 0072 1ED0     		beq	.L51
 472              	.L44:
 274:Core/Src/SEGGER_RTT_printf.c ****         if (FieldWidth != 0u) {
 275:Core/Src/SEGGER_RTT_printf.c ****           while ((FieldWidth != 0u) && (Width < FieldWidth)) {
 276:Core/Src/SEGGER_RTT_printf.c ****             FieldWidth--;
 277:Core/Src/SEGGER_RTT_printf.c ****             _StoreChar(pBufferDesc, '0');
 278:Core/Src/SEGGER_RTT_printf.c ****             if (pBufferDesc->ReturnValue < 0) {
 279:Core/Src/SEGGER_RTT_printf.c ****               break;
 280:Core/Src/SEGGER_RTT_printf.c ****             }
 281:Core/Src/SEGGER_RTT_printf.c ****           }
 282:Core/Src/SEGGER_RTT_printf.c ****         }
 283:Core/Src/SEGGER_RTT_printf.c ****       }
 284:Core/Src/SEGGER_RTT_printf.c ****       if (pBufferDesc->ReturnValue >= 0) {
 473              		.loc 1 284 7 is_stmt 1 view .LVU157
 474              		.loc 1 284 22 is_stmt 0 view .LVU158
 475 0074 FB68     		ldr	r3, [r7, #12]
 476              		.loc 1 284 10 view .LVU159
 477 0076 002B     		cmp	r3, #0
 478 0078 2DDA     		bge	.L52
 479              	.L31:
ARM GAS  /var/folders/lp/x54gwt890xv47sdkqj1k04q40000gn/T//ccDNNL7g.s 			page 15


 285:Core/Src/SEGGER_RTT_printf.c ****         //
 286:Core/Src/SEGGER_RTT_printf.c ****         // Print number without sign
 287:Core/Src/SEGGER_RTT_printf.c ****         //
 288:Core/Src/SEGGER_RTT_printf.c ****         _PrintUnsigned(pBufferDesc, (unsigned)v, Base, NumDigits, FieldWidth, FormatFlags);
 289:Core/Src/SEGGER_RTT_printf.c ****       }
 290:Core/Src/SEGGER_RTT_printf.c ****     }
 291:Core/Src/SEGGER_RTT_printf.c ****   }
 292:Core/Src/SEGGER_RTT_printf.c **** }
 480              		.loc 1 292 1 view .LVU160
 481 007a 02B0     		add	sp, sp, #8
 482              		.cfi_remember_state
 483              		.cfi_def_cfa_offset 32
 484              		@ sp needed
 485 007c BDE8F087 		pop	{r4, r5, r6, r7, r8, r9, r10, pc}
 486              	.LVL43:
 487              	.L39:
 488              		.cfi_restore_state
 248:Core/Src/SEGGER_RTT_printf.c ****         FieldWidth--;
 489              		.loc 1 248 33 is_stmt 1 view .LVU161
 490 0080 002E     		cmp	r6, #0
 491 0082 E7D0     		beq	.L38
 248:Core/Src/SEGGER_RTT_printf.c ****         FieldWidth--;
 492              		.loc 1 248 33 is_stmt 0 discriminator 1 view .LVU162
 493 0084 A642     		cmp	r6, r4
 494 0086 E5D9     		bls	.L38
 249:Core/Src/SEGGER_RTT_printf.c ****         _StoreChar(pBufferDesc, ' ');
 495              		.loc 1 249 9 is_stmt 1 view .LVU163
 249:Core/Src/SEGGER_RTT_printf.c ****         _StoreChar(pBufferDesc, ' ');
 496              		.loc 1 249 19 is_stmt 0 view .LVU164
 497 0088 013E     		subs	r6, r6, #1
 498              	.LVL44:
 250:Core/Src/SEGGER_RTT_printf.c ****         if (pBufferDesc->ReturnValue < 0) {
 499              		.loc 1 250 9 is_stmt 1 view .LVU165
 500 008a 2021     		movs	r1, #32
 501 008c 3846     		mov	r0, r7
 502 008e FFF7FEFF 		bl	_StoreChar
 503              	.LVL45:
 251:Core/Src/SEGGER_RTT_printf.c ****           break;
 504              		.loc 1 251 9 view .LVU166
 251:Core/Src/SEGGER_RTT_printf.c ****           break;
 505              		.loc 1 251 24 is_stmt 0 view .LVU167
 506 0092 FB68     		ldr	r3, [r7, #12]
 251:Core/Src/SEGGER_RTT_printf.c ****           break;
 507              		.loc 1 251 12 view .LVU168
 508 0094 002B     		cmp	r3, #0
 509 0096 F3DA     		bge	.L39
 510 0098 DCE7     		b	.L38
 511              	.L49:
 262:Core/Src/SEGGER_RTT_printf.c ****       _StoreChar(pBufferDesc, '-');
 512              		.loc 1 262 7 is_stmt 1 view .LVU169
 262:Core/Src/SEGGER_RTT_printf.c ****       _StoreChar(pBufferDesc, '-');
 513              		.loc 1 262 9 is_stmt 0 view .LVU170
 514 009a C8F10008 		rsb	r8, r8, #0
 515              	.LVL46:
 263:Core/Src/SEGGER_RTT_printf.c ****     } else if ((FormatFlags & FORMAT_FLAG_PRINT_SIGN) == FORMAT_FLAG_PRINT_SIGN) {
 516              		.loc 1 263 7 is_stmt 1 view .LVU171
 517 009e 2D21     		movs	r1, #45
ARM GAS  /var/folders/lp/x54gwt890xv47sdkqj1k04q40000gn/T//ccDNNL7g.s 			page 16


 518 00a0 3846     		mov	r0, r7
 519 00a2 FFF7FEFF 		bl	_StoreChar
 520              	.LVL47:
 521 00a6 DEE7     		b	.L43
 522              	.L50:
 265:Core/Src/SEGGER_RTT_printf.c ****     } else {
 523              		.loc 1 265 7 view .LVU172
 524 00a8 2B21     		movs	r1, #43
 525 00aa 3846     		mov	r0, r7
 526 00ac FFF7FEFF 		bl	_StoreChar
 527              	.LVL48:
 528 00b0 D9E7     		b	.L43
 529              	.L51:
 273:Core/Src/SEGGER_RTT_printf.c ****         if (FieldWidth != 0u) {
 530              		.loc 1 273 126 is_stmt 0 discriminator 1 view .LVU173
 531 00b2 B9F1000F 		cmp	r9, #0
 532 00b6 DDD1     		bne	.L44
 274:Core/Src/SEGGER_RTT_printf.c ****           while ((FieldWidth != 0u) && (Width < FieldWidth)) {
 533              		.loc 1 274 9 is_stmt 1 view .LVU174
 274:Core/Src/SEGGER_RTT_printf.c ****           while ((FieldWidth != 0u) && (Width < FieldWidth)) {
 534              		.loc 1 274 12 is_stmt 0 view .LVU175
 535 00b8 002E     		cmp	r6, #0
 536 00ba DBD0     		beq	.L44
 537              	.L45:
 275:Core/Src/SEGGER_RTT_printf.c ****             FieldWidth--;
 538              		.loc 1 275 37 is_stmt 1 view .LVU176
 539 00bc 002E     		cmp	r6, #0
 540 00be D9D0     		beq	.L44
 275:Core/Src/SEGGER_RTT_printf.c ****             FieldWidth--;
 541              		.loc 1 275 37 is_stmt 0 discriminator 1 view .LVU177
 542 00c0 A642     		cmp	r6, r4
 543 00c2 D7D9     		bls	.L44
 276:Core/Src/SEGGER_RTT_printf.c ****             _StoreChar(pBufferDesc, '0');
 544              		.loc 1 276 13 is_stmt 1 view .LVU178
 276:Core/Src/SEGGER_RTT_printf.c ****             _StoreChar(pBufferDesc, '0');
 545              		.loc 1 276 23 is_stmt 0 view .LVU179
 546 00c4 013E     		subs	r6, r6, #1
 547              	.LVL49:
 277:Core/Src/SEGGER_RTT_printf.c ****             if (pBufferDesc->ReturnValue < 0) {
 548              		.loc 1 277 13 is_stmt 1 view .LVU180
 549 00c6 3021     		movs	r1, #48
 550 00c8 3846     		mov	r0, r7
 551 00ca FFF7FEFF 		bl	_StoreChar
 552              	.LVL50:
 278:Core/Src/SEGGER_RTT_printf.c ****               break;
 553              		.loc 1 278 13 view .LVU181
 278:Core/Src/SEGGER_RTT_printf.c ****               break;
 554              		.loc 1 278 28 is_stmt 0 view .LVU182
 555 00ce FB68     		ldr	r3, [r7, #12]
 278:Core/Src/SEGGER_RTT_printf.c ****               break;
 556              		.loc 1 278 16 view .LVU183
 557 00d0 002B     		cmp	r3, #0
 558 00d2 F3DA     		bge	.L45
 559 00d4 CEE7     		b	.L44
 560              	.L52:
 288:Core/Src/SEGGER_RTT_printf.c ****       }
 561              		.loc 1 288 9 is_stmt 1 view .LVU184
ARM GAS  /var/folders/lp/x54gwt890xv47sdkqj1k04q40000gn/T//ccDNNL7g.s 			page 17


 562 00d6 CDF804A0 		str	r10, [sp, #4]
 563 00da 0096     		str	r6, [sp]
 564 00dc 4B46     		mov	r3, r9
 565 00de 2A46     		mov	r2, r5
 566 00e0 4146     		mov	r1, r8
 567 00e2 3846     		mov	r0, r7
 568 00e4 FFF7FEFF 		bl	_PrintUnsigned
 569              	.LVL51:
 570              		.loc 1 292 1 is_stmt 0 view .LVU185
 571 00e8 C7E7     		b	.L31
 572              		.cfi_endproc
 573              	.LFE2:
 575              		.section	.text.SEGGER_RTT_vprintf,"ax",%progbits
 576              		.align	1
 577              		.global	SEGGER_RTT_vprintf
 578              		.syntax unified
 579              		.thumb
 580              		.thumb_func
 582              	SEGGER_RTT_vprintf:
 583              	.LVL52:
 584              	.LFB3:
 293:Core/Src/SEGGER_RTT_printf.c **** 
 294:Core/Src/SEGGER_RTT_printf.c **** /*********************************************************************
 295:Core/Src/SEGGER_RTT_printf.c **** *
 296:Core/Src/SEGGER_RTT_printf.c **** *       Public code
 297:Core/Src/SEGGER_RTT_printf.c **** *
 298:Core/Src/SEGGER_RTT_printf.c **** **********************************************************************
 299:Core/Src/SEGGER_RTT_printf.c **** */
 300:Core/Src/SEGGER_RTT_printf.c **** /*********************************************************************
 301:Core/Src/SEGGER_RTT_printf.c **** *
 302:Core/Src/SEGGER_RTT_printf.c **** *       SEGGER_RTT_vprintf
 303:Core/Src/SEGGER_RTT_printf.c **** *
 304:Core/Src/SEGGER_RTT_printf.c **** *  Function description
 305:Core/Src/SEGGER_RTT_printf.c **** *    Stores a formatted string in SEGGER RTT control block.
 306:Core/Src/SEGGER_RTT_printf.c **** *    This data is read by the host.
 307:Core/Src/SEGGER_RTT_printf.c **** *
 308:Core/Src/SEGGER_RTT_printf.c **** *  Parameters
 309:Core/Src/SEGGER_RTT_printf.c **** *    BufferIndex  Index of "Up"-buffer to be used. (e.g. 0 for "Terminal")
 310:Core/Src/SEGGER_RTT_printf.c **** *    sFormat      Pointer to format string
 311:Core/Src/SEGGER_RTT_printf.c **** *    pParamList   Pointer to the list of arguments for the format string
 312:Core/Src/SEGGER_RTT_printf.c **** *
 313:Core/Src/SEGGER_RTT_printf.c **** *  Return values
 314:Core/Src/SEGGER_RTT_printf.c **** *    >= 0:  Number of bytes which have been stored in the "Up"-buffer.
 315:Core/Src/SEGGER_RTT_printf.c **** *     < 0:  Error
 316:Core/Src/SEGGER_RTT_printf.c **** */
 317:Core/Src/SEGGER_RTT_printf.c **** int SEGGER_RTT_vprintf(unsigned BufferIndex, const char * sFormat, va_list * pParamList) {
 585              		.loc 1 317 90 is_stmt 1 view -0
 586              		.cfi_startproc
 587              		@ args = 0, pretend = 0, frame = 88
 588              		@ frame_needed = 0, uses_anonymous_args = 0
 589              		.loc 1 317 90 is_stmt 0 view .LVU187
 590 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 591              		.cfi_def_cfa_offset 20
 592              		.cfi_offset 4, -20
 593              		.cfi_offset 5, -16
 594              		.cfi_offset 6, -12
 595              		.cfi_offset 7, -8
ARM GAS  /var/folders/lp/x54gwt890xv47sdkqj1k04q40000gn/T//ccDNNL7g.s 			page 18


 596              		.cfi_offset 14, -4
 597 0002 99B0     		sub	sp, sp, #100
 598              		.cfi_def_cfa_offset 120
 599 0004 0646     		mov	r6, r0
 600 0006 0C46     		mov	r4, r1
 601 0008 1546     		mov	r5, r2
 318:Core/Src/SEGGER_RTT_printf.c ****   char c;
 602              		.loc 1 318 3 is_stmt 1 view .LVU188
 319:Core/Src/SEGGER_RTT_printf.c ****   SEGGER_RTT_PRINTF_DESC BufferDesc;
 603              		.loc 1 319 3 view .LVU189
 320:Core/Src/SEGGER_RTT_printf.c ****   int v;
 604              		.loc 1 320 3 view .LVU190
 321:Core/Src/SEGGER_RTT_printf.c ****   unsigned NumDigits;
 605              		.loc 1 321 3 view .LVU191
 322:Core/Src/SEGGER_RTT_printf.c ****   unsigned FormatFlags;
 606              		.loc 1 322 3 view .LVU192
 323:Core/Src/SEGGER_RTT_printf.c ****   unsigned FieldWidth;
 607              		.loc 1 323 3 view .LVU193
 324:Core/Src/SEGGER_RTT_printf.c ****   char acBuffer[SEGGER_RTT_PRINTF_BUFFER_SIZE];
 608              		.loc 1 324 3 view .LVU194
 325:Core/Src/SEGGER_RTT_printf.c **** 
 326:Core/Src/SEGGER_RTT_printf.c ****   BufferDesc.pBuffer        = acBuffer;
 609              		.loc 1 326 3 view .LVU195
 610              		.loc 1 326 29 is_stmt 0 view .LVU196
 611 000a 03AB     		add	r3, sp, #12
 612 000c 1393     		str	r3, [sp, #76]
 327:Core/Src/SEGGER_RTT_printf.c ****   BufferDesc.BufferSize     = SEGGER_RTT_PRINTF_BUFFER_SIZE;
 613              		.loc 1 327 3 is_stmt 1 view .LVU197
 614              		.loc 1 327 29 is_stmt 0 view .LVU198
 615 000e 4023     		movs	r3, #64
 616 0010 1493     		str	r3, [sp, #80]
 328:Core/Src/SEGGER_RTT_printf.c ****   BufferDesc.Cnt            = 0u;
 617              		.loc 1 328 3 is_stmt 1 view .LVU199
 618              		.loc 1 328 29 is_stmt 0 view .LVU200
 619 0012 0023     		movs	r3, #0
 620 0014 1593     		str	r3, [sp, #84]
 329:Core/Src/SEGGER_RTT_printf.c ****   BufferDesc.RTTBufferIndex = BufferIndex;
 621              		.loc 1 329 3 is_stmt 1 view .LVU201
 622              		.loc 1 329 29 is_stmt 0 view .LVU202
 623 0016 1790     		str	r0, [sp, #92]
 330:Core/Src/SEGGER_RTT_printf.c ****   BufferDesc.ReturnValue    = 0;
 624              		.loc 1 330 3 is_stmt 1 view .LVU203
 625              		.loc 1 330 29 is_stmt 0 view .LVU204
 626 0018 1693     		str	r3, [sp, #88]
 627 001a 8BE0     		b	.L81
 628              	.LVL53:
 629              	.L90:
 331:Core/Src/SEGGER_RTT_printf.c **** 
 332:Core/Src/SEGGER_RTT_printf.c ****   do {
 333:Core/Src/SEGGER_RTT_printf.c ****     c = *sFormat;
 334:Core/Src/SEGGER_RTT_printf.c ****     sFormat++;
 335:Core/Src/SEGGER_RTT_printf.c ****     if (c == 0u) {
 336:Core/Src/SEGGER_RTT_printf.c ****       break;
 337:Core/Src/SEGGER_RTT_printf.c ****     }
 338:Core/Src/SEGGER_RTT_printf.c ****     if (c == '%') {
 339:Core/Src/SEGGER_RTT_printf.c ****       //
 340:Core/Src/SEGGER_RTT_printf.c ****       // Filter out flags
ARM GAS  /var/folders/lp/x54gwt890xv47sdkqj1k04q40000gn/T//ccDNNL7g.s 			page 19


 341:Core/Src/SEGGER_RTT_printf.c ****       //
 342:Core/Src/SEGGER_RTT_printf.c ****       FormatFlags = 0u;
 630              		.loc 1 342 19 view .LVU205
 631 001c 0020     		movs	r0, #0
 343:Core/Src/SEGGER_RTT_printf.c ****       v = 1;
 632              		.loc 1 343 9 view .LVU206
 633 001e 0122     		movs	r2, #1
 634 0020 11E0     		b	.L62
 635              	.LVL54:
 636              	.L59:
 344:Core/Src/SEGGER_RTT_printf.c ****       do {
 345:Core/Src/SEGGER_RTT_printf.c ****         c = *sFormat;
 346:Core/Src/SEGGER_RTT_printf.c ****         switch (c) {
 347:Core/Src/SEGGER_RTT_printf.c ****         case '-': FormatFlags |= FORMAT_FLAG_LEFT_JUSTIFY; sFormat++; break;
 637              		.loc 1 347 19 is_stmt 1 view .LVU207
 638              		.loc 1 347 31 is_stmt 0 view .LVU208
 639 0022 40F00100 		orr	r0, r0, #1
 640              	.LVL55:
 641              		.loc 1 347 60 is_stmt 1 view .LVU209
 642              		.loc 1 347 67 is_stmt 0 view .LVU210
 643 0026 0134     		adds	r4, r4, #1
 644              	.LVL56:
 645              		.loc 1 347 71 is_stmt 1 view .LVU211
 646 0028 0CE0     		b	.L56
 647              	.LVL57:
 648              	.L57:
 348:Core/Src/SEGGER_RTT_printf.c ****         case '0': FormatFlags |= FORMAT_FLAG_PAD_ZERO;     sFormat++; break;
 649              		.loc 1 348 19 view .LVU212
 650              		.loc 1 348 31 is_stmt 0 view .LVU213
 651 002a 40F00200 		orr	r0, r0, #2
 652              	.LVL58:
 653              		.loc 1 348 60 is_stmt 1 view .LVU214
 654              		.loc 1 348 67 is_stmt 0 view .LVU215
 655 002e 0134     		adds	r4, r4, #1
 656              	.LVL59:
 657              		.loc 1 348 71 is_stmt 1 view .LVU216
 658 0030 08E0     		b	.L56
 659              	.LVL60:
 660              	.L60:
 349:Core/Src/SEGGER_RTT_printf.c ****         case '+': FormatFlags |= FORMAT_FLAG_PRINT_SIGN;   sFormat++; break;
 661              		.loc 1 349 19 view .LVU217
 662              		.loc 1 349 31 is_stmt 0 view .LVU218
 663 0032 40F00400 		orr	r0, r0, #4
 664              	.LVL61:
 665              		.loc 1 349 60 is_stmt 1 view .LVU219
 666              		.loc 1 349 67 is_stmt 0 view .LVU220
 667 0036 0134     		adds	r4, r4, #1
 668              	.LVL62:
 669              		.loc 1 349 71 is_stmt 1 view .LVU221
 670 0038 04E0     		b	.L56
 671              	.LVL63:
 672              	.L61:
 350:Core/Src/SEGGER_RTT_printf.c ****         case '#': FormatFlags |= FORMAT_FLAG_ALTERNATE;    sFormat++; break;
 673              		.loc 1 350 19 view .LVU222
 674              		.loc 1 350 31 is_stmt 0 view .LVU223
 675 003a 40F00800 		orr	r0, r0, #8
 676              	.LVL64:
ARM GAS  /var/folders/lp/x54gwt890xv47sdkqj1k04q40000gn/T//ccDNNL7g.s 			page 20


 677              		.loc 1 350 60 is_stmt 1 view .LVU224
 678              		.loc 1 350 67 is_stmt 0 view .LVU225
 679 003e 0134     		adds	r4, r4, #1
 680              	.LVL65:
 681              		.loc 1 350 71 is_stmt 1 view .LVU226
 682 0040 00E0     		b	.L56
 683              	.LVL66:
 684              	.L84:
 346:Core/Src/SEGGER_RTT_printf.c ****         case '-': FormatFlags |= FORMAT_FLAG_LEFT_JUSTIFY; sFormat++; break;
 685              		.loc 1 346 9 is_stmt 0 view .LVU227
 686 0042 0022     		movs	r2, #0
 687              	.LVL67:
 688              	.L56:
 351:Core/Src/SEGGER_RTT_printf.c ****         default:  v = 0; break;
 352:Core/Src/SEGGER_RTT_printf.c ****         }
 353:Core/Src/SEGGER_RTT_printf.c ****       } while (v);
 689              		.loc 1 353 16 is_stmt 1 view .LVU228
 690 0044 12B3     		cbz	r2, .L64
 691              	.LVL68:
 692              	.L62:
 344:Core/Src/SEGGER_RTT_printf.c ****         c = *sFormat;
 693              		.loc 1 344 7 view .LVU229
 345:Core/Src/SEGGER_RTT_printf.c ****         switch (c) {
 694              		.loc 1 345 9 view .LVU230
 345:Core/Src/SEGGER_RTT_printf.c ****         switch (c) {
 695              		.loc 1 345 11 is_stmt 0 view .LVU231
 696 0046 2378     		ldrb	r3, [r4]	@ zero_extendqisi2
 697              	.LVL69:
 346:Core/Src/SEGGER_RTT_printf.c ****         case '-': FormatFlags |= FORMAT_FLAG_LEFT_JUSTIFY; sFormat++; break;
 698              		.loc 1 346 9 is_stmt 1 view .LVU232
 699 0048 233B     		subs	r3, r3, #35
 700 004a 0D2B     		cmp	r3, #13
 701 004c F9D8     		bhi	.L84
 702 004e 01A1     		adr	r1, .L58
 703 0050 51F823F0 		ldr	pc, [r1, r3, lsl #2]
 704              		.p2align 2
 705              	.L58:
 706 0054 3B000000 		.word	.L61+1
 707 0058 43000000 		.word	.L84+1
 708 005c 43000000 		.word	.L84+1
 709 0060 43000000 		.word	.L84+1
 710 0064 43000000 		.word	.L84+1
 711 0068 43000000 		.word	.L84+1
 712 006c 43000000 		.word	.L84+1
 713 0070 43000000 		.word	.L84+1
 714 0074 33000000 		.word	.L60+1
 715 0078 43000000 		.word	.L84+1
 716 007c 23000000 		.word	.L59+1
 717 0080 43000000 		.word	.L84+1
 718 0084 43000000 		.word	.L84+1
 719 0088 2B000000 		.word	.L57+1
 720              	.LVL70:
 721              		.p2align 1
 722              	.L64:
 354:Core/Src/SEGGER_RTT_printf.c ****       //
 355:Core/Src/SEGGER_RTT_printf.c ****       // filter out field with
 356:Core/Src/SEGGER_RTT_printf.c ****       //
ARM GAS  /var/folders/lp/x54gwt890xv47sdkqj1k04q40000gn/T//ccDNNL7g.s 			page 21


 357:Core/Src/SEGGER_RTT_printf.c ****       FieldWidth = 0u;
 358:Core/Src/SEGGER_RTT_printf.c ****       do {
 723              		.loc 1 358 7 view .LVU233
 359:Core/Src/SEGGER_RTT_printf.c ****         c = *sFormat;
 724              		.loc 1 359 9 view .LVU234
 725              		.loc 1 359 11 is_stmt 0 view .LVU235
 726 008c 2378     		ldrb	r3, [r4]	@ zero_extendqisi2
 727              	.LVL71:
 360:Core/Src/SEGGER_RTT_printf.c ****         if ((c < '0') || (c > '9')) {
 728              		.loc 1 360 9 is_stmt 1 view .LVU236
 729              		.loc 1 360 23 is_stmt 0 view .LVU237
 730 008e A3F13001 		sub	r1, r3, #48
 731 0092 C9B2     		uxtb	r1, r1
 732              		.loc 1 360 12 view .LVU238
 733 0094 0929     		cmp	r1, #9
 734 0096 07D8     		bhi	.L63
 361:Core/Src/SEGGER_RTT_printf.c ****           break;
 362:Core/Src/SEGGER_RTT_printf.c ****         }
 363:Core/Src/SEGGER_RTT_printf.c ****         sFormat++;
 735              		.loc 1 363 9 is_stmt 1 view .LVU239
 736              		.loc 1 363 16 is_stmt 0 view .LVU240
 737 0098 0134     		adds	r4, r4, #1
 738              	.LVL72:
 364:Core/Src/SEGGER_RTT_printf.c ****         FieldWidth = (FieldWidth * 10u) + ((unsigned)c - '0');
 739              		.loc 1 364 9 is_stmt 1 view .LVU241
 740              		.loc 1 364 34 is_stmt 0 view .LVU242
 741 009a 02EB8202 		add	r2, r2, r2, lsl #2
 742              	.LVL73:
 743              		.loc 1 364 41 view .LVU243
 744 009e 03EB4203 		add	r3, r3, r2, lsl #1
 745              	.LVL74:
 746              		.loc 1 364 20 view .LVU244
 747 00a2 A3F13002 		sub	r2, r3, #48
 748              	.LVL75:
 358:Core/Src/SEGGER_RTT_printf.c ****         c = *sFormat;
 749              		.loc 1 358 10 is_stmt 1 view .LVU245
 359:Core/Src/SEGGER_RTT_printf.c ****         if ((c < '0') || (c > '9')) {
 750              		.loc 1 359 11 is_stmt 0 view .LVU246
 751 00a6 F1E7     		b	.L64
 752              	.LVL76:
 753              	.L63:
 365:Core/Src/SEGGER_RTT_printf.c ****       } while (1);
 366:Core/Src/SEGGER_RTT_printf.c **** 
 367:Core/Src/SEGGER_RTT_printf.c ****       //
 368:Core/Src/SEGGER_RTT_printf.c ****       // Filter out precision (number of digits to display)
 369:Core/Src/SEGGER_RTT_printf.c ****       //
 370:Core/Src/SEGGER_RTT_printf.c ****       NumDigits = 0u;
 754              		.loc 1 370 7 is_stmt 1 view .LVU247
 371:Core/Src/SEGGER_RTT_printf.c ****       c = *sFormat;
 755              		.loc 1 371 7 view .LVU248
 372:Core/Src/SEGGER_RTT_printf.c ****       if (c == '.') {
 756              		.loc 1 372 7 view .LVU249
 757              		.loc 1 372 10 is_stmt 0 view .LVU250
 758 00a8 2E2B     		cmp	r3, #46
 759 00aa 02D0     		beq	.L88
 370:Core/Src/SEGGER_RTT_printf.c ****       c = *sFormat;
 760              		.loc 1 370 17 view .LVU251
ARM GAS  /var/folders/lp/x54gwt890xv47sdkqj1k04q40000gn/T//ccDNNL7g.s 			page 22


 761 00ac 0023     		movs	r3, #0
 762              	.LVL77:
 763              	.L65:
 373:Core/Src/SEGGER_RTT_printf.c ****         sFormat++;
 374:Core/Src/SEGGER_RTT_printf.c ****         do {
 375:Core/Src/SEGGER_RTT_printf.c ****           c = *sFormat;
 376:Core/Src/SEGGER_RTT_printf.c ****           if ((c < '0') || (c > '9')) {
 377:Core/Src/SEGGER_RTT_printf.c ****             break;
 378:Core/Src/SEGGER_RTT_printf.c ****           }
 379:Core/Src/SEGGER_RTT_printf.c ****           sFormat++;
 380:Core/Src/SEGGER_RTT_printf.c ****           NumDigits = NumDigits * 10u + ((unsigned)c - '0');
 381:Core/Src/SEGGER_RTT_printf.c ****         } while (1);
 382:Core/Src/SEGGER_RTT_printf.c ****       }
 383:Core/Src/SEGGER_RTT_printf.c ****       //
 384:Core/Src/SEGGER_RTT_printf.c ****       // Filter out length modifier
 385:Core/Src/SEGGER_RTT_printf.c ****       //
 386:Core/Src/SEGGER_RTT_printf.c ****       c = *sFormat;
 764              		.loc 1 386 7 is_stmt 1 view .LVU252
 765              		.loc 1 386 9 is_stmt 0 view .LVU253
 766 00ae 2178     		ldrb	r1, [r4]	@ zero_extendqisi2
 767              	.LVL78:
 768              		.loc 1 386 9 view .LVU254
 769 00b0 14E0     		b	.L69
 770              	.LVL79:
 771              	.L88:
 373:Core/Src/SEGGER_RTT_printf.c ****         sFormat++;
 772              		.loc 1 373 9 is_stmt 1 view .LVU255
 373:Core/Src/SEGGER_RTT_printf.c ****         sFormat++;
 773              		.loc 1 373 16 is_stmt 0 view .LVU256
 774 00b2 0134     		adds	r4, r4, #1
 775              	.LVL80:
 370:Core/Src/SEGGER_RTT_printf.c ****       c = *sFormat;
 776              		.loc 1 370 17 view .LVU257
 777 00b4 0023     		movs	r3, #0
 778              	.LVL81:
 370:Core/Src/SEGGER_RTT_printf.c ****       c = *sFormat;
 779              		.loc 1 370 17 view .LVU258
 780 00b6 06E0     		b	.L66
 781              	.LVL82:
 782              	.L89:
 379:Core/Src/SEGGER_RTT_printf.c ****           NumDigits = NumDigits * 10u + ((unsigned)c - '0');
 783              		.loc 1 379 11 is_stmt 1 view .LVU259
 379:Core/Src/SEGGER_RTT_printf.c ****           NumDigits = NumDigits * 10u + ((unsigned)c - '0');
 784              		.loc 1 379 18 is_stmt 0 view .LVU260
 785 00b8 0134     		adds	r4, r4, #1
 786              	.LVL83:
 380:Core/Src/SEGGER_RTT_printf.c ****         } while (1);
 787              		.loc 1 380 11 is_stmt 1 view .LVU261
 380:Core/Src/SEGGER_RTT_printf.c ****         } while (1);
 788              		.loc 1 380 33 is_stmt 0 view .LVU262
 789 00ba 03EB8303 		add	r3, r3, r3, lsl #2
 790              	.LVL84:
 380:Core/Src/SEGGER_RTT_printf.c ****         } while (1);
 791              		.loc 1 380 39 view .LVU263
 792 00be 01EB4301 		add	r1, r1, r3, lsl #1
 793              	.LVL85:
 380:Core/Src/SEGGER_RTT_printf.c ****         } while (1);
ARM GAS  /var/folders/lp/x54gwt890xv47sdkqj1k04q40000gn/T//ccDNNL7g.s 			page 23


 794              		.loc 1 380 21 view .LVU264
 795 00c2 A1F13003 		sub	r3, r1, #48
 796              	.LVL86:
 374:Core/Src/SEGGER_RTT_printf.c ****           c = *sFormat;
 797              		.loc 1 374 12 is_stmt 1 view .LVU265
 798              	.L66:
 374:Core/Src/SEGGER_RTT_printf.c ****           c = *sFormat;
 799              		.loc 1 374 9 view .LVU266
 375:Core/Src/SEGGER_RTT_printf.c ****           if ((c < '0') || (c > '9')) {
 800              		.loc 1 375 11 view .LVU267
 375:Core/Src/SEGGER_RTT_printf.c ****           if ((c < '0') || (c > '9')) {
 801              		.loc 1 375 13 is_stmt 0 view .LVU268
 802 00c6 2178     		ldrb	r1, [r4]	@ zero_extendqisi2
 803              	.LVL87:
 376:Core/Src/SEGGER_RTT_printf.c ****             break;
 804              		.loc 1 376 11 is_stmt 1 view .LVU269
 376:Core/Src/SEGGER_RTT_printf.c ****             break;
 805              		.loc 1 376 25 is_stmt 0 view .LVU270
 806 00c8 A1F1300C 		sub	ip, r1, #48
 807 00cc 5FFA8CFC 		uxtb	ip, ip
 376:Core/Src/SEGGER_RTT_printf.c ****             break;
 808              		.loc 1 376 14 view .LVU271
 809 00d0 BCF1090F 		cmp	ip, #9
 810 00d4 F0D9     		bls	.L89
 376:Core/Src/SEGGER_RTT_printf.c ****             break;
 811              		.loc 1 376 14 view .LVU272
 812 00d6 EAE7     		b	.L65
 813              	.L67:
 387:Core/Src/SEGGER_RTT_printf.c ****       do {
 388:Core/Src/SEGGER_RTT_printf.c ****         if ((c == 'l') || (c == 'h')) {
 389:Core/Src/SEGGER_RTT_printf.c ****           sFormat++;
 814              		.loc 1 389 11 is_stmt 1 view .LVU273
 815              	.LVL88:
 390:Core/Src/SEGGER_RTT_printf.c ****           c = *sFormat;
 816              		.loc 1 390 11 view .LVU274
 817              		.loc 1 390 13 is_stmt 0 view .LVU275
 818 00d8 14F8011F 		ldrb	r1, [r4, #1]!	@ zero_extendqisi2
 819              	.LVL89:
 387:Core/Src/SEGGER_RTT_printf.c ****       do {
 820              		.loc 1 387 10 is_stmt 1 view .LVU276
 821              	.L69:
 387:Core/Src/SEGGER_RTT_printf.c ****       do {
 822              		.loc 1 387 7 view .LVU277
 388:Core/Src/SEGGER_RTT_printf.c ****           sFormat++;
 823              		.loc 1 388 9 view .LVU278
 388:Core/Src/SEGGER_RTT_printf.c ****           sFormat++;
 824              		.loc 1 388 12 is_stmt 0 view .LVU279
 825 00dc 6C29     		cmp	r1, #108
 826 00de FBD0     		beq	.L67
 388:Core/Src/SEGGER_RTT_printf.c ****           sFormat++;
 827              		.loc 1 388 24 discriminator 1 view .LVU280
 828 00e0 6829     		cmp	r1, #104
 829 00e2 F9D0     		beq	.L67
 391:Core/Src/SEGGER_RTT_printf.c ****         } else {
 392:Core/Src/SEGGER_RTT_printf.c ****           break;
 393:Core/Src/SEGGER_RTT_printf.c ****         }
 394:Core/Src/SEGGER_RTT_printf.c ****       } while (1);
ARM GAS  /var/folders/lp/x54gwt890xv47sdkqj1k04q40000gn/T//ccDNNL7g.s 			page 24


 395:Core/Src/SEGGER_RTT_printf.c ****       //
 396:Core/Src/SEGGER_RTT_printf.c ****       // Handle specifiers
 397:Core/Src/SEGGER_RTT_printf.c ****       //
 398:Core/Src/SEGGER_RTT_printf.c ****       switch (c) {
 830              		.loc 1 398 7 is_stmt 1 view .LVU281
 831 00e4 2529     		cmp	r1, #37
 832 00e6 6DD0     		beq	.L70
 833 00e8 20D3     		bcc	.L71
 834 00ea 7829     		cmp	r1, #120
 835 00ec 1ED8     		bhi	.L71
 836 00ee 5829     		cmp	r1, #88
 837 00f0 1CD3     		bcc	.L71
 838 00f2 5839     		subs	r1, r1, #88
 839              	.LVL90:
 840              		.loc 1 398 7 is_stmt 0 view .LVU282
 841 00f4 2029     		cmp	r1, #32
 842 00f6 19D8     		bhi	.L71
 843 00f8 DFE801F0 		tbb	[pc, r1]
 844              	.L73:
 845 00fc 3D       		.byte	(.L72-.L73)/2
 846 00fd 18       		.byte	(.L71-.L73)/2
 847 00fe 18       		.byte	(.L71-.L73)/2
 848 00ff 18       		.byte	(.L71-.L73)/2
 849 0100 18       		.byte	(.L71-.L73)/2
 850 0101 18       		.byte	(.L71-.L73)/2
 851 0102 18       		.byte	(.L71-.L73)/2
 852 0103 18       		.byte	(.L71-.L73)/2
 853 0104 18       		.byte	(.L71-.L73)/2
 854 0105 18       		.byte	(.L71-.L73)/2
 855 0106 18       		.byte	(.L71-.L73)/2
 856 0107 11       		.byte	(.L78-.L73)/2
 857 0108 27       		.byte	(.L77-.L73)/2
 858 0109 18       		.byte	(.L71-.L73)/2
 859 010a 18       		.byte	(.L71-.L73)/2
 860 010b 18       		.byte	(.L71-.L73)/2
 861 010c 18       		.byte	(.L71-.L73)/2
 862 010d 18       		.byte	(.L71-.L73)/2
 863 010e 18       		.byte	(.L71-.L73)/2
 864 010f 18       		.byte	(.L71-.L73)/2
 865 0110 18       		.byte	(.L71-.L73)/2
 866 0111 18       		.byte	(.L71-.L73)/2
 867 0112 18       		.byte	(.L71-.L73)/2
 868 0113 18       		.byte	(.L71-.L73)/2
 869 0114 57       		.byte	(.L76-.L73)/2
 870 0115 18       		.byte	(.L71-.L73)/2
 871 0116 18       		.byte	(.L71-.L73)/2
 872 0117 48       		.byte	(.L75-.L73)/2
 873 0118 18       		.byte	(.L71-.L73)/2
 874 0119 32       		.byte	(.L74-.L73)/2
 875 011a 18       		.byte	(.L71-.L73)/2
 876 011b 18       		.byte	(.L71-.L73)/2
 877 011c 3D       		.byte	(.L72-.L73)/2
 878 011d 00       		.p2align 1
 879              	.L78:
 880              	.LBB2:
 399:Core/Src/SEGGER_RTT_printf.c ****       case 'c': {
 400:Core/Src/SEGGER_RTT_printf.c ****         char c0;
ARM GAS  /var/folders/lp/x54gwt890xv47sdkqj1k04q40000gn/T//ccDNNL7g.s 			page 25


 881              		.loc 1 400 9 is_stmt 1 view .LVU283
 401:Core/Src/SEGGER_RTT_printf.c ****         v = va_arg(*pParamList, int);
 882              		.loc 1 401 9 view .LVU284
 883              		.loc 1 401 11 is_stmt 0 view .LVU285
 884 011e 2B68     		ldr	r3, [r5]
 885              	.LVL91:
 886              		.loc 1 401 11 view .LVU286
 887 0120 1A1D     		adds	r2, r3, #4
 888              	.LVL92:
 889              		.loc 1 401 11 view .LVU287
 890 0122 2A60     		str	r2, [r5]
 891              	.LVL93:
 402:Core/Src/SEGGER_RTT_printf.c ****         c0 = (char)v;
 892              		.loc 1 402 9 is_stmt 1 view .LVU288
 403:Core/Src/SEGGER_RTT_printf.c ****         _StoreChar(&BufferDesc, c0);
 893              		.loc 1 403 9 view .LVU289
 894 0124 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 895              	.LVL94:
 896              		.loc 1 403 9 is_stmt 0 view .LVU290
 897 0126 13A8     		add	r0, sp, #76
 898              	.LVL95:
 899              		.loc 1 403 9 view .LVU291
 900 0128 FFF7FEFF 		bl	_StoreChar
 901              	.LVL96:
 404:Core/Src/SEGGER_RTT_printf.c ****         break;
 902              		.loc 1 404 9 is_stmt 1 view .LVU292
 903              	.L71:
 904              		.loc 1 404 9 is_stmt 0 view .LVU293
 905              	.LBE2:
 405:Core/Src/SEGGER_RTT_printf.c ****       }
 406:Core/Src/SEGGER_RTT_printf.c ****       case 'd':
 407:Core/Src/SEGGER_RTT_printf.c ****         v = va_arg(*pParamList, int);
 408:Core/Src/SEGGER_RTT_printf.c ****         _PrintInt(&BufferDesc, v, 10u, NumDigits, FieldWidth, FormatFlags);
 409:Core/Src/SEGGER_RTT_printf.c ****         break;
 410:Core/Src/SEGGER_RTT_printf.c ****       case 'u':
 411:Core/Src/SEGGER_RTT_printf.c ****         v = va_arg(*pParamList, int);
 412:Core/Src/SEGGER_RTT_printf.c ****         _PrintUnsigned(&BufferDesc, (unsigned)v, 10u, NumDigits, FieldWidth, FormatFlags);
 413:Core/Src/SEGGER_RTT_printf.c ****         break;
 414:Core/Src/SEGGER_RTT_printf.c ****       case 'x':
 415:Core/Src/SEGGER_RTT_printf.c ****       case 'X':
 416:Core/Src/SEGGER_RTT_printf.c ****         v = va_arg(*pParamList, int);
 417:Core/Src/SEGGER_RTT_printf.c ****         _PrintUnsigned(&BufferDesc, (unsigned)v, 16u, NumDigits, FieldWidth, FormatFlags);
 418:Core/Src/SEGGER_RTT_printf.c ****         break;
 419:Core/Src/SEGGER_RTT_printf.c ****       case 's':
 420:Core/Src/SEGGER_RTT_printf.c ****         {
 421:Core/Src/SEGGER_RTT_printf.c ****           const char * s = va_arg(*pParamList, const char *);
 422:Core/Src/SEGGER_RTT_printf.c ****           do {
 423:Core/Src/SEGGER_RTT_printf.c ****             c = *s;
 424:Core/Src/SEGGER_RTT_printf.c ****             s++;
 425:Core/Src/SEGGER_RTT_printf.c ****             if (c == '\0') {
 426:Core/Src/SEGGER_RTT_printf.c ****               break;
 427:Core/Src/SEGGER_RTT_printf.c ****             }
 428:Core/Src/SEGGER_RTT_printf.c ****            _StoreChar(&BufferDesc, c);
 429:Core/Src/SEGGER_RTT_printf.c ****           } while (BufferDesc.ReturnValue >= 0);
 430:Core/Src/SEGGER_RTT_printf.c ****         }
 431:Core/Src/SEGGER_RTT_printf.c ****         break;
 432:Core/Src/SEGGER_RTT_printf.c ****       case 'p':
ARM GAS  /var/folders/lp/x54gwt890xv47sdkqj1k04q40000gn/T//ccDNNL7g.s 			page 26


 433:Core/Src/SEGGER_RTT_printf.c ****         v = va_arg(*pParamList, int);
 434:Core/Src/SEGGER_RTT_printf.c ****         _PrintUnsigned(&BufferDesc, (unsigned)v, 16u, 8u, 8u, 0u);
 435:Core/Src/SEGGER_RTT_printf.c ****         break;
 436:Core/Src/SEGGER_RTT_printf.c ****       case '%':
 437:Core/Src/SEGGER_RTT_printf.c ****         _StoreChar(&BufferDesc, '%');
 438:Core/Src/SEGGER_RTT_printf.c ****         break;
 439:Core/Src/SEGGER_RTT_printf.c ****       default:
 440:Core/Src/SEGGER_RTT_printf.c ****         break;
 441:Core/Src/SEGGER_RTT_printf.c ****       }
 442:Core/Src/SEGGER_RTT_printf.c ****       sFormat++;
 906              		.loc 1 442 7 is_stmt 1 view .LVU294
 907              		.loc 1 442 14 is_stmt 0 view .LVU295
 908 012c 0134     		adds	r4, r4, #1
 909              	.LVL97:
 910              	.L80:
 443:Core/Src/SEGGER_RTT_printf.c ****     } else {
 444:Core/Src/SEGGER_RTT_printf.c ****       _StoreChar(&BufferDesc, c);
 445:Core/Src/SEGGER_RTT_printf.c ****     }
 446:Core/Src/SEGGER_RTT_printf.c ****   } while (BufferDesc.ReturnValue >= 0);
 911              		.loc 1 446 35 is_stmt 1 view .LVU296
 912              		.loc 1 446 22 is_stmt 0 view .LVU297
 913 012e 169B     		ldr	r3, [sp, #88]
 914              		.loc 1 446 35 view .LVU298
 915 0130 002B     		cmp	r3, #0
 916 0132 4CDB     		blt	.L54
 917              	.L81:
 332:Core/Src/SEGGER_RTT_printf.c ****     c = *sFormat;
 918              		.loc 1 332 3 is_stmt 1 view .LVU299
 333:Core/Src/SEGGER_RTT_printf.c ****     sFormat++;
 919              		.loc 1 333 5 view .LVU300
 333:Core/Src/SEGGER_RTT_printf.c ****     sFormat++;
 920              		.loc 1 333 7 is_stmt 0 view .LVU301
 921 0134 14F8011B 		ldrb	r1, [r4], #1	@ zero_extendqisi2
 922              	.LVL98:
 334:Core/Src/SEGGER_RTT_printf.c ****     if (c == 0u) {
 923              		.loc 1 334 5 is_stmt 1 view .LVU302
 335:Core/Src/SEGGER_RTT_printf.c ****       break;
 924              		.loc 1 335 5 view .LVU303
 335:Core/Src/SEGGER_RTT_printf.c ****       break;
 925              		.loc 1 335 8 is_stmt 0 view .LVU304
 926 0138 0029     		cmp	r1, #0
 927 013a 48D0     		beq	.L54
 338:Core/Src/SEGGER_RTT_printf.c ****       //
 928              		.loc 1 338 5 is_stmt 1 view .LVU305
 338:Core/Src/SEGGER_RTT_printf.c ****       //
 929              		.loc 1 338 8 is_stmt 0 view .LVU306
 930 013c 2529     		cmp	r1, #37
 931 013e 3FF46DAF 		beq	.L90
 444:Core/Src/SEGGER_RTT_printf.c ****     }
 932              		.loc 1 444 7 is_stmt 1 view .LVU307
 933 0142 13A8     		add	r0, sp, #76
 934 0144 FFF7FEFF 		bl	_StoreChar
 935              	.LVL99:
 444:Core/Src/SEGGER_RTT_printf.c ****     }
 936              		.loc 1 444 7 is_stmt 0 view .LVU308
 937 0148 F1E7     		b	.L80
 938              	.LVL100:
ARM GAS  /var/folders/lp/x54gwt890xv47sdkqj1k04q40000gn/T//ccDNNL7g.s 			page 27


 939              	.L77:
 407:Core/Src/SEGGER_RTT_printf.c ****         _PrintInt(&BufferDesc, v, 10u, NumDigits, FieldWidth, FormatFlags);
 940              		.loc 1 407 9 is_stmt 1 view .LVU309
 407:Core/Src/SEGGER_RTT_printf.c ****         _PrintInt(&BufferDesc, v, 10u, NumDigits, FieldWidth, FormatFlags);
 941              		.loc 1 407 11 is_stmt 0 view .LVU310
 942 014a 2968     		ldr	r1, [r5]
 943              	.LVL101:
 407:Core/Src/SEGGER_RTT_printf.c ****         _PrintInt(&BufferDesc, v, 10u, NumDigits, FieldWidth, FormatFlags);
 944              		.loc 1 407 11 view .LVU311
 945 014c 0F1D     		adds	r7, r1, #4
 946 014e 2F60     		str	r7, [r5]
 947 0150 0968     		ldr	r1, [r1]
 948              	.LVL102:
 408:Core/Src/SEGGER_RTT_printf.c ****         break;
 949              		.loc 1 408 9 is_stmt 1 view .LVU312
 950 0152 0190     		str	r0, [sp, #4]
 951 0154 0092     		str	r2, [sp]
 952 0156 0A22     		movs	r2, #10
 953              	.LVL103:
 408:Core/Src/SEGGER_RTT_printf.c ****         break;
 954              		.loc 1 408 9 is_stmt 0 view .LVU313
 955 0158 13A8     		add	r0, sp, #76
 956              	.LVL104:
 408:Core/Src/SEGGER_RTT_printf.c ****         break;
 957              		.loc 1 408 9 view .LVU314
 958 015a FFF7FEFF 		bl	_PrintInt
 959              	.LVL105:
 409:Core/Src/SEGGER_RTT_printf.c ****       case 'u':
 960              		.loc 1 409 9 is_stmt 1 view .LVU315
 961 015e E5E7     		b	.L71
 962              	.LVL106:
 963              	.L74:
 411:Core/Src/SEGGER_RTT_printf.c ****         _PrintUnsigned(&BufferDesc, (unsigned)v, 10u, NumDigits, FieldWidth, FormatFlags);
 964              		.loc 1 411 9 view .LVU316
 411:Core/Src/SEGGER_RTT_printf.c ****         _PrintUnsigned(&BufferDesc, (unsigned)v, 10u, NumDigits, FieldWidth, FormatFlags);
 965              		.loc 1 411 11 is_stmt 0 view .LVU317
 966 0160 2968     		ldr	r1, [r5]
 967              	.LVL107:
 411:Core/Src/SEGGER_RTT_printf.c ****         _PrintUnsigned(&BufferDesc, (unsigned)v, 10u, NumDigits, FieldWidth, FormatFlags);
 968              		.loc 1 411 11 view .LVU318
 969 0162 0F1D     		adds	r7, r1, #4
 970 0164 2F60     		str	r7, [r5]
 971 0166 0968     		ldr	r1, [r1]
 972              	.LVL108:
 412:Core/Src/SEGGER_RTT_printf.c ****         break;
 973              		.loc 1 412 9 is_stmt 1 view .LVU319
 974 0168 0190     		str	r0, [sp, #4]
 975 016a 0092     		str	r2, [sp]
 976 016c 0A22     		movs	r2, #10
 977              	.LVL109:
 412:Core/Src/SEGGER_RTT_printf.c ****         break;
 978              		.loc 1 412 9 is_stmt 0 view .LVU320
 979 016e 13A8     		add	r0, sp, #76
 980              	.LVL110:
 412:Core/Src/SEGGER_RTT_printf.c ****         break;
 981              		.loc 1 412 9 view .LVU321
 982 0170 FFF7FEFF 		bl	_PrintUnsigned
ARM GAS  /var/folders/lp/x54gwt890xv47sdkqj1k04q40000gn/T//ccDNNL7g.s 			page 28


 983              	.LVL111:
 413:Core/Src/SEGGER_RTT_printf.c ****       case 'x':
 984              		.loc 1 413 9 is_stmt 1 view .LVU322
 985 0174 DAE7     		b	.L71
 986              	.LVL112:
 987              	.L72:
 416:Core/Src/SEGGER_RTT_printf.c ****         _PrintUnsigned(&BufferDesc, (unsigned)v, 16u, NumDigits, FieldWidth, FormatFlags);
 988              		.loc 1 416 9 view .LVU323
 416:Core/Src/SEGGER_RTT_printf.c ****         _PrintUnsigned(&BufferDesc, (unsigned)v, 16u, NumDigits, FieldWidth, FormatFlags);
 989              		.loc 1 416 11 is_stmt 0 view .LVU324
 990 0176 2968     		ldr	r1, [r5]
 991              	.LVL113:
 416:Core/Src/SEGGER_RTT_printf.c ****         _PrintUnsigned(&BufferDesc, (unsigned)v, 16u, NumDigits, FieldWidth, FormatFlags);
 992              		.loc 1 416 11 view .LVU325
 993 0178 0F1D     		adds	r7, r1, #4
 994 017a 2F60     		str	r7, [r5]
 995 017c 0968     		ldr	r1, [r1]
 996              	.LVL114:
 417:Core/Src/SEGGER_RTT_printf.c ****         break;
 997              		.loc 1 417 9 is_stmt 1 view .LVU326
 998 017e 0190     		str	r0, [sp, #4]
 999 0180 0092     		str	r2, [sp]
 1000 0182 1022     		movs	r2, #16
 1001              	.LVL115:
 417:Core/Src/SEGGER_RTT_printf.c ****         break;
 1002              		.loc 1 417 9 is_stmt 0 view .LVU327
 1003 0184 13A8     		add	r0, sp, #76
 1004              	.LVL116:
 417:Core/Src/SEGGER_RTT_printf.c ****         break;
 1005              		.loc 1 417 9 view .LVU328
 1006 0186 FFF7FEFF 		bl	_PrintUnsigned
 1007              	.LVL117:
 418:Core/Src/SEGGER_RTT_printf.c ****       case 's':
 1008              		.loc 1 418 9 is_stmt 1 view .LVU329
 1009 018a CFE7     		b	.L71
 1010              	.LVL118:
 1011              	.L75:
 1012              	.LBB3:
 421:Core/Src/SEGGER_RTT_printf.c ****           do {
 1013              		.loc 1 421 11 view .LVU330
 421:Core/Src/SEGGER_RTT_printf.c ****           do {
 1014              		.loc 1 421 24 is_stmt 0 view .LVU331
 1015 018c 2B68     		ldr	r3, [r5]
 1016              	.LVL119:
 421:Core/Src/SEGGER_RTT_printf.c ****           do {
 1017              		.loc 1 421 24 view .LVU332
 1018 018e 1A1D     		adds	r2, r3, #4
 1019              	.LVL120:
 421:Core/Src/SEGGER_RTT_printf.c ****           do {
 1020              		.loc 1 421 24 view .LVU333
 1021 0190 2A60     		str	r2, [r5]
 1022 0192 1F68     		ldr	r7, [r3]
 1023              	.LVL121:
 1024              	.L79:
 422:Core/Src/SEGGER_RTT_printf.c ****             c = *s;
 1025              		.loc 1 422 11 is_stmt 1 view .LVU334
 423:Core/Src/SEGGER_RTT_printf.c ****             s++;
ARM GAS  /var/folders/lp/x54gwt890xv47sdkqj1k04q40000gn/T//ccDNNL7g.s 			page 29


 1026              		.loc 1 423 13 view .LVU335
 423:Core/Src/SEGGER_RTT_printf.c ****             s++;
 1027              		.loc 1 423 15 is_stmt 0 view .LVU336
 1028 0194 17F8011B 		ldrb	r1, [r7], #1	@ zero_extendqisi2
 1029              	.LVL122:
 424:Core/Src/SEGGER_RTT_printf.c ****             if (c == '\0') {
 1030              		.loc 1 424 13 is_stmt 1 view .LVU337
 425:Core/Src/SEGGER_RTT_printf.c ****               break;
 1031              		.loc 1 425 13 view .LVU338
 425:Core/Src/SEGGER_RTT_printf.c ****               break;
 1032              		.loc 1 425 16 is_stmt 0 view .LVU339
 1033 0198 0029     		cmp	r1, #0
 1034 019a C7D0     		beq	.L71
 428:Core/Src/SEGGER_RTT_printf.c ****           } while (BufferDesc.ReturnValue >= 0);
 1035              		.loc 1 428 12 is_stmt 1 view .LVU340
 1036 019c 13A8     		add	r0, sp, #76
 1037 019e FFF7FEFF 		bl	_StoreChar
 1038              	.LVL123:
 429:Core/Src/SEGGER_RTT_printf.c ****         }
 1039              		.loc 1 429 43 view .LVU341
 429:Core/Src/SEGGER_RTT_printf.c ****         }
 1040              		.loc 1 429 30 is_stmt 0 view .LVU342
 1041 01a2 169B     		ldr	r3, [sp, #88]
 429:Core/Src/SEGGER_RTT_printf.c ****         }
 1042              		.loc 1 429 43 view .LVU343
 1043 01a4 002B     		cmp	r3, #0
 1044 01a6 F5DA     		bge	.L79
 1045 01a8 C0E7     		b	.L71
 1046              	.LVL124:
 1047              	.L76:
 429:Core/Src/SEGGER_RTT_printf.c ****         }
 1048              		.loc 1 429 43 view .LVU344
 1049              	.LBE3:
 433:Core/Src/SEGGER_RTT_printf.c ****         _PrintUnsigned(&BufferDesc, (unsigned)v, 16u, 8u, 8u, 0u);
 1050              		.loc 1 433 9 is_stmt 1 view .LVU345
 433:Core/Src/SEGGER_RTT_printf.c ****         _PrintUnsigned(&BufferDesc, (unsigned)v, 16u, 8u, 8u, 0u);
 1051              		.loc 1 433 11 is_stmt 0 view .LVU346
 1052 01aa 2B68     		ldr	r3, [r5]
 1053              	.LVL125:
 433:Core/Src/SEGGER_RTT_printf.c ****         _PrintUnsigned(&BufferDesc, (unsigned)v, 16u, 8u, 8u, 0u);
 1054              		.loc 1 433 11 view .LVU347
 1055 01ac 1A1D     		adds	r2, r3, #4
 1056              	.LVL126:
 433:Core/Src/SEGGER_RTT_printf.c ****         _PrintUnsigned(&BufferDesc, (unsigned)v, 16u, 8u, 8u, 0u);
 1057              		.loc 1 433 11 view .LVU348
 1058 01ae 2A60     		str	r2, [r5]
 1059 01b0 1968     		ldr	r1, [r3]
 1060              	.LVL127:
 434:Core/Src/SEGGER_RTT_printf.c ****         break;
 1061              		.loc 1 434 9 is_stmt 1 view .LVU349
 1062 01b2 0023     		movs	r3, #0
 1063 01b4 0193     		str	r3, [sp, #4]
 1064 01b6 0823     		movs	r3, #8
 1065 01b8 0093     		str	r3, [sp]
 1066 01ba 1022     		movs	r2, #16
 1067 01bc 13A8     		add	r0, sp, #76
 1068              	.LVL128:
ARM GAS  /var/folders/lp/x54gwt890xv47sdkqj1k04q40000gn/T//ccDNNL7g.s 			page 30


 434:Core/Src/SEGGER_RTT_printf.c ****         break;
 1069              		.loc 1 434 9 is_stmt 0 view .LVU350
 1070 01be FFF7FEFF 		bl	_PrintUnsigned
 1071              	.LVL129:
 435:Core/Src/SEGGER_RTT_printf.c ****       case '%':
 1072              		.loc 1 435 9 is_stmt 1 view .LVU351
 1073 01c2 B3E7     		b	.L71
 1074              	.LVL130:
 1075              	.L70:
 437:Core/Src/SEGGER_RTT_printf.c ****         break;
 1076              		.loc 1 437 9 view .LVU352
 1077 01c4 2521     		movs	r1, #37
 1078              	.LVL131:
 437:Core/Src/SEGGER_RTT_printf.c ****         break;
 1079              		.loc 1 437 9 is_stmt 0 view .LVU353
 1080 01c6 13A8     		add	r0, sp, #76
 1081              	.LVL132:
 437:Core/Src/SEGGER_RTT_printf.c ****         break;
 1082              		.loc 1 437 9 view .LVU354
 1083 01c8 FFF7FEFF 		bl	_StoreChar
 1084              	.LVL133:
 438:Core/Src/SEGGER_RTT_printf.c ****       default:
 1085              		.loc 1 438 9 is_stmt 1 view .LVU355
 1086 01cc AEE7     		b	.L71
 1087              	.LVL134:
 1088              	.L54:
 447:Core/Src/SEGGER_RTT_printf.c **** 
 448:Core/Src/SEGGER_RTT_printf.c ****   if (BufferDesc.ReturnValue > 0) {
 1089              		.loc 1 448 3 view .LVU356
 1090              		.loc 1 448 17 is_stmt 0 view .LVU357
 1091 01ce 169B     		ldr	r3, [sp, #88]
 1092              		.loc 1 448 6 view .LVU358
 1093 01d0 002B     		cmp	r3, #0
 1094 01d2 05DD     		ble	.L82
 449:Core/Src/SEGGER_RTT_printf.c ****     //
 450:Core/Src/SEGGER_RTT_printf.c ****     // Write remaining data, if any
 451:Core/Src/SEGGER_RTT_printf.c ****     //
 452:Core/Src/SEGGER_RTT_printf.c ****     if (BufferDesc.Cnt != 0u) {
 1095              		.loc 1 452 5 is_stmt 1 view .LVU359
 1096              		.loc 1 452 19 is_stmt 0 view .LVU360
 1097 01d4 159A     		ldr	r2, [sp, #84]
 1098              		.loc 1 452 8 view .LVU361
 1099 01d6 32B9     		cbnz	r2, .L91
 1100              	.L83:
 453:Core/Src/SEGGER_RTT_printf.c ****       SEGGER_RTT_Write(BufferIndex, acBuffer, BufferDesc.Cnt);
 454:Core/Src/SEGGER_RTT_printf.c ****     }
 455:Core/Src/SEGGER_RTT_printf.c ****     BufferDesc.ReturnValue += (int)BufferDesc.Cnt;
 1101              		.loc 1 455 5 is_stmt 1 view .LVU362
 1102              		.loc 1 455 28 is_stmt 0 view .LVU363
 1103 01d8 169B     		ldr	r3, [sp, #88]
 1104 01da 159A     		ldr	r2, [sp, #84]
 1105 01dc 1344     		add	r3, r3, r2
 1106 01de 1693     		str	r3, [sp, #88]
 1107              	.L82:
 456:Core/Src/SEGGER_RTT_printf.c ****   }
 457:Core/Src/SEGGER_RTT_printf.c ****   return BufferDesc.ReturnValue;
 1108              		.loc 1 457 3 is_stmt 1 view .LVU364
ARM GAS  /var/folders/lp/x54gwt890xv47sdkqj1k04q40000gn/T//ccDNNL7g.s 			page 31


 458:Core/Src/SEGGER_RTT_printf.c **** }
 1109              		.loc 1 458 1 is_stmt 0 view .LVU365
 1110 01e0 1698     		ldr	r0, [sp, #88]
 1111 01e2 19B0     		add	sp, sp, #100
 1112              		.cfi_remember_state
 1113              		.cfi_def_cfa_offset 20
 1114              		@ sp needed
 1115 01e4 F0BD     		pop	{r4, r5, r6, r7, pc}
 1116              	.LVL135:
 1117              	.L91:
 1118              		.cfi_restore_state
 453:Core/Src/SEGGER_RTT_printf.c ****       SEGGER_RTT_Write(BufferIndex, acBuffer, BufferDesc.Cnt);
 1119              		.loc 1 453 7 is_stmt 1 view .LVU366
 1120 01e6 03A9     		add	r1, sp, #12
 1121 01e8 3046     		mov	r0, r6
 1122 01ea FFF7FEFF 		bl	SEGGER_RTT_Write
 1123              	.LVL136:
 1124 01ee F3E7     		b	.L83
 1125              		.cfi_endproc
 1126              	.LFE3:
 1128              		.section	.text.SEGGER_RTT_printf,"ax",%progbits
 1129              		.align	1
 1130              		.global	SEGGER_RTT_printf
 1131              		.syntax unified
 1132              		.thumb
 1133              		.thumb_func
 1135              	SEGGER_RTT_printf:
 1136              	.LVL137:
 1137              	.LFB4:
 459:Core/Src/SEGGER_RTT_printf.c **** 
 460:Core/Src/SEGGER_RTT_printf.c **** /*********************************************************************
 461:Core/Src/SEGGER_RTT_printf.c **** *
 462:Core/Src/SEGGER_RTT_printf.c **** *       SEGGER_RTT_printf
 463:Core/Src/SEGGER_RTT_printf.c **** *
 464:Core/Src/SEGGER_RTT_printf.c **** *  Function description
 465:Core/Src/SEGGER_RTT_printf.c **** *    Stores a formatted string in SEGGER RTT control block.
 466:Core/Src/SEGGER_RTT_printf.c **** *    This data is read by the host.
 467:Core/Src/SEGGER_RTT_printf.c **** *
 468:Core/Src/SEGGER_RTT_printf.c **** *  Parameters
 469:Core/Src/SEGGER_RTT_printf.c **** *    BufferIndex  Index of "Up"-buffer to be used. (e.g. 0 for "Terminal")
 470:Core/Src/SEGGER_RTT_printf.c **** *    sFormat      Pointer to format string, followed by the arguments for conversion
 471:Core/Src/SEGGER_RTT_printf.c **** *
 472:Core/Src/SEGGER_RTT_printf.c **** *  Return values
 473:Core/Src/SEGGER_RTT_printf.c **** *    >= 0:  Number of bytes which have been stored in the "Up"-buffer.
 474:Core/Src/SEGGER_RTT_printf.c **** *     < 0:  Error
 475:Core/Src/SEGGER_RTT_printf.c **** *
 476:Core/Src/SEGGER_RTT_printf.c **** *  Notes
 477:Core/Src/SEGGER_RTT_printf.c **** *    (1) Conversion specifications have following syntax:
 478:Core/Src/SEGGER_RTT_printf.c **** *          %[flags][FieldWidth][.Precision]ConversionSpecifier
 479:Core/Src/SEGGER_RTT_printf.c **** *    (2) Supported flags:
 480:Core/Src/SEGGER_RTT_printf.c **** *          -: Left justify within the field width
 481:Core/Src/SEGGER_RTT_printf.c **** *          +: Always print sign extension for signed conversions
 482:Core/Src/SEGGER_RTT_printf.c **** *          0: Pad with 0 instead of spaces. Ignored when using '-'-flag or precision
 483:Core/Src/SEGGER_RTT_printf.c **** *        Supported conversion specifiers:
 484:Core/Src/SEGGER_RTT_printf.c **** *          c: Print the argument as one char
 485:Core/Src/SEGGER_RTT_printf.c **** *          d: Print the argument as a signed integer
 486:Core/Src/SEGGER_RTT_printf.c **** *          u: Print the argument as an unsigned integer
ARM GAS  /var/folders/lp/x54gwt890xv47sdkqj1k04q40000gn/T//ccDNNL7g.s 			page 32


 487:Core/Src/SEGGER_RTT_printf.c **** *          x: Print the argument as an hexadecimal integer
 488:Core/Src/SEGGER_RTT_printf.c **** *          s: Print the string pointed to by the argument
 489:Core/Src/SEGGER_RTT_printf.c **** *          p: Print the argument as an 8-digit hexadecimal integer. (Argument shall be a pointer to
 490:Core/Src/SEGGER_RTT_printf.c **** */
 491:Core/Src/SEGGER_RTT_printf.c **** int SEGGER_RTT_printf(unsigned BufferIndex, const char * sFormat, ...) {
 1138              		.loc 1 491 72 view -0
 1139              		.cfi_startproc
 1140              		@ args = 4, pretend = 12, frame = 8
 1141              		@ frame_needed = 0, uses_anonymous_args = 1
 1142              		.loc 1 491 72 is_stmt 0 view .LVU368
 1143 0000 0EB4     		push	{r1, r2, r3}
 1144              		.cfi_def_cfa_offset 12
 1145              		.cfi_offset 1, -12
 1146              		.cfi_offset 2, -8
 1147              		.cfi_offset 3, -4
 1148 0002 00B5     		push	{lr}
 1149              		.cfi_def_cfa_offset 16
 1150              		.cfi_offset 14, -16
 1151 0004 82B0     		sub	sp, sp, #8
 1152              		.cfi_def_cfa_offset 24
 1153 0006 03AB     		add	r3, sp, #12
 1154 0008 53F8041B 		ldr	r1, [r3], #4
 492:Core/Src/SEGGER_RTT_printf.c ****   int r;
 1155              		.loc 1 492 3 is_stmt 1 view .LVU369
 493:Core/Src/SEGGER_RTT_printf.c ****   va_list ParamList;
 1156              		.loc 1 493 3 view .LVU370
 494:Core/Src/SEGGER_RTT_printf.c **** 
 495:Core/Src/SEGGER_RTT_printf.c ****   va_start(ParamList, sFormat);
 1157              		.loc 1 495 3 view .LVU371
 1158 000c 0193     		str	r3, [sp, #4]
 496:Core/Src/SEGGER_RTT_printf.c ****   r = SEGGER_RTT_vprintf(BufferIndex, sFormat, &ParamList);
 1159              		.loc 1 496 3 view .LVU372
 1160              		.loc 1 496 7 is_stmt 0 view .LVU373
 1161 000e 01AA     		add	r2, sp, #4
 1162 0010 FFF7FEFF 		bl	SEGGER_RTT_vprintf
 1163              	.LVL138:
 497:Core/Src/SEGGER_RTT_printf.c ****   va_end(ParamList);
 1164              		.loc 1 497 3 is_stmt 1 view .LVU374
 498:Core/Src/SEGGER_RTT_printf.c ****   return r;
 1165              		.loc 1 498 3 view .LVU375
 499:Core/Src/SEGGER_RTT_printf.c **** }
 1166              		.loc 1 499 1 is_stmt 0 view .LVU376
 1167 0014 02B0     		add	sp, sp, #8
 1168              		.cfi_def_cfa_offset 16
 1169              		@ sp needed
 1170 0016 5DF804EB 		ldr	lr, [sp], #4
 1171              		.cfi_restore 14
 1172              		.cfi_def_cfa_offset 12
 1173 001a 03B0     		add	sp, sp, #12
 1174              		.cfi_restore 3
 1175              		.cfi_restore 2
 1176              		.cfi_restore 1
 1177              		.cfi_def_cfa_offset 0
 1178 001c 7047     		bx	lr
 1179              		.cfi_endproc
 1180              	.LFE4:
 1182              		.section	.rodata._aV2C.0,"a"
ARM GAS  /var/folders/lp/x54gwt890xv47sdkqj1k04q40000gn/T//ccDNNL7g.s 			page 33


 1183              		.align	2
 1186              	_aV2C.0:
 1187 0000 30313233 		.ascii	"0123456789ABCDEF"
 1187      34353637 
 1187      38394142 
 1187      43444546 
 1188              		.text
 1189              	.Letext0:
 1190              		.file 2 "/Users/jr/Library/Application Support/Code/User/globalStorage/bmd.stm32-for-vscode/@xpack
 1191              		.file 3 "<built-in>"
 1192              		.file 4 "Core/Inc/SEGGER_RTT.h"
ARM GAS  /var/folders/lp/x54gwt890xv47sdkqj1k04q40000gn/T//ccDNNL7g.s 			page 34


DEFINED SYMBOLS
                            *ABS*:00000000 SEGGER_RTT_printf.c
/var/folders/lp/x54gwt890xv47sdkqj1k04q40000gn/T//ccDNNL7g.s:21     .text._StoreChar:00000000 $t
/var/folders/lp/x54gwt890xv47sdkqj1k04q40000gn/T//ccDNNL7g.s:26     .text._StoreChar:00000000 _StoreChar
/var/folders/lp/x54gwt890xv47sdkqj1k04q40000gn/T//ccDNNL7g.s:112    .text._PrintUnsigned:00000000 $t
/var/folders/lp/x54gwt890xv47sdkqj1k04q40000gn/T//ccDNNL7g.s:117    .text._PrintUnsigned:00000000 _PrintUnsigned
/var/folders/lp/x54gwt890xv47sdkqj1k04q40000gn/T//ccDNNL7g.s:342    .text._PrintUnsigned:000000dc $d
/var/folders/lp/x54gwt890xv47sdkqj1k04q40000gn/T//ccDNNL7g.s:1186   .rodata._aV2C.0:00000000 _aV2C.0
/var/folders/lp/x54gwt890xv47sdkqj1k04q40000gn/T//ccDNNL7g.s:347    .text._PrintInt:00000000 $t
/var/folders/lp/x54gwt890xv47sdkqj1k04q40000gn/T//ccDNNL7g.s:352    .text._PrintInt:00000000 _PrintInt
/var/folders/lp/x54gwt890xv47sdkqj1k04q40000gn/T//ccDNNL7g.s:576    .text.SEGGER_RTT_vprintf:00000000 $t
/var/folders/lp/x54gwt890xv47sdkqj1k04q40000gn/T//ccDNNL7g.s:582    .text.SEGGER_RTT_vprintf:00000000 SEGGER_RTT_vprintf
/var/folders/lp/x54gwt890xv47sdkqj1k04q40000gn/T//ccDNNL7g.s:706    .text.SEGGER_RTT_vprintf:00000054 $d
/var/folders/lp/x54gwt890xv47sdkqj1k04q40000gn/T//ccDNNL7g.s:721    .text.SEGGER_RTT_vprintf:0000008c $t
/var/folders/lp/x54gwt890xv47sdkqj1k04q40000gn/T//ccDNNL7g.s:845    .text.SEGGER_RTT_vprintf:000000fc $d
/var/folders/lp/x54gwt890xv47sdkqj1k04q40000gn/T//ccDNNL7g.s:1129   .text.SEGGER_RTT_printf:00000000 $t
/var/folders/lp/x54gwt890xv47sdkqj1k04q40000gn/T//ccDNNL7g.s:1135   .text.SEGGER_RTT_printf:00000000 SEGGER_RTT_printf
/var/folders/lp/x54gwt890xv47sdkqj1k04q40000gn/T//ccDNNL7g.s:1183   .rodata._aV2C.0:00000000 $d
/var/folders/lp/x54gwt890xv47sdkqj1k04q40000gn/T//ccDNNL7g.s:878    .text.SEGGER_RTT_vprintf:0000011d $d
/var/folders/lp/x54gwt890xv47sdkqj1k04q40000gn/T//ccDNNL7g.s:878    .text.SEGGER_RTT_vprintf:0000011e $t

UNDEFINED SYMBOLS
SEGGER_RTT_Write
