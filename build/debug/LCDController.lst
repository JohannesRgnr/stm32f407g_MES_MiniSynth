ARM GAS  /var/folders/lp/x54gwt890xv47sdkqj1k04q40000gn/T//ccUpJ27k.s 			page 1


   1              		.cpu cortex-m4
   2              		.arch armv7e-m
   3              		.fpu fpv4-sp-d16
   4              		.eabi_attribute 27, 1
   5              		.eabi_attribute 28, 1
   6              		.eabi_attribute 20, 1
   7              		.eabi_attribute 21, 1
   8              		.eabi_attribute 23, 3
   9              		.eabi_attribute 24, 1
  10              		.eabi_attribute 25, 1
  11              		.eabi_attribute 26, 1
  12              		.eabi_attribute 30, 1
  13              		.eabi_attribute 34, 1
  14              		.eabi_attribute 18, 4
  15              		.file	"LCDController.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.file 1 "Core/Src/LCDController.c"
  20              		.section	.text.disp_flush,"ax",%progbits
  21              		.align	1
  22              		.syntax unified
  23              		.thumb
  24              		.thumb_func
  26              	disp_flush:
  27              	.LVL0:
  28              	.LFB450:
   1:Core/Src/LCDController.c **** /**
   2:Core/Src/LCDController.c ****  * @file lv_port_disp_templ.c
   3:Core/Src/LCDController.c ****  *
   4:Core/Src/LCDController.c ****  */
   5:Core/Src/LCDController.c **** 
   6:Core/Src/LCDController.c **** 
   7:Core/Src/LCDController.c **** 
   8:Core/Src/LCDController.c **** /*********************
   9:Core/Src/LCDController.c ****  *      INCLUDES
  10:Core/Src/LCDController.c ****  *********************/
  11:Core/Src/LCDController.c **** #include "LCDController.h"
  12:Core/Src/LCDController.c **** #include "st7789v.h"
  13:Core/Src/LCDController.c **** #include "main.h"
  14:Core/Src/LCDController.c **** #include <stdbool.h>
  15:Core/Src/LCDController.c **** 
  16:Core/Src/LCDController.c **** /*********************
  17:Core/Src/LCDController.c ****  *      DEFINES
  18:Core/Src/LCDController.c ****  *********************/
  19:Core/Src/LCDController.c **** #ifndef MY_DISP_HOR_RES
  20:Core/Src/LCDController.c ****     #warning Please define or replace the macro MY_DISP_HOR_RES with the actual screen width, defau
  21:Core/Src/LCDController.c ****     #define MY_DISP_HOR_RES    320
  22:Core/Src/LCDController.c **** #endif
  23:Core/Src/LCDController.c **** 
  24:Core/Src/LCDController.c **** #ifndef MY_DISP_VER_RES
  25:Core/Src/LCDController.c ****     #warning Please define or replace the macro MY_DISP_HOR_RES with the actual screen height, defa
  26:Core/Src/LCDController.c ****     #define MY_DISP_VER_RES    240
  27:Core/Src/LCDController.c **** #endif
  28:Core/Src/LCDController.c **** 
  29:Core/Src/LCDController.c **** /**********************
  30:Core/Src/LCDController.c ****  *      TYPEDEFS
ARM GAS  /var/folders/lp/x54gwt890xv47sdkqj1k04q40000gn/T//ccUpJ27k.s 			page 2


  31:Core/Src/LCDController.c ****  **********************/
  32:Core/Src/LCDController.c **** 
  33:Core/Src/LCDController.c **** /**********************
  34:Core/Src/LCDController.c ****  *  STATIC PROTOTYPES
  35:Core/Src/LCDController.c ****  **********************/
  36:Core/Src/LCDController.c **** static void disp_init(void);
  37:Core/Src/LCDController.c **** 
  38:Core/Src/LCDController.c **** static void disp_flush(lv_disp_drv_t * disp_drv, const lv_area_t * area, lv_color_t * color_p);
  39:Core/Src/LCDController.c **** 
  40:Core/Src/LCDController.c **** 
  41:Core/Src/LCDController.c **** 
  42:Core/Src/LCDController.c **** 
  43:Core/Src/LCDController.c **** /**********************
  44:Core/Src/LCDController.c ****  *  STATIC VARIABLES
  45:Core/Src/LCDController.c ****  **********************/
  46:Core/Src/LCDController.c **** static lv_disp_drv_t disp_drv;    
  47:Core/Src/LCDController.c **** /**********************
  48:Core/Src/LCDController.c ****  *      MACROS
  49:Core/Src/LCDController.c ****  **********************/
  50:Core/Src/LCDController.c **** 
  51:Core/Src/LCDController.c **** /**********************
  52:Core/Src/LCDController.c ****  *   GLOBAL FUNCTIONS
  53:Core/Src/LCDController.c ****  **********************/
  54:Core/Src/LCDController.c **** void lv_port_disp_init(void)
  55:Core/Src/LCDController.c **** {
  56:Core/Src/LCDController.c ****     /*-------------------------
  57:Core/Src/LCDController.c ****      * Initialize your display
  58:Core/Src/LCDController.c ****      * -----------------------*/
  59:Core/Src/LCDController.c ****     disp_init();
  60:Core/Src/LCDController.c **** 
  61:Core/Src/LCDController.c ****     /*-----------------------------
  62:Core/Src/LCDController.c ****      * Create a buffer for drawing
  63:Core/Src/LCDController.c ****      *----------------------------*/
  64:Core/Src/LCDController.c **** 
  65:Core/Src/LCDController.c ****     /**
  66:Core/Src/LCDController.c ****      * LVGL requires a buffer where it internally draws the widgets.
  67:Core/Src/LCDController.c ****      * Later this buffer will passed to your display driver's `flush_cb` to copy its content to you
  68:Core/Src/LCDController.c ****      * The buffer has to be greater than 1 display row
  69:Core/Src/LCDController.c ****      *
  70:Core/Src/LCDController.c ****      * There are 3 buffering configurations:
  71:Core/Src/LCDController.c ****      * 1. Create ONE buffer:
  72:Core/Src/LCDController.c ****      *      LVGL will draw the display's content here and writes it to your display
  73:Core/Src/LCDController.c ****      *
  74:Core/Src/LCDController.c ****      * 2. Create TWO buffer:
  75:Core/Src/LCDController.c ****      *      LVGL will draw the display's content to a buffer and writes it your display.
  76:Core/Src/LCDController.c ****      *      You should use DMA to write the buffer's content to the display.
  77:Core/Src/LCDController.c ****      *      It will enable LVGL to draw the next part of the screen to the other buffer while
  78:Core/Src/LCDController.c ****      *      the data is being sent form the first buffer. It makes rendering and flushing parallel.
  79:Core/Src/LCDController.c ****      *
  80:Core/Src/LCDController.c ****      * 3. Double buffering
  81:Core/Src/LCDController.c ****      *      Set 2 screens sized buffers and set disp_drv.full_refresh = 1.
  82:Core/Src/LCDController.c ****      *      This way LVGL will always provide the whole rendered screen in `flush_cb`
  83:Core/Src/LCDController.c ****      *      and you only need to change the frame buffer's address.
  84:Core/Src/LCDController.c ****      */
  85:Core/Src/LCDController.c **** 
  86:Core/Src/LCDController.c ****     /* Example for 1) */
  87:Core/Src/LCDController.c ****     // static lv_disp_draw_buf_t draw_buf_dsc_1;
ARM GAS  /var/folders/lp/x54gwt890xv47sdkqj1k04q40000gn/T//ccUpJ27k.s 			page 3


  88:Core/Src/LCDController.c ****     // static lv_color_t buf_1[MY_DISP_HOR_RES * 10];                          /*A buffer for 10 ro
  89:Core/Src/LCDController.c ****     // lv_disp_draw_buf_init(&draw_buf_dsc_1, buf_1, NULL, MY_DISP_HOR_RES * 10);   /*Initialize th
  90:Core/Src/LCDController.c **** 
  91:Core/Src/LCDController.c ****     // /* Example for 2) */
  92:Core/Src/LCDController.c ****     static lv_disp_draw_buf_t draw_buf_dsc_2;
  93:Core/Src/LCDController.c ****     static lv_color_t buf_2_1[MY_DISP_HOR_RES * 10];                        /*A buffer for 10 rows*
  94:Core/Src/LCDController.c ****     static lv_color_t buf_2_2[MY_DISP_HOR_RES * 10];                        /*An other buffer for 1
  95:Core/Src/LCDController.c ****     lv_disp_draw_buf_init(&draw_buf_dsc_2, buf_2_1, buf_2_2, MY_DISP_HOR_RES * 10);   /*Initialize 
  96:Core/Src/LCDController.c **** 
  97:Core/Src/LCDController.c ****     /* Example for 3) also set disp_drv.full_refresh = 1 below*/
  98:Core/Src/LCDController.c ****     // static lv_disp_draw_buf_t draw_buf_dsc_3;
  99:Core/Src/LCDController.c ****     // static lv_color_t buf_3_1[MY_DISP_HOR_RES * MY_DISP_VER_RES];            /*A screen sized bu
 100:Core/Src/LCDController.c ****     // static lv_color_t buf_3_2[MY_DISP_HOR_RES * MY_DISP_VER_RES];            /*Another screen si
 101:Core/Src/LCDController.c ****     // lv_disp_draw_buf_init(&draw_buf_dsc_3, buf_3_1, buf_3_2,
 102:Core/Src/LCDController.c ****     //                       MY_DISP_VER_RES * LV_VER_RES_MAX);   /*Initialize the display buffer*/
 103:Core/Src/LCDController.c **** 
 104:Core/Src/LCDController.c ****     /*-----------------------------------
 105:Core/Src/LCDController.c ****      * Register the display in LVGL
 106:Core/Src/LCDController.c ****      *----------------------------------*/
 107:Core/Src/LCDController.c **** 
 108:Core/Src/LCDController.c ****     // static lv_disp_drv_t disp_drv;                         /*Descriptor of a display driver*/
 109:Core/Src/LCDController.c ****     lv_disp_drv_init(&disp_drv);                    /*Basic initialization*/
 110:Core/Src/LCDController.c **** 
 111:Core/Src/LCDController.c ****     /*Set up the functions to access to your display*/
 112:Core/Src/LCDController.c **** 
 113:Core/Src/LCDController.c ****     /*Set the resolution of the display*/
 114:Core/Src/LCDController.c ****     disp_drv.hor_res = MY_DISP_HOR_RES;
 115:Core/Src/LCDController.c ****     disp_drv.ver_res = MY_DISP_VER_RES;
 116:Core/Src/LCDController.c **** 
 117:Core/Src/LCDController.c ****     /*Used to copy the buffer's content to the display*/
 118:Core/Src/LCDController.c ****     disp_drv.flush_cb = disp_flush;
 119:Core/Src/LCDController.c **** 
 120:Core/Src/LCDController.c ****     /*Set a display buffer*/
 121:Core/Src/LCDController.c ****     disp_drv.draw_buf = &draw_buf_dsc_2;
 122:Core/Src/LCDController.c **** 
 123:Core/Src/LCDController.c ****     /*Required for Example 3)*/
 124:Core/Src/LCDController.c ****     //disp_drv.full_refresh = 1;
 125:Core/Src/LCDController.c **** 
 126:Core/Src/LCDController.c ****     /* Fill a memory array with a color if you have GPU.
 127:Core/Src/LCDController.c ****      * Note that, in lv_conf.h you can enable GPUs that has built-in support in LVGL.
 128:Core/Src/LCDController.c ****      * But if you have a different GPU you can use with this callback.*/
 129:Core/Src/LCDController.c ****     //disp_drv.gpu_fill_cb = gpu_fill;
 130:Core/Src/LCDController.c **** 
 131:Core/Src/LCDController.c ****     /*Finally register the driver*/
 132:Core/Src/LCDController.c ****     lv_disp_drv_register(&disp_drv);
 133:Core/Src/LCDController.c **** 
 134:Core/Src/LCDController.c ****     
 135:Core/Src/LCDController.c **** }
 136:Core/Src/LCDController.c **** 
 137:Core/Src/LCDController.c **** /**********************
 138:Core/Src/LCDController.c ****  *   STATIC FUNCTIONS
 139:Core/Src/LCDController.c ****  **********************/
 140:Core/Src/LCDController.c **** 
 141:Core/Src/LCDController.c **** /*Initialize your display and the required peripherals.*/
 142:Core/Src/LCDController.c **** static void disp_init(void)
 143:Core/Src/LCDController.c **** {
 144:Core/Src/LCDController.c ****     ST7789V_Init();
ARM GAS  /var/folders/lp/x54gwt890xv47sdkqj1k04q40000gn/T//ccUpJ27k.s 			page 4


 145:Core/Src/LCDController.c **** }
 146:Core/Src/LCDController.c **** 
 147:Core/Src/LCDController.c **** volatile bool disp_flush_enabled = true;
 148:Core/Src/LCDController.c **** 
 149:Core/Src/LCDController.c **** /* Enable updating the screen (the flushing process) when disp_flush() is called by LVGL
 150:Core/Src/LCDController.c ****  */
 151:Core/Src/LCDController.c **** void disp_enable_update(void)
 152:Core/Src/LCDController.c **** {
 153:Core/Src/LCDController.c ****     disp_flush_enabled = true;
 154:Core/Src/LCDController.c **** }
 155:Core/Src/LCDController.c **** 
 156:Core/Src/LCDController.c **** /* Disable updating the screen (the flushing process) when disp_flush() is called by LVGL
 157:Core/Src/LCDController.c ****  */
 158:Core/Src/LCDController.c **** void disp_disable_update(void)
 159:Core/Src/LCDController.c **** {
 160:Core/Src/LCDController.c ****     disp_flush_enabled = false;
 161:Core/Src/LCDController.c **** }
 162:Core/Src/LCDController.c **** 
 163:Core/Src/LCDController.c **** /*Flush the content of the internal buffer the specific area on the display
 164:Core/Src/LCDController.c ****  *You can use DMA or any hardware acceleration to do this operation in the background but
 165:Core/Src/LCDController.c ****  *'lv_disp_flush_ready()' has to be called when finished.*/
 166:Core/Src/LCDController.c **** static void disp_flush(lv_disp_drv_t * disp_drv, const lv_area_t * area, lv_color_t * color_p)
 167:Core/Src/LCDController.c **** {
  29              		.loc 1 167 1 view -0
  30              		.cfi_startproc
  31              		@ args = 0, pretend = 0, frame = 0
  32              		@ frame_needed = 0, uses_anonymous_args = 0
  33              		.loc 1 167 1 is_stmt 0 view .LVU1
  34 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
  35              		.cfi_def_cfa_offset 24
  36              		.cfi_offset 3, -24
  37              		.cfi_offset 4, -20
  38              		.cfi_offset 5, -16
  39              		.cfi_offset 6, -12
  40              		.cfi_offset 7, -8
  41              		.cfi_offset 14, -4
  42 0002 1546     		mov	r5, r2
 168:Core/Src/LCDController.c ****     //ST7789V_Select();
 169:Core/Src/LCDController.c ****     int height = area->y2 - area->y1 + 1;
  43              		.loc 1 169 5 is_stmt 1 view .LVU2
  44              		.loc 1 169 22 is_stmt 0 view .LVU3
  45 0004 B1F90630 		ldrsh	r3, [r1, #6]
  46              		.loc 1 169 33 view .LVU4
  47 0008 B1F90270 		ldrsh	r7, [r1, #2]
  48              		.loc 1 169 27 view .LVU5
  49 000c DE1B     		subs	r6, r3, r7
  50              		.loc 1 169 9 view .LVU6
  51 000e 0136     		adds	r6, r6, #1
  52              	.LVL1:
 170:Core/Src/LCDController.c **** 	int width = area->x2 - area->x1 + 1;
  53              		.loc 1 170 2 is_stmt 1 view .LVU7
  54              		.loc 1 170 18 is_stmt 0 view .LVU8
  55 0010 B1F90420 		ldrsh	r2, [r1, #4]
  56              	.LVL2:
  57              		.loc 1 170 29 view .LVU9
  58 0014 B1F90000 		ldrsh	r0, [r1]
  59              	.LVL3:
ARM GAS  /var/folders/lp/x54gwt890xv47sdkqj1k04q40000gn/T//ccUpJ27k.s 			page 5


  60              		.loc 1 170 23 view .LVU10
  61 0018 141A     		subs	r4, r2, r0
  62              		.loc 1 170 6 view .LVU11
  63 001a 0134     		adds	r4, r4, #1
  64              	.LVL4:
 171:Core/Src/LCDController.c **** 
 172:Core/Src/LCDController.c **** 	
 173:Core/Src/LCDController.c **** 	ST7789V_SetAddressWindow(area->x1, area->y1, area->x2, area->y2);
  65              		.loc 1 173 2 is_stmt 1 view .LVU12
  66 001c 9BB2     		uxth	r3, r3
  67 001e 92B2     		uxth	r2, r2
  68 0020 B9B2     		uxth	r1, r7
  69              	.LVL5:
  70              		.loc 1 173 2 is_stmt 0 view .LVU13
  71 0022 80B2     		uxth	r0, r0
  72 0024 FFF7FEFF 		bl	ST7789V_SetAddressWindow
  73              	.LVL6:
 174:Core/Src/LCDController.c **** 
 175:Core/Src/LCDController.c ****     ST7789V_Select();
  74              		.loc 1 175 5 is_stmt 1 view .LVU14
  75 0028 0F4F     		ldr	r7, .L4
  76 002a 0022     		movs	r2, #0
  77 002c 0421     		movs	r1, #4
  78 002e 3846     		mov	r0, r7
  79 0030 FFF7FEFF 		bl	HAL_GPIO_WritePin
  80              	.LVL7:
 176:Core/Src/LCDController.c ****     ST7789V_DC_Set();
  81              		.loc 1 176 5 view .LVU15
  82 0034 0122     		movs	r2, #1
  83 0036 0221     		movs	r1, #2
  84 0038 3846     		mov	r0, r7
  85 003a FFF7FEFF 		bl	HAL_GPIO_WritePin
  86              	.LVL8:
 177:Core/Src/LCDController.c ****     
 178:Core/Src/LCDController.c ****     //HAL_SPI_Transmit(&ST7789V_SPI_PORT, (uint8_t *)color_p , width*height*2, 10);
 179:Core/Src/LCDController.c ****     HAL_SPI_Transmit_DMA(&ST7789V_SPI_PORT, (uint8_t *)color_p , width*height*2);
  87              		.loc 1 179 5 view .LVU16
  88 003e 14FB06F4 		smulbb	r4, r4, r6
  89              	.LVL9:
  90              		.loc 1 179 5 is_stmt 0 view .LVU17
  91 0042 6400     		lsls	r4, r4, #1
  92 0044 A2B2     		uxth	r2, r4
  93 0046 2946     		mov	r1, r5
  94 0048 0848     		ldr	r0, .L4+4
  95 004a FFF7FEFF 		bl	HAL_SPI_Transmit_DMA
  96              	.LVL10:
 180:Core/Src/LCDController.c ****     while (ST7789V_SPI_PORT.hdmatx->State != HAL_DMA_STATE_READY){}
  97              		.loc 1 180 5 is_stmt 1 view .LVU18
  98              	.L2:
  99              		.loc 1 180 67 discriminator 1 view .LVU19
 100              		.loc 1 180 43 discriminator 1 view .LVU20
 101              		.loc 1 180 28 is_stmt 0 discriminator 1 view .LVU21
 102 004e 074B     		ldr	r3, .L4+4
 103 0050 9B6C     		ldr	r3, [r3, #72]
 104              		.loc 1 180 35 discriminator 1 view .LVU22
 105 0052 93F83530 		ldrb	r3, [r3, #53]	@ zero_extendqisi2
 106 0056 DBB2     		uxtb	r3, r3
ARM GAS  /var/folders/lp/x54gwt890xv47sdkqj1k04q40000gn/T//ccUpJ27k.s 			page 6


 107              		.loc 1 180 43 discriminator 1 view .LVU23
 108 0058 012B     		cmp	r3, #1
 109 005a F8D1     		bne	.L2
 181:Core/Src/LCDController.c ****     ST7789V_UnSelect();
 110              		.loc 1 181 5 is_stmt 1 view .LVU24
 111 005c 0122     		movs	r2, #1
 112 005e 0421     		movs	r1, #4
 113 0060 0148     		ldr	r0, .L4
 114 0062 FFF7FEFF 		bl	HAL_GPIO_WritePin
 115              	.LVL11:
 182:Core/Src/LCDController.c ****                 
 183:Core/Src/LCDController.c ****     /*Inform the graphics library that you are ready with the flushing*/
 184:Core/Src/LCDController.c ****     //lv_disp_flush_ready(disp_drv);
 185:Core/Src/LCDController.c **** }
 116              		.loc 1 185 1 is_stmt 0 view .LVU25
 117 0066 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 118              	.LVL12:
 119              	.L5:
 120              		.loc 1 185 1 view .LVU26
 121              		.align	2
 122              	.L4:
 123 0068 00000240 		.word	1073872896
 124 006c 00000000 		.word	hspi1
 125              		.cfi_endproc
 126              	.LFE450:
 128              		.section	.text.disp_init,"ax",%progbits
 129              		.align	1
 130              		.syntax unified
 131              		.thumb
 132              		.thumb_func
 134              	disp_init:
 135              	.LFB447:
 143:Core/Src/LCDController.c ****     ST7789V_Init();
 136              		.loc 1 143 1 is_stmt 1 view -0
 137              		.cfi_startproc
 138              		@ args = 0, pretend = 0, frame = 0
 139              		@ frame_needed = 0, uses_anonymous_args = 0
 140 0000 08B5     		push	{r3, lr}
 141              		.cfi_def_cfa_offset 8
 142              		.cfi_offset 3, -8
 143              		.cfi_offset 14, -4
 144:Core/Src/LCDController.c **** }
 144              		.loc 1 144 5 view .LVU28
 145 0002 FFF7FEFF 		bl	ST7789V_Init
 146              	.LVL13:
 145:Core/Src/LCDController.c **** 
 147              		.loc 1 145 1 is_stmt 0 view .LVU29
 148 0006 08BD     		pop	{r3, pc}
 149              		.cfi_endproc
 150              	.LFE447:
 152              		.section	.text.lv_port_disp_init,"ax",%progbits
 153              		.align	1
 154              		.global	lv_port_disp_init
 155              		.syntax unified
 156              		.thumb
 157              		.thumb_func
 159              	lv_port_disp_init:
ARM GAS  /var/folders/lp/x54gwt890xv47sdkqj1k04q40000gn/T//ccUpJ27k.s 			page 7


 160              	.LFB446:
  55:Core/Src/LCDController.c ****     /*-------------------------
 161              		.loc 1 55 1 is_stmt 1 view -0
 162              		.cfi_startproc
 163              		@ args = 0, pretend = 0, frame = 0
 164              		@ frame_needed = 0, uses_anonymous_args = 0
 165 0000 38B5     		push	{r3, r4, r5, lr}
 166              		.cfi_def_cfa_offset 16
 167              		.cfi_offset 3, -16
 168              		.cfi_offset 4, -12
 169              		.cfi_offset 5, -8
 170              		.cfi_offset 14, -4
  59:Core/Src/LCDController.c **** 
 171              		.loc 1 59 5 view .LVU31
 172 0002 FFF7FEFF 		bl	disp_init
 173              	.LVL14:
  92:Core/Src/LCDController.c ****     static lv_color_t buf_2_1[MY_DISP_HOR_RES * 10];                        /*A buffer for 10 rows*
 174              		.loc 1 92 5 view .LVU32
  93:Core/Src/LCDController.c ****     static lv_color_t buf_2_2[MY_DISP_HOR_RES * 10];                        /*An other buffer for 1
 175              		.loc 1 93 5 view .LVU33
  94:Core/Src/LCDController.c ****     lv_disp_draw_buf_init(&draw_buf_dsc_2, buf_2_1, buf_2_2, MY_DISP_HOR_RES * 10);   /*Initialize 
 176              		.loc 1 94 5 view .LVU34
  95:Core/Src/LCDController.c **** 
 177              		.loc 1 95 5 view .LVU35
 178 0006 0C4D     		ldr	r5, .L10
 179 0008 4FF44863 		mov	r3, #3200
 180 000c 0B4A     		ldr	r2, .L10+4
 181 000e 0C49     		ldr	r1, .L10+8
 182 0010 2846     		mov	r0, r5
 183 0012 FFF7FEFF 		bl	lv_disp_draw_buf_init
 184              	.LVL15:
 109:Core/Src/LCDController.c **** 
 185              		.loc 1 109 5 view .LVU36
 186 0016 0B4C     		ldr	r4, .L10+12
 187 0018 2046     		mov	r0, r4
 188 001a FFF7FEFF 		bl	lv_disp_drv_init
 189              	.LVL16:
 114:Core/Src/LCDController.c ****     disp_drv.ver_res = MY_DISP_VER_RES;
 190              		.loc 1 114 5 view .LVU37
 114:Core/Src/LCDController.c ****     disp_drv.ver_res = MY_DISP_VER_RES;
 191              		.loc 1 114 22 is_stmt 0 view .LVU38
 192 001e 4FF4A073 		mov	r3, #320
 193 0022 2380     		strh	r3, [r4]	@ movhi
 115:Core/Src/LCDController.c **** 
 194              		.loc 1 115 5 is_stmt 1 view .LVU39
 115:Core/Src/LCDController.c **** 
 195              		.loc 1 115 22 is_stmt 0 view .LVU40
 196 0024 F023     		movs	r3, #240
 197 0026 6380     		strh	r3, [r4, #2]	@ movhi
 118:Core/Src/LCDController.c **** 
 198              		.loc 1 118 5 is_stmt 1 view .LVU41
 118:Core/Src/LCDController.c **** 
 199              		.loc 1 118 23 is_stmt 0 view .LVU42
 200 0028 074B     		ldr	r3, .L10+16
 201 002a 6361     		str	r3, [r4, #20]
 121:Core/Src/LCDController.c **** 
 202              		.loc 1 121 5 is_stmt 1 view .LVU43
ARM GAS  /var/folders/lp/x54gwt890xv47sdkqj1k04q40000gn/T//ccUpJ27k.s 			page 8


 121:Core/Src/LCDController.c **** 
 203              		.loc 1 121 23 is_stmt 0 view .LVU44
 204 002c E560     		str	r5, [r4, #12]
 132:Core/Src/LCDController.c **** 
 205              		.loc 1 132 5 is_stmt 1 view .LVU45
 206 002e 2046     		mov	r0, r4
 207 0030 FFF7FEFF 		bl	lv_disp_drv_register
 208              	.LVL17:
 135:Core/Src/LCDController.c **** 
 209              		.loc 1 135 1 is_stmt 0 view .LVU46
 210 0034 38BD     		pop	{r3, r4, r5, pc}
 211              	.L11:
 212 0036 00BF     		.align	2
 213              	.L10:
 214 0038 00000000 		.word	draw_buf_dsc_2.2
 215 003c 00000000 		.word	buf_2_2.0
 216 0040 00000000 		.word	buf_2_1.1
 217 0044 00000000 		.word	disp_drv
 218 0048 00000000 		.word	disp_flush
 219              		.cfi_endproc
 220              	.LFE446:
 222              		.section	.text.disp_enable_update,"ax",%progbits
 223              		.align	1
 224              		.global	disp_enable_update
 225              		.syntax unified
 226              		.thumb
 227              		.thumb_func
 229              	disp_enable_update:
 230              	.LFB448:
 152:Core/Src/LCDController.c ****     disp_flush_enabled = true;
 231              		.loc 1 152 1 is_stmt 1 view -0
 232              		.cfi_startproc
 233              		@ args = 0, pretend = 0, frame = 0
 234              		@ frame_needed = 0, uses_anonymous_args = 0
 235              		@ link register save eliminated.
 153:Core/Src/LCDController.c **** }
 236              		.loc 1 153 5 view .LVU48
 153:Core/Src/LCDController.c **** }
 237              		.loc 1 153 24 is_stmt 0 view .LVU49
 238 0000 014B     		ldr	r3, .L13
 239 0002 0122     		movs	r2, #1
 240 0004 1A70     		strb	r2, [r3]
 154:Core/Src/LCDController.c **** 
 241              		.loc 1 154 1 view .LVU50
 242 0006 7047     		bx	lr
 243              	.L14:
 244              		.align	2
 245              	.L13:
 246 0008 00000000 		.word	disp_flush_enabled
 247              		.cfi_endproc
 248              	.LFE448:
 250              		.section	.text.disp_disable_update,"ax",%progbits
 251              		.align	1
 252              		.global	disp_disable_update
 253              		.syntax unified
 254              		.thumb
 255              		.thumb_func
ARM GAS  /var/folders/lp/x54gwt890xv47sdkqj1k04q40000gn/T//ccUpJ27k.s 			page 9


 257              	disp_disable_update:
 258              	.LFB449:
 159:Core/Src/LCDController.c ****     disp_flush_enabled = false;
 259              		.loc 1 159 1 is_stmt 1 view -0
 260              		.cfi_startproc
 261              		@ args = 0, pretend = 0, frame = 0
 262              		@ frame_needed = 0, uses_anonymous_args = 0
 263              		@ link register save eliminated.
 160:Core/Src/LCDController.c **** }
 264              		.loc 1 160 5 view .LVU52
 160:Core/Src/LCDController.c **** }
 265              		.loc 1 160 24 is_stmt 0 view .LVU53
 266 0000 014B     		ldr	r3, .L16
 267 0002 0022     		movs	r2, #0
 268 0004 1A70     		strb	r2, [r3]
 161:Core/Src/LCDController.c **** 
 269              		.loc 1 161 1 view .LVU54
 270 0006 7047     		bx	lr
 271              	.L17:
 272              		.align	2
 273              	.L16:
 274 0008 00000000 		.word	disp_flush_enabled
 275              		.cfi_endproc
 276              	.LFE449:
 278              		.section	.text.HAL_SPI_TxCpltCallback,"ax",%progbits
 279              		.align	1
 280              		.global	HAL_SPI_TxCpltCallback
 281              		.syntax unified
 282              		.thumb
 283              		.thumb_func
 285              	HAL_SPI_TxCpltCallback:
 286              	.LVL18:
 287              	.LFB451:
 186:Core/Src/LCDController.c **** 
 187:Core/Src/LCDController.c **** 
 188:Core/Src/LCDController.c **** void HAL_SPI_TxCpltCallback(SPI_HandleTypeDef *hspi)
 189:Core/Src/LCDController.c **** {
 288              		.loc 1 189 1 is_stmt 1 view -0
 289              		.cfi_startproc
 290              		@ args = 0, pretend = 0, frame = 0
 291              		@ frame_needed = 0, uses_anonymous_args = 0
 292              		.loc 1 189 1 is_stmt 0 view .LVU56
 293 0000 08B5     		push	{r3, lr}
 294              		.cfi_def_cfa_offset 8
 295              		.cfi_offset 3, -8
 296              		.cfi_offset 14, -4
 190:Core/Src/LCDController.c ****     lv_disp_flush_ready(&disp_drv);
 297              		.loc 1 190 5 is_stmt 1 view .LVU57
 298 0002 0248     		ldr	r0, .L20
 299              	.LVL19:
 300              		.loc 1 190 5 is_stmt 0 view .LVU58
 301 0004 FFF7FEFF 		bl	lv_disp_flush_ready
 302              	.LVL20:
 191:Core/Src/LCDController.c **** }
 303              		.loc 1 191 1 view .LVU59
 304 0008 08BD     		pop	{r3, pc}
 305              	.L21:
ARM GAS  /var/folders/lp/x54gwt890xv47sdkqj1k04q40000gn/T//ccUpJ27k.s 			page 10


 306 000a 00BF     		.align	2
 307              	.L20:
 308 000c 00000000 		.word	disp_drv
 309              		.cfi_endproc
 310              	.LFE451:
 312              		.section	.bss.buf_2_2.0,"aw",%nobits
 313              		.align	2
 316              	buf_2_2.0:
 317 0000 00000000 		.space	6400
 317      00000000 
 317      00000000 
 317      00000000 
 317      00000000 
 318              		.section	.bss.buf_2_1.1,"aw",%nobits
 319              		.align	2
 322              	buf_2_1.1:
 323 0000 00000000 		.space	6400
 323      00000000 
 323      00000000 
 323      00000000 
 323      00000000 
 324              		.section	.bss.draw_buf_dsc_2.2,"aw",%nobits
 325              		.align	2
 328              	draw_buf_dsc_2.2:
 329 0000 00000000 		.space	28
 329      00000000 
 329      00000000 
 329      00000000 
 329      00000000 
 330              		.global	disp_flush_enabled
 331              		.section	.data.disp_flush_enabled,"aw"
 334              	disp_flush_enabled:
 335 0000 01       		.byte	1
 336              		.section	.bss.disp_drv,"aw",%nobits
 337              		.align	2
 340              	disp_drv:
 341 0000 00000000 		.space	80
 341      00000000 
 341      00000000 
 341      00000000 
 341      00000000 
 342              		.text
 343              	.Letext0:
 344              		.file 2 "/Users/jr/Library/Application Support/Code/User/globalStorage/bmd.stm32-for-vscode/@xpack
 345              		.file 3 "/Users/jr/Library/Application Support/Code/User/globalStorage/bmd.stm32-for-vscode/@xpack
 346              		.file 4 "Drivers/lvgl/src/misc/lv_types.h"
 347              		.file 5 "Drivers/lvgl/src/misc/lv_timer.h"
 348              		.file 6 "/Users/jr/Library/Application Support/Code/User/globalStorage/bmd.stm32-for-vscode/@xpack
 349              		.file 7 "Drivers/lvgl/src/hal/../draw/../misc/../font/../misc/lv_area.h"
 350              		.file 8 "Drivers/lvgl/src/hal/../draw/../misc/../font/lv_font.h"
 351              		.file 9 "Drivers/lvgl/src/hal/../draw/../misc/lv_color.h"
 352              		.file 10 "Drivers/lvgl/src/hal/../draw/../misc/lv_txt.h"
 353              		.file 11 "Drivers/lvgl/src/hal/../draw/../misc/lv_bidi.h"
 354              		.file 12 "Drivers/lvgl/src/hal/../draw/../misc/lv_style.h"
 355              		.file 13 "Drivers/lvgl/src/hal/../draw/lv_img_buf.h"
 356              		.file 14 "Drivers/lvgl/src/core/lv_obj.h"
 357              		.file 15 "Drivers/lvgl/src/hal/../draw/lv_draw_rect.h"
ARM GAS  /var/folders/lp/x54gwt890xv47sdkqj1k04q40000gn/T//ccUpJ27k.s 			page 11


 358              		.file 16 "Drivers/lvgl/src/hal/../draw/lv_draw_label.h"
 359              		.file 17 "Drivers/lvgl/src/hal/../draw/lv_draw_img.h"
 360              		.file 18 "Drivers/lvgl/src/hal/../draw/lv_draw_line.h"
 361              		.file 19 "Drivers/lvgl/src/hal/../draw/lv_draw_arc.h"
 362              		.file 20 "Drivers/lvgl/src/hal/../draw/lv_draw_layer.h"
 363              		.file 21 "Drivers/lvgl/src/hal/../draw/lv_draw.h"
 364              		.file 22 "Drivers/lvgl/src/hal/../misc/lv_ll.h"
 365              		.file 23 "Drivers/lvgl/src/hal/lv_hal_disp.h"
 366              		.file 24 "Drivers/lvgl/src/core/lv_theme.h"
 367              		.file 25 "Drivers/lvgl/src/core/lv_group.h"
 368              		.file 26 "Drivers/lvgl/src/core/lv_obj_scroll.h"
 369              		.file 27 "Drivers/lvgl/src/core/lv_obj_style.h"
 370              		.file 28 "Drivers/lvgl/src/core/lv_obj_class.h"
 371              		.file 29 "Drivers/lvgl/src/core/lv_event.h"
 372              		.file 30 "Drivers/lvgl/src/widgets/lv_bar.h"
 373              		.file 31 "Drivers/lvgl/src/extra/widgets/imgbtn/lv_imgbtn.h"
 374              		.file 32 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/stm32f407xx.h"
 375              		.file 33 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_def.h"
 376              		.file 34 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_gpio.h"
 377              		.file 35 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_dma.h"
 378              		.file 36 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_spi.h"
 379              		.file 37 "Drivers/ST7789V/st7789v.h"
ARM GAS  /var/folders/lp/x54gwt890xv47sdkqj1k04q40000gn/T//ccUpJ27k.s 			page 12


DEFINED SYMBOLS
                            *ABS*:00000000 LCDController.c
/var/folders/lp/x54gwt890xv47sdkqj1k04q40000gn/T//ccUpJ27k.s:21     .text.disp_flush:00000000 $t
/var/folders/lp/x54gwt890xv47sdkqj1k04q40000gn/T//ccUpJ27k.s:26     .text.disp_flush:00000000 disp_flush
/var/folders/lp/x54gwt890xv47sdkqj1k04q40000gn/T//ccUpJ27k.s:123    .text.disp_flush:00000068 $d
/var/folders/lp/x54gwt890xv47sdkqj1k04q40000gn/T//ccUpJ27k.s:129    .text.disp_init:00000000 $t
/var/folders/lp/x54gwt890xv47sdkqj1k04q40000gn/T//ccUpJ27k.s:134    .text.disp_init:00000000 disp_init
/var/folders/lp/x54gwt890xv47sdkqj1k04q40000gn/T//ccUpJ27k.s:153    .text.lv_port_disp_init:00000000 $t
/var/folders/lp/x54gwt890xv47sdkqj1k04q40000gn/T//ccUpJ27k.s:159    .text.lv_port_disp_init:00000000 lv_port_disp_init
/var/folders/lp/x54gwt890xv47sdkqj1k04q40000gn/T//ccUpJ27k.s:214    .text.lv_port_disp_init:00000038 $d
/var/folders/lp/x54gwt890xv47sdkqj1k04q40000gn/T//ccUpJ27k.s:328    .bss.draw_buf_dsc_2.2:00000000 draw_buf_dsc_2.2
/var/folders/lp/x54gwt890xv47sdkqj1k04q40000gn/T//ccUpJ27k.s:316    .bss.buf_2_2.0:00000000 buf_2_2.0
/var/folders/lp/x54gwt890xv47sdkqj1k04q40000gn/T//ccUpJ27k.s:322    .bss.buf_2_1.1:00000000 buf_2_1.1
/var/folders/lp/x54gwt890xv47sdkqj1k04q40000gn/T//ccUpJ27k.s:340    .bss.disp_drv:00000000 disp_drv
/var/folders/lp/x54gwt890xv47sdkqj1k04q40000gn/T//ccUpJ27k.s:223    .text.disp_enable_update:00000000 $t
/var/folders/lp/x54gwt890xv47sdkqj1k04q40000gn/T//ccUpJ27k.s:229    .text.disp_enable_update:00000000 disp_enable_update
/var/folders/lp/x54gwt890xv47sdkqj1k04q40000gn/T//ccUpJ27k.s:246    .text.disp_enable_update:00000008 $d
/var/folders/lp/x54gwt890xv47sdkqj1k04q40000gn/T//ccUpJ27k.s:334    .data.disp_flush_enabled:00000000 disp_flush_enabled
/var/folders/lp/x54gwt890xv47sdkqj1k04q40000gn/T//ccUpJ27k.s:251    .text.disp_disable_update:00000000 $t
/var/folders/lp/x54gwt890xv47sdkqj1k04q40000gn/T//ccUpJ27k.s:257    .text.disp_disable_update:00000000 disp_disable_update
/var/folders/lp/x54gwt890xv47sdkqj1k04q40000gn/T//ccUpJ27k.s:274    .text.disp_disable_update:00000008 $d
/var/folders/lp/x54gwt890xv47sdkqj1k04q40000gn/T//ccUpJ27k.s:279    .text.HAL_SPI_TxCpltCallback:00000000 $t
/var/folders/lp/x54gwt890xv47sdkqj1k04q40000gn/T//ccUpJ27k.s:285    .text.HAL_SPI_TxCpltCallback:00000000 HAL_SPI_TxCpltCallback
/var/folders/lp/x54gwt890xv47sdkqj1k04q40000gn/T//ccUpJ27k.s:308    .text.HAL_SPI_TxCpltCallback:0000000c $d
/var/folders/lp/x54gwt890xv47sdkqj1k04q40000gn/T//ccUpJ27k.s:313    .bss.buf_2_2.0:00000000 $d
/var/folders/lp/x54gwt890xv47sdkqj1k04q40000gn/T//ccUpJ27k.s:319    .bss.buf_2_1.1:00000000 $d
/var/folders/lp/x54gwt890xv47sdkqj1k04q40000gn/T//ccUpJ27k.s:325    .bss.draw_buf_dsc_2.2:00000000 $d
/var/folders/lp/x54gwt890xv47sdkqj1k04q40000gn/T//ccUpJ27k.s:337    .bss.disp_drv:00000000 $d

UNDEFINED SYMBOLS
ST7789V_SetAddressWindow
HAL_GPIO_WritePin
HAL_SPI_Transmit_DMA
hspi1
ST7789V_Init
lv_disp_draw_buf_init
lv_disp_drv_init
lv_disp_drv_register
lv_disp_flush_ready
