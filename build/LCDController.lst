ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//cc1RirMa.s 			page 1


   1              		.cpu cortex-m4
   2              		.arch armv7e-m
   3              		.fpu fpv4-sp-d16
   4              		.eabi_attribute 27, 1
   5              		.eabi_attribute 28, 1
   6              		.eabi_attribute 23, 1
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 2
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"LCDController.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.disp_flush,"ax",%progbits
  18              		.align	1
  19              		.p2align 2,,3
  20              		.syntax unified
  21              		.thumb
  22              		.thumb_func
  24              	disp_flush:
  25              	.LVL0:
  26              	.LFB345:
  27              		.file 1 "Core/Src/LCDController.c"
   1:Core/Src/LCDController.c **** /**
   2:Core/Src/LCDController.c ****  * @file lv_port_disp_templ.c
   3:Core/Src/LCDController.c ****  *
   4:Core/Src/LCDController.c ****  */
   5:Core/Src/LCDController.c **** 
   6:Core/Src/LCDController.c **** 
   7:Core/Src/LCDController.c **** 
   8:Core/Src/LCDController.c **** /*********************
   9:Core/Src/LCDController.c ****  *      INCLUDES
  10:Core/Src/LCDController.c ****  *********************/
  11:Core/Src/LCDController.c **** #include "LCDController.h"
  12:Core/Src/LCDController.c **** #include "st7789v.h"
  13:Core/Src/LCDController.c **** #include "main.h"
  14:Core/Src/LCDController.c **** #include <stdbool.h>
  15:Core/Src/LCDController.c **** 
  16:Core/Src/LCDController.c **** /*********************
  17:Core/Src/LCDController.c ****  *      DEFINES
  18:Core/Src/LCDController.c ****  *********************/
  19:Core/Src/LCDController.c **** #ifndef MY_DISP_HOR_RES
  20:Core/Src/LCDController.c ****     #warning Please define or replace the macro MY_DISP_HOR_RES with the actual screen width, defau
  21:Core/Src/LCDController.c ****     #define MY_DISP_HOR_RES    320
  22:Core/Src/LCDController.c **** #endif
  23:Core/Src/LCDController.c **** 
  24:Core/Src/LCDController.c **** #ifndef MY_DISP_VER_RES
  25:Core/Src/LCDController.c ****     #warning Please define or replace the macro MY_DISP_HOR_RES with the actual screen height, defa
  26:Core/Src/LCDController.c ****     #define MY_DISP_VER_RES    240
  27:Core/Src/LCDController.c **** #endif
  28:Core/Src/LCDController.c **** 
  29:Core/Src/LCDController.c **** /**********************
  30:Core/Src/LCDController.c ****  *      TYPEDEFS
  31:Core/Src/LCDController.c ****  **********************/
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//cc1RirMa.s 			page 2


  32:Core/Src/LCDController.c **** 
  33:Core/Src/LCDController.c **** /**********************
  34:Core/Src/LCDController.c ****  *  STATIC PROTOTYPES
  35:Core/Src/LCDController.c ****  **********************/
  36:Core/Src/LCDController.c **** static void disp_init(void);
  37:Core/Src/LCDController.c **** 
  38:Core/Src/LCDController.c **** static void disp_flush(lv_disp_drv_t * disp_drv, const lv_area_t * area, lv_color_t * color_p);
  39:Core/Src/LCDController.c **** 
  40:Core/Src/LCDController.c **** 
  41:Core/Src/LCDController.c **** 
  42:Core/Src/LCDController.c **** 
  43:Core/Src/LCDController.c **** /**********************
  44:Core/Src/LCDController.c ****  *  STATIC VARIABLES
  45:Core/Src/LCDController.c ****  **********************/
  46:Core/Src/LCDController.c **** static lv_disp_drv_t disp_drv;    
  47:Core/Src/LCDController.c **** /**********************
  48:Core/Src/LCDController.c ****  *      MACROS
  49:Core/Src/LCDController.c ****  **********************/
  50:Core/Src/LCDController.c **** 
  51:Core/Src/LCDController.c **** /**********************
  52:Core/Src/LCDController.c ****  *   GLOBAL FUNCTIONS
  53:Core/Src/LCDController.c ****  **********************/
  54:Core/Src/LCDController.c **** void lv_port_disp_init(void)
  55:Core/Src/LCDController.c **** {
  56:Core/Src/LCDController.c ****     /*-------------------------
  57:Core/Src/LCDController.c ****      * Initialize your display
  58:Core/Src/LCDController.c ****      * -----------------------*/
  59:Core/Src/LCDController.c ****     disp_init();
  60:Core/Src/LCDController.c **** 
  61:Core/Src/LCDController.c ****     /*-----------------------------
  62:Core/Src/LCDController.c ****      * Create a buffer for drawing
  63:Core/Src/LCDController.c ****      *----------------------------*/
  64:Core/Src/LCDController.c **** 
  65:Core/Src/LCDController.c ****     /**
  66:Core/Src/LCDController.c ****      * LVGL requires a buffer where it internally draws the widgets.
  67:Core/Src/LCDController.c ****      * Later this buffer will passed to your display driver's `flush_cb` to copy its content to you
  68:Core/Src/LCDController.c ****      * The buffer has to be greater than 1 display row
  69:Core/Src/LCDController.c ****      *
  70:Core/Src/LCDController.c ****      * There are 3 buffering configurations:
  71:Core/Src/LCDController.c ****      * 1. Create ONE buffer:
  72:Core/Src/LCDController.c ****      *      LVGL will draw the display's content here and writes it to your display
  73:Core/Src/LCDController.c ****      *
  74:Core/Src/LCDController.c ****      * 2. Create TWO buffer:
  75:Core/Src/LCDController.c ****      *      LVGL will draw the display's content to a buffer and writes it your display.
  76:Core/Src/LCDController.c ****      *      You should use DMA to write the buffer's content to the display.
  77:Core/Src/LCDController.c ****      *      It will enable LVGL to draw the next part of the screen to the other buffer while
  78:Core/Src/LCDController.c ****      *      the data is being sent form the first buffer. It makes rendering and flushing parallel.
  79:Core/Src/LCDController.c ****      *
  80:Core/Src/LCDController.c ****      * 3. Double buffering
  81:Core/Src/LCDController.c ****      *      Set 2 screens sized buffers and set disp_drv.full_refresh = 1.
  82:Core/Src/LCDController.c ****      *      This way LVGL will always provide the whole rendered screen in `flush_cb`
  83:Core/Src/LCDController.c ****      *      and you only need to change the frame buffer's address.
  84:Core/Src/LCDController.c ****      */
  85:Core/Src/LCDController.c **** 
  86:Core/Src/LCDController.c ****     /* Example for 1) */
  87:Core/Src/LCDController.c ****     // static lv_disp_draw_buf_t draw_buf_dsc_1;
  88:Core/Src/LCDController.c ****     // static lv_color_t buf_1[MY_DISP_HOR_RES * 10];                          /*A buffer for 10 ro
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//cc1RirMa.s 			page 3


  89:Core/Src/LCDController.c ****     // lv_disp_draw_buf_init(&draw_buf_dsc_1, buf_1, NULL, MY_DISP_HOR_RES * 10);   /*Initialize th
  90:Core/Src/LCDController.c **** 
  91:Core/Src/LCDController.c ****     // /* Example for 2) */
  92:Core/Src/LCDController.c ****     static lv_disp_draw_buf_t draw_buf_dsc_2;
  93:Core/Src/LCDController.c ****     static lv_color_t buf_2_1[MY_DISP_HOR_RES * 5];                        /*A buffer for 10 rows*/
  94:Core/Src/LCDController.c ****     static lv_color_t buf_2_2[MY_DISP_HOR_RES * 5];                        /*An other buffer for 10
  95:Core/Src/LCDController.c ****     lv_disp_draw_buf_init(&draw_buf_dsc_2, buf_2_1, buf_2_2, MY_DISP_HOR_RES * 5);   /*Initialize t
  96:Core/Src/LCDController.c **** 
  97:Core/Src/LCDController.c ****     /* Example for 3) also set disp_drv.full_refresh = 1 below*/
  98:Core/Src/LCDController.c ****     // static lv_disp_draw_buf_t draw_buf_dsc_3;
  99:Core/Src/LCDController.c ****     // static lv_color_t buf_3_1[MY_DISP_HOR_RES * MY_DISP_VER_RES];            /*A screen sized bu
 100:Core/Src/LCDController.c ****     // static lv_color_t buf_3_2[MY_DISP_HOR_RES * MY_DISP_VER_RES];            /*Another screen si
 101:Core/Src/LCDController.c ****     // lv_disp_draw_buf_init(&draw_buf_dsc_3, buf_3_1, buf_3_2,
 102:Core/Src/LCDController.c ****     //                       MY_DISP_VER_RES * LV_VER_RES_MAX);   /*Initialize the display buffer*/
 103:Core/Src/LCDController.c **** 
 104:Core/Src/LCDController.c ****     /*-----------------------------------
 105:Core/Src/LCDController.c ****      * Register the display in LVGL
 106:Core/Src/LCDController.c ****      *----------------------------------*/
 107:Core/Src/LCDController.c **** 
 108:Core/Src/LCDController.c ****     // static lv_disp_drv_t disp_drv;                         /*Descriptor of a display driver*/
 109:Core/Src/LCDController.c ****     lv_disp_drv_init(&disp_drv);                    /*Basic initialization*/
 110:Core/Src/LCDController.c **** 
 111:Core/Src/LCDController.c ****     /*Set up the functions to access to your display*/
 112:Core/Src/LCDController.c **** 
 113:Core/Src/LCDController.c ****     /*Set the resolution of the display*/
 114:Core/Src/LCDController.c ****     disp_drv.hor_res = MY_DISP_HOR_RES;
 115:Core/Src/LCDController.c ****     disp_drv.ver_res = MY_DISP_VER_RES;
 116:Core/Src/LCDController.c **** 
 117:Core/Src/LCDController.c ****     /*Used to copy the buffer's content to the display*/
 118:Core/Src/LCDController.c ****     disp_drv.flush_cb = disp_flush;
 119:Core/Src/LCDController.c **** 
 120:Core/Src/LCDController.c ****     /*Set a display buffer*/
 121:Core/Src/LCDController.c ****     disp_drv.draw_buf = &draw_buf_dsc_2;
 122:Core/Src/LCDController.c **** 
 123:Core/Src/LCDController.c ****     /*Required for Example 3)*/
 124:Core/Src/LCDController.c ****     //disp_drv.full_refresh = 1;
 125:Core/Src/LCDController.c **** 
 126:Core/Src/LCDController.c ****     /* Fill a memory array with a color if you have GPU.
 127:Core/Src/LCDController.c ****      * Note that, in lv_conf.h you can enable GPUs that has built-in support in LVGL.
 128:Core/Src/LCDController.c ****      * But if you have a different GPU you can use with this callback.*/
 129:Core/Src/LCDController.c ****     //disp_drv.gpu_fill_cb = gpu_fill;
 130:Core/Src/LCDController.c **** 
 131:Core/Src/LCDController.c ****     /*Finally register the driver*/
 132:Core/Src/LCDController.c ****     lv_disp_drv_register(&disp_drv);
 133:Core/Src/LCDController.c **** }
 134:Core/Src/LCDController.c **** 
 135:Core/Src/LCDController.c **** /**********************
 136:Core/Src/LCDController.c ****  *   STATIC FUNCTIONS
 137:Core/Src/LCDController.c ****  **********************/
 138:Core/Src/LCDController.c **** 
 139:Core/Src/LCDController.c **** /*Initialize your display and the required peripherals.*/
 140:Core/Src/LCDController.c **** static void disp_init(void)
 141:Core/Src/LCDController.c **** {
 142:Core/Src/LCDController.c ****     ST7789V_Init();
 143:Core/Src/LCDController.c **** }
 144:Core/Src/LCDController.c **** 
 145:Core/Src/LCDController.c **** volatile bool disp_flush_enabled = true;
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//cc1RirMa.s 			page 4


 146:Core/Src/LCDController.c **** 
 147:Core/Src/LCDController.c **** /* Enable updating the screen (the flushing process) when disp_flush() is called by LVGL
 148:Core/Src/LCDController.c ****  */
 149:Core/Src/LCDController.c **** void disp_enable_update(void)
 150:Core/Src/LCDController.c **** {
 151:Core/Src/LCDController.c ****     disp_flush_enabled = true;
 152:Core/Src/LCDController.c **** }
 153:Core/Src/LCDController.c **** 
 154:Core/Src/LCDController.c **** /* Disable updating the screen (the flushing process) when disp_flush() is called by LVGL
 155:Core/Src/LCDController.c ****  */
 156:Core/Src/LCDController.c **** void disp_disable_update(void)
 157:Core/Src/LCDController.c **** {
 158:Core/Src/LCDController.c ****     disp_flush_enabled = false;
 159:Core/Src/LCDController.c **** }
 160:Core/Src/LCDController.c **** 
 161:Core/Src/LCDController.c **** /*Flush the content of the internal buffer the specific area on the display
 162:Core/Src/LCDController.c ****  *You can use DMA or any hardware acceleration to do this operation in the background but
 163:Core/Src/LCDController.c ****  *'lv_disp_flush_ready()' has to be called when finished.*/
 164:Core/Src/LCDController.c **** static void disp_flush(lv_disp_drv_t * disp_drv, const lv_area_t * area, lv_color_t * color_p)
 165:Core/Src/LCDController.c **** {
  28              		.loc 1 165 1 view -0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
 166:Core/Src/LCDController.c ****     //ST7789V_Select();
 167:Core/Src/LCDController.c ****     int height = area->y2 - area->y1 + 1;
  32              		.loc 1 167 5 view .LVU1
 165:Core/Src/LCDController.c ****     //ST7789V_Select();
  33              		.loc 1 165 1 is_stmt 0 view .LVU2
  34 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
  35              		.cfi_def_cfa_offset 24
  36              		.cfi_offset 4, -24
  37              		.cfi_offset 5, -20
  38              		.cfi_offset 6, -16
  39              		.cfi_offset 7, -12
  40              		.cfi_offset 8, -8
  41              		.cfi_offset 14, -4
 168:Core/Src/LCDController.c **** 	int width = area->x2 - area->x1 + 1;
  42              		.loc 1 168 18 view .LVU3
  43 0004 B1F90440 		ldrsh	r4, [r1, #4]
 167:Core/Src/LCDController.c **** 	int width = area->x2 - area->x1 + 1;
  44              		.loc 1 167 22 view .LVU4
  45 0008 B1F90650 		ldrsh	r5, [r1, #6]
  46              		.loc 1 168 29 view .LVU5
  47 000c B1F90080 		ldrsh	r8, [r1]
 167:Core/Src/LCDController.c **** 	int width = area->x2 - area->x1 + 1;
  48              		.loc 1 167 33 view .LVU6
  49 0010 B1F90270 		ldrsh	r7, [r1, #2]
  50              	.LVL1:
  51              		.loc 1 168 2 is_stmt 1 view .LVU7
 169:Core/Src/LCDController.c **** 
 170:Core/Src/LCDController.c **** 	
 171:Core/Src/LCDController.c **** 	ST7789V_SetAddressWindow(area->x1, area->y1, area->x2, area->y2);
  52              		.loc 1 171 2 view .LVU8
  53 0014 ABB2     		uxth	r3, r5
 165:Core/Src/LCDController.c ****     //ST7789V_Select();
  54              		.loc 1 165 1 is_stmt 0 view .LVU9
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//cc1RirMa.s 			page 5


  55 0016 1646     		mov	r6, r2
  56              		.loc 1 171 2 view .LVU10
  57 0018 B9B2     		uxth	r1, r7
  58              	.LVL2:
  59              		.loc 1 171 2 view .LVU11
  60 001a A2B2     		uxth	r2, r4
  61              	.LVL3:
  62              		.loc 1 171 2 view .LVU12
  63 001c 1FFA88F0 		uxth	r0, r8
  64              	.LVL4:
  65              		.loc 1 171 2 view .LVU13
  66 0020 FFF7FEFF 		bl	ST7789V_SetAddressWindow
  67              	.LVL5:
 172:Core/Src/LCDController.c **** 
 173:Core/Src/LCDController.c ****     ST7789V_Select();
  68              		.loc 1 173 5 is_stmt 1 view .LVU14
  69 0024 1148     		ldr	r0, .L6
  70 0026 0022     		movs	r2, #0
  71 0028 0421     		movs	r1, #4
  72 002a FFF7FEFF 		bl	HAL_GPIO_WritePin
  73              	.LVL6:
 174:Core/Src/LCDController.c ****     ST7789V_DC_Set();
  74              		.loc 1 174 5 view .LVU15
  75 002e 0F48     		ldr	r0, .L6
  76 0030 0122     		movs	r2, #1
  77 0032 0221     		movs	r1, #2
  78 0034 FFF7FEFF 		bl	HAL_GPIO_WritePin
  79              	.LVL7:
 175:Core/Src/LCDController.c ****     
 176:Core/Src/LCDController.c ****     //HAL_SPI_Transmit(&ST7789V_SPI_PORT, (uint8_t *)color_p , width*height*2, 10);
 177:Core/Src/LCDController.c ****     HAL_SPI_Transmit_DMA(&ST7789V_SPI_PORT, (uint8_t *)color_p , width*height*2);
  80              		.loc 1 177 5 view .LVU16
 167:Core/Src/LCDController.c **** 	int width = area->x2 - area->x1 + 1;
  81              		.loc 1 167 27 is_stmt 0 view .LVU17
  82 0038 ED1B     		subs	r5, r5, r7
  83              	.LVL8:
 168:Core/Src/LCDController.c **** 
  84              		.loc 1 168 23 view .LVU18
  85 003a A4EB0803 		sub	r3, r4, r8
 168:Core/Src/LCDController.c **** 
  86              		.loc 1 168 6 view .LVU19
  87 003e 0133     		adds	r3, r3, #1
 167:Core/Src/LCDController.c **** 	int width = area->x2 - area->x1 + 1;
  88              		.loc 1 167 9 view .LVU20
  89 0040 0135     		adds	r5, r5, #1
  90              		.loc 1 177 5 view .LVU21
  91 0042 0B4C     		ldr	r4, .L6+4
  92              	.LVL9:
  93              		.loc 1 177 5 view .LVU22
  94 0044 13FB05F3 		smulbb	r3, r3, r5
  95 0048 5B00     		lsls	r3, r3, #1
  96 004a 3146     		mov	r1, r6
  97 004c 9AB2     		uxth	r2, r3
  98 004e 2046     		mov	r0, r4
  99 0050 FFF7FEFF 		bl	HAL_SPI_Transmit_DMA
 100              	.LVL10:
 178:Core/Src/LCDController.c ****     while (ST7789V_SPI_PORT.hdmatx->State != HAL_DMA_STATE_READY){}
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//cc1RirMa.s 			page 6


 101              		.loc 1 178 5 is_stmt 1 view .LVU23
 102              		.loc 1 178 28 is_stmt 0 view .LVU24
 103 0054 A16C     		ldr	r1, [r4, #72]
 104              	.L2:
 105              		.loc 1 178 67 is_stmt 1 discriminator 1 view .LVU25
 106              		.loc 1 178 43 discriminator 1 view .LVU26
 107              		.loc 1 178 35 is_stmt 0 discriminator 1 view .LVU27
 108 0056 91F83530 		ldrb	r3, [r1, #53]	@ zero_extendqisi2
 109              		.loc 1 178 43 discriminator 1 view .LVU28
 110 005a 012B     		cmp	r3, #1
 111              		.loc 1 178 35 discriminator 1 view .LVU29
 112 005c DAB2     		uxtb	r2, r3
 113              		.loc 1 178 43 discriminator 1 view .LVU30
 114 005e FAD1     		bne	.L2
 179:Core/Src/LCDController.c ****     ST7789V_UnSelect();
 115              		.loc 1 179 5 is_stmt 1 view .LVU31
 180:Core/Src/LCDController.c ****                 
 181:Core/Src/LCDController.c ****     /*Inform the graphics library that you are ready with the flushing*/
 182:Core/Src/LCDController.c ****     //lv_disp_flush_ready(disp_drv);
 183:Core/Src/LCDController.c **** }
 116              		.loc 1 183 1 is_stmt 0 view .LVU32
 117 0060 BDE8F041 		pop	{r4, r5, r6, r7, r8, lr}
 118              		.cfi_restore 14
 119              		.cfi_restore 8
 120              		.cfi_restore 7
 121              		.cfi_restore 6
 122              		.cfi_restore 5
 123              		.cfi_restore 4
 124              		.cfi_def_cfa_offset 0
 125              	.LVL11:
 179:Core/Src/LCDController.c ****     ST7789V_UnSelect();
 126              		.loc 1 179 5 view .LVU33
 127 0064 0148     		ldr	r0, .L6
 128 0066 0421     		movs	r1, #4
 129 0068 FFF7FEBF 		b	HAL_GPIO_WritePin
 130              	.LVL12:
 131              	.L7:
 132              		.align	2
 133              	.L6:
 134 006c 00000240 		.word	1073872896
 135 0070 00000000 		.word	hspi1
 136              		.cfi_endproc
 137              	.LFE345:
 139              		.section	.text.lv_port_disp_init,"ax",%progbits
 140              		.align	1
 141              		.p2align 2,,3
 142              		.global	lv_port_disp_init
 143              		.syntax unified
 144              		.thumb
 145              		.thumb_func
 147              	lv_port_disp_init:
 148              	.LFB341:
  55:Core/Src/LCDController.c ****     /*-------------------------
 149              		.loc 1 55 1 is_stmt 1 view -0
 150              		.cfi_startproc
 151              		@ args = 0, pretend = 0, frame = 0
 152              		@ frame_needed = 0, uses_anonymous_args = 0
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//cc1RirMa.s 			page 7


  59:Core/Src/LCDController.c **** 
 153              		.loc 1 59 5 view .LVU35
 154              	.LBB4:
 155              	.LBI4:
 140:Core/Src/LCDController.c **** {
 156              		.loc 1 140 13 view .LVU36
 157              	.LBB5:
 142:Core/Src/LCDController.c **** }
 158              		.loc 1 142 5 view .LVU37
 159              	.LBE5:
 160              	.LBE4:
  55:Core/Src/LCDController.c ****     /*-------------------------
 161              		.loc 1 55 1 is_stmt 0 view .LVU38
 162 0000 38B5     		push	{r3, r4, r5, lr}
 163              		.cfi_def_cfa_offset 16
 164              		.cfi_offset 3, -16
 165              		.cfi_offset 4, -12
 166              		.cfi_offset 5, -8
 167              		.cfi_offset 14, -4
  95:Core/Src/LCDController.c **** 
 168              		.loc 1 95 5 view .LVU39
 169 0002 0C4D     		ldr	r5, .L10
 109:Core/Src/LCDController.c **** 
 170              		.loc 1 109 5 view .LVU40
 171 0004 0C4C     		ldr	r4, .L10+4
 172              	.LBB7:
 173              	.LBB6:
 142:Core/Src/LCDController.c **** }
 174              		.loc 1 142 5 view .LVU41
 175 0006 FFF7FEFF 		bl	ST7789V_Init
 176              	.LVL13:
 177              	.LBE6:
 178              	.LBE7:
  92:Core/Src/LCDController.c ****     static lv_color_t buf_2_1[MY_DISP_HOR_RES * 5];                        /*A buffer for 10 rows*/
 179              		.loc 1 92 5 is_stmt 1 view .LVU42
  93:Core/Src/LCDController.c ****     static lv_color_t buf_2_2[MY_DISP_HOR_RES * 5];                        /*An other buffer for 10
 180              		.loc 1 93 5 view .LVU43
  94:Core/Src/LCDController.c ****     lv_disp_draw_buf_init(&draw_buf_dsc_2, buf_2_1, buf_2_2, MY_DISP_HOR_RES * 5);   /*Initialize t
 181              		.loc 1 94 5 view .LVU44
  95:Core/Src/LCDController.c **** 
 182              		.loc 1 95 5 view .LVU45
 183 000a 0C4A     		ldr	r2, .L10+8
 184 000c 0C49     		ldr	r1, .L10+12
 185 000e 4FF4C863 		mov	r3, #1600
 186 0012 2846     		mov	r0, r5
 187 0014 FFF7FEFF 		bl	lv_disp_draw_buf_init
 188              	.LVL14:
 109:Core/Src/LCDController.c **** 
 189              		.loc 1 109 5 view .LVU46
 190 0018 2046     		mov	r0, r4
 191 001a FFF7FEFF 		bl	lv_disp_drv_init
 192              	.LVL15:
 114:Core/Src/LCDController.c ****     disp_drv.ver_res = MY_DISP_VER_RES;
 193              		.loc 1 114 5 view .LVU47
 115:Core/Src/LCDController.c **** 
 194              		.loc 1 115 5 view .LVU48
 118:Core/Src/LCDController.c **** 
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//cc1RirMa.s 			page 8


 195              		.loc 1 118 23 is_stmt 0 view .LVU49
 196 001e 094B     		ldr	r3, .L10+16
 114:Core/Src/LCDController.c ****     disp_drv.ver_res = MY_DISP_VER_RES;
 197              		.loc 1 114 22 view .LVU50
 198 0020 094A     		ldr	r2, .L10+20
 199 0022 2260     		str	r2, [r4]
 118:Core/Src/LCDController.c **** 
 200              		.loc 1 118 5 is_stmt 1 view .LVU51
 132:Core/Src/LCDController.c **** }
 201              		.loc 1 132 5 is_stmt 0 view .LVU52
 202 0024 2046     		mov	r0, r4
 118:Core/Src/LCDController.c **** 
 203              		.loc 1 118 23 view .LVU53
 204 0026 6361     		str	r3, [r4, #20]
 121:Core/Src/LCDController.c **** 
 205              		.loc 1 121 5 is_stmt 1 view .LVU54
 121:Core/Src/LCDController.c **** 
 206              		.loc 1 121 23 is_stmt 0 view .LVU55
 207 0028 E560     		str	r5, [r4, #12]
 132:Core/Src/LCDController.c **** }
 208              		.loc 1 132 5 is_stmt 1 view .LVU56
 133:Core/Src/LCDController.c **** 
 209              		.loc 1 133 1 is_stmt 0 view .LVU57
 210 002a BDE83840 		pop	{r3, r4, r5, lr}
 211              		.cfi_restore 14
 212              		.cfi_restore 5
 213              		.cfi_restore 4
 214              		.cfi_restore 3
 215              		.cfi_def_cfa_offset 0
 132:Core/Src/LCDController.c **** }
 216              		.loc 1 132 5 view .LVU58
 217 002e FFF7FEBF 		b	lv_disp_drv_register
 218              	.LVL16:
 219              	.L11:
 220 0032 00BF     		.align	2
 221              	.L10:
 222 0034 00000000 		.word	.LANCHOR2
 223 0038 00000000 		.word	.LANCHOR3
 224 003c 00000000 		.word	.LANCHOR0
 225 0040 00000000 		.word	.LANCHOR1
 226 0044 00000000 		.word	disp_flush
 227 0048 4001F000 		.word	15728960
 228              		.cfi_endproc
 229              	.LFE341:
 231              		.section	.text.disp_enable_update,"ax",%progbits
 232              		.align	1
 233              		.p2align 2,,3
 234              		.global	disp_enable_update
 235              		.syntax unified
 236              		.thumb
 237              		.thumb_func
 239              	disp_enable_update:
 240              	.LFB343:
 150:Core/Src/LCDController.c ****     disp_flush_enabled = true;
 241              		.loc 1 150 1 is_stmt 1 view -0
 242              		.cfi_startproc
 243              		@ args = 0, pretend = 0, frame = 0
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//cc1RirMa.s 			page 9


 244              		@ frame_needed = 0, uses_anonymous_args = 0
 245              		@ link register save eliminated.
 151:Core/Src/LCDController.c **** }
 246              		.loc 1 151 5 view .LVU60
 151:Core/Src/LCDController.c **** }
 247              		.loc 1 151 24 is_stmt 0 view .LVU61
 248 0000 014B     		ldr	r3, .L13
 249 0002 0122     		movs	r2, #1
 250 0004 1A70     		strb	r2, [r3]
 152:Core/Src/LCDController.c **** 
 251              		.loc 1 152 1 view .LVU62
 252 0006 7047     		bx	lr
 253              	.L14:
 254              		.align	2
 255              	.L13:
 256 0008 00000000 		.word	.LANCHOR4
 257              		.cfi_endproc
 258              	.LFE343:
 260              		.section	.text.disp_disable_update,"ax",%progbits
 261              		.align	1
 262              		.p2align 2,,3
 263              		.global	disp_disable_update
 264              		.syntax unified
 265              		.thumb
 266              		.thumb_func
 268              	disp_disable_update:
 269              	.LFB344:
 157:Core/Src/LCDController.c ****     disp_flush_enabled = false;
 270              		.loc 1 157 1 is_stmt 1 view -0
 271              		.cfi_startproc
 272              		@ args = 0, pretend = 0, frame = 0
 273              		@ frame_needed = 0, uses_anonymous_args = 0
 274              		@ link register save eliminated.
 158:Core/Src/LCDController.c **** }
 275              		.loc 1 158 5 view .LVU64
 158:Core/Src/LCDController.c **** }
 276              		.loc 1 158 24 is_stmt 0 view .LVU65
 277 0000 014B     		ldr	r3, .L16
 278 0002 0022     		movs	r2, #0
 279 0004 1A70     		strb	r2, [r3]
 159:Core/Src/LCDController.c **** 
 280              		.loc 1 159 1 view .LVU66
 281 0006 7047     		bx	lr
 282              	.L17:
 283              		.align	2
 284              	.L16:
 285 0008 00000000 		.word	.LANCHOR4
 286              		.cfi_endproc
 287              	.LFE344:
 289              		.section	.text.HAL_SPI_TxCpltCallback,"ax",%progbits
 290              		.align	1
 291              		.p2align 2,,3
 292              		.global	HAL_SPI_TxCpltCallback
 293              		.syntax unified
 294              		.thumb
 295              		.thumb_func
 297              	HAL_SPI_TxCpltCallback:
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//cc1RirMa.s 			page 10


 298              	.LVL17:
 299              	.LFB346:
 184:Core/Src/LCDController.c **** 
 185:Core/Src/LCDController.c **** 
 186:Core/Src/LCDController.c **** void HAL_SPI_TxCpltCallback(SPI_HandleTypeDef *hspi)
 187:Core/Src/LCDController.c **** {
 300              		.loc 1 187 1 is_stmt 1 view -0
 301              		.cfi_startproc
 302              		@ args = 0, pretend = 0, frame = 0
 303              		@ frame_needed = 0, uses_anonymous_args = 0
 304              		@ link register save eliminated.
 188:Core/Src/LCDController.c ****     lv_disp_flush_ready(&disp_drv);
 305              		.loc 1 188 5 view .LVU68
 306 0000 0148     		ldr	r0, .L19
 307              	.LVL18:
 308              		.loc 1 188 5 is_stmt 0 view .LVU69
 309 0002 FFF7FEBF 		b	lv_disp_flush_ready
 310              	.LVL19:
 311              	.L20:
 312 0006 00BF     		.align	2
 313              	.L19:
 314 0008 00000000 		.word	.LANCHOR3
 315              		.cfi_endproc
 316              	.LFE346:
 318              		.global	disp_flush_enabled
 319              		.section	.bss.buf_2_1.1,"aw",%nobits
 320              		.align	2
 321              		.set	.LANCHOR1,. + 0
 324              	buf_2_1.1:
 325 0000 00000000 		.space	3200
 325      00000000 
 325      00000000 
 325      00000000 
 325      00000000 
 326              		.section	.bss.buf_2_2.0,"aw",%nobits
 327              		.align	2
 328              		.set	.LANCHOR0,. + 0
 331              	buf_2_2.0:
 332 0000 00000000 		.space	3200
 332      00000000 
 332      00000000 
 332      00000000 
 332      00000000 
 333              		.section	.bss.disp_drv,"aw",%nobits
 334              		.align	2
 335              		.set	.LANCHOR3,. + 0
 338              	disp_drv:
 339 0000 00000000 		.space	80
 339      00000000 
 339      00000000 
 339      00000000 
 339      00000000 
 340              		.section	.bss.draw_buf_dsc_2.2,"aw",%nobits
 341              		.align	2
 342              		.set	.LANCHOR2,. + 0
 345              	draw_buf_dsc_2.2:
 346 0000 00000000 		.space	28
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//cc1RirMa.s 			page 11


 346      00000000 
 346      00000000 
 346      00000000 
 346      00000000 
 347              		.section	.data.disp_flush_enabled,"aw"
 348              		.set	.LANCHOR4,. + 0
 351              	disp_flush_enabled:
 352 0000 01       		.byte	1
 353              		.text
 354              	.Letext0:
 355              		.file 2 "/Users/johannes/Library/Application Support/Code/User/globalStorage/bmd.stm32-for-vscode/
 356              		.file 3 "/Users/johannes/Library/Application Support/Code/User/globalStorage/bmd.stm32-for-vscode/
 357              		.file 4 "Drivers/lvgl/src/misc/lv_types.h"
 358              		.file 5 "Drivers/lvgl/src/misc/lv_timer.h"
 359              		.file 6 "/Users/johannes/Library/Application Support/Code/User/globalStorage/bmd.stm32-for-vscode/
 360              		.file 7 "Drivers/lvgl/src/hal/../draw/../misc/../font/../misc/lv_area.h"
 361              		.file 8 "Drivers/lvgl/src/hal/../draw/../misc/../font/lv_font.h"
 362              		.file 9 "Drivers/lvgl/src/hal/../draw/../misc/lv_color.h"
 363              		.file 10 "Drivers/lvgl/src/hal/../draw/../misc/lv_txt.h"
 364              		.file 11 "Drivers/lvgl/src/hal/../draw/../misc/lv_bidi.h"
 365              		.file 12 "Drivers/lvgl/src/hal/../draw/../misc/lv_style.h"
 366              		.file 13 "Drivers/lvgl/src/hal/../draw/lv_img_buf.h"
 367              		.file 14 "Drivers/lvgl/src/core/lv_obj.h"
 368              		.file 15 "Drivers/lvgl/src/hal/../draw/lv_draw_rect.h"
 369              		.file 16 "Drivers/lvgl/src/hal/../draw/lv_draw_label.h"
 370              		.file 17 "Drivers/lvgl/src/hal/../draw/lv_draw_img.h"
 371              		.file 18 "Drivers/lvgl/src/hal/../draw/lv_draw_line.h"
 372              		.file 19 "Drivers/lvgl/src/hal/../draw/lv_draw_arc.h"
 373              		.file 20 "Drivers/lvgl/src/hal/../draw/lv_draw_layer.h"
 374              		.file 21 "Drivers/lvgl/src/hal/../draw/lv_draw.h"
 375              		.file 22 "Drivers/lvgl/src/hal/../misc/lv_ll.h"
 376              		.file 23 "Drivers/lvgl/src/hal/lv_hal_disp.h"
 377              		.file 24 "Drivers/lvgl/src/core/lv_theme.h"
 378              		.file 25 "Drivers/lvgl/src/core/lv_group.h"
 379              		.file 26 "Drivers/lvgl/src/core/lv_obj_scroll.h"
 380              		.file 27 "Drivers/lvgl/src/core/lv_obj_style.h"
 381              		.file 28 "Drivers/lvgl/src/core/lv_obj_class.h"
 382              		.file 29 "Drivers/lvgl/src/core/lv_event.h"
 383              		.file 30 "Drivers/lvgl/src/widgets/lv_bar.h"
 384              		.file 31 "Drivers/lvgl/src/extra/widgets/imgbtn/lv_imgbtn.h"
 385              		.file 32 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/stm32f407xx.h"
 386              		.file 33 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_def.h"
 387              		.file 34 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_gpio.h"
 388              		.file 35 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_dma.h"
 389              		.file 36 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_spi.h"
 390              		.file 37 "Drivers/ST7789V/st7789v.h"
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//cc1RirMa.s 			page 12


DEFINED SYMBOLS
                            *ABS*:0000000000000000 LCDController.c
/var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//cc1RirMa.s:18     .text.disp_flush:0000000000000000 $t
/var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//cc1RirMa.s:24     .text.disp_flush:0000000000000000 disp_flush
/var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//cc1RirMa.s:134    .text.disp_flush:000000000000006c $d
/var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//cc1RirMa.s:140    .text.lv_port_disp_init:0000000000000000 $t
/var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//cc1RirMa.s:147    .text.lv_port_disp_init:0000000000000000 lv_port_disp_init
/var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//cc1RirMa.s:222    .text.lv_port_disp_init:0000000000000034 $d
/var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//cc1RirMa.s:232    .text.disp_enable_update:0000000000000000 $t
/var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//cc1RirMa.s:239    .text.disp_enable_update:0000000000000000 disp_enable_update
/var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//cc1RirMa.s:256    .text.disp_enable_update:0000000000000008 $d
/var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//cc1RirMa.s:261    .text.disp_disable_update:0000000000000000 $t
/var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//cc1RirMa.s:268    .text.disp_disable_update:0000000000000000 disp_disable_update
/var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//cc1RirMa.s:285    .text.disp_disable_update:0000000000000008 $d
/var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//cc1RirMa.s:290    .text.HAL_SPI_TxCpltCallback:0000000000000000 $t
/var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//cc1RirMa.s:297    .text.HAL_SPI_TxCpltCallback:0000000000000000 HAL_SPI_TxCpltCallback
/var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//cc1RirMa.s:314    .text.HAL_SPI_TxCpltCallback:0000000000000008 $d
/var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//cc1RirMa.s:351    .data.disp_flush_enabled:0000000000000000 disp_flush_enabled
/var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//cc1RirMa.s:320    .bss.buf_2_1.1:0000000000000000 $d
/var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//cc1RirMa.s:324    .bss.buf_2_1.1:0000000000000000 buf_2_1.1
/var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//cc1RirMa.s:327    .bss.buf_2_2.0:0000000000000000 $d
/var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//cc1RirMa.s:331    .bss.buf_2_2.0:0000000000000000 buf_2_2.0
/var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//cc1RirMa.s:334    .bss.disp_drv:0000000000000000 $d
/var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//cc1RirMa.s:338    .bss.disp_drv:0000000000000000 disp_drv
/var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//cc1RirMa.s:341    .bss.draw_buf_dsc_2.2:0000000000000000 $d
/var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//cc1RirMa.s:345    .bss.draw_buf_dsc_2.2:0000000000000000 draw_buf_dsc_2.2

UNDEFINED SYMBOLS
ST7789V_SetAddressWindow
HAL_GPIO_WritePin
HAL_SPI_Transmit_DMA
hspi1
ST7789V_Init
lv_disp_draw_buf_init
lv_disp_drv_init
lv_disp_drv_register
lv_disp_flush_ready
