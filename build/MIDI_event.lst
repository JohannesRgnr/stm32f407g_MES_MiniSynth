ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccIQytze.s 			page 1


   1              		.cpu cortex-m4
   2              		.arch armv7e-m
   3              		.fpu fpv4-sp-d16
   4              		.eabi_attribute 27, 1
   5              		.eabi_attribute 28, 1
   6              		.eabi_attribute 23, 1
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 2
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"MIDI_event.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.allNotesOff,"ax",%progbits
  18              		.align	1
  19              		.p2align 2,,3
  20              		.global	allNotesOff
  21              		.syntax unified
  22              		.thumb
  23              		.thumb_func
  25              	allNotesOff:
  26              	.LFB137:
  27              		.file 1 "Core/Src/MIDI_event.c"
   1:Core/Src/MIDI_event.c **** /**
   2:Core/Src/MIDI_event.c ****  * @file MIDI_event.c
   3:Core/Src/MIDI_event.c ****  * @author modified by johannes regnier
   4:Core/Src/MIDI_event.c ****  * @brief MIDI events processing
   5:Core/Src/MIDI_event.c ****  * @note Makes use of the great resources from Tom Erbe
   6:Core/Src/MIDI_event.c ****  * @note http://synthnotes.ucsd.edu/wp4/index.php/2019/09/24/adding-the-usb-otg-midi-driver-polypho
   7:Core/Src/MIDI_event.c ****  * @note and of the awesome Xavier Halgand's Dekrispator
   8:Core/Src/MIDI_event.c ****  * @version 0.1
   9:Core/Src/MIDI_event.c ****  * @date 2023-12-30
  10:Core/Src/MIDI_event.c ****  *
  11:Core/Src/MIDI_event.c ****  * @copyright Copyright (c) 2023
  12:Core/Src/MIDI_event.c ****  *
  13:Core/Src/MIDI_event.c ****  */
  14:Core/Src/MIDI_event.c **** 
  15:Core/Src/MIDI_event.c **** #include <stdint.h>
  16:Core/Src/MIDI_event.c **** 
  17:Core/Src/MIDI_event.c **** #include "MIDI_event.h"
  18:Core/Src/MIDI_event.c **** #include "gpio.h"
  19:Core/Src/MIDI_event.c **** #include "SEGGER_RTT.h"
  20:Core/Src/MIDI_event.c **** #include "CONSTS.h"
  21:Core/Src/MIDI_event.c **** #include "helper_functions.h"
  22:Core/Src/MIDI_event.c **** #include "ADSR_envelope.h"
  23:Core/Src/MIDI_event.c **** 
  24:Core/Src/MIDI_event.c **** USBH_HandleTypeDef hUSBHost; /* USB Host handle */
  25:Core/Src/MIDI_event.c **** MIDI_ApplicationTypeDef Appli_state = MIDI_APPLICATION_IDLE;
  26:Core/Src/MIDI_event.c **** 
  27:Core/Src/MIDI_event.c **** uint16_t pitchbend ;
  28:Core/Src/MIDI_event.c **** uint8_t currentPitch ;
  29:Core/Src/MIDI_event.c **** uint8_t velocity ;
  30:Core/Src/MIDI_event.c **** uint8_t notes_Active[128] = {0}; // at most, 128 MIDI notes are active
  31:Core/Src/MIDI_event.c **** int8_t notesCount = 0 ;			 // number of notes active
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccIQytze.s 			page 2


  32:Core/Src/MIDI_event.c **** extern ADSR_t adsr_amp;
  33:Core/Src/MIDI_event.c **** extern ADSR_t adsr_filt;
  34:Core/Src/MIDI_event.c **** 
  35:Core/Src/MIDI_event.c **** void allNotesOff(void)
  36:Core/Src/MIDI_event.c **** {
  28              		.loc 1 36 1 view -0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  37:Core/Src/MIDI_event.c **** 	for (uint8_t i = 0; i < 128; i++)
  32              		.loc 1 37 2 view .LVU1
  33              	.LBB2:
  34              		.loc 1 37 7 view .LVU2
  35              	.LVL0:
  36              		.loc 1 37 24 view .LVU3
  37              	.LBE2:
  36:Core/Src/MIDI_event.c **** 	for (uint8_t i = 0; i < 128; i++)
  38              		.loc 1 36 1 is_stmt 0 view .LVU4
  39 0000 08B5     		push	{r3, lr}
  40              		.cfi_def_cfa_offset 8
  41              		.cfi_offset 3, -8
  42              		.cfi_offset 14, -4
  43              	.LBB3:
  38:Core/Src/MIDI_event.c **** 		notes_Active[i] = 0;
  44              		.loc 1 38 19 view .LVU5
  45 0002 8022     		movs	r2, #128
  46 0004 0348     		ldr	r0, .L4
  47 0006 0021     		movs	r1, #0
  48 0008 FFF7FEFF 		bl	memset
  49              	.LVL1:
  50              		.loc 1 38 19 view .LVU6
  51              	.LBE3:
  39:Core/Src/MIDI_event.c **** 	notesCount = 0;
  52              		.loc 1 39 2 is_stmt 1 view .LVU7
  53              		.loc 1 39 13 is_stmt 0 view .LVU8
  54 000c 024B     		ldr	r3, .L4+4
  55 000e 0022     		movs	r2, #0
  56 0010 1A70     		strb	r2, [r3]
  40:Core/Src/MIDI_event.c **** }
  57              		.loc 1 40 1 view .LVU9
  58 0012 08BD     		pop	{r3, pc}
  59              	.L5:
  60              		.align	2
  61              	.L4:
  62 0014 00000000 		.word	.LANCHOR0
  63 0018 00000000 		.word	.LANCHOR1
  64              		.cfi_endproc
  65              	.LFE137:
  67              		.section	.text.MIDI_eventInit,"ax",%progbits
  68              		.align	1
  69              		.p2align 2,,3
  70              		.global	MIDI_eventInit
  71              		.syntax unified
  72              		.thumb
  73              		.thumb_func
  75              	MIDI_eventInit:
  76              	.LFB138:
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccIQytze.s 			page 3


  41:Core/Src/MIDI_event.c **** 
  42:Core/Src/MIDI_event.c **** 
  43:Core/Src/MIDI_event.c **** void MIDI_eventInit()
  44:Core/Src/MIDI_event.c **** {
  77              		.loc 1 44 1 is_stmt 1 view -0
  78              		.cfi_startproc
  79              		@ args = 0, pretend = 0, frame = 0
  80              		@ frame_needed = 0, uses_anonymous_args = 0
  81              		@ link register save eliminated.
  45:Core/Src/MIDI_event.c **** 	pitchbend = 8192;
  82              		.loc 1 45 2 view .LVU11
  83              		.loc 1 45 12 is_stmt 0 view .LVU12
  84 0000 024B     		ldr	r3, .L7
  85 0002 4FF40052 		mov	r2, #8192
  86 0006 1A80     		strh	r2, [r3]	@ movhi
  46:Core/Src/MIDI_event.c **** }
  87              		.loc 1 46 1 view .LVU13
  88 0008 7047     		bx	lr
  89              	.L8:
  90 000a 00BF     		.align	2
  91              	.L7:
  92 000c 00000000 		.word	.LANCHOR2
  93              		.cfi_endproc
  94              	.LFE138:
  96              		.section	.text.ProcessMIDI,"ax",%progbits
  97              		.align	1
  98              		.p2align 2,,3
  99              		.global	ProcessMIDI
 100              		.syntax unified
 101              		.thumb
 102              		.thumb_func
 104              	ProcessMIDI:
 105              	.LVL2:
 106              	.LFB139:
  47:Core/Src/MIDI_event.c **** 
  48:Core/Src/MIDI_event.c **** /**
  49:Core/Src/MIDI_event.c ****  * @brief Process incoming MIDI events - Monophonic, with legato
  50:Core/Src/MIDI_event.c ****  * @note Code adapted from Xavier Halgand and from Tom Erbe's version
  51:Core/Src/MIDI_event.c ****  *
  52:Core/Src/MIDI_event.c ****  * @param pack
  53:Core/Src/MIDI_event.c ****  */
  54:Core/Src/MIDI_event.c **** void ProcessMIDI(midi_package_t pack)
  55:Core/Src/MIDI_event.c **** {
 107              		.loc 1 55 1 is_stmt 1 view -0
 108              		.cfi_startproc
 109              		@ args = 0, pretend = 0, frame = 0
 110              		@ frame_needed = 0, uses_anonymous_args = 0
 111              		.loc 1 55 1 is_stmt 0 view .LVU15
 112 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 113              		.cfi_def_cfa_offset 24
 114              		.cfi_offset 3, -24
 115              		.cfi_offset 4, -20
 116              		.cfi_offset 5, -16
 117              		.cfi_offset 6, -12
 118              		.cfi_offset 7, -8
 119              		.cfi_offset 14, -4
 120 0002 C0F30743 		ubfx	r3, r0, #16, #8
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccIQytze.s 			page 4


 121 0006 C0F30766 		ubfx	r6, r0, #24, #8
 122 000a 040E     		lsrs	r4, r0, #24
  56:Core/Src/MIDI_event.c **** 	uint8_t status;
  57:Core/Src/MIDI_event.c **** 
  58:Core/Src/MIDI_event.c **** 	status = pack.evnt0 & 0xF0;
 123              		.loc 1 58 9 view .LVU16
 124 000c C0F30720 		ubfx	r0, r0, #8, #8
 125              	.LVL3:
 126              		.loc 1 58 9 view .LVU17
 127 0010 00F0F000 		and	r0, r0, #240
  59:Core/Src/MIDI_event.c **** 	if (status == 0xF0) // not using any of these
  60:Core/Src/MIDI_event.c **** 	{
  61:Core/Src/MIDI_event.c **** 		switch (pack.evnt0)
  62:Core/Src/MIDI_event.c **** 		{
  63:Core/Src/MIDI_event.c **** 		case 0xF0: // Start of System Exclusive
  64:Core/Src/MIDI_event.c **** 		case 0xF1: // MIDI Time Code Quarter Fram
  65:Core/Src/MIDI_event.c **** 		case 0xF2: // Song Position Pointer
  66:Core/Src/MIDI_event.c **** 		case 0xF3: // Song Select
  67:Core/Src/MIDI_event.c **** 		case 0xF4: // Undefined
  68:Core/Src/MIDI_event.c **** 		case 0xF5: // Undefined
  69:Core/Src/MIDI_event.c **** 		case 0xF6: // Tune Request
  70:Core/Src/MIDI_event.c **** 		case 0xF7: // End of System Exclusive
  71:Core/Src/MIDI_event.c **** 		case 0xF8: // Timing Clock (24 times a quarter note)
  72:Core/Src/MIDI_event.c **** 		case 0xF9: // Undefined
  73:Core/Src/MIDI_event.c **** 		case 0xFA: // Start Sequence
  74:Core/Src/MIDI_event.c **** 		case 0xFB: // Continue Sequence
  75:Core/Src/MIDI_event.c **** 		case 0xFC: // Pause Sequence
  76:Core/Src/MIDI_event.c **** 		case 0xFD: // Undefined
  77:Core/Src/MIDI_event.c **** 		case 0xFE: // Active Sensing
  78:Core/Src/MIDI_event.c **** 		case 0xFF: // Reset all synthesizers to power up
  79:Core/Src/MIDI_event.c **** 			break;
  80:Core/Src/MIDI_event.c **** 		}
  81:Core/Src/MIDI_event.c **** 	}
  82:Core/Src/MIDI_event.c **** 
  83:Core/Src/MIDI_event.c **** 	switch (status)
 128              		.loc 1 83 2 view .LVU18
 129 0014 9028     		cmp	r0, #144
 130 0016 1D46     		mov	r5, r3
 131              	.LVL4:
  56:Core/Src/MIDI_event.c **** 	uint8_t status;
 132              		.loc 1 56 2 is_stmt 1 view .LVU19
  58:Core/Src/MIDI_event.c **** 	if (status == 0xF0) // not using any of these
 133              		.loc 1 58 2 view .LVU20
  59:Core/Src/MIDI_event.c **** 	if (status == 0xF0) // not using any of these
 134              		.loc 1 59 2 view .LVU21
 135              		.loc 1 83 2 view .LVU22
 136 0018 25D0     		beq	.L10
 137 001a E028     		cmp	r0, #224
 138 001c 1ED0     		beq	.L11
 139 001e 8028     		cmp	r0, #128
 140 0020 00D0     		beq	.L32
 141              	.LVL5:
 142              	.L9:
  84:Core/Src/MIDI_event.c **** 	{
  85:Core/Src/MIDI_event.c **** 	/********************* Real Note Off *************************/	
  86:Core/Src/MIDI_event.c **** 	case 0x80: 
  87:Core/Src/MIDI_event.c **** 		uint8_t noteOff = pack.evnt1;
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccIQytze.s 			page 5


  88:Core/Src/MIDI_event.c **** 		notes_Active[noteOff] = 0;
  89:Core/Src/MIDI_event.c **** 		notesCount--;
  90:Core/Src/MIDI_event.c **** 		if (notesCount <= 0) // no notes active anymore
  91:Core/Src/MIDI_event.c **** 		{
  92:Core/Src/MIDI_event.c **** 			ADSR_keyOff(&adsr_amp); // release both envelopes
  93:Core/Src/MIDI_event.c **** 			ADSR_keyOff(&adsr_filt);
  94:Core/Src/MIDI_event.c **** 			notesCount = 0;
  95:Core/Src/MIDI_event.c **** 		}
  96:Core/Src/MIDI_event.c **** 		else // legato 
  97:Core/Src/MIDI_event.c **** 		{
  98:Core/Src/MIDI_event.c **** 			if (noteOff  == currentPitch) // let sound the lowest key pressed
  99:Core/Src/MIDI_event.c **** 			{
 100:Core/Src/MIDI_event.c **** 				uint8_t i;
 101:Core/Src/MIDI_event.c **** 				for (i = 0; i < 128; i++)
 102:Core/Src/MIDI_event.c **** 				{
 103:Core/Src/MIDI_event.c **** 					if (notes_Active[i] == 1) // find the lowest key pressed
 104:Core/Src/MIDI_event.c **** 						break;
 105:Core/Src/MIDI_event.c **** 				}
 106:Core/Src/MIDI_event.c **** 				currentPitch = i; // conversion for mtof[]
 107:Core/Src/MIDI_event.c **** 			}
 108:Core/Src/MIDI_event.c **** 		}
 109:Core/Src/MIDI_event.c **** 		break;
 110:Core/Src/MIDI_event.c **** 	
 111:Core/Src/MIDI_event.c **** 	case 0x90: // Note On
 112:Core/Src/MIDI_event.c **** 		uint8_t noteOn = pack.evnt1;
 113:Core/Src/MIDI_event.c **** 		velocity = pack.evnt2;
 114:Core/Src/MIDI_event.c **** 		/*********************  Note On *************************/	
 115:Core/Src/MIDI_event.c **** 		if (velocity > 0) 
 116:Core/Src/MIDI_event.c **** 		{			
 117:Core/Src/MIDI_event.c **** 			currentPitch = noteOn; // conversion for mtof[]
 118:Core/Src/MIDI_event.c **** 			// SEGGER_RTT_printf(0, "Note ON, pitch %u\r\n", currentPitch); // debug
 119:Core/Src/MIDI_event.c **** 			HAL_GPIO_WritePin(LD5_GPIO_Port, LD5_Pin, GPIO_PIN_SET); // red LED ON when incoming MIDI note o
 120:Core/Src/MIDI_event.c **** 			ADSR_keyOn(&adsr_amp); // start both envelopes
 121:Core/Src/MIDI_event.c **** 			ADSR_keyOn(&adsr_filt);
 122:Core/Src/MIDI_event.c **** 			notesCount++;
 123:Core/Src/MIDI_event.c **** 			notes_Active[noteOn] = 1;
 124:Core/Src/MIDI_event.c **** 		}
 125:Core/Src/MIDI_event.c **** 		/*********************  Note Off *************************/
 126:Core/Src/MIDI_event.c **** 		else //  common implementation in MIDI devices: Note Off = Note On with velocity 0
 127:Core/Src/MIDI_event.c **** 		{			
 128:Core/Src/MIDI_event.c **** 			notes_Active[noteOn] = 0;
 129:Core/Src/MIDI_event.c **** 			notesCount--;
 130:Core/Src/MIDI_event.c **** 			
 131:Core/Src/MIDI_event.c **** 			// SEGGER_RTT_printf(0, "Note OFF, pitch %u\r\n", currentPitch);
 132:Core/Src/MIDI_event.c **** 			if (notesCount <= 0)
 133:Core/Src/MIDI_event.c **** 			{
 134:Core/Src/MIDI_event.c **** 				ADSR_keyOff(&adsr_amp);
 135:Core/Src/MIDI_event.c **** 				ADSR_keyOff(&adsr_filt);
 136:Core/Src/MIDI_event.c **** 				notesCount = 0;
 137:Core/Src/MIDI_event.c **** 				HAL_GPIO_WritePin(LD5_GPIO_Port, LD5_Pin, GPIO_PIN_RESET); // red LED OFF when all MIDI notes o
 138:Core/Src/MIDI_event.c **** 			}
 139:Core/Src/MIDI_event.c **** 			else // legato
 140:Core/Src/MIDI_event.c **** 			{
 141:Core/Src/MIDI_event.c **** 				if (noteOn == currentPitch)
 142:Core/Src/MIDI_event.c **** 				{
 143:Core/Src/MIDI_event.c **** 					uint8_t i;
 144:Core/Src/MIDI_event.c **** 					for (i = 0; i < 128; i++)
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccIQytze.s 			page 6


 145:Core/Src/MIDI_event.c **** 					{
 146:Core/Src/MIDI_event.c **** 						if (notes_Active[i] == 1) // find the lowest key pressed
 147:Core/Src/MIDI_event.c **** 							break;
 148:Core/Src/MIDI_event.c **** 					}
 149:Core/Src/MIDI_event.c **** 					currentPitch = i; // conversion for notesFreq[]
 150:Core/Src/MIDI_event.c **** 				}
 151:Core/Src/MIDI_event.c **** 			}
 152:Core/Src/MIDI_event.c **** 		}
 153:Core/Src/MIDI_event.c **** 	/********************* Other MIDI Messages *************************/	
 154:Core/Src/MIDI_event.c **** 	case 0xA0: 	// Polyphonic Pressure
 155:Core/Src/MIDI_event.c **** 		break;
 156:Core/Src/MIDI_event.c **** 	case 0xB0:	// Control Change
 157:Core/Src/MIDI_event.c **** 		// uint8_t cc_number = pack.evnt1;
 158:Core/Src/MIDI_event.c **** 		// uint8_t cc_value = pack.evnt2;
 159:Core/Src/MIDI_event.c **** 		// SEGGER_RTT_printf(0, "CC#  %u %u\r\n", cc_number, cc_value); // debug
 160:Core/Src/MIDI_event.c **** 		switch (pack.evnt1) // CC number --> implement CC actions
 161:Core/Src/MIDI_event.c **** 		{
 162:Core/Src/MIDI_event.c **** 		case 20:
 163:Core/Src/MIDI_event.c **** 			break;
 164:Core/Src/MIDI_event.c **** 		case 7:
 165:Core/Src/MIDI_event.c **** 			break; // master volume
 166:Core/Src/MIDI_event.c **** 		}
 167:Core/Src/MIDI_event.c **** 		break;
 168:Core/Src/MIDI_event.c **** 	case 0xC0: // Program Change
 169:Core/Src/MIDI_event.c **** 		break;
 170:Core/Src/MIDI_event.c **** 	case 0xD0: // After Touch
 171:Core/Src/MIDI_event.c **** 		break;
 172:Core/Src/MIDI_event.c **** 	case 0xE0: // Pitch Bend
 173:Core/Src/MIDI_event.c **** 		pitchbend = pack.evnt2 * 128 + pack.evnt1;
 174:Core/Src/MIDI_event.c **** 		break;
 175:Core/Src/MIDI_event.c **** 	}
 176:Core/Src/MIDI_event.c **** }
 143              		.loc 1 176 1 is_stmt 0 view .LVU23
 144 0022 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 145              	.LVL6:
 146              	.L32:
 147              	.LBB4:
  87:Core/Src/MIDI_event.c **** 		notes_Active[noteOff] = 0;
 148              		.loc 1 87 3 is_stmt 1 view .LVU24
  88:Core/Src/MIDI_event.c **** 		notesCount--;
 149              		.loc 1 88 3 view .LVU25
  89:Core/Src/MIDI_event.c **** 		if (notesCount <= 0) // no notes active anymore
 150              		.loc 1 89 13 is_stmt 0 view .LVU26
 151 0024 384E     		ldr	r6, .L41
 152              	.LVL7:
  88:Core/Src/MIDI_event.c **** 		notesCount--;
 153              		.loc 1 88 25 view .LVU27
 154 0026 394B     		ldr	r3, .L41+4
  89:Core/Src/MIDI_event.c **** 		if (notesCount <= 0) // no notes active anymore
 155              		.loc 1 89 13 view .LVU28
 156 0028 3278     		ldrb	r2, [r6]	@ zero_extendqisi2
 157 002a 013A     		subs	r2, r2, #1
  88:Core/Src/MIDI_event.c **** 		notesCount--;
 158              		.loc 1 88 25 view .LVU29
 159 002c 0024     		movs	r4, #0
  89:Core/Src/MIDI_event.c **** 		if (notesCount <= 0) // no notes active anymore
 160              		.loc 1 89 13 view .LVU30
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccIQytze.s 			page 7


 161 002e 52B2     		sxtb	r2, r2
  90:Core/Src/MIDI_event.c **** 		{
 162              		.loc 1 90 6 view .LVU31
 163 0030 A242     		cmp	r2, r4
  88:Core/Src/MIDI_event.c **** 		notesCount--;
 164              		.loc 1 88 25 view .LVU32
 165 0032 5C55     		strb	r4, [r3, r5]
  89:Core/Src/MIDI_event.c **** 		if (notesCount <= 0) // no notes active anymore
 166              		.loc 1 89 3 is_stmt 1 view .LVU33
  89:Core/Src/MIDI_event.c **** 		if (notesCount <= 0) // no notes active anymore
 167              		.loc 1 89 13 is_stmt 0 view .LVU34
 168 0034 3270     		strb	r2, [r6]
  90:Core/Src/MIDI_event.c **** 		{
 169              		.loc 1 90 3 is_stmt 1 view .LVU35
  90:Core/Src/MIDI_event.c **** 		{
 170              		.loc 1 90 6 is_stmt 0 view .LVU36
 171 0036 49DD     		ble	.L33
  98:Core/Src/MIDI_event.c **** 			{
 172              		.loc 1 98 4 is_stmt 1 view .LVU37
  98:Core/Src/MIDI_event.c **** 			{
 173              		.loc 1 98 17 is_stmt 0 view .LVU38
 174 0038 354E     		ldr	r6, .L41+8
  98:Core/Src/MIDI_event.c **** 			{
 175              		.loc 1 98 7 view .LVU39
 176 003a 3278     		ldrb	r2, [r6]	@ zero_extendqisi2
 177 003c AA42     		cmp	r2, r5
 178 003e F0D1     		bne	.L9
 179 0040 1A46     		mov	r2, r3
 180 0042 2346     		mov	r3, r4
 181 0044 01E0     		b	.L16
 182              	.LVL8:
 183              	.L35:
 184              	.LBB5:
 101:Core/Src/MIDI_event.c **** 				{
 185              		.loc 1 101 19 discriminator 2 view .LVU40
 186 0046 802B     		cmp	r3, #128
 187 0048 57D0     		beq	.L34
 188              	.LVL9:
 189              	.L16:
 101:Core/Src/MIDI_event.c **** 				{
 190              		.loc 1 101 27 is_stmt 1 view .LVU41
 101:Core/Src/MIDI_event.c **** 				{
 191              		.loc 1 101 19 view .LVU42
 103:Core/Src/MIDI_event.c **** 						break;
 192              		.loc 1 103 22 is_stmt 0 view .LVU43
 193 004a 12F8011B 		ldrb	r1, [r2], #1	@ zero_extendqisi2
 103:Core/Src/MIDI_event.c **** 						break;
 194              		.loc 1 103 9 view .LVU44
 195 004e 0129     		cmp	r1, #1
 196 0050 D8B2     		uxtb	r0, r3
 197              	.LVL10:
 103:Core/Src/MIDI_event.c **** 						break;
 198              		.loc 1 103 6 is_stmt 1 view .LVU45
 101:Core/Src/MIDI_event.c **** 				{
 199              		.loc 1 101 19 is_stmt 0 view .LVU46
 200 0052 03F10103 		add	r3, r3, #1
 103:Core/Src/MIDI_event.c **** 						break;
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccIQytze.s 			page 8


 201              		.loc 1 103 9 view .LVU47
 202 0056 F6D1     		bne	.L35
 203              	.LBE5:
 204              	.LBB6:
 149:Core/Src/MIDI_event.c **** 				}
 205              		.loc 1 149 6 is_stmt 1 view .LVU48
 149:Core/Src/MIDI_event.c **** 				}
 206              		.loc 1 149 19 is_stmt 0 view .LVU49
 207 0058 3070     		strb	r0, [r6]
 208              	.LVL11:
 209              	.L40:
 149:Core/Src/MIDI_event.c **** 				}
 210              		.loc 1 149 19 view .LVU50
 211              	.LBE6:
 212              	.LBE4:
 213              		.loc 1 176 1 view .LVU51
 214 005a F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 215              	.LVL12:
 216              	.L11:
 217              	.LBB10:
 173:Core/Src/MIDI_event.c **** 		break;
 218              		.loc 1 173 3 is_stmt 1 view .LVU52
 173:Core/Src/MIDI_event.c **** 		break;
 219              		.loc 1 173 13 is_stmt 0 view .LVU53
 220 005c 2D4B     		ldr	r3, .L41+12
 173:Core/Src/MIDI_event.c **** 		break;
 221              		.loc 1 173 32 view .LVU54
 222 005e 05EBC412 		add	r2, r5, r4, lsl #7
 173:Core/Src/MIDI_event.c **** 		break;
 223              		.loc 1 173 13 view .LVU55
 224 0062 1A80     		strh	r2, [r3]	@ movhi
 174:Core/Src/MIDI_event.c **** 	}
 225              		.loc 1 174 3 is_stmt 1 view .LVU56
 226              	.LBE10:
 227              		.loc 1 176 1 is_stmt 0 view .LVU57
 228 0064 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 229              	.LVL13:
 230              	.L10:
 231              	.LBB11:
 112:Core/Src/MIDI_event.c **** 		velocity = pack.evnt2;
 232              		.loc 1 112 3 is_stmt 1 view .LVU58
 113:Core/Src/MIDI_event.c **** 		/*********************  Note On *************************/	
 233              		.loc 1 113 3 view .LVU59
 113:Core/Src/MIDI_event.c **** 		/*********************  Note On *************************/	
 234              		.loc 1 113 12 is_stmt 0 view .LVU60
 235 0066 2C4A     		ldr	r2, .L41+16
 236 0068 1670     		strb	r6, [r2]
 115:Core/Src/MIDI_event.c **** 		{			
 237              		.loc 1 115 3 is_stmt 1 view .LVU61
 115:Core/Src/MIDI_event.c **** 		{			
 238              		.loc 1 115 6 is_stmt 0 view .LVU62
 239 006a CCB9     		cbnz	r4, .L36
 128:Core/Src/MIDI_event.c **** 			notesCount--;
 240              		.loc 1 128 4 is_stmt 1 view .LVU63
 129:Core/Src/MIDI_event.c **** 			
 241              		.loc 1 129 14 is_stmt 0 view .LVU64
 242 006c 264F     		ldr	r7, .L41
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccIQytze.s 			page 9


 128:Core/Src/MIDI_event.c **** 			notesCount--;
 243              		.loc 1 128 25 view .LVU65
 244 006e 274B     		ldr	r3, .L41+4
 129:Core/Src/MIDI_event.c **** 			
 245              		.loc 1 129 14 view .LVU66
 246 0070 3A78     		ldrb	r2, [r7]	@ zero_extendqisi2
 128:Core/Src/MIDI_event.c **** 			notesCount--;
 247              		.loc 1 128 25 view .LVU67
 248 0072 5E55     		strb	r6, [r3, r5]
 129:Core/Src/MIDI_event.c **** 			
 249              		.loc 1 129 4 is_stmt 1 view .LVU68
 129:Core/Src/MIDI_event.c **** 			
 250              		.loc 1 129 14 is_stmt 0 view .LVU69
 251 0074 013A     		subs	r2, r2, #1
 252 0076 52B2     		sxtb	r2, r2
 132:Core/Src/MIDI_event.c **** 			{
 253              		.loc 1 132 7 view .LVU70
 254 0078 002A     		cmp	r2, #0
 129:Core/Src/MIDI_event.c **** 			
 255              		.loc 1 129 14 view .LVU71
 256 007a 3A70     		strb	r2, [r7]
 132:Core/Src/MIDI_event.c **** 			{
 257              		.loc 1 132 4 is_stmt 1 view .LVU72
 132:Core/Src/MIDI_event.c **** 			{
 258              		.loc 1 132 7 is_stmt 0 view .LVU73
 259 007c 2EDD     		ble	.L37
 141:Core/Src/MIDI_event.c **** 				{
 260              		.loc 1 141 5 is_stmt 1 view .LVU74
 141:Core/Src/MIDI_event.c **** 				{
 261              		.loc 1 141 16 is_stmt 0 view .LVU75
 262 007e 244E     		ldr	r6, .L41+8
 263              	.LVL14:
 141:Core/Src/MIDI_event.c **** 				{
 264              		.loc 1 141 8 view .LVU76
 265 0080 3278     		ldrb	r2, [r6]	@ zero_extendqisi2
 266 0082 AA42     		cmp	r2, r5
 267 0084 CDD1     		bne	.L9
 268 0086 2246     		mov	r2, r4
 269 0088 01E0     		b	.L21
 270              	.LVL15:
 271              	.L39:
 272              	.LBB7:
 144:Core/Src/MIDI_event.c **** 					{
 273              		.loc 1 144 20 discriminator 2 view .LVU77
 274 008a 802A     		cmp	r2, #128
 275 008c 38D0     		beq	.L38
 276              	.LVL16:
 277              	.L21:
 144:Core/Src/MIDI_event.c **** 					{
 278              		.loc 1 144 28 is_stmt 1 view .LVU78
 144:Core/Src/MIDI_event.c **** 					{
 279              		.loc 1 144 20 view .LVU79
 146:Core/Src/MIDI_event.c **** 							break;
 280              		.loc 1 146 23 is_stmt 0 view .LVU80
 281 008e 13F8011B 		ldrb	r1, [r3], #1	@ zero_extendqisi2
 146:Core/Src/MIDI_event.c **** 							break;
 282              		.loc 1 146 10 view .LVU81
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccIQytze.s 			page 10


 283 0092 0129     		cmp	r1, #1
 284 0094 D0B2     		uxtb	r0, r2
 285              	.LVL17:
 146:Core/Src/MIDI_event.c **** 							break;
 286              		.loc 1 146 7 is_stmt 1 view .LVU82
 144:Core/Src/MIDI_event.c **** 					{
 287              		.loc 1 144 20 is_stmt 0 view .LVU83
 288 0096 02F10102 		add	r2, r2, #1
 146:Core/Src/MIDI_event.c **** 							break;
 289              		.loc 1 146 10 view .LVU84
 290 009a F6D1     		bne	.L39
 149:Core/Src/MIDI_event.c **** 				}
 291              		.loc 1 149 6 is_stmt 1 view .LVU85
 149:Core/Src/MIDI_event.c **** 				}
 292              		.loc 1 149 19 is_stmt 0 view .LVU86
 293 009c 3070     		strb	r0, [r6]
 294 009e DCE7     		b	.L40
 295              	.LVL18:
 296              	.L36:
 149:Core/Src/MIDI_event.c **** 				}
 297              		.loc 1 149 19 view .LVU87
 298              	.LBE7:
 117:Core/Src/MIDI_event.c **** 			// SEGGER_RTT_printf(0, "Note ON, pitch %u\r\n", currentPitch); // debug
 299              		.loc 1 117 4 is_stmt 1 view .LVU88
 117:Core/Src/MIDI_event.c **** 			// SEGGER_RTT_printf(0, "Note ON, pitch %u\r\n", currentPitch); // debug
 300              		.loc 1 117 17 is_stmt 0 view .LVU89
 301 00a0 1B48     		ldr	r0, .L41+8
 302              	.LVL19:
 119:Core/Src/MIDI_event.c **** 			ADSR_keyOn(&adsr_amp); // start both envelopes
 303              		.loc 1 119 4 view .LVU90
 304 00a2 0122     		movs	r2, #1
 117:Core/Src/MIDI_event.c **** 			// SEGGER_RTT_printf(0, "Note ON, pitch %u\r\n", currentPitch); // debug
 305              		.loc 1 117 17 view .LVU91
 306 00a4 0370     		strb	r3, [r0]
 119:Core/Src/MIDI_event.c **** 			ADSR_keyOn(&adsr_amp); // start both envelopes
 307              		.loc 1 119 4 is_stmt 1 view .LVU92
 308 00a6 4FF48041 		mov	r1, #16384
 309 00aa 1C48     		ldr	r0, .L41+20
 310 00ac FFF7FEFF 		bl	HAL_GPIO_WritePin
 311              	.LVL20:
 120:Core/Src/MIDI_event.c **** 			ADSR_keyOn(&adsr_filt);
 312              		.loc 1 120 4 view .LVU93
 313 00b0 1B48     		ldr	r0, .L41+24
 314 00b2 FFF7FEFF 		bl	ADSR_keyOn
 315              	.LVL21:
 121:Core/Src/MIDI_event.c **** 			notesCount++;
 316              		.loc 1 121 4 view .LVU94
 317 00b6 1B48     		ldr	r0, .L41+28
 318 00b8 FFF7FEFF 		bl	ADSR_keyOn
 319              	.LVL22:
 122:Core/Src/MIDI_event.c **** 			notes_Active[noteOn] = 1;
 320              		.loc 1 122 4 view .LVU95
 122:Core/Src/MIDI_event.c **** 			notes_Active[noteOn] = 1;
 321              		.loc 1 122 14 is_stmt 0 view .LVU96
 322 00bc 124A     		ldr	r2, .L41
 123:Core/Src/MIDI_event.c **** 		}
 323              		.loc 1 123 25 view .LVU97
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccIQytze.s 			page 11


 324 00be 1349     		ldr	r1, .L41+4
 122:Core/Src/MIDI_event.c **** 			notes_Active[noteOn] = 1;
 325              		.loc 1 122 14 view .LVU98
 326 00c0 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 123:Core/Src/MIDI_event.c **** 		}
 327              		.loc 1 123 25 view .LVU99
 328 00c2 0120     		movs	r0, #1
 122:Core/Src/MIDI_event.c **** 			notes_Active[noteOn] = 1;
 329              		.loc 1 122 14 view .LVU100
 330 00c4 0344     		add	r3, r3, r0
 123:Core/Src/MIDI_event.c **** 		}
 331              		.loc 1 123 25 view .LVU101
 332 00c6 4855     		strb	r0, [r1, r5]
 122:Core/Src/MIDI_event.c **** 			notes_Active[noteOn] = 1;
 333              		.loc 1 122 14 view .LVU102
 334 00c8 1370     		strb	r3, [r2]
 123:Core/Src/MIDI_event.c **** 		}
 335              		.loc 1 123 4 is_stmt 1 view .LVU103
 336              	.LBE11:
 337              		.loc 1 176 1 is_stmt 0 view .LVU104
 338 00ca F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 339              	.LVL23:
 340              	.L33:
 341              	.LBB12:
  92:Core/Src/MIDI_event.c **** 			ADSR_keyOff(&adsr_filt);
 342              		.loc 1 92 4 is_stmt 1 view .LVU105
 343 00cc 1448     		ldr	r0, .L41+24
 344              	.LVL24:
  92:Core/Src/MIDI_event.c **** 			ADSR_keyOff(&adsr_filt);
 345              		.loc 1 92 4 is_stmt 0 view .LVU106
 346 00ce FFF7FEFF 		bl	ADSR_keyOff
 347              	.LVL25:
  93:Core/Src/MIDI_event.c **** 			notesCount = 0;
 348              		.loc 1 93 4 is_stmt 1 view .LVU107
 349 00d2 1448     		ldr	r0, .L41+28
 350 00d4 FFF7FEFF 		bl	ADSR_keyOff
 351              	.LVL26:
  94:Core/Src/MIDI_event.c **** 		}
 352              		.loc 1 94 4 view .LVU108
  94:Core/Src/MIDI_event.c **** 		}
 353              		.loc 1 94 15 is_stmt 0 view .LVU109
 354 00d8 3470     		strb	r4, [r6]
 355              	.LBE12:
 356              		.loc 1 176 1 view .LVU110
 357 00da F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 358              	.LVL27:
 359              	.L37:
 360              	.LBB13:
 134:Core/Src/MIDI_event.c **** 				ADSR_keyOff(&adsr_filt);
 361              		.loc 1 134 5 is_stmt 1 view .LVU111
 362 00dc 1048     		ldr	r0, .L41+24
 363              	.LVL28:
 134:Core/Src/MIDI_event.c **** 				ADSR_keyOff(&adsr_filt);
 364              		.loc 1 134 5 is_stmt 0 view .LVU112
 365 00de FFF7FEFF 		bl	ADSR_keyOff
 366              	.LVL29:
 135:Core/Src/MIDI_event.c **** 				notesCount = 0;
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccIQytze.s 			page 12


 367              		.loc 1 135 5 is_stmt 1 view .LVU113
 368 00e2 1048     		ldr	r0, .L41+28
 369 00e4 FFF7FEFF 		bl	ADSR_keyOff
 370              	.LVL30:
 136:Core/Src/MIDI_event.c **** 				HAL_GPIO_WritePin(LD5_GPIO_Port, LD5_Pin, GPIO_PIN_RESET); // red LED OFF when all MIDI notes o
 371              		.loc 1 136 5 view .LVU114
 137:Core/Src/MIDI_event.c **** 			}
 372              		.loc 1 137 5 is_stmt 0 view .LVU115
 373 00e8 2246     		mov	r2, r4
 136:Core/Src/MIDI_event.c **** 				HAL_GPIO_WritePin(LD5_GPIO_Port, LD5_Pin, GPIO_PIN_RESET); // red LED OFF when all MIDI notes o
 374              		.loc 1 136 16 view .LVU116
 375 00ea 3E70     		strb	r6, [r7]
 137:Core/Src/MIDI_event.c **** 			}
 376              		.loc 1 137 5 is_stmt 1 view .LVU117
 377 00ec 0B48     		ldr	r0, .L41+20
 378              	.LBE13:
 379              		.loc 1 176 1 is_stmt 0 view .LVU118
 380 00ee BDE8F840 		pop	{r3, r4, r5, r6, r7, lr}
 381              		.cfi_remember_state
 382              		.cfi_restore 14
 383              		.cfi_restore 7
 384              		.cfi_restore 6
 385              		.cfi_restore 5
 386              		.cfi_restore 4
 387              		.cfi_restore 3
 388              		.cfi_def_cfa_offset 0
 389              	.LVL31:
 390              	.LBB14:
 137:Core/Src/MIDI_event.c **** 			}
 391              		.loc 1 137 5 view .LVU119
 392 00f2 4FF48041 		mov	r1, #16384
 393 00f6 FFF7FEBF 		b	HAL_GPIO_WritePin
 394              	.LVL32:
 395              	.L34:
 396              		.cfi_restore_state
 397              	.LBB8:
 137:Core/Src/MIDI_event.c **** 			}
 398              		.loc 1 137 5 view .LVU120
 399 00fa 1846     		mov	r0, r3
 400              	.LVL33:
 106:Core/Src/MIDI_event.c **** 			}
 401              		.loc 1 106 5 is_stmt 1 view .LVU121
 402              	.LBE8:
 403              	.LBB9:
 149:Core/Src/MIDI_event.c **** 				}
 404              		.loc 1 149 6 view .LVU122
 149:Core/Src/MIDI_event.c **** 				}
 405              		.loc 1 149 19 is_stmt 0 view .LVU123
 406 00fc 3070     		strb	r0, [r6]
 407 00fe ACE7     		b	.L40
 408              	.LVL34:
 409              	.L38:
 149:Core/Src/MIDI_event.c **** 				}
 410              		.loc 1 149 19 view .LVU124
 411 0100 1046     		mov	r0, r2
 412              	.LVL35:
 149:Core/Src/MIDI_event.c **** 				}
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccIQytze.s 			page 13


 413              		.loc 1 149 6 is_stmt 1 view .LVU125
 149:Core/Src/MIDI_event.c **** 				}
 414              		.loc 1 149 19 is_stmt 0 view .LVU126
 415 0102 3070     		strb	r0, [r6]
 416 0104 A9E7     		b	.L40
 417              	.L42:
 418 0106 00BF     		.align	2
 419              	.L41:
 420 0108 00000000 		.word	.LANCHOR1
 421 010c 00000000 		.word	.LANCHOR0
 422 0110 00000000 		.word	.LANCHOR3
 423 0114 00000000 		.word	.LANCHOR2
 424 0118 00000000 		.word	.LANCHOR4
 425 011c 000C0240 		.word	1073875968
 426 0120 00000000 		.word	adsr_amp
 427 0124 00000000 		.word	adsr_filt
 428              	.LBE9:
 429              	.LBE14:
 430              		.cfi_endproc
 431              	.LFE139:
 433              		.section	.text.USBH_UserProcess_callback,"ax",%progbits
 434              		.align	1
 435              		.p2align 2,,3
 436              		.global	USBH_UserProcess_callback
 437              		.syntax unified
 438              		.thumb
 439              		.thumb_func
 441              	USBH_UserProcess_callback:
 442              	.LVL36:
 443              	.LFB140:
 177:Core/Src/MIDI_event.c **** 
 178:Core/Src/MIDI_event.c **** 
 179:Core/Src/MIDI_event.c **** 
 180:Core/Src/MIDI_event.c **** 
 181:Core/Src/MIDI_event.c **** /*=================================================================================================
 182:Core/Src/MIDI_event.c **** /**
 183:Core/Src/MIDI_event.c ****  * @brief  User Process function callback
 184:Core/Src/MIDI_event.c ****  * @param  phost: Host Handle
 185:Core/Src/MIDI_event.c ****  * @param  id: Host Library user message ID
 186:Core/Src/MIDI_event.c ****  * @retval none
 187:Core/Src/MIDI_event.c ****  */
 188:Core/Src/MIDI_event.c **** void USBH_UserProcess_callback(USBH_HandleTypeDef *pHost, uint8_t vId)
 189:Core/Src/MIDI_event.c **** {
 444              		.loc 1 189 1 is_stmt 1 view -0
 445              		.cfi_startproc
 446              		@ args = 0, pretend = 0, frame = 0
 447              		@ frame_needed = 0, uses_anonymous_args = 0
 190:Core/Src/MIDI_event.c **** 	switch (vId)
 448              		.loc 1 190 2 view .LVU128
 449 0000 0429     		cmp	r1, #4
 450 0002 06D0     		beq	.L44
 451 0004 0529     		cmp	r1, #5
 189:Core/Src/MIDI_event.c **** 	switch (vId)
 452              		.loc 1 189 1 is_stmt 0 view .LVU129
 453 0006 10B5     		push	{r4, lr}
 454              		.cfi_def_cfa_offset 8
 455              		.cfi_offset 4, -8
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccIQytze.s 			page 14


 456              		.cfi_offset 14, -4
 457 0008 0B46     		mov	r3, r1
 458              		.loc 1 190 2 view .LVU130
 459 000a 20D0     		beq	.L45
 460 000c 0229     		cmp	r1, #2
 461 000e 08D0     		beq	.L52
 191:Core/Src/MIDI_event.c **** 	{
 192:Core/Src/MIDI_event.c **** 	case HOST_USER_SELECT_CONFIGURATION:
 193:Core/Src/MIDI_event.c **** 		break;
 194:Core/Src/MIDI_event.c **** 
 195:Core/Src/MIDI_event.c **** 	case HOST_USER_DISCONNECTION:
 196:Core/Src/MIDI_event.c **** 		Appli_state = MIDI_APPLICATION_DISCONNECT;
 197:Core/Src/MIDI_event.c **** 		// 4 - green, 3 - orange, 5 - red, 6 - blue
 198:Core/Src/MIDI_event.c **** 		HAL_GPIO_WritePin(LD4_GPIO_Port, LD4_Pin, GPIO_PIN_RESET);
 199:Core/Src/MIDI_event.c **** 		HAL_GPIO_WritePin(LD6_GPIO_Port, LD6_Pin, GPIO_PIN_RESET);
 200:Core/Src/MIDI_event.c **** 		break;
 201:Core/Src/MIDI_event.c **** 
 202:Core/Src/MIDI_event.c **** 	case HOST_USER_CLASS_ACTIVE:
 203:Core/Src/MIDI_event.c **** 		Appli_state = MIDI_APPLICATION_READY;
 204:Core/Src/MIDI_event.c **** 		HAL_GPIO_WritePin(LD4_GPIO_Port, LD4_Pin, GPIO_PIN_SET);
 205:Core/Src/MIDI_event.c **** 		HAL_GPIO_WritePin(LD6_GPIO_Port, LD6_Pin, GPIO_PIN_RESET);
 206:Core/Src/MIDI_event.c **** 		HAL_GPIO_WritePin(LD5_GPIO_Port, LD5_Pin, GPIO_PIN_RESET);
 207:Core/Src/MIDI_event.c **** 		break;
 208:Core/Src/MIDI_event.c **** 
 209:Core/Src/MIDI_event.c **** 	case HOST_USER_CONNECTION:
 210:Core/Src/MIDI_event.c **** 		Appli_state = MIDI_APPLICATION_START;
 211:Core/Src/MIDI_event.c **** 		HAL_GPIO_WritePin(GPIOD, 0x8000, GPIO_PIN_SET);
 212:Core/Src/MIDI_event.c **** 		break;
 213:Core/Src/MIDI_event.c **** 
 214:Core/Src/MIDI_event.c **** 	default:
 215:Core/Src/MIDI_event.c **** 		break;
 216:Core/Src/MIDI_event.c **** 	}
 217:Core/Src/MIDI_event.c **** }
 462              		.loc 1 217 1 view .LVU131
 463 0010 10BD     		pop	{r4, pc}
 464              	.L44:
 465              		.cfi_def_cfa_offset 0
 466              		.cfi_restore 4
 467              		.cfi_restore 14
 210:Core/Src/MIDI_event.c **** 		HAL_GPIO_WritePin(GPIOD, 0x8000, GPIO_PIN_SET);
 468              		.loc 1 210 3 is_stmt 1 view .LVU132
 210:Core/Src/MIDI_event.c **** 		HAL_GPIO_WritePin(GPIOD, 0x8000, GPIO_PIN_SET);
 469              		.loc 1 210 15 is_stmt 0 view .LVU133
 470 0012 174B     		ldr	r3, .L53
 211:Core/Src/MIDI_event.c **** 		break;
 471              		.loc 1 211 3 view .LVU134
 472 0014 1748     		ldr	r0, .L53+4
 473              	.LVL37:
 210:Core/Src/MIDI_event.c **** 		HAL_GPIO_WritePin(GPIOD, 0x8000, GPIO_PIN_SET);
 474              		.loc 1 210 15 view .LVU135
 475 0016 0122     		movs	r2, #1
 211:Core/Src/MIDI_event.c **** 		break;
 476              		.loc 1 211 3 view .LVU136
 477 0018 4FF40041 		mov	r1, #32768
 478              	.LVL38:
 210:Core/Src/MIDI_event.c **** 		HAL_GPIO_WritePin(GPIOD, 0x8000, GPIO_PIN_SET);
 479              		.loc 1 210 15 view .LVU137
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccIQytze.s 			page 15


 480 001c 1A70     		strb	r2, [r3]
 211:Core/Src/MIDI_event.c **** 		break;
 481              		.loc 1 211 3 is_stmt 1 view .LVU138
 482 001e FFF7FEBF 		b	HAL_GPIO_WritePin
 483              	.LVL39:
 484              	.L52:
 485              		.cfi_def_cfa_offset 8
 486              		.cfi_offset 4, -8
 487              		.cfi_offset 14, -4
 203:Core/Src/MIDI_event.c **** 		HAL_GPIO_WritePin(LD4_GPIO_Port, LD4_Pin, GPIO_PIN_SET);
 488              		.loc 1 203 3 view .LVU139
 203:Core/Src/MIDI_event.c **** 		HAL_GPIO_WritePin(LD4_GPIO_Port, LD4_Pin, GPIO_PIN_SET);
 489              		.loc 1 203 15 is_stmt 0 view .LVU140
 490 0022 134C     		ldr	r4, .L53
 204:Core/Src/MIDI_event.c **** 		HAL_GPIO_WritePin(LD6_GPIO_Port, LD6_Pin, GPIO_PIN_RESET);
 491              		.loc 1 204 3 view .LVU141
 492 0024 1348     		ldr	r0, .L53+4
 493              	.LVL40:
 203:Core/Src/MIDI_event.c **** 		HAL_GPIO_WritePin(LD4_GPIO_Port, LD4_Pin, GPIO_PIN_SET);
 494              		.loc 1 203 15 view .LVU142
 495 0026 2370     		strb	r3, [r4]
 204:Core/Src/MIDI_event.c **** 		HAL_GPIO_WritePin(LD6_GPIO_Port, LD6_Pin, GPIO_PIN_RESET);
 496              		.loc 1 204 3 is_stmt 1 view .LVU143
 497 0028 0122     		movs	r2, #1
 498 002a 4FF48051 		mov	r1, #4096
 499              	.LVL41:
 204:Core/Src/MIDI_event.c **** 		HAL_GPIO_WritePin(LD6_GPIO_Port, LD6_Pin, GPIO_PIN_RESET);
 500              		.loc 1 204 3 is_stmt 0 view .LVU144
 501 002e FFF7FEFF 		bl	HAL_GPIO_WritePin
 502              	.LVL42:
 205:Core/Src/MIDI_event.c **** 		HAL_GPIO_WritePin(LD5_GPIO_Port, LD5_Pin, GPIO_PIN_RESET);
 503              		.loc 1 205 3 is_stmt 1 view .LVU145
 504 0032 1048     		ldr	r0, .L53+4
 505 0034 0022     		movs	r2, #0
 506 0036 4FF40041 		mov	r1, #32768
 507 003a FFF7FEFF 		bl	HAL_GPIO_WritePin
 508              	.LVL43:
 206:Core/Src/MIDI_event.c **** 		break;
 509              		.loc 1 206 3 view .LVU146
 510              		.loc 1 217 1 is_stmt 0 view .LVU147
 511 003e BDE81040 		pop	{r4, lr}
 512              		.cfi_remember_state
 513              		.cfi_restore 14
 514              		.cfi_restore 4
 515              		.cfi_def_cfa_offset 0
 206:Core/Src/MIDI_event.c **** 		break;
 516              		.loc 1 206 3 view .LVU148
 517 0042 0C48     		ldr	r0, .L53+4
 518 0044 0022     		movs	r2, #0
 519 0046 4FF48041 		mov	r1, #16384
 520 004a FFF7FEBF 		b	HAL_GPIO_WritePin
 521              	.LVL44:
 522              	.L45:
 523              		.cfi_restore_state
 196:Core/Src/MIDI_event.c **** 		// 4 - green, 3 - orange, 5 - red, 6 - blue
 524              		.loc 1 196 3 is_stmt 1 view .LVU149
 196:Core/Src/MIDI_event.c **** 		// 4 - green, 3 - orange, 5 - red, 6 - blue
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccIQytze.s 			page 16


 525              		.loc 1 196 15 is_stmt 0 view .LVU150
 526 004e 084B     		ldr	r3, .L53
 198:Core/Src/MIDI_event.c **** 		HAL_GPIO_WritePin(LD6_GPIO_Port, LD6_Pin, GPIO_PIN_RESET);
 527              		.loc 1 198 3 view .LVU151
 528 0050 0848     		ldr	r0, .L53+4
 529              	.LVL45:
 198:Core/Src/MIDI_event.c **** 		HAL_GPIO_WritePin(LD6_GPIO_Port, LD6_Pin, GPIO_PIN_RESET);
 530              		.loc 1 198 3 view .LVU152
 531 0052 0022     		movs	r2, #0
 532 0054 4FF48051 		mov	r1, #4096
 533              	.LVL46:
 196:Core/Src/MIDI_event.c **** 		// 4 - green, 3 - orange, 5 - red, 6 - blue
 534              		.loc 1 196 15 view .LVU153
 535 0058 0424     		movs	r4, #4
 536 005a 1C70     		strb	r4, [r3]
 198:Core/Src/MIDI_event.c **** 		HAL_GPIO_WritePin(LD6_GPIO_Port, LD6_Pin, GPIO_PIN_RESET);
 537              		.loc 1 198 3 is_stmt 1 view .LVU154
 538 005c FFF7FEFF 		bl	HAL_GPIO_WritePin
 539              	.LVL47:
 199:Core/Src/MIDI_event.c **** 		break;
 540              		.loc 1 199 3 view .LVU155
 541              		.loc 1 217 1 is_stmt 0 view .LVU156
 542 0060 BDE81040 		pop	{r4, lr}
 543              		.cfi_restore 14
 544              		.cfi_restore 4
 545              		.cfi_def_cfa_offset 0
 199:Core/Src/MIDI_event.c **** 		break;
 546              		.loc 1 199 3 view .LVU157
 547 0064 0348     		ldr	r0, .L53+4
 548 0066 0022     		movs	r2, #0
 549 0068 4FF40041 		mov	r1, #32768
 550 006c FFF7FEBF 		b	HAL_GPIO_WritePin
 551              	.LVL48:
 552              	.L54:
 553              		.align	2
 554              	.L53:
 555 0070 00000000 		.word	.LANCHOR5
 556 0074 000C0240 		.word	1073875968
 557              		.cfi_endproc
 558              	.LFE140:
 560              		.global	notesCount
 561              		.global	notes_Active
 562              		.global	velocity
 563              		.global	currentPitch
 564              		.global	pitchbend
 565              		.global	Appli_state
 566              		.global	hUSBHost
 567              		.section	.bss.Appli_state,"aw",%nobits
 568              		.set	.LANCHOR5,. + 0
 571              	Appli_state:
 572 0000 00       		.space	1
 573              		.section	.bss.currentPitch,"aw",%nobits
 574              		.set	.LANCHOR3,. + 0
 577              	currentPitch:
 578 0000 00       		.space	1
 579              		.section	.bss.hUSBHost,"aw",%nobits
 580              		.align	2
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccIQytze.s 			page 17


 583              	hUSBHost:
 584 0000 00000000 		.space	1564
 584      00000000 
 584      00000000 
 584      00000000 
 584      00000000 
 585              		.section	.bss.notesCount,"aw",%nobits
 586              		.set	.LANCHOR1,. + 0
 589              	notesCount:
 590 0000 00       		.space	1
 591              		.section	.bss.notes_Active,"aw",%nobits
 592              		.align	2
 593              		.set	.LANCHOR0,. + 0
 596              	notes_Active:
 597 0000 00000000 		.space	128
 597      00000000 
 597      00000000 
 597      00000000 
 597      00000000 
 598              		.section	.bss.pitchbend,"aw",%nobits
 599              		.align	1
 600              		.set	.LANCHOR2,. + 0
 603              	pitchbend:
 604 0000 0000     		.space	2
 605              		.section	.bss.velocity,"aw",%nobits
 606              		.set	.LANCHOR4,. + 0
 609              	velocity:
 610 0000 00       		.space	1
 611              		.text
 612              	.Letext0:
 613              		.file 2 "/Users/johannes/Library/Application Support/Code/User/globalStorage/bmd.stm32-for-vscode/
 614              		.file 3 "/Users/johannes/Library/Application Support/Code/User/globalStorage/bmd.stm32-for-vscode/
 615              		.file 4 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/stm32f407xx.h"
 616              		.file 5 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_gpio.h"
 617              		.file 6 "Middlewares/ST/STM32_USB_Host_Library/Core/Inc/usbh_def.h"
 618              		.file 7 "Core/Inc/usbh_MIDI.h"
 619              		.file 8 "Core/Inc/MIDI_application.h"
 620              		.file 9 "Core/Inc/ADSR_envelope.h"
 621              		.file 10 "<built-in>"
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccIQytze.s 			page 18


DEFINED SYMBOLS
                            *ABS*:0000000000000000 MIDI_event.c
/var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccIQytze.s:18     .text.allNotesOff:0000000000000000 $t
/var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccIQytze.s:25     .text.allNotesOff:0000000000000000 allNotesOff
/var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccIQytze.s:62     .text.allNotesOff:0000000000000014 $d
/var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccIQytze.s:68     .text.MIDI_eventInit:0000000000000000 $t
/var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccIQytze.s:75     .text.MIDI_eventInit:0000000000000000 MIDI_eventInit
/var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccIQytze.s:92     .text.MIDI_eventInit:000000000000000c $d
/var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccIQytze.s:97     .text.ProcessMIDI:0000000000000000 $t
/var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccIQytze.s:104    .text.ProcessMIDI:0000000000000000 ProcessMIDI
/var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccIQytze.s:420    .text.ProcessMIDI:0000000000000108 $d
/var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccIQytze.s:434    .text.USBH_UserProcess_callback:0000000000000000 $t
/var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccIQytze.s:441    .text.USBH_UserProcess_callback:0000000000000000 USBH_UserProcess_callback
/var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccIQytze.s:555    .text.USBH_UserProcess_callback:0000000000000070 $d
/var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccIQytze.s:589    .bss.notesCount:0000000000000000 notesCount
/var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccIQytze.s:596    .bss.notes_Active:0000000000000000 notes_Active
/var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccIQytze.s:609    .bss.velocity:0000000000000000 velocity
/var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccIQytze.s:577    .bss.currentPitch:0000000000000000 currentPitch
/var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccIQytze.s:603    .bss.pitchbend:0000000000000000 pitchbend
/var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccIQytze.s:571    .bss.Appli_state:0000000000000000 Appli_state
/var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccIQytze.s:583    .bss.hUSBHost:0000000000000000 hUSBHost
/var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccIQytze.s:572    .bss.Appli_state:0000000000000000 $d
/var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccIQytze.s:578    .bss.currentPitch:0000000000000000 $d
/var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccIQytze.s:580    .bss.hUSBHost:0000000000000000 $d
/var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccIQytze.s:590    .bss.notesCount:0000000000000000 $d
/var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccIQytze.s:592    .bss.notes_Active:0000000000000000 $d
/var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccIQytze.s:599    .bss.pitchbend:0000000000000000 $d
/var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccIQytze.s:610    .bss.velocity:0000000000000000 $d

UNDEFINED SYMBOLS
memset
HAL_GPIO_WritePin
ADSR_keyOn
ADSR_keyOff
adsr_amp
adsr_filt
