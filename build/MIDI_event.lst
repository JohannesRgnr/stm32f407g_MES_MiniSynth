ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccgqLb28.s 			page 1


   1              		.cpu cortex-m4
   2              		.arch armv7e-m
   3              		.fpu fpv4-sp-d16
   4              		.eabi_attribute 27, 1
   5              		.eabi_attribute 28, 1
   6              		.eabi_attribute 20, 1
   7              		.eabi_attribute 21, 1
   8              		.eabi_attribute 23, 3
   9              		.eabi_attribute 24, 1
  10              		.eabi_attribute 25, 1
  11              		.eabi_attribute 26, 1
  12              		.eabi_attribute 30, 2
  13              		.eabi_attribute 34, 1
  14              		.eabi_attribute 18, 4
  15              		.file	"MIDI_event.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text.allNotesOff,"ax",%progbits
  20              		.align	1
  21              		.p2align 2,,3
  22              		.global	allNotesOff
  23              		.syntax unified
  24              		.thumb
  25              		.thumb_func
  27              	allNotesOff:
  28              	.LFB242:
  29              		.file 1 "Core/Src/MIDI_event.c"
   1:Core/Src/MIDI_event.c **** /**
   2:Core/Src/MIDI_event.c ****  * @file MIDI_event.c
   3:Core/Src/MIDI_event.c ****  * @author modified by johannes regnier
   4:Core/Src/MIDI_event.c ****  * @brief MIDI events processing
   5:Core/Src/MIDI_event.c ****  * @note Makes use of the great resources from Tom Erbe
   6:Core/Src/MIDI_event.c ****  * @note http://synthnotes.ucsd.edu/wp4/index.php/2019/09/24/adding-the-usb-otg-midi-driver-polypho
   7:Core/Src/MIDI_event.c ****  * @note and of the awesome Xavier Halgand's Dekrispator
   8:Core/Src/MIDI_event.c ****  * @version 0.1
   9:Core/Src/MIDI_event.c ****  * @date 2023-12-30
  10:Core/Src/MIDI_event.c ****  *
  11:Core/Src/MIDI_event.c ****  * @copyright Copyright (c) 2023
  12:Core/Src/MIDI_event.c ****  *
  13:Core/Src/MIDI_event.c ****  */
  14:Core/Src/MIDI_event.c **** 
  15:Core/Src/MIDI_event.c **** #include <stdint.h>
  16:Core/Src/MIDI_event.c **** 
  17:Core/Src/MIDI_event.c **** #include "MIDI_event.h"
  18:Core/Src/MIDI_event.c **** #include "gpio.h"
  19:Core/Src/MIDI_event.c **** #include "SEGGER_RTT.h"
  20:Core/Src/MIDI_event.c **** #include "CONSTS.h"
  21:Core/Src/MIDI_event.c **** #include "helper_functions.h"
  22:Core/Src/MIDI_event.c **** #include "ADSR_envelope.h"
  23:Core/Src/MIDI_event.c **** 
  24:Core/Src/MIDI_event.c **** USBH_HandleTypeDef hUSBHost; /* USB Host handle */
  25:Core/Src/MIDI_event.c **** MIDI_ApplicationTypeDef Appli_state = MIDI_APPLICATION_IDLE;
  26:Core/Src/MIDI_event.c **** 
  27:Core/Src/MIDI_event.c **** uint16_t pitchbend ;
  28:Core/Src/MIDI_event.c **** uint8_t currentPitch ;
  29:Core/Src/MIDI_event.c **** uint8_t velocity, noteOn_velocity;
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccgqLb28.s 			page 2


  30:Core/Src/MIDI_event.c **** uint8_t notes_Active[128] = {0}; // at most, 128 MIDI notes are active
  31:Core/Src/MIDI_event.c **** int8_t notesCount = 0 ;			 // number of notes active
  32:Core/Src/MIDI_event.c **** extern ADSR_t adsr_amp;
  33:Core/Src/MIDI_event.c **** extern ADSR_t adsr_filt;
  34:Core/Src/MIDI_event.c **** extern ADSR_t adsr_index;
  35:Core/Src/MIDI_event.c **** 
  36:Core/Src/MIDI_event.c **** void allNotesOff(void)
  37:Core/Src/MIDI_event.c **** {
  30              		.loc 1 37 1 view -0
  31              		.cfi_startproc
  32              		@ args = 0, pretend = 0, frame = 0
  33              		@ frame_needed = 0, uses_anonymous_args = 0
  38:Core/Src/MIDI_event.c **** 	for (uint8_t i = 0; i < 128; i++)
  34              		.loc 1 38 2 view .LVU1
  35              	.LBB3:
  36              		.loc 1 38 7 view .LVU2
  37              	.LVL0:
  38              		.loc 1 38 24 view .LVU3
  39              	.LBE3:
  37:Core/Src/MIDI_event.c **** 	for (uint8_t i = 0; i < 128; i++)
  40              		.loc 1 37 1 is_stmt 0 view .LVU4
  41 0000 2DE9F843 		push	{r3, r4, r5, r6, r7, r8, r9, lr}
  42              		.cfi_def_cfa_offset 32
  43              		.cfi_offset 3, -32
  44              		.cfi_offset 4, -28
  45              		.cfi_offset 5, -24
  46              		.cfi_offset 6, -20
  47              		.cfi_offset 7, -16
  48              		.cfi_offset 8, -12
  49              		.cfi_offset 9, -8
  50              		.cfi_offset 14, -4
  51 0004 0C4C     		ldr	r4, .L6
  52              	.LBB4:
  39:Core/Src/MIDI_event.c **** 	{
  40:Core/Src/MIDI_event.c **** 		notes_Active[i] = 0;
  41:Core/Src/MIDI_event.c **** 		ADSR_keyOff(&adsr_amp); // release envelopes
  53              		.loc 1 41 3 view .LVU5
  54 0006 DFF83C90 		ldr	r9, .L6+12
  42:Core/Src/MIDI_event.c **** 		ADSR_keyOff(&adsr_filt);
  55              		.loc 1 42 3 view .LVU6
  56 000a DFF83C80 		ldr	r8, .L6+16
  43:Core/Src/MIDI_event.c **** 		ADSR_keyOff(&adsr_index);
  57              		.loc 1 43 3 view .LVU7
  58 000e 0B4F     		ldr	r7, .L6+4
  59 0010 04F18006 		add	r6, r4, #128
  60              	.LVL1:
  61              	.L2:
  40:Core/Src/MIDI_event.c **** 		ADSR_keyOff(&adsr_amp); // release envelopes
  62              		.loc 1 40 3 is_stmt 1 discriminator 3 view .LVU8
  41:Core/Src/MIDI_event.c **** 		ADSR_keyOff(&adsr_filt);
  63              		.loc 1 41 3 is_stmt 0 discriminator 3 view .LVU9
  64 0014 4846     		mov	r0, r9
  40:Core/Src/MIDI_event.c **** 		ADSR_keyOff(&adsr_amp); // release envelopes
  65              		.loc 1 40 19 discriminator 3 view .LVU10
  66 0016 0025     		movs	r5, #0
  67 0018 04F8015F 		strb	r5, [r4, #1]!
  68              	.LVL2:
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccgqLb28.s 			page 3


  41:Core/Src/MIDI_event.c **** 		ADSR_keyOff(&adsr_filt);
  69              		.loc 1 41 3 is_stmt 1 discriminator 3 view .LVU11
  70 001c FFF7FEFF 		bl	ADSR_keyOff
  71              	.LVL3:
  42:Core/Src/MIDI_event.c **** 		ADSR_keyOff(&adsr_index);
  72              		.loc 1 42 3 discriminator 3 view .LVU12
  73 0020 4046     		mov	r0, r8
  74 0022 FFF7FEFF 		bl	ADSR_keyOff
  75              	.LVL4:
  76              		.loc 1 43 3 discriminator 3 view .LVU13
  77 0026 3846     		mov	r0, r7
  78 0028 FFF7FEFF 		bl	ADSR_keyOff
  79              	.LVL5:
  38:Core/Src/MIDI_event.c **** 	{
  80              		.loc 1 38 32 discriminator 3 view .LVU14
  38:Core/Src/MIDI_event.c **** 	{
  81              		.loc 1 38 24 discriminator 3 view .LVU15
  82 002c B442     		cmp	r4, r6
  83 002e F1D1     		bne	.L2
  84              	.LBE4:
  44:Core/Src/MIDI_event.c **** 	}
  45:Core/Src/MIDI_event.c **** 	notesCount = 0;
  85              		.loc 1 45 2 view .LVU16
  86              		.loc 1 45 13 is_stmt 0 view .LVU17
  87 0030 034B     		ldr	r3, .L6+8
  88 0032 1D70     		strb	r5, [r3]
  46:Core/Src/MIDI_event.c **** }
  89              		.loc 1 46 1 view .LVU18
  90 0034 BDE8F883 		pop	{r3, r4, r5, r6, r7, r8, r9, pc}
  91              	.LVL6:
  92              	.L7:
  93              		.loc 1 46 1 view .LVU19
  94              		.align	2
  95              	.L6:
  96 0038 FFFFFFFF 		.word	.LANCHOR0-1
  97 003c 00000000 		.word	adsr_index
  98 0040 00000000 		.word	.LANCHOR1
  99 0044 00000000 		.word	adsr_amp
 100 0048 00000000 		.word	adsr_filt
 101              		.cfi_endproc
 102              	.LFE242:
 104              		.section	.text.MIDI_eventInit,"ax",%progbits
 105              		.align	1
 106              		.p2align 2,,3
 107              		.global	MIDI_eventInit
 108              		.syntax unified
 109              		.thumb
 110              		.thumb_func
 112              	MIDI_eventInit:
 113              	.LFB243:
  47:Core/Src/MIDI_event.c **** 
  48:Core/Src/MIDI_event.c **** 
  49:Core/Src/MIDI_event.c **** void MIDI_eventInit()
  50:Core/Src/MIDI_event.c **** {
 114              		.loc 1 50 1 is_stmt 1 view -0
 115              		.cfi_startproc
 116              		@ args = 0, pretend = 0, frame = 0
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccgqLb28.s 			page 4


 117              		@ frame_needed = 0, uses_anonymous_args = 0
 118              		@ link register save eliminated.
  51:Core/Src/MIDI_event.c **** 	pitchbend = 8192;
 119              		.loc 1 51 2 view .LVU21
 120              		.loc 1 51 12 is_stmt 0 view .LVU22
 121 0000 024B     		ldr	r3, .L9
 122 0002 4FF40052 		mov	r2, #8192
 123 0006 1A80     		strh	r2, [r3]	@ movhi
  52:Core/Src/MIDI_event.c **** }
 124              		.loc 1 52 1 view .LVU23
 125 0008 7047     		bx	lr
 126              	.L10:
 127 000a 00BF     		.align	2
 128              	.L9:
 129 000c 00000000 		.word	.LANCHOR2
 130              		.cfi_endproc
 131              	.LFE243:
 133              		.section	.text.ProcessMIDI,"ax",%progbits
 134              		.align	1
 135              		.p2align 2,,3
 136              		.global	ProcessMIDI
 137              		.syntax unified
 138              		.thumb
 139              		.thumb_func
 141              	ProcessMIDI:
 142              	.LVL7:
 143              	.LFB244:
  53:Core/Src/MIDI_event.c **** 
  54:Core/Src/MIDI_event.c **** /**
  55:Core/Src/MIDI_event.c ****  * @brief Process incoming MIDI events - Monophonic, with legato
  56:Core/Src/MIDI_event.c ****  * @note Code adapted from Xavier Halgand and from Tom Erbe's version
  57:Core/Src/MIDI_event.c ****  *
  58:Core/Src/MIDI_event.c ****  * @param pack
  59:Core/Src/MIDI_event.c ****  */
  60:Core/Src/MIDI_event.c **** void ProcessMIDI(midi_package_t pack)
  61:Core/Src/MIDI_event.c **** {
 144              		.loc 1 61 1 is_stmt 1 view -0
 145              		.cfi_startproc
 146              		@ args = 0, pretend = 0, frame = 0
 147              		@ frame_needed = 0, uses_anonymous_args = 0
 148              		.loc 1 61 1 is_stmt 0 view .LVU25
 149 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 150              		.cfi_def_cfa_offset 24
 151              		.cfi_offset 3, -24
 152              		.cfi_offset 4, -20
 153              		.cfi_offset 5, -16
 154              		.cfi_offset 6, -12
 155              		.cfi_offset 7, -8
 156              		.cfi_offset 14, -4
 157 0002 C0F30743 		ubfx	r3, r0, #16, #8
 158 0006 C0F30766 		ubfx	r6, r0, #24, #8
 159 000a 040E     		lsrs	r4, r0, #24
  62:Core/Src/MIDI_event.c **** 	uint8_t status;
  63:Core/Src/MIDI_event.c **** 
  64:Core/Src/MIDI_event.c **** 	status = pack.evnt0 & 0xF0;
 160              		.loc 1 64 9 view .LVU26
 161 000c C0F30720 		ubfx	r0, r0, #8, #8
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccgqLb28.s 			page 5


 162              	.LVL8:
 163              		.loc 1 64 9 view .LVU27
 164 0010 00F0F000 		and	r0, r0, #240
  65:Core/Src/MIDI_event.c **** 	if (status == 0xF0) // not using any of these
  66:Core/Src/MIDI_event.c **** 	{
  67:Core/Src/MIDI_event.c **** 		switch (pack.evnt0)
  68:Core/Src/MIDI_event.c **** 		{
  69:Core/Src/MIDI_event.c **** 		case 0xF0: // Start of System Exclusive
  70:Core/Src/MIDI_event.c **** 		case 0xF1: // MIDI Time Code Quarter Fram
  71:Core/Src/MIDI_event.c **** 		case 0xF2: // Song Position Pointer
  72:Core/Src/MIDI_event.c **** 		case 0xF3: // Song Select
  73:Core/Src/MIDI_event.c **** 		case 0xF4: // Undefined
  74:Core/Src/MIDI_event.c **** 		case 0xF5: // Undefined
  75:Core/Src/MIDI_event.c **** 		case 0xF6: // Tune Request
  76:Core/Src/MIDI_event.c **** 		case 0xF7: // End of System Exclusive
  77:Core/Src/MIDI_event.c **** 		case 0xF8: // Timing Clock (24 times a quarter note)
  78:Core/Src/MIDI_event.c **** 		case 0xF9: // Undefined
  79:Core/Src/MIDI_event.c **** 		case 0xFA: // Start Sequence
  80:Core/Src/MIDI_event.c **** 		case 0xFB: // Continue Sequence
  81:Core/Src/MIDI_event.c **** 		case 0xFC: // Pause Sequence
  82:Core/Src/MIDI_event.c **** 		case 0xFD: // Undefined
  83:Core/Src/MIDI_event.c **** 		case 0xFE: // Active Sensing
  84:Core/Src/MIDI_event.c **** 		case 0xFF: // Reset all synthesizers to power up
  85:Core/Src/MIDI_event.c **** 			break;
  86:Core/Src/MIDI_event.c **** 		}
  87:Core/Src/MIDI_event.c **** 	}
  88:Core/Src/MIDI_event.c **** 
  89:Core/Src/MIDI_event.c **** 	switch (status)
 165              		.loc 1 89 2 view .LVU28
 166 0014 9028     		cmp	r0, #144
 167 0016 1D46     		mov	r5, r3
 168              	.LVL9:
  62:Core/Src/MIDI_event.c **** 	uint8_t status;
 169              		.loc 1 62 2 is_stmt 1 view .LVU29
  64:Core/Src/MIDI_event.c **** 	if (status == 0xF0) // not using any of these
 170              		.loc 1 64 2 view .LVU30
  65:Core/Src/MIDI_event.c **** 	if (status == 0xF0) // not using any of these
 171              		.loc 1 65 2 view .LVU31
 172              		.loc 1 89 2 view .LVU32
 173 0018 25D0     		beq	.L12
 174 001a E028     		cmp	r0, #224
 175 001c 1ED0     		beq	.L13
 176 001e 8028     		cmp	r0, #128
 177 0020 00D0     		beq	.L34
 178              	.LVL10:
 179              	.L11:
  90:Core/Src/MIDI_event.c **** 	{
  91:Core/Src/MIDI_event.c **** 	/********************* Real Note Off *************************/	
  92:Core/Src/MIDI_event.c **** 	case 0x80: 
  93:Core/Src/MIDI_event.c **** 		uint8_t noteOff = pack.evnt1;
  94:Core/Src/MIDI_event.c **** 		notes_Active[noteOff] = 0;
  95:Core/Src/MIDI_event.c **** 		notesCount--;
  96:Core/Src/MIDI_event.c **** 		if (notesCount <= 0) // no notes active anymore
  97:Core/Src/MIDI_event.c **** 		{
  98:Core/Src/MIDI_event.c **** 			ADSR_keyOff(&adsr_amp); // release envelopes
  99:Core/Src/MIDI_event.c **** 			ADSR_keyOff(&adsr_filt);
 100:Core/Src/MIDI_event.c **** 			ADSR_keyOff(&adsr_index);
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccgqLb28.s 			page 6


 101:Core/Src/MIDI_event.c **** 			notesCount = 0;
 102:Core/Src/MIDI_event.c **** 		}
 103:Core/Src/MIDI_event.c **** 		else // legato 
 104:Core/Src/MIDI_event.c **** 		{
 105:Core/Src/MIDI_event.c **** 			if (noteOff  == currentPitch) // let sound the lowest key pressed
 106:Core/Src/MIDI_event.c **** 			{
 107:Core/Src/MIDI_event.c **** 				uint8_t i;
 108:Core/Src/MIDI_event.c **** 				for (i = 0; i < 128; i++)
 109:Core/Src/MIDI_event.c **** 				{
 110:Core/Src/MIDI_event.c **** 					if (notes_Active[i] == 1) // find the lowest key pressed
 111:Core/Src/MIDI_event.c **** 						break;
 112:Core/Src/MIDI_event.c **** 				}
 113:Core/Src/MIDI_event.c **** 				currentPitch = i; 
 114:Core/Src/MIDI_event.c **** 			}
 115:Core/Src/MIDI_event.c **** 		}
 116:Core/Src/MIDI_event.c **** 		break;
 117:Core/Src/MIDI_event.c **** 	
 118:Core/Src/MIDI_event.c **** 	case 0x90: // Note On
 119:Core/Src/MIDI_event.c **** 		uint8_t noteOn = pack.evnt1;
 120:Core/Src/MIDI_event.c **** 		velocity = pack.evnt2;
 121:Core/Src/MIDI_event.c **** 		/*********************  Note On *************************/	
 122:Core/Src/MIDI_event.c **** 		if (velocity > 0) 
 123:Core/Src/MIDI_event.c **** 		{			
 124:Core/Src/MIDI_event.c **** 			currentPitch = noteOn;
 125:Core/Src/MIDI_event.c **** 			noteOn_velocity = velocity;
 126:Core/Src/MIDI_event.c **** 			ADSR_keyOn(&adsr_amp); // start envelopes
 127:Core/Src/MIDI_event.c **** 			ADSR_keyOn(&adsr_filt);
 128:Core/Src/MIDI_event.c **** 			ADSR_keyOn(&adsr_index);
 129:Core/Src/MIDI_event.c **** 			// SEGGER_RTT_printf(0, "Note ON, pitch %u\r\n", currentPitch); // debug
 130:Core/Src/MIDI_event.c **** 			HAL_GPIO_WritePin(LD5_GPIO_Port, LD5_Pin, GPIO_PIN_SET); // red LED ON when incoming MIDI note o
 131:Core/Src/MIDI_event.c **** 			notesCount++;
 132:Core/Src/MIDI_event.c **** 			notes_Active[noteOn] = 1;
 133:Core/Src/MIDI_event.c **** 		}
 134:Core/Src/MIDI_event.c **** 		/*********************  Note Off *************************/
 135:Core/Src/MIDI_event.c **** 		else //  common implementation in MIDI devices: Note Off = Note On with velocity 0
 136:Core/Src/MIDI_event.c **** 		{			
 137:Core/Src/MIDI_event.c **** 			notes_Active[noteOn] = 0;
 138:Core/Src/MIDI_event.c **** 			notesCount--;
 139:Core/Src/MIDI_event.c **** 			// SEGGER_RTT_printf(0, "Note OFF, pitch %u\r\n", currentPitch);
 140:Core/Src/MIDI_event.c **** 			if (notesCount <= 0)
 141:Core/Src/MIDI_event.c **** 			{
 142:Core/Src/MIDI_event.c **** 				ADSR_keyOff(&adsr_amp);		// release envelopes
 143:Core/Src/MIDI_event.c **** 				ADSR_keyOff(&adsr_filt);
 144:Core/Src/MIDI_event.c **** 				ADSR_keyOff(&adsr_index);
 145:Core/Src/MIDI_event.c **** 				notesCount = 0;
 146:Core/Src/MIDI_event.c **** 				HAL_GPIO_WritePin(LD5_GPIO_Port, LD5_Pin, GPIO_PIN_RESET); // red LED OFF when all MIDI notes o
 147:Core/Src/MIDI_event.c **** 			}
 148:Core/Src/MIDI_event.c **** 			else // legato
 149:Core/Src/MIDI_event.c **** 			{
 150:Core/Src/MIDI_event.c **** 				if (noteOn == currentPitch)
 151:Core/Src/MIDI_event.c **** 				{
 152:Core/Src/MIDI_event.c **** 					uint8_t i;
 153:Core/Src/MIDI_event.c **** 					for (i = 0; i < 128; i++)
 154:Core/Src/MIDI_event.c **** 					{
 155:Core/Src/MIDI_event.c **** 						if (notes_Active[i] == 1) // find the lowest key pressed
 156:Core/Src/MIDI_event.c **** 							break;
 157:Core/Src/MIDI_event.c **** 					}
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccgqLb28.s 			page 7


 158:Core/Src/MIDI_event.c **** 					currentPitch = i; 
 159:Core/Src/MIDI_event.c **** 				}
 160:Core/Src/MIDI_event.c **** 			}
 161:Core/Src/MIDI_event.c **** 		}
 162:Core/Src/MIDI_event.c **** 	/********************* Other MIDI Messages *************************/	
 163:Core/Src/MIDI_event.c **** 	case 0xA0: 	// Polyphonic Pressure
 164:Core/Src/MIDI_event.c **** 		break;
 165:Core/Src/MIDI_event.c **** 	case 0xB0:	// Control Change
 166:Core/Src/MIDI_event.c **** 		// uint8_t cc_number = pack.evnt1;
 167:Core/Src/MIDI_event.c **** 		// uint8_t cc_value = pack.evnt2;
 168:Core/Src/MIDI_event.c **** 		// SEGGER_RTT_printf(0, "CC#  %u %u\r\n", cc_number, cc_value); // debug
 169:Core/Src/MIDI_event.c **** 		switch (pack.evnt1) // CC number --> implement CC actions
 170:Core/Src/MIDI_event.c **** 		{
 171:Core/Src/MIDI_event.c **** 		case 20:
 172:Core/Src/MIDI_event.c **** 			break;
 173:Core/Src/MIDI_event.c **** 		case 7:
 174:Core/Src/MIDI_event.c **** 			break; // master volume
 175:Core/Src/MIDI_event.c **** 		}
 176:Core/Src/MIDI_event.c **** 		break;
 177:Core/Src/MIDI_event.c **** 	case 0xC0: // Program Change
 178:Core/Src/MIDI_event.c **** 		break;
 179:Core/Src/MIDI_event.c **** 	case 0xD0: // After Touch
 180:Core/Src/MIDI_event.c **** 		break;
 181:Core/Src/MIDI_event.c **** 	case 0xE0: // Pitch Bend
 182:Core/Src/MIDI_event.c **** 		pitchbend = pack.evnt2 * 128 + pack.evnt1;
 183:Core/Src/MIDI_event.c **** 		break;
 184:Core/Src/MIDI_event.c **** 	}
 185:Core/Src/MIDI_event.c **** }
 180              		.loc 1 185 1 is_stmt 0 view .LVU33
 181 0022 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 182              	.LVL11:
 183              	.L34:
 184              	.LBB5:
  93:Core/Src/MIDI_event.c **** 		notes_Active[noteOff] = 0;
 185              		.loc 1 93 3 is_stmt 1 view .LVU34
  94:Core/Src/MIDI_event.c **** 		notesCount--;
 186              		.loc 1 94 3 view .LVU35
  95:Core/Src/MIDI_event.c **** 		if (notesCount <= 0) // no notes active anymore
 187              		.loc 1 95 13 is_stmt 0 view .LVU36
 188 0024 3D4E     		ldr	r6, .L43
 189              	.LVL12:
  94:Core/Src/MIDI_event.c **** 		notesCount--;
 190              		.loc 1 94 25 view .LVU37
 191 0026 3E4B     		ldr	r3, .L43+4
  95:Core/Src/MIDI_event.c **** 		if (notesCount <= 0) // no notes active anymore
 192              		.loc 1 95 13 view .LVU38
 193 0028 3278     		ldrb	r2, [r6]	@ zero_extendqisi2
 194 002a 013A     		subs	r2, r2, #1
  94:Core/Src/MIDI_event.c **** 		notesCount--;
 195              		.loc 1 94 25 view .LVU39
 196 002c 0024     		movs	r4, #0
  95:Core/Src/MIDI_event.c **** 		if (notesCount <= 0) // no notes active anymore
 197              		.loc 1 95 13 view .LVU40
 198 002e 52B2     		sxtb	r2, r2
  96:Core/Src/MIDI_event.c **** 		{
 199              		.loc 1 96 6 view .LVU41
 200 0030 A242     		cmp	r2, r4
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccgqLb28.s 			page 8


  94:Core/Src/MIDI_event.c **** 		notesCount--;
 201              		.loc 1 94 25 view .LVU42
 202 0032 5C55     		strb	r4, [r3, r5]
  95:Core/Src/MIDI_event.c **** 		if (notesCount <= 0) // no notes active anymore
 203              		.loc 1 95 3 is_stmt 1 view .LVU43
  95:Core/Src/MIDI_event.c **** 		if (notesCount <= 0) // no notes active anymore
 204              		.loc 1 95 13 is_stmt 0 view .LVU44
 205 0034 3270     		strb	r2, [r6]
  96:Core/Src/MIDI_event.c **** 		{
 206              		.loc 1 96 3 is_stmt 1 view .LVU45
  96:Core/Src/MIDI_event.c **** 		{
 207              		.loc 1 96 6 is_stmt 0 view .LVU46
 208 0036 4EDD     		ble	.L35
 105:Core/Src/MIDI_event.c **** 			{
 209              		.loc 1 105 4 is_stmt 1 view .LVU47
 105:Core/Src/MIDI_event.c **** 			{
 210              		.loc 1 105 17 is_stmt 0 view .LVU48
 211 0038 3A4E     		ldr	r6, .L43+8
 105:Core/Src/MIDI_event.c **** 			{
 212              		.loc 1 105 7 view .LVU49
 213 003a 3278     		ldrb	r2, [r6]	@ zero_extendqisi2
 214 003c AA42     		cmp	r2, r5
 215 003e F0D1     		bne	.L11
 216 0040 1A46     		mov	r2, r3
 217 0042 2346     		mov	r3, r4
 218 0044 01E0     		b	.L18
 219              	.LVL13:
 220              	.L37:
 221              	.LBB6:
 108:Core/Src/MIDI_event.c **** 				{
 222              		.loc 1 108 19 discriminator 2 view .LVU50
 223 0046 802B     		cmp	r3, #128
 224 0048 62D0     		beq	.L36
 225              	.LVL14:
 226              	.L18:
 108:Core/Src/MIDI_event.c **** 				{
 227              		.loc 1 108 27 is_stmt 1 view .LVU51
 108:Core/Src/MIDI_event.c **** 				{
 228              		.loc 1 108 19 view .LVU52
 110:Core/Src/MIDI_event.c **** 						break;
 229              		.loc 1 110 22 is_stmt 0 view .LVU53
 230 004a 12F8011B 		ldrb	r1, [r2], #1	@ zero_extendqisi2
 110:Core/Src/MIDI_event.c **** 						break;
 231              		.loc 1 110 9 view .LVU54
 232 004e 0129     		cmp	r1, #1
 233 0050 D8B2     		uxtb	r0, r3
 234              	.LVL15:
 110:Core/Src/MIDI_event.c **** 						break;
 235              		.loc 1 110 6 is_stmt 1 view .LVU55
 108:Core/Src/MIDI_event.c **** 				{
 236              		.loc 1 108 19 is_stmt 0 view .LVU56
 237 0052 03F10103 		add	r3, r3, #1
 110:Core/Src/MIDI_event.c **** 						break;
 238              		.loc 1 110 9 view .LVU57
 239 0056 F6D1     		bne	.L37
 240              	.LBE6:
 241              	.LBB7:
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccgqLb28.s 			page 9


 158:Core/Src/MIDI_event.c **** 				}
 242              		.loc 1 158 6 is_stmt 1 view .LVU58
 158:Core/Src/MIDI_event.c **** 				}
 243              		.loc 1 158 19 is_stmt 0 view .LVU59
 244 0058 3070     		strb	r0, [r6]
 245              	.LVL16:
 246              	.L42:
 158:Core/Src/MIDI_event.c **** 				}
 247              		.loc 1 158 19 view .LVU60
 248              	.LBE7:
 249              	.LBE5:
 250              		.loc 1 185 1 view .LVU61
 251 005a F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 252              	.LVL17:
 253              	.L13:
 254              	.LBB11:
 182:Core/Src/MIDI_event.c **** 		break;
 255              		.loc 1 182 3 is_stmt 1 view .LVU62
 182:Core/Src/MIDI_event.c **** 		break;
 256              		.loc 1 182 13 is_stmt 0 view .LVU63
 257 005c 324B     		ldr	r3, .L43+12
 182:Core/Src/MIDI_event.c **** 		break;
 258              		.loc 1 182 32 view .LVU64
 259 005e 05EBC412 		add	r2, r5, r4, lsl #7
 182:Core/Src/MIDI_event.c **** 		break;
 260              		.loc 1 182 13 view .LVU65
 261 0062 1A80     		strh	r2, [r3]	@ movhi
 183:Core/Src/MIDI_event.c **** 	}
 262              		.loc 1 183 3 is_stmt 1 view .LVU66
 263              	.LBE11:
 264              		.loc 1 185 1 is_stmt 0 view .LVU67
 265 0064 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 266              	.LVL18:
 267              	.L12:
 268              	.LBB12:
 119:Core/Src/MIDI_event.c **** 		velocity = pack.evnt2;
 269              		.loc 1 119 3 is_stmt 1 view .LVU68
 120:Core/Src/MIDI_event.c **** 		/*********************  Note On *************************/	
 270              		.loc 1 120 3 view .LVU69
 120:Core/Src/MIDI_event.c **** 		/*********************  Note On *************************/	
 271              		.loc 1 120 12 is_stmt 0 view .LVU70
 272 0066 314A     		ldr	r2, .L43+16
 273 0068 1670     		strb	r6, [r2]
 122:Core/Src/MIDI_event.c **** 		{			
 274              		.loc 1 122 3 is_stmt 1 view .LVU71
 122:Core/Src/MIDI_event.c **** 		{			
 275              		.loc 1 122 6 is_stmt 0 view .LVU72
 276 006a CCB9     		cbnz	r4, .L38
 137:Core/Src/MIDI_event.c **** 			notesCount--;
 277              		.loc 1 137 4 is_stmt 1 view .LVU73
 138:Core/Src/MIDI_event.c **** 			// SEGGER_RTT_printf(0, "Note OFF, pitch %u\r\n", currentPitch);
 278              		.loc 1 138 14 is_stmt 0 view .LVU74
 279 006c 2B4F     		ldr	r7, .L43
 137:Core/Src/MIDI_event.c **** 			notesCount--;
 280              		.loc 1 137 25 view .LVU75
 281 006e 2C4B     		ldr	r3, .L43+4
 138:Core/Src/MIDI_event.c **** 			// SEGGER_RTT_printf(0, "Note OFF, pitch %u\r\n", currentPitch);
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccgqLb28.s 			page 10


 282              		.loc 1 138 14 view .LVU76
 283 0070 3A78     		ldrb	r2, [r7]	@ zero_extendqisi2
 137:Core/Src/MIDI_event.c **** 			notesCount--;
 284              		.loc 1 137 25 view .LVU77
 285 0072 5E55     		strb	r6, [r3, r5]
 138:Core/Src/MIDI_event.c **** 			// SEGGER_RTT_printf(0, "Note OFF, pitch %u\r\n", currentPitch);
 286              		.loc 1 138 4 is_stmt 1 view .LVU78
 138:Core/Src/MIDI_event.c **** 			// SEGGER_RTT_printf(0, "Note OFF, pitch %u\r\n", currentPitch);
 287              		.loc 1 138 14 is_stmt 0 view .LVU79
 288 0074 013A     		subs	r2, r2, #1
 289 0076 52B2     		sxtb	r2, r2
 140:Core/Src/MIDI_event.c **** 			{
 290              		.loc 1 140 7 view .LVU80
 291 0078 002A     		cmp	r2, #0
 138:Core/Src/MIDI_event.c **** 			// SEGGER_RTT_printf(0, "Note OFF, pitch %u\r\n", currentPitch);
 292              		.loc 1 138 14 view .LVU81
 293 007a 3A70     		strb	r2, [r7]
 140:Core/Src/MIDI_event.c **** 			{
 294              		.loc 1 140 4 is_stmt 1 view .LVU82
 140:Core/Src/MIDI_event.c **** 			{
 295              		.loc 1 140 7 is_stmt 0 view .LVU83
 296 007c 36DD     		ble	.L39
 150:Core/Src/MIDI_event.c **** 				{
 297              		.loc 1 150 5 is_stmt 1 view .LVU84
 150:Core/Src/MIDI_event.c **** 				{
 298              		.loc 1 150 16 is_stmt 0 view .LVU85
 299 007e 294E     		ldr	r6, .L43+8
 300              	.LVL19:
 150:Core/Src/MIDI_event.c **** 				{
 301              		.loc 1 150 8 view .LVU86
 302 0080 3278     		ldrb	r2, [r6]	@ zero_extendqisi2
 303 0082 AA42     		cmp	r2, r5
 304 0084 CDD1     		bne	.L11
 305 0086 2246     		mov	r2, r4
 306 0088 01E0     		b	.L23
 307              	.LVL20:
 308              	.L41:
 309              	.LBB8:
 153:Core/Src/MIDI_event.c **** 					{
 310              		.loc 1 153 20 discriminator 2 view .LVU87
 311 008a 802A     		cmp	r2, #128
 312 008c 43D0     		beq	.L40
 313              	.LVL21:
 314              	.L23:
 153:Core/Src/MIDI_event.c **** 					{
 315              		.loc 1 153 28 is_stmt 1 view .LVU88
 153:Core/Src/MIDI_event.c **** 					{
 316              		.loc 1 153 20 view .LVU89
 155:Core/Src/MIDI_event.c **** 							break;
 317              		.loc 1 155 23 is_stmt 0 view .LVU90
 318 008e 13F8011B 		ldrb	r1, [r3], #1	@ zero_extendqisi2
 155:Core/Src/MIDI_event.c **** 							break;
 319              		.loc 1 155 10 view .LVU91
 320 0092 0129     		cmp	r1, #1
 321 0094 D0B2     		uxtb	r0, r2
 322              	.LVL22:
 155:Core/Src/MIDI_event.c **** 							break;
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccgqLb28.s 			page 11


 323              		.loc 1 155 7 is_stmt 1 view .LVU92
 153:Core/Src/MIDI_event.c **** 					{
 324              		.loc 1 153 20 is_stmt 0 view .LVU93
 325 0096 02F10102 		add	r2, r2, #1
 155:Core/Src/MIDI_event.c **** 							break;
 326              		.loc 1 155 10 view .LVU94
 327 009a F6D1     		bne	.L41
 158:Core/Src/MIDI_event.c **** 				}
 328              		.loc 1 158 6 is_stmt 1 view .LVU95
 158:Core/Src/MIDI_event.c **** 				}
 329              		.loc 1 158 19 is_stmt 0 view .LVU96
 330 009c 3070     		strb	r0, [r6]
 331 009e DCE7     		b	.L42
 332              	.LVL23:
 333              	.L38:
 158:Core/Src/MIDI_event.c **** 				}
 334              		.loc 1 158 19 view .LVU97
 335              	.LBE8:
 124:Core/Src/MIDI_event.c **** 			noteOn_velocity = velocity;
 336              		.loc 1 124 4 is_stmt 1 view .LVU98
 124:Core/Src/MIDI_event.c **** 			noteOn_velocity = velocity;
 337              		.loc 1 124 17 is_stmt 0 view .LVU99
 338 00a0 2049     		ldr	r1, .L43+8
 125:Core/Src/MIDI_event.c **** 			ADSR_keyOn(&adsr_amp); // start envelopes
 339              		.loc 1 125 20 view .LVU100
 340 00a2 234A     		ldr	r2, .L43+20
 126:Core/Src/MIDI_event.c **** 			ADSR_keyOn(&adsr_filt);
 341              		.loc 1 126 4 view .LVU101
 342 00a4 2348     		ldr	r0, .L43+24
 343              	.LVL24:
 124:Core/Src/MIDI_event.c **** 			noteOn_velocity = velocity;
 344              		.loc 1 124 17 view .LVU102
 345 00a6 0B70     		strb	r3, [r1]
 125:Core/Src/MIDI_event.c **** 			ADSR_keyOn(&adsr_amp); // start envelopes
 346              		.loc 1 125 4 is_stmt 1 view .LVU103
 125:Core/Src/MIDI_event.c **** 			ADSR_keyOn(&adsr_amp); // start envelopes
 347              		.loc 1 125 20 is_stmt 0 view .LVU104
 348 00a8 1670     		strb	r6, [r2]
 126:Core/Src/MIDI_event.c **** 			ADSR_keyOn(&adsr_filt);
 349              		.loc 1 126 4 is_stmt 1 view .LVU105
 350 00aa FFF7FEFF 		bl	ADSR_keyOn
 351              	.LVL25:
 127:Core/Src/MIDI_event.c **** 			ADSR_keyOn(&adsr_index);
 352              		.loc 1 127 4 view .LVU106
 353 00ae 2248     		ldr	r0, .L43+28
 354 00b0 FFF7FEFF 		bl	ADSR_keyOn
 355              	.LVL26:
 128:Core/Src/MIDI_event.c **** 			// SEGGER_RTT_printf(0, "Note ON, pitch %u\r\n", currentPitch); // debug
 356              		.loc 1 128 4 view .LVU107
 357 00b4 2148     		ldr	r0, .L43+32
 358 00b6 FFF7FEFF 		bl	ADSR_keyOn
 359              	.LVL27:
 130:Core/Src/MIDI_event.c **** 			notesCount++;
 360              		.loc 1 130 4 view .LVU108
 361 00ba 2148     		ldr	r0, .L43+36
 362 00bc 0122     		movs	r2, #1
 363 00be 4FF48041 		mov	r1, #16384
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccgqLb28.s 			page 12


 364 00c2 FFF7FEFF 		bl	HAL_GPIO_WritePin
 365              	.LVL28:
 131:Core/Src/MIDI_event.c **** 			notes_Active[noteOn] = 1;
 366              		.loc 1 131 4 view .LVU109
 131:Core/Src/MIDI_event.c **** 			notes_Active[noteOn] = 1;
 367              		.loc 1 131 14 is_stmt 0 view .LVU110
 368 00c6 154A     		ldr	r2, .L43
 132:Core/Src/MIDI_event.c **** 		}
 369              		.loc 1 132 25 view .LVU111
 370 00c8 1549     		ldr	r1, .L43+4
 131:Core/Src/MIDI_event.c **** 			notes_Active[noteOn] = 1;
 371              		.loc 1 131 14 view .LVU112
 372 00ca 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 132:Core/Src/MIDI_event.c **** 		}
 373              		.loc 1 132 25 view .LVU113
 374 00cc 0120     		movs	r0, #1
 131:Core/Src/MIDI_event.c **** 			notes_Active[noteOn] = 1;
 375              		.loc 1 131 14 view .LVU114
 376 00ce 0344     		add	r3, r3, r0
 132:Core/Src/MIDI_event.c **** 		}
 377              		.loc 1 132 25 view .LVU115
 378 00d0 4855     		strb	r0, [r1, r5]
 131:Core/Src/MIDI_event.c **** 			notes_Active[noteOn] = 1;
 379              		.loc 1 131 14 view .LVU116
 380 00d2 1370     		strb	r3, [r2]
 132:Core/Src/MIDI_event.c **** 		}
 381              		.loc 1 132 4 is_stmt 1 view .LVU117
 382              	.LBE12:
 383              		.loc 1 185 1 is_stmt 0 view .LVU118
 384 00d4 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 385              	.LVL29:
 386              	.L35:
 387              	.LBB13:
  98:Core/Src/MIDI_event.c **** 			ADSR_keyOff(&adsr_filt);
 388              		.loc 1 98 4 is_stmt 1 view .LVU119
 389 00d6 1748     		ldr	r0, .L43+24
 390              	.LVL30:
  98:Core/Src/MIDI_event.c **** 			ADSR_keyOff(&adsr_filt);
 391              		.loc 1 98 4 is_stmt 0 view .LVU120
 392 00d8 FFF7FEFF 		bl	ADSR_keyOff
 393              	.LVL31:
  99:Core/Src/MIDI_event.c **** 			ADSR_keyOff(&adsr_index);
 394              		.loc 1 99 4 is_stmt 1 view .LVU121
 395 00dc 1648     		ldr	r0, .L43+28
 396 00de FFF7FEFF 		bl	ADSR_keyOff
 397              	.LVL32:
 100:Core/Src/MIDI_event.c **** 			notesCount = 0;
 398              		.loc 1 100 4 view .LVU122
 399 00e2 1648     		ldr	r0, .L43+32
 400 00e4 FFF7FEFF 		bl	ADSR_keyOff
 401              	.LVL33:
 101:Core/Src/MIDI_event.c **** 		}
 402              		.loc 1 101 4 view .LVU123
 101:Core/Src/MIDI_event.c **** 		}
 403              		.loc 1 101 15 is_stmt 0 view .LVU124
 404 00e8 3470     		strb	r4, [r6]
 405              	.LBE13:
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccgqLb28.s 			page 13


 406              		.loc 1 185 1 view .LVU125
 407 00ea F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 408              	.LVL34:
 409              	.L39:
 410              	.LBB14:
 142:Core/Src/MIDI_event.c **** 				ADSR_keyOff(&adsr_filt);
 411              		.loc 1 142 5 is_stmt 1 view .LVU126
 412 00ec 1148     		ldr	r0, .L43+24
 413              	.LVL35:
 142:Core/Src/MIDI_event.c **** 				ADSR_keyOff(&adsr_filt);
 414              		.loc 1 142 5 is_stmt 0 view .LVU127
 415 00ee FFF7FEFF 		bl	ADSR_keyOff
 416              	.LVL36:
 143:Core/Src/MIDI_event.c **** 				ADSR_keyOff(&adsr_index);
 417              		.loc 1 143 5 is_stmt 1 view .LVU128
 418 00f2 1148     		ldr	r0, .L43+28
 419 00f4 FFF7FEFF 		bl	ADSR_keyOff
 420              	.LVL37:
 144:Core/Src/MIDI_event.c **** 				notesCount = 0;
 421              		.loc 1 144 5 view .LVU129
 422 00f8 1048     		ldr	r0, .L43+32
 423 00fa FFF7FEFF 		bl	ADSR_keyOff
 424              	.LVL38:
 145:Core/Src/MIDI_event.c **** 				HAL_GPIO_WritePin(LD5_GPIO_Port, LD5_Pin, GPIO_PIN_RESET); // red LED OFF when all MIDI notes o
 425              		.loc 1 145 5 view .LVU130
 146:Core/Src/MIDI_event.c **** 			}
 426              		.loc 1 146 5 is_stmt 0 view .LVU131
 427 00fe 2246     		mov	r2, r4
 145:Core/Src/MIDI_event.c **** 				HAL_GPIO_WritePin(LD5_GPIO_Port, LD5_Pin, GPIO_PIN_RESET); // red LED OFF when all MIDI notes o
 428              		.loc 1 145 16 view .LVU132
 429 0100 3E70     		strb	r6, [r7]
 146:Core/Src/MIDI_event.c **** 			}
 430              		.loc 1 146 5 is_stmt 1 view .LVU133
 431 0102 0F48     		ldr	r0, .L43+36
 432              	.LBE14:
 433              		.loc 1 185 1 is_stmt 0 view .LVU134
 434 0104 BDE8F840 		pop	{r3, r4, r5, r6, r7, lr}
 435              		.cfi_remember_state
 436              		.cfi_restore 14
 437              		.cfi_restore 7
 438              		.cfi_restore 6
 439              		.cfi_restore 5
 440              		.cfi_restore 4
 441              		.cfi_restore 3
 442              		.cfi_def_cfa_offset 0
 443              	.LVL39:
 444              	.LBB15:
 146:Core/Src/MIDI_event.c **** 			}
 445              		.loc 1 146 5 view .LVU135
 446 0108 4FF48041 		mov	r1, #16384
 447 010c FFF7FEBF 		b	HAL_GPIO_WritePin
 448              	.LVL40:
 449              	.L36:
 450              		.cfi_restore_state
 451              	.LBB9:
 146:Core/Src/MIDI_event.c **** 			}
 452              		.loc 1 146 5 view .LVU136
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccgqLb28.s 			page 14


 453 0110 1846     		mov	r0, r3
 454              	.LVL41:
 113:Core/Src/MIDI_event.c **** 			}
 455              		.loc 1 113 5 is_stmt 1 view .LVU137
 456              	.LBE9:
 457              	.LBB10:
 158:Core/Src/MIDI_event.c **** 				}
 458              		.loc 1 158 6 view .LVU138
 158:Core/Src/MIDI_event.c **** 				}
 459              		.loc 1 158 19 is_stmt 0 view .LVU139
 460 0112 3070     		strb	r0, [r6]
 461 0114 A1E7     		b	.L42
 462              	.LVL42:
 463              	.L40:
 158:Core/Src/MIDI_event.c **** 				}
 464              		.loc 1 158 19 view .LVU140
 465 0116 1046     		mov	r0, r2
 466              	.LVL43:
 158:Core/Src/MIDI_event.c **** 				}
 467              		.loc 1 158 6 is_stmt 1 view .LVU141
 158:Core/Src/MIDI_event.c **** 				}
 468              		.loc 1 158 19 is_stmt 0 view .LVU142
 469 0118 3070     		strb	r0, [r6]
 470 011a 9EE7     		b	.L42
 471              	.L44:
 472              		.align	2
 473              	.L43:
 474 011c 00000000 		.word	.LANCHOR1
 475 0120 00000000 		.word	.LANCHOR0
 476 0124 00000000 		.word	.LANCHOR3
 477 0128 00000000 		.word	.LANCHOR2
 478 012c 00000000 		.word	.LANCHOR4
 479 0130 00000000 		.word	.LANCHOR5
 480 0134 00000000 		.word	adsr_amp
 481 0138 00000000 		.word	adsr_filt
 482 013c 00000000 		.word	adsr_index
 483 0140 000C0240 		.word	1073875968
 484              	.LBE10:
 485              	.LBE15:
 486              		.cfi_endproc
 487              	.LFE244:
 489              		.section	.text.USBH_UserProcess_callback,"ax",%progbits
 490              		.align	1
 491              		.p2align 2,,3
 492              		.global	USBH_UserProcess_callback
 493              		.syntax unified
 494              		.thumb
 495              		.thumb_func
 497              	USBH_UserProcess_callback:
 498              	.LVL44:
 499              	.LFB245:
 186:Core/Src/MIDI_event.c **** 
 187:Core/Src/MIDI_event.c **** 
 188:Core/Src/MIDI_event.c **** 
 189:Core/Src/MIDI_event.c **** 
 190:Core/Src/MIDI_event.c **** /*=================================================================================================
 191:Core/Src/MIDI_event.c **** /**
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccgqLb28.s 			page 15


 192:Core/Src/MIDI_event.c ****  * @brief  User Process function callback
 193:Core/Src/MIDI_event.c ****  * @param  phost: Host Handle
 194:Core/Src/MIDI_event.c ****  * @param  id: Host Library user message ID
 195:Core/Src/MIDI_event.c ****  * @retval none
 196:Core/Src/MIDI_event.c ****  */
 197:Core/Src/MIDI_event.c **** void USBH_UserProcess_callback(USBH_HandleTypeDef *pHost, uint8_t vId)
 198:Core/Src/MIDI_event.c **** {
 500              		.loc 1 198 1 is_stmt 1 view -0
 501              		.cfi_startproc
 502              		@ args = 0, pretend = 0, frame = 0
 503              		@ frame_needed = 0, uses_anonymous_args = 0
 199:Core/Src/MIDI_event.c **** 	switch (vId)
 504              		.loc 1 199 2 view .LVU144
 505 0000 0429     		cmp	r1, #4
 506 0002 06D0     		beq	.L46
 507 0004 0529     		cmp	r1, #5
 198:Core/Src/MIDI_event.c **** 	switch (vId)
 508              		.loc 1 198 1 is_stmt 0 view .LVU145
 509 0006 10B5     		push	{r4, lr}
 510              		.cfi_def_cfa_offset 8
 511              		.cfi_offset 4, -8
 512              		.cfi_offset 14, -4
 513 0008 0B46     		mov	r3, r1
 514              		.loc 1 199 2 view .LVU146
 515 000a 20D0     		beq	.L47
 516 000c 0229     		cmp	r1, #2
 517 000e 08D0     		beq	.L54
 200:Core/Src/MIDI_event.c **** 	{
 201:Core/Src/MIDI_event.c **** 	case HOST_USER_SELECT_CONFIGURATION:
 202:Core/Src/MIDI_event.c **** 		break;
 203:Core/Src/MIDI_event.c **** 
 204:Core/Src/MIDI_event.c **** 	case HOST_USER_DISCONNECTION:
 205:Core/Src/MIDI_event.c **** 		Appli_state = MIDI_APPLICATION_DISCONNECT;
 206:Core/Src/MIDI_event.c **** 		// 4 - green, 3 - orange, 5 - red, 6 - blue
 207:Core/Src/MIDI_event.c **** 		HAL_GPIO_WritePin(LD4_GPIO_Port, LD4_Pin, GPIO_PIN_RESET);
 208:Core/Src/MIDI_event.c **** 		HAL_GPIO_WritePin(LD6_GPIO_Port, LD6_Pin, GPIO_PIN_RESET);
 209:Core/Src/MIDI_event.c **** 		break;
 210:Core/Src/MIDI_event.c **** 
 211:Core/Src/MIDI_event.c **** 	case HOST_USER_CLASS_ACTIVE:
 212:Core/Src/MIDI_event.c **** 		Appli_state = MIDI_APPLICATION_READY;
 213:Core/Src/MIDI_event.c **** 		HAL_GPIO_WritePin(LD4_GPIO_Port, LD4_Pin, GPIO_PIN_SET);
 214:Core/Src/MIDI_event.c **** 		HAL_GPIO_WritePin(LD6_GPIO_Port, LD6_Pin, GPIO_PIN_RESET);
 215:Core/Src/MIDI_event.c **** 		HAL_GPIO_WritePin(LD5_GPIO_Port, LD5_Pin, GPIO_PIN_RESET);
 216:Core/Src/MIDI_event.c **** 		break;
 217:Core/Src/MIDI_event.c **** 
 218:Core/Src/MIDI_event.c **** 	case HOST_USER_CONNECTION:
 219:Core/Src/MIDI_event.c **** 		Appli_state = MIDI_APPLICATION_START;
 220:Core/Src/MIDI_event.c **** 		HAL_GPIO_WritePin(GPIOD, 0x8000, GPIO_PIN_SET);
 221:Core/Src/MIDI_event.c **** 		break;
 222:Core/Src/MIDI_event.c **** 
 223:Core/Src/MIDI_event.c **** 	default:
 224:Core/Src/MIDI_event.c **** 		break;
 225:Core/Src/MIDI_event.c **** 	}
 226:Core/Src/MIDI_event.c **** }
 518              		.loc 1 226 1 view .LVU147
 519 0010 10BD     		pop	{r4, pc}
 520              	.L46:
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccgqLb28.s 			page 16


 521              		.cfi_def_cfa_offset 0
 522              		.cfi_restore 4
 523              		.cfi_restore 14
 219:Core/Src/MIDI_event.c **** 		HAL_GPIO_WritePin(GPIOD, 0x8000, GPIO_PIN_SET);
 524              		.loc 1 219 3 is_stmt 1 view .LVU148
 219:Core/Src/MIDI_event.c **** 		HAL_GPIO_WritePin(GPIOD, 0x8000, GPIO_PIN_SET);
 525              		.loc 1 219 15 is_stmt 0 view .LVU149
 526 0012 174B     		ldr	r3, .L55
 220:Core/Src/MIDI_event.c **** 		break;
 527              		.loc 1 220 3 view .LVU150
 528 0014 1748     		ldr	r0, .L55+4
 529              	.LVL45:
 219:Core/Src/MIDI_event.c **** 		HAL_GPIO_WritePin(GPIOD, 0x8000, GPIO_PIN_SET);
 530              		.loc 1 219 15 view .LVU151
 531 0016 0122     		movs	r2, #1
 220:Core/Src/MIDI_event.c **** 		break;
 532              		.loc 1 220 3 view .LVU152
 533 0018 4FF40041 		mov	r1, #32768
 534              	.LVL46:
 219:Core/Src/MIDI_event.c **** 		HAL_GPIO_WritePin(GPIOD, 0x8000, GPIO_PIN_SET);
 535              		.loc 1 219 15 view .LVU153
 536 001c 1A70     		strb	r2, [r3]
 220:Core/Src/MIDI_event.c **** 		break;
 537              		.loc 1 220 3 is_stmt 1 view .LVU154
 538 001e FFF7FEBF 		b	HAL_GPIO_WritePin
 539              	.LVL47:
 540              	.L54:
 541              		.cfi_def_cfa_offset 8
 542              		.cfi_offset 4, -8
 543              		.cfi_offset 14, -4
 212:Core/Src/MIDI_event.c **** 		HAL_GPIO_WritePin(LD4_GPIO_Port, LD4_Pin, GPIO_PIN_SET);
 544              		.loc 1 212 3 view .LVU155
 212:Core/Src/MIDI_event.c **** 		HAL_GPIO_WritePin(LD4_GPIO_Port, LD4_Pin, GPIO_PIN_SET);
 545              		.loc 1 212 15 is_stmt 0 view .LVU156
 546 0022 134C     		ldr	r4, .L55
 213:Core/Src/MIDI_event.c **** 		HAL_GPIO_WritePin(LD6_GPIO_Port, LD6_Pin, GPIO_PIN_RESET);
 547              		.loc 1 213 3 view .LVU157
 548 0024 1348     		ldr	r0, .L55+4
 549              	.LVL48:
 212:Core/Src/MIDI_event.c **** 		HAL_GPIO_WritePin(LD4_GPIO_Port, LD4_Pin, GPIO_PIN_SET);
 550              		.loc 1 212 15 view .LVU158
 551 0026 2370     		strb	r3, [r4]
 213:Core/Src/MIDI_event.c **** 		HAL_GPIO_WritePin(LD6_GPIO_Port, LD6_Pin, GPIO_PIN_RESET);
 552              		.loc 1 213 3 is_stmt 1 view .LVU159
 553 0028 0122     		movs	r2, #1
 554 002a 4FF48051 		mov	r1, #4096
 555              	.LVL49:
 213:Core/Src/MIDI_event.c **** 		HAL_GPIO_WritePin(LD6_GPIO_Port, LD6_Pin, GPIO_PIN_RESET);
 556              		.loc 1 213 3 is_stmt 0 view .LVU160
 557 002e FFF7FEFF 		bl	HAL_GPIO_WritePin
 558              	.LVL50:
 214:Core/Src/MIDI_event.c **** 		HAL_GPIO_WritePin(LD5_GPIO_Port, LD5_Pin, GPIO_PIN_RESET);
 559              		.loc 1 214 3 is_stmt 1 view .LVU161
 560 0032 1048     		ldr	r0, .L55+4
 561 0034 0022     		movs	r2, #0
 562 0036 4FF40041 		mov	r1, #32768
 563 003a FFF7FEFF 		bl	HAL_GPIO_WritePin
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccgqLb28.s 			page 17


 564              	.LVL51:
 215:Core/Src/MIDI_event.c **** 		break;
 565              		.loc 1 215 3 view .LVU162
 566              		.loc 1 226 1 is_stmt 0 view .LVU163
 567 003e BDE81040 		pop	{r4, lr}
 568              		.cfi_remember_state
 569              		.cfi_restore 14
 570              		.cfi_restore 4
 571              		.cfi_def_cfa_offset 0
 215:Core/Src/MIDI_event.c **** 		break;
 572              		.loc 1 215 3 view .LVU164
 573 0042 0C48     		ldr	r0, .L55+4
 574 0044 0022     		movs	r2, #0
 575 0046 4FF48041 		mov	r1, #16384
 576 004a FFF7FEBF 		b	HAL_GPIO_WritePin
 577              	.LVL52:
 578              	.L47:
 579              		.cfi_restore_state
 205:Core/Src/MIDI_event.c **** 		// 4 - green, 3 - orange, 5 - red, 6 - blue
 580              		.loc 1 205 3 is_stmt 1 view .LVU165
 205:Core/Src/MIDI_event.c **** 		// 4 - green, 3 - orange, 5 - red, 6 - blue
 581              		.loc 1 205 15 is_stmt 0 view .LVU166
 582 004e 084B     		ldr	r3, .L55
 207:Core/Src/MIDI_event.c **** 		HAL_GPIO_WritePin(LD6_GPIO_Port, LD6_Pin, GPIO_PIN_RESET);
 583              		.loc 1 207 3 view .LVU167
 584 0050 0848     		ldr	r0, .L55+4
 585              	.LVL53:
 207:Core/Src/MIDI_event.c **** 		HAL_GPIO_WritePin(LD6_GPIO_Port, LD6_Pin, GPIO_PIN_RESET);
 586              		.loc 1 207 3 view .LVU168
 587 0052 0022     		movs	r2, #0
 588 0054 4FF48051 		mov	r1, #4096
 589              	.LVL54:
 205:Core/Src/MIDI_event.c **** 		// 4 - green, 3 - orange, 5 - red, 6 - blue
 590              		.loc 1 205 15 view .LVU169
 591 0058 0424     		movs	r4, #4
 592 005a 1C70     		strb	r4, [r3]
 207:Core/Src/MIDI_event.c **** 		HAL_GPIO_WritePin(LD6_GPIO_Port, LD6_Pin, GPIO_PIN_RESET);
 593              		.loc 1 207 3 is_stmt 1 view .LVU170
 594 005c FFF7FEFF 		bl	HAL_GPIO_WritePin
 595              	.LVL55:
 208:Core/Src/MIDI_event.c **** 		break;
 596              		.loc 1 208 3 view .LVU171
 597              		.loc 1 226 1 is_stmt 0 view .LVU172
 598 0060 BDE81040 		pop	{r4, lr}
 599              		.cfi_restore 14
 600              		.cfi_restore 4
 601              		.cfi_def_cfa_offset 0
 208:Core/Src/MIDI_event.c **** 		break;
 602              		.loc 1 208 3 view .LVU173
 603 0064 0348     		ldr	r0, .L55+4
 604 0066 0022     		movs	r2, #0
 605 0068 4FF40041 		mov	r1, #32768
 606 006c FFF7FEBF 		b	HAL_GPIO_WritePin
 607              	.LVL56:
 608              	.L56:
 609              		.align	2
 610              	.L55:
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccgqLb28.s 			page 18


 611 0070 00000000 		.word	.LANCHOR6
 612 0074 000C0240 		.word	1073875968
 613              		.cfi_endproc
 614              	.LFE245:
 616              		.section	.text.HAL_GPIO_EXTI_Callback,"ax",%progbits
 617              		.align	1
 618              		.p2align 2,,3
 619              		.global	HAL_GPIO_EXTI_Callback
 620              		.syntax unified
 621              		.thumb
 622              		.thumb_func
 624              	HAL_GPIO_EXTI_Callback:
 625              	.LVL57:
 626              	.LFB246:
 227:Core/Src/MIDI_event.c **** 
 228:Core/Src/MIDI_event.c **** 
 229:Core/Src/MIDI_event.c **** /**
 230:Core/Src/MIDI_event.c ****  * @brief User button EXTI Line0 External Interrupt ISR Handler CallBack --> MIDI panic --> all not
 231:Core/Src/MIDI_event.c ****  * 
 232:Core/Src/MIDI_event.c ****  * @param GPIO_Pin 
 233:Core/Src/MIDI_event.c ****  */
 234:Core/Src/MIDI_event.c **** void HAL_GPIO_EXTI_Callback(uint16_t GPIO_Pin)
 235:Core/Src/MIDI_event.c **** {
 627              		.loc 1 235 1 is_stmt 1 view -0
 628              		.cfi_startproc
 629              		@ args = 0, pretend = 0, frame = 0
 630              		@ frame_needed = 0, uses_anonymous_args = 0
 236:Core/Src/MIDI_event.c **** 	allNotesOff();
 631              		.loc 1 236 2 view .LVU175
 632              	.LBB19:
 633              	.LBI19:
  36:Core/Src/MIDI_event.c **** {
 634              		.loc 1 36 6 view .LVU176
 635              	.LBB20:
 636              	.LBB21:
  38:Core/Src/MIDI_event.c **** 	{
 637              		.loc 1 38 24 view .LVU177
 638              	.LBE21:
 639              	.LBE20:
 640              	.LBE19:
 235:Core/Src/MIDI_event.c **** 	allNotesOff();
 641              		.loc 1 235 1 is_stmt 0 view .LVU178
 642 0000 2DE9F843 		push	{r3, r4, r5, r6, r7, r8, r9, lr}
 643              		.cfi_def_cfa_offset 32
 644              		.cfi_offset 3, -32
 645              		.cfi_offset 4, -28
 646              		.cfi_offset 5, -24
 647              		.cfi_offset 6, -20
 648              		.cfi_offset 7, -16
 649              		.cfi_offset 8, -12
 650              		.cfi_offset 9, -8
 651              		.cfi_offset 14, -4
 652 0004 0F4C     		ldr	r4, .L61
 653              	.LBB25:
 654              	.LBB23:
 655              	.LBB22:
  41:Core/Src/MIDI_event.c **** 		ADSR_keyOff(&adsr_filt);
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccgqLb28.s 			page 19


 656              		.loc 1 41 3 view .LVU179
 657 0006 DFF84C90 		ldr	r9, .L61+16
  42:Core/Src/MIDI_event.c **** 		ADSR_keyOff(&adsr_index);
 658              		.loc 1 42 3 view .LVU180
 659 000a DFF84C80 		ldr	r8, .L61+20
  43:Core/Src/MIDI_event.c **** 	}
 660              		.loc 1 43 3 view .LVU181
 661 000e 0E4F     		ldr	r7, .L61+4
 662 0010 04F18006 		add	r6, r4, #128
 663              	.LVL58:
 664              	.L58:
  40:Core/Src/MIDI_event.c **** 		ADSR_keyOff(&adsr_amp); // release envelopes
 665              		.loc 1 40 3 is_stmt 1 view .LVU182
  41:Core/Src/MIDI_event.c **** 		ADSR_keyOff(&adsr_filt);
 666              		.loc 1 41 3 is_stmt 0 view .LVU183
 667 0014 4846     		mov	r0, r9
  40:Core/Src/MIDI_event.c **** 		ADSR_keyOff(&adsr_amp); // release envelopes
 668              		.loc 1 40 19 view .LVU184
 669 0016 0025     		movs	r5, #0
 670 0018 04F8015F 		strb	r5, [r4, #1]!
 671              	.LVL59:
  41:Core/Src/MIDI_event.c **** 		ADSR_keyOff(&adsr_filt);
 672              		.loc 1 41 3 is_stmt 1 view .LVU185
 673 001c FFF7FEFF 		bl	ADSR_keyOff
 674              	.LVL60:
  42:Core/Src/MIDI_event.c **** 		ADSR_keyOff(&adsr_index);
 675              		.loc 1 42 3 view .LVU186
 676 0020 4046     		mov	r0, r8
 677 0022 FFF7FEFF 		bl	ADSR_keyOff
 678              	.LVL61:
  43:Core/Src/MIDI_event.c **** 	}
 679              		.loc 1 43 3 view .LVU187
 680 0026 3846     		mov	r0, r7
 681 0028 FFF7FEFF 		bl	ADSR_keyOff
 682              	.LVL62:
  38:Core/Src/MIDI_event.c **** 	{
 683              		.loc 1 38 32 view .LVU188
  38:Core/Src/MIDI_event.c **** 	{
 684              		.loc 1 38 24 view .LVU189
 685 002c B442     		cmp	r4, r6
 686 002e F1D1     		bne	.L58
 687              	.LBE22:
  45:Core/Src/MIDI_event.c **** }
 688              		.loc 1 45 2 view .LVU190
  45:Core/Src/MIDI_event.c **** }
 689              		.loc 1 45 13 is_stmt 0 view .LVU191
 690 0030 064B     		ldr	r3, .L61+8
 691              	.LBE23:
 692              	.LBE25:
 237:Core/Src/MIDI_event.c **** 	HAL_GPIO_WritePin(LD5_GPIO_Port, LD5_Pin, GPIO_PIN_RESET); // red LED OFF when all MIDI notes off
 693              		.loc 1 237 2 view .LVU192
 694 0032 0748     		ldr	r0, .L61+12
 695              	.LBB26:
 696              	.LBB24:
  45:Core/Src/MIDI_event.c **** }
 697              		.loc 1 45 13 view .LVU193
 698 0034 1D70     		strb	r5, [r3]
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccgqLb28.s 			page 20


 699              	.LVL63:
  45:Core/Src/MIDI_event.c **** }
 700              		.loc 1 45 13 view .LVU194
 701              	.LBE24:
 702              	.LBE26:
 703              		.loc 1 237 2 is_stmt 1 view .LVU195
 704 0036 2A46     		mov	r2, r5
 705 0038 4FF48041 		mov	r1, #16384
 238:Core/Src/MIDI_event.c **** }
 706              		.loc 1 238 1 is_stmt 0 view .LVU196
 707 003c BDE8F843 		pop	{r3, r4, r5, r6, r7, r8, r9, lr}
 708              		.cfi_restore 14
 709              		.cfi_restore 9
 710              		.cfi_restore 8
 711              		.cfi_restore 7
 712              		.cfi_restore 6
 713              		.cfi_restore 5
 714              		.cfi_restore 4
 715              		.cfi_restore 3
 716              		.cfi_def_cfa_offset 0
 237:Core/Src/MIDI_event.c **** 	HAL_GPIO_WritePin(LD5_GPIO_Port, LD5_Pin, GPIO_PIN_RESET); // red LED OFF when all MIDI notes off
 717              		.loc 1 237 2 view .LVU197
 718 0040 FFF7FEBF 		b	HAL_GPIO_WritePin
 719              	.LVL64:
 720              	.L62:
 721              		.align	2
 722              	.L61:
 723 0044 FFFFFFFF 		.word	.LANCHOR0-1
 724 0048 00000000 		.word	adsr_index
 725 004c 00000000 		.word	.LANCHOR1
 726 0050 000C0240 		.word	1073875968
 727 0054 00000000 		.word	adsr_amp
 728 0058 00000000 		.word	adsr_filt
 729              		.cfi_endproc
 730              	.LFE246:
 732              		.global	notesCount
 733              		.global	notes_Active
 734              		.global	noteOn_velocity
 735              		.global	velocity
 736              		.global	currentPitch
 737              		.global	pitchbend
 738              		.global	Appli_state
 739              		.global	hUSBHost
 740              		.section	.bss.Appli_state,"aw",%nobits
 741              		.set	.LANCHOR6,. + 0
 744              	Appli_state:
 745 0000 00       		.space	1
 746              		.section	.bss.currentPitch,"aw",%nobits
 747              		.set	.LANCHOR3,. + 0
 750              	currentPitch:
 751 0000 00       		.space	1
 752              		.section	.bss.hUSBHost,"aw",%nobits
 753              		.align	2
 756              	hUSBHost:
 757 0000 00000000 		.space	1564
 757      00000000 
 757      00000000 
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccgqLb28.s 			page 21


 757      00000000 
 757      00000000 
 758              		.section	.bss.noteOn_velocity,"aw",%nobits
 759              		.set	.LANCHOR5,. + 0
 762              	noteOn_velocity:
 763 0000 00       		.space	1
 764              		.section	.bss.notesCount,"aw",%nobits
 765              		.set	.LANCHOR1,. + 0
 768              	notesCount:
 769 0000 00       		.space	1
 770              		.section	.bss.notes_Active,"aw",%nobits
 771              		.align	2
 772              		.set	.LANCHOR0,. + 0
 775              	notes_Active:
 776 0000 00000000 		.space	128
 776      00000000 
 776      00000000 
 776      00000000 
 776      00000000 
 777              		.section	.bss.pitchbend,"aw",%nobits
 778              		.align	1
 779              		.set	.LANCHOR2,. + 0
 782              	pitchbend:
 783 0000 0000     		.space	2
 784              		.section	.bss.velocity,"aw",%nobits
 785              		.set	.LANCHOR4,. + 0
 788              	velocity:
 789 0000 00       		.space	1
 790              		.text
 791              	.Letext0:
 792              		.file 2 "/Users/johannes/Library/Application Support/Code/User/globalStorage/bmd.stm32-for-vscode/
 793              		.file 3 "/Users/johannes/Library/Application Support/Code/User/globalStorage/bmd.stm32-for-vscode/
 794              		.file 4 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/stm32f407xx.h"
 795              		.file 5 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_gpio.h"
 796              		.file 6 "Middlewares/ST/STM32_USB_Host_Library/Core/Inc/usbh_def.h"
 797              		.file 7 "Core/Inc/usbh_MIDI.h"
 798              		.file 8 "Core/Inc/MIDI_application.h"
 799              		.file 9 "Core/Inc/ADSR_envelope.h"
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccgqLb28.s 			page 22


DEFINED SYMBOLS
                            *ABS*:0000000000000000 MIDI_event.c
/var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccgqLb28.s:20     .text.allNotesOff:0000000000000000 $t
/var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccgqLb28.s:27     .text.allNotesOff:0000000000000000 allNotesOff
/var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccgqLb28.s:96     .text.allNotesOff:0000000000000038 $d
/var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccgqLb28.s:105    .text.MIDI_eventInit:0000000000000000 $t
/var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccgqLb28.s:112    .text.MIDI_eventInit:0000000000000000 MIDI_eventInit
/var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccgqLb28.s:129    .text.MIDI_eventInit:000000000000000c $d
/var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccgqLb28.s:134    .text.ProcessMIDI:0000000000000000 $t
/var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccgqLb28.s:141    .text.ProcessMIDI:0000000000000000 ProcessMIDI
/var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccgqLb28.s:474    .text.ProcessMIDI:000000000000011c $d
/var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccgqLb28.s:490    .text.USBH_UserProcess_callback:0000000000000000 $t
/var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccgqLb28.s:497    .text.USBH_UserProcess_callback:0000000000000000 USBH_UserProcess_callback
/var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccgqLb28.s:611    .text.USBH_UserProcess_callback:0000000000000070 $d
/var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccgqLb28.s:617    .text.HAL_GPIO_EXTI_Callback:0000000000000000 $t
/var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccgqLb28.s:624    .text.HAL_GPIO_EXTI_Callback:0000000000000000 HAL_GPIO_EXTI_Callback
/var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccgqLb28.s:723    .text.HAL_GPIO_EXTI_Callback:0000000000000044 $d
/var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccgqLb28.s:768    .bss.notesCount:0000000000000000 notesCount
/var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccgqLb28.s:775    .bss.notes_Active:0000000000000000 notes_Active
/var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccgqLb28.s:762    .bss.noteOn_velocity:0000000000000000 noteOn_velocity
/var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccgqLb28.s:788    .bss.velocity:0000000000000000 velocity
/var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccgqLb28.s:750    .bss.currentPitch:0000000000000000 currentPitch
/var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccgqLb28.s:782    .bss.pitchbend:0000000000000000 pitchbend
/var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccgqLb28.s:744    .bss.Appli_state:0000000000000000 Appli_state
/var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccgqLb28.s:756    .bss.hUSBHost:0000000000000000 hUSBHost
/var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccgqLb28.s:745    .bss.Appli_state:0000000000000000 $d
/var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccgqLb28.s:751    .bss.currentPitch:0000000000000000 $d
/var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccgqLb28.s:753    .bss.hUSBHost:0000000000000000 $d
/var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccgqLb28.s:763    .bss.noteOn_velocity:0000000000000000 $d
/var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccgqLb28.s:769    .bss.notesCount:0000000000000000 $d
/var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccgqLb28.s:771    .bss.notes_Active:0000000000000000 $d
/var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccgqLb28.s:778    .bss.pitchbend:0000000000000000 $d
/var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccgqLb28.s:789    .bss.velocity:0000000000000000 $d

UNDEFINED SYMBOLS
ADSR_keyOff
adsr_index
adsr_amp
adsr_filt
ADSR_keyOn
HAL_GPIO_WritePin
