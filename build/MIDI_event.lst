ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccNexo8a.s 			page 1


   1              		.cpu cortex-m4
   2              		.arch armv7e-m
   3              		.fpu fpv4-sp-d16
   4              		.eabi_attribute 27, 1
   5              		.eabi_attribute 28, 1
   6              		.eabi_attribute 20, 1
   7              		.eabi_attribute 21, 1
   8              		.eabi_attribute 23, 3
   9              		.eabi_attribute 24, 1
  10              		.eabi_attribute 25, 1
  11              		.eabi_attribute 26, 1
  12              		.eabi_attribute 30, 2
  13              		.eabi_attribute 34, 1
  14              		.eabi_attribute 18, 4
  15              		.file	"MIDI_event.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text.allNotesOff,"ax",%progbits
  20              		.align	1
  21              		.p2align 2,,3
  22              		.global	allNotesOff
  23              		.syntax unified
  24              		.thumb
  25              		.thumb_func
  27              	allNotesOff:
  28              	.LFB136:
  29              		.file 1 "Core/Src/MIDI_event.c"
   1:Core/Src/MIDI_event.c **** /**
   2:Core/Src/MIDI_event.c ****  * @file MIDI_event.c
   3:Core/Src/MIDI_event.c ****  * @author modified by johannes regnier
   4:Core/Src/MIDI_event.c ****  * @brief MIDI events processing
   5:Core/Src/MIDI_event.c ****  * @note Makes use of the great resources from Tom Erbe
   6:Core/Src/MIDI_event.c ****  * @note http://synthnotes.ucsd.edu/wp4/index.php/2019/09/24/adding-the-usb-otg-midi-driver-polypho
   7:Core/Src/MIDI_event.c ****  * @note and of the awesome Xavier Halgand's Dekrispator
   8:Core/Src/MIDI_event.c ****  * @version 0.1
   9:Core/Src/MIDI_event.c ****  * @date 2023-12-30
  10:Core/Src/MIDI_event.c ****  *
  11:Core/Src/MIDI_event.c ****  * @copyright Copyright (c) 2023
  12:Core/Src/MIDI_event.c ****  *
  13:Core/Src/MIDI_event.c ****  */
  14:Core/Src/MIDI_event.c **** 
  15:Core/Src/MIDI_event.c **** #include <stdint.h>
  16:Core/Src/MIDI_event.c **** 
  17:Core/Src/MIDI_event.c **** #include "MIDI_event.h"
  18:Core/Src/MIDI_event.c **** #include "gpio.h"
  19:Core/Src/MIDI_event.c **** #include "SEGGER_RTT.h"
  20:Core/Src/MIDI_event.c **** #include "CONSTS.h"
  21:Core/Src/MIDI_event.c **** #include "helper_functions.h"
  22:Core/Src/MIDI_event.c **** #include "ADSR_envelope.h"
  23:Core/Src/MIDI_event.c **** 
  24:Core/Src/MIDI_event.c **** USBH_HandleTypeDef hUSBHost; /* USB Host handle */
  25:Core/Src/MIDI_event.c **** MIDI_ApplicationTypeDef Appli_state = MIDI_APPLICATION_IDLE;
  26:Core/Src/MIDI_event.c **** 
  27:Core/Src/MIDI_event.c **** uint16_t pitchbend;
  28:Core/Src/MIDI_event.c **** uint8_t currentPitch;
  29:Core/Src/MIDI_event.c **** uint8_t velocity;
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccNexo8a.s 			page 2


  30:Core/Src/MIDI_event.c **** uint8_t notes_Active[128] = {0}; // at most, 128 MIDI notes are active
  31:Core/Src/MIDI_event.c **** int8_t notesCount = 0;			 // number of notes active
  32:Core/Src/MIDI_event.c **** extern ADSR_t adsr;
  33:Core/Src/MIDI_event.c **** 
  34:Core/Src/MIDI_event.c **** 
  35:Core/Src/MIDI_event.c **** void allNotesOff(void)
  36:Core/Src/MIDI_event.c **** {
  30              		.loc 1 36 1 view -0
  31              		.cfi_startproc
  32              		@ args = 0, pretend = 0, frame = 0
  33              		@ frame_needed = 0, uses_anonymous_args = 0
  37:Core/Src/MIDI_event.c **** 	for (uint8_t i = 0; i < 128; i++)
  34              		.loc 1 37 2 view .LVU1
  35              	.LBB2:
  36              		.loc 1 37 7 view .LVU2
  37              	.LVL0:
  38              		.loc 1 37 24 view .LVU3
  39              	.LBE2:
  36:Core/Src/MIDI_event.c **** 	for (uint8_t i = 0; i < 128; i++)
  40              		.loc 1 36 1 is_stmt 0 view .LVU4
  41 0000 08B5     		push	{r3, lr}
  42              		.cfi_def_cfa_offset 8
  43              		.cfi_offset 3, -8
  44              		.cfi_offset 14, -4
  45              	.LBB3:
  38:Core/Src/MIDI_event.c **** 		notes_Active[i] = 0;
  46              		.loc 1 38 19 view .LVU5
  47 0002 8022     		movs	r2, #128
  48 0004 0348     		ldr	r0, .L4
  49 0006 0021     		movs	r1, #0
  50 0008 FFF7FEFF 		bl	memset
  51              	.LVL1:
  52              		.loc 1 38 19 view .LVU6
  53              	.LBE3:
  39:Core/Src/MIDI_event.c **** 	notesCount = 0;
  54              		.loc 1 39 2 is_stmt 1 view .LVU7
  55              		.loc 1 39 13 is_stmt 0 view .LVU8
  56 000c 024B     		ldr	r3, .L4+4
  57 000e 0022     		movs	r2, #0
  58 0010 1A70     		strb	r2, [r3]
  40:Core/Src/MIDI_event.c **** }
  59              		.loc 1 40 1 view .LVU9
  60 0012 08BD     		pop	{r3, pc}
  61              	.L5:
  62              		.align	2
  63              	.L4:
  64 0014 00000000 		.word	.LANCHOR0
  65 0018 00000000 		.word	.LANCHOR1
  66              		.cfi_endproc
  67              	.LFE136:
  69              		.section	.text.MIDI_eventInit,"ax",%progbits
  70              		.align	1
  71              		.p2align 2,,3
  72              		.global	MIDI_eventInit
  73              		.syntax unified
  74              		.thumb
  75              		.thumb_func
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccNexo8a.s 			page 3


  77              	MIDI_eventInit:
  78              	.LFB137:
  41:Core/Src/MIDI_event.c **** 
  42:Core/Src/MIDI_event.c **** 
  43:Core/Src/MIDI_event.c **** void MIDI_eventInit()
  44:Core/Src/MIDI_event.c **** {
  79              		.loc 1 44 1 is_stmt 1 view -0
  80              		.cfi_startproc
  81              		@ args = 0, pretend = 0, frame = 0
  82              		@ frame_needed = 0, uses_anonymous_args = 0
  83              		@ link register save eliminated.
  45:Core/Src/MIDI_event.c **** 	pitchbend = 8192;
  84              		.loc 1 45 2 view .LVU11
  85              		.loc 1 45 12 is_stmt 0 view .LVU12
  86 0000 024B     		ldr	r3, .L7
  87 0002 4FF40052 		mov	r2, #8192
  88 0006 1A80     		strh	r2, [r3]	@ movhi
  46:Core/Src/MIDI_event.c **** }
  89              		.loc 1 46 1 view .LVU13
  90 0008 7047     		bx	lr
  91              	.L8:
  92 000a 00BF     		.align	2
  93              	.L7:
  94 000c 00000000 		.word	.LANCHOR2
  95              		.cfi_endproc
  96              	.LFE137:
  98              		.section	.text.ProcessMIDI,"ax",%progbits
  99              		.align	1
 100              		.p2align 2,,3
 101              		.global	ProcessMIDI
 102              		.syntax unified
 103              		.thumb
 104              		.thumb_func
 106              	ProcessMIDI:
 107              	.LVL2:
 108              	.LFB138:
  47:Core/Src/MIDI_event.c **** 
  48:Core/Src/MIDI_event.c **** /**
  49:Core/Src/MIDI_event.c ****  * @brief Process incoming MIDI events - Monophonic, with legato
  50:Core/Src/MIDI_event.c ****  * @note Code adapted from Xavier Halgand and from Tom Erbe's version
  51:Core/Src/MIDI_event.c ****  *
  52:Core/Src/MIDI_event.c ****  * @param pack
  53:Core/Src/MIDI_event.c ****  */
  54:Core/Src/MIDI_event.c **** void ProcessMIDI(midi_package_t pack)
  55:Core/Src/MIDI_event.c **** {
 109              		.loc 1 55 1 is_stmt 1 view -0
 110              		.cfi_startproc
 111              		@ args = 0, pretend = 0, frame = 0
 112              		@ frame_needed = 0, uses_anonymous_args = 0
 113              		.loc 1 55 1 is_stmt 0 view .LVU15
 114 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 115              		.cfi_def_cfa_offset 24
 116              		.cfi_offset 3, -24
 117              		.cfi_offset 4, -20
 118              		.cfi_offset 5, -16
 119              		.cfi_offset 6, -12
 120              		.cfi_offset 7, -8
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccNexo8a.s 			page 4


 121              		.cfi_offset 14, -4
 122 0002 C0F30743 		ubfx	r3, r0, #16, #8
 123 0006 C0F30766 		ubfx	r6, r0, #24, #8
 124 000a 040E     		lsrs	r4, r0, #24
  56:Core/Src/MIDI_event.c **** 	uint8_t status;
  57:Core/Src/MIDI_event.c **** 
  58:Core/Src/MIDI_event.c **** 	status = pack.evnt0 & 0xF0;
 125              		.loc 1 58 9 view .LVU16
 126 000c C0F30720 		ubfx	r0, r0, #8, #8
 127              	.LVL3:
 128              		.loc 1 58 9 view .LVU17
 129 0010 00F0F000 		and	r0, r0, #240
  59:Core/Src/MIDI_event.c **** 	if (status == 0xF0) // not using any of these
  60:Core/Src/MIDI_event.c **** 	{
  61:Core/Src/MIDI_event.c **** 		switch (pack.evnt0)
  62:Core/Src/MIDI_event.c **** 		{
  63:Core/Src/MIDI_event.c **** 		case 0xF0: // Start of System Exclusive
  64:Core/Src/MIDI_event.c **** 		case 0xF1: // MIDI Time Code Quarter Fram
  65:Core/Src/MIDI_event.c **** 		case 0xF2: // Song Position Pointer
  66:Core/Src/MIDI_event.c **** 		case 0xF3: // Song Select
  67:Core/Src/MIDI_event.c **** 		case 0xF4: // Undefined
  68:Core/Src/MIDI_event.c **** 		case 0xF5: // Undefined
  69:Core/Src/MIDI_event.c **** 		case 0xF6: // Tune Request
  70:Core/Src/MIDI_event.c **** 		case 0xF7: // End of System Exclusive
  71:Core/Src/MIDI_event.c **** 		case 0xF8: // Timing Clock (24 times a quarter note)
  72:Core/Src/MIDI_event.c **** 		case 0xF9: // Undefined
  73:Core/Src/MIDI_event.c **** 		case 0xFA: // Start Sequence
  74:Core/Src/MIDI_event.c **** 		case 0xFB: // Continue Sequence
  75:Core/Src/MIDI_event.c **** 		case 0xFC: // Pause Sequence
  76:Core/Src/MIDI_event.c **** 		case 0xFD: // Undefined
  77:Core/Src/MIDI_event.c **** 		case 0xFE: // Active Sensing
  78:Core/Src/MIDI_event.c **** 		case 0xFF: // Reset all synthesizers to power up
  79:Core/Src/MIDI_event.c **** 			break;
  80:Core/Src/MIDI_event.c **** 		}
  81:Core/Src/MIDI_event.c **** 	}
  82:Core/Src/MIDI_event.c **** 
  83:Core/Src/MIDI_event.c **** 	switch (status)
 130              		.loc 1 83 2 view .LVU18
 131 0014 9028     		cmp	r0, #144
 132 0016 1D46     		mov	r5, r3
 133              	.LVL4:
  56:Core/Src/MIDI_event.c **** 	uint8_t status;
 134              		.loc 1 56 2 is_stmt 1 view .LVU19
  58:Core/Src/MIDI_event.c **** 	if (status == 0xF0) // not using any of these
 135              		.loc 1 58 2 view .LVU20
  59:Core/Src/MIDI_event.c **** 	if (status == 0xF0) // not using any of these
 136              		.loc 1 59 2 view .LVU21
 137              		.loc 1 83 2 view .LVU22
 138 0018 25D0     		beq	.L10
 139 001a E028     		cmp	r0, #224
 140 001c 1ED0     		beq	.L11
 141 001e 8028     		cmp	r0, #128
 142 0020 00D0     		beq	.L32
 143              	.LVL5:
 144              	.L9:
  84:Core/Src/MIDI_event.c **** 	{
  85:Core/Src/MIDI_event.c **** 	/********************* Real Note Off *************************/	
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccNexo8a.s 			page 5


  86:Core/Src/MIDI_event.c **** 	case 0x80: 
  87:Core/Src/MIDI_event.c **** 		uint8_t noteOff = pack.evnt1;
  88:Core/Src/MIDI_event.c **** 		notes_Active[noteOff] = 0;
  89:Core/Src/MIDI_event.c **** 		notesCount--;
  90:Core/Src/MIDI_event.c **** 		if (notesCount <= 0) // no more keys pressed
  91:Core/Src/MIDI_event.c **** 		{
  92:Core/Src/MIDI_event.c **** 			ADSR_keyOff(&adsr);
  93:Core/Src/MIDI_event.c **** 			notesCount = 0;
  94:Core/Src/MIDI_event.c **** 		}
  95:Core/Src/MIDI_event.c **** 		else // legato 
  96:Core/Src/MIDI_event.c **** 		{
  97:Core/Src/MIDI_event.c **** 			if ((noteOff - MIN_MIDI_NOTE) == currentPitch) // let sound the lowest key pressed
  98:Core/Src/MIDI_event.c **** 			{
  99:Core/Src/MIDI_event.c **** 				uint8_t i;
 100:Core/Src/MIDI_event.c **** 				for (i = 0; i < 128; i++)
 101:Core/Src/MIDI_event.c **** 				{
 102:Core/Src/MIDI_event.c **** 					if (notes_Active[i] == 1) // find the lowest key pressed
 103:Core/Src/MIDI_event.c **** 						break;
 104:Core/Src/MIDI_event.c **** 				}
 105:Core/Src/MIDI_event.c **** 				currentPitch = i - MIN_MIDI_NOTE; // conversion for mtof[]
 106:Core/Src/MIDI_event.c **** 			}
 107:Core/Src/MIDI_event.c **** 		}
 108:Core/Src/MIDI_event.c **** 		break;
 109:Core/Src/MIDI_event.c **** 	/*********************  Note On *************************/	
 110:Core/Src/MIDI_event.c **** 	case 0x90: // Note On
 111:Core/Src/MIDI_event.c **** 		uint8_t noteOn = pack.evnt1;
 112:Core/Src/MIDI_event.c **** 		velocity = pack.evnt2;
 113:Core/Src/MIDI_event.c **** 		if (velocity > 0) // True note on !
 114:Core/Src/MIDI_event.c **** 		{
 115:Core/Src/MIDI_event.c **** 			if (noteOn < MIN_MIDI_NOTE) // filtering notes
 116:Core/Src/MIDI_event.c **** 			{
 117:Core/Src/MIDI_event.c **** 				currentPitch = 0;
 118:Core/Src/MIDI_event.c **** 			}
 119:Core/Src/MIDI_event.c **** 			else
 120:Core/Src/MIDI_event.c **** 			{
 121:Core/Src/MIDI_event.c **** 				currentPitch = noteOn - MIN_MIDI_NOTE; // conversion for mtof[]
 122:Core/Src/MIDI_event.c **** 			}
 123:Core/Src/MIDI_event.c **** 			// SEGGER_RTT_printf(0, "Note ON, pitch %u\r\n", currentPitch); // debug
 124:Core/Src/MIDI_event.c **** 			HAL_GPIO_WritePin(LD5_GPIO_Port, LD5_Pin, GPIO_PIN_SET); // red LED ON when incoming MIDI note o
 125:Core/Src/MIDI_event.c **** 			ADSR_keyOn(&adsr);
 126:Core/Src/MIDI_event.c **** 			notesCount++;
 127:Core/Src/MIDI_event.c **** 			notes_Active[noteOn] = 1;
 128:Core/Src/MIDI_event.c **** 		}
 129:Core/Src/MIDI_event.c **** 		/*********************  Note Off *************************/
 130:Core/Src/MIDI_event.c **** 		else //  common implementation in MIDI devices: Note Off = Note On with velocity 0
 131:Core/Src/MIDI_event.c **** 		{			
 132:Core/Src/MIDI_event.c **** 			notes_Active[noteOn] = 0;
 133:Core/Src/MIDI_event.c **** 			notesCount--;
 134:Core/Src/MIDI_event.c **** 			
 135:Core/Src/MIDI_event.c **** 			// SEGGER_RTT_printf(0, "Note OFF, pitch %u\r\n", currentPitch);
 136:Core/Src/MIDI_event.c **** 			if (notesCount <= 0)
 137:Core/Src/MIDI_event.c **** 			{
 138:Core/Src/MIDI_event.c **** 				ADSR_keyOff(&adsr);
 139:Core/Src/MIDI_event.c **** 				notesCount = 0;
 140:Core/Src/MIDI_event.c **** 				HAL_GPIO_WritePin(LD5_GPIO_Port, LD5_Pin, GPIO_PIN_RESET); // red LED OFF when all MIDI notes o
 141:Core/Src/MIDI_event.c **** 			}
 142:Core/Src/MIDI_event.c **** 			else // legato
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccNexo8a.s 			page 6


 143:Core/Src/MIDI_event.c **** 			{
 144:Core/Src/MIDI_event.c **** 				if ((noteOn - MIN_MIDI_NOTE) == currentPitch)
 145:Core/Src/MIDI_event.c **** 				{
 146:Core/Src/MIDI_event.c **** 					uint8_t i;
 147:Core/Src/MIDI_event.c **** 					for (i = 0; i < 128; i++)
 148:Core/Src/MIDI_event.c **** 					{
 149:Core/Src/MIDI_event.c **** 						if (notes_Active[i] == 1) // find the lowest key pressed
 150:Core/Src/MIDI_event.c **** 							break;
 151:Core/Src/MIDI_event.c **** 					}
 152:Core/Src/MIDI_event.c **** 					currentPitch = i - MIN_MIDI_NOTE; // conversion for notesFreq[]
 153:Core/Src/MIDI_event.c **** 				}
 154:Core/Src/MIDI_event.c **** 			}
 155:Core/Src/MIDI_event.c **** 		}
 156:Core/Src/MIDI_event.c **** 	/********************* Other MIDI Messages *************************/	
 157:Core/Src/MIDI_event.c **** 	case 0xA0: 	// Polyphonic Pressure
 158:Core/Src/MIDI_event.c **** 		break;
 159:Core/Src/MIDI_event.c **** 	case 0xB0:	// Control Change
 160:Core/Src/MIDI_event.c **** 		uint8_t cc_number = pack.evnt1;
 161:Core/Src/MIDI_event.c **** 		uint8_t cc_value = pack.evnt2;
 162:Core/Src/MIDI_event.c **** 		// SEGGER_RTT_printf(0, "CC#  %u %u\r\n", cc_number, cc_value); // debug
 163:Core/Src/MIDI_event.c **** 		switch (pack.evnt1) // CC number
 164:Core/Src/MIDI_event.c **** 		{
 165:Core/Src/MIDI_event.c **** 		case 20:
 166:Core/Src/MIDI_event.c **** 			break;
 167:Core/Src/MIDI_event.c **** 		case 7:
 168:Core/Src/MIDI_event.c **** 			break; // master volume
 169:Core/Src/MIDI_event.c **** 		}
 170:Core/Src/MIDI_event.c **** 		break;
 171:Core/Src/MIDI_event.c **** 	case 0xC0: // Program Change
 172:Core/Src/MIDI_event.c **** 		break;
 173:Core/Src/MIDI_event.c **** 	case 0xD0: // After Touch
 174:Core/Src/MIDI_event.c **** 		break;
 175:Core/Src/MIDI_event.c **** 	case 0xE0: // Pitch Bend
 176:Core/Src/MIDI_event.c **** 		pitchbend = pack.evnt2 * 128 + pack.evnt1;
 177:Core/Src/MIDI_event.c **** 		break;
 178:Core/Src/MIDI_event.c **** 	}
 179:Core/Src/MIDI_event.c **** }
 145              		.loc 1 179 1 is_stmt 0 view .LVU23
 146 0022 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 147              	.LVL6:
 148              	.L32:
 149              	.LBB4:
  87:Core/Src/MIDI_event.c **** 		notes_Active[noteOff] = 0;
 150              		.loc 1 87 3 is_stmt 1 view .LVU24
  88:Core/Src/MIDI_event.c **** 		notesCount--;
 151              		.loc 1 88 3 view .LVU25
  89:Core/Src/MIDI_event.c **** 		if (notesCount <= 0) // no more keys pressed
 152              		.loc 1 89 13 is_stmt 0 view .LVU26
 153 0024 334E     		ldr	r6, .L41
 154              	.LVL7:
  88:Core/Src/MIDI_event.c **** 		notesCount--;
 155              		.loc 1 88 25 view .LVU27
 156 0026 344B     		ldr	r3, .L41+4
  89:Core/Src/MIDI_event.c **** 		if (notesCount <= 0) // no more keys pressed
 157              		.loc 1 89 13 view .LVU28
 158 0028 3278     		ldrb	r2, [r6]	@ zero_extendqisi2
 159 002a 013A     		subs	r2, r2, #1
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccNexo8a.s 			page 7


  88:Core/Src/MIDI_event.c **** 		notesCount--;
 160              		.loc 1 88 25 view .LVU29
 161 002c 0024     		movs	r4, #0
  89:Core/Src/MIDI_event.c **** 		if (notesCount <= 0) // no more keys pressed
 162              		.loc 1 89 13 view .LVU30
 163 002e 52B2     		sxtb	r2, r2
  90:Core/Src/MIDI_event.c **** 		{
 164              		.loc 1 90 6 view .LVU31
 165 0030 A242     		cmp	r2, r4
  88:Core/Src/MIDI_event.c **** 		notesCount--;
 166              		.loc 1 88 25 view .LVU32
 167 0032 5C55     		strb	r4, [r3, r5]
  89:Core/Src/MIDI_event.c **** 		if (notesCount <= 0) // no more keys pressed
 168              		.loc 1 89 3 is_stmt 1 view .LVU33
  89:Core/Src/MIDI_event.c **** 		if (notesCount <= 0) // no more keys pressed
 169              		.loc 1 89 13 is_stmt 0 view .LVU34
 170 0034 3270     		strb	r2, [r6]
  90:Core/Src/MIDI_event.c **** 		{
 171              		.loc 1 90 3 is_stmt 1 view .LVU35
  90:Core/Src/MIDI_event.c **** 		{
 172              		.loc 1 90 6 is_stmt 0 view .LVU36
 173 0036 46DD     		ble	.L33
  97:Core/Src/MIDI_event.c **** 			{
 174              		.loc 1 97 4 is_stmt 1 view .LVU37
  97:Core/Src/MIDI_event.c **** 			{
 175              		.loc 1 97 34 is_stmt 0 view .LVU38
 176 0038 304E     		ldr	r6, .L41+8
  97:Core/Src/MIDI_event.c **** 			{
 177              		.loc 1 97 7 view .LVU39
 178 003a 3278     		ldrb	r2, [r6]	@ zero_extendqisi2
 179 003c AA42     		cmp	r2, r5
 180 003e F0D1     		bne	.L9
 181 0040 1A46     		mov	r2, r3
 182 0042 2346     		mov	r3, r4
 183 0044 01E0     		b	.L16
 184              	.LVL8:
 185              	.L35:
 186              	.LBB5:
 100:Core/Src/MIDI_event.c **** 				{
 187              		.loc 1 100 19 discriminator 2 view .LVU40
 188 0046 802B     		cmp	r3, #128
 189 0048 4ED0     		beq	.L34
 190              	.LVL9:
 191              	.L16:
 100:Core/Src/MIDI_event.c **** 				{
 192              		.loc 1 100 27 is_stmt 1 view .LVU41
 100:Core/Src/MIDI_event.c **** 				{
 193              		.loc 1 100 19 view .LVU42
 102:Core/Src/MIDI_event.c **** 						break;
 194              		.loc 1 102 22 is_stmt 0 view .LVU43
 195 004a 12F8011B 		ldrb	r1, [r2], #1	@ zero_extendqisi2
 102:Core/Src/MIDI_event.c **** 						break;
 196              		.loc 1 102 9 view .LVU44
 197 004e 0129     		cmp	r1, #1
 198 0050 D8B2     		uxtb	r0, r3
 199              	.LVL10:
 102:Core/Src/MIDI_event.c **** 						break;
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccNexo8a.s 			page 8


 200              		.loc 1 102 6 is_stmt 1 view .LVU45
 100:Core/Src/MIDI_event.c **** 				{
 201              		.loc 1 100 19 is_stmt 0 view .LVU46
 202 0052 03F10103 		add	r3, r3, #1
 102:Core/Src/MIDI_event.c **** 						break;
 203              		.loc 1 102 9 view .LVU47
 204 0056 F6D1     		bne	.L35
 205              	.LBE5:
 206              	.LBB6:
 152:Core/Src/MIDI_event.c **** 				}
 207              		.loc 1 152 6 is_stmt 1 view .LVU48
 152:Core/Src/MIDI_event.c **** 				}
 208              		.loc 1 152 19 is_stmt 0 view .LVU49
 209 0058 3070     		strb	r0, [r6]
 210              	.LVL11:
 211              	.L40:
 152:Core/Src/MIDI_event.c **** 				}
 212              		.loc 1 152 19 view .LVU50
 213              	.LBE6:
 214              	.LBE4:
 215              		.loc 1 179 1 view .LVU51
 216 005a F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 217              	.LVL12:
 218              	.L11:
 219              	.LBB10:
 176:Core/Src/MIDI_event.c **** 		break;
 220              		.loc 1 176 3 is_stmt 1 view .LVU52
 176:Core/Src/MIDI_event.c **** 		break;
 221              		.loc 1 176 13 is_stmt 0 view .LVU53
 222 005c 284B     		ldr	r3, .L41+12
 176:Core/Src/MIDI_event.c **** 		break;
 223              		.loc 1 176 32 view .LVU54
 224 005e 05EBC412 		add	r2, r5, r4, lsl #7
 176:Core/Src/MIDI_event.c **** 		break;
 225              		.loc 1 176 13 view .LVU55
 226 0062 1A80     		strh	r2, [r3]	@ movhi
 177:Core/Src/MIDI_event.c **** 	}
 227              		.loc 1 177 3 is_stmt 1 view .LVU56
 228              	.LBE10:
 229              		.loc 1 179 1 is_stmt 0 view .LVU57
 230 0064 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 231              	.LVL13:
 232              	.L10:
 233              	.LBB11:
 111:Core/Src/MIDI_event.c **** 		velocity = pack.evnt2;
 234              		.loc 1 111 3 is_stmt 1 view .LVU58
 112:Core/Src/MIDI_event.c **** 		if (velocity > 0) // True note on !
 235              		.loc 1 112 3 view .LVU59
 112:Core/Src/MIDI_event.c **** 		if (velocity > 0) // True note on !
 236              		.loc 1 112 12 is_stmt 0 view .LVU60
 237 0066 274A     		ldr	r2, .L41+16
 238 0068 1670     		strb	r6, [r2]
 113:Core/Src/MIDI_event.c **** 		{
 239              		.loc 1 113 3 is_stmt 1 view .LVU61
 113:Core/Src/MIDI_event.c **** 		{
 240              		.loc 1 113 6 is_stmt 0 view .LVU62
 241 006a CCB9     		cbnz	r4, .L36
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccNexo8a.s 			page 9


 132:Core/Src/MIDI_event.c **** 			notesCount--;
 242              		.loc 1 132 4 is_stmt 1 view .LVU63
 133:Core/Src/MIDI_event.c **** 			
 243              		.loc 1 133 14 is_stmt 0 view .LVU64
 244 006c 214F     		ldr	r7, .L41
 132:Core/Src/MIDI_event.c **** 			notesCount--;
 245              		.loc 1 132 25 view .LVU65
 246 006e 224B     		ldr	r3, .L41+4
 133:Core/Src/MIDI_event.c **** 			
 247              		.loc 1 133 14 view .LVU66
 248 0070 3A78     		ldrb	r2, [r7]	@ zero_extendqisi2
 132:Core/Src/MIDI_event.c **** 			notesCount--;
 249              		.loc 1 132 25 view .LVU67
 250 0072 5E55     		strb	r6, [r3, r5]
 133:Core/Src/MIDI_event.c **** 			
 251              		.loc 1 133 4 is_stmt 1 view .LVU68
 133:Core/Src/MIDI_event.c **** 			
 252              		.loc 1 133 14 is_stmt 0 view .LVU69
 253 0074 013A     		subs	r2, r2, #1
 254 0076 52B2     		sxtb	r2, r2
 136:Core/Src/MIDI_event.c **** 			{
 255              		.loc 1 136 7 view .LVU70
 256 0078 002A     		cmp	r2, #0
 133:Core/Src/MIDI_event.c **** 			
 257              		.loc 1 133 14 view .LVU71
 258 007a 3A70     		strb	r2, [r7]
 136:Core/Src/MIDI_event.c **** 			{
 259              		.loc 1 136 4 is_stmt 1 view .LVU72
 136:Core/Src/MIDI_event.c **** 			{
 260              		.loc 1 136 7 is_stmt 0 view .LVU73
 261 007c 28DD     		ble	.L37
 144:Core/Src/MIDI_event.c **** 				{
 262              		.loc 1 144 5 is_stmt 1 view .LVU74
 144:Core/Src/MIDI_event.c **** 				{
 263              		.loc 1 144 34 is_stmt 0 view .LVU75
 264 007e 1F4E     		ldr	r6, .L41+8
 265              	.LVL14:
 144:Core/Src/MIDI_event.c **** 				{
 266              		.loc 1 144 8 view .LVU76
 267 0080 3278     		ldrb	r2, [r6]	@ zero_extendqisi2
 268 0082 AA42     		cmp	r2, r5
 269 0084 CDD1     		bne	.L9
 270 0086 2246     		mov	r2, r4
 271 0088 01E0     		b	.L21
 272              	.LVL15:
 273              	.L39:
 274              	.LBB7:
 147:Core/Src/MIDI_event.c **** 					{
 275              		.loc 1 147 20 discriminator 2 view .LVU77
 276 008a 802A     		cmp	r2, #128
 277 008c 2FD0     		beq	.L38
 278              	.LVL16:
 279              	.L21:
 147:Core/Src/MIDI_event.c **** 					{
 280              		.loc 1 147 28 is_stmt 1 view .LVU78
 147:Core/Src/MIDI_event.c **** 					{
 281              		.loc 1 147 20 view .LVU79
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccNexo8a.s 			page 10


 149:Core/Src/MIDI_event.c **** 							break;
 282              		.loc 1 149 23 is_stmt 0 view .LVU80
 283 008e 13F8011B 		ldrb	r1, [r3], #1	@ zero_extendqisi2
 149:Core/Src/MIDI_event.c **** 							break;
 284              		.loc 1 149 10 view .LVU81
 285 0092 0129     		cmp	r1, #1
 286 0094 D0B2     		uxtb	r0, r2
 287              	.LVL17:
 149:Core/Src/MIDI_event.c **** 							break;
 288              		.loc 1 149 7 is_stmt 1 view .LVU82
 147:Core/Src/MIDI_event.c **** 					{
 289              		.loc 1 147 20 is_stmt 0 view .LVU83
 290 0096 02F10102 		add	r2, r2, #1
 149:Core/Src/MIDI_event.c **** 							break;
 291              		.loc 1 149 10 view .LVU84
 292 009a F6D1     		bne	.L39
 152:Core/Src/MIDI_event.c **** 				}
 293              		.loc 1 152 6 is_stmt 1 view .LVU85
 152:Core/Src/MIDI_event.c **** 				}
 294              		.loc 1 152 19 is_stmt 0 view .LVU86
 295 009c 3070     		strb	r0, [r6]
 296 009e DCE7     		b	.L40
 297              	.LVL18:
 298              	.L36:
 152:Core/Src/MIDI_event.c **** 				}
 299              		.loc 1 152 19 view .LVU87
 300              	.LBE7:
 115:Core/Src/MIDI_event.c **** 			{
 301              		.loc 1 115 4 is_stmt 1 view .LVU88
 121:Core/Src/MIDI_event.c **** 			}
 302              		.loc 1 121 5 view .LVU89
 121:Core/Src/MIDI_event.c **** 			}
 303              		.loc 1 121 18 is_stmt 0 view .LVU90
 304 00a0 1649     		ldr	r1, .L41+8
 124:Core/Src/MIDI_event.c **** 			ADSR_keyOn(&adsr);
 305              		.loc 1 124 4 view .LVU91
 306 00a2 1948     		ldr	r0, .L41+20
 307              	.LVL19:
 121:Core/Src/MIDI_event.c **** 			}
 308              		.loc 1 121 18 view .LVU92
 309 00a4 0B70     		strb	r3, [r1]
 124:Core/Src/MIDI_event.c **** 			ADSR_keyOn(&adsr);
 310              		.loc 1 124 4 is_stmt 1 view .LVU93
 311 00a6 0122     		movs	r2, #1
 312 00a8 4FF48041 		mov	r1, #16384
 313 00ac FFF7FEFF 		bl	HAL_GPIO_WritePin
 314              	.LVL20:
 125:Core/Src/MIDI_event.c **** 			notesCount++;
 315              		.loc 1 125 4 view .LVU94
 316 00b0 1648     		ldr	r0, .L41+24
 317 00b2 FFF7FEFF 		bl	ADSR_keyOn
 318              	.LVL21:
 126:Core/Src/MIDI_event.c **** 			notes_Active[noteOn] = 1;
 319              		.loc 1 126 4 view .LVU95
 126:Core/Src/MIDI_event.c **** 			notes_Active[noteOn] = 1;
 320              		.loc 1 126 14 is_stmt 0 view .LVU96
 321 00b6 0F4A     		ldr	r2, .L41
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccNexo8a.s 			page 11


 127:Core/Src/MIDI_event.c **** 		}
 322              		.loc 1 127 25 view .LVU97
 323 00b8 0F49     		ldr	r1, .L41+4
 126:Core/Src/MIDI_event.c **** 			notes_Active[noteOn] = 1;
 324              		.loc 1 126 14 view .LVU98
 325 00ba 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 127:Core/Src/MIDI_event.c **** 		}
 326              		.loc 1 127 25 view .LVU99
 327 00bc 0120     		movs	r0, #1
 126:Core/Src/MIDI_event.c **** 			notes_Active[noteOn] = 1;
 328              		.loc 1 126 14 view .LVU100
 329 00be 0344     		add	r3, r3, r0
 127:Core/Src/MIDI_event.c **** 		}
 330              		.loc 1 127 25 view .LVU101
 331 00c0 4855     		strb	r0, [r1, r5]
 126:Core/Src/MIDI_event.c **** 			notes_Active[noteOn] = 1;
 332              		.loc 1 126 14 view .LVU102
 333 00c2 1370     		strb	r3, [r2]
 127:Core/Src/MIDI_event.c **** 		}
 334              		.loc 1 127 4 is_stmt 1 view .LVU103
 335              	.LBE11:
 336              		.loc 1 179 1 is_stmt 0 view .LVU104
 337 00c4 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 338              	.LVL22:
 339              	.L33:
 340              	.LBB12:
  92:Core/Src/MIDI_event.c **** 			notesCount = 0;
 341              		.loc 1 92 4 is_stmt 1 view .LVU105
 342 00c6 1148     		ldr	r0, .L41+24
 343              	.LVL23:
  92:Core/Src/MIDI_event.c **** 			notesCount = 0;
 344              		.loc 1 92 4 is_stmt 0 view .LVU106
 345 00c8 FFF7FEFF 		bl	ADSR_keyOff
 346              	.LVL24:
  93:Core/Src/MIDI_event.c **** 		}
 347              		.loc 1 93 4 is_stmt 1 view .LVU107
  93:Core/Src/MIDI_event.c **** 		}
 348              		.loc 1 93 15 is_stmt 0 view .LVU108
 349 00cc 3470     		strb	r4, [r6]
 350              	.LBE12:
 351              		.loc 1 179 1 view .LVU109
 352 00ce F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 353              	.LVL25:
 354              	.L37:
 355              	.LBB13:
 138:Core/Src/MIDI_event.c **** 				notesCount = 0;
 356              		.loc 1 138 5 is_stmt 1 view .LVU110
 357 00d0 0E48     		ldr	r0, .L41+24
 358              	.LVL26:
 138:Core/Src/MIDI_event.c **** 				notesCount = 0;
 359              		.loc 1 138 5 is_stmt 0 view .LVU111
 360 00d2 FFF7FEFF 		bl	ADSR_keyOff
 361              	.LVL27:
 139:Core/Src/MIDI_event.c **** 				HAL_GPIO_WritePin(LD5_GPIO_Port, LD5_Pin, GPIO_PIN_RESET); // red LED OFF when all MIDI notes o
 362              		.loc 1 139 5 is_stmt 1 view .LVU112
 140:Core/Src/MIDI_event.c **** 			}
 363              		.loc 1 140 5 is_stmt 0 view .LVU113
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccNexo8a.s 			page 12


 364 00d6 2246     		mov	r2, r4
 139:Core/Src/MIDI_event.c **** 				HAL_GPIO_WritePin(LD5_GPIO_Port, LD5_Pin, GPIO_PIN_RESET); // red LED OFF when all MIDI notes o
 365              		.loc 1 139 16 view .LVU114
 366 00d8 3E70     		strb	r6, [r7]
 140:Core/Src/MIDI_event.c **** 			}
 367              		.loc 1 140 5 is_stmt 1 view .LVU115
 368 00da 0B48     		ldr	r0, .L41+20
 369              	.LBE13:
 370              		.loc 1 179 1 is_stmt 0 view .LVU116
 371 00dc BDE8F840 		pop	{r3, r4, r5, r6, r7, lr}
 372              		.cfi_remember_state
 373              		.cfi_restore 14
 374              		.cfi_restore 7
 375              		.cfi_restore 6
 376              		.cfi_restore 5
 377              		.cfi_restore 4
 378              		.cfi_restore 3
 379              		.cfi_def_cfa_offset 0
 380              	.LVL28:
 381              	.LBB14:
 140:Core/Src/MIDI_event.c **** 			}
 382              		.loc 1 140 5 view .LVU117
 383 00e0 4FF48041 		mov	r1, #16384
 384 00e4 FFF7FEBF 		b	HAL_GPIO_WritePin
 385              	.LVL29:
 386              	.L34:
 387              		.cfi_restore_state
 388              	.LBB8:
 140:Core/Src/MIDI_event.c **** 			}
 389              		.loc 1 140 5 view .LVU118
 390 00e8 1846     		mov	r0, r3
 391              	.LVL30:
 105:Core/Src/MIDI_event.c **** 			}
 392              		.loc 1 105 5 is_stmt 1 view .LVU119
 393              	.LBE8:
 394              	.LBB9:
 152:Core/Src/MIDI_event.c **** 				}
 395              		.loc 1 152 6 view .LVU120
 152:Core/Src/MIDI_event.c **** 				}
 396              		.loc 1 152 19 is_stmt 0 view .LVU121
 397 00ea 3070     		strb	r0, [r6]
 398 00ec B5E7     		b	.L40
 399              	.LVL31:
 400              	.L38:
 152:Core/Src/MIDI_event.c **** 				}
 401              		.loc 1 152 19 view .LVU122
 402 00ee 1046     		mov	r0, r2
 403              	.LVL32:
 152:Core/Src/MIDI_event.c **** 				}
 404              		.loc 1 152 6 is_stmt 1 view .LVU123
 152:Core/Src/MIDI_event.c **** 				}
 405              		.loc 1 152 19 is_stmt 0 view .LVU124
 406 00f0 3070     		strb	r0, [r6]
 407 00f2 B2E7     		b	.L40
 408              	.L42:
 409              		.align	2
 410              	.L41:
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccNexo8a.s 			page 13


 411 00f4 00000000 		.word	.LANCHOR1
 412 00f8 00000000 		.word	.LANCHOR0
 413 00fc 00000000 		.word	.LANCHOR3
 414 0100 00000000 		.word	.LANCHOR2
 415 0104 00000000 		.word	.LANCHOR4
 416 0108 000C0240 		.word	1073875968
 417 010c 00000000 		.word	adsr
 418              	.LBE9:
 419              	.LBE14:
 420              		.cfi_endproc
 421              	.LFE138:
 423              		.section	.text.USBH_UserProcess_callback,"ax",%progbits
 424              		.align	1
 425              		.p2align 2,,3
 426              		.global	USBH_UserProcess_callback
 427              		.syntax unified
 428              		.thumb
 429              		.thumb_func
 431              	USBH_UserProcess_callback:
 432              	.LVL33:
 433              	.LFB139:
 180:Core/Src/MIDI_event.c **** 
 181:Core/Src/MIDI_event.c **** 
 182:Core/Src/MIDI_event.c **** 
 183:Core/Src/MIDI_event.c **** 
 184:Core/Src/MIDI_event.c **** /*=================================================================================================
 185:Core/Src/MIDI_event.c **** /**
 186:Core/Src/MIDI_event.c ****  * @brief  User Process function callback
 187:Core/Src/MIDI_event.c ****  * @param  phost: Host Handle
 188:Core/Src/MIDI_event.c ****  * @param  id: Host Library user message ID
 189:Core/Src/MIDI_event.c ****  * @retval none
 190:Core/Src/MIDI_event.c ****  */
 191:Core/Src/MIDI_event.c **** void USBH_UserProcess_callback(USBH_HandleTypeDef *pHost, uint8_t vId)
 192:Core/Src/MIDI_event.c **** {
 434              		.loc 1 192 1 is_stmt 1 view -0
 435              		.cfi_startproc
 436              		@ args = 0, pretend = 0, frame = 0
 437              		@ frame_needed = 0, uses_anonymous_args = 0
 193:Core/Src/MIDI_event.c **** 	switch (vId)
 438              		.loc 1 193 2 view .LVU126
 439 0000 0429     		cmp	r1, #4
 440 0002 06D0     		beq	.L44
 441 0004 0529     		cmp	r1, #5
 192:Core/Src/MIDI_event.c **** 	switch (vId)
 442              		.loc 1 192 1 is_stmt 0 view .LVU127
 443 0006 10B5     		push	{r4, lr}
 444              		.cfi_def_cfa_offset 8
 445              		.cfi_offset 4, -8
 446              		.cfi_offset 14, -4
 447 0008 0B46     		mov	r3, r1
 448              		.loc 1 193 2 view .LVU128
 449 000a 20D0     		beq	.L45
 450 000c 0229     		cmp	r1, #2
 451 000e 08D0     		beq	.L52
 194:Core/Src/MIDI_event.c **** 	{
 195:Core/Src/MIDI_event.c **** 	case HOST_USER_SELECT_CONFIGURATION:
 196:Core/Src/MIDI_event.c **** 		break;
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccNexo8a.s 			page 14


 197:Core/Src/MIDI_event.c **** 
 198:Core/Src/MIDI_event.c **** 	case HOST_USER_DISCONNECTION:
 199:Core/Src/MIDI_event.c **** 		Appli_state = MIDI_APPLICATION_DISCONNECT;
 200:Core/Src/MIDI_event.c **** 		// 4 - green, 3 - orange, 5 - red, 6 - blue
 201:Core/Src/MIDI_event.c **** 		HAL_GPIO_WritePin(LD4_GPIO_Port, LD4_Pin, GPIO_PIN_RESET);
 202:Core/Src/MIDI_event.c **** 		HAL_GPIO_WritePin(LD6_GPIO_Port, LD6_Pin, GPIO_PIN_RESET);
 203:Core/Src/MIDI_event.c **** 		break;
 204:Core/Src/MIDI_event.c **** 
 205:Core/Src/MIDI_event.c **** 	case HOST_USER_CLASS_ACTIVE:
 206:Core/Src/MIDI_event.c **** 		Appli_state = MIDI_APPLICATION_READY;
 207:Core/Src/MIDI_event.c **** 		HAL_GPIO_WritePin(LD4_GPIO_Port, LD4_Pin, GPIO_PIN_SET);
 208:Core/Src/MIDI_event.c **** 		HAL_GPIO_WritePin(LD6_GPIO_Port, LD6_Pin, GPIO_PIN_RESET);
 209:Core/Src/MIDI_event.c **** 		HAL_GPIO_WritePin(LD5_GPIO_Port, LD5_Pin, GPIO_PIN_RESET);
 210:Core/Src/MIDI_event.c **** 		break;
 211:Core/Src/MIDI_event.c **** 
 212:Core/Src/MIDI_event.c **** 	case HOST_USER_CONNECTION:
 213:Core/Src/MIDI_event.c **** 		Appli_state = MIDI_APPLICATION_START;
 214:Core/Src/MIDI_event.c **** 		HAL_GPIO_WritePin(GPIOD, 0x8000, GPIO_PIN_SET);
 215:Core/Src/MIDI_event.c **** 		break;
 216:Core/Src/MIDI_event.c **** 
 217:Core/Src/MIDI_event.c **** 	default:
 218:Core/Src/MIDI_event.c **** 		break;
 219:Core/Src/MIDI_event.c **** 	}
 220:Core/Src/MIDI_event.c **** }
 452              		.loc 1 220 1 view .LVU129
 453 0010 10BD     		pop	{r4, pc}
 454              	.L44:
 455              		.cfi_def_cfa_offset 0
 456              		.cfi_restore 4
 457              		.cfi_restore 14
 213:Core/Src/MIDI_event.c **** 		HAL_GPIO_WritePin(GPIOD, 0x8000, GPIO_PIN_SET);
 458              		.loc 1 213 3 is_stmt 1 view .LVU130
 213:Core/Src/MIDI_event.c **** 		HAL_GPIO_WritePin(GPIOD, 0x8000, GPIO_PIN_SET);
 459              		.loc 1 213 15 is_stmt 0 view .LVU131
 460 0012 174B     		ldr	r3, .L53
 214:Core/Src/MIDI_event.c **** 		break;
 461              		.loc 1 214 3 view .LVU132
 462 0014 1748     		ldr	r0, .L53+4
 463              	.LVL34:
 213:Core/Src/MIDI_event.c **** 		HAL_GPIO_WritePin(GPIOD, 0x8000, GPIO_PIN_SET);
 464              		.loc 1 213 15 view .LVU133
 465 0016 0122     		movs	r2, #1
 214:Core/Src/MIDI_event.c **** 		break;
 466              		.loc 1 214 3 view .LVU134
 467 0018 4FF40041 		mov	r1, #32768
 468              	.LVL35:
 213:Core/Src/MIDI_event.c **** 		HAL_GPIO_WritePin(GPIOD, 0x8000, GPIO_PIN_SET);
 469              		.loc 1 213 15 view .LVU135
 470 001c 1A70     		strb	r2, [r3]
 214:Core/Src/MIDI_event.c **** 		break;
 471              		.loc 1 214 3 is_stmt 1 view .LVU136
 472 001e FFF7FEBF 		b	HAL_GPIO_WritePin
 473              	.LVL36:
 474              	.L52:
 475              		.cfi_def_cfa_offset 8
 476              		.cfi_offset 4, -8
 477              		.cfi_offset 14, -4
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccNexo8a.s 			page 15


 206:Core/Src/MIDI_event.c **** 		HAL_GPIO_WritePin(LD4_GPIO_Port, LD4_Pin, GPIO_PIN_SET);
 478              		.loc 1 206 3 view .LVU137
 206:Core/Src/MIDI_event.c **** 		HAL_GPIO_WritePin(LD4_GPIO_Port, LD4_Pin, GPIO_PIN_SET);
 479              		.loc 1 206 15 is_stmt 0 view .LVU138
 480 0022 134C     		ldr	r4, .L53
 207:Core/Src/MIDI_event.c **** 		HAL_GPIO_WritePin(LD6_GPIO_Port, LD6_Pin, GPIO_PIN_RESET);
 481              		.loc 1 207 3 view .LVU139
 482 0024 1348     		ldr	r0, .L53+4
 483              	.LVL37:
 206:Core/Src/MIDI_event.c **** 		HAL_GPIO_WritePin(LD4_GPIO_Port, LD4_Pin, GPIO_PIN_SET);
 484              		.loc 1 206 15 view .LVU140
 485 0026 2370     		strb	r3, [r4]
 207:Core/Src/MIDI_event.c **** 		HAL_GPIO_WritePin(LD6_GPIO_Port, LD6_Pin, GPIO_PIN_RESET);
 486              		.loc 1 207 3 is_stmt 1 view .LVU141
 487 0028 0122     		movs	r2, #1
 488 002a 4FF48051 		mov	r1, #4096
 489              	.LVL38:
 207:Core/Src/MIDI_event.c **** 		HAL_GPIO_WritePin(LD6_GPIO_Port, LD6_Pin, GPIO_PIN_RESET);
 490              		.loc 1 207 3 is_stmt 0 view .LVU142
 491 002e FFF7FEFF 		bl	HAL_GPIO_WritePin
 492              	.LVL39:
 208:Core/Src/MIDI_event.c **** 		HAL_GPIO_WritePin(LD5_GPIO_Port, LD5_Pin, GPIO_PIN_RESET);
 493              		.loc 1 208 3 is_stmt 1 view .LVU143
 494 0032 1048     		ldr	r0, .L53+4
 495 0034 0022     		movs	r2, #0
 496 0036 4FF40041 		mov	r1, #32768
 497 003a FFF7FEFF 		bl	HAL_GPIO_WritePin
 498              	.LVL40:
 209:Core/Src/MIDI_event.c **** 		break;
 499              		.loc 1 209 3 view .LVU144
 500              		.loc 1 220 1 is_stmt 0 view .LVU145
 501 003e BDE81040 		pop	{r4, lr}
 502              		.cfi_remember_state
 503              		.cfi_restore 14
 504              		.cfi_restore 4
 505              		.cfi_def_cfa_offset 0
 209:Core/Src/MIDI_event.c **** 		break;
 506              		.loc 1 209 3 view .LVU146
 507 0042 0C48     		ldr	r0, .L53+4
 508 0044 0022     		movs	r2, #0
 509 0046 4FF48041 		mov	r1, #16384
 510 004a FFF7FEBF 		b	HAL_GPIO_WritePin
 511              	.LVL41:
 512              	.L45:
 513              		.cfi_restore_state
 199:Core/Src/MIDI_event.c **** 		// 4 - green, 3 - orange, 5 - red, 6 - blue
 514              		.loc 1 199 3 is_stmt 1 view .LVU147
 199:Core/Src/MIDI_event.c **** 		// 4 - green, 3 - orange, 5 - red, 6 - blue
 515              		.loc 1 199 15 is_stmt 0 view .LVU148
 516 004e 084B     		ldr	r3, .L53
 201:Core/Src/MIDI_event.c **** 		HAL_GPIO_WritePin(LD6_GPIO_Port, LD6_Pin, GPIO_PIN_RESET);
 517              		.loc 1 201 3 view .LVU149
 518 0050 0848     		ldr	r0, .L53+4
 519              	.LVL42:
 201:Core/Src/MIDI_event.c **** 		HAL_GPIO_WritePin(LD6_GPIO_Port, LD6_Pin, GPIO_PIN_RESET);
 520              		.loc 1 201 3 view .LVU150
 521 0052 0022     		movs	r2, #0
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccNexo8a.s 			page 16


 522 0054 4FF48051 		mov	r1, #4096
 523              	.LVL43:
 199:Core/Src/MIDI_event.c **** 		// 4 - green, 3 - orange, 5 - red, 6 - blue
 524              		.loc 1 199 15 view .LVU151
 525 0058 0424     		movs	r4, #4
 526 005a 1C70     		strb	r4, [r3]
 201:Core/Src/MIDI_event.c **** 		HAL_GPIO_WritePin(LD6_GPIO_Port, LD6_Pin, GPIO_PIN_RESET);
 527              		.loc 1 201 3 is_stmt 1 view .LVU152
 528 005c FFF7FEFF 		bl	HAL_GPIO_WritePin
 529              	.LVL44:
 202:Core/Src/MIDI_event.c **** 		break;
 530              		.loc 1 202 3 view .LVU153
 531              		.loc 1 220 1 is_stmt 0 view .LVU154
 532 0060 BDE81040 		pop	{r4, lr}
 533              		.cfi_restore 14
 534              		.cfi_restore 4
 535              		.cfi_def_cfa_offset 0
 202:Core/Src/MIDI_event.c **** 		break;
 536              		.loc 1 202 3 view .LVU155
 537 0064 0348     		ldr	r0, .L53+4
 538 0066 0022     		movs	r2, #0
 539 0068 4FF40041 		mov	r1, #32768
 540 006c FFF7FEBF 		b	HAL_GPIO_WritePin
 541              	.LVL45:
 542              	.L54:
 543              		.align	2
 544              	.L53:
 545 0070 00000000 		.word	.LANCHOR5
 546 0074 000C0240 		.word	1073875968
 547              		.cfi_endproc
 548              	.LFE139:
 550              		.global	notesCount
 551              		.global	notes_Active
 552              		.global	velocity
 553              		.global	currentPitch
 554              		.global	pitchbend
 555              		.global	Appli_state
 556              		.global	hUSBHost
 557              		.section	.bss.Appli_state,"aw",%nobits
 558              		.set	.LANCHOR5,. + 0
 561              	Appli_state:
 562 0000 00       		.space	1
 563              		.section	.bss.currentPitch,"aw",%nobits
 564              		.set	.LANCHOR3,. + 0
 567              	currentPitch:
 568 0000 00       		.space	1
 569              		.section	.bss.hUSBHost,"aw",%nobits
 570              		.align	2
 573              	hUSBHost:
 574 0000 00000000 		.space	1564
 574      00000000 
 574      00000000 
 574      00000000 
 574      00000000 
 575              		.section	.bss.notesCount,"aw",%nobits
 576              		.set	.LANCHOR1,. + 0
 579              	notesCount:
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccNexo8a.s 			page 17


 580 0000 00       		.space	1
 581              		.section	.bss.notes_Active,"aw",%nobits
 582              		.align	2
 583              		.set	.LANCHOR0,. + 0
 586              	notes_Active:
 587 0000 00000000 		.space	128
 587      00000000 
 587      00000000 
 587      00000000 
 587      00000000 
 588              		.section	.bss.pitchbend,"aw",%nobits
 589              		.align	1
 590              		.set	.LANCHOR2,. + 0
 593              	pitchbend:
 594 0000 0000     		.space	2
 595              		.section	.bss.velocity,"aw",%nobits
 596              		.set	.LANCHOR4,. + 0
 599              	velocity:
 600 0000 00       		.space	1
 601              		.text
 602              	.Letext0:
 603              		.file 2 "/Users/johannes/Library/Application Support/Code/User/globalStorage/bmd.stm32-for-vscode/
 604              		.file 3 "/Users/johannes/Library/Application Support/Code/User/globalStorage/bmd.stm32-for-vscode/
 605              		.file 4 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/stm32f407xx.h"
 606              		.file 5 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_gpio.h"
 607              		.file 6 "Middlewares/ST/STM32_USB_Host_Library/Core/Inc/usbh_def.h"
 608              		.file 7 "Core/Inc/usbh_MIDI.h"
 609              		.file 8 "Core/Inc/MIDI_application.h"
 610              		.file 9 "Core/Inc/ADSR_envelope.h"
 611              		.file 10 "<built-in>"
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccNexo8a.s 			page 18


DEFINED SYMBOLS
                            *ABS*:0000000000000000 MIDI_event.c
/var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccNexo8a.s:20     .text.allNotesOff:0000000000000000 $t
/var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccNexo8a.s:27     .text.allNotesOff:0000000000000000 allNotesOff
/var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccNexo8a.s:64     .text.allNotesOff:0000000000000014 $d
/var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccNexo8a.s:70     .text.MIDI_eventInit:0000000000000000 $t
/var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccNexo8a.s:77     .text.MIDI_eventInit:0000000000000000 MIDI_eventInit
/var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccNexo8a.s:94     .text.MIDI_eventInit:000000000000000c $d
/var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccNexo8a.s:99     .text.ProcessMIDI:0000000000000000 $t
/var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccNexo8a.s:106    .text.ProcessMIDI:0000000000000000 ProcessMIDI
/var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccNexo8a.s:411    .text.ProcessMIDI:00000000000000f4 $d
/var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccNexo8a.s:424    .text.USBH_UserProcess_callback:0000000000000000 $t
/var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccNexo8a.s:431    .text.USBH_UserProcess_callback:0000000000000000 USBH_UserProcess_callback
/var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccNexo8a.s:545    .text.USBH_UserProcess_callback:0000000000000070 $d
/var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccNexo8a.s:579    .bss.notesCount:0000000000000000 notesCount
/var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccNexo8a.s:586    .bss.notes_Active:0000000000000000 notes_Active
/var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccNexo8a.s:599    .bss.velocity:0000000000000000 velocity
/var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccNexo8a.s:567    .bss.currentPitch:0000000000000000 currentPitch
/var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccNexo8a.s:593    .bss.pitchbend:0000000000000000 pitchbend
/var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccNexo8a.s:561    .bss.Appli_state:0000000000000000 Appli_state
/var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccNexo8a.s:573    .bss.hUSBHost:0000000000000000 hUSBHost
/var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccNexo8a.s:562    .bss.Appli_state:0000000000000000 $d
/var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccNexo8a.s:568    .bss.currentPitch:0000000000000000 $d
/var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccNexo8a.s:570    .bss.hUSBHost:0000000000000000 $d
/var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccNexo8a.s:580    .bss.notesCount:0000000000000000 $d
/var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccNexo8a.s:582    .bss.notes_Active:0000000000000000 $d
/var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccNexo8a.s:589    .bss.pitchbend:0000000000000000 $d
/var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccNexo8a.s:600    .bss.velocity:0000000000000000 $d

UNDEFINED SYMBOLS
memset
HAL_GPIO_WritePin
ADSR_keyOn
ADSR_keyOff
adsr
