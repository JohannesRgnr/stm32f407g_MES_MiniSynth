ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccjoeGbk.s 			page 1


   1              		.cpu cortex-m4
   2              		.arch armv7e-m
   3              		.fpu fpv4-sp-d16
   4              		.eabi_attribute 27, 1
   5              		.eabi_attribute 28, 1
   6              		.eabi_attribute 20, 1
   7              		.eabi_attribute 21, 1
   8              		.eabi_attribute 23, 3
   9              		.eabi_attribute 24, 1
  10              		.eabi_attribute 25, 1
  11              		.eabi_attribute 26, 1
  12              		.eabi_attribute 30, 2
  13              		.eabi_attribute 34, 1
  14              		.eabi_attribute 18, 4
  15              		.file	"MIDI_event.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text.allNotesOff,"ax",%progbits
  20              		.align	1
  21              		.p2align 2,,3
  22              		.global	allNotesOff
  23              		.syntax unified
  24              		.thumb
  25              		.thumb_func
  27              	allNotesOff:
  28              	.LFB242:
  29              		.file 1 "Core/Src/MIDI_event.c"
   1:Core/Src/MIDI_event.c **** /**
   2:Core/Src/MIDI_event.c ****  * @file MIDI_event.c
   3:Core/Src/MIDI_event.c ****  * @author modified by johannes regnier
   4:Core/Src/MIDI_event.c ****  * @brief MIDI events processing
   5:Core/Src/MIDI_event.c ****  * @note Makes use of the great resources from Tom Erbe
   6:Core/Src/MIDI_event.c ****  * @note http://synthnotes.ucsd.edu/wp4/index.php/2019/09/24/adding-the-usb-otg-midi-driver-polypho
   7:Core/Src/MIDI_event.c ****  * @note and of the awesome Xavier Halgand's Dekrispator
   8:Core/Src/MIDI_event.c ****  * @version 0.1
   9:Core/Src/MIDI_event.c ****  * @date 2023-12-30
  10:Core/Src/MIDI_event.c ****  *
  11:Core/Src/MIDI_event.c ****  * @copyright Copyright (c) 2023
  12:Core/Src/MIDI_event.c ****  *
  13:Core/Src/MIDI_event.c ****  */
  14:Core/Src/MIDI_event.c **** 
  15:Core/Src/MIDI_event.c **** #include <stdint.h>
  16:Core/Src/MIDI_event.c **** 
  17:Core/Src/MIDI_event.c **** #include "MIDI_event.h"
  18:Core/Src/MIDI_event.c **** #include "gpio.h"
  19:Core/Src/MIDI_event.c **** #include "SEGGER_RTT.h"
  20:Core/Src/MIDI_event.c **** #include "CONSTS.h"
  21:Core/Src/MIDI_event.c **** #include "helper_functions.h"
  22:Core/Src/MIDI_event.c **** #include "ADSR_envelope.h"
  23:Core/Src/MIDI_event.c **** 
  24:Core/Src/MIDI_event.c **** USBH_HandleTypeDef hUSBHost; /* USB Host handle */
  25:Core/Src/MIDI_event.c **** MIDI_ApplicationTypeDef Appli_state = MIDI_APPLICATION_IDLE;
  26:Core/Src/MIDI_event.c **** 
  27:Core/Src/MIDI_event.c **** uint16_t pitchbend ;
  28:Core/Src/MIDI_event.c **** uint8_t currentPitch ;
  29:Core/Src/MIDI_event.c **** uint8_t velocity, noteOn_velocity;
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccjoeGbk.s 			page 2


  30:Core/Src/MIDI_event.c **** uint8_t notes_Active[128] = {0}; // at most, 128 MIDI notes are active
  31:Core/Src/MIDI_event.c **** int8_t notesCount = 0 ;			 // number of notes active
  32:Core/Src/MIDI_event.c **** extern ADSR_t adsr_amp;
  33:Core/Src/MIDI_event.c **** extern ADSR_t adsr_filt;
  34:Core/Src/MIDI_event.c **** extern ADSR_t adsr_index;
  35:Core/Src/MIDI_event.c **** 
  36:Core/Src/MIDI_event.c **** void allNotesOff(void)
  37:Core/Src/MIDI_event.c **** {
  30              		.loc 1 37 1 view -0
  31              		.cfi_startproc
  32              		@ args = 0, pretend = 0, frame = 0
  33              		@ frame_needed = 0, uses_anonymous_args = 0
  38:Core/Src/MIDI_event.c **** 	for (uint8_t i = 0; i < 128; i++)
  34              		.loc 1 38 2 view .LVU1
  35              	.LBB2:
  36              		.loc 1 38 7 view .LVU2
  37              	.LVL0:
  38              		.loc 1 38 24 view .LVU3
  39              	.LBE2:
  37:Core/Src/MIDI_event.c **** 	for (uint8_t i = 0; i < 128; i++)
  40              		.loc 1 37 1 is_stmt 0 view .LVU4
  41 0000 08B5     		push	{r3, lr}
  42              		.cfi_def_cfa_offset 8
  43              		.cfi_offset 3, -8
  44              		.cfi_offset 14, -4
  45              	.LBB3:
  39:Core/Src/MIDI_event.c **** 		notes_Active[i] = 0;
  46              		.loc 1 39 19 view .LVU5
  47 0002 8022     		movs	r2, #128
  48 0004 0348     		ldr	r0, .L4
  49 0006 0021     		movs	r1, #0
  50 0008 FFF7FEFF 		bl	memset
  51              	.LVL1:
  52              		.loc 1 39 19 view .LVU6
  53              	.LBE3:
  40:Core/Src/MIDI_event.c **** 	notesCount = 0;
  54              		.loc 1 40 2 is_stmt 1 view .LVU7
  55              		.loc 1 40 13 is_stmt 0 view .LVU8
  56 000c 024B     		ldr	r3, .L4+4
  57 000e 0022     		movs	r2, #0
  58 0010 1A70     		strb	r2, [r3]
  41:Core/Src/MIDI_event.c **** }
  59              		.loc 1 41 1 view .LVU9
  60 0012 08BD     		pop	{r3, pc}
  61              	.L5:
  62              		.align	2
  63              	.L4:
  64 0014 00000000 		.word	.LANCHOR0
  65 0018 00000000 		.word	.LANCHOR1
  66              		.cfi_endproc
  67              	.LFE242:
  69              		.section	.text.MIDI_eventInit,"ax",%progbits
  70              		.align	1
  71              		.p2align 2,,3
  72              		.global	MIDI_eventInit
  73              		.syntax unified
  74              		.thumb
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccjoeGbk.s 			page 3


  75              		.thumb_func
  77              	MIDI_eventInit:
  78              	.LFB243:
  42:Core/Src/MIDI_event.c **** 
  43:Core/Src/MIDI_event.c **** 
  44:Core/Src/MIDI_event.c **** void MIDI_eventInit()
  45:Core/Src/MIDI_event.c **** {
  79              		.loc 1 45 1 is_stmt 1 view -0
  80              		.cfi_startproc
  81              		@ args = 0, pretend = 0, frame = 0
  82              		@ frame_needed = 0, uses_anonymous_args = 0
  83              		@ link register save eliminated.
  46:Core/Src/MIDI_event.c **** 	pitchbend = 8192;
  84              		.loc 1 46 2 view .LVU11
  85              		.loc 1 46 12 is_stmt 0 view .LVU12
  86 0000 024B     		ldr	r3, .L7
  87 0002 4FF40052 		mov	r2, #8192
  88 0006 1A80     		strh	r2, [r3]	@ movhi
  47:Core/Src/MIDI_event.c **** }
  89              		.loc 1 47 1 view .LVU13
  90 0008 7047     		bx	lr
  91              	.L8:
  92 000a 00BF     		.align	2
  93              	.L7:
  94 000c 00000000 		.word	.LANCHOR2
  95              		.cfi_endproc
  96              	.LFE243:
  98              		.section	.text.ProcessMIDI,"ax",%progbits
  99              		.align	1
 100              		.p2align 2,,3
 101              		.global	ProcessMIDI
 102              		.syntax unified
 103              		.thumb
 104              		.thumb_func
 106              	ProcessMIDI:
 107              	.LVL2:
 108              	.LFB244:
  48:Core/Src/MIDI_event.c **** 
  49:Core/Src/MIDI_event.c **** /**
  50:Core/Src/MIDI_event.c ****  * @brief Process incoming MIDI events - Monophonic, with legato
  51:Core/Src/MIDI_event.c ****  * @note Code adapted from Xavier Halgand and from Tom Erbe's version
  52:Core/Src/MIDI_event.c ****  *
  53:Core/Src/MIDI_event.c ****  * @param pack
  54:Core/Src/MIDI_event.c ****  */
  55:Core/Src/MIDI_event.c **** void ProcessMIDI(midi_package_t pack)
  56:Core/Src/MIDI_event.c **** {
 109              		.loc 1 56 1 is_stmt 1 view -0
 110              		.cfi_startproc
 111              		@ args = 0, pretend = 0, frame = 0
 112              		@ frame_needed = 0, uses_anonymous_args = 0
 113              		.loc 1 56 1 is_stmt 0 view .LVU15
 114 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 115              		.cfi_def_cfa_offset 24
 116              		.cfi_offset 3, -24
 117              		.cfi_offset 4, -20
 118              		.cfi_offset 5, -16
 119              		.cfi_offset 6, -12
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccjoeGbk.s 			page 4


 120              		.cfi_offset 7, -8
 121              		.cfi_offset 14, -4
 122 0002 C0F30743 		ubfx	r3, r0, #16, #8
 123 0006 C0F30766 		ubfx	r6, r0, #24, #8
 124 000a 040E     		lsrs	r4, r0, #24
  57:Core/Src/MIDI_event.c **** 	uint8_t status;
  58:Core/Src/MIDI_event.c **** 
  59:Core/Src/MIDI_event.c **** 	status = pack.evnt0 & 0xF0;
 125              		.loc 1 59 9 view .LVU16
 126 000c C0F30720 		ubfx	r0, r0, #8, #8
 127              	.LVL3:
 128              		.loc 1 59 9 view .LVU17
 129 0010 00F0F000 		and	r0, r0, #240
  60:Core/Src/MIDI_event.c **** 	if (status == 0xF0) // not using any of these
  61:Core/Src/MIDI_event.c **** 	{
  62:Core/Src/MIDI_event.c **** 		switch (pack.evnt0)
  63:Core/Src/MIDI_event.c **** 		{
  64:Core/Src/MIDI_event.c **** 		case 0xF0: // Start of System Exclusive
  65:Core/Src/MIDI_event.c **** 		case 0xF1: // MIDI Time Code Quarter Fram
  66:Core/Src/MIDI_event.c **** 		case 0xF2: // Song Position Pointer
  67:Core/Src/MIDI_event.c **** 		case 0xF3: // Song Select
  68:Core/Src/MIDI_event.c **** 		case 0xF4: // Undefined
  69:Core/Src/MIDI_event.c **** 		case 0xF5: // Undefined
  70:Core/Src/MIDI_event.c **** 		case 0xF6: // Tune Request
  71:Core/Src/MIDI_event.c **** 		case 0xF7: // End of System Exclusive
  72:Core/Src/MIDI_event.c **** 		case 0xF8: // Timing Clock (24 times a quarter note)
  73:Core/Src/MIDI_event.c **** 		case 0xF9: // Undefined
  74:Core/Src/MIDI_event.c **** 		case 0xFA: // Start Sequence
  75:Core/Src/MIDI_event.c **** 		case 0xFB: // Continue Sequence
  76:Core/Src/MIDI_event.c **** 		case 0xFC: // Pause Sequence
  77:Core/Src/MIDI_event.c **** 		case 0xFD: // Undefined
  78:Core/Src/MIDI_event.c **** 		case 0xFE: // Active Sensing
  79:Core/Src/MIDI_event.c **** 		case 0xFF: // Reset all synthesizers to power up
  80:Core/Src/MIDI_event.c **** 			break;
  81:Core/Src/MIDI_event.c **** 		}
  82:Core/Src/MIDI_event.c **** 	}
  83:Core/Src/MIDI_event.c **** 
  84:Core/Src/MIDI_event.c **** 	switch (status)
 130              		.loc 1 84 2 view .LVU18
 131 0014 9028     		cmp	r0, #144
 132 0016 1D46     		mov	r5, r3
 133              	.LVL4:
  57:Core/Src/MIDI_event.c **** 	uint8_t status;
 134              		.loc 1 57 2 is_stmt 1 view .LVU19
  59:Core/Src/MIDI_event.c **** 	if (status == 0xF0) // not using any of these
 135              		.loc 1 59 2 view .LVU20
  60:Core/Src/MIDI_event.c **** 	if (status == 0xF0) // not using any of these
 136              		.loc 1 60 2 view .LVU21
 137              		.loc 1 84 2 view .LVU22
 138 0018 25D0     		beq	.L10
 139 001a E028     		cmp	r0, #224
 140 001c 1ED0     		beq	.L11
 141 001e 8028     		cmp	r0, #128
 142 0020 00D0     		beq	.L32
 143              	.LVL5:
 144              	.L9:
  85:Core/Src/MIDI_event.c **** 	{
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccjoeGbk.s 			page 5


  86:Core/Src/MIDI_event.c **** 	/********************* Real Note Off *************************/	
  87:Core/Src/MIDI_event.c **** 	case 0x80: 
  88:Core/Src/MIDI_event.c **** 		uint8_t noteOff = pack.evnt1;
  89:Core/Src/MIDI_event.c **** 		notes_Active[noteOff] = 0;
  90:Core/Src/MIDI_event.c **** 		notesCount--;
  91:Core/Src/MIDI_event.c **** 		if (notesCount <= 0) // no notes active anymore
  92:Core/Src/MIDI_event.c **** 		{
  93:Core/Src/MIDI_event.c **** 			ADSR_keyOff(&adsr_amp); // release envelopes
  94:Core/Src/MIDI_event.c **** 			ADSR_keyOff(&adsr_filt);
  95:Core/Src/MIDI_event.c **** 			ADSR_keyOff(&adsr_index);
  96:Core/Src/MIDI_event.c **** 			notesCount = 0;
  97:Core/Src/MIDI_event.c **** 		}
  98:Core/Src/MIDI_event.c **** 		else // legato 
  99:Core/Src/MIDI_event.c **** 		{
 100:Core/Src/MIDI_event.c **** 			if (noteOff  == currentPitch) // let sound the lowest key pressed
 101:Core/Src/MIDI_event.c **** 			{
 102:Core/Src/MIDI_event.c **** 				uint8_t i;
 103:Core/Src/MIDI_event.c **** 				for (i = 0; i < 128; i++)
 104:Core/Src/MIDI_event.c **** 				{
 105:Core/Src/MIDI_event.c **** 					if (notes_Active[i] == 1) // find the lowest key pressed
 106:Core/Src/MIDI_event.c **** 						break;
 107:Core/Src/MIDI_event.c **** 				}
 108:Core/Src/MIDI_event.c **** 				currentPitch = i; 
 109:Core/Src/MIDI_event.c **** 			}
 110:Core/Src/MIDI_event.c **** 		}
 111:Core/Src/MIDI_event.c **** 		break;
 112:Core/Src/MIDI_event.c **** 	
 113:Core/Src/MIDI_event.c **** 	case 0x90: // Note On
 114:Core/Src/MIDI_event.c **** 		uint8_t noteOn = pack.evnt1;
 115:Core/Src/MIDI_event.c **** 		velocity = pack.evnt2;
 116:Core/Src/MIDI_event.c **** 		/*********************  Note On *************************/	
 117:Core/Src/MIDI_event.c **** 		if (velocity > 0) 
 118:Core/Src/MIDI_event.c **** 		{			
 119:Core/Src/MIDI_event.c **** 			currentPitch = noteOn;
 120:Core/Src/MIDI_event.c **** 			noteOn_velocity = velocity;
 121:Core/Src/MIDI_event.c **** 			ADSR_keyOn(&adsr_amp); // start envelopes
 122:Core/Src/MIDI_event.c **** 			ADSR_keyOn(&adsr_filt);
 123:Core/Src/MIDI_event.c **** 			ADSR_keyOn(&adsr_index);
 124:Core/Src/MIDI_event.c **** 			// SEGGER_RTT_printf(0, "Note ON, pitch %u\r\n", currentPitch); // debug
 125:Core/Src/MIDI_event.c **** 			HAL_GPIO_WritePin(LD5_GPIO_Port, LD5_Pin, GPIO_PIN_SET); // red LED ON when incoming MIDI note o
 126:Core/Src/MIDI_event.c **** 			notesCount++;
 127:Core/Src/MIDI_event.c **** 			notes_Active[noteOn] = 1;
 128:Core/Src/MIDI_event.c **** 		}
 129:Core/Src/MIDI_event.c **** 		/*********************  Note Off *************************/
 130:Core/Src/MIDI_event.c **** 		else //  common implementation in MIDI devices: Note Off = Note On with velocity 0
 131:Core/Src/MIDI_event.c **** 		{			
 132:Core/Src/MIDI_event.c **** 			notes_Active[noteOn] = 0;
 133:Core/Src/MIDI_event.c **** 			notesCount--;
 134:Core/Src/MIDI_event.c **** 			// SEGGER_RTT_printf(0, "Note OFF, pitch %u\r\n", currentPitch);
 135:Core/Src/MIDI_event.c **** 			if (notesCount <= 0)
 136:Core/Src/MIDI_event.c **** 			{
 137:Core/Src/MIDI_event.c **** 				ADSR_keyOff(&adsr_amp);		// release envelopes
 138:Core/Src/MIDI_event.c **** 				ADSR_keyOff(&adsr_filt);
 139:Core/Src/MIDI_event.c **** 				ADSR_keyOff(&adsr_index);
 140:Core/Src/MIDI_event.c **** 				notesCount = 0;
 141:Core/Src/MIDI_event.c **** 				HAL_GPIO_WritePin(LD5_GPIO_Port, LD5_Pin, GPIO_PIN_RESET); // red LED OFF when all MIDI notes o
 142:Core/Src/MIDI_event.c **** 			}
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccjoeGbk.s 			page 6


 143:Core/Src/MIDI_event.c **** 			else // legato
 144:Core/Src/MIDI_event.c **** 			{
 145:Core/Src/MIDI_event.c **** 				if (noteOn == currentPitch)
 146:Core/Src/MIDI_event.c **** 				{
 147:Core/Src/MIDI_event.c **** 					uint8_t i;
 148:Core/Src/MIDI_event.c **** 					for (i = 0; i < 128; i++)
 149:Core/Src/MIDI_event.c **** 					{
 150:Core/Src/MIDI_event.c **** 						if (notes_Active[i] == 1) // find the lowest key pressed
 151:Core/Src/MIDI_event.c **** 							break;
 152:Core/Src/MIDI_event.c **** 					}
 153:Core/Src/MIDI_event.c **** 					currentPitch = i; 
 154:Core/Src/MIDI_event.c **** 				}
 155:Core/Src/MIDI_event.c **** 			}
 156:Core/Src/MIDI_event.c **** 		}
 157:Core/Src/MIDI_event.c **** 	/********************* Other MIDI Messages *************************/	
 158:Core/Src/MIDI_event.c **** 	case 0xA0: 	// Polyphonic Pressure
 159:Core/Src/MIDI_event.c **** 		break;
 160:Core/Src/MIDI_event.c **** 	case 0xB0:	// Control Change
 161:Core/Src/MIDI_event.c **** 		// uint8_t cc_number = pack.evnt1;
 162:Core/Src/MIDI_event.c **** 		// uint8_t cc_value = pack.evnt2;
 163:Core/Src/MIDI_event.c **** 		// SEGGER_RTT_printf(0, "CC#  %u %u\r\n", cc_number, cc_value); // debug
 164:Core/Src/MIDI_event.c **** 		switch (pack.evnt1) // CC number --> implement CC actions
 165:Core/Src/MIDI_event.c **** 		{
 166:Core/Src/MIDI_event.c **** 		case 20:
 167:Core/Src/MIDI_event.c **** 			break;
 168:Core/Src/MIDI_event.c **** 		case 7:
 169:Core/Src/MIDI_event.c **** 			break; // master volume
 170:Core/Src/MIDI_event.c **** 		}
 171:Core/Src/MIDI_event.c **** 		break;
 172:Core/Src/MIDI_event.c **** 	case 0xC0: // Program Change
 173:Core/Src/MIDI_event.c **** 		break;
 174:Core/Src/MIDI_event.c **** 	case 0xD0: // After Touch
 175:Core/Src/MIDI_event.c **** 		break;
 176:Core/Src/MIDI_event.c **** 	case 0xE0: // Pitch Bend
 177:Core/Src/MIDI_event.c **** 		pitchbend = pack.evnt2 * 128 + pack.evnt1;
 178:Core/Src/MIDI_event.c **** 		break;
 179:Core/Src/MIDI_event.c **** 	}
 180:Core/Src/MIDI_event.c **** }
 145              		.loc 1 180 1 is_stmt 0 view .LVU23
 146 0022 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 147              	.LVL6:
 148              	.L32:
 149              	.LBB4:
  88:Core/Src/MIDI_event.c **** 		notes_Active[noteOff] = 0;
 150              		.loc 1 88 3 is_stmt 1 view .LVU24
  89:Core/Src/MIDI_event.c **** 		notesCount--;
 151              		.loc 1 89 3 view .LVU25
  90:Core/Src/MIDI_event.c **** 		if (notesCount <= 0) // no notes active anymore
 152              		.loc 1 90 13 is_stmt 0 view .LVU26
 153 0024 3D4E     		ldr	r6, .L41
 154              	.LVL7:
  89:Core/Src/MIDI_event.c **** 		notesCount--;
 155              		.loc 1 89 25 view .LVU27
 156 0026 3E4B     		ldr	r3, .L41+4
  90:Core/Src/MIDI_event.c **** 		if (notesCount <= 0) // no notes active anymore
 157              		.loc 1 90 13 view .LVU28
 158 0028 3278     		ldrb	r2, [r6]	@ zero_extendqisi2
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccjoeGbk.s 			page 7


 159 002a 013A     		subs	r2, r2, #1
  89:Core/Src/MIDI_event.c **** 		notesCount--;
 160              		.loc 1 89 25 view .LVU29
 161 002c 0024     		movs	r4, #0
  90:Core/Src/MIDI_event.c **** 		if (notesCount <= 0) // no notes active anymore
 162              		.loc 1 90 13 view .LVU30
 163 002e 52B2     		sxtb	r2, r2
  91:Core/Src/MIDI_event.c **** 		{
 164              		.loc 1 91 6 view .LVU31
 165 0030 A242     		cmp	r2, r4
  89:Core/Src/MIDI_event.c **** 		notesCount--;
 166              		.loc 1 89 25 view .LVU32
 167 0032 5C55     		strb	r4, [r3, r5]
  90:Core/Src/MIDI_event.c **** 		if (notesCount <= 0) // no notes active anymore
 168              		.loc 1 90 3 is_stmt 1 view .LVU33
  90:Core/Src/MIDI_event.c **** 		if (notesCount <= 0) // no notes active anymore
 169              		.loc 1 90 13 is_stmt 0 view .LVU34
 170 0034 3270     		strb	r2, [r6]
  91:Core/Src/MIDI_event.c **** 		{
 171              		.loc 1 91 3 is_stmt 1 view .LVU35
  91:Core/Src/MIDI_event.c **** 		{
 172              		.loc 1 91 6 is_stmt 0 view .LVU36
 173 0036 4EDD     		ble	.L33
 100:Core/Src/MIDI_event.c **** 			{
 174              		.loc 1 100 4 is_stmt 1 view .LVU37
 100:Core/Src/MIDI_event.c **** 			{
 175              		.loc 1 100 17 is_stmt 0 view .LVU38
 176 0038 3A4E     		ldr	r6, .L41+8
 100:Core/Src/MIDI_event.c **** 			{
 177              		.loc 1 100 7 view .LVU39
 178 003a 3278     		ldrb	r2, [r6]	@ zero_extendqisi2
 179 003c AA42     		cmp	r2, r5
 180 003e F0D1     		bne	.L9
 181 0040 1A46     		mov	r2, r3
 182 0042 2346     		mov	r3, r4
 183 0044 01E0     		b	.L16
 184              	.LVL8:
 185              	.L35:
 186              	.LBB5:
 103:Core/Src/MIDI_event.c **** 				{
 187              		.loc 1 103 19 discriminator 2 view .LVU40
 188 0046 802B     		cmp	r3, #128
 189 0048 62D0     		beq	.L34
 190              	.LVL9:
 191              	.L16:
 103:Core/Src/MIDI_event.c **** 				{
 192              		.loc 1 103 27 is_stmt 1 view .LVU41
 103:Core/Src/MIDI_event.c **** 				{
 193              		.loc 1 103 19 view .LVU42
 105:Core/Src/MIDI_event.c **** 						break;
 194              		.loc 1 105 22 is_stmt 0 view .LVU43
 195 004a 12F8011B 		ldrb	r1, [r2], #1	@ zero_extendqisi2
 105:Core/Src/MIDI_event.c **** 						break;
 196              		.loc 1 105 9 view .LVU44
 197 004e 0129     		cmp	r1, #1
 198 0050 D8B2     		uxtb	r0, r3
 199              	.LVL10:
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccjoeGbk.s 			page 8


 105:Core/Src/MIDI_event.c **** 						break;
 200              		.loc 1 105 6 is_stmt 1 view .LVU45
 103:Core/Src/MIDI_event.c **** 				{
 201              		.loc 1 103 19 is_stmt 0 view .LVU46
 202 0052 03F10103 		add	r3, r3, #1
 105:Core/Src/MIDI_event.c **** 						break;
 203              		.loc 1 105 9 view .LVU47
 204 0056 F6D1     		bne	.L35
 205              	.LBE5:
 206              	.LBB6:
 153:Core/Src/MIDI_event.c **** 				}
 207              		.loc 1 153 6 is_stmt 1 view .LVU48
 153:Core/Src/MIDI_event.c **** 				}
 208              		.loc 1 153 19 is_stmt 0 view .LVU49
 209 0058 3070     		strb	r0, [r6]
 210              	.LVL11:
 211              	.L40:
 153:Core/Src/MIDI_event.c **** 				}
 212              		.loc 1 153 19 view .LVU50
 213              	.LBE6:
 214              	.LBE4:
 215              		.loc 1 180 1 view .LVU51
 216 005a F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 217              	.LVL12:
 218              	.L11:
 219              	.LBB10:
 177:Core/Src/MIDI_event.c **** 		break;
 220              		.loc 1 177 3 is_stmt 1 view .LVU52
 177:Core/Src/MIDI_event.c **** 		break;
 221              		.loc 1 177 13 is_stmt 0 view .LVU53
 222 005c 324B     		ldr	r3, .L41+12
 177:Core/Src/MIDI_event.c **** 		break;
 223              		.loc 1 177 32 view .LVU54
 224 005e 05EBC412 		add	r2, r5, r4, lsl #7
 177:Core/Src/MIDI_event.c **** 		break;
 225              		.loc 1 177 13 view .LVU55
 226 0062 1A80     		strh	r2, [r3]	@ movhi
 178:Core/Src/MIDI_event.c **** 	}
 227              		.loc 1 178 3 is_stmt 1 view .LVU56
 228              	.LBE10:
 229              		.loc 1 180 1 is_stmt 0 view .LVU57
 230 0064 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 231              	.LVL13:
 232              	.L10:
 233              	.LBB11:
 114:Core/Src/MIDI_event.c **** 		velocity = pack.evnt2;
 234              		.loc 1 114 3 is_stmt 1 view .LVU58
 115:Core/Src/MIDI_event.c **** 		/*********************  Note On *************************/	
 235              		.loc 1 115 3 view .LVU59
 115:Core/Src/MIDI_event.c **** 		/*********************  Note On *************************/	
 236              		.loc 1 115 12 is_stmt 0 view .LVU60
 237 0066 314A     		ldr	r2, .L41+16
 238 0068 1670     		strb	r6, [r2]
 117:Core/Src/MIDI_event.c **** 		{			
 239              		.loc 1 117 3 is_stmt 1 view .LVU61
 117:Core/Src/MIDI_event.c **** 		{			
 240              		.loc 1 117 6 is_stmt 0 view .LVU62
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccjoeGbk.s 			page 9


 241 006a CCB9     		cbnz	r4, .L36
 132:Core/Src/MIDI_event.c **** 			notesCount--;
 242              		.loc 1 132 4 is_stmt 1 view .LVU63
 133:Core/Src/MIDI_event.c **** 			// SEGGER_RTT_printf(0, "Note OFF, pitch %u\r\n", currentPitch);
 243              		.loc 1 133 14 is_stmt 0 view .LVU64
 244 006c 2B4F     		ldr	r7, .L41
 132:Core/Src/MIDI_event.c **** 			notesCount--;
 245              		.loc 1 132 25 view .LVU65
 246 006e 2C4B     		ldr	r3, .L41+4
 133:Core/Src/MIDI_event.c **** 			// SEGGER_RTT_printf(0, "Note OFF, pitch %u\r\n", currentPitch);
 247              		.loc 1 133 14 view .LVU66
 248 0070 3A78     		ldrb	r2, [r7]	@ zero_extendqisi2
 132:Core/Src/MIDI_event.c **** 			notesCount--;
 249              		.loc 1 132 25 view .LVU67
 250 0072 5E55     		strb	r6, [r3, r5]
 133:Core/Src/MIDI_event.c **** 			// SEGGER_RTT_printf(0, "Note OFF, pitch %u\r\n", currentPitch);
 251              		.loc 1 133 4 is_stmt 1 view .LVU68
 133:Core/Src/MIDI_event.c **** 			// SEGGER_RTT_printf(0, "Note OFF, pitch %u\r\n", currentPitch);
 252              		.loc 1 133 14 is_stmt 0 view .LVU69
 253 0074 013A     		subs	r2, r2, #1
 254 0076 52B2     		sxtb	r2, r2
 135:Core/Src/MIDI_event.c **** 			{
 255              		.loc 1 135 7 view .LVU70
 256 0078 002A     		cmp	r2, #0
 133:Core/Src/MIDI_event.c **** 			// SEGGER_RTT_printf(0, "Note OFF, pitch %u\r\n", currentPitch);
 257              		.loc 1 133 14 view .LVU71
 258 007a 3A70     		strb	r2, [r7]
 135:Core/Src/MIDI_event.c **** 			{
 259              		.loc 1 135 4 is_stmt 1 view .LVU72
 135:Core/Src/MIDI_event.c **** 			{
 260              		.loc 1 135 7 is_stmt 0 view .LVU73
 261 007c 36DD     		ble	.L37
 145:Core/Src/MIDI_event.c **** 				{
 262              		.loc 1 145 5 is_stmt 1 view .LVU74
 145:Core/Src/MIDI_event.c **** 				{
 263              		.loc 1 145 16 is_stmt 0 view .LVU75
 264 007e 294E     		ldr	r6, .L41+8
 265              	.LVL14:
 145:Core/Src/MIDI_event.c **** 				{
 266              		.loc 1 145 8 view .LVU76
 267 0080 3278     		ldrb	r2, [r6]	@ zero_extendqisi2
 268 0082 AA42     		cmp	r2, r5
 269 0084 CDD1     		bne	.L9
 270 0086 2246     		mov	r2, r4
 271 0088 01E0     		b	.L21
 272              	.LVL15:
 273              	.L39:
 274              	.LBB7:
 148:Core/Src/MIDI_event.c **** 					{
 275              		.loc 1 148 20 discriminator 2 view .LVU77
 276 008a 802A     		cmp	r2, #128
 277 008c 43D0     		beq	.L38
 278              	.LVL16:
 279              	.L21:
 148:Core/Src/MIDI_event.c **** 					{
 280              		.loc 1 148 28 is_stmt 1 view .LVU78
 148:Core/Src/MIDI_event.c **** 					{
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccjoeGbk.s 			page 10


 281              		.loc 1 148 20 view .LVU79
 150:Core/Src/MIDI_event.c **** 							break;
 282              		.loc 1 150 23 is_stmt 0 view .LVU80
 283 008e 13F8011B 		ldrb	r1, [r3], #1	@ zero_extendqisi2
 150:Core/Src/MIDI_event.c **** 							break;
 284              		.loc 1 150 10 view .LVU81
 285 0092 0129     		cmp	r1, #1
 286 0094 D0B2     		uxtb	r0, r2
 287              	.LVL17:
 150:Core/Src/MIDI_event.c **** 							break;
 288              		.loc 1 150 7 is_stmt 1 view .LVU82
 148:Core/Src/MIDI_event.c **** 					{
 289              		.loc 1 148 20 is_stmt 0 view .LVU83
 290 0096 02F10102 		add	r2, r2, #1
 150:Core/Src/MIDI_event.c **** 							break;
 291              		.loc 1 150 10 view .LVU84
 292 009a F6D1     		bne	.L39
 153:Core/Src/MIDI_event.c **** 				}
 293              		.loc 1 153 6 is_stmt 1 view .LVU85
 153:Core/Src/MIDI_event.c **** 				}
 294              		.loc 1 153 19 is_stmt 0 view .LVU86
 295 009c 3070     		strb	r0, [r6]
 296 009e DCE7     		b	.L40
 297              	.LVL18:
 298              	.L36:
 153:Core/Src/MIDI_event.c **** 				}
 299              		.loc 1 153 19 view .LVU87
 300              	.LBE7:
 119:Core/Src/MIDI_event.c **** 			noteOn_velocity = velocity;
 301              		.loc 1 119 4 is_stmt 1 view .LVU88
 119:Core/Src/MIDI_event.c **** 			noteOn_velocity = velocity;
 302              		.loc 1 119 17 is_stmt 0 view .LVU89
 303 00a0 2049     		ldr	r1, .L41+8
 120:Core/Src/MIDI_event.c **** 			ADSR_keyOn(&adsr_amp); // start envelopes
 304              		.loc 1 120 20 view .LVU90
 305 00a2 234A     		ldr	r2, .L41+20
 121:Core/Src/MIDI_event.c **** 			ADSR_keyOn(&adsr_filt);
 306              		.loc 1 121 4 view .LVU91
 307 00a4 2348     		ldr	r0, .L41+24
 308              	.LVL19:
 119:Core/Src/MIDI_event.c **** 			noteOn_velocity = velocity;
 309              		.loc 1 119 17 view .LVU92
 310 00a6 0B70     		strb	r3, [r1]
 120:Core/Src/MIDI_event.c **** 			ADSR_keyOn(&adsr_amp); // start envelopes
 311              		.loc 1 120 4 is_stmt 1 view .LVU93
 120:Core/Src/MIDI_event.c **** 			ADSR_keyOn(&adsr_amp); // start envelopes
 312              		.loc 1 120 20 is_stmt 0 view .LVU94
 313 00a8 1670     		strb	r6, [r2]
 121:Core/Src/MIDI_event.c **** 			ADSR_keyOn(&adsr_filt);
 314              		.loc 1 121 4 is_stmt 1 view .LVU95
 315 00aa FFF7FEFF 		bl	ADSR_keyOn
 316              	.LVL20:
 122:Core/Src/MIDI_event.c **** 			ADSR_keyOn(&adsr_index);
 317              		.loc 1 122 4 view .LVU96
 318 00ae 2248     		ldr	r0, .L41+28
 319 00b0 FFF7FEFF 		bl	ADSR_keyOn
 320              	.LVL21:
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccjoeGbk.s 			page 11


 123:Core/Src/MIDI_event.c **** 			// SEGGER_RTT_printf(0, "Note ON, pitch %u\r\n", currentPitch); // debug
 321              		.loc 1 123 4 view .LVU97
 322 00b4 2148     		ldr	r0, .L41+32
 323 00b6 FFF7FEFF 		bl	ADSR_keyOn
 324              	.LVL22:
 125:Core/Src/MIDI_event.c **** 			notesCount++;
 325              		.loc 1 125 4 view .LVU98
 326 00ba 2148     		ldr	r0, .L41+36
 327 00bc 0122     		movs	r2, #1
 328 00be 4FF48041 		mov	r1, #16384
 329 00c2 FFF7FEFF 		bl	HAL_GPIO_WritePin
 330              	.LVL23:
 126:Core/Src/MIDI_event.c **** 			notes_Active[noteOn] = 1;
 331              		.loc 1 126 4 view .LVU99
 126:Core/Src/MIDI_event.c **** 			notes_Active[noteOn] = 1;
 332              		.loc 1 126 14 is_stmt 0 view .LVU100
 333 00c6 154A     		ldr	r2, .L41
 127:Core/Src/MIDI_event.c **** 		}
 334              		.loc 1 127 25 view .LVU101
 335 00c8 1549     		ldr	r1, .L41+4
 126:Core/Src/MIDI_event.c **** 			notes_Active[noteOn] = 1;
 336              		.loc 1 126 14 view .LVU102
 337 00ca 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 127:Core/Src/MIDI_event.c **** 		}
 338              		.loc 1 127 25 view .LVU103
 339 00cc 0120     		movs	r0, #1
 126:Core/Src/MIDI_event.c **** 			notes_Active[noteOn] = 1;
 340              		.loc 1 126 14 view .LVU104
 341 00ce 0344     		add	r3, r3, r0
 127:Core/Src/MIDI_event.c **** 		}
 342              		.loc 1 127 25 view .LVU105
 343 00d0 4855     		strb	r0, [r1, r5]
 126:Core/Src/MIDI_event.c **** 			notes_Active[noteOn] = 1;
 344              		.loc 1 126 14 view .LVU106
 345 00d2 1370     		strb	r3, [r2]
 127:Core/Src/MIDI_event.c **** 		}
 346              		.loc 1 127 4 is_stmt 1 view .LVU107
 347              	.LBE11:
 348              		.loc 1 180 1 is_stmt 0 view .LVU108
 349 00d4 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 350              	.LVL24:
 351              	.L33:
 352              	.LBB12:
  93:Core/Src/MIDI_event.c **** 			ADSR_keyOff(&adsr_filt);
 353              		.loc 1 93 4 is_stmt 1 view .LVU109
 354 00d6 1748     		ldr	r0, .L41+24
 355              	.LVL25:
  93:Core/Src/MIDI_event.c **** 			ADSR_keyOff(&adsr_filt);
 356              		.loc 1 93 4 is_stmt 0 view .LVU110
 357 00d8 FFF7FEFF 		bl	ADSR_keyOff
 358              	.LVL26:
  94:Core/Src/MIDI_event.c **** 			ADSR_keyOff(&adsr_index);
 359              		.loc 1 94 4 is_stmt 1 view .LVU111
 360 00dc 1648     		ldr	r0, .L41+28
 361 00de FFF7FEFF 		bl	ADSR_keyOff
 362              	.LVL27:
  95:Core/Src/MIDI_event.c **** 			notesCount = 0;
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccjoeGbk.s 			page 12


 363              		.loc 1 95 4 view .LVU112
 364 00e2 1648     		ldr	r0, .L41+32
 365 00e4 FFF7FEFF 		bl	ADSR_keyOff
 366              	.LVL28:
  96:Core/Src/MIDI_event.c **** 		}
 367              		.loc 1 96 4 view .LVU113
  96:Core/Src/MIDI_event.c **** 		}
 368              		.loc 1 96 15 is_stmt 0 view .LVU114
 369 00e8 3470     		strb	r4, [r6]
 370              	.LBE12:
 371              		.loc 1 180 1 view .LVU115
 372 00ea F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 373              	.LVL29:
 374              	.L37:
 375              	.LBB13:
 137:Core/Src/MIDI_event.c **** 				ADSR_keyOff(&adsr_filt);
 376              		.loc 1 137 5 is_stmt 1 view .LVU116
 377 00ec 1148     		ldr	r0, .L41+24
 378              	.LVL30:
 137:Core/Src/MIDI_event.c **** 				ADSR_keyOff(&adsr_filt);
 379              		.loc 1 137 5 is_stmt 0 view .LVU117
 380 00ee FFF7FEFF 		bl	ADSR_keyOff
 381              	.LVL31:
 138:Core/Src/MIDI_event.c **** 				ADSR_keyOff(&adsr_index);
 382              		.loc 1 138 5 is_stmt 1 view .LVU118
 383 00f2 1148     		ldr	r0, .L41+28
 384 00f4 FFF7FEFF 		bl	ADSR_keyOff
 385              	.LVL32:
 139:Core/Src/MIDI_event.c **** 				notesCount = 0;
 386              		.loc 1 139 5 view .LVU119
 387 00f8 1048     		ldr	r0, .L41+32
 388 00fa FFF7FEFF 		bl	ADSR_keyOff
 389              	.LVL33:
 140:Core/Src/MIDI_event.c **** 				HAL_GPIO_WritePin(LD5_GPIO_Port, LD5_Pin, GPIO_PIN_RESET); // red LED OFF when all MIDI notes o
 390              		.loc 1 140 5 view .LVU120
 141:Core/Src/MIDI_event.c **** 			}
 391              		.loc 1 141 5 is_stmt 0 view .LVU121
 392 00fe 2246     		mov	r2, r4
 140:Core/Src/MIDI_event.c **** 				HAL_GPIO_WritePin(LD5_GPIO_Port, LD5_Pin, GPIO_PIN_RESET); // red LED OFF when all MIDI notes o
 393              		.loc 1 140 16 view .LVU122
 394 0100 3E70     		strb	r6, [r7]
 141:Core/Src/MIDI_event.c **** 			}
 395              		.loc 1 141 5 is_stmt 1 view .LVU123
 396 0102 0F48     		ldr	r0, .L41+36
 397              	.LBE13:
 398              		.loc 1 180 1 is_stmt 0 view .LVU124
 399 0104 BDE8F840 		pop	{r3, r4, r5, r6, r7, lr}
 400              		.cfi_remember_state
 401              		.cfi_restore 14
 402              		.cfi_restore 7
 403              		.cfi_restore 6
 404              		.cfi_restore 5
 405              		.cfi_restore 4
 406              		.cfi_restore 3
 407              		.cfi_def_cfa_offset 0
 408              	.LVL34:
 409              	.LBB14:
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccjoeGbk.s 			page 13


 141:Core/Src/MIDI_event.c **** 			}
 410              		.loc 1 141 5 view .LVU125
 411 0108 4FF48041 		mov	r1, #16384
 412 010c FFF7FEBF 		b	HAL_GPIO_WritePin
 413              	.LVL35:
 414              	.L34:
 415              		.cfi_restore_state
 416              	.LBB8:
 141:Core/Src/MIDI_event.c **** 			}
 417              		.loc 1 141 5 view .LVU126
 418 0110 1846     		mov	r0, r3
 419              	.LVL36:
 108:Core/Src/MIDI_event.c **** 			}
 420              		.loc 1 108 5 is_stmt 1 view .LVU127
 421              	.LBE8:
 422              	.LBB9:
 153:Core/Src/MIDI_event.c **** 				}
 423              		.loc 1 153 6 view .LVU128
 153:Core/Src/MIDI_event.c **** 				}
 424              		.loc 1 153 19 is_stmt 0 view .LVU129
 425 0112 3070     		strb	r0, [r6]
 426 0114 A1E7     		b	.L40
 427              	.LVL37:
 428              	.L38:
 153:Core/Src/MIDI_event.c **** 				}
 429              		.loc 1 153 19 view .LVU130
 430 0116 1046     		mov	r0, r2
 431              	.LVL38:
 153:Core/Src/MIDI_event.c **** 				}
 432              		.loc 1 153 6 is_stmt 1 view .LVU131
 153:Core/Src/MIDI_event.c **** 				}
 433              		.loc 1 153 19 is_stmt 0 view .LVU132
 434 0118 3070     		strb	r0, [r6]
 435 011a 9EE7     		b	.L40
 436              	.L42:
 437              		.align	2
 438              	.L41:
 439 011c 00000000 		.word	.LANCHOR1
 440 0120 00000000 		.word	.LANCHOR0
 441 0124 00000000 		.word	.LANCHOR3
 442 0128 00000000 		.word	.LANCHOR2
 443 012c 00000000 		.word	.LANCHOR4
 444 0130 00000000 		.word	.LANCHOR5
 445 0134 00000000 		.word	adsr_amp
 446 0138 00000000 		.word	adsr_filt
 447 013c 00000000 		.word	adsr_index
 448 0140 000C0240 		.word	1073875968
 449              	.LBE9:
 450              	.LBE14:
 451              		.cfi_endproc
 452              	.LFE244:
 454              		.section	.text.USBH_UserProcess_callback,"ax",%progbits
 455              		.align	1
 456              		.p2align 2,,3
 457              		.global	USBH_UserProcess_callback
 458              		.syntax unified
 459              		.thumb
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccjoeGbk.s 			page 14


 460              		.thumb_func
 462              	USBH_UserProcess_callback:
 463              	.LVL39:
 464              	.LFB245:
 181:Core/Src/MIDI_event.c **** 
 182:Core/Src/MIDI_event.c **** 
 183:Core/Src/MIDI_event.c **** 
 184:Core/Src/MIDI_event.c **** 
 185:Core/Src/MIDI_event.c **** /*=================================================================================================
 186:Core/Src/MIDI_event.c **** /**
 187:Core/Src/MIDI_event.c ****  * @brief  User Process function callback
 188:Core/Src/MIDI_event.c ****  * @param  phost: Host Handle
 189:Core/Src/MIDI_event.c ****  * @param  id: Host Library user message ID
 190:Core/Src/MIDI_event.c ****  * @retval none
 191:Core/Src/MIDI_event.c ****  */
 192:Core/Src/MIDI_event.c **** void USBH_UserProcess_callback(USBH_HandleTypeDef *pHost, uint8_t vId)
 193:Core/Src/MIDI_event.c **** {
 465              		.loc 1 193 1 is_stmt 1 view -0
 466              		.cfi_startproc
 467              		@ args = 0, pretend = 0, frame = 0
 468              		@ frame_needed = 0, uses_anonymous_args = 0
 194:Core/Src/MIDI_event.c **** 	switch (vId)
 469              		.loc 1 194 2 view .LVU134
 470 0000 0429     		cmp	r1, #4
 471 0002 06D0     		beq	.L44
 472 0004 0529     		cmp	r1, #5
 193:Core/Src/MIDI_event.c **** 	switch (vId)
 473              		.loc 1 193 1 is_stmt 0 view .LVU135
 474 0006 10B5     		push	{r4, lr}
 475              		.cfi_def_cfa_offset 8
 476              		.cfi_offset 4, -8
 477              		.cfi_offset 14, -4
 478 0008 0B46     		mov	r3, r1
 479              		.loc 1 194 2 view .LVU136
 480 000a 20D0     		beq	.L45
 481 000c 0229     		cmp	r1, #2
 482 000e 08D0     		beq	.L52
 195:Core/Src/MIDI_event.c **** 	{
 196:Core/Src/MIDI_event.c **** 	case HOST_USER_SELECT_CONFIGURATION:
 197:Core/Src/MIDI_event.c **** 		break;
 198:Core/Src/MIDI_event.c **** 
 199:Core/Src/MIDI_event.c **** 	case HOST_USER_DISCONNECTION:
 200:Core/Src/MIDI_event.c **** 		Appli_state = MIDI_APPLICATION_DISCONNECT;
 201:Core/Src/MIDI_event.c **** 		// 4 - green, 3 - orange, 5 - red, 6 - blue
 202:Core/Src/MIDI_event.c **** 		HAL_GPIO_WritePin(LD4_GPIO_Port, LD4_Pin, GPIO_PIN_RESET);
 203:Core/Src/MIDI_event.c **** 		HAL_GPIO_WritePin(LD6_GPIO_Port, LD6_Pin, GPIO_PIN_RESET);
 204:Core/Src/MIDI_event.c **** 		break;
 205:Core/Src/MIDI_event.c **** 
 206:Core/Src/MIDI_event.c **** 	case HOST_USER_CLASS_ACTIVE:
 207:Core/Src/MIDI_event.c **** 		Appli_state = MIDI_APPLICATION_READY;
 208:Core/Src/MIDI_event.c **** 		HAL_GPIO_WritePin(LD4_GPIO_Port, LD4_Pin, GPIO_PIN_SET);
 209:Core/Src/MIDI_event.c **** 		HAL_GPIO_WritePin(LD6_GPIO_Port, LD6_Pin, GPIO_PIN_RESET);
 210:Core/Src/MIDI_event.c **** 		HAL_GPIO_WritePin(LD5_GPIO_Port, LD5_Pin, GPIO_PIN_RESET);
 211:Core/Src/MIDI_event.c **** 		break;
 212:Core/Src/MIDI_event.c **** 
 213:Core/Src/MIDI_event.c **** 	case HOST_USER_CONNECTION:
 214:Core/Src/MIDI_event.c **** 		Appli_state = MIDI_APPLICATION_START;
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccjoeGbk.s 			page 15


 215:Core/Src/MIDI_event.c **** 		HAL_GPIO_WritePin(GPIOD, 0x8000, GPIO_PIN_SET);
 216:Core/Src/MIDI_event.c **** 		break;
 217:Core/Src/MIDI_event.c **** 
 218:Core/Src/MIDI_event.c **** 	default:
 219:Core/Src/MIDI_event.c **** 		break;
 220:Core/Src/MIDI_event.c **** 	}
 221:Core/Src/MIDI_event.c **** }
 483              		.loc 1 221 1 view .LVU137
 484 0010 10BD     		pop	{r4, pc}
 485              	.L44:
 486              		.cfi_def_cfa_offset 0
 487              		.cfi_restore 4
 488              		.cfi_restore 14
 214:Core/Src/MIDI_event.c **** 		HAL_GPIO_WritePin(GPIOD, 0x8000, GPIO_PIN_SET);
 489              		.loc 1 214 3 is_stmt 1 view .LVU138
 214:Core/Src/MIDI_event.c **** 		HAL_GPIO_WritePin(GPIOD, 0x8000, GPIO_PIN_SET);
 490              		.loc 1 214 15 is_stmt 0 view .LVU139
 491 0012 174B     		ldr	r3, .L53
 215:Core/Src/MIDI_event.c **** 		break;
 492              		.loc 1 215 3 view .LVU140
 493 0014 1748     		ldr	r0, .L53+4
 494              	.LVL40:
 214:Core/Src/MIDI_event.c **** 		HAL_GPIO_WritePin(GPIOD, 0x8000, GPIO_PIN_SET);
 495              		.loc 1 214 15 view .LVU141
 496 0016 0122     		movs	r2, #1
 215:Core/Src/MIDI_event.c **** 		break;
 497              		.loc 1 215 3 view .LVU142
 498 0018 4FF40041 		mov	r1, #32768
 499              	.LVL41:
 214:Core/Src/MIDI_event.c **** 		HAL_GPIO_WritePin(GPIOD, 0x8000, GPIO_PIN_SET);
 500              		.loc 1 214 15 view .LVU143
 501 001c 1A70     		strb	r2, [r3]
 215:Core/Src/MIDI_event.c **** 		break;
 502              		.loc 1 215 3 is_stmt 1 view .LVU144
 503 001e FFF7FEBF 		b	HAL_GPIO_WritePin
 504              	.LVL42:
 505              	.L52:
 506              		.cfi_def_cfa_offset 8
 507              		.cfi_offset 4, -8
 508              		.cfi_offset 14, -4
 207:Core/Src/MIDI_event.c **** 		HAL_GPIO_WritePin(LD4_GPIO_Port, LD4_Pin, GPIO_PIN_SET);
 509              		.loc 1 207 3 view .LVU145
 207:Core/Src/MIDI_event.c **** 		HAL_GPIO_WritePin(LD4_GPIO_Port, LD4_Pin, GPIO_PIN_SET);
 510              		.loc 1 207 15 is_stmt 0 view .LVU146
 511 0022 134C     		ldr	r4, .L53
 208:Core/Src/MIDI_event.c **** 		HAL_GPIO_WritePin(LD6_GPIO_Port, LD6_Pin, GPIO_PIN_RESET);
 512              		.loc 1 208 3 view .LVU147
 513 0024 1348     		ldr	r0, .L53+4
 514              	.LVL43:
 207:Core/Src/MIDI_event.c **** 		HAL_GPIO_WritePin(LD4_GPIO_Port, LD4_Pin, GPIO_PIN_SET);
 515              		.loc 1 207 15 view .LVU148
 516 0026 2370     		strb	r3, [r4]
 208:Core/Src/MIDI_event.c **** 		HAL_GPIO_WritePin(LD6_GPIO_Port, LD6_Pin, GPIO_PIN_RESET);
 517              		.loc 1 208 3 is_stmt 1 view .LVU149
 518 0028 0122     		movs	r2, #1
 519 002a 4FF48051 		mov	r1, #4096
 520              	.LVL44:
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccjoeGbk.s 			page 16


 208:Core/Src/MIDI_event.c **** 		HAL_GPIO_WritePin(LD6_GPIO_Port, LD6_Pin, GPIO_PIN_RESET);
 521              		.loc 1 208 3 is_stmt 0 view .LVU150
 522 002e FFF7FEFF 		bl	HAL_GPIO_WritePin
 523              	.LVL45:
 209:Core/Src/MIDI_event.c **** 		HAL_GPIO_WritePin(LD5_GPIO_Port, LD5_Pin, GPIO_PIN_RESET);
 524              		.loc 1 209 3 is_stmt 1 view .LVU151
 525 0032 1048     		ldr	r0, .L53+4
 526 0034 0022     		movs	r2, #0
 527 0036 4FF40041 		mov	r1, #32768
 528 003a FFF7FEFF 		bl	HAL_GPIO_WritePin
 529              	.LVL46:
 210:Core/Src/MIDI_event.c **** 		break;
 530              		.loc 1 210 3 view .LVU152
 531              		.loc 1 221 1 is_stmt 0 view .LVU153
 532 003e BDE81040 		pop	{r4, lr}
 533              		.cfi_remember_state
 534              		.cfi_restore 14
 535              		.cfi_restore 4
 536              		.cfi_def_cfa_offset 0
 210:Core/Src/MIDI_event.c **** 		break;
 537              		.loc 1 210 3 view .LVU154
 538 0042 0C48     		ldr	r0, .L53+4
 539 0044 0022     		movs	r2, #0
 540 0046 4FF48041 		mov	r1, #16384
 541 004a FFF7FEBF 		b	HAL_GPIO_WritePin
 542              	.LVL47:
 543              	.L45:
 544              		.cfi_restore_state
 200:Core/Src/MIDI_event.c **** 		// 4 - green, 3 - orange, 5 - red, 6 - blue
 545              		.loc 1 200 3 is_stmt 1 view .LVU155
 200:Core/Src/MIDI_event.c **** 		// 4 - green, 3 - orange, 5 - red, 6 - blue
 546              		.loc 1 200 15 is_stmt 0 view .LVU156
 547 004e 084B     		ldr	r3, .L53
 202:Core/Src/MIDI_event.c **** 		HAL_GPIO_WritePin(LD6_GPIO_Port, LD6_Pin, GPIO_PIN_RESET);
 548              		.loc 1 202 3 view .LVU157
 549 0050 0848     		ldr	r0, .L53+4
 550              	.LVL48:
 202:Core/Src/MIDI_event.c **** 		HAL_GPIO_WritePin(LD6_GPIO_Port, LD6_Pin, GPIO_PIN_RESET);
 551              		.loc 1 202 3 view .LVU158
 552 0052 0022     		movs	r2, #0
 553 0054 4FF48051 		mov	r1, #4096
 554              	.LVL49:
 200:Core/Src/MIDI_event.c **** 		// 4 - green, 3 - orange, 5 - red, 6 - blue
 555              		.loc 1 200 15 view .LVU159
 556 0058 0424     		movs	r4, #4
 557 005a 1C70     		strb	r4, [r3]
 202:Core/Src/MIDI_event.c **** 		HAL_GPIO_WritePin(LD6_GPIO_Port, LD6_Pin, GPIO_PIN_RESET);
 558              		.loc 1 202 3 is_stmt 1 view .LVU160
 559 005c FFF7FEFF 		bl	HAL_GPIO_WritePin
 560              	.LVL50:
 203:Core/Src/MIDI_event.c **** 		break;
 561              		.loc 1 203 3 view .LVU161
 562              		.loc 1 221 1 is_stmt 0 view .LVU162
 563 0060 BDE81040 		pop	{r4, lr}
 564              		.cfi_restore 14
 565              		.cfi_restore 4
 566              		.cfi_def_cfa_offset 0
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccjoeGbk.s 			page 17


 203:Core/Src/MIDI_event.c **** 		break;
 567              		.loc 1 203 3 view .LVU163
 568 0064 0348     		ldr	r0, .L53+4
 569 0066 0022     		movs	r2, #0
 570 0068 4FF40041 		mov	r1, #32768
 571 006c FFF7FEBF 		b	HAL_GPIO_WritePin
 572              	.LVL51:
 573              	.L54:
 574              		.align	2
 575              	.L53:
 576 0070 00000000 		.word	.LANCHOR6
 577 0074 000C0240 		.word	1073875968
 578              		.cfi_endproc
 579              	.LFE245:
 581              		.global	notesCount
 582              		.global	notes_Active
 583              		.global	noteOn_velocity
 584              		.global	velocity
 585              		.global	currentPitch
 586              		.global	pitchbend
 587              		.global	Appli_state
 588              		.global	hUSBHost
 589              		.section	.bss.Appli_state,"aw",%nobits
 590              		.set	.LANCHOR6,. + 0
 593              	Appli_state:
 594 0000 00       		.space	1
 595              		.section	.bss.currentPitch,"aw",%nobits
 596              		.set	.LANCHOR3,. + 0
 599              	currentPitch:
 600 0000 00       		.space	1
 601              		.section	.bss.hUSBHost,"aw",%nobits
 602              		.align	2
 605              	hUSBHost:
 606 0000 00000000 		.space	1564
 606      00000000 
 606      00000000 
 606      00000000 
 606      00000000 
 607              		.section	.bss.noteOn_velocity,"aw",%nobits
 608              		.set	.LANCHOR5,. + 0
 611              	noteOn_velocity:
 612 0000 00       		.space	1
 613              		.section	.bss.notesCount,"aw",%nobits
 614              		.set	.LANCHOR1,. + 0
 617              	notesCount:
 618 0000 00       		.space	1
 619              		.section	.bss.notes_Active,"aw",%nobits
 620              		.align	2
 621              		.set	.LANCHOR0,. + 0
 624              	notes_Active:
 625 0000 00000000 		.space	128
 625      00000000 
 625      00000000 
 625      00000000 
 625      00000000 
 626              		.section	.bss.pitchbend,"aw",%nobits
 627              		.align	1
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccjoeGbk.s 			page 18


 628              		.set	.LANCHOR2,. + 0
 631              	pitchbend:
 632 0000 0000     		.space	2
 633              		.section	.bss.velocity,"aw",%nobits
 634              		.set	.LANCHOR4,. + 0
 637              	velocity:
 638 0000 00       		.space	1
 639              		.text
 640              	.Letext0:
 641              		.file 2 "/Users/johannes/Library/Application Support/Code/User/globalStorage/bmd.stm32-for-vscode/
 642              		.file 3 "/Users/johannes/Library/Application Support/Code/User/globalStorage/bmd.stm32-for-vscode/
 643              		.file 4 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/stm32f407xx.h"
 644              		.file 5 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_gpio.h"
 645              		.file 6 "Middlewares/ST/STM32_USB_Host_Library/Core/Inc/usbh_def.h"
 646              		.file 7 "Core/Inc/usbh_MIDI.h"
 647              		.file 8 "Core/Inc/MIDI_application.h"
 648              		.file 9 "Core/Inc/ADSR_envelope.h"
 649              		.file 10 "<built-in>"
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccjoeGbk.s 			page 19


DEFINED SYMBOLS
                            *ABS*:0000000000000000 MIDI_event.c
/var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccjoeGbk.s:20     .text.allNotesOff:0000000000000000 $t
/var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccjoeGbk.s:27     .text.allNotesOff:0000000000000000 allNotesOff
/var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccjoeGbk.s:64     .text.allNotesOff:0000000000000014 $d
/var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccjoeGbk.s:70     .text.MIDI_eventInit:0000000000000000 $t
/var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccjoeGbk.s:77     .text.MIDI_eventInit:0000000000000000 MIDI_eventInit
/var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccjoeGbk.s:94     .text.MIDI_eventInit:000000000000000c $d
/var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccjoeGbk.s:99     .text.ProcessMIDI:0000000000000000 $t
/var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccjoeGbk.s:106    .text.ProcessMIDI:0000000000000000 ProcessMIDI
/var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccjoeGbk.s:439    .text.ProcessMIDI:000000000000011c $d
/var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccjoeGbk.s:455    .text.USBH_UserProcess_callback:0000000000000000 $t
/var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccjoeGbk.s:462    .text.USBH_UserProcess_callback:0000000000000000 USBH_UserProcess_callback
/var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccjoeGbk.s:576    .text.USBH_UserProcess_callback:0000000000000070 $d
/var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccjoeGbk.s:617    .bss.notesCount:0000000000000000 notesCount
/var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccjoeGbk.s:624    .bss.notes_Active:0000000000000000 notes_Active
/var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccjoeGbk.s:611    .bss.noteOn_velocity:0000000000000000 noteOn_velocity
/var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccjoeGbk.s:637    .bss.velocity:0000000000000000 velocity
/var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccjoeGbk.s:599    .bss.currentPitch:0000000000000000 currentPitch
/var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccjoeGbk.s:631    .bss.pitchbend:0000000000000000 pitchbend
/var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccjoeGbk.s:593    .bss.Appli_state:0000000000000000 Appli_state
/var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccjoeGbk.s:605    .bss.hUSBHost:0000000000000000 hUSBHost
/var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccjoeGbk.s:594    .bss.Appli_state:0000000000000000 $d
/var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccjoeGbk.s:600    .bss.currentPitch:0000000000000000 $d
/var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccjoeGbk.s:602    .bss.hUSBHost:0000000000000000 $d
/var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccjoeGbk.s:612    .bss.noteOn_velocity:0000000000000000 $d
/var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccjoeGbk.s:618    .bss.notesCount:0000000000000000 $d
/var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccjoeGbk.s:620    .bss.notes_Active:0000000000000000 $d
/var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccjoeGbk.s:627    .bss.pitchbend:0000000000000000 $d
/var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccjoeGbk.s:638    .bss.velocity:0000000000000000 $d

UNDEFINED SYMBOLS
memset
ADSR_keyOn
HAL_GPIO_WritePin
ADSR_keyOff
adsr_amp
adsr_filt
adsr_index
