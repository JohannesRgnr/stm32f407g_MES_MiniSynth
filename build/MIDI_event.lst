ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccodF70w.s 			page 1


   1              		.cpu cortex-m4
   2              		.arch armv7e-m
   3              		.fpu fpv4-sp-d16
   4              		.eabi_attribute 27, 1
   5              		.eabi_attribute 28, 1
   6              		.eabi_attribute 20, 1
   7              		.eabi_attribute 21, 1
   8              		.eabi_attribute 23, 3
   9              		.eabi_attribute 24, 1
  10              		.eabi_attribute 25, 1
  11              		.eabi_attribute 26, 1
  12              		.eabi_attribute 30, 2
  13              		.eabi_attribute 34, 1
  14              		.eabi_attribute 18, 4
  15              		.file	"MIDI_event.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text.allNotesOff,"ax",%progbits
  20              		.align	1
  21              		.p2align 2,,3
  22              		.global	allNotesOff
  23              		.syntax unified
  24              		.thumb
  25              		.thumb_func
  27              	allNotesOff:
  28              	.LFB242:
  29              		.file 1 "Core/Src/MIDI_event.c"
   1:Core/Src/MIDI_event.c **** /**
   2:Core/Src/MIDI_event.c ****  * @file MIDI_event.c
   3:Core/Src/MIDI_event.c ****  * @author modified by johannes regnier
   4:Core/Src/MIDI_event.c ****  * @brief MIDI events processing
   5:Core/Src/MIDI_event.c ****  * @note Makes use of the great resources from Tom Erbe
   6:Core/Src/MIDI_event.c ****  * @note http://synthnotes.ucsd.edu/wp4/index.php/2019/09/24/adding-the-usb-otg-midi-driver-polypho
   7:Core/Src/MIDI_event.c ****  * @note and of the awesome Xavier Halgand's Dekrispator
   8:Core/Src/MIDI_event.c ****  * @version 0.1
   9:Core/Src/MIDI_event.c ****  * @date 2023-12-30
  10:Core/Src/MIDI_event.c ****  *
  11:Core/Src/MIDI_event.c ****  * @copyright Copyright (c) 2023
  12:Core/Src/MIDI_event.c ****  *
  13:Core/Src/MIDI_event.c ****  */
  14:Core/Src/MIDI_event.c **** 
  15:Core/Src/MIDI_event.c **** #include <stdint.h>
  16:Core/Src/MIDI_event.c **** 
  17:Core/Src/MIDI_event.c **** #include "MIDI_event.h"
  18:Core/Src/MIDI_event.c **** #include "gpio.h"
  19:Core/Src/MIDI_event.c **** #include "SEGGER_RTT.h"
  20:Core/Src/MIDI_event.c **** #include "CONSTS.h"
  21:Core/Src/MIDI_event.c **** #include "helper_functions.h"
  22:Core/Src/MIDI_event.c **** #include "ADSR_envelope.h"
  23:Core/Src/MIDI_event.c **** 
  24:Core/Src/MIDI_event.c **** USBH_HandleTypeDef hUSBHost; /* USB Host handle */
  25:Core/Src/MIDI_event.c **** MIDI_ApplicationTypeDef Appli_state = MIDI_APPLICATION_IDLE;
  26:Core/Src/MIDI_event.c **** 
  27:Core/Src/MIDI_event.c **** uint16_t pitchbend ;
  28:Core/Src/MIDI_event.c **** uint8_t currentPitch ;
  29:Core/Src/MIDI_event.c **** uint8_t velocity, noteOn_velocity;
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccodF70w.s 			page 2


  30:Core/Src/MIDI_event.c **** uint8_t notes_Active[128] = {0}; // at most, 128 MIDI notes are active
  31:Core/Src/MIDI_event.c **** int8_t notesCount = 0 ;			 // number of notes active
  32:Core/Src/MIDI_event.c **** extern ADSR_t adsr_amp;
  33:Core/Src/MIDI_event.c **** extern ADSR_t adsr_filt;
  34:Core/Src/MIDI_event.c **** extern ADSR_t adsr_index;
  35:Core/Src/MIDI_event.c **** 
  36:Core/Src/MIDI_event.c **** 
  37:Core/Src/MIDI_event.c **** /**
  38:Core/Src/MIDI_event.c ****  * @brief turns off all current active notes
  39:Core/Src/MIDI_event.c ****  * 
  40:Core/Src/MIDI_event.c ****  */
  41:Core/Src/MIDI_event.c **** void allNotesOff(void)
  42:Core/Src/MIDI_event.c **** {
  30              		.loc 1 42 1 view -0
  31              		.cfi_startproc
  32              		@ args = 0, pretend = 0, frame = 0
  33              		@ frame_needed = 0, uses_anonymous_args = 0
  43:Core/Src/MIDI_event.c **** 	for (uint8_t i = 0; i < 128; i++)
  34              		.loc 1 43 2 view .LVU1
  35              	.LBB3:
  36              		.loc 1 43 7 view .LVU2
  37              	.LVL0:
  38              		.loc 1 43 24 view .LVU3
  39              	.LBE3:
  42:Core/Src/MIDI_event.c **** 	for (uint8_t i = 0; i < 128; i++)
  40              		.loc 1 42 1 is_stmt 0 view .LVU4
  41 0000 2DE9F843 		push	{r3, r4, r5, r6, r7, r8, r9, lr}
  42              		.cfi_def_cfa_offset 32
  43              		.cfi_offset 3, -32
  44              		.cfi_offset 4, -28
  45              		.cfi_offset 5, -24
  46              		.cfi_offset 6, -20
  47              		.cfi_offset 7, -16
  48              		.cfi_offset 8, -12
  49              		.cfi_offset 9, -8
  50              		.cfi_offset 14, -4
  51 0004 0C4C     		ldr	r4, .L6
  52              	.LBB4:
  44:Core/Src/MIDI_event.c **** 	{
  45:Core/Src/MIDI_event.c **** 		notes_Active[i] = 0;
  46:Core/Src/MIDI_event.c **** 		ADSR_keyOff(&adsr_amp); // release envelopes
  53              		.loc 1 46 3 view .LVU5
  54 0006 DFF83C90 		ldr	r9, .L6+12
  47:Core/Src/MIDI_event.c **** 		ADSR_keyOff(&adsr_filt);
  55              		.loc 1 47 3 view .LVU6
  56 000a DFF83C80 		ldr	r8, .L6+16
  48:Core/Src/MIDI_event.c **** 		ADSR_keyOff(&adsr_index);
  57              		.loc 1 48 3 view .LVU7
  58 000e 0B4F     		ldr	r7, .L6+4
  59 0010 04F18006 		add	r6, r4, #128
  60              	.LVL1:
  61              	.L2:
  45:Core/Src/MIDI_event.c **** 		ADSR_keyOff(&adsr_amp); // release envelopes
  62              		.loc 1 45 3 is_stmt 1 discriminator 3 view .LVU8
  46:Core/Src/MIDI_event.c **** 		ADSR_keyOff(&adsr_filt);
  63              		.loc 1 46 3 is_stmt 0 discriminator 3 view .LVU9
  64 0014 4846     		mov	r0, r9
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccodF70w.s 			page 3


  45:Core/Src/MIDI_event.c **** 		ADSR_keyOff(&adsr_amp); // release envelopes
  65              		.loc 1 45 19 discriminator 3 view .LVU10
  66 0016 0025     		movs	r5, #0
  67 0018 04F8015F 		strb	r5, [r4, #1]!
  68              	.LVL2:
  46:Core/Src/MIDI_event.c **** 		ADSR_keyOff(&adsr_filt);
  69              		.loc 1 46 3 is_stmt 1 discriminator 3 view .LVU11
  70 001c FFF7FEFF 		bl	ADSR_keyOff
  71              	.LVL3:
  47:Core/Src/MIDI_event.c **** 		ADSR_keyOff(&adsr_index);
  72              		.loc 1 47 3 discriminator 3 view .LVU12
  73 0020 4046     		mov	r0, r8
  74 0022 FFF7FEFF 		bl	ADSR_keyOff
  75              	.LVL4:
  76              		.loc 1 48 3 discriminator 3 view .LVU13
  77 0026 3846     		mov	r0, r7
  78 0028 FFF7FEFF 		bl	ADSR_keyOff
  79              	.LVL5:
  43:Core/Src/MIDI_event.c **** 	{
  80              		.loc 1 43 32 discriminator 3 view .LVU14
  43:Core/Src/MIDI_event.c **** 	{
  81              		.loc 1 43 24 discriminator 3 view .LVU15
  82 002c B442     		cmp	r4, r6
  83 002e F1D1     		bne	.L2
  84              	.LBE4:
  49:Core/Src/MIDI_event.c **** 	}
  50:Core/Src/MIDI_event.c **** 	notesCount = 0;
  85              		.loc 1 50 2 view .LVU16
  86              		.loc 1 50 13 is_stmt 0 view .LVU17
  87 0030 034B     		ldr	r3, .L6+8
  88 0032 1D70     		strb	r5, [r3]
  51:Core/Src/MIDI_event.c **** }
  89              		.loc 1 51 1 view .LVU18
  90 0034 BDE8F883 		pop	{r3, r4, r5, r6, r7, r8, r9, pc}
  91              	.LVL6:
  92              	.L7:
  93              		.loc 1 51 1 view .LVU19
  94              		.align	2
  95              	.L6:
  96 0038 FFFFFFFF 		.word	.LANCHOR0-1
  97 003c 00000000 		.word	adsr_index
  98 0040 00000000 		.word	.LANCHOR1
  99 0044 00000000 		.word	adsr_amp
 100 0048 00000000 		.word	adsr_filt
 101              		.cfi_endproc
 102              	.LFE242:
 104              		.section	.text.MIDI_eventInit,"ax",%progbits
 105              		.align	1
 106              		.p2align 2,,3
 107              		.global	MIDI_eventInit
 108              		.syntax unified
 109              		.thumb
 110              		.thumb_func
 112              	MIDI_eventInit:
 113              	.LFB243:
  52:Core/Src/MIDI_event.c **** 
  53:Core/Src/MIDI_event.c **** 
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccodF70w.s 			page 4


  54:Core/Src/MIDI_event.c **** void MIDI_eventInit()
  55:Core/Src/MIDI_event.c **** {
 114              		.loc 1 55 1 is_stmt 1 view -0
 115              		.cfi_startproc
 116              		@ args = 0, pretend = 0, frame = 0
 117              		@ frame_needed = 0, uses_anonymous_args = 0
 118              		@ link register save eliminated.
  56:Core/Src/MIDI_event.c **** 	pitchbend = 8192;
 119              		.loc 1 56 2 view .LVU21
 120              		.loc 1 56 12 is_stmt 0 view .LVU22
 121 0000 024B     		ldr	r3, .L9
 122 0002 4FF40052 		mov	r2, #8192
 123 0006 1A80     		strh	r2, [r3]	@ movhi
  57:Core/Src/MIDI_event.c **** }
 124              		.loc 1 57 1 view .LVU23
 125 0008 7047     		bx	lr
 126              	.L10:
 127 000a 00BF     		.align	2
 128              	.L9:
 129 000c 00000000 		.word	.LANCHOR2
 130              		.cfi_endproc
 131              	.LFE243:
 133              		.section	.text.ProcessMIDI,"ax",%progbits
 134              		.align	1
 135              		.p2align 2,,3
 136              		.global	ProcessMIDI
 137              		.syntax unified
 138              		.thumb
 139              		.thumb_func
 141              	ProcessMIDI:
 142              	.LVL7:
 143              	.LFB244:
  58:Core/Src/MIDI_event.c **** 
  59:Core/Src/MIDI_event.c **** /**
  60:Core/Src/MIDI_event.c ****  * @brief Process incoming MIDI events - Monophonic, with legato
  61:Core/Src/MIDI_event.c ****  * @note Code adapted from Xavier Halgand and from Tom Erbe's version
  62:Core/Src/MIDI_event.c ****  *
  63:Core/Src/MIDI_event.c ****  * @param pack
  64:Core/Src/MIDI_event.c ****  */
  65:Core/Src/MIDI_event.c **** void ProcessMIDI(midi_package_t pack)
  66:Core/Src/MIDI_event.c **** {
 144              		.loc 1 66 1 is_stmt 1 view -0
 145              		.cfi_startproc
 146              		@ args = 0, pretend = 0, frame = 0
 147              		@ frame_needed = 0, uses_anonymous_args = 0
 148              		.loc 1 66 1 is_stmt 0 view .LVU25
 149 0000 38B5     		push	{r3, r4, r5, lr}
 150              		.cfi_def_cfa_offset 16
 151              		.cfi_offset 3, -16
 152              		.cfi_offset 4, -12
 153              		.cfi_offset 5, -8
 154              		.cfi_offset 14, -4
 155 0002 C0F30742 		ubfx	r2, r0, #16, #8
 156 0006 C0F30761 		ubfx	r1, r0, #24, #8
 157 000a 030E     		lsrs	r3, r0, #24
  67:Core/Src/MIDI_event.c **** 	uint8_t status;
  68:Core/Src/MIDI_event.c **** 
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccodF70w.s 			page 5


  69:Core/Src/MIDI_event.c **** 	status = pack.evnt0 & 0xF0;
 158              		.loc 1 69 9 view .LVU26
 159 000c C0F30720 		ubfx	r0, r0, #8, #8
 160              	.LVL8:
 161              		.loc 1 69 9 view .LVU27
 162 0010 00F0F000 		and	r0, r0, #240
  70:Core/Src/MIDI_event.c **** 	if (status == 0xF0) // not using any of these
  71:Core/Src/MIDI_event.c **** 	{
  72:Core/Src/MIDI_event.c **** 		switch (pack.evnt0)
  73:Core/Src/MIDI_event.c **** 		{
  74:Core/Src/MIDI_event.c **** 		case 0xF0: // Start of System Exclusive
  75:Core/Src/MIDI_event.c **** 		case 0xF1: // MIDI Time Code Quarter Fram
  76:Core/Src/MIDI_event.c **** 		case 0xF2: // Song Position Pointer
  77:Core/Src/MIDI_event.c **** 		case 0xF3: // Song Select
  78:Core/Src/MIDI_event.c **** 		case 0xF4: // Undefined
  79:Core/Src/MIDI_event.c **** 		case 0xF5: // Undefined
  80:Core/Src/MIDI_event.c **** 		case 0xF6: // Tune Request
  81:Core/Src/MIDI_event.c **** 		case 0xF7: // End of System Exclusive
  82:Core/Src/MIDI_event.c **** 		case 0xF8: // Timing Clock (24 times a quarter note)
  83:Core/Src/MIDI_event.c **** 		case 0xF9: // Undefined
  84:Core/Src/MIDI_event.c **** 		case 0xFA: // Start Sequence
  85:Core/Src/MIDI_event.c **** 		case 0xFB: // Continue Sequence
  86:Core/Src/MIDI_event.c **** 		case 0xFC: // Pause Sequence
  87:Core/Src/MIDI_event.c **** 		case 0xFD: // Undefined
  88:Core/Src/MIDI_event.c **** 		case 0xFE: // Active Sensing
  89:Core/Src/MIDI_event.c **** 		case 0xFF: // Reset all synthesizers to power up
  90:Core/Src/MIDI_event.c **** 			break;
  91:Core/Src/MIDI_event.c **** 		}
  92:Core/Src/MIDI_event.c **** 	}
  93:Core/Src/MIDI_event.c **** 
  94:Core/Src/MIDI_event.c **** 	switch (status)
 163              		.loc 1 94 2 view .LVU28
 164 0014 9028     		cmp	r0, #144
 165 0016 1446     		mov	r4, r2
 166              	.LVL9:
  67:Core/Src/MIDI_event.c **** 	uint8_t status;
 167              		.loc 1 67 2 is_stmt 1 view .LVU29
  69:Core/Src/MIDI_event.c **** 	if (status == 0xF0) // not using any of these
 168              		.loc 1 69 2 view .LVU30
  70:Core/Src/MIDI_event.c **** 	if (status == 0xF0) // not using any of these
 169              		.loc 1 70 2 view .LVU31
 170              		.loc 1 94 2 view .LVU32
 171 0018 23D0     		beq	.L12
 172 001a E028     		cmp	r0, #224
 173 001c 1CD0     		beq	.L13
 174 001e 8028     		cmp	r0, #128
 175 0020 00D0     		beq	.L36
 176              	.LVL10:
 177              	.L11:
  95:Core/Src/MIDI_event.c **** 	{
  96:Core/Src/MIDI_event.c **** 	/********************* Real Note Off *************************/	
  97:Core/Src/MIDI_event.c **** 	case 0x80: 
  98:Core/Src/MIDI_event.c **** 		uint8_t noteOff = pack.evnt1;
  99:Core/Src/MIDI_event.c **** 		notes_Active[noteOff] = 0;
 100:Core/Src/MIDI_event.c **** 		notesCount--;
 101:Core/Src/MIDI_event.c **** 		if (notesCount <= 0) // no notes active anymore
 102:Core/Src/MIDI_event.c **** 		{
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccodF70w.s 			page 6


 103:Core/Src/MIDI_event.c **** 			ADSR_keyOff(&adsr_amp); // release envelopes
 104:Core/Src/MIDI_event.c **** 			ADSR_keyOff(&adsr_filt);
 105:Core/Src/MIDI_event.c **** 			ADSR_keyOff(&adsr_index);
 106:Core/Src/MIDI_event.c **** 			notesCount = 0;
 107:Core/Src/MIDI_event.c **** 			HAL_GPIO_WritePin(LD5_GPIO_Port, LD5_Pin, GPIO_PIN_RESET);
 108:Core/Src/MIDI_event.c **** 		}
 109:Core/Src/MIDI_event.c **** 		else // legato 
 110:Core/Src/MIDI_event.c **** 		{
 111:Core/Src/MIDI_event.c **** 			if (noteOff  == currentPitch) // let sound the lowest key pressed
 112:Core/Src/MIDI_event.c **** 			{
 113:Core/Src/MIDI_event.c **** 				uint8_t i;
 114:Core/Src/MIDI_event.c **** 				for (i = 0; i < 128; i++)
 115:Core/Src/MIDI_event.c **** 				{
 116:Core/Src/MIDI_event.c **** 					if (notes_Active[i] == 1) // find the lowest key pressed
 117:Core/Src/MIDI_event.c **** 						break;
 118:Core/Src/MIDI_event.c **** 				}
 119:Core/Src/MIDI_event.c **** 				currentPitch = i; 
 120:Core/Src/MIDI_event.c **** 			}
 121:Core/Src/MIDI_event.c **** 		}
 122:Core/Src/MIDI_event.c **** 		break;
 123:Core/Src/MIDI_event.c **** 	
 124:Core/Src/MIDI_event.c **** 	case 0x90: // Note On
 125:Core/Src/MIDI_event.c **** 		uint8_t noteOn = pack.evnt1;
 126:Core/Src/MIDI_event.c **** 		velocity = pack.evnt2;
 127:Core/Src/MIDI_event.c **** 		/*********************  Note On *************************/	
 128:Core/Src/MIDI_event.c **** 		if (velocity > 0) 
 129:Core/Src/MIDI_event.c **** 		{			
 130:Core/Src/MIDI_event.c **** 			currentPitch = noteOn;
 131:Core/Src/MIDI_event.c **** 			noteOn_velocity = velocity;
 132:Core/Src/MIDI_event.c **** 			ADSR_keyOn(&adsr_amp); // start envelopes
 133:Core/Src/MIDI_event.c **** 			ADSR_keyOn(&adsr_filt);
 134:Core/Src/MIDI_event.c **** 			ADSR_keyOn(&adsr_index);
 135:Core/Src/MIDI_event.c **** 			//SEGGER_RTT_printf(0, "Note ON, pitch %u\r\n", currentPitch); // debug
 136:Core/Src/MIDI_event.c **** 			HAL_GPIO_WritePin(LD5_GPIO_Port, LD5_Pin, GPIO_PIN_SET); // red LED ON when incoming MIDI note o
 137:Core/Src/MIDI_event.c **** 			notesCount++;
 138:Core/Src/MIDI_event.c **** 			notes_Active[noteOn] = 1;
 139:Core/Src/MIDI_event.c **** 		}
 140:Core/Src/MIDI_event.c **** 		/*********************  Note Off *************************/
 141:Core/Src/MIDI_event.c **** 		else //  common implementation in MIDI devices: Note Off = Note On with velocity 0
 142:Core/Src/MIDI_event.c **** 		{			
 143:Core/Src/MIDI_event.c **** 			notes_Active[noteOn] = 0;
 144:Core/Src/MIDI_event.c **** 			notesCount--;
 145:Core/Src/MIDI_event.c **** 			//SEGGER_RTT_printf(0, "Note OFF, pitch %u\r\n", currentPitch);
 146:Core/Src/MIDI_event.c **** 			if (notesCount <= 0)
 147:Core/Src/MIDI_event.c **** 			{
 148:Core/Src/MIDI_event.c **** 				ADSR_keyOff(&adsr_amp);		// release envelopes
 149:Core/Src/MIDI_event.c **** 				ADSR_keyOff(&adsr_filt);
 150:Core/Src/MIDI_event.c **** 				ADSR_keyOff(&adsr_index);
 151:Core/Src/MIDI_event.c **** 				notesCount = 0;
 152:Core/Src/MIDI_event.c **** 				HAL_GPIO_WritePin(LD5_GPIO_Port, LD5_Pin, GPIO_PIN_RESET); // red LED OFF when all MIDI notes o
 153:Core/Src/MIDI_event.c **** 			}
 154:Core/Src/MIDI_event.c **** 			else // legato
 155:Core/Src/MIDI_event.c **** 			{
 156:Core/Src/MIDI_event.c **** 				if (noteOn == currentPitch)
 157:Core/Src/MIDI_event.c **** 				{
 158:Core/Src/MIDI_event.c **** 					uint8_t i;
 159:Core/Src/MIDI_event.c **** 					for (i = 0; i < 128; i++)
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccodF70w.s 			page 7


 160:Core/Src/MIDI_event.c **** 					{
 161:Core/Src/MIDI_event.c **** 						if (notes_Active[i] == 1) // find the lowest key pressed
 162:Core/Src/MIDI_event.c **** 							break;
 163:Core/Src/MIDI_event.c **** 					}
 164:Core/Src/MIDI_event.c **** 					currentPitch = i; 
 165:Core/Src/MIDI_event.c **** 				}
 166:Core/Src/MIDI_event.c **** 			}
 167:Core/Src/MIDI_event.c **** 		}
 168:Core/Src/MIDI_event.c **** 	/********************* Other MIDI Messages *************************/	
 169:Core/Src/MIDI_event.c **** 	case 0xA0: 	// Polyphonic Pressure
 170:Core/Src/MIDI_event.c **** 		break;
 171:Core/Src/MIDI_event.c **** 	case 0xB0:	// Control Change
 172:Core/Src/MIDI_event.c **** 		// uint8_t cc_number = pack.evnt1;
 173:Core/Src/MIDI_event.c **** 		// uint8_t cc_value = pack.evnt2;
 174:Core/Src/MIDI_event.c **** 		// SEGGER_RTT_printf(0, "CC#  %u %u\r\n", cc_number, cc_value); // debug
 175:Core/Src/MIDI_event.c **** 		switch (pack.evnt1) // CC number --> implement CC actions
 176:Core/Src/MIDI_event.c **** 		{
 177:Core/Src/MIDI_event.c **** 		case 20:
 178:Core/Src/MIDI_event.c **** 			break;
 179:Core/Src/MIDI_event.c **** 		case 7:
 180:Core/Src/MIDI_event.c **** 			break; // master volume
 181:Core/Src/MIDI_event.c **** 		}
 182:Core/Src/MIDI_event.c **** 		break;
 183:Core/Src/MIDI_event.c **** 	case 0xC0: // Program Change
 184:Core/Src/MIDI_event.c **** 		break;
 185:Core/Src/MIDI_event.c **** 	case 0xD0: // After Touch
 186:Core/Src/MIDI_event.c **** 		break;
 187:Core/Src/MIDI_event.c **** 	case 0xE0: // Pitch Bend
 188:Core/Src/MIDI_event.c **** 		pitchbend = pack.evnt2 * 128 + pack.evnt1;
 189:Core/Src/MIDI_event.c **** 		break;
 190:Core/Src/MIDI_event.c **** 	}
 191:Core/Src/MIDI_event.c **** }
 178              		.loc 1 191 1 is_stmt 0 view .LVU33
 179 0022 38BD     		pop	{r3, r4, r5, pc}
 180              	.LVL11:
 181              	.L36:
 182              	.LBB5:
  98:Core/Src/MIDI_event.c **** 		notes_Active[noteOff] = 0;
 183              		.loc 1 98 3 is_stmt 1 view .LVU34
  99:Core/Src/MIDI_event.c **** 		notesCount--;
 184              		.loc 1 99 3 view .LVU35
 100:Core/Src/MIDI_event.c **** 		if (notesCount <= 0) // no notes active anymore
 185              		.loc 1 100 13 is_stmt 0 view .LVU36
 186 0024 354D     		ldr	r5, .L41
  99:Core/Src/MIDI_event.c **** 		notesCount--;
 187              		.loc 1 99 25 view .LVU37
 188 0026 364A     		ldr	r2, .L41+4
 100:Core/Src/MIDI_event.c **** 		if (notesCount <= 0) // no notes active anymore
 189              		.loc 1 100 13 view .LVU38
 190 0028 2978     		ldrb	r1, [r5]	@ zero_extendqisi2
 191              	.LVL12:
 100:Core/Src/MIDI_event.c **** 		if (notesCount <= 0) // no notes active anymore
 192              		.loc 1 100 13 view .LVU39
 193 002a 0139     		subs	r1, r1, #1
  99:Core/Src/MIDI_event.c **** 		notesCount--;
 194              		.loc 1 99 25 view .LVU40
 195 002c 0023     		movs	r3, #0
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccodF70w.s 			page 8


 100:Core/Src/MIDI_event.c **** 		if (notesCount <= 0) // no notes active anymore
 196              		.loc 1 100 13 view .LVU41
 197 002e 49B2     		sxtb	r1, r1
 101:Core/Src/MIDI_event.c **** 		{
 198              		.loc 1 101 6 view .LVU42
 199 0030 9942     		cmp	r1, r3
  99:Core/Src/MIDI_event.c **** 		notesCount--;
 200              		.loc 1 99 25 view .LVU43
 201 0032 1355     		strb	r3, [r2, r4]
 100:Core/Src/MIDI_event.c **** 		if (notesCount <= 0) // no notes active anymore
 202              		.loc 1 100 3 is_stmt 1 view .LVU44
 100:Core/Src/MIDI_event.c **** 		if (notesCount <= 0) // no notes active anymore
 203              		.loc 1 100 13 is_stmt 0 view .LVU45
 204 0034 2970     		strb	r1, [r5]
 101:Core/Src/MIDI_event.c **** 		{
 205              		.loc 1 101 3 is_stmt 1 view .LVU46
 101:Core/Src/MIDI_event.c **** 		{
 206              		.loc 1 101 6 is_stmt 0 view .LVU47
 207 0036 4BDD     		ble	.L20
 111:Core/Src/MIDI_event.c **** 			{
 208              		.loc 1 111 4 is_stmt 1 view .LVU48
 111:Core/Src/MIDI_event.c **** 			{
 209              		.loc 1 111 17 is_stmt 0 view .LVU49
 210 0038 324D     		ldr	r5, .L41+8
 111:Core/Src/MIDI_event.c **** 			{
 211              		.loc 1 111 7 view .LVU50
 212 003a 2978     		ldrb	r1, [r5]	@ zero_extendqisi2
 213 003c A142     		cmp	r1, r4
 214 003e F0D1     		bne	.L11
 215 0040 01E0     		b	.L18
 216              	.LVL13:
 217              	.L37:
 218              	.LBB6:
 114:Core/Src/MIDI_event.c **** 				{
 219              		.loc 1 114 19 discriminator 2 view .LVU51
 220 0042 802B     		cmp	r3, #128
 221 0044 56D0     		beq	.L33
 222              	.LVL14:
 223              	.L18:
 114:Core/Src/MIDI_event.c **** 				{
 224              		.loc 1 114 27 is_stmt 1 view .LVU52
 114:Core/Src/MIDI_event.c **** 				{
 225              		.loc 1 114 19 view .LVU53
 116:Core/Src/MIDI_event.c **** 						break;
 226              		.loc 1 116 22 is_stmt 0 view .LVU54
 227 0046 12F8011B 		ldrb	r1, [r2], #1	@ zero_extendqisi2
 116:Core/Src/MIDI_event.c **** 						break;
 228              		.loc 1 116 9 view .LVU55
 229 004a 0129     		cmp	r1, #1
 230 004c D8B2     		uxtb	r0, r3
 231              	.LVL15:
 116:Core/Src/MIDI_event.c **** 						break;
 232              		.loc 1 116 6 is_stmt 1 view .LVU56
 114:Core/Src/MIDI_event.c **** 				{
 233              		.loc 1 114 19 is_stmt 0 view .LVU57
 234 004e 03F10103 		add	r3, r3, #1
 116:Core/Src/MIDI_event.c **** 						break;
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccodF70w.s 			page 9


 235              		.loc 1 116 9 view .LVU58
 236 0052 F6D1     		bne	.L37
 237              	.LBE6:
 238              	.LBB7:
 164:Core/Src/MIDI_event.c **** 				}
 239              		.loc 1 164 6 is_stmt 1 view .LVU59
 164:Core/Src/MIDI_event.c **** 				}
 240              		.loc 1 164 19 is_stmt 0 view .LVU60
 241 0054 2870     		strb	r0, [r5]
 242              	.LVL16:
 243              	.L40:
 164:Core/Src/MIDI_event.c **** 				}
 244              		.loc 1 164 19 view .LVU61
 245              	.LBE7:
 246              	.LBE5:
 247              		.loc 1 191 1 view .LVU62
 248 0056 38BD     		pop	{r3, r4, r5, pc}
 249              	.LVL17:
 250              	.L13:
 251              	.LBB10:
 188:Core/Src/MIDI_event.c **** 		break;
 252              		.loc 1 188 3 is_stmt 1 view .LVU63
 188:Core/Src/MIDI_event.c **** 		break;
 253              		.loc 1 188 13 is_stmt 0 view .LVU64
 254 0058 2B4A     		ldr	r2, .L41+12
 188:Core/Src/MIDI_event.c **** 		break;
 255              		.loc 1 188 32 view .LVU65
 256 005a 04EBC313 		add	r3, r4, r3, lsl #7
 188:Core/Src/MIDI_event.c **** 		break;
 257              		.loc 1 188 13 view .LVU66
 258 005e 1380     		strh	r3, [r2]	@ movhi
 189:Core/Src/MIDI_event.c **** 	}
 259              		.loc 1 189 3 is_stmt 1 view .LVU67
 260              	.LBE10:
 261              		.loc 1 191 1 is_stmt 0 view .LVU68
 262 0060 38BD     		pop	{r3, r4, r5, pc}
 263              	.L12:
 264              	.LBB11:
 125:Core/Src/MIDI_event.c **** 		velocity = pack.evnt2;
 265              		.loc 1 125 3 is_stmt 1 view .LVU69
 266              	.LVL18:
 126:Core/Src/MIDI_event.c **** 		/*********************  Note On *************************/	
 267              		.loc 1 126 3 view .LVU70
 126:Core/Src/MIDI_event.c **** 		/*********************  Note On *************************/	
 268              		.loc 1 126 12 is_stmt 0 view .LVU71
 269 0062 2A48     		ldr	r0, .L41+16
 270              	.LVL19:
 126:Core/Src/MIDI_event.c **** 		/*********************  Note On *************************/	
 271              		.loc 1 126 12 view .LVU72
 272 0064 0170     		strb	r1, [r0]
 128:Core/Src/MIDI_event.c **** 		{			
 273              		.loc 1 128 3 is_stmt 1 view .LVU73
 128:Core/Src/MIDI_event.c **** 		{			
 274              		.loc 1 128 6 is_stmt 0 view .LVU74
 275 0066 C3B9     		cbnz	r3, .L38
 143:Core/Src/MIDI_event.c **** 			notesCount--;
 276              		.loc 1 143 4 is_stmt 1 view .LVU75
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccodF70w.s 			page 10


 144:Core/Src/MIDI_event.c **** 			//SEGGER_RTT_printf(0, "Note OFF, pitch %u\r\n", currentPitch);
 277              		.loc 1 144 14 is_stmt 0 view .LVU76
 278 0068 244D     		ldr	r5, .L41
 143:Core/Src/MIDI_event.c **** 			notesCount--;
 279              		.loc 1 143 25 view .LVU77
 280 006a 254A     		ldr	r2, .L41+4
 281 006c 1155     		strb	r1, [r2, r4]
 144:Core/Src/MIDI_event.c **** 			//SEGGER_RTT_printf(0, "Note OFF, pitch %u\r\n", currentPitch);
 282              		.loc 1 144 4 is_stmt 1 view .LVU78
 144:Core/Src/MIDI_event.c **** 			//SEGGER_RTT_printf(0, "Note OFF, pitch %u\r\n", currentPitch);
 283              		.loc 1 144 14 is_stmt 0 view .LVU79
 284 006e 2978     		ldrb	r1, [r5]	@ zero_extendqisi2
 285              	.LVL20:
 144:Core/Src/MIDI_event.c **** 			//SEGGER_RTT_printf(0, "Note OFF, pitch %u\r\n", currentPitch);
 286              		.loc 1 144 14 view .LVU80
 287 0070 0139     		subs	r1, r1, #1
 288 0072 49B2     		sxtb	r1, r1
 146:Core/Src/MIDI_event.c **** 			{
 289              		.loc 1 146 7 view .LVU81
 290 0074 0029     		cmp	r1, #0
 144:Core/Src/MIDI_event.c **** 			//SEGGER_RTT_printf(0, "Note OFF, pitch %u\r\n", currentPitch);
 291              		.loc 1 144 14 view .LVU82
 292 0076 2970     		strb	r1, [r5]
 146:Core/Src/MIDI_event.c **** 			{
 293              		.loc 1 146 4 is_stmt 1 view .LVU83
 146:Core/Src/MIDI_event.c **** 			{
 294              		.loc 1 146 7 is_stmt 0 view .LVU84
 295 0078 2ADD     		ble	.L20
 156:Core/Src/MIDI_event.c **** 				{
 296              		.loc 1 156 5 is_stmt 1 view .LVU85
 156:Core/Src/MIDI_event.c **** 				{
 297              		.loc 1 156 16 is_stmt 0 view .LVU86
 298 007a 224D     		ldr	r5, .L41+8
 156:Core/Src/MIDI_event.c **** 				{
 299              		.loc 1 156 8 view .LVU87
 300 007c 2978     		ldrb	r1, [r5]	@ zero_extendqisi2
 301 007e A142     		cmp	r1, r4
 302 0080 02D0     		beq	.L23
 303              	.LBE11:
 304              		.loc 1 191 1 view .LVU88
 305 0082 38BD     		pop	{r3, r4, r5, pc}
 306              	.LVL21:
 307              	.L39:
 308              	.LBB12:
 309              	.LBB8:
 159:Core/Src/MIDI_event.c **** 					{
 310              		.loc 1 159 20 discriminator 2 view .LVU89
 311 0084 802B     		cmp	r3, #128
 312 0086 35D0     		beq	.L33
 313              	.LVL22:
 314              	.L23:
 159:Core/Src/MIDI_event.c **** 					{
 315              		.loc 1 159 28 is_stmt 1 view .LVU90
 159:Core/Src/MIDI_event.c **** 					{
 316              		.loc 1 159 20 view .LVU91
 161:Core/Src/MIDI_event.c **** 							break;
 317              		.loc 1 161 23 is_stmt 0 view .LVU92
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccodF70w.s 			page 11


 318 0088 12F8011B 		ldrb	r1, [r2], #1	@ zero_extendqisi2
 161:Core/Src/MIDI_event.c **** 							break;
 319              		.loc 1 161 10 view .LVU93
 320 008c 0129     		cmp	r1, #1
 321 008e D8B2     		uxtb	r0, r3
 322              	.LVL23:
 161:Core/Src/MIDI_event.c **** 							break;
 323              		.loc 1 161 7 is_stmt 1 view .LVU94
 159:Core/Src/MIDI_event.c **** 					{
 324              		.loc 1 159 20 is_stmt 0 view .LVU95
 325 0090 03F10103 		add	r3, r3, #1
 161:Core/Src/MIDI_event.c **** 							break;
 326              		.loc 1 161 10 view .LVU96
 327 0094 F6D1     		bne	.L39
 164:Core/Src/MIDI_event.c **** 				}
 328              		.loc 1 164 6 is_stmt 1 view .LVU97
 164:Core/Src/MIDI_event.c **** 				}
 329              		.loc 1 164 19 is_stmt 0 view .LVU98
 330 0096 2870     		strb	r0, [r5]
 331 0098 DDE7     		b	.L40
 332              	.LVL24:
 333              	.L38:
 164:Core/Src/MIDI_event.c **** 				}
 334              		.loc 1 164 19 view .LVU99
 335              	.LBE8:
 130:Core/Src/MIDI_event.c **** 			noteOn_velocity = velocity;
 336              		.loc 1 130 4 is_stmt 1 view .LVU100
 130:Core/Src/MIDI_event.c **** 			noteOn_velocity = velocity;
 337              		.loc 1 130 17 is_stmt 0 view .LVU101
 338 009a 1A48     		ldr	r0, .L41+8
 131:Core/Src/MIDI_event.c **** 			ADSR_keyOn(&adsr_amp); // start envelopes
 339              		.loc 1 131 20 view .LVU102
 340 009c 1C4B     		ldr	r3, .L41+20
 130:Core/Src/MIDI_event.c **** 			noteOn_velocity = velocity;
 341              		.loc 1 130 17 view .LVU103
 342 009e 0270     		strb	r2, [r0]
 131:Core/Src/MIDI_event.c **** 			ADSR_keyOn(&adsr_amp); // start envelopes
 343              		.loc 1 131 4 is_stmt 1 view .LVU104
 132:Core/Src/MIDI_event.c **** 			ADSR_keyOn(&adsr_filt);
 344              		.loc 1 132 4 is_stmt 0 view .LVU105
 345 00a0 1C48     		ldr	r0, .L41+24
 131:Core/Src/MIDI_event.c **** 			ADSR_keyOn(&adsr_amp); // start envelopes
 346              		.loc 1 131 20 view .LVU106
 347 00a2 1970     		strb	r1, [r3]
 132:Core/Src/MIDI_event.c **** 			ADSR_keyOn(&adsr_filt);
 348              		.loc 1 132 4 is_stmt 1 view .LVU107
 349 00a4 FFF7FEFF 		bl	ADSR_keyOn
 350              	.LVL25:
 133:Core/Src/MIDI_event.c **** 			ADSR_keyOn(&adsr_index);
 351              		.loc 1 133 4 view .LVU108
 352 00a8 1B48     		ldr	r0, .L41+28
 353 00aa FFF7FEFF 		bl	ADSR_keyOn
 354              	.LVL26:
 134:Core/Src/MIDI_event.c **** 			//SEGGER_RTT_printf(0, "Note ON, pitch %u\r\n", currentPitch); // debug
 355              		.loc 1 134 4 view .LVU109
 356 00ae 1B48     		ldr	r0, .L41+32
 357 00b0 FFF7FEFF 		bl	ADSR_keyOn
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccodF70w.s 			page 12


 358              	.LVL27:
 136:Core/Src/MIDI_event.c **** 			notesCount++;
 359              		.loc 1 136 4 view .LVU110
 360 00b4 1A48     		ldr	r0, .L41+36
 361 00b6 0122     		movs	r2, #1
 362 00b8 4FF48041 		mov	r1, #16384
 363 00bc FFF7FEFF 		bl	HAL_GPIO_WritePin
 364              	.LVL28:
 137:Core/Src/MIDI_event.c **** 			notes_Active[noteOn] = 1;
 365              		.loc 1 137 4 view .LVU111
 137:Core/Src/MIDI_event.c **** 			notes_Active[noteOn] = 1;
 366              		.loc 1 137 14 is_stmt 0 view .LVU112
 367 00c0 0E4A     		ldr	r2, .L41
 138:Core/Src/MIDI_event.c **** 		}
 368              		.loc 1 138 25 view .LVU113
 369 00c2 0F49     		ldr	r1, .L41+4
 137:Core/Src/MIDI_event.c **** 			notes_Active[noteOn] = 1;
 370              		.loc 1 137 14 view .LVU114
 371 00c4 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 138:Core/Src/MIDI_event.c **** 		}
 372              		.loc 1 138 25 view .LVU115
 373 00c6 0120     		movs	r0, #1
 137:Core/Src/MIDI_event.c **** 			notes_Active[noteOn] = 1;
 374              		.loc 1 137 14 view .LVU116
 375 00c8 0344     		add	r3, r3, r0
 138:Core/Src/MIDI_event.c **** 		}
 376              		.loc 1 138 25 view .LVU117
 377 00ca 0855     		strb	r0, [r1, r4]
 137:Core/Src/MIDI_event.c **** 			notes_Active[noteOn] = 1;
 378              		.loc 1 137 14 view .LVU118
 379 00cc 1370     		strb	r3, [r2]
 138:Core/Src/MIDI_event.c **** 		}
 380              		.loc 1 138 4 is_stmt 1 view .LVU119
 381              	.LBE12:
 382              		.loc 1 191 1 is_stmt 0 view .LVU120
 383 00ce 38BD     		pop	{r3, r4, r5, pc}
 384              	.L20:
 385              	.LBB13:
 103:Core/Src/MIDI_event.c **** 			ADSR_keyOff(&adsr_filt);
 386              		.loc 1 103 4 is_stmt 1 view .LVU121
 387 00d0 1048     		ldr	r0, .L41+24
 388 00d2 FFF7FEFF 		bl	ADSR_keyOff
 389              	.LVL29:
 104:Core/Src/MIDI_event.c **** 			ADSR_keyOff(&adsr_index);
 390              		.loc 1 104 4 view .LVU122
 391 00d6 1048     		ldr	r0, .L41+28
 392 00d8 FFF7FEFF 		bl	ADSR_keyOff
 393              	.LVL30:
 105:Core/Src/MIDI_event.c **** 			notesCount = 0;
 394              		.loc 1 105 4 view .LVU123
 395 00dc 0F48     		ldr	r0, .L41+32
 396 00de FFF7FEFF 		bl	ADSR_keyOff
 397              	.LVL31:
 106:Core/Src/MIDI_event.c **** 			HAL_GPIO_WritePin(LD5_GPIO_Port, LD5_Pin, GPIO_PIN_RESET);
 398              		.loc 1 106 4 view .LVU124
 106:Core/Src/MIDI_event.c **** 			HAL_GPIO_WritePin(LD5_GPIO_Port, LD5_Pin, GPIO_PIN_RESET);
 399              		.loc 1 106 15 is_stmt 0 view .LVU125
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccodF70w.s 			page 13


 400 00e2 0022     		movs	r2, #0
 401 00e4 2A70     		strb	r2, [r5]
 107:Core/Src/MIDI_event.c **** 		}
 402              		.loc 1 107 4 is_stmt 1 view .LVU126
 403              	.LBE13:
 404              		.loc 1 191 1 is_stmt 0 view .LVU127
 405 00e6 BDE83840 		pop	{r3, r4, r5, lr}
 406              		.cfi_remember_state
 407              		.cfi_restore 14
 408              		.cfi_restore 5
 409              		.cfi_restore 4
 410              		.cfi_restore 3
 411              		.cfi_def_cfa_offset 0
 412              	.LBB14:
 107:Core/Src/MIDI_event.c **** 		}
 413              		.loc 1 107 4 view .LVU128
 414 00ea 0D48     		ldr	r0, .L41+36
 415 00ec 4FF48041 		mov	r1, #16384
 416 00f0 FFF7FEBF 		b	HAL_GPIO_WritePin
 417              	.LVL32:
 418              	.L33:
 419              		.cfi_restore_state
 420              	.LBB9:
 421 00f4 1846     		mov	r0, r3
 164:Core/Src/MIDI_event.c **** 				}
 422              		.loc 1 164 6 is_stmt 1 view .LVU129
 164:Core/Src/MIDI_event.c **** 				}
 423              		.loc 1 164 19 is_stmt 0 view .LVU130
 424 00f6 2870     		strb	r0, [r5]
 425 00f8 ADE7     		b	.L40
 426              	.L42:
 427 00fa 00BF     		.align	2
 428              	.L41:
 429 00fc 00000000 		.word	.LANCHOR1
 430 0100 00000000 		.word	.LANCHOR0
 431 0104 00000000 		.word	.LANCHOR3
 432 0108 00000000 		.word	.LANCHOR2
 433 010c 00000000 		.word	.LANCHOR4
 434 0110 00000000 		.word	.LANCHOR5
 435 0114 00000000 		.word	adsr_amp
 436 0118 00000000 		.word	adsr_filt
 437 011c 00000000 		.word	adsr_index
 438 0120 000C0240 		.word	1073875968
 439              	.LBE9:
 440              	.LBE14:
 441              		.cfi_endproc
 442              	.LFE244:
 444              		.section	.text.USBH_UserProcess_callback,"ax",%progbits
 445              		.align	1
 446              		.p2align 2,,3
 447              		.global	USBH_UserProcess_callback
 448              		.syntax unified
 449              		.thumb
 450              		.thumb_func
 452              	USBH_UserProcess_callback:
 453              	.LVL33:
 454              	.LFB245:
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccodF70w.s 			page 14


 192:Core/Src/MIDI_event.c **** 
 193:Core/Src/MIDI_event.c **** 
 194:Core/Src/MIDI_event.c **** 
 195:Core/Src/MIDI_event.c **** 
 196:Core/Src/MIDI_event.c **** /*=================================================================================================
 197:Core/Src/MIDI_event.c **** /**
 198:Core/Src/MIDI_event.c ****  * @brief  User Process function callback
 199:Core/Src/MIDI_event.c ****  * @param  phost: Host Handle
 200:Core/Src/MIDI_event.c ****  * @param  id: Host Library user message ID
 201:Core/Src/MIDI_event.c ****  * @retval none
 202:Core/Src/MIDI_event.c ****  */
 203:Core/Src/MIDI_event.c **** void USBH_UserProcess_callback(USBH_HandleTypeDef *pHost, uint8_t vId)
 204:Core/Src/MIDI_event.c **** {
 455              		.loc 1 204 1 is_stmt 1 view -0
 456              		.cfi_startproc
 457              		@ args = 0, pretend = 0, frame = 0
 458              		@ frame_needed = 0, uses_anonymous_args = 0
 205:Core/Src/MIDI_event.c **** 	switch (vId)
 459              		.loc 1 205 2 view .LVU132
 460 0000 0429     		cmp	r1, #4
 461 0002 06D0     		beq	.L44
 462 0004 0529     		cmp	r1, #5
 204:Core/Src/MIDI_event.c **** 	switch (vId)
 463              		.loc 1 204 1 is_stmt 0 view .LVU133
 464 0006 10B5     		push	{r4, lr}
 465              		.cfi_def_cfa_offset 8
 466              		.cfi_offset 4, -8
 467              		.cfi_offset 14, -4
 468 0008 0B46     		mov	r3, r1
 469              		.loc 1 205 2 view .LVU134
 470 000a 20D0     		beq	.L45
 471 000c 0229     		cmp	r1, #2
 472 000e 08D0     		beq	.L52
 206:Core/Src/MIDI_event.c **** 	{
 207:Core/Src/MIDI_event.c **** 	case HOST_USER_SELECT_CONFIGURATION:
 208:Core/Src/MIDI_event.c **** 		break;
 209:Core/Src/MIDI_event.c **** 
 210:Core/Src/MIDI_event.c **** 	case HOST_USER_DISCONNECTION:
 211:Core/Src/MIDI_event.c **** 		Appli_state = MIDI_APPLICATION_DISCONNECT;
 212:Core/Src/MIDI_event.c **** 		// 4 - green, 3 - orange, 5 - red, 6 - blue
 213:Core/Src/MIDI_event.c **** 		HAL_GPIO_WritePin(LD4_GPIO_Port, LD4_Pin, GPIO_PIN_RESET);
 214:Core/Src/MIDI_event.c **** 		HAL_GPIO_WritePin(LD6_GPIO_Port, LD6_Pin, GPIO_PIN_RESET);
 215:Core/Src/MIDI_event.c **** 		break;
 216:Core/Src/MIDI_event.c **** 
 217:Core/Src/MIDI_event.c **** 	case HOST_USER_CLASS_ACTIVE:
 218:Core/Src/MIDI_event.c **** 		Appli_state = MIDI_APPLICATION_READY;
 219:Core/Src/MIDI_event.c **** 		HAL_GPIO_WritePin(LD4_GPIO_Port, LD4_Pin, GPIO_PIN_SET);
 220:Core/Src/MIDI_event.c **** 		HAL_GPIO_WritePin(LD6_GPIO_Port, LD6_Pin, GPIO_PIN_RESET);
 221:Core/Src/MIDI_event.c **** 		HAL_GPIO_WritePin(LD5_GPIO_Port, LD5_Pin, GPIO_PIN_RESET);
 222:Core/Src/MIDI_event.c **** 		break;
 223:Core/Src/MIDI_event.c **** 
 224:Core/Src/MIDI_event.c **** 	case HOST_USER_CONNECTION:
 225:Core/Src/MIDI_event.c **** 		Appli_state = MIDI_APPLICATION_START;
 226:Core/Src/MIDI_event.c **** 		HAL_GPIO_WritePin(GPIOD, 0x8000, GPIO_PIN_SET);
 227:Core/Src/MIDI_event.c **** 		break;
 228:Core/Src/MIDI_event.c **** 
 229:Core/Src/MIDI_event.c **** 	default:
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccodF70w.s 			page 15


 230:Core/Src/MIDI_event.c **** 		break;
 231:Core/Src/MIDI_event.c **** 	}
 232:Core/Src/MIDI_event.c **** }
 473              		.loc 1 232 1 view .LVU135
 474 0010 10BD     		pop	{r4, pc}
 475              	.L44:
 476              		.cfi_def_cfa_offset 0
 477              		.cfi_restore 4
 478              		.cfi_restore 14
 225:Core/Src/MIDI_event.c **** 		HAL_GPIO_WritePin(GPIOD, 0x8000, GPIO_PIN_SET);
 479              		.loc 1 225 3 is_stmt 1 view .LVU136
 225:Core/Src/MIDI_event.c **** 		HAL_GPIO_WritePin(GPIOD, 0x8000, GPIO_PIN_SET);
 480              		.loc 1 225 15 is_stmt 0 view .LVU137
 481 0012 174B     		ldr	r3, .L53
 226:Core/Src/MIDI_event.c **** 		break;
 482              		.loc 1 226 3 view .LVU138
 483 0014 1748     		ldr	r0, .L53+4
 484              	.LVL34:
 225:Core/Src/MIDI_event.c **** 		HAL_GPIO_WritePin(GPIOD, 0x8000, GPIO_PIN_SET);
 485              		.loc 1 225 15 view .LVU139
 486 0016 0122     		movs	r2, #1
 226:Core/Src/MIDI_event.c **** 		break;
 487              		.loc 1 226 3 view .LVU140
 488 0018 4FF40041 		mov	r1, #32768
 489              	.LVL35:
 225:Core/Src/MIDI_event.c **** 		HAL_GPIO_WritePin(GPIOD, 0x8000, GPIO_PIN_SET);
 490              		.loc 1 225 15 view .LVU141
 491 001c 1A70     		strb	r2, [r3]
 226:Core/Src/MIDI_event.c **** 		break;
 492              		.loc 1 226 3 is_stmt 1 view .LVU142
 493 001e FFF7FEBF 		b	HAL_GPIO_WritePin
 494              	.LVL36:
 495              	.L52:
 496              		.cfi_def_cfa_offset 8
 497              		.cfi_offset 4, -8
 498              		.cfi_offset 14, -4
 218:Core/Src/MIDI_event.c **** 		HAL_GPIO_WritePin(LD4_GPIO_Port, LD4_Pin, GPIO_PIN_SET);
 499              		.loc 1 218 3 view .LVU143
 218:Core/Src/MIDI_event.c **** 		HAL_GPIO_WritePin(LD4_GPIO_Port, LD4_Pin, GPIO_PIN_SET);
 500              		.loc 1 218 15 is_stmt 0 view .LVU144
 501 0022 134C     		ldr	r4, .L53
 219:Core/Src/MIDI_event.c **** 		HAL_GPIO_WritePin(LD6_GPIO_Port, LD6_Pin, GPIO_PIN_RESET);
 502              		.loc 1 219 3 view .LVU145
 503 0024 1348     		ldr	r0, .L53+4
 504              	.LVL37:
 218:Core/Src/MIDI_event.c **** 		HAL_GPIO_WritePin(LD4_GPIO_Port, LD4_Pin, GPIO_PIN_SET);
 505              		.loc 1 218 15 view .LVU146
 506 0026 2370     		strb	r3, [r4]
 219:Core/Src/MIDI_event.c **** 		HAL_GPIO_WritePin(LD6_GPIO_Port, LD6_Pin, GPIO_PIN_RESET);
 507              		.loc 1 219 3 is_stmt 1 view .LVU147
 508 0028 0122     		movs	r2, #1
 509 002a 4FF48051 		mov	r1, #4096
 510              	.LVL38:
 219:Core/Src/MIDI_event.c **** 		HAL_GPIO_WritePin(LD6_GPIO_Port, LD6_Pin, GPIO_PIN_RESET);
 511              		.loc 1 219 3 is_stmt 0 view .LVU148
 512 002e FFF7FEFF 		bl	HAL_GPIO_WritePin
 513              	.LVL39:
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccodF70w.s 			page 16


 220:Core/Src/MIDI_event.c **** 		HAL_GPIO_WritePin(LD5_GPIO_Port, LD5_Pin, GPIO_PIN_RESET);
 514              		.loc 1 220 3 is_stmt 1 view .LVU149
 515 0032 1048     		ldr	r0, .L53+4
 516 0034 0022     		movs	r2, #0
 517 0036 4FF40041 		mov	r1, #32768
 518 003a FFF7FEFF 		bl	HAL_GPIO_WritePin
 519              	.LVL40:
 221:Core/Src/MIDI_event.c **** 		break;
 520              		.loc 1 221 3 view .LVU150
 521              		.loc 1 232 1 is_stmt 0 view .LVU151
 522 003e BDE81040 		pop	{r4, lr}
 523              		.cfi_remember_state
 524              		.cfi_restore 14
 525              		.cfi_restore 4
 526              		.cfi_def_cfa_offset 0
 221:Core/Src/MIDI_event.c **** 		break;
 527              		.loc 1 221 3 view .LVU152
 528 0042 0C48     		ldr	r0, .L53+4
 529 0044 0022     		movs	r2, #0
 530 0046 4FF48041 		mov	r1, #16384
 531 004a FFF7FEBF 		b	HAL_GPIO_WritePin
 532              	.LVL41:
 533              	.L45:
 534              		.cfi_restore_state
 211:Core/Src/MIDI_event.c **** 		// 4 - green, 3 - orange, 5 - red, 6 - blue
 535              		.loc 1 211 3 is_stmt 1 view .LVU153
 211:Core/Src/MIDI_event.c **** 		// 4 - green, 3 - orange, 5 - red, 6 - blue
 536              		.loc 1 211 15 is_stmt 0 view .LVU154
 537 004e 084B     		ldr	r3, .L53
 213:Core/Src/MIDI_event.c **** 		HAL_GPIO_WritePin(LD6_GPIO_Port, LD6_Pin, GPIO_PIN_RESET);
 538              		.loc 1 213 3 view .LVU155
 539 0050 0848     		ldr	r0, .L53+4
 540              	.LVL42:
 213:Core/Src/MIDI_event.c **** 		HAL_GPIO_WritePin(LD6_GPIO_Port, LD6_Pin, GPIO_PIN_RESET);
 541              		.loc 1 213 3 view .LVU156
 542 0052 0022     		movs	r2, #0
 543 0054 4FF48051 		mov	r1, #4096
 544              	.LVL43:
 211:Core/Src/MIDI_event.c **** 		// 4 - green, 3 - orange, 5 - red, 6 - blue
 545              		.loc 1 211 15 view .LVU157
 546 0058 0424     		movs	r4, #4
 547 005a 1C70     		strb	r4, [r3]
 213:Core/Src/MIDI_event.c **** 		HAL_GPIO_WritePin(LD6_GPIO_Port, LD6_Pin, GPIO_PIN_RESET);
 548              		.loc 1 213 3 is_stmt 1 view .LVU158
 549 005c FFF7FEFF 		bl	HAL_GPIO_WritePin
 550              	.LVL44:
 214:Core/Src/MIDI_event.c **** 		break;
 551              		.loc 1 214 3 view .LVU159
 552              		.loc 1 232 1 is_stmt 0 view .LVU160
 553 0060 BDE81040 		pop	{r4, lr}
 554              		.cfi_restore 14
 555              		.cfi_restore 4
 556              		.cfi_def_cfa_offset 0
 214:Core/Src/MIDI_event.c **** 		break;
 557              		.loc 1 214 3 view .LVU161
 558 0064 0348     		ldr	r0, .L53+4
 559 0066 0022     		movs	r2, #0
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccodF70w.s 			page 17


 560 0068 4FF40041 		mov	r1, #32768
 561 006c FFF7FEBF 		b	HAL_GPIO_WritePin
 562              	.LVL45:
 563              	.L54:
 564              		.align	2
 565              	.L53:
 566 0070 00000000 		.word	.LANCHOR6
 567 0074 000C0240 		.word	1073875968
 568              		.cfi_endproc
 569              	.LFE245:
 571              		.section	.text.HAL_GPIO_EXTI_Callback,"ax",%progbits
 572              		.align	1
 573              		.p2align 2,,3
 574              		.global	HAL_GPIO_EXTI_Callback
 575              		.syntax unified
 576              		.thumb
 577              		.thumb_func
 579              	HAL_GPIO_EXTI_Callback:
 580              	.LVL46:
 581              	.LFB246:
 233:Core/Src/MIDI_event.c **** 
 234:Core/Src/MIDI_event.c **** 
 235:Core/Src/MIDI_event.c **** /**
 236:Core/Src/MIDI_event.c ****  * @brief User button EXTI Line0 External Interrupt ISR Handler CallBack --> MIDI panic --> all not
 237:Core/Src/MIDI_event.c ****  * 
 238:Core/Src/MIDI_event.c ****  * @param GPIO_Pin 
 239:Core/Src/MIDI_event.c ****  */
 240:Core/Src/MIDI_event.c **** void HAL_GPIO_EXTI_Callback(uint16_t GPIO_Pin)
 241:Core/Src/MIDI_event.c **** {
 582              		.loc 1 241 1 is_stmt 1 view -0
 583              		.cfi_startproc
 584              		@ args = 0, pretend = 0, frame = 0
 585              		@ frame_needed = 0, uses_anonymous_args = 0
 242:Core/Src/MIDI_event.c **** 	allNotesOff();
 586              		.loc 1 242 2 view .LVU163
 587              	.LBB18:
 588              	.LBI18:
  41:Core/Src/MIDI_event.c **** {
 589              		.loc 1 41 6 view .LVU164
 590              	.LBB19:
 591              	.LBB20:
  43:Core/Src/MIDI_event.c **** 	{
 592              		.loc 1 43 24 view .LVU165
 593              	.LBE20:
 594              	.LBE19:
 595              	.LBE18:
 241:Core/Src/MIDI_event.c **** 	allNotesOff();
 596              		.loc 1 241 1 is_stmt 0 view .LVU166
 597 0000 2DE9F843 		push	{r3, r4, r5, r6, r7, r8, r9, lr}
 598              		.cfi_def_cfa_offset 32
 599              		.cfi_offset 3, -32
 600              		.cfi_offset 4, -28
 601              		.cfi_offset 5, -24
 602              		.cfi_offset 6, -20
 603              		.cfi_offset 7, -16
 604              		.cfi_offset 8, -12
 605              		.cfi_offset 9, -8
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccodF70w.s 			page 18


 606              		.cfi_offset 14, -4
 607 0004 0F4C     		ldr	r4, .L59
 608              	.LBB24:
 609              	.LBB22:
 610              	.LBB21:
  46:Core/Src/MIDI_event.c **** 		ADSR_keyOff(&adsr_filt);
 611              		.loc 1 46 3 view .LVU167
 612 0006 DFF84C90 		ldr	r9, .L59+16
  47:Core/Src/MIDI_event.c **** 		ADSR_keyOff(&adsr_index);
 613              		.loc 1 47 3 view .LVU168
 614 000a DFF84C80 		ldr	r8, .L59+20
  48:Core/Src/MIDI_event.c **** 	}
 615              		.loc 1 48 3 view .LVU169
 616 000e 0E4F     		ldr	r7, .L59+4
 617 0010 04F18006 		add	r6, r4, #128
 618              	.LVL47:
 619              	.L56:
  45:Core/Src/MIDI_event.c **** 		ADSR_keyOff(&adsr_amp); // release envelopes
 620              		.loc 1 45 3 is_stmt 1 view .LVU170
  46:Core/Src/MIDI_event.c **** 		ADSR_keyOff(&adsr_filt);
 621              		.loc 1 46 3 is_stmt 0 view .LVU171
 622 0014 4846     		mov	r0, r9
  45:Core/Src/MIDI_event.c **** 		ADSR_keyOff(&adsr_amp); // release envelopes
 623              		.loc 1 45 19 view .LVU172
 624 0016 0025     		movs	r5, #0
 625 0018 04F8015F 		strb	r5, [r4, #1]!
 626              	.LVL48:
  46:Core/Src/MIDI_event.c **** 		ADSR_keyOff(&adsr_filt);
 627              		.loc 1 46 3 is_stmt 1 view .LVU173
 628 001c FFF7FEFF 		bl	ADSR_keyOff
 629              	.LVL49:
  47:Core/Src/MIDI_event.c **** 		ADSR_keyOff(&adsr_index);
 630              		.loc 1 47 3 view .LVU174
 631 0020 4046     		mov	r0, r8
 632 0022 FFF7FEFF 		bl	ADSR_keyOff
 633              	.LVL50:
  48:Core/Src/MIDI_event.c **** 	}
 634              		.loc 1 48 3 view .LVU175
 635 0026 3846     		mov	r0, r7
 636 0028 FFF7FEFF 		bl	ADSR_keyOff
 637              	.LVL51:
  43:Core/Src/MIDI_event.c **** 	{
 638              		.loc 1 43 32 view .LVU176
  43:Core/Src/MIDI_event.c **** 	{
 639              		.loc 1 43 24 view .LVU177
 640 002c B442     		cmp	r4, r6
 641 002e F1D1     		bne	.L56
 642              	.LBE21:
  50:Core/Src/MIDI_event.c **** }
 643              		.loc 1 50 2 view .LVU178
  50:Core/Src/MIDI_event.c **** }
 644              		.loc 1 50 13 is_stmt 0 view .LVU179
 645 0030 064B     		ldr	r3, .L59+8
 646              	.LBE22:
 647              	.LBE24:
 243:Core/Src/MIDI_event.c **** 	HAL_GPIO_WritePin(LD5_GPIO_Port, LD5_Pin, GPIO_PIN_RESET); // red LED OFF when all MIDI notes off
 648              		.loc 1 243 2 view .LVU180
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccodF70w.s 			page 19


 649 0032 0748     		ldr	r0, .L59+12
 650              	.LBB25:
 651              	.LBB23:
  50:Core/Src/MIDI_event.c **** }
 652              		.loc 1 50 13 view .LVU181
 653 0034 1D70     		strb	r5, [r3]
 654              	.LVL52:
  50:Core/Src/MIDI_event.c **** }
 655              		.loc 1 50 13 view .LVU182
 656              	.LBE23:
 657              	.LBE25:
 658              		.loc 1 243 2 is_stmt 1 view .LVU183
 659 0036 2A46     		mov	r2, r5
 660 0038 4FF48041 		mov	r1, #16384
 244:Core/Src/MIDI_event.c **** }
 661              		.loc 1 244 1 is_stmt 0 view .LVU184
 662 003c BDE8F843 		pop	{r3, r4, r5, r6, r7, r8, r9, lr}
 663              		.cfi_restore 14
 664              		.cfi_restore 9
 665              		.cfi_restore 8
 666              		.cfi_restore 7
 667              		.cfi_restore 6
 668              		.cfi_restore 5
 669              		.cfi_restore 4
 670              		.cfi_restore 3
 671              		.cfi_def_cfa_offset 0
 243:Core/Src/MIDI_event.c **** 	HAL_GPIO_WritePin(LD5_GPIO_Port, LD5_Pin, GPIO_PIN_RESET); // red LED OFF when all MIDI notes off
 672              		.loc 1 243 2 view .LVU185
 673 0040 FFF7FEBF 		b	HAL_GPIO_WritePin
 674              	.LVL53:
 675              	.L60:
 676              		.align	2
 677              	.L59:
 678 0044 FFFFFFFF 		.word	.LANCHOR0-1
 679 0048 00000000 		.word	adsr_index
 680 004c 00000000 		.word	.LANCHOR1
 681 0050 000C0240 		.word	1073875968
 682 0054 00000000 		.word	adsr_amp
 683 0058 00000000 		.word	adsr_filt
 684              		.cfi_endproc
 685              	.LFE246:
 687              		.global	notesCount
 688              		.global	notes_Active
 689              		.global	noteOn_velocity
 690              		.global	velocity
 691              		.global	currentPitch
 692              		.global	pitchbend
 693              		.global	Appli_state
 694              		.global	hUSBHost
 695              		.section	.bss.Appli_state,"aw",%nobits
 696              		.set	.LANCHOR6,. + 0
 699              	Appli_state:
 700 0000 00       		.space	1
 701              		.section	.bss.currentPitch,"aw",%nobits
 702              		.set	.LANCHOR3,. + 0
 705              	currentPitch:
 706 0000 00       		.space	1
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccodF70w.s 			page 20


 707              		.section	.bss.hUSBHost,"aw",%nobits
 708              		.align	2
 711              	hUSBHost:
 712 0000 00000000 		.space	1564
 712      00000000 
 712      00000000 
 712      00000000 
 712      00000000 
 713              		.section	.bss.noteOn_velocity,"aw",%nobits
 714              		.set	.LANCHOR5,. + 0
 717              	noteOn_velocity:
 718 0000 00       		.space	1
 719              		.section	.bss.notesCount,"aw",%nobits
 720              		.set	.LANCHOR1,. + 0
 723              	notesCount:
 724 0000 00       		.space	1
 725              		.section	.bss.notes_Active,"aw",%nobits
 726              		.align	2
 727              		.set	.LANCHOR0,. + 0
 730              	notes_Active:
 731 0000 00000000 		.space	128
 731      00000000 
 731      00000000 
 731      00000000 
 731      00000000 
 732              		.section	.bss.pitchbend,"aw",%nobits
 733              		.align	1
 734              		.set	.LANCHOR2,. + 0
 737              	pitchbend:
 738 0000 0000     		.space	2
 739              		.section	.bss.velocity,"aw",%nobits
 740              		.set	.LANCHOR4,. + 0
 743              	velocity:
 744 0000 00       		.space	1
 745              		.text
 746              	.Letext0:
 747              		.file 2 "/Users/johannes/Library/Application Support/Code/User/globalStorage/bmd.stm32-for-vscode/
 748              		.file 3 "/Users/johannes/Library/Application Support/Code/User/globalStorage/bmd.stm32-for-vscode/
 749              		.file 4 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/stm32f407xx.h"
 750              		.file 5 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_gpio.h"
 751              		.file 6 "Middlewares/ST/STM32_USB_Host_Library/Core/Inc/usbh_def.h"
 752              		.file 7 "Core/Inc/usbh_MIDI.h"
 753              		.file 8 "Core/Inc/MIDI_application.h"
 754              		.file 9 "Core/Inc/ADSR_envelope.h"
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccodF70w.s 			page 21


DEFINED SYMBOLS
                            *ABS*:0000000000000000 MIDI_event.c
/var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccodF70w.s:20     .text.allNotesOff:0000000000000000 $t
/var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccodF70w.s:27     .text.allNotesOff:0000000000000000 allNotesOff
/var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccodF70w.s:96     .text.allNotesOff:0000000000000038 $d
/var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccodF70w.s:105    .text.MIDI_eventInit:0000000000000000 $t
/var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccodF70w.s:112    .text.MIDI_eventInit:0000000000000000 MIDI_eventInit
/var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccodF70w.s:129    .text.MIDI_eventInit:000000000000000c $d
/var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccodF70w.s:134    .text.ProcessMIDI:0000000000000000 $t
/var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccodF70w.s:141    .text.ProcessMIDI:0000000000000000 ProcessMIDI
/var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccodF70w.s:429    .text.ProcessMIDI:00000000000000fc $d
/var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccodF70w.s:445    .text.USBH_UserProcess_callback:0000000000000000 $t
/var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccodF70w.s:452    .text.USBH_UserProcess_callback:0000000000000000 USBH_UserProcess_callback
/var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccodF70w.s:566    .text.USBH_UserProcess_callback:0000000000000070 $d
/var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccodF70w.s:572    .text.HAL_GPIO_EXTI_Callback:0000000000000000 $t
/var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccodF70w.s:579    .text.HAL_GPIO_EXTI_Callback:0000000000000000 HAL_GPIO_EXTI_Callback
/var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccodF70w.s:678    .text.HAL_GPIO_EXTI_Callback:0000000000000044 $d
/var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccodF70w.s:723    .bss.notesCount:0000000000000000 notesCount
/var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccodF70w.s:730    .bss.notes_Active:0000000000000000 notes_Active
/var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccodF70w.s:717    .bss.noteOn_velocity:0000000000000000 noteOn_velocity
/var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccodF70w.s:743    .bss.velocity:0000000000000000 velocity
/var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccodF70w.s:705    .bss.currentPitch:0000000000000000 currentPitch
/var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccodF70w.s:737    .bss.pitchbend:0000000000000000 pitchbend
/var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccodF70w.s:699    .bss.Appli_state:0000000000000000 Appli_state
/var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccodF70w.s:711    .bss.hUSBHost:0000000000000000 hUSBHost
/var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccodF70w.s:700    .bss.Appli_state:0000000000000000 $d
/var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccodF70w.s:706    .bss.currentPitch:0000000000000000 $d
/var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccodF70w.s:708    .bss.hUSBHost:0000000000000000 $d
/var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccodF70w.s:718    .bss.noteOn_velocity:0000000000000000 $d
/var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccodF70w.s:724    .bss.notesCount:0000000000000000 $d
/var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccodF70w.s:726    .bss.notes_Active:0000000000000000 $d
/var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccodF70w.s:733    .bss.pitchbend:0000000000000000 $d
/var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccodF70w.s:744    .bss.velocity:0000000000000000 $d

UNDEFINED SYMBOLS
ADSR_keyOff
adsr_index
adsr_amp
adsr_filt
ADSR_keyOn
HAL_GPIO_WritePin
