ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//cc98IllA.s 			page 1


   1              		.cpu cortex-m4
   2              		.arch armv7e-m
   3              		.fpu fpv4-sp-d16
   4              		.eabi_attribute 27, 1
   5              		.eabi_attribute 28, 1
   6              		.eabi_attribute 20, 1
   7              		.eabi_attribute 21, 1
   8              		.eabi_attribute 23, 3
   9              		.eabi_attribute 24, 1
  10              		.eabi_attribute 25, 1
  11              		.eabi_attribute 26, 1
  12              		.eabi_attribute 30, 2
  13              		.eabi_attribute 34, 1
  14              		.eabi_attribute 18, 4
  15              		.file	"MIDI_event.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text.allNotesOff,"ax",%progbits
  20              		.align	1
  21              		.p2align 2,,3
  22              		.global	allNotesOff
  23              		.syntax unified
  24              		.thumb
  25              		.thumb_func
  27              	allNotesOff:
  28              	.LFB137:
  29              		.file 1 "Core/Src/MIDI_event.c"
   1:Core/Src/MIDI_event.c **** /**
   2:Core/Src/MIDI_event.c ****  * @file MIDI_event.c
   3:Core/Src/MIDI_event.c ****  * @author modified by johannes regnier
   4:Core/Src/MIDI_event.c ****  * @brief MIDI events processing
   5:Core/Src/MIDI_event.c ****  * @note Makes use of the great resources from Tom Erbe
   6:Core/Src/MIDI_event.c ****  * @note http://synthnotes.ucsd.edu/wp4/index.php/2019/09/24/adding-the-usb-otg-midi-driver-polypho
   7:Core/Src/MIDI_event.c ****  * @note and of the awesome Xavier Halgand's Dekrispator
   8:Core/Src/MIDI_event.c ****  * @version 0.1
   9:Core/Src/MIDI_event.c ****  * @date 2023-12-30
  10:Core/Src/MIDI_event.c ****  *
  11:Core/Src/MIDI_event.c ****  * @copyright Copyright (c) 2023
  12:Core/Src/MIDI_event.c ****  *
  13:Core/Src/MIDI_event.c ****  */
  14:Core/Src/MIDI_event.c **** 
  15:Core/Src/MIDI_event.c **** #include <stdint.h>
  16:Core/Src/MIDI_event.c **** 
  17:Core/Src/MIDI_event.c **** #include "MIDI_event.h"
  18:Core/Src/MIDI_event.c **** #include "gpio.h"
  19:Core/Src/MIDI_event.c **** #include "SEGGER_RTT.h"
  20:Core/Src/MIDI_event.c **** #include "CONSTS.h"
  21:Core/Src/MIDI_event.c **** #include "helper_functions.h"
  22:Core/Src/MIDI_event.c **** #include "ADSR_envelope.h"
  23:Core/Src/MIDI_event.c **** 
  24:Core/Src/MIDI_event.c **** USBH_HandleTypeDef hUSBHost; /* USB Host handle */
  25:Core/Src/MIDI_event.c **** MIDI_ApplicationTypeDef Appli_state = MIDI_APPLICATION_IDLE;
  26:Core/Src/MIDI_event.c **** 
  27:Core/Src/MIDI_event.c **** uint16_t pitchbend ;
  28:Core/Src/MIDI_event.c **** uint8_t currentPitch ;
  29:Core/Src/MIDI_event.c **** uint8_t velocity ;
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//cc98IllA.s 			page 2


  30:Core/Src/MIDI_event.c **** uint8_t notes_Active[128] = {0}; // at most, 128 MIDI notes are active
  31:Core/Src/MIDI_event.c **** int8_t notesCount = 0 ;			 // number of notes active
  32:Core/Src/MIDI_event.c **** extern ADSR_t adsr_amp;
  33:Core/Src/MIDI_event.c **** extern ADSR_t adsr_filt;
  34:Core/Src/MIDI_event.c **** 
  35:Core/Src/MIDI_event.c **** void allNotesOff(void)
  36:Core/Src/MIDI_event.c **** {
  30              		.loc 1 36 1 view -0
  31              		.cfi_startproc
  32              		@ args = 0, pretend = 0, frame = 0
  33              		@ frame_needed = 0, uses_anonymous_args = 0
  37:Core/Src/MIDI_event.c **** 	for (uint8_t i = 0; i < 128; i++)
  34              		.loc 1 37 2 view .LVU1
  35              	.LBB2:
  36              		.loc 1 37 7 view .LVU2
  37              	.LVL0:
  38              		.loc 1 37 24 view .LVU3
  39              	.LBE2:
  36:Core/Src/MIDI_event.c **** 	for (uint8_t i = 0; i < 128; i++)
  40              		.loc 1 36 1 is_stmt 0 view .LVU4
  41 0000 08B5     		push	{r3, lr}
  42              		.cfi_def_cfa_offset 8
  43              		.cfi_offset 3, -8
  44              		.cfi_offset 14, -4
  45              	.LBB3:
  38:Core/Src/MIDI_event.c **** 		notes_Active[i] = 0;
  46              		.loc 1 38 19 view .LVU5
  47 0002 8022     		movs	r2, #128
  48 0004 0348     		ldr	r0, .L4
  49 0006 0021     		movs	r1, #0
  50 0008 FFF7FEFF 		bl	memset
  51              	.LVL1:
  52              		.loc 1 38 19 view .LVU6
  53              	.LBE3:
  39:Core/Src/MIDI_event.c **** 	notesCount = 0;
  54              		.loc 1 39 2 is_stmt 1 view .LVU7
  55              		.loc 1 39 13 is_stmt 0 view .LVU8
  56 000c 024B     		ldr	r3, .L4+4
  57 000e 0022     		movs	r2, #0
  58 0010 1A70     		strb	r2, [r3]
  40:Core/Src/MIDI_event.c **** }
  59              		.loc 1 40 1 view .LVU9
  60 0012 08BD     		pop	{r3, pc}
  61              	.L5:
  62              		.align	2
  63              	.L4:
  64 0014 00000000 		.word	.LANCHOR0
  65 0018 00000000 		.word	.LANCHOR1
  66              		.cfi_endproc
  67              	.LFE137:
  69              		.section	.text.MIDI_eventInit,"ax",%progbits
  70              		.align	1
  71              		.p2align 2,,3
  72              		.global	MIDI_eventInit
  73              		.syntax unified
  74              		.thumb
  75              		.thumb_func
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//cc98IllA.s 			page 3


  77              	MIDI_eventInit:
  78              	.LFB138:
  41:Core/Src/MIDI_event.c **** 
  42:Core/Src/MIDI_event.c **** 
  43:Core/Src/MIDI_event.c **** void MIDI_eventInit()
  44:Core/Src/MIDI_event.c **** {
  79              		.loc 1 44 1 is_stmt 1 view -0
  80              		.cfi_startproc
  81              		@ args = 0, pretend = 0, frame = 0
  82              		@ frame_needed = 0, uses_anonymous_args = 0
  83              		@ link register save eliminated.
  45:Core/Src/MIDI_event.c **** 	pitchbend = 8192;
  84              		.loc 1 45 2 view .LVU11
  85              		.loc 1 45 12 is_stmt 0 view .LVU12
  86 0000 024B     		ldr	r3, .L7
  87 0002 4FF40052 		mov	r2, #8192
  88 0006 1A80     		strh	r2, [r3]	@ movhi
  46:Core/Src/MIDI_event.c **** }
  89              		.loc 1 46 1 view .LVU13
  90 0008 7047     		bx	lr
  91              	.L8:
  92 000a 00BF     		.align	2
  93              	.L7:
  94 000c 00000000 		.word	.LANCHOR2
  95              		.cfi_endproc
  96              	.LFE138:
  98              		.section	.text.ProcessMIDI,"ax",%progbits
  99              		.align	1
 100              		.p2align 2,,3
 101              		.global	ProcessMIDI
 102              		.syntax unified
 103              		.thumb
 104              		.thumb_func
 106              	ProcessMIDI:
 107              	.LVL2:
 108              	.LFB139:
  47:Core/Src/MIDI_event.c **** 
  48:Core/Src/MIDI_event.c **** /**
  49:Core/Src/MIDI_event.c ****  * @brief Process incoming MIDI events - Monophonic, with legato
  50:Core/Src/MIDI_event.c ****  * @note Code adapted from Xavier Halgand and from Tom Erbe's version
  51:Core/Src/MIDI_event.c ****  *
  52:Core/Src/MIDI_event.c ****  * @param pack
  53:Core/Src/MIDI_event.c ****  */
  54:Core/Src/MIDI_event.c **** void ProcessMIDI(midi_package_t pack)
  55:Core/Src/MIDI_event.c **** {
 109              		.loc 1 55 1 is_stmt 1 view -0
 110              		.cfi_startproc
 111              		@ args = 0, pretend = 0, frame = 0
 112              		@ frame_needed = 0, uses_anonymous_args = 0
 113              		.loc 1 55 1 is_stmt 0 view .LVU15
 114 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 115              		.cfi_def_cfa_offset 24
 116              		.cfi_offset 3, -24
 117              		.cfi_offset 4, -20
 118              		.cfi_offset 5, -16
 119              		.cfi_offset 6, -12
 120              		.cfi_offset 7, -8
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//cc98IllA.s 			page 4


 121              		.cfi_offset 14, -4
 122 0002 C0F30743 		ubfx	r3, r0, #16, #8
 123 0006 C0F30766 		ubfx	r6, r0, #24, #8
 124 000a 040E     		lsrs	r4, r0, #24
  56:Core/Src/MIDI_event.c **** 	uint8_t status;
  57:Core/Src/MIDI_event.c **** 
  58:Core/Src/MIDI_event.c **** 	status = pack.evnt0 & 0xF0;
 125              		.loc 1 58 9 view .LVU16
 126 000c C0F30720 		ubfx	r0, r0, #8, #8
 127              	.LVL3:
 128              		.loc 1 58 9 view .LVU17
 129 0010 00F0F000 		and	r0, r0, #240
  59:Core/Src/MIDI_event.c **** 	if (status == 0xF0) // not using any of these
  60:Core/Src/MIDI_event.c **** 	{
  61:Core/Src/MIDI_event.c **** 		switch (pack.evnt0)
  62:Core/Src/MIDI_event.c **** 		{
  63:Core/Src/MIDI_event.c **** 		case 0xF0: // Start of System Exclusive
  64:Core/Src/MIDI_event.c **** 		case 0xF1: // MIDI Time Code Quarter Fram
  65:Core/Src/MIDI_event.c **** 		case 0xF2: // Song Position Pointer
  66:Core/Src/MIDI_event.c **** 		case 0xF3: // Song Select
  67:Core/Src/MIDI_event.c **** 		case 0xF4: // Undefined
  68:Core/Src/MIDI_event.c **** 		case 0xF5: // Undefined
  69:Core/Src/MIDI_event.c **** 		case 0xF6: // Tune Request
  70:Core/Src/MIDI_event.c **** 		case 0xF7: // End of System Exclusive
  71:Core/Src/MIDI_event.c **** 		case 0xF8: // Timing Clock (24 times a quarter note)
  72:Core/Src/MIDI_event.c **** 		case 0xF9: // Undefined
  73:Core/Src/MIDI_event.c **** 		case 0xFA: // Start Sequence
  74:Core/Src/MIDI_event.c **** 		case 0xFB: // Continue Sequence
  75:Core/Src/MIDI_event.c **** 		case 0xFC: // Pause Sequence
  76:Core/Src/MIDI_event.c **** 		case 0xFD: // Undefined
  77:Core/Src/MIDI_event.c **** 		case 0xFE: // Active Sensing
  78:Core/Src/MIDI_event.c **** 		case 0xFF: // Reset all synthesizers to power up
  79:Core/Src/MIDI_event.c **** 			break;
  80:Core/Src/MIDI_event.c **** 		}
  81:Core/Src/MIDI_event.c **** 	}
  82:Core/Src/MIDI_event.c **** 
  83:Core/Src/MIDI_event.c **** 	switch (status)
 130              		.loc 1 83 2 view .LVU18
 131 0014 9028     		cmp	r0, #144
 132 0016 1D46     		mov	r5, r3
 133              	.LVL4:
  56:Core/Src/MIDI_event.c **** 	uint8_t status;
 134              		.loc 1 56 2 is_stmt 1 view .LVU19
  58:Core/Src/MIDI_event.c **** 	if (status == 0xF0) // not using any of these
 135              		.loc 1 58 2 view .LVU20
  59:Core/Src/MIDI_event.c **** 	if (status == 0xF0) // not using any of these
 136              		.loc 1 59 2 view .LVU21
 137              		.loc 1 83 2 view .LVU22
 138 0018 25D0     		beq	.L10
 139 001a E028     		cmp	r0, #224
 140 001c 1ED0     		beq	.L11
 141 001e 8028     		cmp	r0, #128
 142 0020 00D0     		beq	.L32
 143              	.LVL5:
 144              	.L9:
  84:Core/Src/MIDI_event.c **** 	{
  85:Core/Src/MIDI_event.c **** 	/********************* Real Note Off *************************/	
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//cc98IllA.s 			page 5


  86:Core/Src/MIDI_event.c **** 	case 0x80: 
  87:Core/Src/MIDI_event.c **** 		uint8_t noteOff = pack.evnt1;
  88:Core/Src/MIDI_event.c **** 		notes_Active[noteOff] = 0;
  89:Core/Src/MIDI_event.c **** 		notesCount--;
  90:Core/Src/MIDI_event.c **** 		if (notesCount <= 0) // no more keys pressed
  91:Core/Src/MIDI_event.c **** 		{
  92:Core/Src/MIDI_event.c **** 			ADSR_keyOff(&adsr_amp);
  93:Core/Src/MIDI_event.c **** 			ADSR_keyOff(&adsr_filt);
  94:Core/Src/MIDI_event.c **** 			notesCount = 0;
  95:Core/Src/MIDI_event.c **** 		}
  96:Core/Src/MIDI_event.c **** 		else // legato 
  97:Core/Src/MIDI_event.c **** 		{
  98:Core/Src/MIDI_event.c **** 			if (noteOff  == currentPitch) // let sound the lowest key pressed
  99:Core/Src/MIDI_event.c **** 			{
 100:Core/Src/MIDI_event.c **** 				uint8_t i;
 101:Core/Src/MIDI_event.c **** 				for (i = 0; i < 128; i++)
 102:Core/Src/MIDI_event.c **** 				{
 103:Core/Src/MIDI_event.c **** 					if (notes_Active[i] == 1) // find the lowest key pressed
 104:Core/Src/MIDI_event.c **** 						break;
 105:Core/Src/MIDI_event.c **** 				}
 106:Core/Src/MIDI_event.c **** 				currentPitch = i; // conversion for mtof[]
 107:Core/Src/MIDI_event.c **** 			}
 108:Core/Src/MIDI_event.c **** 		}
 109:Core/Src/MIDI_event.c **** 		break;
 110:Core/Src/MIDI_event.c **** 	/*********************  Note On *************************/	
 111:Core/Src/MIDI_event.c **** 	case 0x90: // Note On
 112:Core/Src/MIDI_event.c **** 		uint8_t noteOn = pack.evnt1;
 113:Core/Src/MIDI_event.c **** 		velocity = pack.evnt2;
 114:Core/Src/MIDI_event.c **** 		if (velocity > 0) // True note on !
 115:Core/Src/MIDI_event.c **** 		{
 116:Core/Src/MIDI_event.c **** 		
 117:Core/Src/MIDI_event.c **** 			
 118:Core/Src/MIDI_event.c **** 			currentPitch = noteOn; // conversion for mtof[]
 119:Core/Src/MIDI_event.c **** 			
 120:Core/Src/MIDI_event.c **** 			// SEGGER_RTT_printf(0, "Note ON, pitch %u\r\n", currentPitch); // debug
 121:Core/Src/MIDI_event.c **** 			HAL_GPIO_WritePin(LD5_GPIO_Port, LD5_Pin, GPIO_PIN_SET); // red LED ON when incoming MIDI note o
 122:Core/Src/MIDI_event.c **** 			ADSR_keyOn(&adsr_amp);
 123:Core/Src/MIDI_event.c **** 			ADSR_keyOn(&adsr_filt);
 124:Core/Src/MIDI_event.c **** 			notesCount++;
 125:Core/Src/MIDI_event.c **** 			notes_Active[noteOn] = 1;
 126:Core/Src/MIDI_event.c **** 		}
 127:Core/Src/MIDI_event.c **** 		/*********************  Note Off *************************/
 128:Core/Src/MIDI_event.c **** 		else //  common implementation in MIDI devices: Note Off = Note On with velocity 0
 129:Core/Src/MIDI_event.c **** 		{			
 130:Core/Src/MIDI_event.c **** 			notes_Active[noteOn] = 0;
 131:Core/Src/MIDI_event.c **** 			notesCount--;
 132:Core/Src/MIDI_event.c **** 			
 133:Core/Src/MIDI_event.c **** 			// SEGGER_RTT_printf(0, "Note OFF, pitch %u\r\n", currentPitch);
 134:Core/Src/MIDI_event.c **** 			if (notesCount <= 0)
 135:Core/Src/MIDI_event.c **** 			{
 136:Core/Src/MIDI_event.c **** 				ADSR_keyOff(&adsr_amp);
 137:Core/Src/MIDI_event.c **** 				ADSR_keyOff(&adsr_filt);
 138:Core/Src/MIDI_event.c **** 				notesCount = 0;
 139:Core/Src/MIDI_event.c **** 				HAL_GPIO_WritePin(LD5_GPIO_Port, LD5_Pin, GPIO_PIN_RESET); // red LED OFF when all MIDI notes o
 140:Core/Src/MIDI_event.c **** 			}
 141:Core/Src/MIDI_event.c **** 			else // legato
 142:Core/Src/MIDI_event.c **** 			{
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//cc98IllA.s 			page 6


 143:Core/Src/MIDI_event.c **** 				if (noteOn == currentPitch)
 144:Core/Src/MIDI_event.c **** 				{
 145:Core/Src/MIDI_event.c **** 					uint8_t i;
 146:Core/Src/MIDI_event.c **** 					for (i = 0; i < 128; i++)
 147:Core/Src/MIDI_event.c **** 					{
 148:Core/Src/MIDI_event.c **** 						if (notes_Active[i] == 1) // find the lowest key pressed
 149:Core/Src/MIDI_event.c **** 							break;
 150:Core/Src/MIDI_event.c **** 					}
 151:Core/Src/MIDI_event.c **** 					currentPitch = i; // conversion for notesFreq[]
 152:Core/Src/MIDI_event.c **** 				}
 153:Core/Src/MIDI_event.c **** 			}
 154:Core/Src/MIDI_event.c **** 		}
 155:Core/Src/MIDI_event.c **** 	/********************* Other MIDI Messages *************************/	
 156:Core/Src/MIDI_event.c **** 	case 0xA0: 	// Polyphonic Pressure
 157:Core/Src/MIDI_event.c **** 		break;
 158:Core/Src/MIDI_event.c **** 	case 0xB0:	// Control Change
 159:Core/Src/MIDI_event.c **** 		// uint8_t cc_number = pack.evnt1;
 160:Core/Src/MIDI_event.c **** 		// uint8_t cc_value = pack.evnt2;
 161:Core/Src/MIDI_event.c **** 		// SEGGER_RTT_printf(0, "CC#  %u %u\r\n", cc_number, cc_value); // debug
 162:Core/Src/MIDI_event.c **** 		switch (pack.evnt1) // CC number --> implement CC actions
 163:Core/Src/MIDI_event.c **** 		{
 164:Core/Src/MIDI_event.c **** 		case 20:
 165:Core/Src/MIDI_event.c **** 			break;
 166:Core/Src/MIDI_event.c **** 		case 7:
 167:Core/Src/MIDI_event.c **** 			break; // master volume
 168:Core/Src/MIDI_event.c **** 		}
 169:Core/Src/MIDI_event.c **** 		break;
 170:Core/Src/MIDI_event.c **** 	case 0xC0: // Program Change
 171:Core/Src/MIDI_event.c **** 		break;
 172:Core/Src/MIDI_event.c **** 	case 0xD0: // After Touch
 173:Core/Src/MIDI_event.c **** 		break;
 174:Core/Src/MIDI_event.c **** 	case 0xE0: // Pitch Bend
 175:Core/Src/MIDI_event.c **** 		pitchbend = pack.evnt2 * 128 + pack.evnt1;
 176:Core/Src/MIDI_event.c **** 		break;
 177:Core/Src/MIDI_event.c **** 	}
 178:Core/Src/MIDI_event.c **** }
 145              		.loc 1 178 1 is_stmt 0 view .LVU23
 146 0022 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 147              	.LVL6:
 148              	.L32:
 149              	.LBB4:
  87:Core/Src/MIDI_event.c **** 		notes_Active[noteOff] = 0;
 150              		.loc 1 87 3 is_stmt 1 view .LVU24
  88:Core/Src/MIDI_event.c **** 		notesCount--;
 151              		.loc 1 88 3 view .LVU25
  89:Core/Src/MIDI_event.c **** 		if (notesCount <= 0) // no more keys pressed
 152              		.loc 1 89 13 is_stmt 0 view .LVU26
 153 0024 384E     		ldr	r6, .L41
 154              	.LVL7:
  88:Core/Src/MIDI_event.c **** 		notesCount--;
 155              		.loc 1 88 25 view .LVU27
 156 0026 394B     		ldr	r3, .L41+4
  89:Core/Src/MIDI_event.c **** 		if (notesCount <= 0) // no more keys pressed
 157              		.loc 1 89 13 view .LVU28
 158 0028 3278     		ldrb	r2, [r6]	@ zero_extendqisi2
 159 002a 013A     		subs	r2, r2, #1
  88:Core/Src/MIDI_event.c **** 		notesCount--;
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//cc98IllA.s 			page 7


 160              		.loc 1 88 25 view .LVU29
 161 002c 0024     		movs	r4, #0
  89:Core/Src/MIDI_event.c **** 		if (notesCount <= 0) // no more keys pressed
 162              		.loc 1 89 13 view .LVU30
 163 002e 52B2     		sxtb	r2, r2
  90:Core/Src/MIDI_event.c **** 		{
 164              		.loc 1 90 6 view .LVU31
 165 0030 A242     		cmp	r2, r4
  88:Core/Src/MIDI_event.c **** 		notesCount--;
 166              		.loc 1 88 25 view .LVU32
 167 0032 5C55     		strb	r4, [r3, r5]
  89:Core/Src/MIDI_event.c **** 		if (notesCount <= 0) // no more keys pressed
 168              		.loc 1 89 3 is_stmt 1 view .LVU33
  89:Core/Src/MIDI_event.c **** 		if (notesCount <= 0) // no more keys pressed
 169              		.loc 1 89 13 is_stmt 0 view .LVU34
 170 0034 3270     		strb	r2, [r6]
  90:Core/Src/MIDI_event.c **** 		{
 171              		.loc 1 90 3 is_stmt 1 view .LVU35
  90:Core/Src/MIDI_event.c **** 		{
 172              		.loc 1 90 6 is_stmt 0 view .LVU36
 173 0036 49DD     		ble	.L33
  98:Core/Src/MIDI_event.c **** 			{
 174              		.loc 1 98 4 is_stmt 1 view .LVU37
  98:Core/Src/MIDI_event.c **** 			{
 175              		.loc 1 98 17 is_stmt 0 view .LVU38
 176 0038 354E     		ldr	r6, .L41+8
  98:Core/Src/MIDI_event.c **** 			{
 177              		.loc 1 98 7 view .LVU39
 178 003a 3278     		ldrb	r2, [r6]	@ zero_extendqisi2
 179 003c AA42     		cmp	r2, r5
 180 003e F0D1     		bne	.L9
 181 0040 1A46     		mov	r2, r3
 182 0042 2346     		mov	r3, r4
 183 0044 01E0     		b	.L16
 184              	.LVL8:
 185              	.L35:
 186              	.LBB5:
 101:Core/Src/MIDI_event.c **** 				{
 187              		.loc 1 101 19 discriminator 2 view .LVU40
 188 0046 802B     		cmp	r3, #128
 189 0048 57D0     		beq	.L34
 190              	.LVL9:
 191              	.L16:
 101:Core/Src/MIDI_event.c **** 				{
 192              		.loc 1 101 27 is_stmt 1 view .LVU41
 101:Core/Src/MIDI_event.c **** 				{
 193              		.loc 1 101 19 view .LVU42
 103:Core/Src/MIDI_event.c **** 						break;
 194              		.loc 1 103 22 is_stmt 0 view .LVU43
 195 004a 12F8011B 		ldrb	r1, [r2], #1	@ zero_extendqisi2
 103:Core/Src/MIDI_event.c **** 						break;
 196              		.loc 1 103 9 view .LVU44
 197 004e 0129     		cmp	r1, #1
 198 0050 D8B2     		uxtb	r0, r3
 199              	.LVL10:
 103:Core/Src/MIDI_event.c **** 						break;
 200              		.loc 1 103 6 is_stmt 1 view .LVU45
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//cc98IllA.s 			page 8


 101:Core/Src/MIDI_event.c **** 				{
 201              		.loc 1 101 19 is_stmt 0 view .LVU46
 202 0052 03F10103 		add	r3, r3, #1
 103:Core/Src/MIDI_event.c **** 						break;
 203              		.loc 1 103 9 view .LVU47
 204 0056 F6D1     		bne	.L35
 205              	.LBE5:
 206              	.LBB6:
 151:Core/Src/MIDI_event.c **** 				}
 207              		.loc 1 151 6 is_stmt 1 view .LVU48
 151:Core/Src/MIDI_event.c **** 				}
 208              		.loc 1 151 19 is_stmt 0 view .LVU49
 209 0058 3070     		strb	r0, [r6]
 210              	.LVL11:
 211              	.L40:
 151:Core/Src/MIDI_event.c **** 				}
 212              		.loc 1 151 19 view .LVU50
 213              	.LBE6:
 214              	.LBE4:
 215              		.loc 1 178 1 view .LVU51
 216 005a F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 217              	.LVL12:
 218              	.L11:
 219              	.LBB10:
 175:Core/Src/MIDI_event.c **** 		break;
 220              		.loc 1 175 3 is_stmt 1 view .LVU52
 175:Core/Src/MIDI_event.c **** 		break;
 221              		.loc 1 175 13 is_stmt 0 view .LVU53
 222 005c 2D4B     		ldr	r3, .L41+12
 175:Core/Src/MIDI_event.c **** 		break;
 223              		.loc 1 175 32 view .LVU54
 224 005e 05EBC412 		add	r2, r5, r4, lsl #7
 175:Core/Src/MIDI_event.c **** 		break;
 225              		.loc 1 175 13 view .LVU55
 226 0062 1A80     		strh	r2, [r3]	@ movhi
 176:Core/Src/MIDI_event.c **** 	}
 227              		.loc 1 176 3 is_stmt 1 view .LVU56
 228              	.LBE10:
 229              		.loc 1 178 1 is_stmt 0 view .LVU57
 230 0064 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 231              	.LVL13:
 232              	.L10:
 233              	.LBB11:
 112:Core/Src/MIDI_event.c **** 		velocity = pack.evnt2;
 234              		.loc 1 112 3 is_stmt 1 view .LVU58
 113:Core/Src/MIDI_event.c **** 		if (velocity > 0) // True note on !
 235              		.loc 1 113 3 view .LVU59
 113:Core/Src/MIDI_event.c **** 		if (velocity > 0) // True note on !
 236              		.loc 1 113 12 is_stmt 0 view .LVU60
 237 0066 2C4A     		ldr	r2, .L41+16
 238 0068 1670     		strb	r6, [r2]
 114:Core/Src/MIDI_event.c **** 		{
 239              		.loc 1 114 3 is_stmt 1 view .LVU61
 114:Core/Src/MIDI_event.c **** 		{
 240              		.loc 1 114 6 is_stmt 0 view .LVU62
 241 006a CCB9     		cbnz	r4, .L36
 130:Core/Src/MIDI_event.c **** 			notesCount--;
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//cc98IllA.s 			page 9


 242              		.loc 1 130 4 is_stmt 1 view .LVU63
 131:Core/Src/MIDI_event.c **** 			
 243              		.loc 1 131 14 is_stmt 0 view .LVU64
 244 006c 264F     		ldr	r7, .L41
 130:Core/Src/MIDI_event.c **** 			notesCount--;
 245              		.loc 1 130 25 view .LVU65
 246 006e 274B     		ldr	r3, .L41+4
 131:Core/Src/MIDI_event.c **** 			
 247              		.loc 1 131 14 view .LVU66
 248 0070 3A78     		ldrb	r2, [r7]	@ zero_extendqisi2
 130:Core/Src/MIDI_event.c **** 			notesCount--;
 249              		.loc 1 130 25 view .LVU67
 250 0072 5E55     		strb	r6, [r3, r5]
 131:Core/Src/MIDI_event.c **** 			
 251              		.loc 1 131 4 is_stmt 1 view .LVU68
 131:Core/Src/MIDI_event.c **** 			
 252              		.loc 1 131 14 is_stmt 0 view .LVU69
 253 0074 013A     		subs	r2, r2, #1
 254 0076 52B2     		sxtb	r2, r2
 134:Core/Src/MIDI_event.c **** 			{
 255              		.loc 1 134 7 view .LVU70
 256 0078 002A     		cmp	r2, #0
 131:Core/Src/MIDI_event.c **** 			
 257              		.loc 1 131 14 view .LVU71
 258 007a 3A70     		strb	r2, [r7]
 134:Core/Src/MIDI_event.c **** 			{
 259              		.loc 1 134 4 is_stmt 1 view .LVU72
 134:Core/Src/MIDI_event.c **** 			{
 260              		.loc 1 134 7 is_stmt 0 view .LVU73
 261 007c 2EDD     		ble	.L37
 143:Core/Src/MIDI_event.c **** 				{
 262              		.loc 1 143 5 is_stmt 1 view .LVU74
 143:Core/Src/MIDI_event.c **** 				{
 263              		.loc 1 143 16 is_stmt 0 view .LVU75
 264 007e 244E     		ldr	r6, .L41+8
 265              	.LVL14:
 143:Core/Src/MIDI_event.c **** 				{
 266              		.loc 1 143 8 view .LVU76
 267 0080 3278     		ldrb	r2, [r6]	@ zero_extendqisi2
 268 0082 AA42     		cmp	r2, r5
 269 0084 CDD1     		bne	.L9
 270 0086 2246     		mov	r2, r4
 271 0088 01E0     		b	.L21
 272              	.LVL15:
 273              	.L39:
 274              	.LBB7:
 146:Core/Src/MIDI_event.c **** 					{
 275              		.loc 1 146 20 discriminator 2 view .LVU77
 276 008a 802A     		cmp	r2, #128
 277 008c 38D0     		beq	.L38
 278              	.LVL16:
 279              	.L21:
 146:Core/Src/MIDI_event.c **** 					{
 280              		.loc 1 146 28 is_stmt 1 view .LVU78
 146:Core/Src/MIDI_event.c **** 					{
 281              		.loc 1 146 20 view .LVU79
 148:Core/Src/MIDI_event.c **** 							break;
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//cc98IllA.s 			page 10


 282              		.loc 1 148 23 is_stmt 0 view .LVU80
 283 008e 13F8011B 		ldrb	r1, [r3], #1	@ zero_extendqisi2
 148:Core/Src/MIDI_event.c **** 							break;
 284              		.loc 1 148 10 view .LVU81
 285 0092 0129     		cmp	r1, #1
 286 0094 D0B2     		uxtb	r0, r2
 287              	.LVL17:
 148:Core/Src/MIDI_event.c **** 							break;
 288              		.loc 1 148 7 is_stmt 1 view .LVU82
 146:Core/Src/MIDI_event.c **** 					{
 289              		.loc 1 146 20 is_stmt 0 view .LVU83
 290 0096 02F10102 		add	r2, r2, #1
 148:Core/Src/MIDI_event.c **** 							break;
 291              		.loc 1 148 10 view .LVU84
 292 009a F6D1     		bne	.L39
 151:Core/Src/MIDI_event.c **** 				}
 293              		.loc 1 151 6 is_stmt 1 view .LVU85
 151:Core/Src/MIDI_event.c **** 				}
 294              		.loc 1 151 19 is_stmt 0 view .LVU86
 295 009c 3070     		strb	r0, [r6]
 296 009e DCE7     		b	.L40
 297              	.LVL18:
 298              	.L36:
 151:Core/Src/MIDI_event.c **** 				}
 299              		.loc 1 151 19 view .LVU87
 300              	.LBE7:
 118:Core/Src/MIDI_event.c **** 			
 301              		.loc 1 118 4 is_stmt 1 view .LVU88
 118:Core/Src/MIDI_event.c **** 			
 302              		.loc 1 118 17 is_stmt 0 view .LVU89
 303 00a0 1B48     		ldr	r0, .L41+8
 304              	.LVL19:
 121:Core/Src/MIDI_event.c **** 			ADSR_keyOn(&adsr_amp);
 305              		.loc 1 121 4 view .LVU90
 306 00a2 0122     		movs	r2, #1
 118:Core/Src/MIDI_event.c **** 			
 307              		.loc 1 118 17 view .LVU91
 308 00a4 0370     		strb	r3, [r0]
 121:Core/Src/MIDI_event.c **** 			ADSR_keyOn(&adsr_amp);
 309              		.loc 1 121 4 is_stmt 1 view .LVU92
 310 00a6 4FF48041 		mov	r1, #16384
 311 00aa 1C48     		ldr	r0, .L41+20
 312 00ac FFF7FEFF 		bl	HAL_GPIO_WritePin
 313              	.LVL20:
 122:Core/Src/MIDI_event.c **** 			ADSR_keyOn(&adsr_filt);
 314              		.loc 1 122 4 view .LVU93
 315 00b0 1B48     		ldr	r0, .L41+24
 316 00b2 FFF7FEFF 		bl	ADSR_keyOn
 317              	.LVL21:
 123:Core/Src/MIDI_event.c **** 			notesCount++;
 318              		.loc 1 123 4 view .LVU94
 319 00b6 1B48     		ldr	r0, .L41+28
 320 00b8 FFF7FEFF 		bl	ADSR_keyOn
 321              	.LVL22:
 124:Core/Src/MIDI_event.c **** 			notes_Active[noteOn] = 1;
 322              		.loc 1 124 4 view .LVU95
 124:Core/Src/MIDI_event.c **** 			notes_Active[noteOn] = 1;
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//cc98IllA.s 			page 11


 323              		.loc 1 124 14 is_stmt 0 view .LVU96
 324 00bc 124A     		ldr	r2, .L41
 125:Core/Src/MIDI_event.c **** 		}
 325              		.loc 1 125 25 view .LVU97
 326 00be 1349     		ldr	r1, .L41+4
 124:Core/Src/MIDI_event.c **** 			notes_Active[noteOn] = 1;
 327              		.loc 1 124 14 view .LVU98
 328 00c0 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 125:Core/Src/MIDI_event.c **** 		}
 329              		.loc 1 125 25 view .LVU99
 330 00c2 0120     		movs	r0, #1
 124:Core/Src/MIDI_event.c **** 			notes_Active[noteOn] = 1;
 331              		.loc 1 124 14 view .LVU100
 332 00c4 0344     		add	r3, r3, r0
 125:Core/Src/MIDI_event.c **** 		}
 333              		.loc 1 125 25 view .LVU101
 334 00c6 4855     		strb	r0, [r1, r5]
 124:Core/Src/MIDI_event.c **** 			notes_Active[noteOn] = 1;
 335              		.loc 1 124 14 view .LVU102
 336 00c8 1370     		strb	r3, [r2]
 125:Core/Src/MIDI_event.c **** 		}
 337              		.loc 1 125 4 is_stmt 1 view .LVU103
 338              	.LBE11:
 339              		.loc 1 178 1 is_stmt 0 view .LVU104
 340 00ca F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 341              	.LVL23:
 342              	.L33:
 343              	.LBB12:
  92:Core/Src/MIDI_event.c **** 			ADSR_keyOff(&adsr_filt);
 344              		.loc 1 92 4 is_stmt 1 view .LVU105
 345 00cc 1448     		ldr	r0, .L41+24
 346              	.LVL24:
  92:Core/Src/MIDI_event.c **** 			ADSR_keyOff(&adsr_filt);
 347              		.loc 1 92 4 is_stmt 0 view .LVU106
 348 00ce FFF7FEFF 		bl	ADSR_keyOff
 349              	.LVL25:
  93:Core/Src/MIDI_event.c **** 			notesCount = 0;
 350              		.loc 1 93 4 is_stmt 1 view .LVU107
 351 00d2 1448     		ldr	r0, .L41+28
 352 00d4 FFF7FEFF 		bl	ADSR_keyOff
 353              	.LVL26:
  94:Core/Src/MIDI_event.c **** 		}
 354              		.loc 1 94 4 view .LVU108
  94:Core/Src/MIDI_event.c **** 		}
 355              		.loc 1 94 15 is_stmt 0 view .LVU109
 356 00d8 3470     		strb	r4, [r6]
 357              	.LBE12:
 358              		.loc 1 178 1 view .LVU110
 359 00da F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 360              	.LVL27:
 361              	.L37:
 362              	.LBB13:
 136:Core/Src/MIDI_event.c **** 				ADSR_keyOff(&adsr_filt);
 363              		.loc 1 136 5 is_stmt 1 view .LVU111
 364 00dc 1048     		ldr	r0, .L41+24
 365              	.LVL28:
 136:Core/Src/MIDI_event.c **** 				ADSR_keyOff(&adsr_filt);
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//cc98IllA.s 			page 12


 366              		.loc 1 136 5 is_stmt 0 view .LVU112
 367 00de FFF7FEFF 		bl	ADSR_keyOff
 368              	.LVL29:
 137:Core/Src/MIDI_event.c **** 				notesCount = 0;
 369              		.loc 1 137 5 is_stmt 1 view .LVU113
 370 00e2 1048     		ldr	r0, .L41+28
 371 00e4 FFF7FEFF 		bl	ADSR_keyOff
 372              	.LVL30:
 138:Core/Src/MIDI_event.c **** 				HAL_GPIO_WritePin(LD5_GPIO_Port, LD5_Pin, GPIO_PIN_RESET); // red LED OFF when all MIDI notes o
 373              		.loc 1 138 5 view .LVU114
 139:Core/Src/MIDI_event.c **** 			}
 374              		.loc 1 139 5 is_stmt 0 view .LVU115
 375 00e8 2246     		mov	r2, r4
 138:Core/Src/MIDI_event.c **** 				HAL_GPIO_WritePin(LD5_GPIO_Port, LD5_Pin, GPIO_PIN_RESET); // red LED OFF when all MIDI notes o
 376              		.loc 1 138 16 view .LVU116
 377 00ea 3E70     		strb	r6, [r7]
 139:Core/Src/MIDI_event.c **** 			}
 378              		.loc 1 139 5 is_stmt 1 view .LVU117
 379 00ec 0B48     		ldr	r0, .L41+20
 380              	.LBE13:
 381              		.loc 1 178 1 is_stmt 0 view .LVU118
 382 00ee BDE8F840 		pop	{r3, r4, r5, r6, r7, lr}
 383              		.cfi_remember_state
 384              		.cfi_restore 14
 385              		.cfi_restore 7
 386              		.cfi_restore 6
 387              		.cfi_restore 5
 388              		.cfi_restore 4
 389              		.cfi_restore 3
 390              		.cfi_def_cfa_offset 0
 391              	.LVL31:
 392              	.LBB14:
 139:Core/Src/MIDI_event.c **** 			}
 393              		.loc 1 139 5 view .LVU119
 394 00f2 4FF48041 		mov	r1, #16384
 395 00f6 FFF7FEBF 		b	HAL_GPIO_WritePin
 396              	.LVL32:
 397              	.L34:
 398              		.cfi_restore_state
 399              	.LBB8:
 139:Core/Src/MIDI_event.c **** 			}
 400              		.loc 1 139 5 view .LVU120
 401 00fa 1846     		mov	r0, r3
 402              	.LVL33:
 106:Core/Src/MIDI_event.c **** 			}
 403              		.loc 1 106 5 is_stmt 1 view .LVU121
 404              	.LBE8:
 405              	.LBB9:
 151:Core/Src/MIDI_event.c **** 				}
 406              		.loc 1 151 6 view .LVU122
 151:Core/Src/MIDI_event.c **** 				}
 407              		.loc 1 151 19 is_stmt 0 view .LVU123
 408 00fc 3070     		strb	r0, [r6]
 409 00fe ACE7     		b	.L40
 410              	.LVL34:
 411              	.L38:
 151:Core/Src/MIDI_event.c **** 				}
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//cc98IllA.s 			page 13


 412              		.loc 1 151 19 view .LVU124
 413 0100 1046     		mov	r0, r2
 414              	.LVL35:
 151:Core/Src/MIDI_event.c **** 				}
 415              		.loc 1 151 6 is_stmt 1 view .LVU125
 151:Core/Src/MIDI_event.c **** 				}
 416              		.loc 1 151 19 is_stmt 0 view .LVU126
 417 0102 3070     		strb	r0, [r6]
 418 0104 A9E7     		b	.L40
 419              	.L42:
 420 0106 00BF     		.align	2
 421              	.L41:
 422 0108 00000000 		.word	.LANCHOR1
 423 010c 00000000 		.word	.LANCHOR0
 424 0110 00000000 		.word	.LANCHOR3
 425 0114 00000000 		.word	.LANCHOR2
 426 0118 00000000 		.word	.LANCHOR4
 427 011c 000C0240 		.word	1073875968
 428 0120 00000000 		.word	adsr_amp
 429 0124 00000000 		.word	adsr_filt
 430              	.LBE9:
 431              	.LBE14:
 432              		.cfi_endproc
 433              	.LFE139:
 435              		.section	.text.USBH_UserProcess_callback,"ax",%progbits
 436              		.align	1
 437              		.p2align 2,,3
 438              		.global	USBH_UserProcess_callback
 439              		.syntax unified
 440              		.thumb
 441              		.thumb_func
 443              	USBH_UserProcess_callback:
 444              	.LVL36:
 445              	.LFB140:
 179:Core/Src/MIDI_event.c **** 
 180:Core/Src/MIDI_event.c **** 
 181:Core/Src/MIDI_event.c **** 
 182:Core/Src/MIDI_event.c **** 
 183:Core/Src/MIDI_event.c **** /*=================================================================================================
 184:Core/Src/MIDI_event.c **** /**
 185:Core/Src/MIDI_event.c ****  * @brief  User Process function callback
 186:Core/Src/MIDI_event.c ****  * @param  phost: Host Handle
 187:Core/Src/MIDI_event.c ****  * @param  id: Host Library user message ID
 188:Core/Src/MIDI_event.c ****  * @retval none
 189:Core/Src/MIDI_event.c ****  */
 190:Core/Src/MIDI_event.c **** void USBH_UserProcess_callback(USBH_HandleTypeDef *pHost, uint8_t vId)
 191:Core/Src/MIDI_event.c **** {
 446              		.loc 1 191 1 is_stmt 1 view -0
 447              		.cfi_startproc
 448              		@ args = 0, pretend = 0, frame = 0
 449              		@ frame_needed = 0, uses_anonymous_args = 0
 192:Core/Src/MIDI_event.c **** 	switch (vId)
 450              		.loc 1 192 2 view .LVU128
 451 0000 0429     		cmp	r1, #4
 452 0002 06D0     		beq	.L44
 453 0004 0529     		cmp	r1, #5
 191:Core/Src/MIDI_event.c **** 	switch (vId)
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//cc98IllA.s 			page 14


 454              		.loc 1 191 1 is_stmt 0 view .LVU129
 455 0006 10B5     		push	{r4, lr}
 456              		.cfi_def_cfa_offset 8
 457              		.cfi_offset 4, -8
 458              		.cfi_offset 14, -4
 459 0008 0B46     		mov	r3, r1
 460              		.loc 1 192 2 view .LVU130
 461 000a 20D0     		beq	.L45
 462 000c 0229     		cmp	r1, #2
 463 000e 08D0     		beq	.L52
 193:Core/Src/MIDI_event.c **** 	{
 194:Core/Src/MIDI_event.c **** 	case HOST_USER_SELECT_CONFIGURATION:
 195:Core/Src/MIDI_event.c **** 		break;
 196:Core/Src/MIDI_event.c **** 
 197:Core/Src/MIDI_event.c **** 	case HOST_USER_DISCONNECTION:
 198:Core/Src/MIDI_event.c **** 		Appli_state = MIDI_APPLICATION_DISCONNECT;
 199:Core/Src/MIDI_event.c **** 		// 4 - green, 3 - orange, 5 - red, 6 - blue
 200:Core/Src/MIDI_event.c **** 		HAL_GPIO_WritePin(LD4_GPIO_Port, LD4_Pin, GPIO_PIN_RESET);
 201:Core/Src/MIDI_event.c **** 		HAL_GPIO_WritePin(LD6_GPIO_Port, LD6_Pin, GPIO_PIN_RESET);
 202:Core/Src/MIDI_event.c **** 		break;
 203:Core/Src/MIDI_event.c **** 
 204:Core/Src/MIDI_event.c **** 	case HOST_USER_CLASS_ACTIVE:
 205:Core/Src/MIDI_event.c **** 		Appli_state = MIDI_APPLICATION_READY;
 206:Core/Src/MIDI_event.c **** 		HAL_GPIO_WritePin(LD4_GPIO_Port, LD4_Pin, GPIO_PIN_SET);
 207:Core/Src/MIDI_event.c **** 		HAL_GPIO_WritePin(LD6_GPIO_Port, LD6_Pin, GPIO_PIN_RESET);
 208:Core/Src/MIDI_event.c **** 		HAL_GPIO_WritePin(LD5_GPIO_Port, LD5_Pin, GPIO_PIN_RESET);
 209:Core/Src/MIDI_event.c **** 		break;
 210:Core/Src/MIDI_event.c **** 
 211:Core/Src/MIDI_event.c **** 	case HOST_USER_CONNECTION:
 212:Core/Src/MIDI_event.c **** 		Appli_state = MIDI_APPLICATION_START;
 213:Core/Src/MIDI_event.c **** 		HAL_GPIO_WritePin(GPIOD, 0x8000, GPIO_PIN_SET);
 214:Core/Src/MIDI_event.c **** 		break;
 215:Core/Src/MIDI_event.c **** 
 216:Core/Src/MIDI_event.c **** 	default:
 217:Core/Src/MIDI_event.c **** 		break;
 218:Core/Src/MIDI_event.c **** 	}
 219:Core/Src/MIDI_event.c **** }
 464              		.loc 1 219 1 view .LVU131
 465 0010 10BD     		pop	{r4, pc}
 466              	.L44:
 467              		.cfi_def_cfa_offset 0
 468              		.cfi_restore 4
 469              		.cfi_restore 14
 212:Core/Src/MIDI_event.c **** 		HAL_GPIO_WritePin(GPIOD, 0x8000, GPIO_PIN_SET);
 470              		.loc 1 212 3 is_stmt 1 view .LVU132
 212:Core/Src/MIDI_event.c **** 		HAL_GPIO_WritePin(GPIOD, 0x8000, GPIO_PIN_SET);
 471              		.loc 1 212 15 is_stmt 0 view .LVU133
 472 0012 174B     		ldr	r3, .L53
 213:Core/Src/MIDI_event.c **** 		break;
 473              		.loc 1 213 3 view .LVU134
 474 0014 1748     		ldr	r0, .L53+4
 475              	.LVL37:
 212:Core/Src/MIDI_event.c **** 		HAL_GPIO_WritePin(GPIOD, 0x8000, GPIO_PIN_SET);
 476              		.loc 1 212 15 view .LVU135
 477 0016 0122     		movs	r2, #1
 213:Core/Src/MIDI_event.c **** 		break;
 478              		.loc 1 213 3 view .LVU136
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//cc98IllA.s 			page 15


 479 0018 4FF40041 		mov	r1, #32768
 480              	.LVL38:
 212:Core/Src/MIDI_event.c **** 		HAL_GPIO_WritePin(GPIOD, 0x8000, GPIO_PIN_SET);
 481              		.loc 1 212 15 view .LVU137
 482 001c 1A70     		strb	r2, [r3]
 213:Core/Src/MIDI_event.c **** 		break;
 483              		.loc 1 213 3 is_stmt 1 view .LVU138
 484 001e FFF7FEBF 		b	HAL_GPIO_WritePin
 485              	.LVL39:
 486              	.L52:
 487              		.cfi_def_cfa_offset 8
 488              		.cfi_offset 4, -8
 489              		.cfi_offset 14, -4
 205:Core/Src/MIDI_event.c **** 		HAL_GPIO_WritePin(LD4_GPIO_Port, LD4_Pin, GPIO_PIN_SET);
 490              		.loc 1 205 3 view .LVU139
 205:Core/Src/MIDI_event.c **** 		HAL_GPIO_WritePin(LD4_GPIO_Port, LD4_Pin, GPIO_PIN_SET);
 491              		.loc 1 205 15 is_stmt 0 view .LVU140
 492 0022 134C     		ldr	r4, .L53
 206:Core/Src/MIDI_event.c **** 		HAL_GPIO_WritePin(LD6_GPIO_Port, LD6_Pin, GPIO_PIN_RESET);
 493              		.loc 1 206 3 view .LVU141
 494 0024 1348     		ldr	r0, .L53+4
 495              	.LVL40:
 205:Core/Src/MIDI_event.c **** 		HAL_GPIO_WritePin(LD4_GPIO_Port, LD4_Pin, GPIO_PIN_SET);
 496              		.loc 1 205 15 view .LVU142
 497 0026 2370     		strb	r3, [r4]
 206:Core/Src/MIDI_event.c **** 		HAL_GPIO_WritePin(LD6_GPIO_Port, LD6_Pin, GPIO_PIN_RESET);
 498              		.loc 1 206 3 is_stmt 1 view .LVU143
 499 0028 0122     		movs	r2, #1
 500 002a 4FF48051 		mov	r1, #4096
 501              	.LVL41:
 206:Core/Src/MIDI_event.c **** 		HAL_GPIO_WritePin(LD6_GPIO_Port, LD6_Pin, GPIO_PIN_RESET);
 502              		.loc 1 206 3 is_stmt 0 view .LVU144
 503 002e FFF7FEFF 		bl	HAL_GPIO_WritePin
 504              	.LVL42:
 207:Core/Src/MIDI_event.c **** 		HAL_GPIO_WritePin(LD5_GPIO_Port, LD5_Pin, GPIO_PIN_RESET);
 505              		.loc 1 207 3 is_stmt 1 view .LVU145
 506 0032 1048     		ldr	r0, .L53+4
 507 0034 0022     		movs	r2, #0
 508 0036 4FF40041 		mov	r1, #32768
 509 003a FFF7FEFF 		bl	HAL_GPIO_WritePin
 510              	.LVL43:
 208:Core/Src/MIDI_event.c **** 		break;
 511              		.loc 1 208 3 view .LVU146
 512              		.loc 1 219 1 is_stmt 0 view .LVU147
 513 003e BDE81040 		pop	{r4, lr}
 514              		.cfi_remember_state
 515              		.cfi_restore 14
 516              		.cfi_restore 4
 517              		.cfi_def_cfa_offset 0
 208:Core/Src/MIDI_event.c **** 		break;
 518              		.loc 1 208 3 view .LVU148
 519 0042 0C48     		ldr	r0, .L53+4
 520 0044 0022     		movs	r2, #0
 521 0046 4FF48041 		mov	r1, #16384
 522 004a FFF7FEBF 		b	HAL_GPIO_WritePin
 523              	.LVL44:
 524              	.L45:
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//cc98IllA.s 			page 16


 525              		.cfi_restore_state
 198:Core/Src/MIDI_event.c **** 		// 4 - green, 3 - orange, 5 - red, 6 - blue
 526              		.loc 1 198 3 is_stmt 1 view .LVU149
 198:Core/Src/MIDI_event.c **** 		// 4 - green, 3 - orange, 5 - red, 6 - blue
 527              		.loc 1 198 15 is_stmt 0 view .LVU150
 528 004e 084B     		ldr	r3, .L53
 200:Core/Src/MIDI_event.c **** 		HAL_GPIO_WritePin(LD6_GPIO_Port, LD6_Pin, GPIO_PIN_RESET);
 529              		.loc 1 200 3 view .LVU151
 530 0050 0848     		ldr	r0, .L53+4
 531              	.LVL45:
 200:Core/Src/MIDI_event.c **** 		HAL_GPIO_WritePin(LD6_GPIO_Port, LD6_Pin, GPIO_PIN_RESET);
 532              		.loc 1 200 3 view .LVU152
 533 0052 0022     		movs	r2, #0
 534 0054 4FF48051 		mov	r1, #4096
 535              	.LVL46:
 198:Core/Src/MIDI_event.c **** 		// 4 - green, 3 - orange, 5 - red, 6 - blue
 536              		.loc 1 198 15 view .LVU153
 537 0058 0424     		movs	r4, #4
 538 005a 1C70     		strb	r4, [r3]
 200:Core/Src/MIDI_event.c **** 		HAL_GPIO_WritePin(LD6_GPIO_Port, LD6_Pin, GPIO_PIN_RESET);
 539              		.loc 1 200 3 is_stmt 1 view .LVU154
 540 005c FFF7FEFF 		bl	HAL_GPIO_WritePin
 541              	.LVL47:
 201:Core/Src/MIDI_event.c **** 		break;
 542              		.loc 1 201 3 view .LVU155
 543              		.loc 1 219 1 is_stmt 0 view .LVU156
 544 0060 BDE81040 		pop	{r4, lr}
 545              		.cfi_restore 14
 546              		.cfi_restore 4
 547              		.cfi_def_cfa_offset 0
 201:Core/Src/MIDI_event.c **** 		break;
 548              		.loc 1 201 3 view .LVU157
 549 0064 0348     		ldr	r0, .L53+4
 550 0066 0022     		movs	r2, #0
 551 0068 4FF40041 		mov	r1, #32768
 552 006c FFF7FEBF 		b	HAL_GPIO_WritePin
 553              	.LVL48:
 554              	.L54:
 555              		.align	2
 556              	.L53:
 557 0070 00000000 		.word	.LANCHOR5
 558 0074 000C0240 		.word	1073875968
 559              		.cfi_endproc
 560              	.LFE140:
 562              		.global	notesCount
 563              		.global	notes_Active
 564              		.global	velocity
 565              		.global	currentPitch
 566              		.global	pitchbend
 567              		.global	Appli_state
 568              		.global	hUSBHost
 569              		.section	.bss.Appli_state,"aw",%nobits
 570              		.set	.LANCHOR5,. + 0
 573              	Appli_state:
 574 0000 00       		.space	1
 575              		.section	.bss.currentPitch,"aw",%nobits
 576              		.set	.LANCHOR3,. + 0
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//cc98IllA.s 			page 17


 579              	currentPitch:
 580 0000 00       		.space	1
 581              		.section	.bss.hUSBHost,"aw",%nobits
 582              		.align	2
 585              	hUSBHost:
 586 0000 00000000 		.space	1564
 586      00000000 
 586      00000000 
 586      00000000 
 586      00000000 
 587              		.section	.bss.notesCount,"aw",%nobits
 588              		.set	.LANCHOR1,. + 0
 591              	notesCount:
 592 0000 00       		.space	1
 593              		.section	.bss.notes_Active,"aw",%nobits
 594              		.align	2
 595              		.set	.LANCHOR0,. + 0
 598              	notes_Active:
 599 0000 00000000 		.space	128
 599      00000000 
 599      00000000 
 599      00000000 
 599      00000000 
 600              		.section	.bss.pitchbend,"aw",%nobits
 601              		.align	1
 602              		.set	.LANCHOR2,. + 0
 605              	pitchbend:
 606 0000 0000     		.space	2
 607              		.section	.bss.velocity,"aw",%nobits
 608              		.set	.LANCHOR4,. + 0
 611              	velocity:
 612 0000 00       		.space	1
 613              		.text
 614              	.Letext0:
 615              		.file 2 "/Users/johannes/Library/Application Support/Code/User/globalStorage/bmd.stm32-for-vscode/
 616              		.file 3 "/Users/johannes/Library/Application Support/Code/User/globalStorage/bmd.stm32-for-vscode/
 617              		.file 4 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/stm32f407xx.h"
 618              		.file 5 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_gpio.h"
 619              		.file 6 "Middlewares/ST/STM32_USB_Host_Library/Core/Inc/usbh_def.h"
 620              		.file 7 "Core/Inc/usbh_MIDI.h"
 621              		.file 8 "Core/Inc/MIDI_application.h"
 622              		.file 9 "Core/Inc/ADSR_envelope.h"
 623              		.file 10 "<built-in>"
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//cc98IllA.s 			page 18


DEFINED SYMBOLS
                            *ABS*:0000000000000000 MIDI_event.c
/var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//cc98IllA.s:20     .text.allNotesOff:0000000000000000 $t
/var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//cc98IllA.s:27     .text.allNotesOff:0000000000000000 allNotesOff
/var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//cc98IllA.s:64     .text.allNotesOff:0000000000000014 $d
/var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//cc98IllA.s:70     .text.MIDI_eventInit:0000000000000000 $t
/var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//cc98IllA.s:77     .text.MIDI_eventInit:0000000000000000 MIDI_eventInit
/var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//cc98IllA.s:94     .text.MIDI_eventInit:000000000000000c $d
/var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//cc98IllA.s:99     .text.ProcessMIDI:0000000000000000 $t
/var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//cc98IllA.s:106    .text.ProcessMIDI:0000000000000000 ProcessMIDI
/var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//cc98IllA.s:422    .text.ProcessMIDI:0000000000000108 $d
/var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//cc98IllA.s:436    .text.USBH_UserProcess_callback:0000000000000000 $t
/var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//cc98IllA.s:443    .text.USBH_UserProcess_callback:0000000000000000 USBH_UserProcess_callback
/var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//cc98IllA.s:557    .text.USBH_UserProcess_callback:0000000000000070 $d
/var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//cc98IllA.s:591    .bss.notesCount:0000000000000000 notesCount
/var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//cc98IllA.s:598    .bss.notes_Active:0000000000000000 notes_Active
/var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//cc98IllA.s:611    .bss.velocity:0000000000000000 velocity
/var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//cc98IllA.s:579    .bss.currentPitch:0000000000000000 currentPitch
/var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//cc98IllA.s:605    .bss.pitchbend:0000000000000000 pitchbend
/var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//cc98IllA.s:573    .bss.Appli_state:0000000000000000 Appli_state
/var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//cc98IllA.s:585    .bss.hUSBHost:0000000000000000 hUSBHost
/var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//cc98IllA.s:574    .bss.Appli_state:0000000000000000 $d
/var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//cc98IllA.s:580    .bss.currentPitch:0000000000000000 $d
/var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//cc98IllA.s:582    .bss.hUSBHost:0000000000000000 $d
/var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//cc98IllA.s:592    .bss.notesCount:0000000000000000 $d
/var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//cc98IllA.s:594    .bss.notes_Active:0000000000000000 $d
/var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//cc98IllA.s:601    .bss.pitchbend:0000000000000000 $d
/var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//cc98IllA.s:612    .bss.velocity:0000000000000000 $d

UNDEFINED SYMBOLS
memset
HAL_GPIO_WritePin
ADSR_keyOn
ADSR_keyOff
adsr_amp
adsr_filt
