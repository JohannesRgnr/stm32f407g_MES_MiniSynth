ARM GAS  /var/folders/lp/x54gwt890xv47sdkqj1k04q40000gn/T//ccLERDkL.s 			page 1


   1              		.cpu cortex-m4
   2              		.arch armv7e-m
   3              		.fpu fpv4-sp-d16
   4              		.eabi_attribute 27, 1
   5              		.eabi_attribute 28, 1
   6              		.eabi_attribute 20, 1
   7              		.eabi_attribute 21, 1
   8              		.eabi_attribute 23, 3
   9              		.eabi_attribute 24, 1
  10              		.eabi_attribute 25, 1
  11              		.eabi_attribute 26, 1
  12              		.eabi_attribute 30, 2
  13              		.eabi_attribute 34, 1
  14              		.eabi_attribute 18, 4
  15              		.file	"MIDI_event.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.file 1 "Core/Src/MIDI_event.c"
  20              		.section	.text.allNotesOff,"ax",%progbits
  21              		.align	1
  22              		.p2align 2,,3
  23              		.global	allNotesOff
  24              		.syntax unified
  25              		.thumb
  26              		.thumb_func
  28              	allNotesOff:
  29              	.LFB242:
   1:Core/Src/MIDI_event.c **** /**
   2:Core/Src/MIDI_event.c ****  * @file MIDI_event.c
   3:Core/Src/MIDI_event.c ****  * @author modified by johannes regnier
   4:Core/Src/MIDI_event.c ****  * @brief MIDI events processing
   5:Core/Src/MIDI_event.c ****  * @note Makes use of the great resources from Tom Erbe
   6:Core/Src/MIDI_event.c ****  * @note http://synthnotes.ucsd.edu/wp4/index.php/2019/09/24/adding-the-usb-otg-midi-driver-polypho
   7:Core/Src/MIDI_event.c ****  * @note and of the awesome Xavier Halgand's Dekrispator
   8:Core/Src/MIDI_event.c ****  * @version 0.1
   9:Core/Src/MIDI_event.c ****  * @date 2023-12-30
  10:Core/Src/MIDI_event.c ****  *
  11:Core/Src/MIDI_event.c ****  * @copyright Copyright (c) 2023
  12:Core/Src/MIDI_event.c ****  *
  13:Core/Src/MIDI_event.c ****  */
  14:Core/Src/MIDI_event.c **** 
  15:Core/Src/MIDI_event.c **** #include <stdint.h>
  16:Core/Src/MIDI_event.c **** 
  17:Core/Src/MIDI_event.c **** #include "MIDI_event.h"
  18:Core/Src/MIDI_event.c **** #include "gpio.h"
  19:Core/Src/MIDI_event.c **** #include "SEGGER_RTT.h"
  20:Core/Src/MIDI_event.c **** #include "CONSTS.h"
  21:Core/Src/MIDI_event.c **** #include "helper_functions.h"
  22:Core/Src/MIDI_event.c **** #include "ADSR_envelope.h"
  23:Core/Src/MIDI_event.c **** 
  24:Core/Src/MIDI_event.c **** USBH_HandleTypeDef hUSBHost; /* USB Host handle */
  25:Core/Src/MIDI_event.c **** MIDI_ApplicationTypeDef Appli_state = MIDI_APPLICATION_IDLE;
  26:Core/Src/MIDI_event.c **** 
  27:Core/Src/MIDI_event.c **** uint16_t pitchbend ;
  28:Core/Src/MIDI_event.c **** uint8_t currentPitch ;
  29:Core/Src/MIDI_event.c **** uint8_t velocity, noteOn_velocity;
ARM GAS  /var/folders/lp/x54gwt890xv47sdkqj1k04q40000gn/T//ccLERDkL.s 			page 2


  30:Core/Src/MIDI_event.c **** uint8_t notes_Active[128] = {0}; // at most, 128 MIDI notes are active
  31:Core/Src/MIDI_event.c **** int8_t notesCount = 0 ;			 // number of notes active
  32:Core/Src/MIDI_event.c **** extern ADSR_t adsr_amp;
  33:Core/Src/MIDI_event.c **** extern ADSR_t adsr_filt;
  34:Core/Src/MIDI_event.c **** extern ADSR_t adsr_index;
  35:Core/Src/MIDI_event.c **** 
  36:Core/Src/MIDI_event.c **** 
  37:Core/Src/MIDI_event.c **** /**
  38:Core/Src/MIDI_event.c ****  * @brief turns off all current active notes
  39:Core/Src/MIDI_event.c ****  * 
  40:Core/Src/MIDI_event.c ****  */
  41:Core/Src/MIDI_event.c **** void allNotesOff(void)
  42:Core/Src/MIDI_event.c **** {
  30              		.loc 1 42 1 view -0
  31              		.cfi_startproc
  32              		@ args = 0, pretend = 0, frame = 0
  33              		@ frame_needed = 0, uses_anonymous_args = 0
  43:Core/Src/MIDI_event.c **** 	for (uint8_t i = 0; i < 128; i++)
  34              		.loc 1 43 2 view .LVU1
  35              	.LBB3:
  36              		.loc 1 43 7 view .LVU2
  37              	.LVL0:
  38              		.loc 1 43 24 discriminator 1 view .LVU3
  39              	.LBE3:
  42:Core/Src/MIDI_event.c **** 	for (uint8_t i = 0; i < 128; i++)
  40              		.loc 1 42 1 is_stmt 0 view .LVU4
  41 0000 2DE9F843 		push	{r3, r4, r5, r6, r7, r8, r9, lr}
  42              		.cfi_def_cfa_offset 32
  43              		.cfi_offset 3, -32
  44              		.cfi_offset 4, -28
  45              		.cfi_offset 5, -24
  46              		.cfi_offset 6, -20
  47              		.cfi_offset 7, -16
  48              		.cfi_offset 8, -12
  49              		.cfi_offset 9, -8
  50              		.cfi_offset 14, -4
  51 0004 0C4C     		ldr	r4, .L6
  52              	.LBB4:
  44:Core/Src/MIDI_event.c **** 	{
  45:Core/Src/MIDI_event.c **** 		notes_Active[i] = 0;
  46:Core/Src/MIDI_event.c **** 		ADSR_keyOff(&adsr_amp); // release envelopes
  53              		.loc 1 46 3 view .LVU5
  54 0006 DFF83C90 		ldr	r9, .L6+12
  47:Core/Src/MIDI_event.c **** 		ADSR_keyOff(&adsr_filt);
  55              		.loc 1 47 3 view .LVU6
  56 000a DFF83C80 		ldr	r8, .L6+16
  48:Core/Src/MIDI_event.c **** 		ADSR_keyOff(&adsr_index);
  57              		.loc 1 48 3 view .LVU7
  58 000e 0B4F     		ldr	r7, .L6+4
  59 0010 04F18006 		add	r6, r4, #128
  60              	.LVL1:
  61              	.L2:
  45:Core/Src/MIDI_event.c **** 		ADSR_keyOff(&adsr_amp); // release envelopes
  62              		.loc 1 45 3 is_stmt 1 view .LVU8
  45:Core/Src/MIDI_event.c **** 		ADSR_keyOff(&adsr_amp); // release envelopes
  63              		.loc 1 45 19 is_stmt 0 view .LVU9
  64 0014 0025     		movs	r5, #0
ARM GAS  /var/folders/lp/x54gwt890xv47sdkqj1k04q40000gn/T//ccLERDkL.s 			page 3


  65 0016 04F8015F 		strb	r5, [r4, #1]!
  66              	.LVL2:
  46:Core/Src/MIDI_event.c **** 		ADSR_keyOff(&adsr_filt);
  67              		.loc 1 46 3 is_stmt 1 view .LVU10
  68 001a 4846     		mov	r0, r9
  69 001c FFF7FEFF 		bl	ADSR_keyOff
  70              	.LVL3:
  47:Core/Src/MIDI_event.c **** 		ADSR_keyOff(&adsr_index);
  71              		.loc 1 47 3 view .LVU11
  72 0020 4046     		mov	r0, r8
  73 0022 FFF7FEFF 		bl	ADSR_keyOff
  74              	.LVL4:
  75              		.loc 1 48 3 view .LVU12
  76 0026 3846     		mov	r0, r7
  77 0028 FFF7FEFF 		bl	ADSR_keyOff
  78              	.LVL5:
  43:Core/Src/MIDI_event.c **** 	{
  79              		.loc 1 43 32 discriminator 3 view .LVU13
  43:Core/Src/MIDI_event.c **** 	{
  80              		.loc 1 43 24 discriminator 1 view .LVU14
  81 002c B442     		cmp	r4, r6
  82 002e F1D1     		bne	.L2
  83              	.LBE4:
  49:Core/Src/MIDI_event.c **** 	}
  50:Core/Src/MIDI_event.c **** 	notesCount = 0;
  84              		.loc 1 50 2 view .LVU15
  85              		.loc 1 50 13 is_stmt 0 view .LVU16
  86 0030 034B     		ldr	r3, .L6+8
  87 0032 1D70     		strb	r5, [r3]
  51:Core/Src/MIDI_event.c **** }
  88              		.loc 1 51 1 view .LVU17
  89 0034 BDE8F883 		pop	{r3, r4, r5, r6, r7, r8, r9, pc}
  90              	.LVL6:
  91              	.L7:
  92              		.loc 1 51 1 view .LVU18
  93              		.align	2
  94              	.L6:
  95 0038 FFFFFFFF 		.word	notes_Active-1
  96 003c 00000000 		.word	adsr_index
  97 0040 00000000 		.word	notesCount
  98 0044 00000000 		.word	adsr_amp
  99 0048 00000000 		.word	adsr_filt
 100              		.cfi_endproc
 101              	.LFE242:
 103              		.section	.text.MIDI_eventInit,"ax",%progbits
 104              		.align	1
 105              		.p2align 2,,3
 106              		.global	MIDI_eventInit
 107              		.syntax unified
 108              		.thumb
 109              		.thumb_func
 111              	MIDI_eventInit:
 112              	.LFB243:
  52:Core/Src/MIDI_event.c **** 
  53:Core/Src/MIDI_event.c **** 
  54:Core/Src/MIDI_event.c **** void MIDI_eventInit()
  55:Core/Src/MIDI_event.c **** {
ARM GAS  /var/folders/lp/x54gwt890xv47sdkqj1k04q40000gn/T//ccLERDkL.s 			page 4


 113              		.loc 1 55 1 is_stmt 1 view -0
 114              		.cfi_startproc
 115              		@ args = 0, pretend = 0, frame = 0
 116              		@ frame_needed = 0, uses_anonymous_args = 0
 117              		@ link register save eliminated.
  56:Core/Src/MIDI_event.c **** 	pitchbend = 8192;
 118              		.loc 1 56 2 view .LVU20
 119              		.loc 1 56 12 is_stmt 0 view .LVU21
 120 0000 024B     		ldr	r3, .L9
 121 0002 4FF40052 		mov	r2, #8192
 122 0006 1A80     		strh	r2, [r3]	@ movhi
  57:Core/Src/MIDI_event.c **** }
 123              		.loc 1 57 1 view .LVU22
 124 0008 7047     		bx	lr
 125              	.L10:
 126 000a 00BF     		.align	2
 127              	.L9:
 128 000c 00000000 		.word	pitchbend
 129              		.cfi_endproc
 130              	.LFE243:
 132              		.section	.text.ProcessMIDI,"ax",%progbits
 133              		.align	1
 134              		.p2align 2,,3
 135              		.global	ProcessMIDI
 136              		.syntax unified
 137              		.thumb
 138              		.thumb_func
 140              	ProcessMIDI:
 141              	.LVL7:
 142              	.LFB244:
  58:Core/Src/MIDI_event.c **** 
  59:Core/Src/MIDI_event.c **** /**
  60:Core/Src/MIDI_event.c ****  * @brief Process incoming MIDI events - Monophonic, with legato
  61:Core/Src/MIDI_event.c ****  * @note Code adapted from Xavier Halgand and from Tom Erbe's version
  62:Core/Src/MIDI_event.c ****  *
  63:Core/Src/MIDI_event.c ****  * @param pack
  64:Core/Src/MIDI_event.c ****  */
  65:Core/Src/MIDI_event.c **** void ProcessMIDI(midi_package_t pack)
  66:Core/Src/MIDI_event.c **** {
 143              		.loc 1 66 1 is_stmt 1 view -0
 144              		.cfi_startproc
 145              		@ args = 0, pretend = 0, frame = 0
 146              		@ frame_needed = 0, uses_anonymous_args = 0
 147              		.loc 1 66 1 is_stmt 0 view .LVU24
 148 0000 38B5     		push	{r3, r4, r5, lr}
 149              		.cfi_def_cfa_offset 16
 150              		.cfi_offset 3, -16
 151              		.cfi_offset 4, -12
 152              		.cfi_offset 5, -8
 153              		.cfi_offset 14, -4
 154 0002 C0F30742 		ubfx	r2, r0, #16, #8
 155 0006 C0F30763 		ubfx	r3, r0, #24, #8
 156 000a 010E     		lsrs	r1, r0, #24
  67:Core/Src/MIDI_event.c **** 	uint8_t status;
  68:Core/Src/MIDI_event.c **** 
  69:Core/Src/MIDI_event.c **** 	status = pack.evnt0 & 0xF0;
 157              		.loc 1 69 9 view .LVU25
ARM GAS  /var/folders/lp/x54gwt890xv47sdkqj1k04q40000gn/T//ccLERDkL.s 			page 5


 158 000c C0F30720 		ubfx	r0, r0, #8, #8
 159              	.LVL8:
 160              		.loc 1 69 9 view .LVU26
 161 0010 00F0F000 		and	r0, r0, #240
  70:Core/Src/MIDI_event.c **** 	if (status == 0xF0) // not using any of these
  71:Core/Src/MIDI_event.c **** 	{
  72:Core/Src/MIDI_event.c **** 		switch (pack.evnt0)
  73:Core/Src/MIDI_event.c **** 		{
  74:Core/Src/MIDI_event.c **** 		case 0xF0: // Start of System Exclusive
  75:Core/Src/MIDI_event.c **** 		case 0xF1: // MIDI Time Code Quarter Fram
  76:Core/Src/MIDI_event.c **** 		case 0xF2: // Song Position Pointer
  77:Core/Src/MIDI_event.c **** 		case 0xF3: // Song Select
  78:Core/Src/MIDI_event.c **** 		case 0xF4: // Undefined
  79:Core/Src/MIDI_event.c **** 		case 0xF5: // Undefined
  80:Core/Src/MIDI_event.c **** 		case 0xF6: // Tune Request
  81:Core/Src/MIDI_event.c **** 		case 0xF7: // End of System Exclusive
  82:Core/Src/MIDI_event.c **** 		case 0xF8: // Timing Clock (24 times a quarter note)
  83:Core/Src/MIDI_event.c **** 		case 0xF9: // Undefined
  84:Core/Src/MIDI_event.c **** 		case 0xFA: // Start Sequence
  85:Core/Src/MIDI_event.c **** 		case 0xFB: // Continue Sequence
  86:Core/Src/MIDI_event.c **** 		case 0xFC: // Pause Sequence
  87:Core/Src/MIDI_event.c **** 		case 0xFD: // Undefined
  88:Core/Src/MIDI_event.c **** 		case 0xFE: // Active Sensing
  89:Core/Src/MIDI_event.c **** 		case 0xFF: // Reset all synthesizers to power up
  90:Core/Src/MIDI_event.c **** 			break;
  91:Core/Src/MIDI_event.c **** 		}
  92:Core/Src/MIDI_event.c **** 	}
  93:Core/Src/MIDI_event.c **** 
  94:Core/Src/MIDI_event.c **** 	switch (status)
 162              		.loc 1 94 2 view .LVU27
 163 0014 9028     		cmp	r0, #144
 164 0016 1446     		mov	r4, r2
 165              	.LVL9:
  67:Core/Src/MIDI_event.c **** 	uint8_t status;
 166              		.loc 1 67 2 is_stmt 1 view .LVU28
  69:Core/Src/MIDI_event.c **** 	if (status == 0xF0) // not using any of these
 167              		.loc 1 69 2 view .LVU29
  70:Core/Src/MIDI_event.c **** 	if (status == 0xF0) // not using any of these
 168              		.loc 1 70 2 view .LVU30
 169              		.loc 1 94 2 view .LVU31
 170 0018 21D0     		beq	.L12
 171 001a E028     		cmp	r0, #224
 172 001c 1AD0     		beq	.L13
 173 001e 8028     		cmp	r0, #128
 174 0020 17D1     		bne	.L11
 175              	.LBB5:
  95:Core/Src/MIDI_event.c **** 	{
  96:Core/Src/MIDI_event.c **** 	/********************* Real Note Off *************************/	
  97:Core/Src/MIDI_event.c **** 	case 0x80: 
  98:Core/Src/MIDI_event.c **** 		uint8_t noteOff = pack.evnt1;
 176              		.loc 1 98 3 view .LVU32
 177              	.LVL10:
  99:Core/Src/MIDI_event.c **** 		notes_Active[noteOff] = 0;
 178              		.loc 1 99 3 view .LVU33
 100:Core/Src/MIDI_event.c **** 		notesCount--;
 179              		.loc 1 100 13 is_stmt 0 view .LVU34
 180 0022 344D     		ldr	r5, .L32
ARM GAS  /var/folders/lp/x54gwt890xv47sdkqj1k04q40000gn/T//ccLERDkL.s 			page 6


  99:Core/Src/MIDI_event.c **** 		notes_Active[noteOff] = 0;
 181              		.loc 1 99 25 view .LVU35
 182 0024 344A     		ldr	r2, .L32+4
 183              		.loc 1 100 13 view .LVU36
 184 0026 2978     		ldrb	r1, [r5]	@ zero_extendqisi2
 185 0028 0139     		subs	r1, r1, #1
  99:Core/Src/MIDI_event.c **** 		notes_Active[noteOff] = 0;
 186              		.loc 1 99 25 view .LVU37
 187 002a 0023     		movs	r3, #0
 188              	.LVL11:
 189              		.loc 1 100 13 view .LVU38
 190 002c 49B2     		sxtb	r1, r1
 101:Core/Src/MIDI_event.c **** 		if (notesCount <= 0) // no notes active anymore
 191              		.loc 1 101 6 view .LVU39
 192 002e 9942     		cmp	r1, r3
  99:Core/Src/MIDI_event.c **** 		notes_Active[noteOff] = 0;
 193              		.loc 1 99 25 view .LVU40
 194 0030 1355     		strb	r3, [r2, r4]
 100:Core/Src/MIDI_event.c **** 		notesCount--;
 195              		.loc 1 100 3 is_stmt 1 view .LVU41
 100:Core/Src/MIDI_event.c **** 		notesCount--;
 196              		.loc 1 100 13 is_stmt 0 view .LVU42
 197 0032 2970     		strb	r1, [r5]
 198              		.loc 1 101 3 is_stmt 1 view .LVU43
 199              		.loc 1 101 6 is_stmt 0 view .LVU44
 200 0034 4BDD     		ble	.L21
 102:Core/Src/MIDI_event.c **** 		{
 103:Core/Src/MIDI_event.c **** 			ADSR_keyOff(&adsr_amp); // release envelopes
 104:Core/Src/MIDI_event.c **** 			ADSR_keyOff(&adsr_filt);
 105:Core/Src/MIDI_event.c **** 			ADSR_keyOff(&adsr_index);
 106:Core/Src/MIDI_event.c **** 			notesCount = 0;
 107:Core/Src/MIDI_event.c **** 			HAL_GPIO_WritePin(LD5_GPIO_Port, LD5_Pin, GPIO_PIN_RESET);
 108:Core/Src/MIDI_event.c **** 		}
 109:Core/Src/MIDI_event.c **** 		else // legato 
 110:Core/Src/MIDI_event.c **** 		{
 111:Core/Src/MIDI_event.c **** 			if (noteOff  == currentPitch) // let sound the lowest key pressed
 201              		.loc 1 111 4 is_stmt 1 view .LVU45
 202              		.loc 1 111 17 is_stmt 0 view .LVU46
 203 0036 314D     		ldr	r5, .L32+8
 204              		.loc 1 111 7 view .LVU47
 205 0038 2978     		ldrb	r1, [r5]	@ zero_extendqisi2
 206 003a A142     		cmp	r1, r4
 207 003c 09D1     		bne	.L11
 208 003e 02E0     		b	.L18
 209              	.LVL12:
 210              	.L29:
 211              	.LBB6:
 112:Core/Src/MIDI_event.c **** 			{
 113:Core/Src/MIDI_event.c **** 				uint8_t i;
 114:Core/Src/MIDI_event.c **** 				for (i = 0; i < 128; i++)
 212              		.loc 1 114 19 discriminator 1 view .LVU48
 213 0040 0133     		adds	r3, r3, #1
 214              	.LVL13:
 215              		.loc 1 114 19 discriminator 1 view .LVU49
 216 0042 802B     		cmp	r3, #128
 217 0044 04D0     		beq	.L19
 218              	.LVL14:
ARM GAS  /var/folders/lp/x54gwt890xv47sdkqj1k04q40000gn/T//ccLERDkL.s 			page 7


 219              	.L18:
 115:Core/Src/MIDI_event.c **** 				{
 116:Core/Src/MIDI_event.c **** 					if (notes_Active[i] == 1) // find the lowest key pressed
 220              		.loc 1 116 6 is_stmt 1 view .LVU50
 114:Core/Src/MIDI_event.c **** 				{
 221              		.loc 1 114 27 discriminator 2 view .LVU51
 114:Core/Src/MIDI_event.c **** 				{
 222              		.loc 1 114 19 discriminator 1 view .LVU52
 223              		.loc 1 116 22 is_stmt 0 view .LVU53
 224 0046 12F8011B 		ldrb	r1, [r2], #1	@ zero_extendqisi2
 225              		.loc 1 116 9 view .LVU54
 226 004a 0129     		cmp	r1, #1
 227 004c F8D1     		bne	.L29
 228 004e D8B2     		uxtb	r0, r3
 229              	.LVL15:
 230              	.L19:
 117:Core/Src/MIDI_event.c **** 						break;
 118:Core/Src/MIDI_event.c **** 				}
 119:Core/Src/MIDI_event.c **** 				currentPitch = i; 
 231              		.loc 1 119 5 is_stmt 1 view .LVU55
 232              		.loc 1 119 18 is_stmt 0 view .LVU56
 233 0050 2870     		strb	r0, [r5]
 234              	.LVL16:
 235              	.L11:
 236              		.loc 1 119 18 view .LVU57
 237              	.LBE6:
 238              	.LBE5:
 120:Core/Src/MIDI_event.c **** 			}
 121:Core/Src/MIDI_event.c **** 		}
 122:Core/Src/MIDI_event.c **** 		break;
 123:Core/Src/MIDI_event.c **** 	
 124:Core/Src/MIDI_event.c **** 	case 0x90: // Note On
 125:Core/Src/MIDI_event.c **** 		uint8_t noteOn = pack.evnt1;
 126:Core/Src/MIDI_event.c **** 		velocity = pack.evnt2;
 127:Core/Src/MIDI_event.c **** 		/*********************  Note On *************************/	
 128:Core/Src/MIDI_event.c **** 		if (velocity > 0) 
 129:Core/Src/MIDI_event.c **** 		{			
 130:Core/Src/MIDI_event.c **** 			currentPitch = noteOn;
 131:Core/Src/MIDI_event.c **** 			noteOn_velocity = velocity;
 132:Core/Src/MIDI_event.c **** 			ADSR_keyOn(&adsr_amp); // start envelopes
 133:Core/Src/MIDI_event.c **** 			ADSR_keyOn(&adsr_filt);
 134:Core/Src/MIDI_event.c **** 			ADSR_keyOn(&adsr_index);
 135:Core/Src/MIDI_event.c **** 			//SEGGER_RTT_printf(0, "Note ON, pitch %u\r\n", currentPitch); // debug
 136:Core/Src/MIDI_event.c **** 			HAL_GPIO_WritePin(LD5_GPIO_Port, LD5_Pin, GPIO_PIN_SET); // red LED ON when incoming MIDI note o
 137:Core/Src/MIDI_event.c **** 			notesCount++;
 138:Core/Src/MIDI_event.c **** 			notes_Active[noteOn] = 1;
 139:Core/Src/MIDI_event.c **** 		}
 140:Core/Src/MIDI_event.c **** 		/*********************  Note Off *************************/
 141:Core/Src/MIDI_event.c **** 		else //  common implementation in MIDI devices: Note Off = Note On with velocity 0
 142:Core/Src/MIDI_event.c **** 		{			
 143:Core/Src/MIDI_event.c **** 			notes_Active[noteOn] = 0;
 144:Core/Src/MIDI_event.c **** 			notesCount--;
 145:Core/Src/MIDI_event.c **** 			//SEGGER_RTT_printf(0, "Note OFF, pitch %u\r\n", currentPitch); // debug
 146:Core/Src/MIDI_event.c **** 			if (notesCount <= 0)
 147:Core/Src/MIDI_event.c **** 			{
 148:Core/Src/MIDI_event.c **** 				ADSR_keyOff(&adsr_amp);		// release envelopes
 149:Core/Src/MIDI_event.c **** 				ADSR_keyOff(&adsr_filt);
ARM GAS  /var/folders/lp/x54gwt890xv47sdkqj1k04q40000gn/T//ccLERDkL.s 			page 8


 150:Core/Src/MIDI_event.c **** 				ADSR_keyOff(&adsr_index);
 151:Core/Src/MIDI_event.c **** 				notesCount = 0;
 152:Core/Src/MIDI_event.c **** 				HAL_GPIO_WritePin(LD5_GPIO_Port, LD5_Pin, GPIO_PIN_RESET); // red LED OFF when all MIDI notes o
 153:Core/Src/MIDI_event.c **** 			}
 154:Core/Src/MIDI_event.c **** 			else // legato
 155:Core/Src/MIDI_event.c **** 			{
 156:Core/Src/MIDI_event.c **** 				if (noteOn == currentPitch)
 157:Core/Src/MIDI_event.c **** 				{
 158:Core/Src/MIDI_event.c **** 					uint8_t i;
 159:Core/Src/MIDI_event.c **** 					for (i = 0; i < 128; i++)
 160:Core/Src/MIDI_event.c **** 					{
 161:Core/Src/MIDI_event.c **** 						if (notes_Active[i] == 1) // find the lowest key pressed
 162:Core/Src/MIDI_event.c **** 							break;
 163:Core/Src/MIDI_event.c **** 					}
 164:Core/Src/MIDI_event.c **** 					currentPitch = i; 
 165:Core/Src/MIDI_event.c **** 				}
 166:Core/Src/MIDI_event.c **** 			}
 167:Core/Src/MIDI_event.c **** 		}
 168:Core/Src/MIDI_event.c **** 	/********************* Other MIDI Messages *************************/	
 169:Core/Src/MIDI_event.c **** 	case 0xA0: 	// Polyphonic Pressure
 170:Core/Src/MIDI_event.c **** 		break;
 171:Core/Src/MIDI_event.c **** 	case 0xB0:	// Control Change
 172:Core/Src/MIDI_event.c **** 		// uint8_t cc_number = pack.evnt1;
 173:Core/Src/MIDI_event.c **** 		// uint8_t cc_value = pack.evnt2;
 174:Core/Src/MIDI_event.c **** 		// SEGGER_RTT_printf(0, "CC#  %u %u\r\n", cc_number, cc_value); // debug
 175:Core/Src/MIDI_event.c **** 		switch (pack.evnt1) // TODO CC number --> implement CC actions
 176:Core/Src/MIDI_event.c **** 		{
 177:Core/Src/MIDI_event.c **** 		case 20:
 178:Core/Src/MIDI_event.c **** 			break;
 179:Core/Src/MIDI_event.c **** 		case 7:
 180:Core/Src/MIDI_event.c **** 			break; // master volume
 181:Core/Src/MIDI_event.c **** 		}
 182:Core/Src/MIDI_event.c **** 		break;
 183:Core/Src/MIDI_event.c **** 	case 0xC0: // Program Change
 184:Core/Src/MIDI_event.c **** 		break;
 185:Core/Src/MIDI_event.c **** 	case 0xD0: // After Touch
 186:Core/Src/MIDI_event.c **** 		break;
 187:Core/Src/MIDI_event.c **** 	case 0xE0: // Pitch Bend
 188:Core/Src/MIDI_event.c **** 		pitchbend = pack.evnt2 * 128 + pack.evnt1;
 189:Core/Src/MIDI_event.c **** 		break;
 190:Core/Src/MIDI_event.c **** 	}
 191:Core/Src/MIDI_event.c **** }
 239              		.loc 1 191 1 view .LVU58
 240 0052 38BD     		pop	{r3, r4, r5, pc}
 241              	.LVL17:
 242              	.L13:
 243              	.LBB8:
 188:Core/Src/MIDI_event.c **** 		break;
 244              		.loc 1 188 3 is_stmt 1 view .LVU59
 188:Core/Src/MIDI_event.c **** 		break;
 245              		.loc 1 188 13 is_stmt 0 view .LVU60
 246 0054 2A4A     		ldr	r2, .L32+12
 188:Core/Src/MIDI_event.c **** 		break;
 247              		.loc 1 188 32 view .LVU61
 248 0056 04EBC113 		add	r3, r4, r1, lsl #7
 249              	.LVL18:
 188:Core/Src/MIDI_event.c **** 		break;
ARM GAS  /var/folders/lp/x54gwt890xv47sdkqj1k04q40000gn/T//ccLERDkL.s 			page 9


 250              		.loc 1 188 13 view .LVU62
 251 005a 1380     		strh	r3, [r2]	@ movhi
 189:Core/Src/MIDI_event.c **** 	}
 252              		.loc 1 189 3 is_stmt 1 view .LVU63
 253              	.LBE8:
 254              		.loc 1 191 1 is_stmt 0 view .LVU64
 255 005c 38BD     		pop	{r3, r4, r5, pc}
 256              	.LVL19:
 257              	.L12:
 258              	.LBB9:
 125:Core/Src/MIDI_event.c **** 		velocity = pack.evnt2;
 259              		.loc 1 125 3 is_stmt 1 view .LVU65
 126:Core/Src/MIDI_event.c **** 		/*********************  Note On *************************/	
 260              		.loc 1 126 3 view .LVU66
 126:Core/Src/MIDI_event.c **** 		/*********************  Note On *************************/	
 261              		.loc 1 126 12 is_stmt 0 view .LVU67
 262 005e 2948     		ldr	r0, .L32+16
 263              	.LVL20:
 126:Core/Src/MIDI_event.c **** 		/*********************  Note On *************************/	
 264              		.loc 1 126 12 view .LVU68
 265 0060 0370     		strb	r3, [r0]
 128:Core/Src/MIDI_event.c **** 		{			
 266              		.loc 1 128 3 is_stmt 1 view .LVU69
 128:Core/Src/MIDI_event.c **** 		{			
 267              		.loc 1 128 6 is_stmt 0 view .LVU70
 268 0062 C9B9     		cbnz	r1, .L30
 143:Core/Src/MIDI_event.c **** 			notesCount--;
 269              		.loc 1 143 4 is_stmt 1 view .LVU71
 144:Core/Src/MIDI_event.c **** 			//SEGGER_RTT_printf(0, "Note OFF, pitch %u\r\n", currentPitch); // debug
 270              		.loc 1 144 14 is_stmt 0 view .LVU72
 271 0064 234D     		ldr	r5, .L32
 143:Core/Src/MIDI_event.c **** 			notesCount--;
 272              		.loc 1 143 25 view .LVU73
 273 0066 244A     		ldr	r2, .L32+4
 274 0068 1355     		strb	r3, [r2, r4]
 144:Core/Src/MIDI_event.c **** 			//SEGGER_RTT_printf(0, "Note OFF, pitch %u\r\n", currentPitch); // debug
 275              		.loc 1 144 4 is_stmt 1 view .LVU74
 144:Core/Src/MIDI_event.c **** 			//SEGGER_RTT_printf(0, "Note OFF, pitch %u\r\n", currentPitch); // debug
 276              		.loc 1 144 14 is_stmt 0 view .LVU75
 277 006a 2B78     		ldrb	r3, [r5]	@ zero_extendqisi2
 278              	.LVL21:
 144:Core/Src/MIDI_event.c **** 			//SEGGER_RTT_printf(0, "Note OFF, pitch %u\r\n", currentPitch); // debug
 279              		.loc 1 144 14 view .LVU76
 280 006c 013B     		subs	r3, r3, #1
 281 006e 5BB2     		sxtb	r3, r3
 146:Core/Src/MIDI_event.c **** 			{
 282              		.loc 1 146 7 view .LVU77
 283 0070 002B     		cmp	r3, #0
 144:Core/Src/MIDI_event.c **** 			//SEGGER_RTT_printf(0, "Note OFF, pitch %u\r\n", currentPitch); // debug
 284              		.loc 1 144 14 view .LVU78
 285 0072 2B70     		strb	r3, [r5]
 146:Core/Src/MIDI_event.c **** 			{
 286              		.loc 1 146 4 is_stmt 1 view .LVU79
 146:Core/Src/MIDI_event.c **** 			{
 287              		.loc 1 146 7 is_stmt 0 view .LVU80
 288 0074 2BDD     		ble	.L21
 156:Core/Src/MIDI_event.c **** 				{
ARM GAS  /var/folders/lp/x54gwt890xv47sdkqj1k04q40000gn/T//ccLERDkL.s 			page 10


 289              		.loc 1 156 5 is_stmt 1 view .LVU81
 156:Core/Src/MIDI_event.c **** 				{
 290              		.loc 1 156 16 is_stmt 0 view .LVU82
 291 0076 214D     		ldr	r5, .L32+8
 156:Core/Src/MIDI_event.c **** 				{
 292              		.loc 1 156 8 view .LVU83
 293 0078 2B78     		ldrb	r3, [r5]	@ zero_extendqisi2
 294 007a A342     		cmp	r3, r4
 295 007c E9D1     		bne	.L11
 296 007e 1346     		mov	r3, r2
 297 0080 0A46     		mov	r2, r1
 298 0082 02E0     		b	.L24
 299              	.LVL22:
 300              	.L31:
 301              	.LBB7:
 159:Core/Src/MIDI_event.c **** 					{
 302              		.loc 1 159 20 discriminator 1 view .LVU84
 303 0084 0132     		adds	r2, r2, #1
 304              	.LVL23:
 159:Core/Src/MIDI_event.c **** 					{
 305              		.loc 1 159 20 discriminator 1 view .LVU85
 306 0086 802A     		cmp	r2, #128
 307 0088 04D0     		beq	.L25
 308              	.LVL24:
 309              	.L24:
 161:Core/Src/MIDI_event.c **** 							break;
 310              		.loc 1 161 7 is_stmt 1 view .LVU86
 159:Core/Src/MIDI_event.c **** 					{
 311              		.loc 1 159 28 discriminator 2 view .LVU87
 159:Core/Src/MIDI_event.c **** 					{
 312              		.loc 1 159 20 discriminator 1 view .LVU88
 161:Core/Src/MIDI_event.c **** 							break;
 313              		.loc 1 161 23 is_stmt 0 view .LVU89
 314 008a 13F8011B 		ldrb	r1, [r3], #1	@ zero_extendqisi2
 161:Core/Src/MIDI_event.c **** 							break;
 315              		.loc 1 161 10 view .LVU90
 316 008e 0129     		cmp	r1, #1
 317 0090 F8D1     		bne	.L31
 318 0092 D2B2     		uxtb	r2, r2
 319              	.LVL25:
 320              	.L25:
 164:Core/Src/MIDI_event.c **** 				}
 321              		.loc 1 164 6 is_stmt 1 view .LVU91
 164:Core/Src/MIDI_event.c **** 				}
 322              		.loc 1 164 19 is_stmt 0 view .LVU92
 323 0094 2A70     		strb	r2, [r5]
 324              	.LBE7:
 325              	.LBE9:
 326              		.loc 1 191 1 view .LVU93
 327 0096 38BD     		pop	{r3, r4, r5, pc}
 328              	.LVL26:
 329              	.L30:
 330              	.LBB10:
 130:Core/Src/MIDI_event.c **** 			noteOn_velocity = velocity;
 331              		.loc 1 130 4 is_stmt 1 view .LVU94
 130:Core/Src/MIDI_event.c **** 			noteOn_velocity = velocity;
 332              		.loc 1 130 17 is_stmt 0 view .LVU95
ARM GAS  /var/folders/lp/x54gwt890xv47sdkqj1k04q40000gn/T//ccLERDkL.s 			page 11


 333 0098 1848     		ldr	r0, .L32+8
 131:Core/Src/MIDI_event.c **** 			ADSR_keyOn(&adsr_amp); // start envelopes
 334              		.loc 1 131 20 view .LVU96
 335 009a 1B49     		ldr	r1, .L32+20
 130:Core/Src/MIDI_event.c **** 			noteOn_velocity = velocity;
 336              		.loc 1 130 17 view .LVU97
 337 009c 0270     		strb	r2, [r0]
 131:Core/Src/MIDI_event.c **** 			ADSR_keyOn(&adsr_amp); // start envelopes
 338              		.loc 1 131 4 is_stmt 1 view .LVU98
 132:Core/Src/MIDI_event.c **** 			ADSR_keyOn(&adsr_filt);
 339              		.loc 1 132 4 is_stmt 0 view .LVU99
 340 009e 1B48     		ldr	r0, .L32+24
 131:Core/Src/MIDI_event.c **** 			ADSR_keyOn(&adsr_amp); // start envelopes
 341              		.loc 1 131 20 view .LVU100
 342 00a0 0B70     		strb	r3, [r1]
 132:Core/Src/MIDI_event.c **** 			ADSR_keyOn(&adsr_filt);
 343              		.loc 1 132 4 is_stmt 1 view .LVU101
 344 00a2 FFF7FEFF 		bl	ADSR_keyOn
 345              	.LVL27:
 133:Core/Src/MIDI_event.c **** 			ADSR_keyOn(&adsr_index);
 346              		.loc 1 133 4 view .LVU102
 347 00a6 1A48     		ldr	r0, .L32+28
 348 00a8 FFF7FEFF 		bl	ADSR_keyOn
 349              	.LVL28:
 134:Core/Src/MIDI_event.c **** 			//SEGGER_RTT_printf(0, "Note ON, pitch %u\r\n", currentPitch); // debug
 350              		.loc 1 134 4 view .LVU103
 351 00ac 1948     		ldr	r0, .L32+32
 352 00ae FFF7FEFF 		bl	ADSR_keyOn
 353              	.LVL29:
 136:Core/Src/MIDI_event.c **** 			notesCount++;
 354              		.loc 1 136 4 view .LVU104
 355 00b2 1948     		ldr	r0, .L32+36
 356 00b4 0122     		movs	r2, #1
 357 00b6 4FF48041 		mov	r1, #16384
 358 00ba FFF7FEFF 		bl	HAL_GPIO_WritePin
 359              	.LVL30:
 137:Core/Src/MIDI_event.c **** 			notes_Active[noteOn] = 1;
 360              		.loc 1 137 4 view .LVU105
 137:Core/Src/MIDI_event.c **** 			notes_Active[noteOn] = 1;
 361              		.loc 1 137 14 is_stmt 0 view .LVU106
 362 00be 0D4A     		ldr	r2, .L32
 138:Core/Src/MIDI_event.c **** 		}
 363              		.loc 1 138 25 view .LVU107
 364 00c0 0D49     		ldr	r1, .L32+4
 137:Core/Src/MIDI_event.c **** 			notes_Active[noteOn] = 1;
 365              		.loc 1 137 14 view .LVU108
 366 00c2 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 138:Core/Src/MIDI_event.c **** 		}
 367              		.loc 1 138 25 view .LVU109
 368 00c4 0120     		movs	r0, #1
 137:Core/Src/MIDI_event.c **** 			notes_Active[noteOn] = 1;
 369              		.loc 1 137 14 view .LVU110
 370 00c6 0344     		add	r3, r3, r0
 138:Core/Src/MIDI_event.c **** 		}
 371              		.loc 1 138 25 view .LVU111
 372 00c8 0855     		strb	r0, [r1, r4]
 137:Core/Src/MIDI_event.c **** 			notes_Active[noteOn] = 1;
ARM GAS  /var/folders/lp/x54gwt890xv47sdkqj1k04q40000gn/T//ccLERDkL.s 			page 12


 373              		.loc 1 137 14 view .LVU112
 374 00ca 1370     		strb	r3, [r2]
 138:Core/Src/MIDI_event.c **** 		}
 375              		.loc 1 138 4 is_stmt 1 view .LVU113
 376              	.LBE10:
 377              		.loc 1 191 1 is_stmt 0 view .LVU114
 378 00cc 38BD     		pop	{r3, r4, r5, pc}
 379              	.LVL31:
 380              	.L21:
 381              	.LBB11:
 103:Core/Src/MIDI_event.c **** 			ADSR_keyOff(&adsr_filt);
 382              		.loc 1 103 4 is_stmt 1 view .LVU115
 383 00ce 0F48     		ldr	r0, .L32+24
 384 00d0 FFF7FEFF 		bl	ADSR_keyOff
 385              	.LVL32:
 104:Core/Src/MIDI_event.c **** 			ADSR_keyOff(&adsr_index);
 386              		.loc 1 104 4 view .LVU116
 387 00d4 0E48     		ldr	r0, .L32+28
 388 00d6 FFF7FEFF 		bl	ADSR_keyOff
 389              	.LVL33:
 105:Core/Src/MIDI_event.c **** 			notesCount = 0;
 390              		.loc 1 105 4 view .LVU117
 391 00da 0E48     		ldr	r0, .L32+32
 392 00dc FFF7FEFF 		bl	ADSR_keyOff
 393              	.LVL34:
 106:Core/Src/MIDI_event.c **** 			HAL_GPIO_WritePin(LD5_GPIO_Port, LD5_Pin, GPIO_PIN_RESET);
 394              		.loc 1 106 4 view .LVU118
 106:Core/Src/MIDI_event.c **** 			HAL_GPIO_WritePin(LD5_GPIO_Port, LD5_Pin, GPIO_PIN_RESET);
 395              		.loc 1 106 15 is_stmt 0 view .LVU119
 396 00e0 0022     		movs	r2, #0
 397 00e2 2A70     		strb	r2, [r5]
 107:Core/Src/MIDI_event.c **** 		}
 398              		.loc 1 107 4 is_stmt 1 view .LVU120
 399              	.LBE11:
 400              		.loc 1 191 1 is_stmt 0 view .LVU121
 401 00e4 BDE83840 		pop	{r3, r4, r5, lr}
 402              		.cfi_restore 14
 403              		.cfi_restore 5
 404              		.cfi_restore 4
 405              		.cfi_restore 3
 406              		.cfi_def_cfa_offset 0
 407              	.LBB12:
 107:Core/Src/MIDI_event.c **** 		}
 408              		.loc 1 107 4 view .LVU122
 409 00e8 0B48     		ldr	r0, .L32+36
 410 00ea 4FF48041 		mov	r1, #16384
 411 00ee FFF7FEBF 		b	HAL_GPIO_WritePin
 412              	.LVL35:
 413              	.L33:
 414 00f2 00BF     		.align	2
 415              	.L32:
 416 00f4 00000000 		.word	notesCount
 417 00f8 00000000 		.word	notes_Active
 418 00fc 00000000 		.word	currentPitch
 419 0100 00000000 		.word	pitchbend
 420 0104 00000000 		.word	velocity
 421 0108 00000000 		.word	noteOn_velocity
ARM GAS  /var/folders/lp/x54gwt890xv47sdkqj1k04q40000gn/T//ccLERDkL.s 			page 13


 422 010c 00000000 		.word	adsr_amp
 423 0110 00000000 		.word	adsr_filt
 424 0114 00000000 		.word	adsr_index
 425 0118 000C0240 		.word	1073875968
 426              	.LBE12:
 427              		.cfi_endproc
 428              	.LFE244:
 430              		.section	.text.USBH_UserProcess_callback,"ax",%progbits
 431              		.align	1
 432              		.p2align 2,,3
 433              		.global	USBH_UserProcess_callback
 434              		.syntax unified
 435              		.thumb
 436              		.thumb_func
 438              	USBH_UserProcess_callback:
 439              	.LVL36:
 440              	.LFB245:
 192:Core/Src/MIDI_event.c **** 
 193:Core/Src/MIDI_event.c **** 
 194:Core/Src/MIDI_event.c **** 
 195:Core/Src/MIDI_event.c **** 
 196:Core/Src/MIDI_event.c **** /*=================================================================================================
 197:Core/Src/MIDI_event.c **** /**
 198:Core/Src/MIDI_event.c ****  * @brief  User Process function callback
 199:Core/Src/MIDI_event.c ****  * @param  phost: Host Handle
 200:Core/Src/MIDI_event.c ****  * @param  id: Host Library user message ID
 201:Core/Src/MIDI_event.c ****  * @retval none
 202:Core/Src/MIDI_event.c ****  */
 203:Core/Src/MIDI_event.c **** void USBH_UserProcess_callback(USBH_HandleTypeDef *pHost, uint8_t vId)
 204:Core/Src/MIDI_event.c **** {
 441              		.loc 1 204 1 is_stmt 1 view -0
 442              		.cfi_startproc
 443              		@ args = 0, pretend = 0, frame = 0
 444              		@ frame_needed = 0, uses_anonymous_args = 0
 205:Core/Src/MIDI_event.c **** 	switch (vId)
 445              		.loc 1 205 2 view .LVU124
 446 0000 0429     		cmp	r1, #4
 447 0002 17D0     		beq	.L35
 448 0004 0529     		cmp	r1, #5
 204:Core/Src/MIDI_event.c **** 	switch (vId)
 449              		.loc 1 204 1 is_stmt 0 view .LVU125
 450 0006 10B5     		push	{r4, lr}
 451              		.cfi_def_cfa_offset 8
 452              		.cfi_offset 4, -8
 453              		.cfi_offset 14, -4
 454 0008 0B46     		mov	r3, r1
 455              		.loc 1 205 2 view .LVU126
 456 000a 02D0     		beq	.L36
 457 000c 0229     		cmp	r1, #2
 458 000e 19D0     		beq	.L37
 206:Core/Src/MIDI_event.c **** 	{
 207:Core/Src/MIDI_event.c **** 	case HOST_USER_SELECT_CONFIGURATION:
 208:Core/Src/MIDI_event.c **** 		break;
 209:Core/Src/MIDI_event.c **** 
 210:Core/Src/MIDI_event.c **** 	case HOST_USER_DISCONNECTION:
 211:Core/Src/MIDI_event.c **** 		Appli_state = MIDI_APPLICATION_DISCONNECT;
 212:Core/Src/MIDI_event.c **** 		// 4 - green, 3 - orange, 5 - red, 6 - blue
ARM GAS  /var/folders/lp/x54gwt890xv47sdkqj1k04q40000gn/T//ccLERDkL.s 			page 14


 213:Core/Src/MIDI_event.c **** 		HAL_GPIO_WritePin(LD4_GPIO_Port, LD4_Pin, GPIO_PIN_RESET);
 214:Core/Src/MIDI_event.c **** 		HAL_GPIO_WritePin(LD6_GPIO_Port, LD6_Pin, GPIO_PIN_RESET);
 215:Core/Src/MIDI_event.c **** 		break;
 216:Core/Src/MIDI_event.c **** 
 217:Core/Src/MIDI_event.c **** 	case HOST_USER_CLASS_ACTIVE:
 218:Core/Src/MIDI_event.c **** 		Appli_state = MIDI_APPLICATION_READY;
 219:Core/Src/MIDI_event.c **** 		HAL_GPIO_WritePin(LD4_GPIO_Port, LD4_Pin, GPIO_PIN_SET);
 220:Core/Src/MIDI_event.c **** 		HAL_GPIO_WritePin(LD6_GPIO_Port, LD6_Pin, GPIO_PIN_RESET);
 221:Core/Src/MIDI_event.c **** 		HAL_GPIO_WritePin(LD5_GPIO_Port, LD5_Pin, GPIO_PIN_RESET);
 222:Core/Src/MIDI_event.c **** 		break;
 223:Core/Src/MIDI_event.c **** 
 224:Core/Src/MIDI_event.c **** 	case HOST_USER_CONNECTION:
 225:Core/Src/MIDI_event.c **** 		Appli_state = MIDI_APPLICATION_START;
 226:Core/Src/MIDI_event.c **** 		HAL_GPIO_WritePin(GPIOD, 0x8000, GPIO_PIN_SET);
 227:Core/Src/MIDI_event.c **** 		break;
 228:Core/Src/MIDI_event.c **** 
 229:Core/Src/MIDI_event.c **** 	default:
 230:Core/Src/MIDI_event.c **** 		break;
 231:Core/Src/MIDI_event.c **** 	}
 232:Core/Src/MIDI_event.c **** }
 459              		.loc 1 232 1 view .LVU127
 460 0010 10BD     		pop	{r4, pc}
 461              	.L36:
 211:Core/Src/MIDI_event.c **** 		// 4 - green, 3 - orange, 5 - red, 6 - blue
 462              		.loc 1 211 3 is_stmt 1 view .LVU128
 211:Core/Src/MIDI_event.c **** 		// 4 - green, 3 - orange, 5 - red, 6 - blue
 463              		.loc 1 211 15 is_stmt 0 view .LVU129
 464 0012 174B     		ldr	r3, .L43
 213:Core/Src/MIDI_event.c **** 		HAL_GPIO_WritePin(LD6_GPIO_Port, LD6_Pin, GPIO_PIN_RESET);
 465              		.loc 1 213 3 view .LVU130
 466 0014 1748     		ldr	r0, .L43+4
 467              	.LVL37:
 211:Core/Src/MIDI_event.c **** 		// 4 - green, 3 - orange, 5 - red, 6 - blue
 468              		.loc 1 211 15 view .LVU131
 469 0016 0424     		movs	r4, #4
 213:Core/Src/MIDI_event.c **** 		HAL_GPIO_WritePin(LD6_GPIO_Port, LD6_Pin, GPIO_PIN_RESET);
 470              		.loc 1 213 3 view .LVU132
 471 0018 0022     		movs	r2, #0
 472 001a 4FF48051 		mov	r1, #4096
 473              	.LVL38:
 211:Core/Src/MIDI_event.c **** 		// 4 - green, 3 - orange, 5 - red, 6 - blue
 474              		.loc 1 211 15 view .LVU133
 475 001e 1C70     		strb	r4, [r3]
 213:Core/Src/MIDI_event.c **** 		HAL_GPIO_WritePin(LD6_GPIO_Port, LD6_Pin, GPIO_PIN_RESET);
 476              		.loc 1 213 3 is_stmt 1 view .LVU134
 477 0020 FFF7FEFF 		bl	HAL_GPIO_WritePin
 478              	.LVL39:
 214:Core/Src/MIDI_event.c **** 		break;
 479              		.loc 1 214 3 view .LVU135
 480              		.loc 1 232 1 is_stmt 0 view .LVU136
 481 0024 BDE81040 		pop	{r4, lr}
 482              		.cfi_restore 14
 483              		.cfi_restore 4
 484              		.cfi_def_cfa_offset 0
 214:Core/Src/MIDI_event.c **** 		break;
 485              		.loc 1 214 3 view .LVU137
 486 0028 1248     		ldr	r0, .L43+4
ARM GAS  /var/folders/lp/x54gwt890xv47sdkqj1k04q40000gn/T//ccLERDkL.s 			page 15


 487 002a 0022     		movs	r2, #0
 488 002c 4FF40041 		mov	r1, #32768
 489 0030 FFF7FEBF 		b	HAL_GPIO_WritePin
 490              	.LVL40:
 491              	.L35:
 225:Core/Src/MIDI_event.c **** 		HAL_GPIO_WritePin(GPIOD, 0x8000, GPIO_PIN_SET);
 492              		.loc 1 225 3 is_stmt 1 view .LVU138
 225:Core/Src/MIDI_event.c **** 		HAL_GPIO_WritePin(GPIOD, 0x8000, GPIO_PIN_SET);
 493              		.loc 1 225 15 is_stmt 0 view .LVU139
 494 0034 0E4B     		ldr	r3, .L43
 226:Core/Src/MIDI_event.c **** 		break;
 495              		.loc 1 226 3 view .LVU140
 496 0036 0F48     		ldr	r0, .L43+4
 497              	.LVL41:
 225:Core/Src/MIDI_event.c **** 		HAL_GPIO_WritePin(GPIOD, 0x8000, GPIO_PIN_SET);
 498              		.loc 1 225 15 view .LVU141
 499 0038 0122     		movs	r2, #1
 226:Core/Src/MIDI_event.c **** 		break;
 500              		.loc 1 226 3 view .LVU142
 501 003a 4FF40041 		mov	r1, #32768
 502              	.LVL42:
 225:Core/Src/MIDI_event.c **** 		HAL_GPIO_WritePin(GPIOD, 0x8000, GPIO_PIN_SET);
 503              		.loc 1 225 15 view .LVU143
 504 003e 1A70     		strb	r2, [r3]
 226:Core/Src/MIDI_event.c **** 		break;
 505              		.loc 1 226 3 is_stmt 1 view .LVU144
 506 0040 FFF7FEBF 		b	HAL_GPIO_WritePin
 507              	.LVL43:
 508              	.L37:
 509              		.cfi_def_cfa_offset 8
 510              		.cfi_offset 4, -8
 511              		.cfi_offset 14, -4
 218:Core/Src/MIDI_event.c **** 		HAL_GPIO_WritePin(LD4_GPIO_Port, LD4_Pin, GPIO_PIN_SET);
 512              		.loc 1 218 3 view .LVU145
 218:Core/Src/MIDI_event.c **** 		HAL_GPIO_WritePin(LD4_GPIO_Port, LD4_Pin, GPIO_PIN_SET);
 513              		.loc 1 218 15 is_stmt 0 view .LVU146
 514 0044 0A4C     		ldr	r4, .L43
 219:Core/Src/MIDI_event.c **** 		HAL_GPIO_WritePin(LD6_GPIO_Port, LD6_Pin, GPIO_PIN_RESET);
 515              		.loc 1 219 3 view .LVU147
 516 0046 0B48     		ldr	r0, .L43+4
 517              	.LVL44:
 218:Core/Src/MIDI_event.c **** 		HAL_GPIO_WritePin(LD4_GPIO_Port, LD4_Pin, GPIO_PIN_SET);
 518              		.loc 1 218 15 view .LVU148
 519 0048 2370     		strb	r3, [r4]
 219:Core/Src/MIDI_event.c **** 		HAL_GPIO_WritePin(LD6_GPIO_Port, LD6_Pin, GPIO_PIN_RESET);
 520              		.loc 1 219 3 is_stmt 1 view .LVU149
 521 004a 0122     		movs	r2, #1
 522 004c 4FF48051 		mov	r1, #4096
 523              	.LVL45:
 219:Core/Src/MIDI_event.c **** 		HAL_GPIO_WritePin(LD6_GPIO_Port, LD6_Pin, GPIO_PIN_RESET);
 524              		.loc 1 219 3 is_stmt 0 view .LVU150
 525 0050 FFF7FEFF 		bl	HAL_GPIO_WritePin
 526              	.LVL46:
 220:Core/Src/MIDI_event.c **** 		HAL_GPIO_WritePin(LD5_GPIO_Port, LD5_Pin, GPIO_PIN_RESET);
 527              		.loc 1 220 3 is_stmt 1 view .LVU151
 528 0054 0748     		ldr	r0, .L43+4
 529 0056 0022     		movs	r2, #0
ARM GAS  /var/folders/lp/x54gwt890xv47sdkqj1k04q40000gn/T//ccLERDkL.s 			page 16


 530 0058 4FF40041 		mov	r1, #32768
 531 005c FFF7FEFF 		bl	HAL_GPIO_WritePin
 532              	.LVL47:
 221:Core/Src/MIDI_event.c **** 		break;
 533              		.loc 1 221 3 view .LVU152
 534              		.loc 1 232 1 is_stmt 0 view .LVU153
 535 0060 BDE81040 		pop	{r4, lr}
 536              		.cfi_restore 14
 537              		.cfi_restore 4
 538              		.cfi_def_cfa_offset 0
 221:Core/Src/MIDI_event.c **** 		break;
 539              		.loc 1 221 3 view .LVU154
 540 0064 0348     		ldr	r0, .L43+4
 541 0066 0022     		movs	r2, #0
 542 0068 4FF48041 		mov	r1, #16384
 543 006c FFF7FEBF 		b	HAL_GPIO_WritePin
 544              	.LVL48:
 545              	.L44:
 546              		.align	2
 547              	.L43:
 548 0070 00000000 		.word	Appli_state
 549 0074 000C0240 		.word	1073875968
 550              		.cfi_endproc
 551              	.LFE245:
 553              		.section	.text.HAL_GPIO_EXTI_Callback,"ax",%progbits
 554              		.align	1
 555              		.p2align 2,,3
 556              		.global	HAL_GPIO_EXTI_Callback
 557              		.syntax unified
 558              		.thumb
 559              		.thumb_func
 561              	HAL_GPIO_EXTI_Callback:
 562              	.LVL49:
 563              	.LFB246:
 233:Core/Src/MIDI_event.c **** 
 234:Core/Src/MIDI_event.c **** 
 235:Core/Src/MIDI_event.c **** /**
 236:Core/Src/MIDI_event.c ****  * @brief User button EXTI Line0 External Interrupt ISR Handler CallBack --> MIDI panic --> all not
 237:Core/Src/MIDI_event.c ****  * 
 238:Core/Src/MIDI_event.c ****  * @param GPIO_Pin 
 239:Core/Src/MIDI_event.c ****  */
 240:Core/Src/MIDI_event.c **** void HAL_GPIO_EXTI_Callback(uint16_t GPIO_Pin)
 241:Core/Src/MIDI_event.c **** {
 564              		.loc 1 241 1 is_stmt 1 view -0
 565              		.cfi_startproc
 566              		@ args = 0, pretend = 0, frame = 0
 567              		@ frame_needed = 0, uses_anonymous_args = 0
 242:Core/Src/MIDI_event.c **** 	allNotesOff();
 568              		.loc 1 242 2 view .LVU156
 569              	.LBB16:
 570              	.LBI16:
  41:Core/Src/MIDI_event.c **** {
 571              		.loc 1 41 6 view .LVU157
 572              	.LBB17:
  43:Core/Src/MIDI_event.c **** 	{
 573              		.loc 1 43 2 view .LVU158
 574              	.LBB18:
ARM GAS  /var/folders/lp/x54gwt890xv47sdkqj1k04q40000gn/T//ccLERDkL.s 			page 17


  43:Core/Src/MIDI_event.c **** 	{
 575              		.loc 1 43 7 view .LVU159
  43:Core/Src/MIDI_event.c **** 	{
 576              		.loc 1 43 24 discriminator 1 view .LVU160
 577              	.LBE18:
 578              	.LBE17:
 579              	.LBE16:
 241:Core/Src/MIDI_event.c **** 	allNotesOff();
 580              		.loc 1 241 1 is_stmt 0 view .LVU161
 581 0000 2DE9F843 		push	{r3, r4, r5, r6, r7, r8, r9, lr}
 582              		.cfi_def_cfa_offset 32
 583              		.cfi_offset 3, -32
 584              		.cfi_offset 4, -28
 585              		.cfi_offset 5, -24
 586              		.cfi_offset 6, -20
 587              		.cfi_offset 7, -16
 588              		.cfi_offset 8, -12
 589              		.cfi_offset 9, -8
 590              		.cfi_offset 14, -4
 591 0004 0F4C     		ldr	r4, .L49
 592              	.LBB22:
 593              	.LBB20:
 594              	.LBB19:
  46:Core/Src/MIDI_event.c **** 		ADSR_keyOff(&adsr_filt);
 595              		.loc 1 46 3 view .LVU162
 596 0006 DFF84C90 		ldr	r9, .L49+16
  47:Core/Src/MIDI_event.c **** 		ADSR_keyOff(&adsr_index);
 597              		.loc 1 47 3 view .LVU163
 598 000a DFF84C80 		ldr	r8, .L49+20
  48:Core/Src/MIDI_event.c **** 	}
 599              		.loc 1 48 3 view .LVU164
 600 000e 0E4F     		ldr	r7, .L49+4
 601 0010 04F18006 		add	r6, r4, #128
 602              	.LVL50:
 603              	.L46:
  45:Core/Src/MIDI_event.c **** 		ADSR_keyOff(&adsr_amp); // release envelopes
 604              		.loc 1 45 3 is_stmt 1 view .LVU165
  45:Core/Src/MIDI_event.c **** 		ADSR_keyOff(&adsr_amp); // release envelopes
 605              		.loc 1 45 19 is_stmt 0 view .LVU166
 606 0014 0025     		movs	r5, #0
 607 0016 04F8015F 		strb	r5, [r4, #1]!
 608              	.LVL51:
  46:Core/Src/MIDI_event.c **** 		ADSR_keyOff(&adsr_filt);
 609              		.loc 1 46 3 is_stmt 1 view .LVU167
 610 001a 4846     		mov	r0, r9
 611 001c FFF7FEFF 		bl	ADSR_keyOff
 612              	.LVL52:
  47:Core/Src/MIDI_event.c **** 		ADSR_keyOff(&adsr_index);
 613              		.loc 1 47 3 view .LVU168
 614 0020 4046     		mov	r0, r8
 615 0022 FFF7FEFF 		bl	ADSR_keyOff
 616              	.LVL53:
  48:Core/Src/MIDI_event.c **** 	}
 617              		.loc 1 48 3 view .LVU169
 618 0026 3846     		mov	r0, r7
 619 0028 FFF7FEFF 		bl	ADSR_keyOff
 620              	.LVL54:
ARM GAS  /var/folders/lp/x54gwt890xv47sdkqj1k04q40000gn/T//ccLERDkL.s 			page 18


  43:Core/Src/MIDI_event.c **** 	{
 621              		.loc 1 43 32 discriminator 3 view .LVU170
  43:Core/Src/MIDI_event.c **** 	{
 622              		.loc 1 43 24 discriminator 1 view .LVU171
 623 002c B442     		cmp	r4, r6
 624 002e F1D1     		bne	.L46
 625              	.LBE19:
  50:Core/Src/MIDI_event.c **** }
 626              		.loc 1 50 2 view .LVU172
  50:Core/Src/MIDI_event.c **** }
 627              		.loc 1 50 13 is_stmt 0 view .LVU173
 628 0030 064B     		ldr	r3, .L49+8
 629              	.LBE20:
 630              	.LBE22:
 243:Core/Src/MIDI_event.c **** 	HAL_GPIO_WritePin(LD5_GPIO_Port, LD5_Pin, GPIO_PIN_RESET); // red LED OFF when all MIDI notes off
 631              		.loc 1 243 2 view .LVU174
 632 0032 0748     		ldr	r0, .L49+12
 633              	.LBB23:
 634              	.LBB21:
  50:Core/Src/MIDI_event.c **** }
 635              		.loc 1 50 13 view .LVU175
 636 0034 1D70     		strb	r5, [r3]
 637              	.LVL55:
  50:Core/Src/MIDI_event.c **** }
 638              		.loc 1 50 13 view .LVU176
 639              	.LBE21:
 640              	.LBE23:
 641              		.loc 1 243 2 is_stmt 1 view .LVU177
 642 0036 2A46     		mov	r2, r5
 643 0038 4FF48041 		mov	r1, #16384
 244:Core/Src/MIDI_event.c **** }
 644              		.loc 1 244 1 is_stmt 0 view .LVU178
 645 003c BDE8F843 		pop	{r3, r4, r5, r6, r7, r8, r9, lr}
 646              		.cfi_restore 14
 647              		.cfi_restore 9
 648              		.cfi_restore 8
 649              		.cfi_restore 7
 650              		.cfi_restore 6
 651              		.cfi_restore 5
 652              		.cfi_restore 4
 653              		.cfi_restore 3
 654              		.cfi_def_cfa_offset 0
 243:Core/Src/MIDI_event.c **** 	HAL_GPIO_WritePin(LD5_GPIO_Port, LD5_Pin, GPIO_PIN_RESET); // red LED OFF when all MIDI notes off
 655              		.loc 1 243 2 view .LVU179
 656 0040 FFF7FEBF 		b	HAL_GPIO_WritePin
 657              	.LVL56:
 658              	.L50:
 659              		.align	2
 660              	.L49:
 661 0044 FFFFFFFF 		.word	notes_Active-1
 662 0048 00000000 		.word	adsr_index
 663 004c 00000000 		.word	notesCount
 664 0050 000C0240 		.word	1073875968
 665 0054 00000000 		.word	adsr_amp
 666 0058 00000000 		.word	adsr_filt
 667              		.cfi_endproc
 668              	.LFE246:
ARM GAS  /var/folders/lp/x54gwt890xv47sdkqj1k04q40000gn/T//ccLERDkL.s 			page 19


 670              		.global	notesCount
 671              		.section	.bss.notesCount,"aw",%nobits
 674              	notesCount:
 675 0000 00       		.space	1
 676              		.global	notes_Active
 677              		.section	.bss.notes_Active,"aw",%nobits
 678              		.align	2
 681              	notes_Active:
 682 0000 00000000 		.space	128
 682      00000000 
 682      00000000 
 682      00000000 
 682      00000000 
 683              		.global	noteOn_velocity
 684              		.section	.bss.noteOn_velocity,"aw",%nobits
 687              	noteOn_velocity:
 688 0000 00       		.space	1
 689              		.global	velocity
 690              		.section	.bss.velocity,"aw",%nobits
 693              	velocity:
 694 0000 00       		.space	1
 695              		.global	currentPitch
 696              		.section	.bss.currentPitch,"aw",%nobits
 699              	currentPitch:
 700 0000 00       		.space	1
 701              		.global	pitchbend
 702              		.section	.bss.pitchbend,"aw",%nobits
 703              		.align	1
 706              	pitchbend:
 707 0000 0000     		.space	2
 708              		.global	Appli_state
 709              		.section	.bss.Appli_state,"aw",%nobits
 712              	Appli_state:
 713 0000 00       		.space	1
 714              		.global	hUSBHost
 715              		.section	.bss.hUSBHost,"aw",%nobits
 716              		.align	2
 719              	hUSBHost:
 720 0000 00000000 		.space	1564
 720      00000000 
 720      00000000 
 720      00000000 
 720      00000000 
 721              		.text
 722              	.Letext0:
 723              		.file 2 "/Users/jr/Library/Application Support/Code/User/globalStorage/bmd.stm32-for-vscode/@xpack
 724              		.file 3 "/Users/jr/Library/Application Support/Code/User/globalStorage/bmd.stm32-for-vscode/@xpack
 725              		.file 4 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/stm32f407xx.h"
 726              		.file 5 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_gpio.h"
 727              		.file 6 "Middlewares/ST/STM32_USB_Host_Library/Core/Inc/usbh_def.h"
 728              		.file 7 "Core/Inc/usbh_MIDI.h"
 729              		.file 8 "Core/Inc/MIDI_application.h"
 730              		.file 9 "Core/Inc/ADSR_envelope.h"
ARM GAS  /var/folders/lp/x54gwt890xv47sdkqj1k04q40000gn/T//ccLERDkL.s 			page 20


DEFINED SYMBOLS
                            *ABS*:00000000 MIDI_event.c
/var/folders/lp/x54gwt890xv47sdkqj1k04q40000gn/T//ccLERDkL.s:21     .text.allNotesOff:00000000 $t
/var/folders/lp/x54gwt890xv47sdkqj1k04q40000gn/T//ccLERDkL.s:28     .text.allNotesOff:00000000 allNotesOff
/var/folders/lp/x54gwt890xv47sdkqj1k04q40000gn/T//ccLERDkL.s:95     .text.allNotesOff:00000038 $d
/var/folders/lp/x54gwt890xv47sdkqj1k04q40000gn/T//ccLERDkL.s:681    .bss.notes_Active:00000000 notes_Active
/var/folders/lp/x54gwt890xv47sdkqj1k04q40000gn/T//ccLERDkL.s:674    .bss.notesCount:00000000 notesCount
/var/folders/lp/x54gwt890xv47sdkqj1k04q40000gn/T//ccLERDkL.s:104    .text.MIDI_eventInit:00000000 $t
/var/folders/lp/x54gwt890xv47sdkqj1k04q40000gn/T//ccLERDkL.s:111    .text.MIDI_eventInit:00000000 MIDI_eventInit
/var/folders/lp/x54gwt890xv47sdkqj1k04q40000gn/T//ccLERDkL.s:128    .text.MIDI_eventInit:0000000c $d
/var/folders/lp/x54gwt890xv47sdkqj1k04q40000gn/T//ccLERDkL.s:706    .bss.pitchbend:00000000 pitchbend
/var/folders/lp/x54gwt890xv47sdkqj1k04q40000gn/T//ccLERDkL.s:133    .text.ProcessMIDI:00000000 $t
/var/folders/lp/x54gwt890xv47sdkqj1k04q40000gn/T//ccLERDkL.s:140    .text.ProcessMIDI:00000000 ProcessMIDI
/var/folders/lp/x54gwt890xv47sdkqj1k04q40000gn/T//ccLERDkL.s:416    .text.ProcessMIDI:000000f4 $d
/var/folders/lp/x54gwt890xv47sdkqj1k04q40000gn/T//ccLERDkL.s:699    .bss.currentPitch:00000000 currentPitch
/var/folders/lp/x54gwt890xv47sdkqj1k04q40000gn/T//ccLERDkL.s:693    .bss.velocity:00000000 velocity
/var/folders/lp/x54gwt890xv47sdkqj1k04q40000gn/T//ccLERDkL.s:687    .bss.noteOn_velocity:00000000 noteOn_velocity
/var/folders/lp/x54gwt890xv47sdkqj1k04q40000gn/T//ccLERDkL.s:431    .text.USBH_UserProcess_callback:00000000 $t
/var/folders/lp/x54gwt890xv47sdkqj1k04q40000gn/T//ccLERDkL.s:438    .text.USBH_UserProcess_callback:00000000 USBH_UserProcess_callback
/var/folders/lp/x54gwt890xv47sdkqj1k04q40000gn/T//ccLERDkL.s:548    .text.USBH_UserProcess_callback:00000070 $d
/var/folders/lp/x54gwt890xv47sdkqj1k04q40000gn/T//ccLERDkL.s:712    .bss.Appli_state:00000000 Appli_state
/var/folders/lp/x54gwt890xv47sdkqj1k04q40000gn/T//ccLERDkL.s:554    .text.HAL_GPIO_EXTI_Callback:00000000 $t
/var/folders/lp/x54gwt890xv47sdkqj1k04q40000gn/T//ccLERDkL.s:561    .text.HAL_GPIO_EXTI_Callback:00000000 HAL_GPIO_EXTI_Callback
/var/folders/lp/x54gwt890xv47sdkqj1k04q40000gn/T//ccLERDkL.s:661    .text.HAL_GPIO_EXTI_Callback:00000044 $d
/var/folders/lp/x54gwt890xv47sdkqj1k04q40000gn/T//ccLERDkL.s:675    .bss.notesCount:00000000 $d
/var/folders/lp/x54gwt890xv47sdkqj1k04q40000gn/T//ccLERDkL.s:678    .bss.notes_Active:00000000 $d
/var/folders/lp/x54gwt890xv47sdkqj1k04q40000gn/T//ccLERDkL.s:688    .bss.noteOn_velocity:00000000 $d
/var/folders/lp/x54gwt890xv47sdkqj1k04q40000gn/T//ccLERDkL.s:694    .bss.velocity:00000000 $d
/var/folders/lp/x54gwt890xv47sdkqj1k04q40000gn/T//ccLERDkL.s:700    .bss.currentPitch:00000000 $d
/var/folders/lp/x54gwt890xv47sdkqj1k04q40000gn/T//ccLERDkL.s:703    .bss.pitchbend:00000000 $d
/var/folders/lp/x54gwt890xv47sdkqj1k04q40000gn/T//ccLERDkL.s:713    .bss.Appli_state:00000000 $d
/var/folders/lp/x54gwt890xv47sdkqj1k04q40000gn/T//ccLERDkL.s:719    .bss.hUSBHost:00000000 hUSBHost
/var/folders/lp/x54gwt890xv47sdkqj1k04q40000gn/T//ccLERDkL.s:716    .bss.hUSBHost:00000000 $d

UNDEFINED SYMBOLS
ADSR_keyOff
adsr_index
adsr_amp
adsr_filt
ADSR_keyOn
HAL_GPIO_WritePin
