ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccs0vIiH.s 			page 1


   1              		.cpu cortex-m4
   2              		.arch armv7e-m
   3              		.fpu fpv4-sp-d16
   4              		.eabi_attribute 27, 1
   5              		.eabi_attribute 28, 1
   6              		.eabi_attribute 23, 1
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 2
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"SEGGER_RTT.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.rodata.SEGGER_RTT_ReadUpBufferNoLock.str1.4,"aMS",%progbits,1
  18              		.align	2
  19              	.LC0:
  20 0000 5465726D 		.ascii	"Terminal\000"
  20      696E616C 
  20      00
  21              		.section	.text.SEGGER_RTT_ReadUpBufferNoLock,"ax",%progbits
  22              		.align	1
  23              		.p2align 2,,3
  24              		.global	SEGGER_RTT_ReadUpBufferNoLock
  25              		.syntax unified
  26              		.thumb
  27              		.thumb_func
  29              	SEGGER_RTT_ReadUpBufferNoLock:
  30              	.LVL0:
  31              	.LFB5:
  32              		.file 1 "Core/Src/SEGGER_RTT.c"
   1:Core/Src/SEGGER_RTT.c **** /*********************************************************************
   2:Core/Src/SEGGER_RTT.c **** *                    SEGGER Microcontroller GmbH                     *
   3:Core/Src/SEGGER_RTT.c **** *                        The Embedded Experts                        *
   4:Core/Src/SEGGER_RTT.c **** **********************************************************************
   5:Core/Src/SEGGER_RTT.c **** *                                                                    *
   6:Core/Src/SEGGER_RTT.c **** *            (c) 1995 - 2019 SEGGER Microcontroller GmbH             *
   7:Core/Src/SEGGER_RTT.c **** *                                                                    *
   8:Core/Src/SEGGER_RTT.c **** *       www.segger.com     Support: support@segger.com               *
   9:Core/Src/SEGGER_RTT.c **** *                                                                    *
  10:Core/Src/SEGGER_RTT.c **** **********************************************************************
  11:Core/Src/SEGGER_RTT.c **** *                                                                    *
  12:Core/Src/SEGGER_RTT.c **** *       SEGGER RTT * Real Time Transfer for embedded targets         *
  13:Core/Src/SEGGER_RTT.c **** *                                                                    *
  14:Core/Src/SEGGER_RTT.c **** **********************************************************************
  15:Core/Src/SEGGER_RTT.c **** *                                                                    *
  16:Core/Src/SEGGER_RTT.c **** * All rights reserved.                                               *
  17:Core/Src/SEGGER_RTT.c **** *                                                                    *
  18:Core/Src/SEGGER_RTT.c **** * SEGGER strongly recommends to not make any changes                 *
  19:Core/Src/SEGGER_RTT.c **** * to or modify the source code of this software in order to stay     *
  20:Core/Src/SEGGER_RTT.c **** * compatible with the RTT protocol and J-Link.                       *
  21:Core/Src/SEGGER_RTT.c **** *                                                                    *
  22:Core/Src/SEGGER_RTT.c **** * Redistribution and use in source and binary forms, with or         *
  23:Core/Src/SEGGER_RTT.c **** * without modification, are permitted provided that the following    *
  24:Core/Src/SEGGER_RTT.c **** * condition is met:                                                  *
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccs0vIiH.s 			page 2


  25:Core/Src/SEGGER_RTT.c **** *                                                                    *
  26:Core/Src/SEGGER_RTT.c **** * o Redistributions of source code must retain the above copyright   *
  27:Core/Src/SEGGER_RTT.c **** *   notice, this condition and the following disclaimer.             *
  28:Core/Src/SEGGER_RTT.c **** *                                                                    *
  29:Core/Src/SEGGER_RTT.c **** * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND             *
  30:Core/Src/SEGGER_RTT.c **** * CONTRIBUTORS "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,        *
  31:Core/Src/SEGGER_RTT.c **** * INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF           *
  32:Core/Src/SEGGER_RTT.c **** * MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE           *
  33:Core/Src/SEGGER_RTT.c **** * DISCLAIMED. IN NO EVENT SHALL SEGGER Microcontroller BE LIABLE FOR *
  34:Core/Src/SEGGER_RTT.c **** * ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR           *
  35:Core/Src/SEGGER_RTT.c **** * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT  *
  36:Core/Src/SEGGER_RTT.c **** * OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS;    *
  37:Core/Src/SEGGER_RTT.c **** * OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF      *
  38:Core/Src/SEGGER_RTT.c **** * LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT          *
  39:Core/Src/SEGGER_RTT.c **** * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE  *
  40:Core/Src/SEGGER_RTT.c **** * USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH   *
  41:Core/Src/SEGGER_RTT.c **** * DAMAGE.                                                            *
  42:Core/Src/SEGGER_RTT.c **** *                                                                    *
  43:Core/Src/SEGGER_RTT.c **** **********************************************************************
  44:Core/Src/SEGGER_RTT.c **** ---------------------------END-OF-HEADER------------------------------
  45:Core/Src/SEGGER_RTT.c **** File    : SEGGER_RTT.c
  46:Core/Src/SEGGER_RTT.c **** Purpose : Implementation of SEGGER real-time transfer (RTT) which
  47:Core/Src/SEGGER_RTT.c ****           allows real-time communication on targets which support
  48:Core/Src/SEGGER_RTT.c ****           debugger memory accesses while the CPU is running.
  49:Core/Src/SEGGER_RTT.c **** Revision: $Rev: 26642 $
  50:Core/Src/SEGGER_RTT.c **** 
  51:Core/Src/SEGGER_RTT.c **** Additional information:
  52:Core/Src/SEGGER_RTT.c ****           Type "int" is assumed to be 32-bits in size
  53:Core/Src/SEGGER_RTT.c ****           H->T    Host to target communication
  54:Core/Src/SEGGER_RTT.c ****           T->H    Target to host communication
  55:Core/Src/SEGGER_RTT.c **** 
  56:Core/Src/SEGGER_RTT.c ****           RTT channel 0 is always present and reserved for Terminal usage.
  57:Core/Src/SEGGER_RTT.c ****           Name is fixed to "Terminal"
  58:Core/Src/SEGGER_RTT.c **** 
  59:Core/Src/SEGGER_RTT.c ****           Effective buffer size: SizeOfBuffer - 1
  60:Core/Src/SEGGER_RTT.c **** 
  61:Core/Src/SEGGER_RTT.c ****           WrOff == RdOff:       Buffer is empty
  62:Core/Src/SEGGER_RTT.c ****           WrOff == (RdOff - 1): Buffer is full
  63:Core/Src/SEGGER_RTT.c ****           WrOff >  RdOff:       Free space includes wrap-around
  64:Core/Src/SEGGER_RTT.c ****           WrOff <  RdOff:       Used space includes wrap-around
  65:Core/Src/SEGGER_RTT.c ****           (WrOff == (SizeOfBuffer - 1)) && (RdOff == 0):  
  66:Core/Src/SEGGER_RTT.c ****                                 Buffer full and wrap-around after next byte
  67:Core/Src/SEGGER_RTT.c **** 
  68:Core/Src/SEGGER_RTT.c **** 
  69:Core/Src/SEGGER_RTT.c **** ----------------------------------------------------------------------
  70:Core/Src/SEGGER_RTT.c **** */
  71:Core/Src/SEGGER_RTT.c **** 
  72:Core/Src/SEGGER_RTT.c **** #include "SEGGER_RTT.h"
  73:Core/Src/SEGGER_RTT.c **** 
  74:Core/Src/SEGGER_RTT.c **** #include <string.h>                 // for memcpy
  75:Core/Src/SEGGER_RTT.c **** 
  76:Core/Src/SEGGER_RTT.c **** /*********************************************************************
  77:Core/Src/SEGGER_RTT.c **** *
  78:Core/Src/SEGGER_RTT.c **** *       Configuration, default values
  79:Core/Src/SEGGER_RTT.c **** *
  80:Core/Src/SEGGER_RTT.c **** **********************************************************************
  81:Core/Src/SEGGER_RTT.c **** */
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccs0vIiH.s 			page 3


  82:Core/Src/SEGGER_RTT.c **** 
  83:Core/Src/SEGGER_RTT.c **** #if SEGGER_RTT_CPU_CACHE_LINE_SIZE
  84:Core/Src/SEGGER_RTT.c ****   #ifdef SEGGER_RTT_CB_ALIGN
  85:Core/Src/SEGGER_RTT.c ****     #error "Custom SEGGER_RTT_CB_ALIGN() is not supported for SEGGER_RTT_CPU_CACHE_LINE_SIZE != 0"
  86:Core/Src/SEGGER_RTT.c ****   #endif
  87:Core/Src/SEGGER_RTT.c ****   #ifdef SEGGER_RTT_BUFFER_ALIGN
  88:Core/Src/SEGGER_RTT.c ****     #error "Custom SEGGER_RTT_BUFFER_ALIGN() is not supported for SEGGER_RTT_CPU_CACHE_LINE_SIZE !=
  89:Core/Src/SEGGER_RTT.c ****   #endif
  90:Core/Src/SEGGER_RTT.c ****   #ifdef SEGGER_RTT_PUT_CB_SECTION
  91:Core/Src/SEGGER_RTT.c ****     #error "Custom SEGGER_RTT_PUT_CB_SECTION() is not supported for SEGGER_RTT_CPU_CACHE_LINE_SIZE 
  92:Core/Src/SEGGER_RTT.c ****   #endif
  93:Core/Src/SEGGER_RTT.c ****   #ifdef SEGGER_RTT_PUT_BUFFER_SECTION
  94:Core/Src/SEGGER_RTT.c ****     #error "Custom SEGGER_RTT_PUT_BUFFER_SECTION() is not supported for SEGGER_RTT_CPU_CACHE_LINE_S
  95:Core/Src/SEGGER_RTT.c ****   #endif
  96:Core/Src/SEGGER_RTT.c ****   #ifdef SEGGER_RTT_BUFFER_ALIGNMENT
  97:Core/Src/SEGGER_RTT.c ****     #error "Custom SEGGER_RTT_BUFFER_ALIGNMENT is not supported for SEGGER_RTT_CPU_CACHE_LINE_SIZE 
  98:Core/Src/SEGGER_RTT.c ****   #endif
  99:Core/Src/SEGGER_RTT.c ****   #ifdef SEGGER_RTT_ALIGNMENT
 100:Core/Src/SEGGER_RTT.c ****     #error "Custom SEGGER_RTT_ALIGNMENT is not supported for SEGGER_RTT_CPU_CACHE_LINE_SIZE != 0"
 101:Core/Src/SEGGER_RTT.c ****   #endif
 102:Core/Src/SEGGER_RTT.c **** #endif
 103:Core/Src/SEGGER_RTT.c **** 
 104:Core/Src/SEGGER_RTT.c **** #ifndef   BUFFER_SIZE_UP
 105:Core/Src/SEGGER_RTT.c ****   #define BUFFER_SIZE_UP                                  1024  // Size of the buffer for terminal 
 106:Core/Src/SEGGER_RTT.c **** #endif
 107:Core/Src/SEGGER_RTT.c **** 
 108:Core/Src/SEGGER_RTT.c **** #ifndef   BUFFER_SIZE_DOWN
 109:Core/Src/SEGGER_RTT.c ****   #define BUFFER_SIZE_DOWN                                16    // Size of the buffer for terminal 
 110:Core/Src/SEGGER_RTT.c **** #endif
 111:Core/Src/SEGGER_RTT.c **** 
 112:Core/Src/SEGGER_RTT.c **** #ifndef   SEGGER_RTT_MAX_NUM_UP_BUFFERS
 113:Core/Src/SEGGER_RTT.c ****   #define SEGGER_RTT_MAX_NUM_UP_BUFFERS                    2    // Number of up-buffers (T->H) avai
 114:Core/Src/SEGGER_RTT.c **** #endif
 115:Core/Src/SEGGER_RTT.c **** 
 116:Core/Src/SEGGER_RTT.c **** #ifndef   SEGGER_RTT_MAX_NUM_DOWN_BUFFERS
 117:Core/Src/SEGGER_RTT.c ****   #define SEGGER_RTT_MAX_NUM_DOWN_BUFFERS                  2    // Number of down-buffers (H->T) av
 118:Core/Src/SEGGER_RTT.c **** #endif
 119:Core/Src/SEGGER_RTT.c **** 
 120:Core/Src/SEGGER_RTT.c **** #ifndef SEGGER_RTT_BUFFER_SECTION
 121:Core/Src/SEGGER_RTT.c ****   #if defined(SEGGER_RTT_SECTION)
 122:Core/Src/SEGGER_RTT.c ****     #define SEGGER_RTT_BUFFER_SECTION SEGGER_RTT_SECTION
 123:Core/Src/SEGGER_RTT.c ****   #endif
 124:Core/Src/SEGGER_RTT.c **** #endif
 125:Core/Src/SEGGER_RTT.c **** 
 126:Core/Src/SEGGER_RTT.c **** #ifndef   SEGGER_RTT_ALIGNMENT
 127:Core/Src/SEGGER_RTT.c ****   #define SEGGER_RTT_ALIGNMENT                            SEGGER_RTT_CPU_CACHE_LINE_SIZE
 128:Core/Src/SEGGER_RTT.c **** #endif
 129:Core/Src/SEGGER_RTT.c **** 
 130:Core/Src/SEGGER_RTT.c **** #ifndef   SEGGER_RTT_BUFFER_ALIGNMENT
 131:Core/Src/SEGGER_RTT.c ****   #define SEGGER_RTT_BUFFER_ALIGNMENT                     SEGGER_RTT_CPU_CACHE_LINE_SIZE
 132:Core/Src/SEGGER_RTT.c **** #endif
 133:Core/Src/SEGGER_RTT.c **** 
 134:Core/Src/SEGGER_RTT.c **** #ifndef   SEGGER_RTT_MODE_DEFAULT
 135:Core/Src/SEGGER_RTT.c ****   #define SEGGER_RTT_MODE_DEFAULT                         SEGGER_RTT_MODE_NO_BLOCK_SKIP
 136:Core/Src/SEGGER_RTT.c **** #endif
 137:Core/Src/SEGGER_RTT.c **** 
 138:Core/Src/SEGGER_RTT.c **** #ifndef   SEGGER_RTT_LOCK
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccs0vIiH.s 			page 4


 139:Core/Src/SEGGER_RTT.c ****   #define SEGGER_RTT_LOCK()
 140:Core/Src/SEGGER_RTT.c **** #endif
 141:Core/Src/SEGGER_RTT.c **** 
 142:Core/Src/SEGGER_RTT.c **** #ifndef   SEGGER_RTT_UNLOCK
 143:Core/Src/SEGGER_RTT.c ****   #define SEGGER_RTT_UNLOCK()
 144:Core/Src/SEGGER_RTT.c **** #endif
 145:Core/Src/SEGGER_RTT.c **** 
 146:Core/Src/SEGGER_RTT.c **** #ifndef   STRLEN
 147:Core/Src/SEGGER_RTT.c ****   #define STRLEN(a)                                       strlen((a))
 148:Core/Src/SEGGER_RTT.c **** #endif
 149:Core/Src/SEGGER_RTT.c **** 
 150:Core/Src/SEGGER_RTT.c **** #ifndef   STRCPY
 151:Core/Src/SEGGER_RTT.c ****   #define STRCPY(pDest, pSrc)                             strcpy((pDest), (pSrc))
 152:Core/Src/SEGGER_RTT.c **** #endif
 153:Core/Src/SEGGER_RTT.c **** 
 154:Core/Src/SEGGER_RTT.c **** #ifndef   SEGGER_RTT_MEMCPY_USE_BYTELOOP
 155:Core/Src/SEGGER_RTT.c ****   #define SEGGER_RTT_MEMCPY_USE_BYTELOOP                  0
 156:Core/Src/SEGGER_RTT.c **** #endif
 157:Core/Src/SEGGER_RTT.c **** 
 158:Core/Src/SEGGER_RTT.c **** #ifndef   SEGGER_RTT_MEMCPY
 159:Core/Src/SEGGER_RTT.c ****   #ifdef  MEMCPY
 160:Core/Src/SEGGER_RTT.c ****     #define SEGGER_RTT_MEMCPY(pDest, pSrc, NumBytes)      MEMCPY((pDest), (pSrc), (NumBytes))
 161:Core/Src/SEGGER_RTT.c ****   #else
 162:Core/Src/SEGGER_RTT.c ****     #define SEGGER_RTT_MEMCPY(pDest, pSrc, NumBytes)      memcpy((pDest), (pSrc), (NumBytes))
 163:Core/Src/SEGGER_RTT.c ****   #endif
 164:Core/Src/SEGGER_RTT.c **** #endif
 165:Core/Src/SEGGER_RTT.c **** 
 166:Core/Src/SEGGER_RTT.c **** #ifndef   MIN
 167:Core/Src/SEGGER_RTT.c ****   #define MIN(a, b)         (((a) < (b)) ? (a) : (b))
 168:Core/Src/SEGGER_RTT.c **** #endif
 169:Core/Src/SEGGER_RTT.c **** 
 170:Core/Src/SEGGER_RTT.c **** #ifndef   MAX
 171:Core/Src/SEGGER_RTT.c ****   #define MAX(a, b)         (((a) > (b)) ? (a) : (b))
 172:Core/Src/SEGGER_RTT.c **** #endif
 173:Core/Src/SEGGER_RTT.c **** //
 174:Core/Src/SEGGER_RTT.c **** // For some environments, NULL may not be defined until certain headers are included
 175:Core/Src/SEGGER_RTT.c **** //
 176:Core/Src/SEGGER_RTT.c **** #ifndef NULL
 177:Core/Src/SEGGER_RTT.c ****   #define NULL 0
 178:Core/Src/SEGGER_RTT.c **** #endif
 179:Core/Src/SEGGER_RTT.c **** 
 180:Core/Src/SEGGER_RTT.c **** /*********************************************************************
 181:Core/Src/SEGGER_RTT.c **** *
 182:Core/Src/SEGGER_RTT.c **** *       Defines, fixed
 183:Core/Src/SEGGER_RTT.c **** *
 184:Core/Src/SEGGER_RTT.c **** **********************************************************************
 185:Core/Src/SEGGER_RTT.c **** */
 186:Core/Src/SEGGER_RTT.c **** #if (defined __ICCARM__) || (defined __ICCRX__)
 187:Core/Src/SEGGER_RTT.c ****   #define RTT_PRAGMA(P) _Pragma(#P)
 188:Core/Src/SEGGER_RTT.c **** #endif
 189:Core/Src/SEGGER_RTT.c **** 
 190:Core/Src/SEGGER_RTT.c **** #if SEGGER_RTT_ALIGNMENT || SEGGER_RTT_BUFFER_ALIGNMENT
 191:Core/Src/SEGGER_RTT.c ****   #if ((defined __GNUC__) || (defined __clang__))
 192:Core/Src/SEGGER_RTT.c ****     #define SEGGER_RTT_ALIGN(Var, Alignment) Var __attribute__ ((aligned (Alignment)))
 193:Core/Src/SEGGER_RTT.c ****   #elif (defined __ICCARM__) || (defined __ICCRX__)
 194:Core/Src/SEGGER_RTT.c ****     #define PRAGMA(A) _Pragma(#A)
 195:Core/Src/SEGGER_RTT.c **** #define SEGGER_RTT_ALIGN(Var, Alignment) RTT_PRAGMA(data_alignment=Alignment) \
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccs0vIiH.s 			page 5


 196:Core/Src/SEGGER_RTT.c ****                                   Var
 197:Core/Src/SEGGER_RTT.c ****   #elif (defined __CC_ARM)
 198:Core/Src/SEGGER_RTT.c ****     #define SEGGER_RTT_ALIGN(Var, Alignment) Var __attribute__ ((aligned (Alignment)))
 199:Core/Src/SEGGER_RTT.c ****   #else
 200:Core/Src/SEGGER_RTT.c ****     #error "Alignment not supported for this compiler."
 201:Core/Src/SEGGER_RTT.c ****   #endif
 202:Core/Src/SEGGER_RTT.c **** #else
 203:Core/Src/SEGGER_RTT.c ****   #define SEGGER_RTT_ALIGN(Var, Alignment) Var
 204:Core/Src/SEGGER_RTT.c **** #endif
 205:Core/Src/SEGGER_RTT.c **** 
 206:Core/Src/SEGGER_RTT.c **** #if defined(SEGGER_RTT_SECTION) || defined (SEGGER_RTT_BUFFER_SECTION)
 207:Core/Src/SEGGER_RTT.c ****   #if ((defined __GNUC__) || (defined __clang__))
 208:Core/Src/SEGGER_RTT.c ****     #define SEGGER_RTT_PUT_SECTION(Var, Section) __attribute__ ((section (Section))) Var
 209:Core/Src/SEGGER_RTT.c ****   #elif (defined __ICCARM__) || (defined __ICCRX__)
 210:Core/Src/SEGGER_RTT.c **** #define SEGGER_RTT_PUT_SECTION(Var, Section) RTT_PRAGMA(location=Section) \
 211:Core/Src/SEGGER_RTT.c ****                                         Var
 212:Core/Src/SEGGER_RTT.c ****   #elif (defined __CC_ARM)
 213:Core/Src/SEGGER_RTT.c ****     #define SEGGER_RTT_PUT_SECTION(Var, Section) __attribute__ ((section (Section), zero_init))  Va
 214:Core/Src/SEGGER_RTT.c ****   #else
 215:Core/Src/SEGGER_RTT.c ****     #error "Section placement not supported for this compiler."
 216:Core/Src/SEGGER_RTT.c ****   #endif
 217:Core/Src/SEGGER_RTT.c **** #else
 218:Core/Src/SEGGER_RTT.c ****   #define SEGGER_RTT_PUT_SECTION(Var, Section) Var
 219:Core/Src/SEGGER_RTT.c **** #endif
 220:Core/Src/SEGGER_RTT.c **** 
 221:Core/Src/SEGGER_RTT.c **** #if SEGGER_RTT_ALIGNMENT
 222:Core/Src/SEGGER_RTT.c ****   #define SEGGER_RTT_CB_ALIGN(Var)  SEGGER_RTT_ALIGN(Var, SEGGER_RTT_ALIGNMENT)
 223:Core/Src/SEGGER_RTT.c **** #else
 224:Core/Src/SEGGER_RTT.c ****   #define SEGGER_RTT_CB_ALIGN(Var)  Var
 225:Core/Src/SEGGER_RTT.c **** #endif
 226:Core/Src/SEGGER_RTT.c **** 
 227:Core/Src/SEGGER_RTT.c **** #if SEGGER_RTT_BUFFER_ALIGNMENT
 228:Core/Src/SEGGER_RTT.c ****   #define SEGGER_RTT_BUFFER_ALIGN(Var)  SEGGER_RTT_ALIGN(Var, SEGGER_RTT_BUFFER_ALIGNMENT)
 229:Core/Src/SEGGER_RTT.c **** #else
 230:Core/Src/SEGGER_RTT.c ****   #define SEGGER_RTT_BUFFER_ALIGN(Var)  Var
 231:Core/Src/SEGGER_RTT.c **** #endif
 232:Core/Src/SEGGER_RTT.c **** 
 233:Core/Src/SEGGER_RTT.c **** 
 234:Core/Src/SEGGER_RTT.c **** #if defined(SEGGER_RTT_SECTION)
 235:Core/Src/SEGGER_RTT.c ****   #define SEGGER_RTT_PUT_CB_SECTION(Var) SEGGER_RTT_PUT_SECTION(Var, SEGGER_RTT_SECTION)
 236:Core/Src/SEGGER_RTT.c **** #else
 237:Core/Src/SEGGER_RTT.c ****   #define SEGGER_RTT_PUT_CB_SECTION(Var) Var
 238:Core/Src/SEGGER_RTT.c **** #endif
 239:Core/Src/SEGGER_RTT.c **** 
 240:Core/Src/SEGGER_RTT.c **** #if defined(SEGGER_RTT_BUFFER_SECTION)
 241:Core/Src/SEGGER_RTT.c ****   #define SEGGER_RTT_PUT_BUFFER_SECTION(Var) SEGGER_RTT_PUT_SECTION(Var, SEGGER_RTT_BUFFER_SECTION)
 242:Core/Src/SEGGER_RTT.c **** #else
 243:Core/Src/SEGGER_RTT.c ****   #define SEGGER_RTT_PUT_BUFFER_SECTION(Var) Var
 244:Core/Src/SEGGER_RTT.c **** #endif
 245:Core/Src/SEGGER_RTT.c **** 
 246:Core/Src/SEGGER_RTT.c **** /*********************************************************************
 247:Core/Src/SEGGER_RTT.c **** *
 248:Core/Src/SEGGER_RTT.c **** *       Static const data
 249:Core/Src/SEGGER_RTT.c **** *
 250:Core/Src/SEGGER_RTT.c **** **********************************************************************
 251:Core/Src/SEGGER_RTT.c **** */
 252:Core/Src/SEGGER_RTT.c **** 
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccs0vIiH.s 			page 6


 253:Core/Src/SEGGER_RTT.c **** static unsigned char _aTerminalId[16] = { '0', '1', '2', '3', '4', '5', '6', '7', '8', '9', 'A', 'B
 254:Core/Src/SEGGER_RTT.c **** 
 255:Core/Src/SEGGER_RTT.c **** /*********************************************************************
 256:Core/Src/SEGGER_RTT.c **** *
 257:Core/Src/SEGGER_RTT.c **** *       Static data
 258:Core/Src/SEGGER_RTT.c **** *
 259:Core/Src/SEGGER_RTT.c **** **********************************************************************
 260:Core/Src/SEGGER_RTT.c **** */
 261:Core/Src/SEGGER_RTT.c **** 
 262:Core/Src/SEGGER_RTT.c **** //
 263:Core/Src/SEGGER_RTT.c **** // RTT Control Block and allocate buffers for channel 0
 264:Core/Src/SEGGER_RTT.c **** //
 265:Core/Src/SEGGER_RTT.c **** #if SEGGER_RTT_CPU_CACHE_LINE_SIZE
 266:Core/Src/SEGGER_RTT.c ****   #if ((defined __GNUC__) || (defined __clang__))
 267:Core/Src/SEGGER_RTT.c ****     SEGGER_RTT_CB _SEGGER_RTT                                                             __attribu
 268:Core/Src/SEGGER_RTT.c ****     static char   _acUpBuffer  [SEGGER_RTT__ROUND_UP_2_CACHE_LINE_SIZE(BUFFER_SIZE_UP)]   __attribu
 269:Core/Src/SEGGER_RTT.c ****     static char   _acDownBuffer[SEGGER_RTT__ROUND_UP_2_CACHE_LINE_SIZE(BUFFER_SIZE_DOWN)] __attribu
 270:Core/Src/SEGGER_RTT.c ****   #elif (defined __ICCARM__)
 271:Core/Src/SEGGER_RTT.c ****     #pragma data_alignment=SEGGER_RTT_CPU_CACHE_LINE_SIZE
 272:Core/Src/SEGGER_RTT.c ****     SEGGER_RTT_CB _SEGGER_RTT;
 273:Core/Src/SEGGER_RTT.c ****     #pragma data_alignment=SEGGER_RTT_CPU_CACHE_LINE_SIZE
 274:Core/Src/SEGGER_RTT.c ****     static char   _acUpBuffer  [SEGGER_RTT__ROUND_UP_2_CACHE_LINE_SIZE(BUFFER_SIZE_UP)];
 275:Core/Src/SEGGER_RTT.c ****     #pragma data_alignment=SEGGER_RTT_CPU_CACHE_LINE_SIZE
 276:Core/Src/SEGGER_RTT.c ****     static char   _acDownBuffer[SEGGER_RTT__ROUND_UP_2_CACHE_LINE_SIZE(BUFFER_SIZE_DOWN)];
 277:Core/Src/SEGGER_RTT.c ****   #else
 278:Core/Src/SEGGER_RTT.c ****     #error "Don't know how to place _SEGGER_RTT, _acUpBuffer, _acDownBuffer cache-line aligned"
 279:Core/Src/SEGGER_RTT.c ****   #endif
 280:Core/Src/SEGGER_RTT.c **** #else
 281:Core/Src/SEGGER_RTT.c ****   SEGGER_RTT_PUT_CB_SECTION(SEGGER_RTT_CB_ALIGN(SEGGER_RTT_CB _SEGGER_RTT));
 282:Core/Src/SEGGER_RTT.c ****   SEGGER_RTT_PUT_BUFFER_SECTION(SEGGER_RTT_BUFFER_ALIGN(static char _acUpBuffer  [BUFFER_SIZE_UP]))
 283:Core/Src/SEGGER_RTT.c ****   SEGGER_RTT_PUT_BUFFER_SECTION(SEGGER_RTT_BUFFER_ALIGN(static char _acDownBuffer[BUFFER_SIZE_DOWN]
 284:Core/Src/SEGGER_RTT.c **** #endif
 285:Core/Src/SEGGER_RTT.c **** 
 286:Core/Src/SEGGER_RTT.c **** static unsigned char _ActiveTerminal;
 287:Core/Src/SEGGER_RTT.c **** 
 288:Core/Src/SEGGER_RTT.c **** /*********************************************************************
 289:Core/Src/SEGGER_RTT.c **** *
 290:Core/Src/SEGGER_RTT.c **** *       Static functions
 291:Core/Src/SEGGER_RTT.c **** *
 292:Core/Src/SEGGER_RTT.c **** **********************************************************************
 293:Core/Src/SEGGER_RTT.c **** */
 294:Core/Src/SEGGER_RTT.c **** 
 295:Core/Src/SEGGER_RTT.c **** /*********************************************************************
 296:Core/Src/SEGGER_RTT.c **** *
 297:Core/Src/SEGGER_RTT.c **** *       _DoInit()
 298:Core/Src/SEGGER_RTT.c **** *
 299:Core/Src/SEGGER_RTT.c **** *  Function description
 300:Core/Src/SEGGER_RTT.c **** *    Initializes the control block an buffers.
 301:Core/Src/SEGGER_RTT.c **** *    May only be called via INIT() to avoid overriding settings.
 302:Core/Src/SEGGER_RTT.c **** *
 303:Core/Src/SEGGER_RTT.c **** */
 304:Core/Src/SEGGER_RTT.c **** #define INIT()  {                                                                                  
 305:Core/Src/SEGGER_RTT.c ****                   volatile SEGGER_RTT_CB* pRTTCBInit;                                              
 306:Core/Src/SEGGER_RTT.c ****                   pRTTCBInit = (volatile SEGGER_RTT_CB*)((char*)&_SEGGER_RTT + SEGGER_RTT_UNCACHED_
 307:Core/Src/SEGGER_RTT.c ****                   do {                                                                             
 308:Core/Src/SEGGER_RTT.c ****                     if (pRTTCBInit->acID[0] == '\0') {                                             
 309:Core/Src/SEGGER_RTT.c ****                       _DoInit();                                                                   
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccs0vIiH.s 			page 7


 310:Core/Src/SEGGER_RTT.c ****                     }                                                                              
 311:Core/Src/SEGGER_RTT.c ****                   } while (0);                                                                     
 312:Core/Src/SEGGER_RTT.c ****                 }
 313:Core/Src/SEGGER_RTT.c **** 
 314:Core/Src/SEGGER_RTT.c **** static void _DoInit(void) {
 315:Core/Src/SEGGER_RTT.c ****   volatile SEGGER_RTT_CB* p;   // Volatile to make sure that compiler cannot change the order of ac
 316:Core/Src/SEGGER_RTT.c ****   static const char _aInitStr[] = "\0\0\0\0\0\0TTR REGGES";  // Init complete ID string to make sur
 317:Core/Src/SEGGER_RTT.c ****   unsigned i;
 318:Core/Src/SEGGER_RTT.c ****   //
 319:Core/Src/SEGGER_RTT.c ****   // Initialize control block
 320:Core/Src/SEGGER_RTT.c ****   //
 321:Core/Src/SEGGER_RTT.c ****   p                     = (volatile SEGGER_RTT_CB*)((char*)&_SEGGER_RTT + SEGGER_RTT_UNCACHED_OFF);
 322:Core/Src/SEGGER_RTT.c ****   memset((SEGGER_RTT_CB*)p, 0, sizeof(_SEGGER_RTT));         // Make sure that the RTT CB is always
 323:Core/Src/SEGGER_RTT.c ****   p->MaxNumUpBuffers    = SEGGER_RTT_MAX_NUM_UP_BUFFERS;
 324:Core/Src/SEGGER_RTT.c ****   p->MaxNumDownBuffers  = SEGGER_RTT_MAX_NUM_DOWN_BUFFERS;
 325:Core/Src/SEGGER_RTT.c ****   //
 326:Core/Src/SEGGER_RTT.c ****   // Initialize up buffer 0
 327:Core/Src/SEGGER_RTT.c ****   //
 328:Core/Src/SEGGER_RTT.c ****   p->aUp[0].sName         = "Terminal";
 329:Core/Src/SEGGER_RTT.c ****   p->aUp[0].pBuffer       = _acUpBuffer;
 330:Core/Src/SEGGER_RTT.c ****   p->aUp[0].SizeOfBuffer  = BUFFER_SIZE_UP;
 331:Core/Src/SEGGER_RTT.c ****   p->aUp[0].RdOff         = 0u;
 332:Core/Src/SEGGER_RTT.c ****   p->aUp[0].WrOff         = 0u;
 333:Core/Src/SEGGER_RTT.c ****   p->aUp[0].Flags         = SEGGER_RTT_MODE_DEFAULT;
 334:Core/Src/SEGGER_RTT.c ****   //
 335:Core/Src/SEGGER_RTT.c ****   // Initialize down buffer 0
 336:Core/Src/SEGGER_RTT.c ****   //
 337:Core/Src/SEGGER_RTT.c ****   p->aDown[0].sName         = "Terminal";
 338:Core/Src/SEGGER_RTT.c ****   p->aDown[0].pBuffer       = _acDownBuffer;
 339:Core/Src/SEGGER_RTT.c ****   p->aDown[0].SizeOfBuffer  = BUFFER_SIZE_DOWN;
 340:Core/Src/SEGGER_RTT.c ****   p->aDown[0].RdOff         = 0u;
 341:Core/Src/SEGGER_RTT.c ****   p->aDown[0].WrOff         = 0u;
 342:Core/Src/SEGGER_RTT.c ****   p->aDown[0].Flags         = SEGGER_RTT_MODE_DEFAULT;
 343:Core/Src/SEGGER_RTT.c ****   //
 344:Core/Src/SEGGER_RTT.c ****   // Finish initialization of the control block.
 345:Core/Src/SEGGER_RTT.c ****   // Copy Id string backwards to make sure that "SEGGER RTT" is not found in initializer memory (us
 346:Core/Src/SEGGER_RTT.c ****   // as this would cause J-Link to "find" the control block at a wrong address.
 347:Core/Src/SEGGER_RTT.c ****   //
 348:Core/Src/SEGGER_RTT.c ****   RTT__DMB();                       // Force order of memory accesses for cores that may perform ou
 349:Core/Src/SEGGER_RTT.c ****   for (i = 0; i < sizeof(_aInitStr) - 1; ++i) {
 350:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 351:Core/Src/SEGGER_RTT.c ****   }
 352:Core/Src/SEGGER_RTT.c ****   RTT__DMB();                       // Force order of memory accesses for cores that may perform ou
 353:Core/Src/SEGGER_RTT.c **** }
 354:Core/Src/SEGGER_RTT.c **** 
 355:Core/Src/SEGGER_RTT.c **** /*********************************************************************
 356:Core/Src/SEGGER_RTT.c **** *
 357:Core/Src/SEGGER_RTT.c **** *       _WriteBlocking()
 358:Core/Src/SEGGER_RTT.c **** *
 359:Core/Src/SEGGER_RTT.c **** *  Function description
 360:Core/Src/SEGGER_RTT.c **** *    Stores a specified number of characters in SEGGER RTT ring buffer
 361:Core/Src/SEGGER_RTT.c **** *    and updates the associated write pointer which is periodically
 362:Core/Src/SEGGER_RTT.c **** *    read by the host.
 363:Core/Src/SEGGER_RTT.c **** *    The caller is responsible for managing the write chunk sizes as
 364:Core/Src/SEGGER_RTT.c **** *    _WriteBlocking() will block until all data has been posted successfully.
 365:Core/Src/SEGGER_RTT.c **** *
 366:Core/Src/SEGGER_RTT.c **** *  Parameters
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccs0vIiH.s 			page 8


 367:Core/Src/SEGGER_RTT.c **** *    pRing        Ring buffer to post to.
 368:Core/Src/SEGGER_RTT.c **** *    pBuffer      Pointer to character array. Does not need to point to a \0 terminated string.
 369:Core/Src/SEGGER_RTT.c **** *    NumBytes     Number of bytes to be stored in the SEGGER RTT control block.
 370:Core/Src/SEGGER_RTT.c **** *
 371:Core/Src/SEGGER_RTT.c **** *  Return value
 372:Core/Src/SEGGER_RTT.c **** *    >= 0 - Number of bytes written into buffer.
 373:Core/Src/SEGGER_RTT.c **** */
 374:Core/Src/SEGGER_RTT.c **** static unsigned _WriteBlocking(SEGGER_RTT_BUFFER_UP* pRing, const char* pBuffer, unsigned NumBytes)
 375:Core/Src/SEGGER_RTT.c ****   unsigned NumBytesToWrite;
 376:Core/Src/SEGGER_RTT.c ****   unsigned NumBytesWritten;
 377:Core/Src/SEGGER_RTT.c ****   unsigned RdOff;
 378:Core/Src/SEGGER_RTT.c ****   unsigned WrOff;
 379:Core/Src/SEGGER_RTT.c ****   volatile char* pDst;
 380:Core/Src/SEGGER_RTT.c ****   //
 381:Core/Src/SEGGER_RTT.c ****   // Write data to buffer and handle wrap-around if necessary
 382:Core/Src/SEGGER_RTT.c ****   //
 383:Core/Src/SEGGER_RTT.c ****   NumBytesWritten = 0u;
 384:Core/Src/SEGGER_RTT.c ****   WrOff = pRing->WrOff;
 385:Core/Src/SEGGER_RTT.c ****   do {
 386:Core/Src/SEGGER_RTT.c ****     RdOff = pRing->RdOff;                         // May be changed by host (debug probe) in the me
 387:Core/Src/SEGGER_RTT.c ****     if (RdOff > WrOff) {
 388:Core/Src/SEGGER_RTT.c ****       NumBytesToWrite = RdOff - WrOff - 1u;
 389:Core/Src/SEGGER_RTT.c ****     } else {
 390:Core/Src/SEGGER_RTT.c ****       NumBytesToWrite = pRing->SizeOfBuffer - (WrOff - RdOff + 1u);
 391:Core/Src/SEGGER_RTT.c ****     }
 392:Core/Src/SEGGER_RTT.c ****     NumBytesToWrite = MIN(NumBytesToWrite, (pRing->SizeOfBuffer - WrOff));      // Number of bytes 
 393:Core/Src/SEGGER_RTT.c ****     NumBytesToWrite = MIN(NumBytesToWrite, NumBytes);
 394:Core/Src/SEGGER_RTT.c ****     pDst = (pRing->pBuffer + WrOff) + SEGGER_RTT_UNCACHED_OFF;
 395:Core/Src/SEGGER_RTT.c **** #if SEGGER_RTT_MEMCPY_USE_BYTELOOP
 396:Core/Src/SEGGER_RTT.c ****     NumBytesWritten += NumBytesToWrite;
 397:Core/Src/SEGGER_RTT.c ****     NumBytes        -= NumBytesToWrite;
 398:Core/Src/SEGGER_RTT.c ****     WrOff           += NumBytesToWrite;
 399:Core/Src/SEGGER_RTT.c ****     while (NumBytesToWrite--) {
 400:Core/Src/SEGGER_RTT.c ****       *pDst++ = *pBuffer++;
 401:Core/Src/SEGGER_RTT.c ****     };
 402:Core/Src/SEGGER_RTT.c **** #else
 403:Core/Src/SEGGER_RTT.c ****     SEGGER_RTT_MEMCPY((void*)pDst, pBuffer, NumBytesToWrite);
 404:Core/Src/SEGGER_RTT.c ****     NumBytesWritten += NumBytesToWrite;
 405:Core/Src/SEGGER_RTT.c ****     pBuffer         += NumBytesToWrite;
 406:Core/Src/SEGGER_RTT.c ****     NumBytes        -= NumBytesToWrite;
 407:Core/Src/SEGGER_RTT.c ****     WrOff           += NumBytesToWrite;
 408:Core/Src/SEGGER_RTT.c **** #endif
 409:Core/Src/SEGGER_RTT.c ****     if (WrOff == pRing->SizeOfBuffer) {
 410:Core/Src/SEGGER_RTT.c ****       WrOff = 0u;
 411:Core/Src/SEGGER_RTT.c ****     }
 412:Core/Src/SEGGER_RTT.c ****     RTT__DMB();                     // Force data write to be complete before writing the <WrOff>, 
 413:Core/Src/SEGGER_RTT.c ****     pRing->WrOff = WrOff;
 414:Core/Src/SEGGER_RTT.c ****   } while (NumBytes);
 415:Core/Src/SEGGER_RTT.c ****   return NumBytesWritten;
 416:Core/Src/SEGGER_RTT.c **** }
 417:Core/Src/SEGGER_RTT.c **** 
 418:Core/Src/SEGGER_RTT.c **** /*********************************************************************
 419:Core/Src/SEGGER_RTT.c **** *
 420:Core/Src/SEGGER_RTT.c **** *       _WriteNoCheck()
 421:Core/Src/SEGGER_RTT.c **** *
 422:Core/Src/SEGGER_RTT.c **** *  Function description
 423:Core/Src/SEGGER_RTT.c **** *    Stores a specified number of characters in SEGGER RTT ring buffer
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccs0vIiH.s 			page 9


 424:Core/Src/SEGGER_RTT.c **** *    and updates the associated write pointer which is periodically
 425:Core/Src/SEGGER_RTT.c **** *    read by the host.
 426:Core/Src/SEGGER_RTT.c **** *    It is callers responsibility to make sure data actually fits in buffer.
 427:Core/Src/SEGGER_RTT.c **** *
 428:Core/Src/SEGGER_RTT.c **** *  Parameters
 429:Core/Src/SEGGER_RTT.c **** *    pRing        Ring buffer to post to.
 430:Core/Src/SEGGER_RTT.c **** *    pBuffer      Pointer to character array. Does not need to point to a \0 terminated string.
 431:Core/Src/SEGGER_RTT.c **** *    NumBytes     Number of bytes to be stored in the SEGGER RTT control block.
 432:Core/Src/SEGGER_RTT.c **** *
 433:Core/Src/SEGGER_RTT.c **** *  Notes
 434:Core/Src/SEGGER_RTT.c **** *    (1) If there might not be enough space in the "Up"-buffer, call _WriteBlocking
 435:Core/Src/SEGGER_RTT.c **** */
 436:Core/Src/SEGGER_RTT.c **** static void _WriteNoCheck(SEGGER_RTT_BUFFER_UP* pRing, const char* pData, unsigned NumBytes) {
 437:Core/Src/SEGGER_RTT.c ****   unsigned NumBytesAtOnce;
 438:Core/Src/SEGGER_RTT.c ****   unsigned WrOff;
 439:Core/Src/SEGGER_RTT.c ****   unsigned Rem;
 440:Core/Src/SEGGER_RTT.c ****   volatile char* pDst;
 441:Core/Src/SEGGER_RTT.c **** 
 442:Core/Src/SEGGER_RTT.c ****   WrOff = pRing->WrOff;
 443:Core/Src/SEGGER_RTT.c ****   Rem = pRing->SizeOfBuffer - WrOff;
 444:Core/Src/SEGGER_RTT.c ****   if (Rem > NumBytes) {
 445:Core/Src/SEGGER_RTT.c ****     //
 446:Core/Src/SEGGER_RTT.c ****     // All data fits before wrap around
 447:Core/Src/SEGGER_RTT.c ****     //
 448:Core/Src/SEGGER_RTT.c ****     pDst = (pRing->pBuffer + WrOff) + SEGGER_RTT_UNCACHED_OFF;
 449:Core/Src/SEGGER_RTT.c **** #if SEGGER_RTT_MEMCPY_USE_BYTELOOP
 450:Core/Src/SEGGER_RTT.c ****     WrOff += NumBytes;
 451:Core/Src/SEGGER_RTT.c ****     while (NumBytes--) {
 452:Core/Src/SEGGER_RTT.c ****       *pDst++ = *pData++;
 453:Core/Src/SEGGER_RTT.c ****     };
 454:Core/Src/SEGGER_RTT.c ****     RTT__DMB();                     // Force data write to be complete before writing the <WrOff>, 
 455:Core/Src/SEGGER_RTT.c ****     pRing->WrOff = WrOff;
 456:Core/Src/SEGGER_RTT.c **** #else
 457:Core/Src/SEGGER_RTT.c ****     SEGGER_RTT_MEMCPY((void*)pDst, pData, NumBytes);
 458:Core/Src/SEGGER_RTT.c ****     RTT__DMB();                     // Force data write to be complete before writing the <WrOff>, 
 459:Core/Src/SEGGER_RTT.c ****     pRing->WrOff = WrOff + NumBytes;
 460:Core/Src/SEGGER_RTT.c **** #endif
 461:Core/Src/SEGGER_RTT.c ****   } else {
 462:Core/Src/SEGGER_RTT.c ****     //
 463:Core/Src/SEGGER_RTT.c ****     // We reach the end of the buffer, so need to wrap around
 464:Core/Src/SEGGER_RTT.c ****     //
 465:Core/Src/SEGGER_RTT.c **** #if SEGGER_RTT_MEMCPY_USE_BYTELOOP
 466:Core/Src/SEGGER_RTT.c ****     pDst = (pRing->pBuffer + WrOff) + SEGGER_RTT_UNCACHED_OFF;
 467:Core/Src/SEGGER_RTT.c ****     NumBytesAtOnce = Rem;
 468:Core/Src/SEGGER_RTT.c ****     while (NumBytesAtOnce--) {
 469:Core/Src/SEGGER_RTT.c ****       *pDst++ = *pData++;
 470:Core/Src/SEGGER_RTT.c ****     };
 471:Core/Src/SEGGER_RTT.c ****     pDst = pRing->pBuffer + SEGGER_RTT_UNCACHED_OFF;
 472:Core/Src/SEGGER_RTT.c ****     NumBytesAtOnce = NumBytes - Rem;
 473:Core/Src/SEGGER_RTT.c ****     while (NumBytesAtOnce--) {
 474:Core/Src/SEGGER_RTT.c ****       *pDst++ = *pData++;
 475:Core/Src/SEGGER_RTT.c ****     };
 476:Core/Src/SEGGER_RTT.c ****     RTT__DMB();                     // Force data write to be complete before writing the <WrOff>, 
 477:Core/Src/SEGGER_RTT.c ****     pRing->WrOff = NumBytes - Rem;
 478:Core/Src/SEGGER_RTT.c **** #else
 479:Core/Src/SEGGER_RTT.c ****     NumBytesAtOnce = Rem;
 480:Core/Src/SEGGER_RTT.c ****     pDst = (pRing->pBuffer + WrOff) + SEGGER_RTT_UNCACHED_OFF;
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccs0vIiH.s 			page 10


 481:Core/Src/SEGGER_RTT.c ****     SEGGER_RTT_MEMCPY((void*)pDst, pData, NumBytesAtOnce);
 482:Core/Src/SEGGER_RTT.c ****     NumBytesAtOnce = NumBytes - Rem;
 483:Core/Src/SEGGER_RTT.c ****     pDst = pRing->pBuffer + SEGGER_RTT_UNCACHED_OFF;
 484:Core/Src/SEGGER_RTT.c ****     SEGGER_RTT_MEMCPY((void*)pDst, pData + Rem, NumBytesAtOnce);
 485:Core/Src/SEGGER_RTT.c ****     RTT__DMB();                     // Force data write to be complete before writing the <WrOff>, 
 486:Core/Src/SEGGER_RTT.c ****     pRing->WrOff = NumBytesAtOnce;
 487:Core/Src/SEGGER_RTT.c **** #endif
 488:Core/Src/SEGGER_RTT.c ****   }
 489:Core/Src/SEGGER_RTT.c **** }
 490:Core/Src/SEGGER_RTT.c **** 
 491:Core/Src/SEGGER_RTT.c **** /*********************************************************************
 492:Core/Src/SEGGER_RTT.c **** *
 493:Core/Src/SEGGER_RTT.c **** *       _PostTerminalSwitch()
 494:Core/Src/SEGGER_RTT.c **** *
 495:Core/Src/SEGGER_RTT.c **** *  Function description
 496:Core/Src/SEGGER_RTT.c **** *    Switch terminal to the given terminal ID.  It is the caller's
 497:Core/Src/SEGGER_RTT.c **** *    responsibility to ensure the terminal ID is correct and there is
 498:Core/Src/SEGGER_RTT.c **** *    enough space in the buffer for this to complete successfully.
 499:Core/Src/SEGGER_RTT.c **** *
 500:Core/Src/SEGGER_RTT.c **** *  Parameters
 501:Core/Src/SEGGER_RTT.c **** *    pRing        Ring buffer to post to.
 502:Core/Src/SEGGER_RTT.c **** *    TerminalId   Terminal ID to switch to.
 503:Core/Src/SEGGER_RTT.c **** */
 504:Core/Src/SEGGER_RTT.c **** static void _PostTerminalSwitch(SEGGER_RTT_BUFFER_UP* pRing, unsigned char TerminalId) {
 505:Core/Src/SEGGER_RTT.c ****   unsigned char ac[2];
 506:Core/Src/SEGGER_RTT.c **** 
 507:Core/Src/SEGGER_RTT.c ****   ac[0] = 0xFFu;
 508:Core/Src/SEGGER_RTT.c ****   ac[1] = _aTerminalId[TerminalId];  // Caller made already sure that TerminalId does not exceed ou
 509:Core/Src/SEGGER_RTT.c ****   _WriteBlocking(pRing, (const char*)ac, 2u);
 510:Core/Src/SEGGER_RTT.c **** }
 511:Core/Src/SEGGER_RTT.c **** 
 512:Core/Src/SEGGER_RTT.c **** /*********************************************************************
 513:Core/Src/SEGGER_RTT.c **** *
 514:Core/Src/SEGGER_RTT.c **** *       _GetAvailWriteSpace()
 515:Core/Src/SEGGER_RTT.c **** *
 516:Core/Src/SEGGER_RTT.c **** *  Function description
 517:Core/Src/SEGGER_RTT.c **** *    Returns the number of bytes that can be written to the ring
 518:Core/Src/SEGGER_RTT.c **** *    buffer without blocking.
 519:Core/Src/SEGGER_RTT.c **** *
 520:Core/Src/SEGGER_RTT.c **** *  Parameters
 521:Core/Src/SEGGER_RTT.c **** *    pRing        Ring buffer to check.
 522:Core/Src/SEGGER_RTT.c **** *
 523:Core/Src/SEGGER_RTT.c **** *  Return value
 524:Core/Src/SEGGER_RTT.c **** *    Number of bytes that are free in the buffer.
 525:Core/Src/SEGGER_RTT.c **** */
 526:Core/Src/SEGGER_RTT.c **** static unsigned _GetAvailWriteSpace(SEGGER_RTT_BUFFER_UP* pRing) {
 527:Core/Src/SEGGER_RTT.c ****   unsigned RdOff;
 528:Core/Src/SEGGER_RTT.c ****   unsigned WrOff;
 529:Core/Src/SEGGER_RTT.c ****   unsigned r;
 530:Core/Src/SEGGER_RTT.c ****   //
 531:Core/Src/SEGGER_RTT.c ****   // Avoid warnings regarding volatile access order.  It's not a problem
 532:Core/Src/SEGGER_RTT.c ****   // in this case, but dampen compiler enthusiasm.
 533:Core/Src/SEGGER_RTT.c ****   //
 534:Core/Src/SEGGER_RTT.c ****   RdOff = pRing->RdOff;
 535:Core/Src/SEGGER_RTT.c ****   WrOff = pRing->WrOff;
 536:Core/Src/SEGGER_RTT.c ****   if (RdOff <= WrOff) {
 537:Core/Src/SEGGER_RTT.c ****     r = pRing->SizeOfBuffer - 1u - WrOff + RdOff;
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccs0vIiH.s 			page 11


 538:Core/Src/SEGGER_RTT.c ****   } else {
 539:Core/Src/SEGGER_RTT.c ****     r = RdOff - WrOff - 1u;
 540:Core/Src/SEGGER_RTT.c ****   }
 541:Core/Src/SEGGER_RTT.c ****   return r;
 542:Core/Src/SEGGER_RTT.c **** }
 543:Core/Src/SEGGER_RTT.c **** 
 544:Core/Src/SEGGER_RTT.c **** /*********************************************************************
 545:Core/Src/SEGGER_RTT.c **** *
 546:Core/Src/SEGGER_RTT.c **** *       Public code
 547:Core/Src/SEGGER_RTT.c **** *
 548:Core/Src/SEGGER_RTT.c **** **********************************************************************
 549:Core/Src/SEGGER_RTT.c **** */
 550:Core/Src/SEGGER_RTT.c **** 
 551:Core/Src/SEGGER_RTT.c **** /*********************************************************************
 552:Core/Src/SEGGER_RTT.c **** *
 553:Core/Src/SEGGER_RTT.c **** *       SEGGER_RTT_ReadUpBufferNoLock()
 554:Core/Src/SEGGER_RTT.c **** *
 555:Core/Src/SEGGER_RTT.c **** *  Function description
 556:Core/Src/SEGGER_RTT.c **** *    Reads characters from SEGGER real-time-terminal control block
 557:Core/Src/SEGGER_RTT.c **** *    which have been previously stored by the application.
 558:Core/Src/SEGGER_RTT.c **** *    Do not lock against interrupts and multiple access.
 559:Core/Src/SEGGER_RTT.c **** *    Used to do the same operation that J-Link does, to transfer 
 560:Core/Src/SEGGER_RTT.c **** *    RTT data via other channels, such as TCP/IP or UART.
 561:Core/Src/SEGGER_RTT.c **** *
 562:Core/Src/SEGGER_RTT.c **** *  Parameters
 563:Core/Src/SEGGER_RTT.c **** *    BufferIndex  Index of Up-buffer to be used.
 564:Core/Src/SEGGER_RTT.c **** *    pBuffer      Pointer to buffer provided by target application, to copy characters from RTT-up-
 565:Core/Src/SEGGER_RTT.c **** *    BufferSize   Size of the target application buffer.
 566:Core/Src/SEGGER_RTT.c **** *
 567:Core/Src/SEGGER_RTT.c **** *  Return value
 568:Core/Src/SEGGER_RTT.c **** *    Number of bytes that have been read.
 569:Core/Src/SEGGER_RTT.c **** *
 570:Core/Src/SEGGER_RTT.c **** *  Additional information
 571:Core/Src/SEGGER_RTT.c **** *    This function must not be called when J-Link might also do RTT.
 572:Core/Src/SEGGER_RTT.c **** */
 573:Core/Src/SEGGER_RTT.c **** unsigned SEGGER_RTT_ReadUpBufferNoLock(unsigned BufferIndex, void* pData, unsigned BufferSize) {
  33              		.loc 1 573 96 view -0
  34              		.cfi_startproc
  35              		@ args = 0, pretend = 0, frame = 8
  36              		@ frame_needed = 0, uses_anonymous_args = 0
  37              		.loc 1 573 96 is_stmt 0 view .LVU1
  38 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
  39              		.cfi_def_cfa_offset 36
  40              		.cfi_offset 4, -36
  41              		.cfi_offset 5, -32
  42              		.cfi_offset 6, -28
  43              		.cfi_offset 7, -24
  44              		.cfi_offset 8, -20
  45              		.cfi_offset 9, -16
  46              		.cfi_offset 10, -12
  47              		.cfi_offset 11, -8
  48              		.cfi_offset 14, -4
  49              	.LBB39:
 574:Core/Src/SEGGER_RTT.c ****   unsigned                NumBytesRem;
 575:Core/Src/SEGGER_RTT.c ****   unsigned                NumBytesRead;
 576:Core/Src/SEGGER_RTT.c ****   unsigned                RdOff;
 577:Core/Src/SEGGER_RTT.c ****   unsigned                WrOff;
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccs0vIiH.s 			page 12


 578:Core/Src/SEGGER_RTT.c ****   unsigned char*          pBuffer;
 579:Core/Src/SEGGER_RTT.c ****   SEGGER_RTT_BUFFER_UP*   pRing;
 580:Core/Src/SEGGER_RTT.c ****   volatile char*          pSrc;
 581:Core/Src/SEGGER_RTT.c **** 
 582:Core/Src/SEGGER_RTT.c ****   INIT();
  50              		.loc 1 582 3 view .LVU2
  51 0004 4C4C     		ldr	r4, .L20
  52 0006 2378     		ldrb	r3, [r4]	@ zero_extendqisi2
  53              	.LBE39:
 573:Core/Src/SEGGER_RTT.c ****   unsigned                NumBytesRem;
  54              		.loc 1 573 96 view .LVU3
  55 0008 83B0     		sub	sp, sp, #12
  56              		.cfi_def_cfa_offset 48
 573:Core/Src/SEGGER_RTT.c ****   unsigned                NumBytesRem;
  57              		.loc 1 573 96 view .LVU4
  58 000a 0546     		mov	r5, r0
 574:Core/Src/SEGGER_RTT.c ****   unsigned                NumBytesRem;
  59              		.loc 1 574 3 is_stmt 1 view .LVU5
 575:Core/Src/SEGGER_RTT.c ****   unsigned                RdOff;
  60              		.loc 1 575 3 view .LVU6
 576:Core/Src/SEGGER_RTT.c ****   unsigned                WrOff;
  61              		.loc 1 576 3 view .LVU7
 577:Core/Src/SEGGER_RTT.c ****   unsigned char*          pBuffer;
  62              		.loc 1 577 3 view .LVU8
 578:Core/Src/SEGGER_RTT.c ****   SEGGER_RTT_BUFFER_UP*   pRing;
  63              		.loc 1 578 3 view .LVU9
 579:Core/Src/SEGGER_RTT.c ****   volatile char*          pSrc;
  64              		.loc 1 579 3 view .LVU10
 580:Core/Src/SEGGER_RTT.c **** 
  65              		.loc 1 580 3 view .LVU11
  66              	.LBB42:
  67              		.loc 1 582 3 view .LVU12
  68              		.loc 1 582 3 view .LVU13
  69              	.LVL1:
  70              		.loc 1 582 3 view .LVU14
  71              		.loc 1 582 3 view .LVU15
  72              	.LBE42:
 573:Core/Src/SEGGER_RTT.c ****   unsigned                NumBytesRem;
  73              		.loc 1 573 96 is_stmt 0 view .LVU16
  74 000c 8A46     		mov	r10, r1
  75 000e 1746     		mov	r7, r2
  76              	.LBB43:
  77              		.loc 1 582 3 view .LVU17
  78 0010 002B     		cmp	r3, #0
  79 0012 56D0     		beq	.L18
  80              	.LVL2:
  81              	.L2:
  82              		.loc 1 582 3 is_stmt 1 discriminator 3 view .LVU18
  83              	.LBE43:
  84              		.loc 1 582 9 discriminator 3 view .LVU19
 583:Core/Src/SEGGER_RTT.c ****   pRing = (SEGGER_RTT_BUFFER_UP*)((char*)&_SEGGER_RTT.aUp[BufferIndex] + SEGGER_RTT_UNCACHED_OFF); 
  85              		.loc 1 583 3 discriminator 3 view .LVU20
 584:Core/Src/SEGGER_RTT.c ****   pBuffer = (unsigned char*)pData;
  86              		.loc 1 584 3 discriminator 3 view .LVU21
 585:Core/Src/SEGGER_RTT.c ****   RdOff = pRing->RdOff;
  87              		.loc 1 585 3 discriminator 3 view .LVU22
  88              		.loc 1 585 9 is_stmt 0 discriminator 3 view .LVU23
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccs0vIiH.s 			page 13


  89 0014 05EB4508 		add	r8, r5, r5, lsl #1
  90 0018 04EBC808 		add	r8, r4, r8, lsl #3
  91 001c 4FEA450B 		lsl	fp, r5, #1
  92 0020 D8F82860 		ldr	r6, [r8, #40]
  93              	.LVL3:
 586:Core/Src/SEGGER_RTT.c ****   WrOff = pRing->WrOff;
  94              		.loc 1 586 3 is_stmt 1 discriminator 3 view .LVU24
  95              		.loc 1 586 9 is_stmt 0 discriminator 3 view .LVU25
  96 0024 D8F82490 		ldr	r9, [r8, #36]
  97              	.LVL4:
 587:Core/Src/SEGGER_RTT.c ****   NumBytesRead = 0u;
  98              		.loc 1 587 3 is_stmt 1 discriminator 3 view .LVU26
 588:Core/Src/SEGGER_RTT.c ****   //
 589:Core/Src/SEGGER_RTT.c ****   // Read from current read position to wrap-around of buffer, first
 590:Core/Src/SEGGER_RTT.c ****   //
 591:Core/Src/SEGGER_RTT.c ****   if (RdOff > WrOff) {
  99              		.loc 1 591 3 discriminator 3 view .LVU27
 100              		.loc 1 591 6 is_stmt 0 discriminator 3 view .LVU28
 101 0028 4E45     		cmp	r6, r9
 102 002a 22D8     		bhi	.L19
 592:Core/Src/SEGGER_RTT.c ****     NumBytesRem = pRing->SizeOfBuffer - RdOff;
 593:Core/Src/SEGGER_RTT.c ****     NumBytesRem = MIN(NumBytesRem, BufferSize);
 594:Core/Src/SEGGER_RTT.c ****     pSrc = (pRing->pBuffer + RdOff) + SEGGER_RTT_UNCACHED_OFF;
 595:Core/Src/SEGGER_RTT.c **** #if SEGGER_RTT_MEMCPY_USE_BYTELOOP
 596:Core/Src/SEGGER_RTT.c ****     NumBytesRead += NumBytesRem;
 597:Core/Src/SEGGER_RTT.c ****     BufferSize   -= NumBytesRem;
 598:Core/Src/SEGGER_RTT.c ****     RdOff        += NumBytesRem;
 599:Core/Src/SEGGER_RTT.c ****     while (NumBytesRem--) {
 600:Core/Src/SEGGER_RTT.c ****       *pBuffer++ = *pSrc++;
 601:Core/Src/SEGGER_RTT.c ****     };
 602:Core/Src/SEGGER_RTT.c **** #else
 603:Core/Src/SEGGER_RTT.c ****     SEGGER_RTT_MEMCPY(pBuffer, (void*)pSrc, NumBytesRem);
 604:Core/Src/SEGGER_RTT.c ****     NumBytesRead += NumBytesRem;
 605:Core/Src/SEGGER_RTT.c ****     pBuffer      += NumBytesRem;
 606:Core/Src/SEGGER_RTT.c ****     BufferSize   -= NumBytesRem;
 607:Core/Src/SEGGER_RTT.c ****     RdOff        += NumBytesRem;
 608:Core/Src/SEGGER_RTT.c **** #endif
 609:Core/Src/SEGGER_RTT.c ****     //
 610:Core/Src/SEGGER_RTT.c ****     // Handle wrap-around of buffer
 611:Core/Src/SEGGER_RTT.c ****     //
 612:Core/Src/SEGGER_RTT.c ****     if (RdOff == pRing->SizeOfBuffer) {
 613:Core/Src/SEGGER_RTT.c ****       RdOff = 0u;
 614:Core/Src/SEGGER_RTT.c ****     }
 615:Core/Src/SEGGER_RTT.c ****   }
 616:Core/Src/SEGGER_RTT.c ****   //
 617:Core/Src/SEGGER_RTT.c ****   // Read remaining items of buffer
 618:Core/Src/SEGGER_RTT.c ****   //
 619:Core/Src/SEGGER_RTT.c ****   NumBytesRem = WrOff - RdOff;
 103              		.loc 1 619 3 is_stmt 1 view .LVU29
 104              		.loc 1 619 15 is_stmt 0 view .LVU30
 105 002c A9EB0609 		sub	r9, r9, r6
 106              	.LVL5:
 620:Core/Src/SEGGER_RTT.c ****   NumBytesRem = MIN(NumBytesRem, BufferSize);
 107              		.loc 1 620 3 is_stmt 1 view .LVU31
 108              		.loc 1 620 15 is_stmt 0 view .LVU32
 109 0030 4F45     		cmp	r7, r9
 110 0032 3A46     		mov	r2, r7
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccs0vIiH.s 			page 14


 111 0034 28BF     		it	cs
 112 0036 4A46     		movcs	r2, r9
 113              	.LVL6:
 621:Core/Src/SEGGER_RTT.c ****   if (NumBytesRem > 0u) {
 114              		.loc 1 621 3 is_stmt 1 view .LVU33
 115              		.loc 1 621 6 is_stmt 0 view .LVU34
 116 0038 1AB9     		cbnz	r2, .L9
 117              	.LVL7:
 118              	.L1:
 622:Core/Src/SEGGER_RTT.c ****     pSrc = (pRing->pBuffer + RdOff) + SEGGER_RTT_UNCACHED_OFF;
 623:Core/Src/SEGGER_RTT.c **** #if SEGGER_RTT_MEMCPY_USE_BYTELOOP
 624:Core/Src/SEGGER_RTT.c ****     NumBytesRead += NumBytesRem;
 625:Core/Src/SEGGER_RTT.c ****     BufferSize   -= NumBytesRem;
 626:Core/Src/SEGGER_RTT.c ****     RdOff        += NumBytesRem;
 627:Core/Src/SEGGER_RTT.c ****     while (NumBytesRem--) {
 628:Core/Src/SEGGER_RTT.c ****       *pBuffer++ = *pSrc++;
 629:Core/Src/SEGGER_RTT.c ****     };
 630:Core/Src/SEGGER_RTT.c **** #else
 631:Core/Src/SEGGER_RTT.c ****     SEGGER_RTT_MEMCPY(pBuffer, (void*)pSrc, NumBytesRem);
 632:Core/Src/SEGGER_RTT.c ****     NumBytesRead += NumBytesRem;
 633:Core/Src/SEGGER_RTT.c ****     pBuffer      += NumBytesRem;
 634:Core/Src/SEGGER_RTT.c ****     BufferSize   -= NumBytesRem;
 635:Core/Src/SEGGER_RTT.c ****     RdOff        += NumBytesRem;
 636:Core/Src/SEGGER_RTT.c **** #endif
 637:Core/Src/SEGGER_RTT.c ****   }
 638:Core/Src/SEGGER_RTT.c ****   //
 639:Core/Src/SEGGER_RTT.c ****   // Update read offset of buffer
 640:Core/Src/SEGGER_RTT.c ****   //
 641:Core/Src/SEGGER_RTT.c ****   if (NumBytesRead) {
 642:Core/Src/SEGGER_RTT.c ****     pRing->RdOff = RdOff;
 643:Core/Src/SEGGER_RTT.c ****   }
 644:Core/Src/SEGGER_RTT.c ****   //
 645:Core/Src/SEGGER_RTT.c ****   return NumBytesRead;
 646:Core/Src/SEGGER_RTT.c **** }
 119              		.loc 1 646 1 view .LVU35
 120 003a 1046     		mov	r0, r2
 121 003c 03B0     		add	sp, sp, #12
 122              		.cfi_remember_state
 123              		.cfi_def_cfa_offset 36
 124              		@ sp needed
 125 003e BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 126              	.LVL8:
 127              	.L9:
 128              		.cfi_restore_state
 621:Core/Src/SEGGER_RTT.c ****   if (NumBytesRem > 0u) {
 129              		.loc 1 621 6 view .LVU36
 130 0042 9046     		mov	r8, r2
 131              	.LVL9:
 621:Core/Src/SEGGER_RTT.c ****   if (NumBytesRem > 0u) {
 132              		.loc 1 621 6 view .LVU37
 133 0044 6B1C     		adds	r3, r5, #1
 134              	.LVL10:
 135              	.L7:
 622:Core/Src/SEGGER_RTT.c ****     pSrc = (pRing->pBuffer + RdOff) + SEGGER_RTT_UNCACHED_OFF;
 136              		.loc 1 622 5 is_stmt 1 view .LVU38
 631:Core/Src/SEGGER_RTT.c ****     NumBytesRead += NumBytesRem;
 137              		.loc 1 631 5 view .LVU39
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccs0vIiH.s 			page 15


 622:Core/Src/SEGGER_RTT.c ****     pSrc = (pRing->pBuffer + RdOff) + SEGGER_RTT_UNCACHED_OFF;
 138              		.loc 1 622 18 is_stmt 0 view .LVU40
 139 0046 03EB4303 		add	r3, r3, r3, lsl #1
 140 004a 04EBC303 		add	r3, r4, r3, lsl #3
 631:Core/Src/SEGGER_RTT.c ****     NumBytesRead += NumBytesRem;
 141              		.loc 1 631 5 view .LVU41
 142 004e 5046     		mov	r0, r10
 622:Core/Src/SEGGER_RTT.c ****     pSrc = (pRing->pBuffer + RdOff) + SEGGER_RTT_UNCACHED_OFF;
 143              		.loc 1 622 10 view .LVU42
 144 0050 5968     		ldr	r1, [r3, #4]
 631:Core/Src/SEGGER_RTT.c ****     NumBytesRead += NumBytesRem;
 145              		.loc 1 631 5 view .LVU43
 146 0052 3144     		add	r1, r1, r6
 635:Core/Src/SEGGER_RTT.c **** #endif
 147              		.loc 1 635 18 view .LVU44
 148 0054 1644     		add	r6, r6, r2
 149              	.LVL11:
 631:Core/Src/SEGGER_RTT.c ****     NumBytesRead += NumBytesRem;
 150              		.loc 1 631 5 view .LVU45
 151 0056 FFF7FEFF 		bl	memcpy
 152              	.LVL12:
 632:Core/Src/SEGGER_RTT.c ****     pBuffer      += NumBytesRem;
 153              		.loc 1 632 5 is_stmt 1 view .LVU46
 633:Core/Src/SEGGER_RTT.c ****     BufferSize   -= NumBytesRem;
 154              		.loc 1 633 5 view .LVU47
 634:Core/Src/SEGGER_RTT.c ****     RdOff        += NumBytesRem;
 155              		.loc 1 634 5 view .LVU48
 635:Core/Src/SEGGER_RTT.c **** #endif
 156              		.loc 1 635 5 view .LVU49
 632:Core/Src/SEGGER_RTT.c ****     pBuffer      += NumBytesRem;
 157              		.loc 1 632 18 is_stmt 0 view .LVU50
 158 005a 4246     		mov	r2, r8
 159              	.L5:
 160              	.LVL13:
 641:Core/Src/SEGGER_RTT.c ****     pRing->RdOff = RdOff;
 161              		.loc 1 641 3 is_stmt 1 view .LVU51
 641:Core/Src/SEGGER_RTT.c ****     pRing->RdOff = RdOff;
 162              		.loc 1 641 6 is_stmt 0 view .LVU52
 163 005c 002A     		cmp	r2, #0
 164 005e ECD0     		beq	.L1
 642:Core/Src/SEGGER_RTT.c ****   }
 165              		.loc 1 642 5 is_stmt 1 view .LVU53
 642:Core/Src/SEGGER_RTT.c ****   }
 166              		.loc 1 642 18 is_stmt 0 view .LVU54
 167 0060 AB44     		add	fp, fp, r5
 168 0062 04EBCB0B 		add	fp, r4, fp, lsl #3
 169              		.loc 1 646 1 view .LVU55
 170 0066 1046     		mov	r0, r2
 642:Core/Src/SEGGER_RTT.c ****   }
 171              		.loc 1 642 18 view .LVU56
 172 0068 CBF82860 		str	r6, [fp, #40]
 173              	.LVL14:
 645:Core/Src/SEGGER_RTT.c **** }
 174              		.loc 1 645 3 is_stmt 1 view .LVU57
 175              		.loc 1 646 1 is_stmt 0 view .LVU58
 176 006c 03B0     		add	sp, sp, #12
 177              		.cfi_remember_state
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccs0vIiH.s 			page 16


 178              		.cfi_def_cfa_offset 36
 179              		@ sp needed
 180 006e BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 181              	.LVL15:
 182              	.L19:
 183              		.cfi_restore_state
 592:Core/Src/SEGGER_RTT.c ****     NumBytesRem = MIN(NumBytesRem, BufferSize);
 184              		.loc 1 592 5 is_stmt 1 view .LVU59
 594:Core/Src/SEGGER_RTT.c **** #if SEGGER_RTT_MEMCPY_USE_BYTELOOP
 185              		.loc 1 594 18 is_stmt 0 view .LVU60
 186 0072 6B1C     		adds	r3, r5, #1
 187 0074 03EB4302 		add	r2, r3, r3, lsl #1
 188 0078 04EBC202 		add	r2, r4, r2, lsl #3
 603:Core/Src/SEGGER_RTT.c ****     NumBytesRead += NumBytesRem;
 189              		.loc 1 603 5 view .LVU61
 190 007c 5046     		mov	r0, r10
 594:Core/Src/SEGGER_RTT.c **** #if SEGGER_RTT_MEMCPY_USE_BYTELOOP
 191              		.loc 1 594 10 view .LVU62
 192 007e 5168     		ldr	r1, [r2, #4]
 592:Core/Src/SEGGER_RTT.c ****     NumBytesRem = MIN(NumBytesRem, BufferSize);
 193              		.loc 1 592 17 view .LVU63
 194 0080 D8F82020 		ldr	r2, [r8, #32]
 594:Core/Src/SEGGER_RTT.c **** #if SEGGER_RTT_MEMCPY_USE_BYTELOOP
 195              		.loc 1 594 18 view .LVU64
 196 0084 0193     		str	r3, [sp, #4]
 592:Core/Src/SEGGER_RTT.c ****     NumBytesRem = MIN(NumBytesRem, BufferSize);
 197              		.loc 1 592 17 view .LVU65
 198 0086 921B     		subs	r2, r2, r6
 199              	.LVL16:
 593:Core/Src/SEGGER_RTT.c ****     pSrc = (pRing->pBuffer + RdOff) + SEGGER_RTT_UNCACHED_OFF;
 200              		.loc 1 593 5 is_stmt 1 view .LVU66
 593:Core/Src/SEGGER_RTT.c ****     pSrc = (pRing->pBuffer + RdOff) + SEGGER_RTT_UNCACHED_OFF;
 201              		.loc 1 593 17 is_stmt 0 view .LVU67
 202 0088 BA42     		cmp	r2, r7
 203 008a 28BF     		it	cs
 204 008c 3A46     		movcs	r2, r7
 205              	.LVL17:
 594:Core/Src/SEGGER_RTT.c **** #if SEGGER_RTT_MEMCPY_USE_BYTELOOP
 206              		.loc 1 594 5 is_stmt 1 view .LVU68
 603:Core/Src/SEGGER_RTT.c ****     NumBytesRead += NumBytesRem;
 207              		.loc 1 603 5 view .LVU69
 208 008e 3144     		add	r1, r1, r6
 209 0090 0092     		str	r2, [sp]
 607:Core/Src/SEGGER_RTT.c **** #endif
 210              		.loc 1 607 18 is_stmt 0 view .LVU70
 211 0092 1644     		add	r6, r6, r2
 212              	.LVL18:
 603:Core/Src/SEGGER_RTT.c ****     NumBytesRead += NumBytesRem;
 213              		.loc 1 603 5 view .LVU71
 214 0094 FFF7FEFF 		bl	memcpy
 215              	.LVL19:
 604:Core/Src/SEGGER_RTT.c ****     pBuffer      += NumBytesRem;
 216              		.loc 1 604 5 is_stmt 1 view .LVU72
 605:Core/Src/SEGGER_RTT.c ****     BufferSize   -= NumBytesRem;
 217              		.loc 1 605 5 view .LVU73
 606:Core/Src/SEGGER_RTT.c ****     RdOff        += NumBytesRem;
 218              		.loc 1 606 5 view .LVU74
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccs0vIiH.s 			page 17


 612:Core/Src/SEGGER_RTT.c ****       RdOff = 0u;
 219              		.loc 1 612 8 is_stmt 0 view .LVU75
 220 0098 D8F82010 		ldr	r1, [r8, #32]
 606:Core/Src/SEGGER_RTT.c ****     RdOff        += NumBytesRem;
 221              		.loc 1 606 18 view .LVU76
 222 009c 009A     		ldr	r2, [sp]
 612:Core/Src/SEGGER_RTT.c ****       RdOff = 0u;
 223              		.loc 1 612 8 view .LVU77
 224 009e 019B     		ldr	r3, [sp, #4]
 225 00a0 B142     		cmp	r1, r6
 606:Core/Src/SEGGER_RTT.c ****     RdOff        += NumBytesRem;
 226              		.loc 1 606 18 view .LVU78
 227 00a2 A7EB0207 		sub	r7, r7, r2
 228              	.LVL20:
 607:Core/Src/SEGGER_RTT.c **** #endif
 229              		.loc 1 607 5 is_stmt 1 view .LVU79
 612:Core/Src/SEGGER_RTT.c ****       RdOff = 0u;
 230              		.loc 1 612 5 view .LVU80
 619:Core/Src/SEGGER_RTT.c ****   NumBytesRem = MIN(NumBytesRem, BufferSize);
 231              		.loc 1 619 15 is_stmt 0 view .LVU81
 232 00a6 14BF     		ite	ne
 233 00a8 A9EB0609 		subne	r9, r9, r6
 234              	.LVL21:
 613:Core/Src/SEGGER_RTT.c ****     }
 235              		.loc 1 613 13 view .LVU82
 236 00ac 0026     		moveq	r6, #0
 237              	.LVL22:
 619:Core/Src/SEGGER_RTT.c ****   NumBytesRem = MIN(NumBytesRem, BufferSize);
 238              		.loc 1 619 3 is_stmt 1 view .LVU83
 620:Core/Src/SEGGER_RTT.c ****   if (NumBytesRem > 0u) {
 239              		.loc 1 620 3 view .LVU84
 620:Core/Src/SEGGER_RTT.c ****   if (NumBytesRem > 0u) {
 240              		.loc 1 620 15 is_stmt 0 view .LVU85
 241 00ae 4F45     		cmp	r7, r9
 242 00b0 28BF     		it	cs
 243 00b2 4F46     		movcs	r7, r9
 244              	.LVL23:
 621:Core/Src/SEGGER_RTT.c ****     pSrc = (pRing->pBuffer + RdOff) + SEGGER_RTT_UNCACHED_OFF;
 245              		.loc 1 621 3 is_stmt 1 view .LVU86
 621:Core/Src/SEGGER_RTT.c ****     pSrc = (pRing->pBuffer + RdOff) + SEGGER_RTT_UNCACHED_OFF;
 246              		.loc 1 621 6 is_stmt 0 view .LVU87
 247 00b4 002F     		cmp	r7, #0
 248 00b6 D1D0     		beq	.L5
 249              	.LVL24:
 605:Core/Src/SEGGER_RTT.c ****     BufferSize   -= NumBytesRem;
 250              		.loc 1 605 18 view .LVU88
 251 00b8 9244     		add	r10, r10, r2
 252              	.LVL25:
 632:Core/Src/SEGGER_RTT.c ****     pBuffer      += NumBytesRem;
 253              		.loc 1 632 18 view .LVU89
 254 00ba 02EB0708 		add	r8, r2, r7
 255 00be 3A46     		mov	r2, r7
 256 00c0 C1E7     		b	.L7
 257              	.LVL26:
 258              	.L18:
 632:Core/Src/SEGGER_RTT.c ****     pBuffer      += NumBytesRem;
 259              		.loc 1 632 18 view .LVU90
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccs0vIiH.s 			page 18


 260 00c2 03F0FF06 		and	r6, r3, #255
 261              	.LBB44:
 582:Core/Src/SEGGER_RTT.c ****   pRing = (SEGGER_RTT_BUFFER_UP*)((char*)&_SEGGER_RTT.aUp[BufferIndex] + SEGGER_RTT_UNCACHED_OFF); 
 262              		.loc 1 582 3 is_stmt 1 view .LVU91
 263              	.LBB40:
 264              	.LBI40:
 314:Core/Src/SEGGER_RTT.c ****   volatile SEGGER_RTT_CB* p;   // Volatile to make sure that compiler cannot change the order of ac
 265              		.loc 1 314 13 view .LVU92
 266              	.LBB41:
 315:Core/Src/SEGGER_RTT.c ****   static const char _aInitStr[] = "\0\0\0\0\0\0TTR REGGES";  // Init complete ID string to make sur
 267              		.loc 1 315 3 view .LVU93
 316:Core/Src/SEGGER_RTT.c ****   unsigned i;
 268              		.loc 1 316 3 view .LVU94
 317:Core/Src/SEGGER_RTT.c ****   //
 269              		.loc 1 317 3 view .LVU95
 321:Core/Src/SEGGER_RTT.c ****   memset((SEGGER_RTT_CB*)p, 0, sizeof(_SEGGER_RTT));         // Make sure that the RTT CB is always
 270              		.loc 1 321 3 view .LVU96
 271              	.LVL27:
 322:Core/Src/SEGGER_RTT.c ****   p->MaxNumUpBuffers    = SEGGER_RTT_MAX_NUM_UP_BUFFERS;
 272              		.loc 1 322 3 view .LVU97
 273 00c6 3146     		mov	r1, r6
 274              	.LVL28:
 322:Core/Src/SEGGER_RTT.c ****   p->MaxNumUpBuffers    = SEGGER_RTT_MAX_NUM_UP_BUFFERS;
 275              		.loc 1 322 3 is_stmt 0 view .LVU98
 276 00c8 7822     		movs	r2, #120
 277              	.LVL29:
 322:Core/Src/SEGGER_RTT.c ****   p->MaxNumUpBuffers    = SEGGER_RTT_MAX_NUM_UP_BUFFERS;
 278              		.loc 1 322 3 view .LVU99
 279 00ca 04F13000 		add	r0, r4, #48
 280              	.LVL30:
 322:Core/Src/SEGGER_RTT.c ****   p->MaxNumUpBuffers    = SEGGER_RTT_MAX_NUM_UP_BUFFERS;
 281              		.loc 1 322 3 view .LVU100
 282 00ce FFF7FEFF 		bl	memset
 283              	.LVL31:
 323:Core/Src/SEGGER_RTT.c ****   p->MaxNumDownBuffers  = SEGGER_RTT_MAX_NUM_DOWN_BUFFERS;
 284              		.loc 1 323 3 is_stmt 1 view .LVU101
 323:Core/Src/SEGGER_RTT.c ****   p->MaxNumDownBuffers  = SEGGER_RTT_MAX_NUM_DOWN_BUFFERS;
 285              		.loc 1 323 25 is_stmt 0 view .LVU102
 286 00d2 0322     		movs	r2, #3
 287 00d4 2261     		str	r2, [r4, #16]
 324:Core/Src/SEGGER_RTT.c ****   //
 288              		.loc 1 324 3 is_stmt 1 view .LVU103
 328:Core/Src/SEGGER_RTT.c ****   p->aUp[0].pBuffer       = _acUpBuffer;
 289              		.loc 1 328 27 is_stmt 0 view .LVU104
 290 00d6 194B     		ldr	r3, .L20+4
 324:Core/Src/SEGGER_RTT.c ****   //
 291              		.loc 1 324 25 view .LVU105
 292 00d8 6261     		str	r2, [r4, #20]
 328:Core/Src/SEGGER_RTT.c ****   p->aUp[0].pBuffer       = _acUpBuffer;
 293              		.loc 1 328 3 is_stmt 1 view .LVU106
 330:Core/Src/SEGGER_RTT.c ****   p->aUp[0].RdOff         = 0u;
 294              		.loc 1 330 27 is_stmt 0 view .LVU107
 295 00da 4FF48061 		mov	r1, #1024
 329:Core/Src/SEGGER_RTT.c ****   p->aUp[0].SizeOfBuffer  = BUFFER_SIZE_UP;
 296              		.loc 1 329 27 view .LVU108
 297 00de 184A     		ldr	r2, .L20+8
 328:Core/Src/SEGGER_RTT.c ****   p->aUp[0].pBuffer       = _acUpBuffer;
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccs0vIiH.s 			page 19


 298              		.loc 1 328 27 view .LVU109
 299 00e0 A361     		str	r3, [r4, #24]
 329:Core/Src/SEGGER_RTT.c ****   p->aUp[0].SizeOfBuffer  = BUFFER_SIZE_UP;
 300              		.loc 1 329 3 is_stmt 1 view .LVU110
 329:Core/Src/SEGGER_RTT.c ****   p->aUp[0].SizeOfBuffer  = BUFFER_SIZE_UP;
 301              		.loc 1 329 27 is_stmt 0 view .LVU111
 302 00e2 E261     		str	r2, [r4, #28]
 330:Core/Src/SEGGER_RTT.c ****   p->aUp[0].RdOff         = 0u;
 303              		.loc 1 330 3 is_stmt 1 view .LVU112
 330:Core/Src/SEGGER_RTT.c ****   p->aUp[0].RdOff         = 0u;
 304              		.loc 1 330 27 is_stmt 0 view .LVU113
 305 00e4 2162     		str	r1, [r4, #32]
 331:Core/Src/SEGGER_RTT.c ****   p->aUp[0].WrOff         = 0u;
 306              		.loc 1 331 3 is_stmt 1 view .LVU114
 338:Core/Src/SEGGER_RTT.c ****   p->aDown[0].SizeOfBuffer  = BUFFER_SIZE_DOWN;
 307              		.loc 1 338 29 is_stmt 0 view .LVU115
 308 00e6 174A     		ldr	r2, .L20+12
 331:Core/Src/SEGGER_RTT.c ****   p->aUp[0].WrOff         = 0u;
 309              		.loc 1 331 27 view .LVU116
 310 00e8 A662     		str	r6, [r4, #40]
 332:Core/Src/SEGGER_RTT.c ****   p->aUp[0].Flags         = SEGGER_RTT_MODE_DEFAULT;
 311              		.loc 1 332 3 is_stmt 1 view .LVU117
 332:Core/Src/SEGGER_RTT.c ****   p->aUp[0].Flags         = SEGGER_RTT_MODE_DEFAULT;
 312              		.loc 1 332 27 is_stmt 0 view .LVU118
 313 00ea 6662     		str	r6, [r4, #36]
 333:Core/Src/SEGGER_RTT.c ****   //
 314              		.loc 1 333 3 is_stmt 1 view .LVU119
 333:Core/Src/SEGGER_RTT.c ****   //
 315              		.loc 1 333 27 is_stmt 0 view .LVU120
 316 00ec E662     		str	r6, [r4, #44]
 337:Core/Src/SEGGER_RTT.c ****   p->aDown[0].pBuffer       = _acDownBuffer;
 317              		.loc 1 337 3 is_stmt 1 view .LVU121
 337:Core/Src/SEGGER_RTT.c ****   p->aDown[0].pBuffer       = _acDownBuffer;
 318              		.loc 1 337 29 is_stmt 0 view .LVU122
 319 00ee 2366     		str	r3, [r4, #96]
 338:Core/Src/SEGGER_RTT.c ****   p->aDown[0].SizeOfBuffer  = BUFFER_SIZE_DOWN;
 320              		.loc 1 338 3 is_stmt 1 view .LVU123
 339:Core/Src/SEGGER_RTT.c ****   p->aDown[0].RdOff         = 0u;
 321              		.loc 1 339 29 is_stmt 0 view .LVU124
 322 00f0 1023     		movs	r3, #16
 338:Core/Src/SEGGER_RTT.c ****   p->aDown[0].SizeOfBuffer  = BUFFER_SIZE_DOWN;
 323              		.loc 1 338 29 view .LVU125
 324 00f2 6266     		str	r2, [r4, #100]
 339:Core/Src/SEGGER_RTT.c ****   p->aDown[0].RdOff         = 0u;
 325              		.loc 1 339 3 is_stmt 1 view .LVU126
 339:Core/Src/SEGGER_RTT.c ****   p->aDown[0].RdOff         = 0u;
 326              		.loc 1 339 29 is_stmt 0 view .LVU127
 327 00f4 A366     		str	r3, [r4, #104]
 340:Core/Src/SEGGER_RTT.c ****   p->aDown[0].WrOff         = 0u;
 328              		.loc 1 340 3 is_stmt 1 view .LVU128
 340:Core/Src/SEGGER_RTT.c ****   p->aDown[0].WrOff         = 0u;
 329              		.loc 1 340 29 is_stmt 0 view .LVU129
 330 00f6 2667     		str	r6, [r4, #112]
 341:Core/Src/SEGGER_RTT.c ****   p->aDown[0].Flags         = SEGGER_RTT_MODE_DEFAULT;
 331              		.loc 1 341 3 is_stmt 1 view .LVU130
 341:Core/Src/SEGGER_RTT.c ****   p->aDown[0].Flags         = SEGGER_RTT_MODE_DEFAULT;
 332              		.loc 1 341 29 is_stmt 0 view .LVU131
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccs0vIiH.s 			page 20


 333 00f8 E666     		str	r6, [r4, #108]
 342:Core/Src/SEGGER_RTT.c ****   //
 334              		.loc 1 342 3 is_stmt 1 view .LVU132
 342:Core/Src/SEGGER_RTT.c ****   //
 335              		.loc 1 342 29 is_stmt 0 view .LVU133
 336 00fa 6667     		str	r6, [r4, #116]
 348:Core/Src/SEGGER_RTT.c ****   for (i = 0; i < sizeof(_aInitStr) - 1; ++i) {
 337              		.loc 1 348 3 is_stmt 1 view .LVU134
 338              		.syntax unified
 339              	@ 348 "Core/Src/SEGGER_RTT.c" 1
 340 00fc BFF35F8F 		dmb
 341              	
 342              	@ 0 "" 2
 348:Core/Src/SEGGER_RTT.c ****   for (i = 0; i < sizeof(_aInitStr) - 1; ++i) {
 343              		.loc 1 348 13 view .LVU135
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 344              		.loc 1 349 3 view .LVU136
 345              	.LVL32:
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 346              		.loc 1 349 17 view .LVU137
 350:Core/Src/SEGGER_RTT.c ****   }
 347              		.loc 1 350 5 view .LVU138
 350:Core/Src/SEGGER_RTT.c ****   }
 348              		.loc 1 350 16 is_stmt 0 view .LVU139
 349              		.thumb
 350              		.syntax unified
 351 0100 4521     		movs	r1, #69
 352 0102 4720     		movs	r0, #71
 353 0104 4FF0530C 		mov	ip, #83
 354 0108 84F800C0 		strb	ip, [r4]
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 355              		.loc 1 349 42 is_stmt 1 view .LVU140
 356              	.LVL33:
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 357              		.loc 1 349 17 view .LVU141
 350:Core/Src/SEGGER_RTT.c ****   }
 358              		.loc 1 350 5 view .LVU142
 350:Core/Src/SEGGER_RTT.c ****   }
 359              		.loc 1 350 16 is_stmt 0 view .LVU143
 360 010c 5222     		movs	r2, #82
 361 010e 6170     		strb	r1, [r4, #1]
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 362              		.loc 1 349 42 is_stmt 1 view .LVU144
 363              	.LVL34:
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 364              		.loc 1 349 17 view .LVU145
 350:Core/Src/SEGGER_RTT.c ****   }
 365              		.loc 1 350 5 view .LVU146
 350:Core/Src/SEGGER_RTT.c ****   }
 366              		.loc 1 350 16 is_stmt 0 view .LVU147
 367 0110 5423     		movs	r3, #84
 368 0112 A070     		strb	r0, [r4, #2]
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 369              		.loc 1 349 42 is_stmt 1 view .LVU148
 370              	.LVL35:
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 371              		.loc 1 349 17 view .LVU149
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccs0vIiH.s 			page 21


 350:Core/Src/SEGGER_RTT.c ****   }
 372              		.loc 1 350 5 view .LVU150
 350:Core/Src/SEGGER_RTT.c ****   }
 373              		.loc 1 350 16 is_stmt 0 view .LVU151
 374 0114 E070     		strb	r0, [r4, #3]
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 375              		.loc 1 349 42 is_stmt 1 view .LVU152
 376              	.LVL36:
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 377              		.loc 1 349 17 view .LVU153
 350:Core/Src/SEGGER_RTT.c ****   }
 378              		.loc 1 350 5 view .LVU154
 350:Core/Src/SEGGER_RTT.c ****   }
 379              		.loc 1 350 16 is_stmt 0 view .LVU155
 380 0116 2171     		strb	r1, [r4, #4]
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 381              		.loc 1 349 42 is_stmt 1 view .LVU156
 382              	.LVL37:
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 383              		.loc 1 349 17 view .LVU157
 350:Core/Src/SEGGER_RTT.c ****   }
 384              		.loc 1 350 5 view .LVU158
 350:Core/Src/SEGGER_RTT.c ****   }
 385              		.loc 1 350 16 is_stmt 0 view .LVU159
 386 0118 2021     		movs	r1, #32
 387 011a 6271     		strb	r2, [r4, #5]
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 388              		.loc 1 349 42 is_stmt 1 view .LVU160
 389              	.LVL38:
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 390              		.loc 1 349 17 view .LVU161
 350:Core/Src/SEGGER_RTT.c ****   }
 391              		.loc 1 350 5 view .LVU162
 350:Core/Src/SEGGER_RTT.c ****   }
 392              		.loc 1 350 16 is_stmt 0 view .LVU163
 393 011c A171     		strb	r1, [r4, #6]
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 394              		.loc 1 349 42 is_stmt 1 view .LVU164
 395              	.LVL39:
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 396              		.loc 1 349 17 view .LVU165
 350:Core/Src/SEGGER_RTT.c ****   }
 397              		.loc 1 350 5 view .LVU166
 350:Core/Src/SEGGER_RTT.c ****   }
 398              		.loc 1 350 16 is_stmt 0 view .LVU167
 399 011e E271     		strb	r2, [r4, #7]
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 400              		.loc 1 349 42 is_stmt 1 view .LVU168
 401              	.LVL40:
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 402              		.loc 1 349 17 view .LVU169
 350:Core/Src/SEGGER_RTT.c ****   }
 403              		.loc 1 350 5 view .LVU170
 350:Core/Src/SEGGER_RTT.c ****   }
 404              		.loc 1 350 16 is_stmt 0 view .LVU171
 405 0120 2372     		strb	r3, [r4, #8]
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccs0vIiH.s 			page 22


 406              		.loc 1 349 42 is_stmt 1 view .LVU172
 407              	.LVL41:
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 408              		.loc 1 349 17 view .LVU173
 350:Core/Src/SEGGER_RTT.c ****   }
 409              		.loc 1 350 5 view .LVU174
 350:Core/Src/SEGGER_RTT.c ****   }
 410              		.loc 1 350 16 is_stmt 0 view .LVU175
 411 0122 6372     		strb	r3, [r4, #9]
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 412              		.loc 1 349 42 is_stmt 1 view .LVU176
 413              	.LVL42:
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 414              		.loc 1 349 17 view .LVU177
 350:Core/Src/SEGGER_RTT.c ****   }
 415              		.loc 1 350 5 view .LVU178
 350:Core/Src/SEGGER_RTT.c ****   }
 416              		.loc 1 350 16 is_stmt 0 view .LVU179
 417 0124 A672     		strb	r6, [r4, #10]
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 418              		.loc 1 349 42 is_stmt 1 view .LVU180
 419              	.LVL43:
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 420              		.loc 1 349 17 view .LVU181
 350:Core/Src/SEGGER_RTT.c ****   }
 421              		.loc 1 350 5 view .LVU182
 350:Core/Src/SEGGER_RTT.c ****   }
 422              		.loc 1 350 16 is_stmt 0 view .LVU183
 423 0126 E672     		strb	r6, [r4, #11]
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 424              		.loc 1 349 42 is_stmt 1 view .LVU184
 425              	.LVL44:
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 426              		.loc 1 349 17 view .LVU185
 350:Core/Src/SEGGER_RTT.c ****   }
 427              		.loc 1 350 5 view .LVU186
 350:Core/Src/SEGGER_RTT.c ****   }
 428              		.loc 1 350 16 is_stmt 0 view .LVU187
 429 0128 2673     		strb	r6, [r4, #12]
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 430              		.loc 1 349 42 is_stmt 1 view .LVU188
 431              	.LVL45:
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 432              		.loc 1 349 17 view .LVU189
 350:Core/Src/SEGGER_RTT.c ****   }
 433              		.loc 1 350 5 view .LVU190
 350:Core/Src/SEGGER_RTT.c ****   }
 434              		.loc 1 350 16 is_stmt 0 view .LVU191
 435 012a 6673     		strb	r6, [r4, #13]
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 436              		.loc 1 349 42 is_stmt 1 view .LVU192
 437              	.LVL46:
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 438              		.loc 1 349 17 view .LVU193
 350:Core/Src/SEGGER_RTT.c ****   }
 439              		.loc 1 350 5 view .LVU194
 350:Core/Src/SEGGER_RTT.c ****   }
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccs0vIiH.s 			page 23


 440              		.loc 1 350 16 is_stmt 0 view .LVU195
 441 012c A673     		strb	r6, [r4, #14]
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 442              		.loc 1 349 42 is_stmt 1 view .LVU196
 443              	.LVL47:
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 444              		.loc 1 349 17 view .LVU197
 350:Core/Src/SEGGER_RTT.c ****   }
 445              		.loc 1 350 5 view .LVU198
 350:Core/Src/SEGGER_RTT.c ****   }
 446              		.loc 1 350 16 is_stmt 0 view .LVU199
 447 012e E673     		strb	r6, [r4, #15]
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 448              		.loc 1 349 42 is_stmt 1 view .LVU200
 449              	.LVL48:
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 450              		.loc 1 349 17 view .LVU201
 352:Core/Src/SEGGER_RTT.c **** }
 451              		.loc 1 352 3 view .LVU202
 452              		.syntax unified
 453              	@ 352 "Core/Src/SEGGER_RTT.c" 1
 454 0130 BFF35F8F 		dmb
 455              	
 456              	@ 0 "" 2
 352:Core/Src/SEGGER_RTT.c **** }
 457              		.loc 1 352 13 view .LVU203
 353:Core/Src/SEGGER_RTT.c **** 
 458              		.loc 1 353 1 is_stmt 0 view .LVU204
 459              		.thumb
 460              		.syntax unified
 461 0134 6EE7     		b	.L2
 462              	.L21:
 463 0136 00BF     		.align	2
 464              	.L20:
 465 0138 00000000 		.word	.LANCHOR0
 466 013c 00000000 		.word	.LC0
 467 0140 00000000 		.word	.LANCHOR1
 468 0144 00000000 		.word	.LANCHOR2
 469              	.LBE41:
 470              	.LBE40:
 471              	.LBE44:
 472              		.cfi_endproc
 473              	.LFE5:
 475              		.section	.text.SEGGER_RTT_ReadNoLock,"ax",%progbits
 476              		.align	1
 477              		.p2align 2,,3
 478              		.global	SEGGER_RTT_ReadNoLock
 479              		.syntax unified
 480              		.thumb
 481              		.thumb_func
 483              	SEGGER_RTT_ReadNoLock:
 484              	.LVL49:
 485              	.LFB6:
 647:Core/Src/SEGGER_RTT.c **** 
 648:Core/Src/SEGGER_RTT.c **** /*********************************************************************
 649:Core/Src/SEGGER_RTT.c **** *
 650:Core/Src/SEGGER_RTT.c **** *       SEGGER_RTT_ReadNoLock()
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccs0vIiH.s 			page 24


 651:Core/Src/SEGGER_RTT.c **** *
 652:Core/Src/SEGGER_RTT.c **** *  Function description
 653:Core/Src/SEGGER_RTT.c **** *    Reads characters from SEGGER real-time-terminal control block
 654:Core/Src/SEGGER_RTT.c **** *    which have been previously stored by the host.
 655:Core/Src/SEGGER_RTT.c **** *    Do not lock against interrupts and multiple access.
 656:Core/Src/SEGGER_RTT.c **** *
 657:Core/Src/SEGGER_RTT.c **** *  Parameters
 658:Core/Src/SEGGER_RTT.c **** *    BufferIndex  Index of Down-buffer to be used (e.g. 0 for "Terminal").
 659:Core/Src/SEGGER_RTT.c **** *    pBuffer      Pointer to buffer provided by target application, to copy characters from RTT-dow
 660:Core/Src/SEGGER_RTT.c **** *    BufferSize   Size of the target application buffer.
 661:Core/Src/SEGGER_RTT.c **** *
 662:Core/Src/SEGGER_RTT.c **** *  Return value
 663:Core/Src/SEGGER_RTT.c **** *    Number of bytes that have been read.
 664:Core/Src/SEGGER_RTT.c **** */
 665:Core/Src/SEGGER_RTT.c **** unsigned SEGGER_RTT_ReadNoLock(unsigned BufferIndex, void* pData, unsigned BufferSize) {
 486              		.loc 1 665 88 is_stmt 1 view -0
 487              		.cfi_startproc
 488              		@ args = 0, pretend = 0, frame = 8
 489              		@ frame_needed = 0, uses_anonymous_args = 0
 490              		.loc 1 665 88 is_stmt 0 view .LVU206
 491 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 492              		.cfi_def_cfa_offset 36
 493              		.cfi_offset 4, -36
 494              		.cfi_offset 5, -32
 495              		.cfi_offset 6, -28
 496              		.cfi_offset 7, -24
 497              		.cfi_offset 8, -20
 498              		.cfi_offset 9, -16
 499              		.cfi_offset 10, -12
 500              		.cfi_offset 11, -8
 501              		.cfi_offset 14, -4
 502              	.LBB49:
 666:Core/Src/SEGGER_RTT.c ****   unsigned                NumBytesRem;
 667:Core/Src/SEGGER_RTT.c ****   unsigned                NumBytesRead;
 668:Core/Src/SEGGER_RTT.c ****   unsigned                RdOff;
 669:Core/Src/SEGGER_RTT.c ****   unsigned                WrOff;
 670:Core/Src/SEGGER_RTT.c ****   unsigned char*          pBuffer;
 671:Core/Src/SEGGER_RTT.c ****   SEGGER_RTT_BUFFER_DOWN* pRing;
 672:Core/Src/SEGGER_RTT.c ****   volatile char*          pSrc;
 673:Core/Src/SEGGER_RTT.c ****   //
 674:Core/Src/SEGGER_RTT.c ****   INIT();
 503              		.loc 1 674 3 view .LVU207
 504 0004 474C     		ldr	r4, .L40
 505 0006 2378     		ldrb	r3, [r4]	@ zero_extendqisi2
 506              	.LBE49:
 665:Core/Src/SEGGER_RTT.c ****   unsigned                NumBytesRem;
 507              		.loc 1 665 88 view .LVU208
 508 0008 83B0     		sub	sp, sp, #12
 509              		.cfi_def_cfa_offset 48
 665:Core/Src/SEGGER_RTT.c ****   unsigned                NumBytesRem;
 510              		.loc 1 665 88 view .LVU209
 511 000a 0646     		mov	r6, r0
 666:Core/Src/SEGGER_RTT.c ****   unsigned                NumBytesRem;
 512              		.loc 1 666 3 is_stmt 1 view .LVU210
 667:Core/Src/SEGGER_RTT.c ****   unsigned                RdOff;
 513              		.loc 1 667 3 view .LVU211
 668:Core/Src/SEGGER_RTT.c ****   unsigned                WrOff;
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccs0vIiH.s 			page 25


 514              		.loc 1 668 3 view .LVU212
 669:Core/Src/SEGGER_RTT.c ****   unsigned char*          pBuffer;
 515              		.loc 1 669 3 view .LVU213
 670:Core/Src/SEGGER_RTT.c ****   SEGGER_RTT_BUFFER_DOWN* pRing;
 516              		.loc 1 670 3 view .LVU214
 671:Core/Src/SEGGER_RTT.c ****   volatile char*          pSrc;
 517              		.loc 1 671 3 view .LVU215
 672:Core/Src/SEGGER_RTT.c ****   //
 518              		.loc 1 672 3 view .LVU216
 519              	.LBB52:
 520              		.loc 1 674 3 view .LVU217
 521              		.loc 1 674 3 view .LVU218
 522              	.LVL50:
 523              		.loc 1 674 3 view .LVU219
 524              		.loc 1 674 3 view .LVU220
 525              	.LBE52:
 665:Core/Src/SEGGER_RTT.c ****   unsigned                NumBytesRem;
 526              		.loc 1 665 88 is_stmt 0 view .LVU221
 527 000c 8A46     		mov	r10, r1
 528 000e 9146     		mov	r9, r2
 529              	.LBB53:
 530              		.loc 1 674 3 view .LVU222
 531 0010 002B     		cmp	r3, #0
 532 0012 4FD0     		beq	.L38
 533              	.LVL51:
 534              	.L23:
 535              		.loc 1 674 3 is_stmt 1 discriminator 3 view .LVU223
 536              	.LBE53:
 537              		.loc 1 674 9 discriminator 3 view .LVU224
 675:Core/Src/SEGGER_RTT.c ****   pRing = (SEGGER_RTT_BUFFER_DOWN*)((char*)&_SEGGER_RTT.aDown[BufferIndex] + SEGGER_RTT_UNCACHED_OF
 538              		.loc 1 675 3 discriminator 3 view .LVU225
 676:Core/Src/SEGGER_RTT.c ****   pBuffer = (unsigned char*)pData;
 539              		.loc 1 676 3 discriminator 3 view .LVU226
 677:Core/Src/SEGGER_RTT.c ****   RdOff = pRing->RdOff;
 540              		.loc 1 677 3 discriminator 3 view .LVU227
 541              		.loc 1 677 9 is_stmt 0 discriminator 3 view .LVU228
 542 0014 06EB4608 		add	r8, r6, r6, lsl #1
 543 0018 04EBC808 		add	r8, r4, r8, lsl #3
 544 001c 4FEA460B 		lsl	fp, r6, #1
 678:Core/Src/SEGGER_RTT.c ****   WrOff = pRing->WrOff;
 545              		.loc 1 678 9 discriminator 3 view .LVU229
 546 0020 D8F86C30 		ldr	r3, [r8, #108]
 677:Core/Src/SEGGER_RTT.c ****   RdOff = pRing->RdOff;
 547              		.loc 1 677 9 discriminator 3 view .LVU230
 548 0024 D8F87070 		ldr	r7, [r8, #112]
 549              	.LVL52:
 550              		.loc 1 678 3 is_stmt 1 discriminator 3 view .LVU231
 679:Core/Src/SEGGER_RTT.c ****   NumBytesRead = 0u;
 551              		.loc 1 679 3 discriminator 3 view .LVU232
 680:Core/Src/SEGGER_RTT.c ****   //
 681:Core/Src/SEGGER_RTT.c ****   // Read from current read position to wrap-around of buffer, first
 682:Core/Src/SEGGER_RTT.c ****   //
 683:Core/Src/SEGGER_RTT.c ****   if (RdOff > WrOff) {
 552              		.loc 1 683 3 discriminator 3 view .LVU233
 553              		.loc 1 683 6 is_stmt 0 discriminator 3 view .LVU234
 554 0028 9F42     		cmp	r7, r3
 555 002a 21D8     		bhi	.L39
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccs0vIiH.s 			page 26


 684:Core/Src/SEGGER_RTT.c ****     NumBytesRem = pRing->SizeOfBuffer - RdOff;
 685:Core/Src/SEGGER_RTT.c ****     NumBytesRem = MIN(NumBytesRem, BufferSize);
 686:Core/Src/SEGGER_RTT.c ****     pSrc = (pRing->pBuffer + RdOff) + SEGGER_RTT_UNCACHED_OFF;
 687:Core/Src/SEGGER_RTT.c **** #if SEGGER_RTT_MEMCPY_USE_BYTELOOP
 688:Core/Src/SEGGER_RTT.c ****     NumBytesRead += NumBytesRem;
 689:Core/Src/SEGGER_RTT.c ****     BufferSize   -= NumBytesRem;
 690:Core/Src/SEGGER_RTT.c ****     RdOff        += NumBytesRem;
 691:Core/Src/SEGGER_RTT.c ****     while (NumBytesRem--) {
 692:Core/Src/SEGGER_RTT.c ****       *pBuffer++ = *pSrc++;
 693:Core/Src/SEGGER_RTT.c ****     };
 694:Core/Src/SEGGER_RTT.c **** #else
 695:Core/Src/SEGGER_RTT.c ****     SEGGER_RTT_MEMCPY(pBuffer, (void*)pSrc, NumBytesRem);
 696:Core/Src/SEGGER_RTT.c ****     NumBytesRead += NumBytesRem;
 697:Core/Src/SEGGER_RTT.c ****     pBuffer      += NumBytesRem;
 698:Core/Src/SEGGER_RTT.c ****     BufferSize   -= NumBytesRem;
 699:Core/Src/SEGGER_RTT.c ****     RdOff        += NumBytesRem;
 700:Core/Src/SEGGER_RTT.c **** #endif
 701:Core/Src/SEGGER_RTT.c ****     //
 702:Core/Src/SEGGER_RTT.c ****     // Handle wrap-around of buffer
 703:Core/Src/SEGGER_RTT.c ****     //
 704:Core/Src/SEGGER_RTT.c ****     if (RdOff == pRing->SizeOfBuffer) {
 705:Core/Src/SEGGER_RTT.c ****       RdOff = 0u;
 706:Core/Src/SEGGER_RTT.c ****     }
 707:Core/Src/SEGGER_RTT.c ****   }
 708:Core/Src/SEGGER_RTT.c ****   //
 709:Core/Src/SEGGER_RTT.c ****   // Read remaining items of buffer
 710:Core/Src/SEGGER_RTT.c ****   //
 711:Core/Src/SEGGER_RTT.c ****   NumBytesRem = WrOff - RdOff;
 556              		.loc 1 711 3 is_stmt 1 view .LVU235
 557              		.loc 1 711 15 is_stmt 0 view .LVU236
 558 002c DB1B     		subs	r3, r3, r7
 559              	.LVL53:
 712:Core/Src/SEGGER_RTT.c ****   NumBytesRem = MIN(NumBytesRem, BufferSize);
 560              		.loc 1 712 3 is_stmt 1 view .LVU237
 561              		.loc 1 712 15 is_stmt 0 view .LVU238
 562 002e 9945     		cmp	r9, r3
 563 0030 4D46     		mov	r5, r9
 564 0032 28BF     		it	cs
 565 0034 1D46     		movcs	r5, r3
 566              	.LVL54:
 713:Core/Src/SEGGER_RTT.c ****   if (NumBytesRem > 0u) {
 567              		.loc 1 713 3 is_stmt 1 view .LVU239
 568              		.loc 1 713 6 is_stmt 0 view .LVU240
 569 0036 1DB9     		cbnz	r5, .L30
 570              	.LVL55:
 571              	.L22:
 714:Core/Src/SEGGER_RTT.c ****     pSrc = (pRing->pBuffer + RdOff) + SEGGER_RTT_UNCACHED_OFF;
 715:Core/Src/SEGGER_RTT.c **** #if SEGGER_RTT_MEMCPY_USE_BYTELOOP
 716:Core/Src/SEGGER_RTT.c ****     NumBytesRead += NumBytesRem;
 717:Core/Src/SEGGER_RTT.c ****     BufferSize   -= NumBytesRem;
 718:Core/Src/SEGGER_RTT.c ****     RdOff        += NumBytesRem;
 719:Core/Src/SEGGER_RTT.c ****     while (NumBytesRem--) {
 720:Core/Src/SEGGER_RTT.c ****       *pBuffer++ = *pSrc++;
 721:Core/Src/SEGGER_RTT.c ****     };
 722:Core/Src/SEGGER_RTT.c **** #else
 723:Core/Src/SEGGER_RTT.c ****     SEGGER_RTT_MEMCPY(pBuffer, (void*)pSrc, NumBytesRem);
 724:Core/Src/SEGGER_RTT.c ****     NumBytesRead += NumBytesRem;
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccs0vIiH.s 			page 27


 725:Core/Src/SEGGER_RTT.c ****     pBuffer      += NumBytesRem;
 726:Core/Src/SEGGER_RTT.c ****     BufferSize   -= NumBytesRem;
 727:Core/Src/SEGGER_RTT.c ****     RdOff        += NumBytesRem;
 728:Core/Src/SEGGER_RTT.c **** #endif
 729:Core/Src/SEGGER_RTT.c ****   }
 730:Core/Src/SEGGER_RTT.c ****   if (NumBytesRead) {
 731:Core/Src/SEGGER_RTT.c ****     pRing->RdOff = RdOff;
 732:Core/Src/SEGGER_RTT.c ****   }
 733:Core/Src/SEGGER_RTT.c ****   //
 734:Core/Src/SEGGER_RTT.c ****   return NumBytesRead;
 735:Core/Src/SEGGER_RTT.c **** }
 572              		.loc 1 735 1 view .LVU241
 573 0038 2846     		mov	r0, r5
 574 003a 03B0     		add	sp, sp, #12
 575              		.cfi_remember_state
 576              		.cfi_def_cfa_offset 36
 577              		@ sp needed
 578 003c BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 579              	.LVL56:
 580              	.L30:
 581              		.cfi_restore_state
 713:Core/Src/SEGGER_RTT.c ****   if (NumBytesRem > 0u) {
 582              		.loc 1 713 6 view .LVU242
 583 0040 A846     		mov	r8, r5
 584              	.LVL57:
 585              	.L28:
 714:Core/Src/SEGGER_RTT.c ****     pSrc = (pRing->pBuffer + RdOff) + SEGGER_RTT_UNCACHED_OFF;
 586              		.loc 1 714 5 is_stmt 1 view .LVU243
 723:Core/Src/SEGGER_RTT.c ****     NumBytesRead += NumBytesRem;
 587              		.loc 1 723 5 view .LVU244
 714:Core/Src/SEGGER_RTT.c ****     pSrc = (pRing->pBuffer + RdOff) + SEGGER_RTT_UNCACHED_OFF;
 588              		.loc 1 714 18 is_stmt 0 view .LVU245
 589 0042 0BEB0603 		add	r3, fp, r6
 590 0046 04EBC303 		add	r3, r4, r3, lsl #3
 723:Core/Src/SEGGER_RTT.c ****     NumBytesRead += NumBytesRem;
 591              		.loc 1 723 5 view .LVU246
 592 004a 2A46     		mov	r2, r5
 714:Core/Src/SEGGER_RTT.c ****     pSrc = (pRing->pBuffer + RdOff) + SEGGER_RTT_UNCACHED_OFF;
 593              		.loc 1 714 10 view .LVU247
 594 004c 596E     		ldr	r1, [r3, #100]
 723:Core/Src/SEGGER_RTT.c ****     NumBytesRead += NumBytesRem;
 595              		.loc 1 723 5 view .LVU248
 596 004e 5046     		mov	r0, r10
 597 0050 3944     		add	r1, r1, r7
 598 0052 FFF7FEFF 		bl	memcpy
 599              	.LVL58:
 727:Core/Src/SEGGER_RTT.c **** #endif
 600              		.loc 1 727 18 view .LVU249
 601 0056 2F44     		add	r7, r7, r5
 602              	.LVL59:
 724:Core/Src/SEGGER_RTT.c ****     pBuffer      += NumBytesRem;
 603              		.loc 1 724 5 is_stmt 1 view .LVU250
 725:Core/Src/SEGGER_RTT.c ****     BufferSize   -= NumBytesRem;
 604              		.loc 1 725 5 view .LVU251
 726:Core/Src/SEGGER_RTT.c ****     RdOff        += NumBytesRem;
 605              		.loc 1 726 5 view .LVU252
 727:Core/Src/SEGGER_RTT.c **** #endif
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccs0vIiH.s 			page 28


 606              		.loc 1 727 5 view .LVU253
 724:Core/Src/SEGGER_RTT.c ****     pBuffer      += NumBytesRem;
 607              		.loc 1 724 18 is_stmt 0 view .LVU254
 608 0058 4546     		mov	r5, r8
 609              	.LVL60:
 610              	.L26:
 730:Core/Src/SEGGER_RTT.c ****     pRing->RdOff = RdOff;
 611              		.loc 1 730 3 is_stmt 1 view .LVU255
 730:Core/Src/SEGGER_RTT.c ****     pRing->RdOff = RdOff;
 612              		.loc 1 730 6 is_stmt 0 view .LVU256
 613 005a 002D     		cmp	r5, #0
 614 005c ECD0     		beq	.L22
 731:Core/Src/SEGGER_RTT.c ****   }
 615              		.loc 1 731 5 is_stmt 1 view .LVU257
 731:Core/Src/SEGGER_RTT.c ****   }
 616              		.loc 1 731 18 is_stmt 0 view .LVU258
 617 005e B344     		add	fp, fp, r6
 618 0060 04EBCB0B 		add	fp, r4, fp, lsl #3
 619              		.loc 1 735 1 view .LVU259
 620 0064 2846     		mov	r0, r5
 731:Core/Src/SEGGER_RTT.c ****   }
 621              		.loc 1 731 18 view .LVU260
 622 0066 CBF87070 		str	r7, [fp, #112]
 623              	.LVL61:
 734:Core/Src/SEGGER_RTT.c **** }
 624              		.loc 1 734 3 is_stmt 1 view .LVU261
 625              		.loc 1 735 1 is_stmt 0 view .LVU262
 626 006a 03B0     		add	sp, sp, #12
 627              		.cfi_remember_state
 628              		.cfi_def_cfa_offset 36
 629              		@ sp needed
 630 006c BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 631              	.LVL62:
 632              	.L39:
 633              		.cfi_restore_state
 684:Core/Src/SEGGER_RTT.c ****     NumBytesRem = MIN(NumBytesRem, BufferSize);
 634              		.loc 1 684 5 is_stmt 1 view .LVU263
 684:Core/Src/SEGGER_RTT.c ****     NumBytesRem = MIN(NumBytesRem, BufferSize);
 635              		.loc 1 684 17 is_stmt 0 view .LVU264
 636 0070 D8F86850 		ldr	r5, [r8, #104]
 686:Core/Src/SEGGER_RTT.c **** #if SEGGER_RTT_MEMCPY_USE_BYTELOOP
 637              		.loc 1 686 10 view .LVU265
 638 0074 D8F86410 		ldr	r1, [r8, #100]
 639 0078 0193     		str	r3, [sp, #4]
 684:Core/Src/SEGGER_RTT.c ****     NumBytesRem = MIN(NumBytesRem, BufferSize);
 640              		.loc 1 684 17 view .LVU266
 641 007a ED1B     		subs	r5, r5, r7
 642              	.LVL63:
 685:Core/Src/SEGGER_RTT.c ****     pSrc = (pRing->pBuffer + RdOff) + SEGGER_RTT_UNCACHED_OFF;
 643              		.loc 1 685 5 is_stmt 1 view .LVU267
 685:Core/Src/SEGGER_RTT.c ****     pSrc = (pRing->pBuffer + RdOff) + SEGGER_RTT_UNCACHED_OFF;
 644              		.loc 1 685 17 is_stmt 0 view .LVU268
 645 007c 4D45     		cmp	r5, r9
 646 007e 28BF     		it	cs
 647 0080 4D46     		movcs	r5, r9
 648              	.LVL64:
 686:Core/Src/SEGGER_RTT.c **** #if SEGGER_RTT_MEMCPY_USE_BYTELOOP
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccs0vIiH.s 			page 29


 649              		.loc 1 686 5 is_stmt 1 view .LVU269
 695:Core/Src/SEGGER_RTT.c ****     NumBytesRead += NumBytesRem;
 650              		.loc 1 695 5 view .LVU270
 651 0082 3944     		add	r1, r1, r7
 652 0084 2A46     		mov	r2, r5
 653 0086 5046     		mov	r0, r10
 654 0088 FFF7FEFF 		bl	memcpy
 655              	.LVL65:
 696:Core/Src/SEGGER_RTT.c ****     pBuffer      += NumBytesRem;
 656              		.loc 1 696 5 view .LVU271
 697:Core/Src/SEGGER_RTT.c ****     BufferSize   -= NumBytesRem;
 657              		.loc 1 697 5 view .LVU272
 698:Core/Src/SEGGER_RTT.c ****     RdOff        += NumBytesRem;
 658              		.loc 1 698 5 view .LVU273
 704:Core/Src/SEGGER_RTT.c ****       RdOff = 0u;
 659              		.loc 1 704 8 is_stmt 0 view .LVU274
 660 008c D8F86820 		ldr	r2, [r8, #104]
 661 0090 019B     		ldr	r3, [sp, #4]
 699:Core/Src/SEGGER_RTT.c **** #endif
 662              		.loc 1 699 18 view .LVU275
 663 0092 2F44     		add	r7, r7, r5
 664              	.LVL66:
 704:Core/Src/SEGGER_RTT.c ****       RdOff = 0u;
 665              		.loc 1 704 8 view .LVU276
 666 0094 BA42     		cmp	r2, r7
 698:Core/Src/SEGGER_RTT.c ****     RdOff        += NumBytesRem;
 667              		.loc 1 698 18 view .LVU277
 668 0096 A9EB0509 		sub	r9, r9, r5
 669              	.LVL67:
 699:Core/Src/SEGGER_RTT.c **** #endif
 670              		.loc 1 699 5 is_stmt 1 view .LVU278
 704:Core/Src/SEGGER_RTT.c ****       RdOff = 0u;
 671              		.loc 1 704 5 view .LVU279
 711:Core/Src/SEGGER_RTT.c ****   NumBytesRem = MIN(NumBytesRem, BufferSize);
 672              		.loc 1 711 15 is_stmt 0 view .LVU280
 673 009a 14BF     		ite	ne
 674 009c DB1B     		subne	r3, r3, r7
 705:Core/Src/SEGGER_RTT.c ****     }
 675              		.loc 1 705 13 view .LVU281
 676 009e 0027     		moveq	r7, #0
 677              	.LVL68:
 711:Core/Src/SEGGER_RTT.c ****   NumBytesRem = MIN(NumBytesRem, BufferSize);
 678              		.loc 1 711 3 is_stmt 1 view .LVU282
 712:Core/Src/SEGGER_RTT.c ****   if (NumBytesRem > 0u) {
 679              		.loc 1 712 3 view .LVU283
 712:Core/Src/SEGGER_RTT.c ****   if (NumBytesRem > 0u) {
 680              		.loc 1 712 15 is_stmt 0 view .LVU284
 681 00a0 4B45     		cmp	r3, r9
 682 00a2 28BF     		it	cs
 683 00a4 4B46     		movcs	r3, r9
 684              	.LVL69:
 713:Core/Src/SEGGER_RTT.c ****     pSrc = (pRing->pBuffer + RdOff) + SEGGER_RTT_UNCACHED_OFF;
 685              		.loc 1 713 3 is_stmt 1 view .LVU285
 713:Core/Src/SEGGER_RTT.c ****     pSrc = (pRing->pBuffer + RdOff) + SEGGER_RTT_UNCACHED_OFF;
 686              		.loc 1 713 6 is_stmt 0 view .LVU286
 687 00a6 002B     		cmp	r3, #0
 688 00a8 D7D0     		beq	.L26
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccs0vIiH.s 			page 30


 689              	.LVL70:
 697:Core/Src/SEGGER_RTT.c ****     BufferSize   -= NumBytesRem;
 690              		.loc 1 697 18 view .LVU287
 691 00aa AA44     		add	r10, r10, r5
 692              	.LVL71:
 724:Core/Src/SEGGER_RTT.c ****     pBuffer      += NumBytesRem;
 693              		.loc 1 724 18 view .LVU288
 694 00ac 05EB0308 		add	r8, r5, r3
 695 00b0 1D46     		mov	r5, r3
 696              	.LVL72:
 724:Core/Src/SEGGER_RTT.c ****     pBuffer      += NumBytesRem;
 697              		.loc 1 724 18 view .LVU289
 698 00b2 C6E7     		b	.L28
 699              	.LVL73:
 700              	.L38:
 724:Core/Src/SEGGER_RTT.c ****     pBuffer      += NumBytesRem;
 701              		.loc 1 724 18 view .LVU290
 702 00b4 03F0FF05 		and	r5, r3, #255
 703              	.LBB54:
 674:Core/Src/SEGGER_RTT.c ****   pRing = (SEGGER_RTT_BUFFER_DOWN*)((char*)&_SEGGER_RTT.aDown[BufferIndex] + SEGGER_RTT_UNCACHED_OF
 704              		.loc 1 674 3 is_stmt 1 view .LVU291
 705              	.LBB50:
 706              	.LBI50:
 314:Core/Src/SEGGER_RTT.c ****   volatile SEGGER_RTT_CB* p;   // Volatile to make sure that compiler cannot change the order of ac
 707              		.loc 1 314 13 view .LVU292
 708              	.LBB51:
 315:Core/Src/SEGGER_RTT.c ****   static const char _aInitStr[] = "\0\0\0\0\0\0TTR REGGES";  // Init complete ID string to make sur
 709              		.loc 1 315 3 view .LVU293
 316:Core/Src/SEGGER_RTT.c ****   unsigned i;
 710              		.loc 1 316 3 view .LVU294
 317:Core/Src/SEGGER_RTT.c ****   //
 711              		.loc 1 317 3 view .LVU295
 321:Core/Src/SEGGER_RTT.c ****   memset((SEGGER_RTT_CB*)p, 0, sizeof(_SEGGER_RTT));         // Make sure that the RTT CB is always
 712              		.loc 1 321 3 view .LVU296
 713              	.LVL74:
 322:Core/Src/SEGGER_RTT.c ****   p->MaxNumUpBuffers    = SEGGER_RTT_MAX_NUM_UP_BUFFERS;
 714              		.loc 1 322 3 view .LVU297
 715 00b8 2946     		mov	r1, r5
 716              	.LVL75:
 322:Core/Src/SEGGER_RTT.c ****   p->MaxNumUpBuffers    = SEGGER_RTT_MAX_NUM_UP_BUFFERS;
 717              		.loc 1 322 3 is_stmt 0 view .LVU298
 718 00ba 7822     		movs	r2, #120
 719              	.LVL76:
 322:Core/Src/SEGGER_RTT.c ****   p->MaxNumUpBuffers    = SEGGER_RTT_MAX_NUM_UP_BUFFERS;
 720              		.loc 1 322 3 view .LVU299
 721 00bc 04F13000 		add	r0, r4, #48
 722              	.LVL77:
 322:Core/Src/SEGGER_RTT.c ****   p->MaxNumUpBuffers    = SEGGER_RTT_MAX_NUM_UP_BUFFERS;
 723              		.loc 1 322 3 view .LVU300
 724 00c0 FFF7FEFF 		bl	memset
 725              	.LVL78:
 323:Core/Src/SEGGER_RTT.c ****   p->MaxNumDownBuffers  = SEGGER_RTT_MAX_NUM_DOWN_BUFFERS;
 726              		.loc 1 323 3 is_stmt 1 view .LVU301
 323:Core/Src/SEGGER_RTT.c ****   p->MaxNumDownBuffers  = SEGGER_RTT_MAX_NUM_DOWN_BUFFERS;
 727              		.loc 1 323 25 is_stmt 0 view .LVU302
 728 00c4 0322     		movs	r2, #3
 729 00c6 2261     		str	r2, [r4, #16]
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccs0vIiH.s 			page 31


 324:Core/Src/SEGGER_RTT.c ****   //
 730              		.loc 1 324 3 is_stmt 1 view .LVU303
 328:Core/Src/SEGGER_RTT.c ****   p->aUp[0].pBuffer       = _acUpBuffer;
 731              		.loc 1 328 27 is_stmt 0 view .LVU304
 732 00c8 174B     		ldr	r3, .L40+4
 324:Core/Src/SEGGER_RTT.c ****   //
 733              		.loc 1 324 25 view .LVU305
 734 00ca 6261     		str	r2, [r4, #20]
 328:Core/Src/SEGGER_RTT.c ****   p->aUp[0].pBuffer       = _acUpBuffer;
 735              		.loc 1 328 3 is_stmt 1 view .LVU306
 330:Core/Src/SEGGER_RTT.c ****   p->aUp[0].RdOff         = 0u;
 736              		.loc 1 330 27 is_stmt 0 view .LVU307
 737 00cc 4FF48061 		mov	r1, #1024
 329:Core/Src/SEGGER_RTT.c ****   p->aUp[0].SizeOfBuffer  = BUFFER_SIZE_UP;
 738              		.loc 1 329 27 view .LVU308
 739 00d0 164A     		ldr	r2, .L40+8
 328:Core/Src/SEGGER_RTT.c ****   p->aUp[0].pBuffer       = _acUpBuffer;
 740              		.loc 1 328 27 view .LVU309
 741 00d2 A361     		str	r3, [r4, #24]
 329:Core/Src/SEGGER_RTT.c ****   p->aUp[0].SizeOfBuffer  = BUFFER_SIZE_UP;
 742              		.loc 1 329 3 is_stmt 1 view .LVU310
 329:Core/Src/SEGGER_RTT.c ****   p->aUp[0].SizeOfBuffer  = BUFFER_SIZE_UP;
 743              		.loc 1 329 27 is_stmt 0 view .LVU311
 744 00d4 E261     		str	r2, [r4, #28]
 330:Core/Src/SEGGER_RTT.c ****   p->aUp[0].RdOff         = 0u;
 745              		.loc 1 330 3 is_stmt 1 view .LVU312
 330:Core/Src/SEGGER_RTT.c ****   p->aUp[0].RdOff         = 0u;
 746              		.loc 1 330 27 is_stmt 0 view .LVU313
 747 00d6 2162     		str	r1, [r4, #32]
 331:Core/Src/SEGGER_RTT.c ****   p->aUp[0].WrOff         = 0u;
 748              		.loc 1 331 3 is_stmt 1 view .LVU314
 338:Core/Src/SEGGER_RTT.c ****   p->aDown[0].SizeOfBuffer  = BUFFER_SIZE_DOWN;
 749              		.loc 1 338 29 is_stmt 0 view .LVU315
 750 00d8 154A     		ldr	r2, .L40+12
 331:Core/Src/SEGGER_RTT.c ****   p->aUp[0].WrOff         = 0u;
 751              		.loc 1 331 27 view .LVU316
 752 00da A562     		str	r5, [r4, #40]
 332:Core/Src/SEGGER_RTT.c ****   p->aUp[0].Flags         = SEGGER_RTT_MODE_DEFAULT;
 753              		.loc 1 332 3 is_stmt 1 view .LVU317
 332:Core/Src/SEGGER_RTT.c ****   p->aUp[0].Flags         = SEGGER_RTT_MODE_DEFAULT;
 754              		.loc 1 332 27 is_stmt 0 view .LVU318
 755 00dc 6562     		str	r5, [r4, #36]
 333:Core/Src/SEGGER_RTT.c ****   //
 756              		.loc 1 333 3 is_stmt 1 view .LVU319
 333:Core/Src/SEGGER_RTT.c ****   //
 757              		.loc 1 333 27 is_stmt 0 view .LVU320
 758 00de E562     		str	r5, [r4, #44]
 337:Core/Src/SEGGER_RTT.c ****   p->aDown[0].pBuffer       = _acDownBuffer;
 759              		.loc 1 337 3 is_stmt 1 view .LVU321
 337:Core/Src/SEGGER_RTT.c ****   p->aDown[0].pBuffer       = _acDownBuffer;
 760              		.loc 1 337 29 is_stmt 0 view .LVU322
 761 00e0 2366     		str	r3, [r4, #96]
 338:Core/Src/SEGGER_RTT.c ****   p->aDown[0].SizeOfBuffer  = BUFFER_SIZE_DOWN;
 762              		.loc 1 338 3 is_stmt 1 view .LVU323
 339:Core/Src/SEGGER_RTT.c ****   p->aDown[0].RdOff         = 0u;
 763              		.loc 1 339 29 is_stmt 0 view .LVU324
 764 00e2 1023     		movs	r3, #16
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccs0vIiH.s 			page 32


 338:Core/Src/SEGGER_RTT.c ****   p->aDown[0].SizeOfBuffer  = BUFFER_SIZE_DOWN;
 765              		.loc 1 338 29 view .LVU325
 766 00e4 6266     		str	r2, [r4, #100]
 339:Core/Src/SEGGER_RTT.c ****   p->aDown[0].RdOff         = 0u;
 767              		.loc 1 339 3 is_stmt 1 view .LVU326
 339:Core/Src/SEGGER_RTT.c ****   p->aDown[0].RdOff         = 0u;
 768              		.loc 1 339 29 is_stmt 0 view .LVU327
 769 00e6 A366     		str	r3, [r4, #104]
 340:Core/Src/SEGGER_RTT.c ****   p->aDown[0].WrOff         = 0u;
 770              		.loc 1 340 3 is_stmt 1 view .LVU328
 340:Core/Src/SEGGER_RTT.c ****   p->aDown[0].WrOff         = 0u;
 771              		.loc 1 340 29 is_stmt 0 view .LVU329
 772 00e8 2567     		str	r5, [r4, #112]
 341:Core/Src/SEGGER_RTT.c ****   p->aDown[0].Flags         = SEGGER_RTT_MODE_DEFAULT;
 773              		.loc 1 341 3 is_stmt 1 view .LVU330
 341:Core/Src/SEGGER_RTT.c ****   p->aDown[0].Flags         = SEGGER_RTT_MODE_DEFAULT;
 774              		.loc 1 341 29 is_stmt 0 view .LVU331
 775 00ea E566     		str	r5, [r4, #108]
 342:Core/Src/SEGGER_RTT.c ****   //
 776              		.loc 1 342 3 is_stmt 1 view .LVU332
 342:Core/Src/SEGGER_RTT.c ****   //
 777              		.loc 1 342 29 is_stmt 0 view .LVU333
 778 00ec 6567     		str	r5, [r4, #116]
 348:Core/Src/SEGGER_RTT.c ****   for (i = 0; i < sizeof(_aInitStr) - 1; ++i) {
 779              		.loc 1 348 3 is_stmt 1 view .LVU334
 780              		.syntax unified
 781              	@ 348 "Core/Src/SEGGER_RTT.c" 1
 782 00ee BFF35F8F 		dmb
 783              	
 784              	@ 0 "" 2
 348:Core/Src/SEGGER_RTT.c ****   for (i = 0; i < sizeof(_aInitStr) - 1; ++i) {
 785              		.loc 1 348 13 view .LVU335
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 786              		.loc 1 349 3 view .LVU336
 787              	.LVL79:
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 788              		.loc 1 349 17 view .LVU337
 350:Core/Src/SEGGER_RTT.c ****   }
 789              		.loc 1 350 5 view .LVU338
 350:Core/Src/SEGGER_RTT.c ****   }
 790              		.loc 1 350 16 is_stmt 0 view .LVU339
 791              		.thumb
 792              		.syntax unified
 793 00f2 4521     		movs	r1, #69
 794 00f4 4720     		movs	r0, #71
 795 00f6 5327     		movs	r7, #83
 796 00f8 2770     		strb	r7, [r4]
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 797              		.loc 1 349 42 is_stmt 1 view .LVU340
 798              	.LVL80:
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 799              		.loc 1 349 17 view .LVU341
 350:Core/Src/SEGGER_RTT.c ****   }
 800              		.loc 1 350 5 view .LVU342
 350:Core/Src/SEGGER_RTT.c ****   }
 801              		.loc 1 350 16 is_stmt 0 view .LVU343
 802 00fa 5222     		movs	r2, #82
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccs0vIiH.s 			page 33


 803 00fc 6170     		strb	r1, [r4, #1]
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 804              		.loc 1 349 42 is_stmt 1 view .LVU344
 805              	.LVL81:
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 806              		.loc 1 349 17 view .LVU345
 350:Core/Src/SEGGER_RTT.c ****   }
 807              		.loc 1 350 5 view .LVU346
 350:Core/Src/SEGGER_RTT.c ****   }
 808              		.loc 1 350 16 is_stmt 0 view .LVU347
 809 00fe 5423     		movs	r3, #84
 810 0100 A070     		strb	r0, [r4, #2]
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 811              		.loc 1 349 42 is_stmt 1 view .LVU348
 812              	.LVL82:
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 813              		.loc 1 349 17 view .LVU349
 350:Core/Src/SEGGER_RTT.c ****   }
 814              		.loc 1 350 5 view .LVU350
 350:Core/Src/SEGGER_RTT.c ****   }
 815              		.loc 1 350 16 is_stmt 0 view .LVU351
 816 0102 E070     		strb	r0, [r4, #3]
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 817              		.loc 1 349 42 is_stmt 1 view .LVU352
 818              	.LVL83:
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 819              		.loc 1 349 17 view .LVU353
 350:Core/Src/SEGGER_RTT.c ****   }
 820              		.loc 1 350 5 view .LVU354
 350:Core/Src/SEGGER_RTT.c ****   }
 821              		.loc 1 350 16 is_stmt 0 view .LVU355
 822 0104 2171     		strb	r1, [r4, #4]
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 823              		.loc 1 349 42 is_stmt 1 view .LVU356
 824              	.LVL84:
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 825              		.loc 1 349 17 view .LVU357
 350:Core/Src/SEGGER_RTT.c ****   }
 826              		.loc 1 350 5 view .LVU358
 350:Core/Src/SEGGER_RTT.c ****   }
 827              		.loc 1 350 16 is_stmt 0 view .LVU359
 828 0106 2021     		movs	r1, #32
 829 0108 6271     		strb	r2, [r4, #5]
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 830              		.loc 1 349 42 is_stmt 1 view .LVU360
 831              	.LVL85:
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 832              		.loc 1 349 17 view .LVU361
 350:Core/Src/SEGGER_RTT.c ****   }
 833              		.loc 1 350 5 view .LVU362
 350:Core/Src/SEGGER_RTT.c ****   }
 834              		.loc 1 350 16 is_stmt 0 view .LVU363
 835 010a A171     		strb	r1, [r4, #6]
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 836              		.loc 1 349 42 is_stmt 1 view .LVU364
 837              	.LVL86:
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccs0vIiH.s 			page 34


 838              		.loc 1 349 17 view .LVU365
 350:Core/Src/SEGGER_RTT.c ****   }
 839              		.loc 1 350 5 view .LVU366
 350:Core/Src/SEGGER_RTT.c ****   }
 840              		.loc 1 350 16 is_stmt 0 view .LVU367
 841 010c E271     		strb	r2, [r4, #7]
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 842              		.loc 1 349 42 is_stmt 1 view .LVU368
 843              	.LVL87:
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 844              		.loc 1 349 17 view .LVU369
 350:Core/Src/SEGGER_RTT.c ****   }
 845              		.loc 1 350 5 view .LVU370
 350:Core/Src/SEGGER_RTT.c ****   }
 846              		.loc 1 350 16 is_stmt 0 view .LVU371
 847 010e 2372     		strb	r3, [r4, #8]
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 848              		.loc 1 349 42 is_stmt 1 view .LVU372
 849              	.LVL88:
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 850              		.loc 1 349 17 view .LVU373
 350:Core/Src/SEGGER_RTT.c ****   }
 851              		.loc 1 350 5 view .LVU374
 350:Core/Src/SEGGER_RTT.c ****   }
 852              		.loc 1 350 16 is_stmt 0 view .LVU375
 853 0110 6372     		strb	r3, [r4, #9]
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 854              		.loc 1 349 42 is_stmt 1 view .LVU376
 855              	.LVL89:
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 856              		.loc 1 349 17 view .LVU377
 350:Core/Src/SEGGER_RTT.c ****   }
 857              		.loc 1 350 5 view .LVU378
 350:Core/Src/SEGGER_RTT.c ****   }
 858              		.loc 1 350 16 is_stmt 0 view .LVU379
 859 0112 A572     		strb	r5, [r4, #10]
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 860              		.loc 1 349 42 is_stmt 1 view .LVU380
 861              	.LVL90:
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 862              		.loc 1 349 17 view .LVU381
 350:Core/Src/SEGGER_RTT.c ****   }
 863              		.loc 1 350 5 view .LVU382
 350:Core/Src/SEGGER_RTT.c ****   }
 864              		.loc 1 350 16 is_stmt 0 view .LVU383
 865 0114 E572     		strb	r5, [r4, #11]
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 866              		.loc 1 349 42 is_stmt 1 view .LVU384
 867              	.LVL91:
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 868              		.loc 1 349 17 view .LVU385
 350:Core/Src/SEGGER_RTT.c ****   }
 869              		.loc 1 350 5 view .LVU386
 350:Core/Src/SEGGER_RTT.c ****   }
 870              		.loc 1 350 16 is_stmt 0 view .LVU387
 871 0116 2573     		strb	r5, [r4, #12]
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccs0vIiH.s 			page 35


 872              		.loc 1 349 42 is_stmt 1 view .LVU388
 873              	.LVL92:
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 874              		.loc 1 349 17 view .LVU389
 350:Core/Src/SEGGER_RTT.c ****   }
 875              		.loc 1 350 5 view .LVU390
 350:Core/Src/SEGGER_RTT.c ****   }
 876              		.loc 1 350 16 is_stmt 0 view .LVU391
 877 0118 6573     		strb	r5, [r4, #13]
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 878              		.loc 1 349 42 is_stmt 1 view .LVU392
 879              	.LVL93:
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 880              		.loc 1 349 17 view .LVU393
 350:Core/Src/SEGGER_RTT.c ****   }
 881              		.loc 1 350 5 view .LVU394
 350:Core/Src/SEGGER_RTT.c ****   }
 882              		.loc 1 350 16 is_stmt 0 view .LVU395
 883 011a A573     		strb	r5, [r4, #14]
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 884              		.loc 1 349 42 is_stmt 1 view .LVU396
 885              	.LVL94:
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 886              		.loc 1 349 17 view .LVU397
 350:Core/Src/SEGGER_RTT.c ****   }
 887              		.loc 1 350 5 view .LVU398
 350:Core/Src/SEGGER_RTT.c ****   }
 888              		.loc 1 350 16 is_stmt 0 view .LVU399
 889 011c E573     		strb	r5, [r4, #15]
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 890              		.loc 1 349 42 is_stmt 1 view .LVU400
 891              	.LVL95:
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 892              		.loc 1 349 17 view .LVU401
 352:Core/Src/SEGGER_RTT.c **** }
 893              		.loc 1 352 3 view .LVU402
 894              		.syntax unified
 895              	@ 352 "Core/Src/SEGGER_RTT.c" 1
 896 011e BFF35F8F 		dmb
 897              	
 898              	@ 0 "" 2
 352:Core/Src/SEGGER_RTT.c **** }
 899              		.loc 1 352 13 view .LVU403
 353:Core/Src/SEGGER_RTT.c **** 
 900              		.loc 1 353 1 is_stmt 0 view .LVU404
 901              		.thumb
 902              		.syntax unified
 903 0122 77E7     		b	.L23
 904              	.L41:
 905              		.align	2
 906              	.L40:
 907 0124 00000000 		.word	.LANCHOR0
 908 0128 00000000 		.word	.LC0
 909 012c 00000000 		.word	.LANCHOR1
 910 0130 00000000 		.word	.LANCHOR2
 911              	.LBE51:
 912              	.LBE50:
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccs0vIiH.s 			page 36


 913              	.LBE54:
 914              		.cfi_endproc
 915              	.LFE6:
 917              		.section	.text.SEGGER_RTT_ReadUpBuffer,"ax",%progbits
 918              		.align	1
 919              		.p2align 2,,3
 920              		.global	SEGGER_RTT_ReadUpBuffer
 921              		.syntax unified
 922              		.thumb
 923              		.thumb_func
 925              	SEGGER_RTT_ReadUpBuffer:
 926              	.LVL96:
 927              	.LFB7:
 736:Core/Src/SEGGER_RTT.c **** 
 737:Core/Src/SEGGER_RTT.c **** /*********************************************************************
 738:Core/Src/SEGGER_RTT.c **** *
 739:Core/Src/SEGGER_RTT.c **** *       SEGGER_RTT_ReadUpBuffer
 740:Core/Src/SEGGER_RTT.c **** *
 741:Core/Src/SEGGER_RTT.c **** *  Function description
 742:Core/Src/SEGGER_RTT.c **** *    Reads characters from SEGGER real-time-terminal control block
 743:Core/Src/SEGGER_RTT.c **** *    which have been previously stored by the application.
 744:Core/Src/SEGGER_RTT.c **** *    Used to do the same operation that J-Link does, to transfer 
 745:Core/Src/SEGGER_RTT.c **** *    RTT data via other channels, such as TCP/IP or UART.
 746:Core/Src/SEGGER_RTT.c **** *
 747:Core/Src/SEGGER_RTT.c **** *  Parameters
 748:Core/Src/SEGGER_RTT.c **** *    BufferIndex  Index of Up-buffer to be used.
 749:Core/Src/SEGGER_RTT.c **** *    pBuffer      Pointer to buffer provided by target application, to copy characters from RTT-up-
 750:Core/Src/SEGGER_RTT.c **** *    BufferSize   Size of the target application buffer.
 751:Core/Src/SEGGER_RTT.c **** *
 752:Core/Src/SEGGER_RTT.c **** *  Return value
 753:Core/Src/SEGGER_RTT.c **** *    Number of bytes that have been read.
 754:Core/Src/SEGGER_RTT.c **** *
 755:Core/Src/SEGGER_RTT.c **** *  Additional information
 756:Core/Src/SEGGER_RTT.c **** *    This function must not be called when J-Link might also do RTT.
 757:Core/Src/SEGGER_RTT.c **** *    This function locks against all other RTT operations. I.e. during
 758:Core/Src/SEGGER_RTT.c **** *    the read operation, writing is also locked.
 759:Core/Src/SEGGER_RTT.c **** *    If only one consumer reads from the up buffer, 
 760:Core/Src/SEGGER_RTT.c **** *    call sEGGER_RTT_ReadUpBufferNoLock() instead.
 761:Core/Src/SEGGER_RTT.c **** */
 762:Core/Src/SEGGER_RTT.c **** unsigned SEGGER_RTT_ReadUpBuffer(unsigned BufferIndex, void* pBuffer, unsigned BufferSize) {
 928              		.loc 1 762 92 is_stmt 1 view -0
 929              		.cfi_startproc
 930              		@ args = 0, pretend = 0, frame = 16
 931              		@ frame_needed = 0, uses_anonymous_args = 0
 932              		.loc 1 762 92 is_stmt 0 view .LVU406
 933 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 934              		.cfi_def_cfa_offset 36
 935              		.cfi_offset 4, -36
 936              		.cfi_offset 5, -32
 937              		.cfi_offset 6, -28
 938              		.cfi_offset 7, -24
 939              		.cfi_offset 8, -20
 940              		.cfi_offset 9, -16
 941              		.cfi_offset 10, -12
 942              		.cfi_offset 11, -8
 943              		.cfi_offset 14, -4
 944 0004 0546     		mov	r5, r0
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccs0vIiH.s 			page 37


 763:Core/Src/SEGGER_RTT.c ****   unsigned NumBytesRead;
 945              		.loc 1 763 3 is_stmt 1 view .LVU407
 946              	.LBB61:
 764:Core/Src/SEGGER_RTT.c **** 
 765:Core/Src/SEGGER_RTT.c ****   SEGGER_RTT_LOCK();
 947              		.loc 1 765 3 view .LVU408
 948              		.loc 1 765 3 view .LVU409
 949              	.LBE61:
 762:Core/Src/SEGGER_RTT.c ****   unsigned NumBytesRead;
 950              		.loc 1 762 92 is_stmt 0 view .LVU410
 951 0006 85B0     		sub	sp, sp, #20
 952              		.cfi_def_cfa_offset 56
 762:Core/Src/SEGGER_RTT.c ****   unsigned NumBytesRead;
 953              		.loc 1 762 92 view .LVU411
 954 0008 8A46     		mov	r10, r1
 955 000a 1746     		mov	r7, r2
 956              	.LBB73:
 957              		.loc 1 765 3 view .LVU412
 958              		.syntax unified
 959              	@ 765 "Core/Src/SEGGER_RTT.c" 1
 960 000c EFF31183 		mrs   r3, basepri  
 961 0010 4FF02001 		mov   r1, #32       
 962 0014 81F31188 		msr   basepri, r1  
 963              		
 964              	@ 0 "" 2
 965              	.LVL97:
 966              		.thumb
 967              		.syntax unified
 968              	.LBB62:
 969              	.LBB63:
 970              	.LBB64:
 582:Core/Src/SEGGER_RTT.c ****   pRing = (SEGGER_RTT_BUFFER_UP*)((char*)&_SEGGER_RTT.aUp[BufferIndex] + SEGGER_RTT_UNCACHED_OFF); 
 971              		.loc 1 582 3 view .LVU413
 972 0018 4D4C     		ldr	r4, .L61
 973              	.LBE64:
 974              	.LBE63:
 975              	.LBE62:
 976              		.loc 1 765 3 view .LVU414
 977 001a 0193     		str	r3, [sp, #4]
 978              	.LVL98:
 979              		.loc 1 765 20 is_stmt 1 view .LVU415
 766:Core/Src/SEGGER_RTT.c ****   //
 767:Core/Src/SEGGER_RTT.c ****   // Call the non-locking read function
 768:Core/Src/SEGGER_RTT.c ****   //
 769:Core/Src/SEGGER_RTT.c ****   NumBytesRead = SEGGER_RTT_ReadUpBufferNoLock(BufferIndex, pBuffer, BufferSize);
 980              		.loc 1 769 3 view .LVU416
 981              	.LBB71:
 982              	.LBI62:
 573:Core/Src/SEGGER_RTT.c ****   unsigned                NumBytesRem;
 983              		.loc 1 573 10 view .LVU417
 984              	.LBB69:
 574:Core/Src/SEGGER_RTT.c ****   unsigned                NumBytesRead;
 985              		.loc 1 574 3 view .LVU418
 575:Core/Src/SEGGER_RTT.c ****   unsigned                RdOff;
 986              		.loc 1 575 3 view .LVU419
 576:Core/Src/SEGGER_RTT.c ****   unsigned                WrOff;
 987              		.loc 1 576 3 view .LVU420
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccs0vIiH.s 			page 38


 577:Core/Src/SEGGER_RTT.c ****   unsigned char*          pBuffer;
 988              		.loc 1 577 3 view .LVU421
 578:Core/Src/SEGGER_RTT.c ****   SEGGER_RTT_BUFFER_UP*   pRing;
 989              		.loc 1 578 3 view .LVU422
 579:Core/Src/SEGGER_RTT.c ****   volatile char*          pSrc;
 990              		.loc 1 579 3 view .LVU423
 580:Core/Src/SEGGER_RTT.c **** 
 991              		.loc 1 580 3 view .LVU424
 992              	.LBB67:
 582:Core/Src/SEGGER_RTT.c ****   pRing = (SEGGER_RTT_BUFFER_UP*)((char*)&_SEGGER_RTT.aUp[BufferIndex] + SEGGER_RTT_UNCACHED_OFF); 
 993              		.loc 1 582 3 view .LVU425
 582:Core/Src/SEGGER_RTT.c ****   pRing = (SEGGER_RTT_BUFFER_UP*)((char*)&_SEGGER_RTT.aUp[BufferIndex] + SEGGER_RTT_UNCACHED_OFF); 
 994              		.loc 1 582 3 view .LVU426
 582:Core/Src/SEGGER_RTT.c ****   pRing = (SEGGER_RTT_BUFFER_UP*)((char*)&_SEGGER_RTT.aUp[BufferIndex] + SEGGER_RTT_UNCACHED_OFF); 
 995              		.loc 1 582 3 view .LVU427
 582:Core/Src/SEGGER_RTT.c ****   pRing = (SEGGER_RTT_BUFFER_UP*)((char*)&_SEGGER_RTT.aUp[BufferIndex] + SEGGER_RTT_UNCACHED_OFF); 
 996              		.loc 1 582 3 view .LVU428
 997 001c 2278     		ldrb	r2, [r4]	@ zero_extendqisi2
 998              	.LVL99:
 582:Core/Src/SEGGER_RTT.c ****   pRing = (SEGGER_RTT_BUFFER_UP*)((char*)&_SEGGER_RTT.aUp[BufferIndex] + SEGGER_RTT_UNCACHED_OFF); 
 999              		.loc 1 582 3 is_stmt 0 view .LVU429
 1000 001e 002A     		cmp	r2, #0
 1001 0020 59D0     		beq	.L59
 1002              	.LVL100:
 1003              	.L43:
 582:Core/Src/SEGGER_RTT.c ****   pRing = (SEGGER_RTT_BUFFER_UP*)((char*)&_SEGGER_RTT.aUp[BufferIndex] + SEGGER_RTT_UNCACHED_OFF); 
 1004              		.loc 1 582 3 is_stmt 1 view .LVU430
 1005              	.LBE67:
 582:Core/Src/SEGGER_RTT.c ****   pRing = (SEGGER_RTT_BUFFER_UP*)((char*)&_SEGGER_RTT.aUp[BufferIndex] + SEGGER_RTT_UNCACHED_OFF); 
 1006              		.loc 1 582 9 view .LVU431
 583:Core/Src/SEGGER_RTT.c ****   pBuffer = (unsigned char*)pData;
 1007              		.loc 1 583 3 view .LVU432
 584:Core/Src/SEGGER_RTT.c ****   RdOff = pRing->RdOff;
 1008              		.loc 1 584 3 view .LVU433
 585:Core/Src/SEGGER_RTT.c ****   WrOff = pRing->WrOff;
 1009              		.loc 1 585 3 view .LVU434
 585:Core/Src/SEGGER_RTT.c ****   WrOff = pRing->WrOff;
 1010              		.loc 1 585 9 is_stmt 0 view .LVU435
 1011 0022 05EB4508 		add	r8, r5, r5, lsl #1
 1012 0026 04EBC808 		add	r8, r4, r8, lsl #3
 1013 002a 6B00     		lsls	r3, r5, #1
 1014 002c D8F82860 		ldr	r6, [r8, #40]
 1015              	.LVL101:
 586:Core/Src/SEGGER_RTT.c ****   NumBytesRead = 0u;
 1016              		.loc 1 586 3 is_stmt 1 view .LVU436
 586:Core/Src/SEGGER_RTT.c ****   NumBytesRead = 0u;
 1017              		.loc 1 586 9 is_stmt 0 view .LVU437
 1018 0030 D8F82490 		ldr	r9, [r8, #36]
 1019              	.LVL102:
 587:Core/Src/SEGGER_RTT.c ****   //
 1020              		.loc 1 587 3 is_stmt 1 view .LVU438
 591:Core/Src/SEGGER_RTT.c ****     NumBytesRem = pRing->SizeOfBuffer - RdOff;
 1021              		.loc 1 591 3 view .LVU439
 591:Core/Src/SEGGER_RTT.c ****     NumBytesRem = pRing->SizeOfBuffer - RdOff;
 1022              		.loc 1 591 6 is_stmt 0 view .LVU440
 1023 0034 4E45     		cmp	r6, r9
 1024 0036 25D8     		bhi	.L60
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccs0vIiH.s 			page 39


 619:Core/Src/SEGGER_RTT.c ****   NumBytesRem = MIN(NumBytesRem, BufferSize);
 1025              		.loc 1 619 3 is_stmt 1 view .LVU441
 619:Core/Src/SEGGER_RTT.c ****   NumBytesRem = MIN(NumBytesRem, BufferSize);
 1026              		.loc 1 619 15 is_stmt 0 view .LVU442
 1027 0038 A9EB0609 		sub	r9, r9, r6
 1028              	.LVL103:
 620:Core/Src/SEGGER_RTT.c ****   if (NumBytesRem > 0u) {
 1029              		.loc 1 620 3 is_stmt 1 view .LVU443
 620:Core/Src/SEGGER_RTT.c ****   if (NumBytesRem > 0u) {
 1030              		.loc 1 620 15 is_stmt 0 view .LVU444
 1031 003c 4F45     		cmp	r7, r9
 1032 003e 3A46     		mov	r2, r7
 1033 0040 28BF     		it	cs
 1034 0042 4A46     		movcs	r2, r9
 1035              	.LVL104:
 621:Core/Src/SEGGER_RTT.c ****     pSrc = (pRing->pBuffer + RdOff) + SEGGER_RTT_UNCACHED_OFF;
 1036              		.loc 1 621 3 is_stmt 1 view .LVU445
 621:Core/Src/SEGGER_RTT.c ****     pSrc = (pRing->pBuffer + RdOff) + SEGGER_RTT_UNCACHED_OFF;
 1037              		.loc 1 621 6 is_stmt 0 view .LVU446
 1038 0044 32B9     		cbnz	r2, .L50
 1039              	.LVL105:
 1040              	.L47:
 645:Core/Src/SEGGER_RTT.c **** }
 1041              		.loc 1 645 3 is_stmt 1 view .LVU447
 645:Core/Src/SEGGER_RTT.c **** }
 1042              		.loc 1 645 3 is_stmt 0 view .LVU448
 1043              	.LBE69:
 1044              	.LBE71:
 770:Core/Src/SEGGER_RTT.c ****   //
 771:Core/Src/SEGGER_RTT.c ****   // Finish up.
 772:Core/Src/SEGGER_RTT.c ****   //
 773:Core/Src/SEGGER_RTT.c ****   SEGGER_RTT_UNLOCK();
 1045              		.loc 1 773 3 is_stmt 1 view .LVU449
 1046 0046 019B     		ldr	r3, [sp, #4]
 1047              		.syntax unified
 1048              	@ 773 "Core/Src/SEGGER_RTT.c" 1
 1049 0048 83F31188 		msr   basepri, r3  
 1050              		
 1051              	@ 0 "" 2
 1052              		.thumb
 1053              		.syntax unified
 1054              	.LBE73:
 1055              		.loc 1 773 22 view .LVU450
 774:Core/Src/SEGGER_RTT.c ****   //
 775:Core/Src/SEGGER_RTT.c ****   return NumBytesRead;
 1056              		.loc 1 775 3 view .LVU451
 776:Core/Src/SEGGER_RTT.c **** }
 1057              		.loc 1 776 1 is_stmt 0 view .LVU452
 1058 004c 1046     		mov	r0, r2
 1059 004e 05B0     		add	sp, sp, #20
 1060              		.cfi_remember_state
 1061              		.cfi_def_cfa_offset 36
 1062              		@ sp needed
 1063 0050 BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 1064              	.LVL106:
 1065              	.L50:
 1066              		.cfi_restore_state
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccs0vIiH.s 			page 40


 1067              	.LBB74:
 1068              	.LBB72:
 1069              	.LBB70:
 621:Core/Src/SEGGER_RTT.c ****     pSrc = (pRing->pBuffer + RdOff) + SEGGER_RTT_UNCACHED_OFF;
 1070              		.loc 1 621 6 view .LVU453
 1071 0054 9046     		mov	r8, r2
 1072              	.LVL107:
 621:Core/Src/SEGGER_RTT.c ****     pSrc = (pRing->pBuffer + RdOff) + SEGGER_RTT_UNCACHED_OFF;
 1073              		.loc 1 621 6 view .LVU454
 1074 0056 05F1010B 		add	fp, r5, #1
 1075              	.LVL108:
 1076              	.L48:
 622:Core/Src/SEGGER_RTT.c **** #if SEGGER_RTT_MEMCPY_USE_BYTELOOP
 1077              		.loc 1 622 5 is_stmt 1 view .LVU455
 631:Core/Src/SEGGER_RTT.c ****     NumBytesRead += NumBytesRem;
 1078              		.loc 1 631 5 view .LVU456
 622:Core/Src/SEGGER_RTT.c **** #if SEGGER_RTT_MEMCPY_USE_BYTELOOP
 1079              		.loc 1 622 18 is_stmt 0 view .LVU457
 1080 005a 0BEB4B0B 		add	fp, fp, fp, lsl #1
 1081 005e 04EBCB0B 		add	fp, r4, fp, lsl #3
 631:Core/Src/SEGGER_RTT.c ****     NumBytesRead += NumBytesRem;
 1082              		.loc 1 631 5 view .LVU458
 1083 0062 5046     		mov	r0, r10
 622:Core/Src/SEGGER_RTT.c **** #if SEGGER_RTT_MEMCPY_USE_BYTELOOP
 1084              		.loc 1 622 10 view .LVU459
 1085 0064 DBF80410 		ldr	r1, [fp, #4]
 1086 0068 0293     		str	r3, [sp, #8]
 631:Core/Src/SEGGER_RTT.c ****     NumBytesRead += NumBytesRem;
 1087              		.loc 1 631 5 view .LVU460
 1088 006a 3144     		add	r1, r1, r6
 635:Core/Src/SEGGER_RTT.c **** #endif
 1089              		.loc 1 635 18 view .LVU461
 1090 006c 1644     		add	r6, r6, r2
 1091              	.LVL109:
 631:Core/Src/SEGGER_RTT.c ****     NumBytesRead += NumBytesRem;
 1092              		.loc 1 631 5 view .LVU462
 1093 006e FFF7FEFF 		bl	memcpy
 1094              	.LVL110:
 632:Core/Src/SEGGER_RTT.c ****     pBuffer      += NumBytesRem;
 1095              		.loc 1 632 5 is_stmt 1 view .LVU463
 633:Core/Src/SEGGER_RTT.c ****     BufferSize   -= NumBytesRem;
 1096              		.loc 1 633 5 view .LVU464
 634:Core/Src/SEGGER_RTT.c ****     RdOff        += NumBytesRem;
 1097              		.loc 1 634 5 view .LVU465
 635:Core/Src/SEGGER_RTT.c **** #endif
 1098              		.loc 1 635 5 view .LVU466
 632:Core/Src/SEGGER_RTT.c ****     pBuffer      += NumBytesRem;
 1099              		.loc 1 632 18 is_stmt 0 view .LVU467
 1100 0072 029B     		ldr	r3, [sp, #8]
 1101 0074 4246     		mov	r2, r8
 1102              	.L46:
 1103              	.LVL111:
 641:Core/Src/SEGGER_RTT.c ****     pRing->RdOff = RdOff;
 1104              		.loc 1 641 3 is_stmt 1 view .LVU468
 641:Core/Src/SEGGER_RTT.c ****     pRing->RdOff = RdOff;
 1105              		.loc 1 641 6 is_stmt 0 view .LVU469
 1106 0076 002A     		cmp	r2, #0
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccs0vIiH.s 			page 41


 1107 0078 E5D0     		beq	.L47
 642:Core/Src/SEGGER_RTT.c ****   }
 1108              		.loc 1 642 5 is_stmt 1 view .LVU470
 642:Core/Src/SEGGER_RTT.c ****   }
 1109              		.loc 1 642 18 is_stmt 0 view .LVU471
 1110 007a 1D44     		add	r5, r5, r3
 1111              	.LVL112:
 642:Core/Src/SEGGER_RTT.c ****   }
 1112              		.loc 1 642 18 view .LVU472
 1113 007c 04EBC505 		add	r5, r4, r5, lsl #3
 1114 0080 AE62     		str	r6, [r5, #40]
 1115 0082 E0E7     		b	.L47
 1116              	.LVL113:
 1117              	.L60:
 592:Core/Src/SEGGER_RTT.c ****     NumBytesRem = MIN(NumBytesRem, BufferSize);
 1118              		.loc 1 592 5 is_stmt 1 view .LVU473
 594:Core/Src/SEGGER_RTT.c **** #if SEGGER_RTT_MEMCPY_USE_BYTELOOP
 1119              		.loc 1 594 18 is_stmt 0 view .LVU474
 1120 0084 05F1010B 		add	fp, r5, #1
 1121 0088 0BEB4B02 		add	r2, fp, fp, lsl #1
 1122 008c 04EBC202 		add	r2, r4, r2, lsl #3
 603:Core/Src/SEGGER_RTT.c ****     NumBytesRead += NumBytesRem;
 1123              		.loc 1 603 5 view .LVU475
 1124 0090 5046     		mov	r0, r10
 594:Core/Src/SEGGER_RTT.c **** #if SEGGER_RTT_MEMCPY_USE_BYTELOOP
 1125              		.loc 1 594 10 view .LVU476
 1126 0092 5168     		ldr	r1, [r2, #4]
 592:Core/Src/SEGGER_RTT.c ****     NumBytesRem = MIN(NumBytesRem, BufferSize);
 1127              		.loc 1 592 17 view .LVU477
 1128 0094 D8F82020 		ldr	r2, [r8, #32]
 1129 0098 0393     		str	r3, [sp, #12]
 1130 009a 921B     		subs	r2, r2, r6
 1131              	.LVL114:
 593:Core/Src/SEGGER_RTT.c ****     pSrc = (pRing->pBuffer + RdOff) + SEGGER_RTT_UNCACHED_OFF;
 1132              		.loc 1 593 5 is_stmt 1 view .LVU478
 593:Core/Src/SEGGER_RTT.c ****     pSrc = (pRing->pBuffer + RdOff) + SEGGER_RTT_UNCACHED_OFF;
 1133              		.loc 1 593 17 is_stmt 0 view .LVU479
 1134 009c BA42     		cmp	r2, r7
 1135 009e 28BF     		it	cs
 1136 00a0 3A46     		movcs	r2, r7
 1137              	.LVL115:
 594:Core/Src/SEGGER_RTT.c **** #if SEGGER_RTT_MEMCPY_USE_BYTELOOP
 1138              		.loc 1 594 5 is_stmt 1 view .LVU480
 603:Core/Src/SEGGER_RTT.c ****     NumBytesRead += NumBytesRem;
 1139              		.loc 1 603 5 view .LVU481
 1140 00a2 3144     		add	r1, r1, r6
 1141 00a4 0292     		str	r2, [sp, #8]
 607:Core/Src/SEGGER_RTT.c **** #endif
 1142              		.loc 1 607 18 is_stmt 0 view .LVU482
 1143 00a6 1644     		add	r6, r6, r2
 1144              	.LVL116:
 603:Core/Src/SEGGER_RTT.c ****     NumBytesRead += NumBytesRem;
 1145              		.loc 1 603 5 view .LVU483
 1146 00a8 FFF7FEFF 		bl	memcpy
 1147              	.LVL117:
 604:Core/Src/SEGGER_RTT.c ****     pBuffer      += NumBytesRem;
 1148              		.loc 1 604 5 is_stmt 1 view .LVU484
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccs0vIiH.s 			page 42


 605:Core/Src/SEGGER_RTT.c ****     BufferSize   -= NumBytesRem;
 1149              		.loc 1 605 5 view .LVU485
 606:Core/Src/SEGGER_RTT.c ****     RdOff        += NumBytesRem;
 1150              		.loc 1 606 5 view .LVU486
 612:Core/Src/SEGGER_RTT.c ****       RdOff = 0u;
 1151              		.loc 1 612 8 is_stmt 0 view .LVU487
 1152 00ac D8F82010 		ldr	r1, [r8, #32]
 606:Core/Src/SEGGER_RTT.c ****     RdOff        += NumBytesRem;
 1153              		.loc 1 606 18 view .LVU488
 1154 00b0 029A     		ldr	r2, [sp, #8]
 612:Core/Src/SEGGER_RTT.c ****       RdOff = 0u;
 1155              		.loc 1 612 8 view .LVU489
 1156 00b2 039B     		ldr	r3, [sp, #12]
 1157 00b4 8E42     		cmp	r6, r1
 606:Core/Src/SEGGER_RTT.c ****     RdOff        += NumBytesRem;
 1158              		.loc 1 606 18 view .LVU490
 1159 00b6 A7EB0207 		sub	r7, r7, r2
 1160              	.LVL118:
 607:Core/Src/SEGGER_RTT.c **** #endif
 1161              		.loc 1 607 5 is_stmt 1 view .LVU491
 612:Core/Src/SEGGER_RTT.c ****       RdOff = 0u;
 1162              		.loc 1 612 5 view .LVU492
 619:Core/Src/SEGGER_RTT.c ****   NumBytesRem = MIN(NumBytesRem, BufferSize);
 1163              		.loc 1 619 15 is_stmt 0 view .LVU493
 1164 00ba 14BF     		ite	ne
 1165 00bc A9EB0609 		subne	r9, r9, r6
 1166              	.LVL119:
 613:Core/Src/SEGGER_RTT.c ****     }
 1167              		.loc 1 613 13 view .LVU494
 1168 00c0 0026     		moveq	r6, #0
 1169              	.LVL120:
 619:Core/Src/SEGGER_RTT.c ****   NumBytesRem = MIN(NumBytesRem, BufferSize);
 1170              		.loc 1 619 3 is_stmt 1 view .LVU495
 620:Core/Src/SEGGER_RTT.c ****   if (NumBytesRem > 0u) {
 1171              		.loc 1 620 3 view .LVU496
 620:Core/Src/SEGGER_RTT.c ****   if (NumBytesRem > 0u) {
 1172              		.loc 1 620 15 is_stmt 0 view .LVU497
 1173 00c2 4F45     		cmp	r7, r9
 1174 00c4 28BF     		it	cs
 1175 00c6 4F46     		movcs	r7, r9
 1176              	.LVL121:
 621:Core/Src/SEGGER_RTT.c ****     pSrc = (pRing->pBuffer + RdOff) + SEGGER_RTT_UNCACHED_OFF;
 1177              		.loc 1 621 3 is_stmt 1 view .LVU498
 621:Core/Src/SEGGER_RTT.c ****     pSrc = (pRing->pBuffer + RdOff) + SEGGER_RTT_UNCACHED_OFF;
 1178              		.loc 1 621 6 is_stmt 0 view .LVU499
 1179 00c8 002F     		cmp	r7, #0
 1180 00ca D4D0     		beq	.L46
 1181              	.LVL122:
 605:Core/Src/SEGGER_RTT.c ****     BufferSize   -= NumBytesRem;
 1182              		.loc 1 605 18 view .LVU500
 1183 00cc 9244     		add	r10, r10, r2
 1184              	.LVL123:
 632:Core/Src/SEGGER_RTT.c ****     pBuffer      += NumBytesRem;
 1185              		.loc 1 632 18 view .LVU501
 1186 00ce 02EB0708 		add	r8, r2, r7
 1187 00d2 3A46     		mov	r2, r7
 1188 00d4 C1E7     		b	.L48
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccs0vIiH.s 			page 43


 1189              	.LVL124:
 1190              	.L59:
 632:Core/Src/SEGGER_RTT.c ****     pBuffer      += NumBytesRem;
 1191              		.loc 1 632 18 view .LVU502
 1192 00d6 02F0FF06 		and	r6, r2, #255
 1193              	.LBB68:
 582:Core/Src/SEGGER_RTT.c ****   pRing = (SEGGER_RTT_BUFFER_UP*)((char*)&_SEGGER_RTT.aUp[BufferIndex] + SEGGER_RTT_UNCACHED_OFF); 
 1194              		.loc 1 582 3 is_stmt 1 view .LVU503
 1195              	.LBB65:
 1196              	.LBI65:
 314:Core/Src/SEGGER_RTT.c ****   volatile SEGGER_RTT_CB* p;   // Volatile to make sure that compiler cannot change the order of ac
 1197              		.loc 1 314 13 view .LVU504
 1198              	.LBB66:
 315:Core/Src/SEGGER_RTT.c ****   static const char _aInitStr[] = "\0\0\0\0\0\0TTR REGGES";  // Init complete ID string to make sur
 1199              		.loc 1 315 3 view .LVU505
 316:Core/Src/SEGGER_RTT.c ****   unsigned i;
 1200              		.loc 1 316 3 view .LVU506
 317:Core/Src/SEGGER_RTT.c ****   //
 1201              		.loc 1 317 3 view .LVU507
 321:Core/Src/SEGGER_RTT.c ****   memset((SEGGER_RTT_CB*)p, 0, sizeof(_SEGGER_RTT));         // Make sure that the RTT CB is always
 1202              		.loc 1 321 3 view .LVU508
 1203              	.LVL125:
 322:Core/Src/SEGGER_RTT.c ****   p->MaxNumUpBuffers    = SEGGER_RTT_MAX_NUM_UP_BUFFERS;
 1204              		.loc 1 322 3 view .LVU509
 1205 00da 3146     		mov	r1, r6
 1206 00dc 7822     		movs	r2, #120
 1207 00de 04F13000 		add	r0, r4, #48
 1208              	.LVL126:
 322:Core/Src/SEGGER_RTT.c ****   p->MaxNumUpBuffers    = SEGGER_RTT_MAX_NUM_UP_BUFFERS;
 1209              		.loc 1 322 3 is_stmt 0 view .LVU510
 1210 00e2 FFF7FEFF 		bl	memset
 1211              	.LVL127:
 323:Core/Src/SEGGER_RTT.c ****   p->MaxNumDownBuffers  = SEGGER_RTT_MAX_NUM_DOWN_BUFFERS;
 1212              		.loc 1 323 3 is_stmt 1 view .LVU511
 323:Core/Src/SEGGER_RTT.c ****   p->MaxNumDownBuffers  = SEGGER_RTT_MAX_NUM_DOWN_BUFFERS;
 1213              		.loc 1 323 25 is_stmt 0 view .LVU512
 1214 00e6 0321     		movs	r1, #3
 1215 00e8 2161     		str	r1, [r4, #16]
 324:Core/Src/SEGGER_RTT.c ****   //
 1216              		.loc 1 324 3 is_stmt 1 view .LVU513
 328:Core/Src/SEGGER_RTT.c ****   p->aUp[0].pBuffer       = _acUpBuffer;
 1217              		.loc 1 328 27 is_stmt 0 view .LVU514
 1218 00ea 1A4A     		ldr	r2, .L61+4
 324:Core/Src/SEGGER_RTT.c ****   //
 1219              		.loc 1 324 25 view .LVU515
 1220 00ec 6161     		str	r1, [r4, #20]
 328:Core/Src/SEGGER_RTT.c ****   p->aUp[0].pBuffer       = _acUpBuffer;
 1221              		.loc 1 328 3 is_stmt 1 view .LVU516
 330:Core/Src/SEGGER_RTT.c ****   p->aUp[0].RdOff         = 0u;
 1222              		.loc 1 330 27 is_stmt 0 view .LVU517
 1223 00ee 4FF48060 		mov	r0, #1024
 329:Core/Src/SEGGER_RTT.c ****   p->aUp[0].SizeOfBuffer  = BUFFER_SIZE_UP;
 1224              		.loc 1 329 27 view .LVU518
 1225 00f2 1949     		ldr	r1, .L61+8
 328:Core/Src/SEGGER_RTT.c ****   p->aUp[0].pBuffer       = _acUpBuffer;
 1226              		.loc 1 328 27 view .LVU519
 1227 00f4 A261     		str	r2, [r4, #24]
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccs0vIiH.s 			page 44


 329:Core/Src/SEGGER_RTT.c ****   p->aUp[0].SizeOfBuffer  = BUFFER_SIZE_UP;
 1228              		.loc 1 329 3 is_stmt 1 view .LVU520
 329:Core/Src/SEGGER_RTT.c ****   p->aUp[0].SizeOfBuffer  = BUFFER_SIZE_UP;
 1229              		.loc 1 329 27 is_stmt 0 view .LVU521
 1230 00f6 E161     		str	r1, [r4, #28]
 330:Core/Src/SEGGER_RTT.c ****   p->aUp[0].RdOff         = 0u;
 1231              		.loc 1 330 3 is_stmt 1 view .LVU522
 330:Core/Src/SEGGER_RTT.c ****   p->aUp[0].RdOff         = 0u;
 1232              		.loc 1 330 27 is_stmt 0 view .LVU523
 1233 00f8 2062     		str	r0, [r4, #32]
 331:Core/Src/SEGGER_RTT.c ****   p->aUp[0].WrOff         = 0u;
 1234              		.loc 1 331 3 is_stmt 1 view .LVU524
 338:Core/Src/SEGGER_RTT.c ****   p->aDown[0].SizeOfBuffer  = BUFFER_SIZE_DOWN;
 1235              		.loc 1 338 29 is_stmt 0 view .LVU525
 1236 00fa 1849     		ldr	r1, .L61+12
 331:Core/Src/SEGGER_RTT.c ****   p->aUp[0].WrOff         = 0u;
 1237              		.loc 1 331 27 view .LVU526
 1238 00fc A662     		str	r6, [r4, #40]
 332:Core/Src/SEGGER_RTT.c ****   p->aUp[0].Flags         = SEGGER_RTT_MODE_DEFAULT;
 1239              		.loc 1 332 3 is_stmt 1 view .LVU527
 332:Core/Src/SEGGER_RTT.c ****   p->aUp[0].Flags         = SEGGER_RTT_MODE_DEFAULT;
 1240              		.loc 1 332 27 is_stmt 0 view .LVU528
 1241 00fe 6662     		str	r6, [r4, #36]
 333:Core/Src/SEGGER_RTT.c ****   //
 1242              		.loc 1 333 3 is_stmt 1 view .LVU529
 333:Core/Src/SEGGER_RTT.c ****   //
 1243              		.loc 1 333 27 is_stmt 0 view .LVU530
 1244 0100 E662     		str	r6, [r4, #44]
 337:Core/Src/SEGGER_RTT.c ****   p->aDown[0].pBuffer       = _acDownBuffer;
 1245              		.loc 1 337 3 is_stmt 1 view .LVU531
 337:Core/Src/SEGGER_RTT.c ****   p->aDown[0].pBuffer       = _acDownBuffer;
 1246              		.loc 1 337 29 is_stmt 0 view .LVU532
 1247 0102 2266     		str	r2, [r4, #96]
 338:Core/Src/SEGGER_RTT.c ****   p->aDown[0].SizeOfBuffer  = BUFFER_SIZE_DOWN;
 1248              		.loc 1 338 3 is_stmt 1 view .LVU533
 339:Core/Src/SEGGER_RTT.c ****   p->aDown[0].RdOff         = 0u;
 1249              		.loc 1 339 29 is_stmt 0 view .LVU534
 1250 0104 1022     		movs	r2, #16
 338:Core/Src/SEGGER_RTT.c ****   p->aDown[0].SizeOfBuffer  = BUFFER_SIZE_DOWN;
 1251              		.loc 1 338 29 view .LVU535
 1252 0106 6166     		str	r1, [r4, #100]
 339:Core/Src/SEGGER_RTT.c ****   p->aDown[0].RdOff         = 0u;
 1253              		.loc 1 339 3 is_stmt 1 view .LVU536
 339:Core/Src/SEGGER_RTT.c ****   p->aDown[0].RdOff         = 0u;
 1254              		.loc 1 339 29 is_stmt 0 view .LVU537
 1255 0108 A266     		str	r2, [r4, #104]
 340:Core/Src/SEGGER_RTT.c ****   p->aDown[0].WrOff         = 0u;
 1256              		.loc 1 340 3 is_stmt 1 view .LVU538
 340:Core/Src/SEGGER_RTT.c ****   p->aDown[0].WrOff         = 0u;
 1257              		.loc 1 340 29 is_stmt 0 view .LVU539
 1258 010a 2667     		str	r6, [r4, #112]
 341:Core/Src/SEGGER_RTT.c ****   p->aDown[0].Flags         = SEGGER_RTT_MODE_DEFAULT;
 1259              		.loc 1 341 3 is_stmt 1 view .LVU540
 341:Core/Src/SEGGER_RTT.c ****   p->aDown[0].Flags         = SEGGER_RTT_MODE_DEFAULT;
 1260              		.loc 1 341 29 is_stmt 0 view .LVU541
 1261 010c E666     		str	r6, [r4, #108]
 342:Core/Src/SEGGER_RTT.c ****   //
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccs0vIiH.s 			page 45


 1262              		.loc 1 342 3 is_stmt 1 view .LVU542
 342:Core/Src/SEGGER_RTT.c ****   //
 1263              		.loc 1 342 29 is_stmt 0 view .LVU543
 1264 010e 6667     		str	r6, [r4, #116]
 348:Core/Src/SEGGER_RTT.c ****   for (i = 0; i < sizeof(_aInitStr) - 1; ++i) {
 1265              		.loc 1 348 3 is_stmt 1 view .LVU544
 1266              		.syntax unified
 1267              	@ 348 "Core/Src/SEGGER_RTT.c" 1
 1268 0110 BFF35F8F 		dmb
 1269              	
 1270              	@ 0 "" 2
 348:Core/Src/SEGGER_RTT.c ****   for (i = 0; i < sizeof(_aInitStr) - 1; ++i) {
 1271              		.loc 1 348 13 view .LVU545
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 1272              		.loc 1 349 3 view .LVU546
 1273              	.LVL128:
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 1274              		.loc 1 349 17 view .LVU547
 350:Core/Src/SEGGER_RTT.c ****   }
 1275              		.loc 1 350 5 view .LVU548
 350:Core/Src/SEGGER_RTT.c ****   }
 1276              		.loc 1 350 16 is_stmt 0 view .LVU549
 1277              		.thumb
 1278              		.syntax unified
 1279 0114 4520     		movs	r0, #69
 1280 0116 4FF0470C 		mov	ip, #71
 1281 011a 4FF0530E 		mov	lr, #83
 1282 011e 84F800E0 		strb	lr, [r4]
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 1283              		.loc 1 349 42 is_stmt 1 view .LVU550
 1284              	.LVL129:
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 1285              		.loc 1 349 17 view .LVU551
 350:Core/Src/SEGGER_RTT.c ****   }
 1286              		.loc 1 350 5 view .LVU552
 350:Core/Src/SEGGER_RTT.c ****   }
 1287              		.loc 1 350 16 is_stmt 0 view .LVU553
 1288 0122 5221     		movs	r1, #82
 1289 0124 6070     		strb	r0, [r4, #1]
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 1290              		.loc 1 349 42 is_stmt 1 view .LVU554
 1291              	.LVL130:
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 1292              		.loc 1 349 17 view .LVU555
 350:Core/Src/SEGGER_RTT.c ****   }
 1293              		.loc 1 350 5 view .LVU556
 350:Core/Src/SEGGER_RTT.c ****   }
 1294              		.loc 1 350 16 is_stmt 0 view .LVU557
 1295 0126 5422     		movs	r2, #84
 1296 0128 84F802C0 		strb	ip, [r4, #2]
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 1297              		.loc 1 349 42 is_stmt 1 view .LVU558
 1298              	.LVL131:
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 1299              		.loc 1 349 17 view .LVU559
 350:Core/Src/SEGGER_RTT.c ****   }
 1300              		.loc 1 350 5 view .LVU560
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccs0vIiH.s 			page 46


 350:Core/Src/SEGGER_RTT.c ****   }
 1301              		.loc 1 350 16 is_stmt 0 view .LVU561
 1302 012c 84F803C0 		strb	ip, [r4, #3]
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 1303              		.loc 1 349 42 is_stmt 1 view .LVU562
 1304              	.LVL132:
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 1305              		.loc 1 349 17 view .LVU563
 350:Core/Src/SEGGER_RTT.c ****   }
 1306              		.loc 1 350 5 view .LVU564
 350:Core/Src/SEGGER_RTT.c ****   }
 1307              		.loc 1 350 16 is_stmt 0 view .LVU565
 1308 0130 2071     		strb	r0, [r4, #4]
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 1309              		.loc 1 349 42 is_stmt 1 view .LVU566
 1310              	.LVL133:
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 1311              		.loc 1 349 17 view .LVU567
 350:Core/Src/SEGGER_RTT.c ****   }
 1312              		.loc 1 350 5 view .LVU568
 350:Core/Src/SEGGER_RTT.c ****   }
 1313              		.loc 1 350 16 is_stmt 0 view .LVU569
 1314 0132 2020     		movs	r0, #32
 1315 0134 6171     		strb	r1, [r4, #5]
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 1316              		.loc 1 349 42 is_stmt 1 view .LVU570
 1317              	.LVL134:
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 1318              		.loc 1 349 17 view .LVU571
 350:Core/Src/SEGGER_RTT.c ****   }
 1319              		.loc 1 350 5 view .LVU572
 350:Core/Src/SEGGER_RTT.c ****   }
 1320              		.loc 1 350 16 is_stmt 0 view .LVU573
 1321 0136 A071     		strb	r0, [r4, #6]
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 1322              		.loc 1 349 42 is_stmt 1 view .LVU574
 1323              	.LVL135:
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 1324              		.loc 1 349 17 view .LVU575
 350:Core/Src/SEGGER_RTT.c ****   }
 1325              		.loc 1 350 5 view .LVU576
 350:Core/Src/SEGGER_RTT.c ****   }
 1326              		.loc 1 350 16 is_stmt 0 view .LVU577
 1327 0138 E171     		strb	r1, [r4, #7]
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 1328              		.loc 1 349 42 is_stmt 1 view .LVU578
 1329              	.LVL136:
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 1330              		.loc 1 349 17 view .LVU579
 350:Core/Src/SEGGER_RTT.c ****   }
 1331              		.loc 1 350 5 view .LVU580
 350:Core/Src/SEGGER_RTT.c ****   }
 1332              		.loc 1 350 16 is_stmt 0 view .LVU581
 1333 013a 2272     		strb	r2, [r4, #8]
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 1334              		.loc 1 349 42 is_stmt 1 view .LVU582
 1335              	.LVL137:
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccs0vIiH.s 			page 47


 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 1336              		.loc 1 349 17 view .LVU583
 350:Core/Src/SEGGER_RTT.c ****   }
 1337              		.loc 1 350 5 view .LVU584
 350:Core/Src/SEGGER_RTT.c ****   }
 1338              		.loc 1 350 16 is_stmt 0 view .LVU585
 1339 013c 6272     		strb	r2, [r4, #9]
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 1340              		.loc 1 349 42 is_stmt 1 view .LVU586
 1341              	.LVL138:
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 1342              		.loc 1 349 17 view .LVU587
 350:Core/Src/SEGGER_RTT.c ****   }
 1343              		.loc 1 350 5 view .LVU588
 350:Core/Src/SEGGER_RTT.c ****   }
 1344              		.loc 1 350 16 is_stmt 0 view .LVU589
 1345 013e A672     		strb	r6, [r4, #10]
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 1346              		.loc 1 349 42 is_stmt 1 view .LVU590
 1347              	.LVL139:
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 1348              		.loc 1 349 17 view .LVU591
 350:Core/Src/SEGGER_RTT.c ****   }
 1349              		.loc 1 350 5 view .LVU592
 350:Core/Src/SEGGER_RTT.c ****   }
 1350              		.loc 1 350 16 is_stmt 0 view .LVU593
 1351 0140 E672     		strb	r6, [r4, #11]
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 1352              		.loc 1 349 42 is_stmt 1 view .LVU594
 1353              	.LVL140:
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 1354              		.loc 1 349 17 view .LVU595
 350:Core/Src/SEGGER_RTT.c ****   }
 1355              		.loc 1 350 5 view .LVU596
 350:Core/Src/SEGGER_RTT.c ****   }
 1356              		.loc 1 350 16 is_stmt 0 view .LVU597
 1357 0142 2673     		strb	r6, [r4, #12]
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 1358              		.loc 1 349 42 is_stmt 1 view .LVU598
 1359              	.LVL141:
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 1360              		.loc 1 349 17 view .LVU599
 350:Core/Src/SEGGER_RTT.c ****   }
 1361              		.loc 1 350 5 view .LVU600
 350:Core/Src/SEGGER_RTT.c ****   }
 1362              		.loc 1 350 16 is_stmt 0 view .LVU601
 1363 0144 6673     		strb	r6, [r4, #13]
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 1364              		.loc 1 349 42 is_stmt 1 view .LVU602
 1365              	.LVL142:
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 1366              		.loc 1 349 17 view .LVU603
 350:Core/Src/SEGGER_RTT.c ****   }
 1367              		.loc 1 350 5 view .LVU604
 350:Core/Src/SEGGER_RTT.c ****   }
 1368              		.loc 1 350 16 is_stmt 0 view .LVU605
 1369 0146 A673     		strb	r6, [r4, #14]
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccs0vIiH.s 			page 48


 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 1370              		.loc 1 349 42 is_stmt 1 view .LVU606
 1371              	.LVL143:
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 1372              		.loc 1 349 17 view .LVU607
 350:Core/Src/SEGGER_RTT.c ****   }
 1373              		.loc 1 350 5 view .LVU608
 350:Core/Src/SEGGER_RTT.c ****   }
 1374              		.loc 1 350 16 is_stmt 0 view .LVU609
 1375 0148 E673     		strb	r6, [r4, #15]
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 1376              		.loc 1 349 42 is_stmt 1 view .LVU610
 1377              	.LVL144:
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 1378              		.loc 1 349 17 view .LVU611
 352:Core/Src/SEGGER_RTT.c **** }
 1379              		.loc 1 352 3 view .LVU612
 1380              		.syntax unified
 1381              	@ 352 "Core/Src/SEGGER_RTT.c" 1
 1382 014a BFF35F8F 		dmb
 1383              	
 1384              	@ 0 "" 2
 352:Core/Src/SEGGER_RTT.c **** }
 1385              		.loc 1 352 13 view .LVU613
 353:Core/Src/SEGGER_RTT.c **** 
 1386              		.loc 1 353 1 is_stmt 0 view .LVU614
 1387              		.thumb
 1388              		.syntax unified
 1389 014e 68E7     		b	.L43
 1390              	.L62:
 1391              		.align	2
 1392              	.L61:
 1393 0150 00000000 		.word	.LANCHOR0
 1394 0154 00000000 		.word	.LC0
 1395 0158 00000000 		.word	.LANCHOR1
 1396 015c 00000000 		.word	.LANCHOR2
 1397              	.LBE66:
 1398              	.LBE65:
 1399              	.LBE68:
 1400              	.LBE70:
 1401              	.LBE72:
 1402              	.LBE74:
 1403              		.cfi_endproc
 1404              	.LFE7:
 1406              		.section	.text.SEGGER_RTT_Read,"ax",%progbits
 1407              		.align	1
 1408              		.p2align 2,,3
 1409              		.global	SEGGER_RTT_Read
 1410              		.syntax unified
 1411              		.thumb
 1412              		.thumb_func
 1414              	SEGGER_RTT_Read:
 1415              	.LVL145:
 1416              	.LFB8:
 777:Core/Src/SEGGER_RTT.c **** 
 778:Core/Src/SEGGER_RTT.c **** /*********************************************************************
 779:Core/Src/SEGGER_RTT.c **** *
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccs0vIiH.s 			page 49


 780:Core/Src/SEGGER_RTT.c **** *       SEGGER_RTT_Read
 781:Core/Src/SEGGER_RTT.c **** *
 782:Core/Src/SEGGER_RTT.c **** *  Function description
 783:Core/Src/SEGGER_RTT.c **** *    Reads characters from SEGGER real-time-terminal control block
 784:Core/Src/SEGGER_RTT.c **** *    which have been previously stored by the host.
 785:Core/Src/SEGGER_RTT.c **** *
 786:Core/Src/SEGGER_RTT.c **** *  Parameters
 787:Core/Src/SEGGER_RTT.c **** *    BufferIndex  Index of Down-buffer to be used (e.g. 0 for "Terminal").
 788:Core/Src/SEGGER_RTT.c **** *    pBuffer      Pointer to buffer provided by target application, to copy characters from RTT-dow
 789:Core/Src/SEGGER_RTT.c **** *    BufferSize   Size of the target application buffer.
 790:Core/Src/SEGGER_RTT.c **** *
 791:Core/Src/SEGGER_RTT.c **** *  Return value
 792:Core/Src/SEGGER_RTT.c **** *    Number of bytes that have been read.
 793:Core/Src/SEGGER_RTT.c **** */
 794:Core/Src/SEGGER_RTT.c **** unsigned SEGGER_RTT_Read(unsigned BufferIndex, void* pBuffer, unsigned BufferSize) {
 1417              		.loc 1 794 84 is_stmt 1 view -0
 1418              		.cfi_startproc
 1419              		@ args = 0, pretend = 0, frame = 8
 1420              		@ frame_needed = 0, uses_anonymous_args = 0
 1421              		.loc 1 794 84 is_stmt 0 view .LVU616
 1422 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 1423              		.cfi_def_cfa_offset 36
 1424              		.cfi_offset 4, -36
 1425              		.cfi_offset 5, -32
 1426              		.cfi_offset 6, -28
 1427              		.cfi_offset 7, -24
 1428              		.cfi_offset 8, -20
 1429              		.cfi_offset 9, -16
 1430              		.cfi_offset 10, -12
 1431              		.cfi_offset 11, -8
 1432              		.cfi_offset 14, -4
 1433 0004 0546     		mov	r5, r0
 795:Core/Src/SEGGER_RTT.c ****   unsigned NumBytesRead;
 1434              		.loc 1 795 3 is_stmt 1 view .LVU617
 1435              	.LBB81:
 796:Core/Src/SEGGER_RTT.c **** 
 797:Core/Src/SEGGER_RTT.c ****   SEGGER_RTT_LOCK();
 1436              		.loc 1 797 3 view .LVU618
 1437              		.loc 1 797 3 view .LVU619
 1438              	.LBE81:
 794:Core/Src/SEGGER_RTT.c ****   unsigned NumBytesRead;
 1439              		.loc 1 794 84 is_stmt 0 view .LVU620
 1440 0006 83B0     		sub	sp, sp, #12
 1441              		.cfi_def_cfa_offset 48
 794:Core/Src/SEGGER_RTT.c ****   unsigned NumBytesRead;
 1442              		.loc 1 794 84 view .LVU621
 1443 0008 8A46     		mov	r10, r1
 1444 000a 9046     		mov	r8, r2
 1445              	.LBB92:
 1446              		.loc 1 797 3 view .LVU622
 1447              		.syntax unified
 1448              	@ 797 "Core/Src/SEGGER_RTT.c" 1
 1449 000c EFF31183 		mrs   r3, basepri  
 1450 0010 4FF02001 		mov   r1, #32       
 1451 0014 81F31188 		msr   basepri, r1  
 1452              		
 1453              	@ 0 "" 2
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccs0vIiH.s 			page 50


 1454              	.LVL146:
 1455              		.loc 1 797 20 is_stmt 1 view .LVU623
 798:Core/Src/SEGGER_RTT.c ****   //
 799:Core/Src/SEGGER_RTT.c ****   // Call the non-locking read function
 800:Core/Src/SEGGER_RTT.c ****   //
 801:Core/Src/SEGGER_RTT.c ****   NumBytesRead = SEGGER_RTT_ReadNoLock(BufferIndex, pBuffer, BufferSize);
 1456              		.loc 1 801 3 view .LVU624
 1457              		.thumb
 1458              		.syntax unified
 1459              	.LBB82:
 1460              	.LBI82:
 665:Core/Src/SEGGER_RTT.c ****   unsigned                NumBytesRem;
 1461              		.loc 1 665 10 view .LVU625
 1462              	.LBB83:
 666:Core/Src/SEGGER_RTT.c ****   unsigned                NumBytesRead;
 1463              		.loc 1 666 3 view .LVU626
 667:Core/Src/SEGGER_RTT.c ****   unsigned                RdOff;
 1464              		.loc 1 667 3 view .LVU627
 668:Core/Src/SEGGER_RTT.c ****   unsigned                WrOff;
 1465              		.loc 1 668 3 view .LVU628
 669:Core/Src/SEGGER_RTT.c ****   unsigned char*          pBuffer;
 1466              		.loc 1 669 3 view .LVU629
 670:Core/Src/SEGGER_RTT.c ****   SEGGER_RTT_BUFFER_DOWN* pRing;
 1467              		.loc 1 670 3 view .LVU630
 671:Core/Src/SEGGER_RTT.c ****   volatile char*          pSrc;
 1468              		.loc 1 671 3 view .LVU631
 672:Core/Src/SEGGER_RTT.c ****   //
 1469              		.loc 1 672 3 view .LVU632
 1470              	.LBB84:
 674:Core/Src/SEGGER_RTT.c ****   pRing = (SEGGER_RTT_BUFFER_DOWN*)((char*)&_SEGGER_RTT.aDown[BufferIndex] + SEGGER_RTT_UNCACHED_OF
 1471              		.loc 1 674 3 view .LVU633
 674:Core/Src/SEGGER_RTT.c ****   pRing = (SEGGER_RTT_BUFFER_DOWN*)((char*)&_SEGGER_RTT.aDown[BufferIndex] + SEGGER_RTT_UNCACHED_OF
 1472              		.loc 1 674 3 view .LVU634
 674:Core/Src/SEGGER_RTT.c ****   pRing = (SEGGER_RTT_BUFFER_DOWN*)((char*)&_SEGGER_RTT.aDown[BufferIndex] + SEGGER_RTT_UNCACHED_OF
 1473              		.loc 1 674 3 view .LVU635
 674:Core/Src/SEGGER_RTT.c ****   pRing = (SEGGER_RTT_BUFFER_DOWN*)((char*)&_SEGGER_RTT.aDown[BufferIndex] + SEGGER_RTT_UNCACHED_OF
 1474              		.loc 1 674 3 view .LVU636
 1475 0018 464C     		ldr	r4, .L82
 1476 001a 2278     		ldrb	r2, [r4]	@ zero_extendqisi2
 1477              	.LVL147:
 674:Core/Src/SEGGER_RTT.c ****   pRing = (SEGGER_RTT_BUFFER_DOWN*)((char*)&_SEGGER_RTT.aDown[BufferIndex] + SEGGER_RTT_UNCACHED_OF
 1478              		.loc 1 674 3 is_stmt 0 view .LVU637
 1479 001c 002A     		cmp	r2, #0
 1480 001e 4DD0     		beq	.L80
 1481              	.LVL148:
 1482              	.L64:
 674:Core/Src/SEGGER_RTT.c ****   pRing = (SEGGER_RTT_BUFFER_DOWN*)((char*)&_SEGGER_RTT.aDown[BufferIndex] + SEGGER_RTT_UNCACHED_OF
 1483              		.loc 1 674 3 is_stmt 1 view .LVU638
 1484              	.LBE84:
 674:Core/Src/SEGGER_RTT.c ****   pRing = (SEGGER_RTT_BUFFER_DOWN*)((char*)&_SEGGER_RTT.aDown[BufferIndex] + SEGGER_RTT_UNCACHED_OF
 1485              		.loc 1 674 9 view .LVU639
 675:Core/Src/SEGGER_RTT.c ****   pBuffer = (unsigned char*)pData;
 1486              		.loc 1 675 3 view .LVU640
 676:Core/Src/SEGGER_RTT.c ****   RdOff = pRing->RdOff;
 1487              		.loc 1 676 3 view .LVU641
 677:Core/Src/SEGGER_RTT.c ****   WrOff = pRing->WrOff;
 1488              		.loc 1 677 3 view .LVU642
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccs0vIiH.s 			page 51


 677:Core/Src/SEGGER_RTT.c ****   WrOff = pRing->WrOff;
 1489              		.loc 1 677 9 is_stmt 0 view .LVU643
 1490 0020 05EB4507 		add	r7, r5, r5, lsl #1
 1491 0024 04EBC707 		add	r7, r4, r7, lsl #3
 1492 0028 4FEA450B 		lsl	fp, r5, #1
 678:Core/Src/SEGGER_RTT.c ****   NumBytesRead = 0u;
 1493              		.loc 1 678 9 view .LVU644
 1494 002c D7F86C90 		ldr	r9, [r7, #108]
 677:Core/Src/SEGGER_RTT.c ****   WrOff = pRing->WrOff;
 1495              		.loc 1 677 9 view .LVU645
 1496 0030 3E6F     		ldr	r6, [r7, #112]
 1497              	.LVL149:
 678:Core/Src/SEGGER_RTT.c ****   NumBytesRead = 0u;
 1498              		.loc 1 678 3 is_stmt 1 view .LVU646
 679:Core/Src/SEGGER_RTT.c ****   //
 1499              		.loc 1 679 3 view .LVU647
 683:Core/Src/SEGGER_RTT.c ****     NumBytesRem = pRing->SizeOfBuffer - RdOff;
 1500              		.loc 1 683 3 view .LVU648
 683:Core/Src/SEGGER_RTT.c ****     NumBytesRem = pRing->SizeOfBuffer - RdOff;
 1501              		.loc 1 683 6 is_stmt 0 view .LVU649
 1502 0032 4E45     		cmp	r6, r9
 1503 0034 22D8     		bhi	.L81
 711:Core/Src/SEGGER_RTT.c ****   NumBytesRem = MIN(NumBytesRem, BufferSize);
 1504              		.loc 1 711 3 is_stmt 1 view .LVU650
 711:Core/Src/SEGGER_RTT.c ****   NumBytesRem = MIN(NumBytesRem, BufferSize);
 1505              		.loc 1 711 15 is_stmt 0 view .LVU651
 1506 0036 A9EB0609 		sub	r9, r9, r6
 1507              	.LVL150:
 712:Core/Src/SEGGER_RTT.c ****   if (NumBytesRem > 0u) {
 1508              		.loc 1 712 3 is_stmt 1 view .LVU652
 712:Core/Src/SEGGER_RTT.c ****   if (NumBytesRem > 0u) {
 1509              		.loc 1 712 15 is_stmt 0 view .LVU653
 1510 003a C845     		cmp	r8, r9
 1511 003c 4246     		mov	r2, r8
 1512 003e 28BF     		it	cs
 1513 0040 4A46     		movcs	r2, r9
 1514              	.LVL151:
 713:Core/Src/SEGGER_RTT.c ****     pSrc = (pRing->pBuffer + RdOff) + SEGGER_RTT_UNCACHED_OFF;
 1515              		.loc 1 713 3 is_stmt 1 view .LVU654
 713:Core/Src/SEGGER_RTT.c ****     pSrc = (pRing->pBuffer + RdOff) + SEGGER_RTT_UNCACHED_OFF;
 1516              		.loc 1 713 6 is_stmt 0 view .LVU655
 1517 0042 2AB9     		cbnz	r2, .L71
 1518              	.LVL152:
 1519              	.L68:
 734:Core/Src/SEGGER_RTT.c **** }
 1520              		.loc 1 734 3 is_stmt 1 view .LVU656
 734:Core/Src/SEGGER_RTT.c **** }
 1521              		.loc 1 734 3 is_stmt 0 view .LVU657
 1522              	.LBE83:
 1523              	.LBE82:
 802:Core/Src/SEGGER_RTT.c ****   //
 803:Core/Src/SEGGER_RTT.c ****   // Finish up.
 804:Core/Src/SEGGER_RTT.c ****   //
 805:Core/Src/SEGGER_RTT.c ****   SEGGER_RTT_UNLOCK();
 1524              		.loc 1 805 3 is_stmt 1 view .LVU658
 1525              		.syntax unified
 1526              	@ 805 "Core/Src/SEGGER_RTT.c" 1
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccs0vIiH.s 			page 52


 1527 0044 83F31188 		msr   basepri, r3  
 1528              		
 1529              	@ 0 "" 2
 1530              		.thumb
 1531              		.syntax unified
 1532              	.LBE92:
 1533              		.loc 1 805 22 view .LVU659
 806:Core/Src/SEGGER_RTT.c ****   //
 807:Core/Src/SEGGER_RTT.c ****   return NumBytesRead;
 1534              		.loc 1 807 3 view .LVU660
 808:Core/Src/SEGGER_RTT.c **** }
 1535              		.loc 1 808 1 is_stmt 0 view .LVU661
 1536 0048 1046     		mov	r0, r2
 1537 004a 03B0     		add	sp, sp, #12
 1538              		.cfi_remember_state
 1539              		.cfi_def_cfa_offset 36
 1540              		@ sp needed
 1541 004c BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 1542              	.LVL153:
 1543              	.L71:
 1544              		.cfi_restore_state
 1545              	.LBB93:
 1546              	.LBB91:
 1547              	.LBB90:
 713:Core/Src/SEGGER_RTT.c ****     pSrc = (pRing->pBuffer + RdOff) + SEGGER_RTT_UNCACHED_OFF;
 1548              		.loc 1 713 6 view .LVU662
 1549 0050 1746     		mov	r7, r2
 1550              	.LVL154:
 1551              	.L69:
 714:Core/Src/SEGGER_RTT.c **** #if SEGGER_RTT_MEMCPY_USE_BYTELOOP
 1552              		.loc 1 714 5 is_stmt 1 view .LVU663
 723:Core/Src/SEGGER_RTT.c ****     NumBytesRead += NumBytesRem;
 1553              		.loc 1 723 5 view .LVU664
 714:Core/Src/SEGGER_RTT.c **** #if SEGGER_RTT_MEMCPY_USE_BYTELOOP
 1554              		.loc 1 714 18 is_stmt 0 view .LVU665
 1555 0052 0BEB0501 		add	r1, fp, r5
 1556 0056 04EBC101 		add	r1, r4, r1, lsl #3
 723:Core/Src/SEGGER_RTT.c ****     NumBytesRead += NumBytesRem;
 1557              		.loc 1 723 5 view .LVU666
 1558 005a 5046     		mov	r0, r10
 714:Core/Src/SEGGER_RTT.c **** #if SEGGER_RTT_MEMCPY_USE_BYTELOOP
 1559              		.loc 1 714 10 view .LVU667
 1560 005c 496E     		ldr	r1, [r1, #100]
 1561 005e 0093     		str	r3, [sp]
 723:Core/Src/SEGGER_RTT.c ****     NumBytesRead += NumBytesRem;
 1562              		.loc 1 723 5 view .LVU668
 1563 0060 3144     		add	r1, r1, r6
 727:Core/Src/SEGGER_RTT.c **** #endif
 1564              		.loc 1 727 18 view .LVU669
 1565 0062 1644     		add	r6, r6, r2
 1566              	.LVL155:
 723:Core/Src/SEGGER_RTT.c ****     NumBytesRead += NumBytesRem;
 1567              		.loc 1 723 5 view .LVU670
 1568 0064 FFF7FEFF 		bl	memcpy
 1569              	.LVL156:
 724:Core/Src/SEGGER_RTT.c ****     pBuffer      += NumBytesRem;
 1570              		.loc 1 724 5 is_stmt 1 view .LVU671
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccs0vIiH.s 			page 53


 725:Core/Src/SEGGER_RTT.c ****     BufferSize   -= NumBytesRem;
 1571              		.loc 1 725 5 view .LVU672
 726:Core/Src/SEGGER_RTT.c ****     RdOff        += NumBytesRem;
 1572              		.loc 1 726 5 view .LVU673
 727:Core/Src/SEGGER_RTT.c **** #endif
 1573              		.loc 1 727 5 view .LVU674
 724:Core/Src/SEGGER_RTT.c ****     pBuffer      += NumBytesRem;
 1574              		.loc 1 724 18 is_stmt 0 view .LVU675
 1575 0068 009B     		ldr	r3, [sp]
 1576 006a 3A46     		mov	r2, r7
 1577              	.L67:
 1578              	.LVL157:
 730:Core/Src/SEGGER_RTT.c ****     pRing->RdOff = RdOff;
 1579              		.loc 1 730 3 is_stmt 1 view .LVU676
 730:Core/Src/SEGGER_RTT.c ****     pRing->RdOff = RdOff;
 1580              		.loc 1 730 6 is_stmt 0 view .LVU677
 1581 006c 002A     		cmp	r2, #0
 1582 006e E9D0     		beq	.L68
 731:Core/Src/SEGGER_RTT.c ****   }
 1583              		.loc 1 731 5 is_stmt 1 view .LVU678
 731:Core/Src/SEGGER_RTT.c ****   }
 1584              		.loc 1 731 18 is_stmt 0 view .LVU679
 1585 0070 AB44     		add	fp, fp, r5
 1586 0072 04EBCB0B 		add	fp, r4, fp, lsl #3
 1587 0076 CBF87060 		str	r6, [fp, #112]
 1588 007a E3E7     		b	.L68
 1589              	.LVL158:
 1590              	.L81:
 684:Core/Src/SEGGER_RTT.c ****     NumBytesRem = MIN(NumBytesRem, BufferSize);
 1591              		.loc 1 684 5 is_stmt 1 view .LVU680
 684:Core/Src/SEGGER_RTT.c ****     NumBytesRem = MIN(NumBytesRem, BufferSize);
 1592              		.loc 1 684 17 is_stmt 0 view .LVU681
 1593 007c BA6E     		ldr	r2, [r7, #104]
 686:Core/Src/SEGGER_RTT.c **** #if SEGGER_RTT_MEMCPY_USE_BYTELOOP
 1594              		.loc 1 686 10 view .LVU682
 1595 007e 796E     		ldr	r1, [r7, #100]
 1596 0080 0193     		str	r3, [sp, #4]
 684:Core/Src/SEGGER_RTT.c ****     NumBytesRem = MIN(NumBytesRem, BufferSize);
 1597              		.loc 1 684 17 view .LVU683
 1598 0082 921B     		subs	r2, r2, r6
 1599              	.LVL159:
 685:Core/Src/SEGGER_RTT.c ****     pSrc = (pRing->pBuffer + RdOff) + SEGGER_RTT_UNCACHED_OFF;
 1600              		.loc 1 685 5 is_stmt 1 view .LVU684
 685:Core/Src/SEGGER_RTT.c ****     pSrc = (pRing->pBuffer + RdOff) + SEGGER_RTT_UNCACHED_OFF;
 1601              		.loc 1 685 17 is_stmt 0 view .LVU685
 1602 0084 4245     		cmp	r2, r8
 1603 0086 28BF     		it	cs
 1604 0088 4246     		movcs	r2, r8
 1605              	.LVL160:
 686:Core/Src/SEGGER_RTT.c **** #if SEGGER_RTT_MEMCPY_USE_BYTELOOP
 1606              		.loc 1 686 5 is_stmt 1 view .LVU686
 695:Core/Src/SEGGER_RTT.c ****     NumBytesRead += NumBytesRem;
 1607              		.loc 1 695 5 view .LVU687
 1608 008a 3144     		add	r1, r1, r6
 1609 008c 5046     		mov	r0, r10
 699:Core/Src/SEGGER_RTT.c **** #endif
 1610              		.loc 1 699 18 is_stmt 0 view .LVU688
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccs0vIiH.s 			page 54


 1611 008e 1644     		add	r6, r6, r2
 1612              	.LVL161:
 695:Core/Src/SEGGER_RTT.c ****     NumBytesRead += NumBytesRem;
 1613              		.loc 1 695 5 view .LVU689
 1614 0090 0092     		str	r2, [sp]
 1615 0092 FFF7FEFF 		bl	memcpy
 1616              	.LVL162:
 696:Core/Src/SEGGER_RTT.c ****     pBuffer      += NumBytesRem;
 1617              		.loc 1 696 5 is_stmt 1 view .LVU690
 697:Core/Src/SEGGER_RTT.c ****     BufferSize   -= NumBytesRem;
 1618              		.loc 1 697 5 view .LVU691
 698:Core/Src/SEGGER_RTT.c ****     RdOff        += NumBytesRem;
 1619              		.loc 1 698 5 view .LVU692
 704:Core/Src/SEGGER_RTT.c ****       RdOff = 0u;
 1620              		.loc 1 704 8 is_stmt 0 view .LVU693
 1621 0096 B86E     		ldr	r0, [r7, #104]
 698:Core/Src/SEGGER_RTT.c ****     RdOff        += NumBytesRem;
 1622              		.loc 1 698 18 view .LVU694
 1623 0098 009A     		ldr	r2, [sp]
 704:Core/Src/SEGGER_RTT.c ****       RdOff = 0u;
 1624              		.loc 1 704 8 view .LVU695
 1625 009a 019B     		ldr	r3, [sp, #4]
 1626 009c 8642     		cmp	r6, r0
 698:Core/Src/SEGGER_RTT.c ****     RdOff        += NumBytesRem;
 1627              		.loc 1 698 18 view .LVU696
 1628 009e A8EB0201 		sub	r1, r8, r2
 1629              	.LVL163:
 699:Core/Src/SEGGER_RTT.c **** #endif
 1630              		.loc 1 699 5 is_stmt 1 view .LVU697
 704:Core/Src/SEGGER_RTT.c ****       RdOff = 0u;
 1631              		.loc 1 704 5 view .LVU698
 711:Core/Src/SEGGER_RTT.c ****   NumBytesRem = MIN(NumBytesRem, BufferSize);
 1632              		.loc 1 711 15 is_stmt 0 view .LVU699
 1633 00a2 14BF     		ite	ne
 1634 00a4 A9EB0609 		subne	r9, r9, r6
 1635              	.LVL164:
 705:Core/Src/SEGGER_RTT.c ****     }
 1636              		.loc 1 705 13 view .LVU700
 1637 00a8 0026     		moveq	r6, #0
 1638              	.LVL165:
 711:Core/Src/SEGGER_RTT.c ****   NumBytesRem = MIN(NumBytesRem, BufferSize);
 1639              		.loc 1 711 3 is_stmt 1 view .LVU701
 712:Core/Src/SEGGER_RTT.c ****   if (NumBytesRem > 0u) {
 1640              		.loc 1 712 3 view .LVU702
 712:Core/Src/SEGGER_RTT.c ****   if (NumBytesRem > 0u) {
 1641              		.loc 1 712 15 is_stmt 0 view .LVU703
 1642 00aa 4945     		cmp	r1, r9
 1643 00ac 28BF     		it	cs
 1644 00ae 4946     		movcs	r1, r9
 1645              	.LVL166:
 713:Core/Src/SEGGER_RTT.c ****     pSrc = (pRing->pBuffer + RdOff) + SEGGER_RTT_UNCACHED_OFF;
 1646              		.loc 1 713 3 is_stmt 1 view .LVU704
 713:Core/Src/SEGGER_RTT.c ****     pSrc = (pRing->pBuffer + RdOff) + SEGGER_RTT_UNCACHED_OFF;
 1647              		.loc 1 713 6 is_stmt 0 view .LVU705
 1648 00b0 0029     		cmp	r1, #0
 1649 00b2 DBD0     		beq	.L67
 1650              	.LVL167:
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccs0vIiH.s 			page 55


 697:Core/Src/SEGGER_RTT.c ****     BufferSize   -= NumBytesRem;
 1651              		.loc 1 697 18 view .LVU706
 1652 00b4 9244     		add	r10, r10, r2
 1653              	.LVL168:
 724:Core/Src/SEGGER_RTT.c ****     pBuffer      += NumBytesRem;
 1654              		.loc 1 724 18 view .LVU707
 1655 00b6 5718     		adds	r7, r2, r1
 1656 00b8 0A46     		mov	r2, r1
 1657 00ba CAE7     		b	.L69
 1658              	.LVL169:
 1659              	.L80:
 724:Core/Src/SEGGER_RTT.c ****     pBuffer      += NumBytesRem;
 1660              		.loc 1 724 18 view .LVU708
 1661 00bc 02F0FF06 		and	r6, r2, #255
 1662              	.LBB89:
 1663              	.LBB85:
 1664              	.LBB86:
 322:Core/Src/SEGGER_RTT.c ****   p->MaxNumUpBuffers    = SEGGER_RTT_MAX_NUM_UP_BUFFERS;
 1665              		.loc 1 322 3 view .LVU709
 1666 00c0 3146     		mov	r1, r6
 1667 00c2 7822     		movs	r2, #120
 1668 00c4 04F13000 		add	r0, r4, #48
 1669              	.LVL170:
 322:Core/Src/SEGGER_RTT.c ****   p->MaxNumUpBuffers    = SEGGER_RTT_MAX_NUM_UP_BUFFERS;
 1670              		.loc 1 322 3 view .LVU710
 1671 00c8 0093     		str	r3, [sp]
 1672              	.LBE86:
 1673              	.LBE85:
 674:Core/Src/SEGGER_RTT.c ****   pRing = (SEGGER_RTT_BUFFER_DOWN*)((char*)&_SEGGER_RTT.aDown[BufferIndex] + SEGGER_RTT_UNCACHED_OF
 1674              		.loc 1 674 3 is_stmt 1 view .LVU711
 1675              	.LBB88:
 1676              	.LBI85:
 314:Core/Src/SEGGER_RTT.c ****   volatile SEGGER_RTT_CB* p;   // Volatile to make sure that compiler cannot change the order of ac
 1677              		.loc 1 314 13 view .LVU712
 1678              	.LBB87:
 315:Core/Src/SEGGER_RTT.c ****   static const char _aInitStr[] = "\0\0\0\0\0\0TTR REGGES";  // Init complete ID string to make sur
 1679              		.loc 1 315 3 view .LVU713
 316:Core/Src/SEGGER_RTT.c ****   unsigned i;
 1680              		.loc 1 316 3 view .LVU714
 317:Core/Src/SEGGER_RTT.c ****   //
 1681              		.loc 1 317 3 view .LVU715
 321:Core/Src/SEGGER_RTT.c ****   memset((SEGGER_RTT_CB*)p, 0, sizeof(_SEGGER_RTT));         // Make sure that the RTT CB is always
 1682              		.loc 1 321 3 view .LVU716
 1683              	.LVL171:
 322:Core/Src/SEGGER_RTT.c ****   p->MaxNumUpBuffers    = SEGGER_RTT_MAX_NUM_UP_BUFFERS;
 1684              		.loc 1 322 3 view .LVU717
 1685 00ca FFF7FEFF 		bl	memset
 1686              	.LVL172:
 323:Core/Src/SEGGER_RTT.c ****   p->MaxNumDownBuffers  = SEGGER_RTT_MAX_NUM_DOWN_BUFFERS;
 1687              		.loc 1 323 3 view .LVU718
 323:Core/Src/SEGGER_RTT.c ****   p->MaxNumDownBuffers  = SEGGER_RTT_MAX_NUM_DOWN_BUFFERS;
 1688              		.loc 1 323 25 is_stmt 0 view .LVU719
 1689 00ce 0321     		movs	r1, #3
 1690 00d0 2161     		str	r1, [r4, #16]
 324:Core/Src/SEGGER_RTT.c ****   //
 1691              		.loc 1 324 3 is_stmt 1 view .LVU720
 328:Core/Src/SEGGER_RTT.c ****   p->aUp[0].pBuffer       = _acUpBuffer;
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccs0vIiH.s 			page 56


 1692              		.loc 1 328 27 is_stmt 0 view .LVU721
 1693 00d2 194A     		ldr	r2, .L82+4
 324:Core/Src/SEGGER_RTT.c ****   //
 1694              		.loc 1 324 25 view .LVU722
 1695 00d4 6161     		str	r1, [r4, #20]
 328:Core/Src/SEGGER_RTT.c ****   p->aUp[0].pBuffer       = _acUpBuffer;
 1696              		.loc 1 328 3 is_stmt 1 view .LVU723
 330:Core/Src/SEGGER_RTT.c ****   p->aUp[0].RdOff         = 0u;
 1697              		.loc 1 330 27 is_stmt 0 view .LVU724
 1698 00d6 4FF48060 		mov	r0, #1024
 329:Core/Src/SEGGER_RTT.c ****   p->aUp[0].SizeOfBuffer  = BUFFER_SIZE_UP;
 1699              		.loc 1 329 27 view .LVU725
 1700 00da 1849     		ldr	r1, .L82+8
 328:Core/Src/SEGGER_RTT.c ****   p->aUp[0].pBuffer       = _acUpBuffer;
 1701              		.loc 1 328 27 view .LVU726
 1702 00dc A261     		str	r2, [r4, #24]
 329:Core/Src/SEGGER_RTT.c ****   p->aUp[0].SizeOfBuffer  = BUFFER_SIZE_UP;
 1703              		.loc 1 329 3 is_stmt 1 view .LVU727
 329:Core/Src/SEGGER_RTT.c ****   p->aUp[0].SizeOfBuffer  = BUFFER_SIZE_UP;
 1704              		.loc 1 329 27 is_stmt 0 view .LVU728
 1705 00de E161     		str	r1, [r4, #28]
 330:Core/Src/SEGGER_RTT.c ****   p->aUp[0].RdOff         = 0u;
 1706              		.loc 1 330 3 is_stmt 1 view .LVU729
 330:Core/Src/SEGGER_RTT.c ****   p->aUp[0].RdOff         = 0u;
 1707              		.loc 1 330 27 is_stmt 0 view .LVU730
 1708 00e0 2062     		str	r0, [r4, #32]
 331:Core/Src/SEGGER_RTT.c ****   p->aUp[0].WrOff         = 0u;
 1709              		.loc 1 331 3 is_stmt 1 view .LVU731
 338:Core/Src/SEGGER_RTT.c ****   p->aDown[0].SizeOfBuffer  = BUFFER_SIZE_DOWN;
 1710              		.loc 1 338 29 is_stmt 0 view .LVU732
 1711 00e2 1749     		ldr	r1, .L82+12
 331:Core/Src/SEGGER_RTT.c ****   p->aUp[0].WrOff         = 0u;
 1712              		.loc 1 331 27 view .LVU733
 1713 00e4 A662     		str	r6, [r4, #40]
 332:Core/Src/SEGGER_RTT.c ****   p->aUp[0].Flags         = SEGGER_RTT_MODE_DEFAULT;
 1714              		.loc 1 332 3 is_stmt 1 view .LVU734
 332:Core/Src/SEGGER_RTT.c ****   p->aUp[0].Flags         = SEGGER_RTT_MODE_DEFAULT;
 1715              		.loc 1 332 27 is_stmt 0 view .LVU735
 1716 00e6 6662     		str	r6, [r4, #36]
 333:Core/Src/SEGGER_RTT.c ****   //
 1717              		.loc 1 333 3 is_stmt 1 view .LVU736
 333:Core/Src/SEGGER_RTT.c ****   //
 1718              		.loc 1 333 27 is_stmt 0 view .LVU737
 1719 00e8 E662     		str	r6, [r4, #44]
 337:Core/Src/SEGGER_RTT.c ****   p->aDown[0].pBuffer       = _acDownBuffer;
 1720              		.loc 1 337 3 is_stmt 1 view .LVU738
 337:Core/Src/SEGGER_RTT.c ****   p->aDown[0].pBuffer       = _acDownBuffer;
 1721              		.loc 1 337 29 is_stmt 0 view .LVU739
 1722 00ea 2266     		str	r2, [r4, #96]
 338:Core/Src/SEGGER_RTT.c ****   p->aDown[0].SizeOfBuffer  = BUFFER_SIZE_DOWN;
 1723              		.loc 1 338 3 is_stmt 1 view .LVU740
 339:Core/Src/SEGGER_RTT.c ****   p->aDown[0].RdOff         = 0u;
 1724              		.loc 1 339 29 is_stmt 0 view .LVU741
 1725 00ec 1022     		movs	r2, #16
 338:Core/Src/SEGGER_RTT.c ****   p->aDown[0].SizeOfBuffer  = BUFFER_SIZE_DOWN;
 1726              		.loc 1 338 29 view .LVU742
 1727 00ee 6166     		str	r1, [r4, #100]
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccs0vIiH.s 			page 57


 339:Core/Src/SEGGER_RTT.c ****   p->aDown[0].RdOff         = 0u;
 1728              		.loc 1 339 3 is_stmt 1 view .LVU743
 339:Core/Src/SEGGER_RTT.c ****   p->aDown[0].RdOff         = 0u;
 1729              		.loc 1 339 29 is_stmt 0 view .LVU744
 1730 00f0 A266     		str	r2, [r4, #104]
 340:Core/Src/SEGGER_RTT.c ****   p->aDown[0].WrOff         = 0u;
 1731              		.loc 1 340 3 is_stmt 1 view .LVU745
 340:Core/Src/SEGGER_RTT.c ****   p->aDown[0].WrOff         = 0u;
 1732              		.loc 1 340 29 is_stmt 0 view .LVU746
 1733 00f2 2667     		str	r6, [r4, #112]
 341:Core/Src/SEGGER_RTT.c ****   p->aDown[0].Flags         = SEGGER_RTT_MODE_DEFAULT;
 1734              		.loc 1 341 3 is_stmt 1 view .LVU747
 341:Core/Src/SEGGER_RTT.c ****   p->aDown[0].Flags         = SEGGER_RTT_MODE_DEFAULT;
 1735              		.loc 1 341 29 is_stmt 0 view .LVU748
 1736 00f4 E666     		str	r6, [r4, #108]
 342:Core/Src/SEGGER_RTT.c ****   //
 1737              		.loc 1 342 3 is_stmt 1 view .LVU749
 342:Core/Src/SEGGER_RTT.c ****   //
 1738              		.loc 1 342 29 is_stmt 0 view .LVU750
 1739 00f6 6667     		str	r6, [r4, #116]
 348:Core/Src/SEGGER_RTT.c ****   for (i = 0; i < sizeof(_aInitStr) - 1; ++i) {
 1740              		.loc 1 348 3 is_stmt 1 view .LVU751
 1741              		.syntax unified
 1742              	@ 348 "Core/Src/SEGGER_RTT.c" 1
 1743 00f8 BFF35F8F 		dmb
 1744              	
 1745              	@ 0 "" 2
 348:Core/Src/SEGGER_RTT.c ****   for (i = 0; i < sizeof(_aInitStr) - 1; ++i) {
 1746              		.loc 1 348 13 view .LVU752
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 1747              		.loc 1 349 3 view .LVU753
 1748              	.LVL173:
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 1749              		.loc 1 349 17 view .LVU754
 350:Core/Src/SEGGER_RTT.c ****   }
 1750              		.loc 1 350 5 view .LVU755
 350:Core/Src/SEGGER_RTT.c ****   }
 1751              		.loc 1 350 16 is_stmt 0 view .LVU756
 1752              		.thumb
 1753              		.syntax unified
 1754 00fc 4520     		movs	r0, #69
 1755 00fe 4727     		movs	r7, #71
 1756 0100 4FF0530C 		mov	ip, #83
 1757 0104 84F800C0 		strb	ip, [r4]
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 1758              		.loc 1 349 42 is_stmt 1 view .LVU757
 1759              	.LVL174:
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 1760              		.loc 1 349 17 view .LVU758
 350:Core/Src/SEGGER_RTT.c ****   }
 1761              		.loc 1 350 5 view .LVU759
 350:Core/Src/SEGGER_RTT.c ****   }
 1762              		.loc 1 350 16 is_stmt 0 view .LVU760
 1763 0108 5221     		movs	r1, #82
 1764 010a 6070     		strb	r0, [r4, #1]
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 1765              		.loc 1 349 42 is_stmt 1 view .LVU761
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccs0vIiH.s 			page 58


 1766              	.LVL175:
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 1767              		.loc 1 349 17 view .LVU762
 350:Core/Src/SEGGER_RTT.c ****   }
 1768              		.loc 1 350 5 view .LVU763
 350:Core/Src/SEGGER_RTT.c ****   }
 1769              		.loc 1 350 16 is_stmt 0 view .LVU764
 1770 010c 5422     		movs	r2, #84
 1771 010e A770     		strb	r7, [r4, #2]
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 1772              		.loc 1 349 42 is_stmt 1 view .LVU765
 1773              	.LVL176:
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 1774              		.loc 1 349 17 view .LVU766
 350:Core/Src/SEGGER_RTT.c ****   }
 1775              		.loc 1 350 5 view .LVU767
 350:Core/Src/SEGGER_RTT.c ****   }
 1776              		.loc 1 350 16 is_stmt 0 view .LVU768
 1777 0110 E770     		strb	r7, [r4, #3]
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 1778              		.loc 1 349 42 is_stmt 1 view .LVU769
 1779              	.LVL177:
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 1780              		.loc 1 349 17 view .LVU770
 350:Core/Src/SEGGER_RTT.c ****   }
 1781              		.loc 1 350 5 view .LVU771
 350:Core/Src/SEGGER_RTT.c ****   }
 1782              		.loc 1 350 16 is_stmt 0 view .LVU772
 1783 0112 2071     		strb	r0, [r4, #4]
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 1784              		.loc 1 349 42 is_stmt 1 view .LVU773
 1785              	.LVL178:
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 1786              		.loc 1 349 17 view .LVU774
 350:Core/Src/SEGGER_RTT.c ****   }
 1787              		.loc 1 350 5 view .LVU775
 350:Core/Src/SEGGER_RTT.c ****   }
 1788              		.loc 1 350 16 is_stmt 0 view .LVU776
 1789 0114 2020     		movs	r0, #32
 1790 0116 6171     		strb	r1, [r4, #5]
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 1791              		.loc 1 349 42 is_stmt 1 view .LVU777
 1792              	.LVL179:
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 1793              		.loc 1 349 17 view .LVU778
 350:Core/Src/SEGGER_RTT.c ****   }
 1794              		.loc 1 350 5 view .LVU779
 350:Core/Src/SEGGER_RTT.c ****   }
 1795              		.loc 1 350 16 is_stmt 0 view .LVU780
 1796 0118 A071     		strb	r0, [r4, #6]
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 1797              		.loc 1 349 42 is_stmt 1 view .LVU781
 1798              	.LVL180:
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 1799              		.loc 1 349 17 view .LVU782
 350:Core/Src/SEGGER_RTT.c ****   }
 1800              		.loc 1 350 5 view .LVU783
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccs0vIiH.s 			page 59


 350:Core/Src/SEGGER_RTT.c ****   }
 1801              		.loc 1 350 16 is_stmt 0 view .LVU784
 1802 011a E171     		strb	r1, [r4, #7]
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 1803              		.loc 1 349 42 is_stmt 1 view .LVU785
 1804              	.LVL181:
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 1805              		.loc 1 349 17 view .LVU786
 350:Core/Src/SEGGER_RTT.c ****   }
 1806              		.loc 1 350 5 view .LVU787
 350:Core/Src/SEGGER_RTT.c ****   }
 1807              		.loc 1 350 16 is_stmt 0 view .LVU788
 1808 011c 2272     		strb	r2, [r4, #8]
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 1809              		.loc 1 349 42 is_stmt 1 view .LVU789
 1810              	.LVL182:
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 1811              		.loc 1 349 17 view .LVU790
 350:Core/Src/SEGGER_RTT.c ****   }
 1812              		.loc 1 350 5 view .LVU791
 350:Core/Src/SEGGER_RTT.c ****   }
 1813              		.loc 1 350 16 is_stmt 0 view .LVU792
 1814 011e 6272     		strb	r2, [r4, #9]
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 1815              		.loc 1 349 42 is_stmt 1 view .LVU793
 1816              	.LVL183:
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 1817              		.loc 1 349 17 view .LVU794
 350:Core/Src/SEGGER_RTT.c ****   }
 1818              		.loc 1 350 5 view .LVU795
 350:Core/Src/SEGGER_RTT.c ****   }
 1819              		.loc 1 350 16 is_stmt 0 view .LVU796
 1820 0120 A672     		strb	r6, [r4, #10]
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 1821              		.loc 1 349 42 is_stmt 1 view .LVU797
 1822              	.LVL184:
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 1823              		.loc 1 349 17 view .LVU798
 350:Core/Src/SEGGER_RTT.c ****   }
 1824              		.loc 1 350 5 view .LVU799
 350:Core/Src/SEGGER_RTT.c ****   }
 1825              		.loc 1 350 16 is_stmt 0 view .LVU800
 1826 0122 E672     		strb	r6, [r4, #11]
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 1827              		.loc 1 349 42 is_stmt 1 view .LVU801
 1828              	.LVL185:
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 1829              		.loc 1 349 17 view .LVU802
 350:Core/Src/SEGGER_RTT.c ****   }
 1830              		.loc 1 350 5 view .LVU803
 350:Core/Src/SEGGER_RTT.c ****   }
 1831              		.loc 1 350 16 is_stmt 0 view .LVU804
 1832 0124 2673     		strb	r6, [r4, #12]
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 1833              		.loc 1 349 42 is_stmt 1 view .LVU805
 1834              	.LVL186:
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccs0vIiH.s 			page 60


 1835              		.loc 1 349 17 view .LVU806
 350:Core/Src/SEGGER_RTT.c ****   }
 1836              		.loc 1 350 5 view .LVU807
 350:Core/Src/SEGGER_RTT.c ****   }
 1837              		.loc 1 350 16 is_stmt 0 view .LVU808
 1838 0126 6673     		strb	r6, [r4, #13]
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 1839              		.loc 1 349 42 is_stmt 1 view .LVU809
 1840              	.LVL187:
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 1841              		.loc 1 349 17 view .LVU810
 350:Core/Src/SEGGER_RTT.c ****   }
 1842              		.loc 1 350 5 view .LVU811
 350:Core/Src/SEGGER_RTT.c ****   }
 1843              		.loc 1 350 16 is_stmt 0 view .LVU812
 1844 0128 A673     		strb	r6, [r4, #14]
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 1845              		.loc 1 349 42 is_stmt 1 view .LVU813
 1846              	.LVL188:
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 1847              		.loc 1 349 17 view .LVU814
 350:Core/Src/SEGGER_RTT.c ****   }
 1848              		.loc 1 350 5 view .LVU815
 350:Core/Src/SEGGER_RTT.c ****   }
 1849              		.loc 1 350 16 is_stmt 0 view .LVU816
 1850 012a E673     		strb	r6, [r4, #15]
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 1851              		.loc 1 349 42 is_stmt 1 view .LVU817
 1852              	.LVL189:
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 1853              		.loc 1 349 17 view .LVU818
 352:Core/Src/SEGGER_RTT.c **** }
 1854              		.loc 1 352 3 view .LVU819
 1855              		.syntax unified
 1856              	@ 352 "Core/Src/SEGGER_RTT.c" 1
 1857 012c BFF35F8F 		dmb
 1858              	
 1859              	@ 0 "" 2
 1860              		.thumb
 1861              		.syntax unified
 1862 0130 009B     		ldr	r3, [sp]
 352:Core/Src/SEGGER_RTT.c **** }
 1863              		.loc 1 352 13 view .LVU820
 353:Core/Src/SEGGER_RTT.c **** 
 1864              		.loc 1 353 1 is_stmt 0 view .LVU821
 1865 0132 75E7     		b	.L64
 1866              	.L83:
 1867              		.align	2
 1868              	.L82:
 1869 0134 00000000 		.word	.LANCHOR0
 1870 0138 00000000 		.word	.LC0
 1871 013c 00000000 		.word	.LANCHOR1
 1872 0140 00000000 		.word	.LANCHOR2
 1873              	.LBE87:
 1874              	.LBE88:
 1875              	.LBE89:
 1876              	.LBE90:
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccs0vIiH.s 			page 61


 1877              	.LBE91:
 1878              	.LBE93:
 1879              		.cfi_endproc
 1880              	.LFE8:
 1882              		.section	.text.SEGGER_RTT_WriteWithOverwriteNoLock,"ax",%progbits
 1883              		.align	1
 1884              		.p2align 2,,3
 1885              		.global	SEGGER_RTT_WriteWithOverwriteNoLock
 1886              		.syntax unified
 1887              		.thumb
 1888              		.thumb_func
 1890              	SEGGER_RTT_WriteWithOverwriteNoLock:
 1891              	.LVL190:
 1892              	.LFB9:
 809:Core/Src/SEGGER_RTT.c **** 
 810:Core/Src/SEGGER_RTT.c **** /*********************************************************************
 811:Core/Src/SEGGER_RTT.c **** *
 812:Core/Src/SEGGER_RTT.c **** *       SEGGER_RTT_WriteWithOverwriteNoLock
 813:Core/Src/SEGGER_RTT.c **** *
 814:Core/Src/SEGGER_RTT.c **** *  Function description
 815:Core/Src/SEGGER_RTT.c **** *    Stores a specified number of characters in SEGGER RTT
 816:Core/Src/SEGGER_RTT.c **** *    control block.
 817:Core/Src/SEGGER_RTT.c **** *    SEGGER_RTT_WriteWithOverwriteNoLock does not lock the application 
 818:Core/Src/SEGGER_RTT.c **** *    and overwrites data if the data does not fit into the buffer.
 819:Core/Src/SEGGER_RTT.c **** *
 820:Core/Src/SEGGER_RTT.c **** *  Parameters
 821:Core/Src/SEGGER_RTT.c **** *    BufferIndex  Index of "Up"-buffer to be used (e.g. 0 for "Terminal").
 822:Core/Src/SEGGER_RTT.c **** *    pBuffer      Pointer to character array. Does not need to point to a \0 terminated string.
 823:Core/Src/SEGGER_RTT.c **** *    NumBytes     Number of bytes to be stored in the SEGGER RTT control block.
 824:Core/Src/SEGGER_RTT.c **** *
 825:Core/Src/SEGGER_RTT.c **** *  Notes
 826:Core/Src/SEGGER_RTT.c **** *    (1) If there is not enough space in the "Up"-buffer, data is overwritten.
 827:Core/Src/SEGGER_RTT.c **** *    (2) For performance reasons this function does not call Init()
 828:Core/Src/SEGGER_RTT.c **** *        and may only be called after RTT has been initialized.
 829:Core/Src/SEGGER_RTT.c **** *        Either by calling SEGGER_RTT_Init() or calling another RTT API function first.
 830:Core/Src/SEGGER_RTT.c **** *    (3) Do not use SEGGER_RTT_WriteWithOverwriteNoLock if a J-Link 
 831:Core/Src/SEGGER_RTT.c **** *        connection reads RTT data.
 832:Core/Src/SEGGER_RTT.c **** */
 833:Core/Src/SEGGER_RTT.c **** void SEGGER_RTT_WriteWithOverwriteNoLock(unsigned BufferIndex, const void* pBuffer, unsigned NumByt
 1893              		.loc 1 833 104 is_stmt 1 view -0
 1894              		.cfi_startproc
 1895              		@ args = 0, pretend = 0, frame = 0
 1896              		@ frame_needed = 0, uses_anonymous_args = 0
 834:Core/Src/SEGGER_RTT.c ****   const char*           pData;
 1897              		.loc 1 834 3 view .LVU823
 835:Core/Src/SEGGER_RTT.c ****   SEGGER_RTT_BUFFER_UP* pRing;
 1898              		.loc 1 835 3 view .LVU824
 836:Core/Src/SEGGER_RTT.c ****   unsigned              Avail;
 1899              		.loc 1 836 3 view .LVU825
 837:Core/Src/SEGGER_RTT.c ****   volatile char*        pDst;
 1900              		.loc 1 837 3 view .LVU826
 838:Core/Src/SEGGER_RTT.c ****   //
 839:Core/Src/SEGGER_RTT.c ****   // Get "to-host" ring buffer and copy some elements into local variables.
 840:Core/Src/SEGGER_RTT.c ****   //
 841:Core/Src/SEGGER_RTT.c ****   pData = (const char *)pBuffer;
 1901              		.loc 1 841 3 view .LVU827
 833:Core/Src/SEGGER_RTT.c ****   const char*           pData;
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccs0vIiH.s 			page 62


 1902              		.loc 1 833 104 is_stmt 0 view .LVU828
 1903 0000 2DE9F84F 		push	{r3, r4, r5, r6, r7, r8, r9, r10, fp, lr}
 1904              		.cfi_def_cfa_offset 40
 1905              		.cfi_offset 3, -40
 1906              		.cfi_offset 4, -36
 1907              		.cfi_offset 5, -32
 1908              		.cfi_offset 6, -28
 1909              		.cfi_offset 7, -24
 1910              		.cfi_offset 8, -20
 1911              		.cfi_offset 9, -16
 1912              		.cfi_offset 10, -12
 1913              		.cfi_offset 11, -8
 1914              		.cfi_offset 14, -4
 842:Core/Src/SEGGER_RTT.c ****   pRing = (SEGGER_RTT_BUFFER_UP*)((char*)&_SEGGER_RTT.aUp[BufferIndex] + SEGGER_RTT_UNCACHED_OFF); 
 843:Core/Src/SEGGER_RTT.c ****   //
 844:Core/Src/SEGGER_RTT.c ****   // Check if we will overwrite data and need to adjust the RdOff.
 845:Core/Src/SEGGER_RTT.c ****   //
 846:Core/Src/SEGGER_RTT.c ****   if (pRing->WrOff == pRing->RdOff) {
 1915              		.loc 1 846 12 view .LVU829
 1916 0004 DFF8D0B0 		ldr	fp, .L97
 1917 0008 00EB4003 		add	r3, r0, r0, lsl #1
 1918 000c 0BEBC303 		add	r3, fp, r3, lsl #3
 833:Core/Src/SEGGER_RTT.c ****   const char*           pData;
 1919              		.loc 1 833 104 view .LVU830
 1920 0010 0746     		mov	r7, r0
 1921 0012 1546     		mov	r5, r2
 1922              		.loc 1 846 12 view .LVU831
 1923 0014 4FEA4008 		lsl	r8, r0, #1
 1924              		.loc 1 846 28 view .LVU832
 1925 0018 9A6A     		ldr	r2, [r3, #40]
 1926              	.LVL191:
 1927              		.loc 1 846 12 view .LVU833
 1928 001a 586A     		ldr	r0, [r3, #36]
 1929              	.LVL192:
 1930              		.loc 1 846 6 view .LVU834
 1931 001c 9042     		cmp	r0, r2
 833:Core/Src/SEGGER_RTT.c ****   const char*           pData;
 1932              		.loc 1 833 104 view .LVU835
 1933 001e 0E46     		mov	r6, r1
 1934              	.LVL193:
 842:Core/Src/SEGGER_RTT.c ****   pRing = (SEGGER_RTT_BUFFER_UP*)((char*)&_SEGGER_RTT.aUp[BufferIndex] + SEGGER_RTT_UNCACHED_OFF); 
 1935              		.loc 1 842 3 is_stmt 1 view .LVU836
 1936              		.loc 1 846 3 view .LVU837
 1937              		.loc 1 846 6 is_stmt 0 view .LVU838
 1938 0020 56D0     		beq	.L96
 847:Core/Src/SEGGER_RTT.c ****     Avail = pRing->SizeOfBuffer - 1u;
 848:Core/Src/SEGGER_RTT.c ****   } else if ( pRing->WrOff < pRing->RdOff) {
 1939              		.loc 1 848 10 is_stmt 1 view .LVU839
 1940              		.loc 1 848 35 is_stmt 0 view .LVU840
 1941 0022 9A6A     		ldr	r2, [r3, #40]
 1942              		.loc 1 848 13 view .LVU841
 1943 0024 9042     		cmp	r0, r2
 849:Core/Src/SEGGER_RTT.c ****     Avail = pRing->RdOff - pRing->WrOff - 1u;
 1944              		.loc 1 849 5 is_stmt 1 view .LVU842
 850:Core/Src/SEGGER_RTT.c ****   } else {
 851:Core/Src/SEGGER_RTT.c ****     Avail = pRing->RdOff - pRing->WrOff - 1u + pRing->SizeOfBuffer;
 1945              		.loc 1 851 18 is_stmt 0 view .LVU843
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccs0vIiH.s 			page 63


 1946 0026 25BF     		ittet	cs
 1947 0028 9A6A     		ldrcs	r2, [r3, #40]
 1948              		.loc 1 851 11 view .LVU844
 1949 002a 1B6A     		ldrcs	r3, [r3, #32]
 849:Core/Src/SEGGER_RTT.c ****     Avail = pRing->RdOff - pRing->WrOff - 1u;
 1950              		.loc 1 849 18 view .LVU845
 1951 002c 9B6A     		ldrcc	r3, [r3, #40]
 1952              		.loc 1 851 5 is_stmt 1 view .LVU846
 1953              		.loc 1 851 11 is_stmt 0 view .LVU847
 1954 002e 9B18     		addcs	r3, r3, r2
 1955 0030 013B     		subs	r3, r3, #1
 1956 0032 1B1A     		subs	r3, r3, r0
 1957              	.LVL194:
 1958              	.L86:
 852:Core/Src/SEGGER_RTT.c ****   }
 853:Core/Src/SEGGER_RTT.c ****   if (NumBytes > Avail) {
 1959              		.loc 1 853 3 is_stmt 1 view .LVU848
 1960              		.loc 1 853 6 is_stmt 0 view .LVU849
 1961 0034 AB42     		cmp	r3, r5
 1962 0036 11D2     		bcs	.L88
 854:Core/Src/SEGGER_RTT.c ****     pRing->RdOff += (NumBytes - Avail);
 1963              		.loc 1 854 5 is_stmt 1 view .LVU850
 1964              		.loc 1 854 18 is_stmt 0 view .LVU851
 1965 0038 08EB0702 		add	r2, r8, r7
 1966 003c 0BEBC202 		add	r2, fp, r2, lsl #3
 1967 0040 916A     		ldr	r1, [r2, #40]
 1968              	.LVL195:
 1969              		.loc 1 854 18 view .LVU852
 1970 0042 2944     		add	r1, r1, r5
 1971 0044 CB1A     		subs	r3, r1, r3
 1972              	.LVL196:
 1973              		.loc 1 854 18 view .LVU853
 1974 0046 9362     		str	r3, [r2, #40]
 855:Core/Src/SEGGER_RTT.c ****     while (pRing->RdOff >= pRing->SizeOfBuffer) {
 1975              		.loc 1 855 5 is_stmt 1 view .LVU854
 1976              		.loc 1 855 25 view .LVU855
 1977              		.loc 1 855 17 is_stmt 0 view .LVU856
 1978 0048 936A     		ldr	r3, [r2, #40]
 1979              		.loc 1 855 33 view .LVU857
 1980 004a 116A     		ldr	r1, [r2, #32]
 1981              		.loc 1 855 25 view .LVU858
 1982 004c 8B42     		cmp	r3, r1
 1983 004e 05D3     		bcc	.L88
 1984              	.L89:
 856:Core/Src/SEGGER_RTT.c ****       pRing->RdOff -= pRing->SizeOfBuffer;
 1985              		.loc 1 856 7 is_stmt 1 view .LVU859
 1986              		.loc 1 856 20 is_stmt 0 view .LVU860
 1987 0050 936A     		ldr	r3, [r2, #40]
 1988 0052 5B1A     		subs	r3, r3, r1
 1989 0054 9362     		str	r3, [r2, #40]
 855:Core/Src/SEGGER_RTT.c ****     while (pRing->RdOff >= pRing->SizeOfBuffer) {
 1990              		.loc 1 855 25 is_stmt 1 view .LVU861
 855:Core/Src/SEGGER_RTT.c ****     while (pRing->RdOff >= pRing->SizeOfBuffer) {
 1991              		.loc 1 855 17 is_stmt 0 view .LVU862
 1992 0056 936A     		ldr	r3, [r2, #40]
 855:Core/Src/SEGGER_RTT.c ****     while (pRing->RdOff >= pRing->SizeOfBuffer) {
 1993              		.loc 1 855 25 view .LVU863
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccs0vIiH.s 			page 64


 1994 0058 8B42     		cmp	r3, r1
 1995 005a F9D2     		bcs	.L89
 1996              	.L88:
 857:Core/Src/SEGGER_RTT.c ****     }
 858:Core/Src/SEGGER_RTT.c ****   }
 859:Core/Src/SEGGER_RTT.c ****   //
 860:Core/Src/SEGGER_RTT.c ****   // Write all data, no need to check the RdOff, but possibly handle multiple wrap-arounds
 861:Core/Src/SEGGER_RTT.c ****   //
 862:Core/Src/SEGGER_RTT.c ****   Avail = pRing->SizeOfBuffer - pRing->WrOff;
 1997              		.loc 1 862 3 is_stmt 1 view .LVU864
 1998              		.loc 1 862 16 is_stmt 0 view .LVU865
 1999 005c 08EB0703 		add	r3, r8, r7
 2000 0060 0BEBC303 		add	r3, fp, r3, lsl #3
 2001 0064 07F1010A 		add	r10, r7, #1
 2002              		.loc 1 862 9 view .LVU866
 2003 0068 1C6A     		ldr	r4, [r3, #32]
 863:Core/Src/SEGGER_RTT.c ****   do {
 864:Core/Src/SEGGER_RTT.c ****     if (Avail > NumBytes) {
 865:Core/Src/SEGGER_RTT.c ****       //
 866:Core/Src/SEGGER_RTT.c ****       // Last round
 867:Core/Src/SEGGER_RTT.c ****       //
 868:Core/Src/SEGGER_RTT.c ****       pDst = (pRing->pBuffer + pRing->WrOff) + SEGGER_RTT_UNCACHED_OFF;
 869:Core/Src/SEGGER_RTT.c **** #if SEGGER_RTT_MEMCPY_USE_BYTELOOP
 870:Core/Src/SEGGER_RTT.c ****       Avail = NumBytes;
 871:Core/Src/SEGGER_RTT.c ****       while (NumBytes--) {
 872:Core/Src/SEGGER_RTT.c ****         *pDst++ = *pData++;
 873:Core/Src/SEGGER_RTT.c ****       };
 874:Core/Src/SEGGER_RTT.c ****       RTT__DMB();                     // Force data write to be complete before writing the <WrOff>
 875:Core/Src/SEGGER_RTT.c ****       pRing->WrOff += Avail;
 876:Core/Src/SEGGER_RTT.c **** #else
 877:Core/Src/SEGGER_RTT.c ****       SEGGER_RTT_MEMCPY((void*)pDst, pData, NumBytes);
 878:Core/Src/SEGGER_RTT.c ****       RTT__DMB();                     // Force data write to be complete before writing the <WrOff>
 879:Core/Src/SEGGER_RTT.c ****       pRing->WrOff += NumBytes;
 880:Core/Src/SEGGER_RTT.c **** #endif
 881:Core/Src/SEGGER_RTT.c ****       break;
 882:Core/Src/SEGGER_RTT.c ****     } else {
 883:Core/Src/SEGGER_RTT.c ****       //
 884:Core/Src/SEGGER_RTT.c ****       //  Wrap-around necessary, write until wrap-around and reset WrOff
 885:Core/Src/SEGGER_RTT.c ****       //
 886:Core/Src/SEGGER_RTT.c ****       pDst = (pRing->pBuffer + pRing->WrOff) + SEGGER_RTT_UNCACHED_OFF;
 2004              		.loc 1 886 20 view .LVU867
 2005 006a 0AEB4A09 		add	r9, r10, r10, lsl #1
 862:Core/Src/SEGGER_RTT.c ****   do {
 2006              		.loc 1 862 9 view .LVU868
 2007 006e 241A     		subs	r4, r4, r0
 2008              	.LVL197:
 2009              		.loc 1 886 20 view .LVU869
 2010 0070 4FEAC909 		lsl	r9, r9, #3
 2011 0074 10E0     		b	.L92
 2012              	.LVL198:
 2013              	.L90:
 2014              		.loc 1 886 12 view .LVU870
 2015 0076 5B68     		ldr	r3, [r3, #4]
 887:Core/Src/SEGGER_RTT.c **** #if SEGGER_RTT_MEMCPY_USE_BYTELOOP
 888:Core/Src/SEGGER_RTT.c ****       NumBytes -= Avail;
 889:Core/Src/SEGGER_RTT.c ****       while (Avail--) {
 890:Core/Src/SEGGER_RTT.c ****         *pDst++ = *pData++;
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccs0vIiH.s 			page 65


 891:Core/Src/SEGGER_RTT.c ****       };
 892:Core/Src/SEGGER_RTT.c ****       RTT__DMB();                     // Force data write to be complete before writing the <WrOff>
 893:Core/Src/SEGGER_RTT.c ****       pRing->WrOff = 0;
 894:Core/Src/SEGGER_RTT.c **** #else
 895:Core/Src/SEGGER_RTT.c ****       SEGGER_RTT_MEMCPY((void*)pDst, pData, Avail);
 2016              		.loc 1 895 7 view .LVU871
 2017 0078 1844     		add	r0, r0, r3
 2018              	.LVL199:
 2019              		.loc 1 895 7 view .LVU872
 2020 007a FFF7FEFF 		bl	memcpy
 2021              	.LVL200:
 896:Core/Src/SEGGER_RTT.c ****       pData += Avail;
 2022              		.loc 1 896 7 is_stmt 1 view .LVU873
 2023              		.loc 1 896 13 is_stmt 0 view .LVU874
 2024 007e 2644     		add	r6, r6, r4
 2025              	.LVL201:
 897:Core/Src/SEGGER_RTT.c ****       RTT__DMB();                     // Force data write to be complete before writing the <WrOff>
 2026              		.loc 1 897 7 is_stmt 1 view .LVU875
 2027              		.syntax unified
 2028              	@ 897 "Core/Src/SEGGER_RTT.c" 1
 2029 0080 BFF35F8F 		dmb
 2030              	
 2031              	@ 0 "" 2
 2032              		.loc 1 897 17 view .LVU876
 898:Core/Src/SEGGER_RTT.c ****       pRing->WrOff = 0;
 2033              		.loc 1 898 7 view .LVU877
 2034              		.loc 1 898 20 is_stmt 0 view .LVU878
 2035              		.thumb
 2036              		.syntax unified
 2037 0084 08EB0703 		add	r3, r8, r7
 2038 0088 0BEBC303 		add	r3, fp, r3, lsl #3
 2039 008c 0020     		movs	r0, #0
 899:Core/Src/SEGGER_RTT.c ****       NumBytes -= Avail;
 900:Core/Src/SEGGER_RTT.c **** #endif
 901:Core/Src/SEGGER_RTT.c ****       Avail = (pRing->SizeOfBuffer - 1);
 2040              		.loc 1 901 13 view .LVU879
 2041 008e 1A6A     		ldr	r2, [r3, #32]
 898:Core/Src/SEGGER_RTT.c ****       pRing->WrOff = 0;
 2042              		.loc 1 898 20 view .LVU880
 2043 0090 5862     		str	r0, [r3, #36]
 899:Core/Src/SEGGER_RTT.c ****       NumBytes -= Avail;
 2044              		.loc 1 899 7 is_stmt 1 view .LVU881
 899:Core/Src/SEGGER_RTT.c ****       NumBytes -= Avail;
 2045              		.loc 1 899 16 is_stmt 0 view .LVU882
 2046 0092 2D1B     		subs	r5, r5, r4
 2047              	.LVL202:
 2048              		.loc 1 901 7 is_stmt 1 view .LVU883
 2049              		.loc 1 901 13 is_stmt 0 view .LVU884
 2050 0094 541E     		subs	r4, r2, #1
 2051              	.LVL203:
 902:Core/Src/SEGGER_RTT.c ****     }
 903:Core/Src/SEGGER_RTT.c ****   } while (NumBytes);
 2052              		.loc 1 903 12 is_stmt 1 view .LVU885
 2053 0096 CDB1     		cbz	r5, .L84
 2054              	.L92:
 863:Core/Src/SEGGER_RTT.c ****     if (Avail > NumBytes) {
 2055              		.loc 1 863 3 view .LVU886
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccs0vIiH.s 			page 66


 864:Core/Src/SEGGER_RTT.c ****       //
 2056              		.loc 1 864 5 view .LVU887
 886:Core/Src/SEGGER_RTT.c **** #if SEGGER_RTT_MEMCPY_USE_BYTELOOP
 2057              		.loc 1 886 7 view .LVU888
 2058              	.LVL204:
 895:Core/Src/SEGGER_RTT.c ****       pData += Avail;
 2059              		.loc 1 895 7 view .LVU889
 864:Core/Src/SEGGER_RTT.c ****       //
 2060              		.loc 1 864 8 is_stmt 0 view .LVU890
 2061 0098 A542     		cmp	r5, r4
 886:Core/Src/SEGGER_RTT.c **** #if SEGGER_RTT_MEMCPY_USE_BYTELOOP
 2062              		.loc 1 886 20 view .LVU891
 2063 009a 0BEB0903 		add	r3, fp, r9
 895:Core/Src/SEGGER_RTT.c ****       pData += Avail;
 2064              		.loc 1 895 7 view .LVU892
 2065 009e 3146     		mov	r1, r6
 2066 00a0 2246     		mov	r2, r4
 864:Core/Src/SEGGER_RTT.c ****       //
 2067              		.loc 1 864 8 view .LVU893
 2068 00a2 E8D2     		bcs	.L90
 2069              	.LVL205:
 868:Core/Src/SEGGER_RTT.c **** #if SEGGER_RTT_MEMCPY_USE_BYTELOOP
 2070              		.loc 1 868 7 is_stmt 1 view .LVU894
 877:Core/Src/SEGGER_RTT.c ****       RTT__DMB();                     // Force data write to be complete before writing the <WrOff>
 2071              		.loc 1 877 7 view .LVU895
 868:Core/Src/SEGGER_RTT.c **** #if SEGGER_RTT_MEMCPY_USE_BYTELOOP
 2072              		.loc 1 868 20 is_stmt 0 view .LVU896
 2073 00a4 0AEB4A0A 		add	r10, r10, r10, lsl #1
 2074 00a8 0BEBCA0A 		add	r10, fp, r10, lsl #3
 877:Core/Src/SEGGER_RTT.c ****       RTT__DMB();                     // Force data write to be complete before writing the <WrOff>
 2075              		.loc 1 877 7 view .LVU897
 2076 00ac 2A46     		mov	r2, r5
 2077              	.LVL206:
 868:Core/Src/SEGGER_RTT.c **** #if SEGGER_RTT_MEMCPY_USE_BYTELOOP
 2078              		.loc 1 868 12 view .LVU898
 2079 00ae DAF80430 		ldr	r3, [r10, #4]
 877:Core/Src/SEGGER_RTT.c ****       RTT__DMB();                     // Force data write to be complete before writing the <WrOff>
 2080              		.loc 1 877 7 view .LVU899
 2081 00b2 1844     		add	r0, r0, r3
 2082              	.LVL207:
 877:Core/Src/SEGGER_RTT.c ****       RTT__DMB();                     // Force data write to be complete before writing the <WrOff>
 2083              		.loc 1 877 7 view .LVU900
 2084 00b4 FFF7FEFF 		bl	memcpy
 2085              	.LVL208:
 878:Core/Src/SEGGER_RTT.c ****       pRing->WrOff += NumBytes;
 2086              		.loc 1 878 7 is_stmt 1 view .LVU901
 2087              		.syntax unified
 2088              	@ 878 "Core/Src/SEGGER_RTT.c" 1
 2089 00b8 BFF35F8F 		dmb
 2090              	
 2091              	@ 0 "" 2
 878:Core/Src/SEGGER_RTT.c ****       pRing->WrOff += NumBytes;
 2092              		.loc 1 878 17 view .LVU902
 879:Core/Src/SEGGER_RTT.c **** #endif
 2093              		.loc 1 879 7 view .LVU903
 879:Core/Src/SEGGER_RTT.c **** #endif
 2094              		.loc 1 879 20 is_stmt 0 view .LVU904
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccs0vIiH.s 			page 67


 2095              		.thumb
 2096              		.syntax unified
 2097 00bc B844     		add	r8, r8, r7
 2098 00be 0BEBC80B 		add	fp, fp, r8, lsl #3
 2099 00c2 DBF82430 		ldr	r3, [fp, #36]
 2100 00c6 2B44     		add	r3, r3, r5
 2101 00c8 CBF82430 		str	r3, [fp, #36]
 881:Core/Src/SEGGER_RTT.c ****     } else {
 2102              		.loc 1 881 7 is_stmt 1 view .LVU905
 2103              	.L84:
 904:Core/Src/SEGGER_RTT.c **** }
 2104              		.loc 1 904 1 is_stmt 0 view .LVU906
 2105 00cc BDE8F88F 		pop	{r3, r4, r5, r6, r7, r8, r9, r10, fp, pc}
 2106              	.LVL209:
 2107              	.L96:
 847:Core/Src/SEGGER_RTT.c ****   } else if ( pRing->WrOff < pRing->RdOff) {
 2108              		.loc 1 847 5 is_stmt 1 view .LVU907
 847:Core/Src/SEGGER_RTT.c ****   } else if ( pRing->WrOff < pRing->RdOff) {
 2109              		.loc 1 847 11 is_stmt 0 view .LVU908
 2110 00d0 1B6A     		ldr	r3, [r3, #32]
 2111 00d2 013B     		subs	r3, r3, #1
 2112              	.LVL210:
 847:Core/Src/SEGGER_RTT.c ****   } else if ( pRing->WrOff < pRing->RdOff) {
 2113              		.loc 1 847 11 view .LVU909
 2114 00d4 AEE7     		b	.L86
 2115              	.L98:
 2116 00d6 00BF     		.align	2
 2117              	.L97:
 2118 00d8 00000000 		.word	.LANCHOR0
 2119              		.cfi_endproc
 2120              	.LFE9:
 2122              		.section	.text.SEGGER_RTT_WriteDownBufferNoLock,"ax",%progbits
 2123              		.align	1
 2124              		.p2align 2,,3
 2125              		.global	SEGGER_RTT_WriteDownBufferNoLock
 2126              		.syntax unified
 2127              		.thumb
 2128              		.thumb_func
 2130              	SEGGER_RTT_WriteDownBufferNoLock:
 2131              	.LVL211:
 2132              	.LFB10:
 905:Core/Src/SEGGER_RTT.c **** 
 906:Core/Src/SEGGER_RTT.c **** /*********************************************************************
 907:Core/Src/SEGGER_RTT.c **** *
 908:Core/Src/SEGGER_RTT.c **** *       SEGGER_RTT_WriteSkipNoLock
 909:Core/Src/SEGGER_RTT.c **** *
 910:Core/Src/SEGGER_RTT.c **** *  Function description
 911:Core/Src/SEGGER_RTT.c **** *    Stores a specified number of characters in SEGGER RTT
 912:Core/Src/SEGGER_RTT.c **** *    control block which is then read by the host.
 913:Core/Src/SEGGER_RTT.c **** *    SEGGER_RTT_WriteSkipNoLock does not lock the application and
 914:Core/Src/SEGGER_RTT.c **** *    skips all data, if the data does not fit into the buffer.
 915:Core/Src/SEGGER_RTT.c **** *
 916:Core/Src/SEGGER_RTT.c **** *  Parameters
 917:Core/Src/SEGGER_RTT.c **** *    BufferIndex  Index of "Up"-buffer to be used (e.g. 0 for "Terminal").
 918:Core/Src/SEGGER_RTT.c **** *    pBuffer      Pointer to character array. Does not need to point to a \0 terminated string.
 919:Core/Src/SEGGER_RTT.c **** *    NumBytes     Number of bytes to be stored in the SEGGER RTT control block.
 920:Core/Src/SEGGER_RTT.c **** *                 MUST be > 0!!!
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccs0vIiH.s 			page 68


 921:Core/Src/SEGGER_RTT.c **** *                 This is done for performance reasons, so no initial check has do be done.
 922:Core/Src/SEGGER_RTT.c **** *
 923:Core/Src/SEGGER_RTT.c **** *  Return value
 924:Core/Src/SEGGER_RTT.c **** *    1: Data has been copied
 925:Core/Src/SEGGER_RTT.c **** *    0: No space, data has not been copied
 926:Core/Src/SEGGER_RTT.c **** *
 927:Core/Src/SEGGER_RTT.c **** *  Notes
 928:Core/Src/SEGGER_RTT.c **** *    (1) If there is not enough space in the "Up"-buffer, all data is dropped.
 929:Core/Src/SEGGER_RTT.c **** *    (2) For performance reasons this function does not call Init()
 930:Core/Src/SEGGER_RTT.c **** *        and may only be called after RTT has been initialized.
 931:Core/Src/SEGGER_RTT.c **** *        Either by calling SEGGER_RTT_Init() or calling another RTT API function first.
 932:Core/Src/SEGGER_RTT.c **** */
 933:Core/Src/SEGGER_RTT.c **** #if (RTT_USE_ASM == 0)
 934:Core/Src/SEGGER_RTT.c **** unsigned SEGGER_RTT_WriteSkipNoLock(unsigned BufferIndex, const void* pBuffer, unsigned NumBytes) {
 935:Core/Src/SEGGER_RTT.c ****   const char*           pData;
 936:Core/Src/SEGGER_RTT.c ****   SEGGER_RTT_BUFFER_UP* pRing;
 937:Core/Src/SEGGER_RTT.c ****   unsigned              Avail;
 938:Core/Src/SEGGER_RTT.c ****   unsigned              RdOff;
 939:Core/Src/SEGGER_RTT.c ****   unsigned              WrOff;
 940:Core/Src/SEGGER_RTT.c ****   unsigned              Rem;
 941:Core/Src/SEGGER_RTT.c ****   volatile char*        pDst;
 942:Core/Src/SEGGER_RTT.c ****   //
 943:Core/Src/SEGGER_RTT.c ****   // Cases:
 944:Core/Src/SEGGER_RTT.c ****   //   1) RdOff <= WrOff => Space until wrap-around is sufficient
 945:Core/Src/SEGGER_RTT.c ****   //   2) RdOff <= WrOff => Space after wrap-around needed (copy in 2 chunks)
 946:Core/Src/SEGGER_RTT.c ****   //   3) RdOff <  WrOff => No space in buf
 947:Core/Src/SEGGER_RTT.c ****   //   4) RdOff >  WrOff => Space is sufficient
 948:Core/Src/SEGGER_RTT.c ****   //   5) RdOff >  WrOff => No space in buf
 949:Core/Src/SEGGER_RTT.c ****   //
 950:Core/Src/SEGGER_RTT.c ****   // 1) is the most common case for large buffers and assuming that J-Link reads the data fast enou
 951:Core/Src/SEGGER_RTT.c ****   //
 952:Core/Src/SEGGER_RTT.c ****   pData = (const char *)pBuffer;
 953:Core/Src/SEGGER_RTT.c ****   pRing = (SEGGER_RTT_BUFFER_UP*)((char*)&_SEGGER_RTT.aUp[BufferIndex] + SEGGER_RTT_UNCACHED_OFF); 
 954:Core/Src/SEGGER_RTT.c ****   RdOff = pRing->RdOff;
 955:Core/Src/SEGGER_RTT.c ****   WrOff = pRing->WrOff;
 956:Core/Src/SEGGER_RTT.c ****   if (RdOff <= WrOff) {                                 // Case 1), 2) or 3)
 957:Core/Src/SEGGER_RTT.c ****     Avail = pRing->SizeOfBuffer - WrOff - 1u;           // Space until wrap-around (assume 1 byte n
 958:Core/Src/SEGGER_RTT.c ****     if (Avail >= NumBytes) {                            // Case 1)?
 959:Core/Src/SEGGER_RTT.c **** CopyStraight:
 960:Core/Src/SEGGER_RTT.c ****       pDst = (pRing->pBuffer + WrOff) + SEGGER_RTT_UNCACHED_OFF;
 961:Core/Src/SEGGER_RTT.c ****       memcpy((void*)pDst, pData, NumBytes);
 962:Core/Src/SEGGER_RTT.c ****       RTT__DMB();                     // Force data write to be complete before writing the <WrOff>
 963:Core/Src/SEGGER_RTT.c ****       pRing->WrOff = WrOff + NumBytes;
 964:Core/Src/SEGGER_RTT.c ****       return 1;
 965:Core/Src/SEGGER_RTT.c ****     }
 966:Core/Src/SEGGER_RTT.c ****     Avail += RdOff;                                     // Space incl. wrap-around
 967:Core/Src/SEGGER_RTT.c ****     if (Avail >= NumBytes) {                            // Case 2? => If not, we have case 3) (does
 968:Core/Src/SEGGER_RTT.c ****       Rem = pRing->SizeOfBuffer - WrOff;                // Space until end of buffer
 969:Core/Src/SEGGER_RTT.c ****       pDst = (pRing->pBuffer + WrOff) + SEGGER_RTT_UNCACHED_OFF;
 970:Core/Src/SEGGER_RTT.c ****       memcpy((void*)pDst, pData, Rem);                  // Copy 1st chunk
 971:Core/Src/SEGGER_RTT.c ****       NumBytes -= Rem;
 972:Core/Src/SEGGER_RTT.c ****       //
 973:Core/Src/SEGGER_RTT.c ****       // Special case: First check that assumed RdOff == 0 calculated that last element before wrap
 974:Core/Src/SEGGER_RTT.c ****       // But 2nd check (considering space until wrap-around and until RdOff) revealed that RdOff is
 975:Core/Src/SEGGER_RTT.c ****       // In this case, we may use a copy straight until buffer end anyway without needing to copy 2
 976:Core/Src/SEGGER_RTT.c ****       // Therefore, check if 2nd memcpy is necessary at all
 977:Core/Src/SEGGER_RTT.c ****       //
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccs0vIiH.s 			page 69


 978:Core/Src/SEGGER_RTT.c ****       if (NumBytes) {
 979:Core/Src/SEGGER_RTT.c ****         pDst = pRing->pBuffer + SEGGER_RTT_UNCACHED_OFF;
 980:Core/Src/SEGGER_RTT.c ****         memcpy((void*)pDst, pData + Rem, NumBytes);
 981:Core/Src/SEGGER_RTT.c ****       }
 982:Core/Src/SEGGER_RTT.c ****       RTT__DMB();                     // Force data write to be complete before writing the <WrOff>
 983:Core/Src/SEGGER_RTT.c ****       pRing->WrOff = NumBytes;
 984:Core/Src/SEGGER_RTT.c ****       return 1;
 985:Core/Src/SEGGER_RTT.c ****     }
 986:Core/Src/SEGGER_RTT.c ****   } else {                                             // Potential case 4)
 987:Core/Src/SEGGER_RTT.c ****     Avail = RdOff - WrOff - 1u;
 988:Core/Src/SEGGER_RTT.c ****     if (Avail >= NumBytes) {                           // Case 4)? => If not, we have case 5) (does
 989:Core/Src/SEGGER_RTT.c ****       goto CopyStraight;
 990:Core/Src/SEGGER_RTT.c ****     }
 991:Core/Src/SEGGER_RTT.c ****   }
 992:Core/Src/SEGGER_RTT.c ****   return 0;     // No space in buffer
 993:Core/Src/SEGGER_RTT.c **** }
 994:Core/Src/SEGGER_RTT.c **** #endif
 995:Core/Src/SEGGER_RTT.c **** 
 996:Core/Src/SEGGER_RTT.c **** /*********************************************************************
 997:Core/Src/SEGGER_RTT.c **** *
 998:Core/Src/SEGGER_RTT.c **** *       SEGGER_RTT_WriteDownBufferNoLock
 999:Core/Src/SEGGER_RTT.c **** *
1000:Core/Src/SEGGER_RTT.c **** *  Function description
1001:Core/Src/SEGGER_RTT.c **** *    Stores a specified number of characters in SEGGER RTT
1002:Core/Src/SEGGER_RTT.c **** *    control block inside a <Down> buffer.
1003:Core/Src/SEGGER_RTT.c **** *    SEGGER_RTT_WriteDownBufferNoLock does not lock the application.
1004:Core/Src/SEGGER_RTT.c **** *    Used to do the same operation that J-Link does, to transfer 
1005:Core/Src/SEGGER_RTT.c **** *    RTT data from other channels, such as TCP/IP or UART.
1006:Core/Src/SEGGER_RTT.c **** *
1007:Core/Src/SEGGER_RTT.c **** *  Parameters
1008:Core/Src/SEGGER_RTT.c **** *    BufferIndex  Index of "Down"-buffer to be used.
1009:Core/Src/SEGGER_RTT.c **** *    pBuffer      Pointer to character array. Does not need to point to a \0 terminated string.
1010:Core/Src/SEGGER_RTT.c **** *    NumBytes     Number of bytes to be stored in the SEGGER RTT control block.
1011:Core/Src/SEGGER_RTT.c **** *
1012:Core/Src/SEGGER_RTT.c **** *  Return value
1013:Core/Src/SEGGER_RTT.c **** *    Number of bytes which have been stored in the "Down"-buffer.
1014:Core/Src/SEGGER_RTT.c **** *
1015:Core/Src/SEGGER_RTT.c **** *  Notes
1016:Core/Src/SEGGER_RTT.c **** *    (1) Data is stored according to buffer flags.
1017:Core/Src/SEGGER_RTT.c **** *    (2) For performance reasons this function does not call Init()
1018:Core/Src/SEGGER_RTT.c **** *        and may only be called after RTT has been initialized.
1019:Core/Src/SEGGER_RTT.c **** *        Either by calling SEGGER_RTT_Init() or calling another RTT API function first.
1020:Core/Src/SEGGER_RTT.c **** *
1021:Core/Src/SEGGER_RTT.c **** *  Additional information
1022:Core/Src/SEGGER_RTT.c **** *    This function must not be called when J-Link might also do RTT.
1023:Core/Src/SEGGER_RTT.c **** */
1024:Core/Src/SEGGER_RTT.c **** unsigned SEGGER_RTT_WriteDownBufferNoLock(unsigned BufferIndex, const void* pBuffer, unsigned NumBy
 2133              		.loc 1 1024 105 is_stmt 1 view -0
 2134              		.cfi_startproc
 2135              		@ args = 0, pretend = 0, frame = 0
 2136              		@ frame_needed = 0, uses_anonymous_args = 0
1025:Core/Src/SEGGER_RTT.c ****   unsigned                Status;
 2137              		.loc 1 1025 3 view .LVU911
1026:Core/Src/SEGGER_RTT.c ****   unsigned                Avail;
 2138              		.loc 1 1026 3 view .LVU912
1027:Core/Src/SEGGER_RTT.c ****   const char*             pData;
 2139              		.loc 1 1027 3 view .LVU913
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccs0vIiH.s 			page 70


1028:Core/Src/SEGGER_RTT.c ****   SEGGER_RTT_BUFFER_UP*   pRing;
 2140              		.loc 1 1028 3 view .LVU914
1029:Core/Src/SEGGER_RTT.c ****   //
1030:Core/Src/SEGGER_RTT.c ****   // Get "to-target" ring buffer.
1031:Core/Src/SEGGER_RTT.c ****   // It is save to cast that to a "to-host" buffer. Up and Down buffer differ in volatility of offs
1032:Core/Src/SEGGER_RTT.c ****   //
1033:Core/Src/SEGGER_RTT.c ****   pData = (const char *)pBuffer;
 2141              		.loc 1 1033 3 view .LVU915
1024:Core/Src/SEGGER_RTT.c ****   unsigned                Status;
 2142              		.loc 1 1024 105 is_stmt 0 view .LVU916
 2143 0000 2DE9F047 		push	{r4, r5, r6, r7, r8, r9, r10, lr}
 2144              		.cfi_def_cfa_offset 32
 2145              		.cfi_offset 4, -32
 2146              		.cfi_offset 5, -28
 2147              		.cfi_offset 6, -24
 2148              		.cfi_offset 7, -20
 2149              		.cfi_offset 8, -16
 2150              		.cfi_offset 9, -12
 2151              		.cfi_offset 10, -8
 2152              		.cfi_offset 14, -4
1034:Core/Src/SEGGER_RTT.c ****   pRing = (SEGGER_RTT_BUFFER_UP*)((char*)&_SEGGER_RTT.aDown[BufferIndex] + SEGGER_RTT_UNCACHED_OFF)
 2153              		.loc 1 1034 9 view .LVU917
 2154 0004 514E     		ldr	r6, .L123
 2155 0006 00EB4000 		add	r0, r0, r0, lsl #1
 2156              	.LVL212:
 2157              		.loc 1 1034 9 view .LVU918
 2158 000a 06EBC006 		add	r6, r6, r0, lsl #3
 2159 000e 6036     		adds	r6, r6, #96
1035:Core/Src/SEGGER_RTT.c ****   //
1036:Core/Src/SEGGER_RTT.c ****   // How we output depends upon the mode...
1037:Core/Src/SEGGER_RTT.c ****   //
1038:Core/Src/SEGGER_RTT.c ****   switch (pRing->Flags) {
 2160              		.loc 1 1038 16 view .LVU919
 2161 0010 7769     		ldr	r7, [r6, #20]
 2162              		.loc 1 1038 3 view .LVU920
 2163 0012 012F     		cmp	r7, #1
1024:Core/Src/SEGGER_RTT.c ****   unsigned                Status;
 2164              		.loc 1 1024 105 view .LVU921
 2165 0014 8A46     		mov	r10, r1
 2166              	.LVL213:
1034:Core/Src/SEGGER_RTT.c ****   pRing = (SEGGER_RTT_BUFFER_UP*)((char*)&_SEGGER_RTT.aDown[BufferIndex] + SEGGER_RTT_UNCACHED_OFF)
 2167              		.loc 1 1034 3 is_stmt 1 view .LVU922
 2168              		.loc 1 1038 3 view .LVU923
1024:Core/Src/SEGGER_RTT.c ****   unsigned                Status;
 2169              		.loc 1 1024 105 is_stmt 0 view .LVU924
 2170 0016 9146     		mov	r9, r2
 2171              		.loc 1 1038 3 view .LVU925
 2172 0018 06D0     		beq	.L100
 2173 001a 022F     		cmp	r7, #2
 2174 001c 38D0     		beq	.L101
 2175 001e F7B1     		cbz	r7, .L120
 2176 0020 0027     		movs	r7, #0
 2177              	.LVL214:
1039:Core/Src/SEGGER_RTT.c ****   case SEGGER_RTT_MODE_NO_BLOCK_SKIP:
1040:Core/Src/SEGGER_RTT.c ****     //
1041:Core/Src/SEGGER_RTT.c ****     // If we are in skip mode and there is no space for the whole
1042:Core/Src/SEGGER_RTT.c ****     // of this output, don't bother.
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccs0vIiH.s 			page 71


1043:Core/Src/SEGGER_RTT.c ****     //
1044:Core/Src/SEGGER_RTT.c ****     Avail = _GetAvailWriteSpace(pRing);
1045:Core/Src/SEGGER_RTT.c ****     if (Avail < NumBytes) {
1046:Core/Src/SEGGER_RTT.c ****       Status = 0u;
1047:Core/Src/SEGGER_RTT.c ****     } else {
1048:Core/Src/SEGGER_RTT.c ****       Status = NumBytes;
1049:Core/Src/SEGGER_RTT.c ****       _WriteNoCheck(pRing, pData, NumBytes);
1050:Core/Src/SEGGER_RTT.c ****     }
1051:Core/Src/SEGGER_RTT.c ****     break;
1052:Core/Src/SEGGER_RTT.c ****   case SEGGER_RTT_MODE_NO_BLOCK_TRIM:
1053:Core/Src/SEGGER_RTT.c ****     //
1054:Core/Src/SEGGER_RTT.c ****     // If we are in trim mode, trim to what we can output without blocking.
1055:Core/Src/SEGGER_RTT.c ****     //
1056:Core/Src/SEGGER_RTT.c ****     Avail = _GetAvailWriteSpace(pRing);
1057:Core/Src/SEGGER_RTT.c ****     Status = Avail < NumBytes ? Avail : NumBytes;
1058:Core/Src/SEGGER_RTT.c ****     _WriteNoCheck(pRing, pData, Status);
1059:Core/Src/SEGGER_RTT.c ****     break;
1060:Core/Src/SEGGER_RTT.c ****   case SEGGER_RTT_MODE_BLOCK_IF_FIFO_FULL:
1061:Core/Src/SEGGER_RTT.c ****     //
1062:Core/Src/SEGGER_RTT.c ****     // If we are in blocking mode, output everything.
1063:Core/Src/SEGGER_RTT.c ****     //
1064:Core/Src/SEGGER_RTT.c ****     Status = _WriteBlocking(pRing, pData, NumBytes);
1065:Core/Src/SEGGER_RTT.c ****     break;
1066:Core/Src/SEGGER_RTT.c ****   default:
1067:Core/Src/SEGGER_RTT.c ****     Status = 0u;
1068:Core/Src/SEGGER_RTT.c ****     break;
1069:Core/Src/SEGGER_RTT.c ****   }
1070:Core/Src/SEGGER_RTT.c ****   //
1071:Core/Src/SEGGER_RTT.c ****   // Finish up.
1072:Core/Src/SEGGER_RTT.c ****   //
1073:Core/Src/SEGGER_RTT.c ****   return Status;
 2178              		.loc 1 1073 3 is_stmt 1 view .LVU926
 2179              	.L99:
1074:Core/Src/SEGGER_RTT.c **** }
 2180              		.loc 1 1074 1 is_stmt 0 view .LVU927
 2181 0022 3846     		mov	r0, r7
 2182 0024 BDE8F087 		pop	{r4, r5, r6, r7, r8, r9, r10, pc}
 2183              	.LVL215:
 2184              	.L100:
1056:Core/Src/SEGGER_RTT.c ****     Status = Avail < NumBytes ? Avail : NumBytes;
 2185              		.loc 1 1056 5 is_stmt 1 view .LVU928
 2186              	.LBB108:
 2187              	.LBI108:
 526:Core/Src/SEGGER_RTT.c ****   unsigned RdOff;
 2188              		.loc 1 526 17 view .LVU929
 2189              	.LBB109:
 527:Core/Src/SEGGER_RTT.c ****   unsigned WrOff;
 2190              		.loc 1 527 3 view .LVU930
 528:Core/Src/SEGGER_RTT.c ****   unsigned r;
 2191              		.loc 1 528 3 view .LVU931
 529:Core/Src/SEGGER_RTT.c ****   //
 2192              		.loc 1 529 3 view .LVU932
 534:Core/Src/SEGGER_RTT.c ****   WrOff = pRing->WrOff;
 2193              		.loc 1 534 3 view .LVU933
 534:Core/Src/SEGGER_RTT.c ****   WrOff = pRing->WrOff;
 2194              		.loc 1 534 9 is_stmt 0 view .LVU934
 2195 0028 3769     		ldr	r7, [r6, #16]
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccs0vIiH.s 			page 72


 2196              	.LVL216:
 535:Core/Src/SEGGER_RTT.c ****   if (RdOff <= WrOff) {
 2197              		.loc 1 535 3 is_stmt 1 view .LVU935
 535:Core/Src/SEGGER_RTT.c ****   if (RdOff <= WrOff) {
 2198              		.loc 1 535 9 is_stmt 0 view .LVU936
 2199 002a F468     		ldr	r4, [r6, #12]
 2200              	.LVL217:
 536:Core/Src/SEGGER_RTT.c ****     r = pRing->SizeOfBuffer - 1u - WrOff + RdOff;
 2201              		.loc 1 536 3 is_stmt 1 view .LVU937
 536:Core/Src/SEGGER_RTT.c ****     r = pRing->SizeOfBuffer - 1u - WrOff + RdOff;
 2202              		.loc 1 536 6 is_stmt 0 view .LVU938
 2203 002c A742     		cmp	r7, r4
 2204 002e 64D9     		bls	.L121
 539:Core/Src/SEGGER_RTT.c ****   }
 2205              		.loc 1 539 5 is_stmt 1 view .LVU939
 539:Core/Src/SEGGER_RTT.c ****   }
 2206              		.loc 1 539 7 is_stmt 0 view .LVU940
 2207 0030 013F     		subs	r7, r7, #1
 2208              	.LVL218:
 539:Core/Src/SEGGER_RTT.c ****   }
 2209              		.loc 1 539 7 view .LVU941
 2210              	.LBE109:
 2211              	.LBE108:
 2212              	.LBB112:
 2213              	.LBB113:
 537:Core/Src/SEGGER_RTT.c ****   } else {
 2214              		.loc 1 537 14 view .LVU942
 2215 0032 B568     		ldr	r5, [r6, #8]
 2216              	.LBE113:
 2217              	.LBE112:
 2218              	.LBB116:
 2219              	.LBB110:
 539:Core/Src/SEGGER_RTT.c ****   }
 2220              		.loc 1 539 7 view .LVU943
 2221 0034 3F1B     		subs	r7, r7, r4
 2222              	.LVL219:
 2223              	.L107:
 541:Core/Src/SEGGER_RTT.c **** }
 2224              		.loc 1 541 3 is_stmt 1 view .LVU944
 541:Core/Src/SEGGER_RTT.c **** }
 2225              		.loc 1 541 3 is_stmt 0 view .LVU945
 2226              	.LBE110:
 2227              	.LBE116:
1057:Core/Src/SEGGER_RTT.c ****     _WriteNoCheck(pRing, pData, Status);
 2228              		.loc 1 1057 5 is_stmt 1 view .LVU946
1057:Core/Src/SEGGER_RTT.c ****     _WriteNoCheck(pRing, pData, Status);
 2229              		.loc 1 1057 12 is_stmt 0 view .LVU947
 2230 0036 4F45     		cmp	r7, r9
 2231 0038 28BF     		it	cs
 2232 003a 4F46     		movcs	r7, r9
 2233              	.LVL220:
1058:Core/Src/SEGGER_RTT.c ****     break;
 2234              		.loc 1 1058 5 is_stmt 1 view .LVU948
 2235              	.LBB117:
 2236              	.LBI117:
 436:Core/Src/SEGGER_RTT.c ****   unsigned NumBytesAtOnce;
 2237              		.loc 1 436 13 view .LVU949
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccs0vIiH.s 			page 73


 2238              	.LBB118:
 437:Core/Src/SEGGER_RTT.c ****   unsigned WrOff;
 2239              		.loc 1 437 3 view .LVU950
 438:Core/Src/SEGGER_RTT.c ****   unsigned Rem;
 2240              		.loc 1 438 3 view .LVU951
 439:Core/Src/SEGGER_RTT.c ****   volatile char* pDst;
 2241              		.loc 1 439 3 view .LVU952
 440:Core/Src/SEGGER_RTT.c **** 
 2242              		.loc 1 440 3 view .LVU953
 442:Core/Src/SEGGER_RTT.c ****   Rem = pRing->SizeOfBuffer - WrOff;
 2243              		.loc 1 442 3 view .LVU954
 443:Core/Src/SEGGER_RTT.c ****   if (Rem > NumBytes) {
 2244              		.loc 1 443 3 view .LVU955
 443:Core/Src/SEGGER_RTT.c ****   if (Rem > NumBytes) {
 2245              		.loc 1 443 7 is_stmt 0 view .LVU956
 2246 003c A5EB0408 		sub	r8, r5, r4
 2247              	.LVL221:
 444:Core/Src/SEGGER_RTT.c ****     //
 2248              		.loc 1 444 3 is_stmt 1 view .LVU957
 444:Core/Src/SEGGER_RTT.c ****     //
 2249              		.loc 1 444 6 is_stmt 0 view .LVU958
 2250 0040 4745     		cmp	r7, r8
 448:Core/Src/SEGGER_RTT.c **** #if SEGGER_RTT_MEMCPY_USE_BYTELOOP
 2251              		.loc 1 448 10 view .LVU959
 2252 0042 7068     		ldr	r0, [r6, #4]
 444:Core/Src/SEGGER_RTT.c ****     //
 2253              		.loc 1 444 6 view .LVU960
 2254 0044 5ED2     		bcs	.L108
 448:Core/Src/SEGGER_RTT.c **** #if SEGGER_RTT_MEMCPY_USE_BYTELOOP
 2255              		.loc 1 448 5 is_stmt 1 view .LVU961
 2256              	.LVL222:
 457:Core/Src/SEGGER_RTT.c ****     RTT__DMB();                     // Force data write to be complete before writing the <WrOff>, 
 2257              		.loc 1 457 5 view .LVU962
 2258 0046 5146     		mov	r1, r10
 2259              	.LVL223:
 457:Core/Src/SEGGER_RTT.c ****     RTT__DMB();                     // Force data write to be complete before writing the <WrOff>, 
 2260              		.loc 1 457 5 is_stmt 0 view .LVU963
 2261 0048 2044     		add	r0, r0, r4
 2262              	.LVL224:
 457:Core/Src/SEGGER_RTT.c ****     RTT__DMB();                     // Force data write to be complete before writing the <WrOff>, 
 2263              		.loc 1 457 5 view .LVU964
 2264 004a 3A46     		mov	r2, r7
 2265              	.LVL225:
 457:Core/Src/SEGGER_RTT.c ****     RTT__DMB();                     // Force data write to be complete before writing the <WrOff>, 
 2266              		.loc 1 457 5 view .LVU965
 2267 004c FFF7FEFF 		bl	memcpy
 2268              	.LVL226:
 458:Core/Src/SEGGER_RTT.c ****     pRing->WrOff = WrOff + NumBytes;
 2269              		.loc 1 458 5 is_stmt 1 view .LVU966
 2270              		.syntax unified
 2271              	@ 458 "Core/Src/SEGGER_RTT.c" 1
 2272 0050 BFF35F8F 		dmb
 2273              	
 2274              	@ 0 "" 2
 458:Core/Src/SEGGER_RTT.c ****     pRing->WrOff = WrOff + NumBytes;
 2275              		.loc 1 458 15 view .LVU967
 459:Core/Src/SEGGER_RTT.c **** #endif
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccs0vIiH.s 			page 74


 2276              		.loc 1 459 5 view .LVU968
 459:Core/Src/SEGGER_RTT.c **** #endif
 2277              		.loc 1 459 26 is_stmt 0 view .LVU969
 2278              		.thumb
 2279              		.syntax unified
 2280 0054 3C44     		add	r4, r4, r7
 2281              	.LVL227:
 459:Core/Src/SEGGER_RTT.c **** #endif
 2282              		.loc 1 459 18 view .LVU970
 2283 0056 F460     		str	r4, [r6, #12]
 2284              	.LBE118:
 2285              	.LBE117:
 2286              		.loc 1 1074 1 view .LVU971
 2287 0058 3846     		mov	r0, r7
 2288 005a BDE8F087 		pop	{r4, r5, r6, r7, r8, r9, r10, pc}
 2289              	.LVL228:
 2290              	.L120:
1044:Core/Src/SEGGER_RTT.c ****     if (Avail < NumBytes) {
 2291              		.loc 1 1044 5 is_stmt 1 view .LVU972
 2292              	.LBB120:
 2293              	.LBI112:
 526:Core/Src/SEGGER_RTT.c ****   unsigned RdOff;
 2294              		.loc 1 526 17 view .LVU973
 2295              	.LBB114:
 527:Core/Src/SEGGER_RTT.c ****   unsigned WrOff;
 2296              		.loc 1 527 3 view .LVU974
 528:Core/Src/SEGGER_RTT.c ****   unsigned r;
 2297              		.loc 1 528 3 view .LVU975
 529:Core/Src/SEGGER_RTT.c ****   //
 2298              		.loc 1 529 3 view .LVU976
 534:Core/Src/SEGGER_RTT.c ****   WrOff = pRing->WrOff;
 2299              		.loc 1 534 3 view .LVU977
 534:Core/Src/SEGGER_RTT.c ****   WrOff = pRing->WrOff;
 2300              		.loc 1 534 9 is_stmt 0 view .LVU978
 2301 005e 3369     		ldr	r3, [r6, #16]
 2302              	.LVL229:
 535:Core/Src/SEGGER_RTT.c ****   if (RdOff <= WrOff) {
 2303              		.loc 1 535 3 is_stmt 1 view .LVU979
 535:Core/Src/SEGGER_RTT.c ****   if (RdOff <= WrOff) {
 2304              		.loc 1 535 9 is_stmt 0 view .LVU980
 2305 0060 F468     		ldr	r4, [r6, #12]
 2306              	.LVL230:
 536:Core/Src/SEGGER_RTT.c ****     r = pRing->SizeOfBuffer - 1u - WrOff + RdOff;
 2307              		.loc 1 536 3 is_stmt 1 view .LVU981
 536:Core/Src/SEGGER_RTT.c ****     r = pRing->SizeOfBuffer - 1u - WrOff + RdOff;
 2308              		.loc 1 536 6 is_stmt 0 view .LVU982
 2309 0062 A342     		cmp	r3, r4
 537:Core/Src/SEGGER_RTT.c ****   } else {
 2310              		.loc 1 537 5 is_stmt 1 view .LVU983
 537:Core/Src/SEGGER_RTT.c ****   } else {
 2311              		.loc 1 537 7 is_stmt 0 view .LVU984
 2312 0064 9CBF     		itt	ls
 2313 0066 B268     		ldrls	r2, [r6, #8]
 2314              	.LVL231:
 537:Core/Src/SEGGER_RTT.c ****   } else {
 2315              		.loc 1 537 7 view .LVU985
 2316 0068 9B18     		addls	r3, r3, r2
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccs0vIiH.s 			page 75


 2317              	.LVL232:
 539:Core/Src/SEGGER_RTT.c ****   }
 2318              		.loc 1 539 5 is_stmt 1 view .LVU986
 539:Core/Src/SEGGER_RTT.c ****   }
 2319              		.loc 1 539 7 is_stmt 0 view .LVU987
 2320 006a 013B     		subs	r3, r3, #1
 2321 006c 1B1B     		subs	r3, r3, r4
 2322              	.LVL233:
 541:Core/Src/SEGGER_RTT.c **** }
 2323              		.loc 1 541 3 is_stmt 1 view .LVU988
 541:Core/Src/SEGGER_RTT.c **** }
 2324              		.loc 1 541 3 is_stmt 0 view .LVU989
 2325              	.LBE114:
 2326              	.LBE120:
1045:Core/Src/SEGGER_RTT.c ****       Status = 0u;
 2327              		.loc 1 1045 5 is_stmt 1 view .LVU990
1045:Core/Src/SEGGER_RTT.c ****       Status = 0u;
 2328              		.loc 1 1045 8 is_stmt 0 view .LVU991
 2329 006e 9945     		cmp	r9, r3
 2330 0070 D7D8     		bhi	.L99
1048:Core/Src/SEGGER_RTT.c ****       _WriteNoCheck(pRing, pData, NumBytes);
 2331              		.loc 1 1048 7 is_stmt 1 view .LVU992
 2332              	.LVL234:
1049:Core/Src/SEGGER_RTT.c ****     }
 2333              		.loc 1 1049 7 view .LVU993
 2334              	.LBB121:
 2335              	.LBI121:
 436:Core/Src/SEGGER_RTT.c ****   unsigned NumBytesAtOnce;
 2336              		.loc 1 436 13 view .LVU994
 2337              	.LBB122:
 437:Core/Src/SEGGER_RTT.c ****   unsigned WrOff;
 2338              		.loc 1 437 3 view .LVU995
 438:Core/Src/SEGGER_RTT.c ****   unsigned Rem;
 2339              		.loc 1 438 3 view .LVU996
 439:Core/Src/SEGGER_RTT.c ****   volatile char* pDst;
 2340              		.loc 1 439 3 view .LVU997
 440:Core/Src/SEGGER_RTT.c **** 
 2341              		.loc 1 440 3 view .LVU998
 442:Core/Src/SEGGER_RTT.c ****   Rem = pRing->SizeOfBuffer - WrOff;
 2342              		.loc 1 442 3 view .LVU999
 443:Core/Src/SEGGER_RTT.c ****   if (Rem > NumBytes) {
 2343              		.loc 1 443 3 view .LVU1000
 443:Core/Src/SEGGER_RTT.c ****   if (Rem > NumBytes) {
 2344              		.loc 1 443 14 is_stmt 0 view .LVU1001
 2345 0072 B768     		ldr	r7, [r6, #8]
 448:Core/Src/SEGGER_RTT.c **** #if SEGGER_RTT_MEMCPY_USE_BYTELOOP
 2346              		.loc 1 448 10 view .LVU1002
 2347 0074 7068     		ldr	r0, [r6, #4]
 443:Core/Src/SEGGER_RTT.c ****   if (Rem > NumBytes) {
 2348              		.loc 1 443 7 view .LVU1003
 2349 0076 3D1B     		subs	r5, r7, r4
 2350              	.LVL235:
 444:Core/Src/SEGGER_RTT.c ****     //
 2351              		.loc 1 444 3 is_stmt 1 view .LVU1004
 444:Core/Src/SEGGER_RTT.c ****     //
 2352              		.loc 1 444 6 is_stmt 0 view .LVU1005
 2353 0078 A945     		cmp	r9, r5
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccs0vIiH.s 			page 76


 2354 007a 56D2     		bcs	.L105
 448:Core/Src/SEGGER_RTT.c **** #if SEGGER_RTT_MEMCPY_USE_BYTELOOP
 2355              		.loc 1 448 5 is_stmt 1 view .LVU1006
 2356              	.LVL236:
 457:Core/Src/SEGGER_RTT.c ****     RTT__DMB();                     // Force data write to be complete before writing the <WrOff>, 
 2357              		.loc 1 457 5 view .LVU1007
 2358 007c 2044     		add	r0, r0, r4
 2359              	.LVL237:
 457:Core/Src/SEGGER_RTT.c ****     RTT__DMB();                     // Force data write to be complete before writing the <WrOff>, 
 2360              		.loc 1 457 5 is_stmt 0 view .LVU1008
 2361 007e 4A46     		mov	r2, r9
 2362 0080 FFF7FEFF 		bl	memcpy
 2363              	.LVL238:
 458:Core/Src/SEGGER_RTT.c ****     pRing->WrOff = WrOff + NumBytes;
 2364              		.loc 1 458 5 is_stmt 1 view .LVU1009
 2365              		.syntax unified
 2366              	@ 458 "Core/Src/SEGGER_RTT.c" 1
 2367 0084 BFF35F8F 		dmb
 2368              	
 2369              	@ 0 "" 2
 458:Core/Src/SEGGER_RTT.c ****     pRing->WrOff = WrOff + NumBytes;
 2370              		.loc 1 458 15 view .LVU1010
 459:Core/Src/SEGGER_RTT.c **** #endif
 2371              		.loc 1 459 5 view .LVU1011
 459:Core/Src/SEGGER_RTT.c **** #endif
 2372              		.loc 1 459 26 is_stmt 0 view .LVU1012
 2373              		.thumb
 2374              		.syntax unified
 2375 0088 4C44     		add	r4, r4, r9
 2376              	.LVL239:
 459:Core/Src/SEGGER_RTT.c **** #endif
 2377              		.loc 1 459 18 view .LVU1013
 2378 008a F460     		str	r4, [r6, #12]
 2379 008c 4F46     		mov	r7, r9
 2380 008e C8E7     		b	.L99
 2381              	.LVL240:
 2382              	.L101:
 459:Core/Src/SEGGER_RTT.c **** #endif
 2383              		.loc 1 459 18 view .LVU1014
 2384              	.LBE122:
 2385              	.LBE121:
1064:Core/Src/SEGGER_RTT.c ****     break;
 2386              		.loc 1 1064 5 is_stmt 1 view .LVU1015
 2387              	.LBB124:
 2388              	.LBI124:
 374:Core/Src/SEGGER_RTT.c ****   unsigned NumBytesToWrite;
 2389              		.loc 1 374 17 view .LVU1016
 2390              	.LBB125:
 375:Core/Src/SEGGER_RTT.c ****   unsigned NumBytesWritten;
 2391              		.loc 1 375 3 view .LVU1017
 376:Core/Src/SEGGER_RTT.c ****   unsigned RdOff;
 2392              		.loc 1 376 3 view .LVU1018
 377:Core/Src/SEGGER_RTT.c ****   unsigned WrOff;
 2393              		.loc 1 377 3 view .LVU1019
 378:Core/Src/SEGGER_RTT.c ****   volatile char* pDst;
 2394              		.loc 1 378 3 view .LVU1020
 379:Core/Src/SEGGER_RTT.c ****   //
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccs0vIiH.s 			page 77


 2395              		.loc 1 379 3 view .LVU1021
 383:Core/Src/SEGGER_RTT.c ****   WrOff = pRing->WrOff;
 2396              		.loc 1 383 3 view .LVU1022
 384:Core/Src/SEGGER_RTT.c ****   do {
 2397              		.loc 1 384 3 view .LVU1023
 2398              	.LBE125:
 2399              	.LBE124:
 2400              	.LBB127:
 2401              	.LBB115:
 537:Core/Src/SEGGER_RTT.c ****   } else {
 2402              		.loc 1 537 14 is_stmt 0 view .LVU1024
 2403 0090 D6E90225 		ldrd	r2, r5, [r6, #8]
 2404              	.LVL241:
 537:Core/Src/SEGGER_RTT.c ****   } else {
 2405              		.loc 1 537 14 view .LVU1025
 2406              	.LBE115:
 2407              	.LBE127:
 2408              	.LBB128:
 2409              	.LBB126:
 383:Core/Src/SEGGER_RTT.c ****   WrOff = pRing->WrOff;
 2410              		.loc 1 383 19 view .LVU1026
 2411 0094 0027     		movs	r7, #0
 413:Core/Src/SEGGER_RTT.c ****   } while (NumBytes);
 2412              		.loc 1 413 18 view .LVU1027
 2413 0096 B846     		mov	r8, r7
 2414              	.LVL242:
 2415              	.L113:
 385:Core/Src/SEGGER_RTT.c ****     RdOff = pRing->RdOff;                         // May be changed by host (debug probe) in the me
 2416              		.loc 1 385 3 is_stmt 1 view .LVU1028
 386:Core/Src/SEGGER_RTT.c ****     if (RdOff > WrOff) {
 2417              		.loc 1 386 5 view .LVU1029
 388:Core/Src/SEGGER_RTT.c ****     } else {
 2418              		.loc 1 388 7 view .LVU1030
 390:Core/Src/SEGGER_RTT.c ****     }
 2419              		.loc 1 390 7 view .LVU1031
 386:Core/Src/SEGGER_RTT.c ****     if (RdOff > WrOff) {
 2420              		.loc 1 386 11 is_stmt 0 view .LVU1032
 2421 0098 3369     		ldr	r3, [r6, #16]
 2422              	.LVL243:
 387:Core/Src/SEGGER_RTT.c ****       NumBytesToWrite = RdOff - WrOff - 1u;
 2423              		.loc 1 387 5 is_stmt 1 view .LVU1033
 394:Core/Src/SEGGER_RTT.c **** #if SEGGER_RTT_MEMCPY_USE_BYTELOOP
 2424              		.loc 1 394 10 is_stmt 0 view .LVU1034
 2425 009a 7068     		ldr	r0, [r6, #4]
 387:Core/Src/SEGGER_RTT.c ****       NumBytesToWrite = RdOff - WrOff - 1u;
 2426              		.loc 1 387 8 view .LVU1035
 2427 009c AB42     		cmp	r3, r5
 388:Core/Src/SEGGER_RTT.c ****     } else {
 2428              		.loc 1 388 23 view .LVU1036
 2429 009e 03F1FF31 		add	r1, r3, #-1
 390:Core/Src/SEGGER_RTT.c ****     }
 2430              		.loc 1 390 23 view .LVU1037
 2431 00a2 98BF     		it	ls
 2432 00a4 03F1FF33 		addls	r3, r3, #-1
 2433              	.LVL244:
 392:Core/Src/SEGGER_RTT.c ****     NumBytesToWrite = MIN(NumBytesToWrite, NumBytes);
 2434              		.loc 1 392 23 view .LVU1038
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccs0vIiH.s 			page 78


 2435 00a8 A2EB0504 		sub	r4, r2, r5
 390:Core/Src/SEGGER_RTT.c ****     }
 2436              		.loc 1 390 23 view .LVU1039
 2437 00ac 96BF     		itet	ls
 2438 00ae 9B18     		addls	r3, r3, r2
 388:Core/Src/SEGGER_RTT.c ****     } else {
 2439              		.loc 1 388 23 view .LVU1040
 2440 00b0 4B1B     		subhi	r3, r1, r5
 390:Core/Src/SEGGER_RTT.c ****     }
 2441              		.loc 1 390 23 view .LVU1041
 2442 00b2 5B1B     		subls	r3, r3, r5
 2443              	.LVL245:
 392:Core/Src/SEGGER_RTT.c ****     NumBytesToWrite = MIN(NumBytesToWrite, NumBytes);
 2444              		.loc 1 392 5 is_stmt 1 view .LVU1042
 393:Core/Src/SEGGER_RTT.c ****     pDst = (pRing->pBuffer + WrOff) + SEGGER_RTT_UNCACHED_OFF;
 2445              		.loc 1 393 5 view .LVU1043
 393:Core/Src/SEGGER_RTT.c ****     pDst = (pRing->pBuffer + WrOff) + SEGGER_RTT_UNCACHED_OFF;
 2446              		.loc 1 393 21 is_stmt 0 view .LVU1044
 2447 00b4 4C45     		cmp	r4, r9
 2448 00b6 28BF     		it	cs
 2449 00b8 4C46     		movcs	r4, r9
 2450              	.LVL246:
 393:Core/Src/SEGGER_RTT.c ****     pDst = (pRing->pBuffer + WrOff) + SEGGER_RTT_UNCACHED_OFF;
 2451              		.loc 1 393 21 view .LVU1045
 2452 00ba 9C42     		cmp	r4, r3
 2453 00bc 28BF     		it	cs
 2454 00be 1C46     		movcs	r4, r3
 2455              	.LVL247:
 394:Core/Src/SEGGER_RTT.c **** #if SEGGER_RTT_MEMCPY_USE_BYTELOOP
 2456              		.loc 1 394 5 is_stmt 1 view .LVU1046
 403:Core/Src/SEGGER_RTT.c ****     NumBytesWritten += NumBytesToWrite;
 2457              		.loc 1 403 5 view .LVU1047
 2458 00c0 5146     		mov	r1, r10
 2459              	.LVL248:
 403:Core/Src/SEGGER_RTT.c ****     NumBytesWritten += NumBytesToWrite;
 2460              		.loc 1 403 5 is_stmt 0 view .LVU1048
 2461 00c2 2844     		add	r0, r0, r5
 2462              	.LVL249:
 403:Core/Src/SEGGER_RTT.c ****     NumBytesWritten += NumBytesToWrite;
 2463              		.loc 1 403 5 view .LVU1049
 2464 00c4 2246     		mov	r2, r4
 2465 00c6 FFF7FEFF 		bl	memcpy
 2466              	.LVL250:
 404:Core/Src/SEGGER_RTT.c ****     pBuffer         += NumBytesToWrite;
 2467              		.loc 1 404 5 is_stmt 1 view .LVU1050
 409:Core/Src/SEGGER_RTT.c ****       WrOff = 0u;
 2468              		.loc 1 409 23 is_stmt 0 view .LVU1051
 2469 00ca B268     		ldr	r2, [r6, #8]
 407:Core/Src/SEGGER_RTT.c **** #endif
 2470              		.loc 1 407 21 view .LVU1052
 2471 00cc 2544     		add	r5, r5, r4
 2472              	.LVL251:
 412:Core/Src/SEGGER_RTT.c ****     pRing->WrOff = WrOff;
 2473              		.loc 1 412 5 is_stmt 1 view .LVU1053
 409:Core/Src/SEGGER_RTT.c ****       WrOff = 0u;
 2474              		.loc 1 409 8 is_stmt 0 view .LVU1054
 2475 00ce 9542     		cmp	r5, r2
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccs0vIiH.s 			page 79


 404:Core/Src/SEGGER_RTT.c ****     pBuffer         += NumBytesToWrite;
 2476              		.loc 1 404 21 view .LVU1055
 2477 00d0 2744     		add	r7, r7, r4
 2478              	.LVL252:
 405:Core/Src/SEGGER_RTT.c ****     NumBytes        -= NumBytesToWrite;
 2479              		.loc 1 405 5 is_stmt 1 view .LVU1056
 405:Core/Src/SEGGER_RTT.c ****     NumBytes        -= NumBytesToWrite;
 2480              		.loc 1 405 21 is_stmt 0 view .LVU1057
 2481 00d2 A244     		add	r10, r10, r4
 2482              	.LVL253:
 406:Core/Src/SEGGER_RTT.c ****     WrOff           += NumBytesToWrite;
 2483              		.loc 1 406 5 is_stmt 1 view .LVU1058
 406:Core/Src/SEGGER_RTT.c ****     WrOff           += NumBytesToWrite;
 2484              		.loc 1 406 21 is_stmt 0 view .LVU1059
 2485 00d4 A9EB0409 		sub	r9, r9, r4
 2486              	.LVL254:
 407:Core/Src/SEGGER_RTT.c **** #endif
 2487              		.loc 1 407 5 is_stmt 1 view .LVU1060
 409:Core/Src/SEGGER_RTT.c ****       WrOff = 0u;
 2488              		.loc 1 409 5 view .LVU1061
 409:Core/Src/SEGGER_RTT.c ****       WrOff = 0u;
 2489              		.loc 1 409 8 is_stmt 0 view .LVU1062
 2490 00d8 06D0     		beq	.L122
 412:Core/Src/SEGGER_RTT.c ****     pRing->WrOff = WrOff;
 2491              		.loc 1 412 5 view .LVU1063
 2492              		.syntax unified
 2493              	@ 412 "Core/Src/SEGGER_RTT.c" 1
 2494 00da BFF35F8F 		dmb
 2495              	
 2496              	@ 0 "" 2
 412:Core/Src/SEGGER_RTT.c ****     pRing->WrOff = WrOff;
 2497              		.loc 1 412 15 is_stmt 1 view .LVU1064
 413:Core/Src/SEGGER_RTT.c ****   } while (NumBytes);
 2498              		.loc 1 413 5 view .LVU1065
 413:Core/Src/SEGGER_RTT.c ****   } while (NumBytes);
 2499              		.loc 1 413 18 is_stmt 0 view .LVU1066
 2500              		.thumb
 2501              		.syntax unified
 2502 00de F560     		str	r5, [r6, #12]
 414:Core/Src/SEGGER_RTT.c ****   return NumBytesWritten;
 2503              		.loc 1 414 12 is_stmt 1 view .LVU1067
 2504 00e0 B9F1000F 		cmp	r9, #0
 2505 00e4 D8D1     		bne	.L113
 2506 00e6 9CE7     		b	.L99
 2507              	.L122:
 2508              	.LVL255:
 412:Core/Src/SEGGER_RTT.c ****     pRing->WrOff = WrOff;
 2509              		.loc 1 412 5 view .LVU1068
 2510              		.syntax unified
 2511              	@ 412 "Core/Src/SEGGER_RTT.c" 1
 2512 00e8 BFF35F8F 		dmb
 2513              	
 2514              	@ 0 "" 2
 412:Core/Src/SEGGER_RTT.c ****     pRing->WrOff = WrOff;
 2515              		.loc 1 412 15 view .LVU1069
 413:Core/Src/SEGGER_RTT.c ****   } while (NumBytes);
 2516              		.loc 1 413 5 view .LVU1070
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccs0vIiH.s 			page 80


 413:Core/Src/SEGGER_RTT.c ****   } while (NumBytes);
 2517              		.loc 1 413 18 is_stmt 0 view .LVU1071
 2518              		.thumb
 2519              		.syntax unified
 2520 00ec C6F80C80 		str	r8, [r6, #12]
 414:Core/Src/SEGGER_RTT.c ****   return NumBytesWritten;
 2521              		.loc 1 414 12 is_stmt 1 view .LVU1072
 2522 00f0 B9F1000F 		cmp	r9, #0
 2523 00f4 95D0     		beq	.L99
 410:Core/Src/SEGGER_RTT.c ****     }
 2524              		.loc 1 410 13 is_stmt 0 view .LVU1073
 2525 00f6 0025     		movs	r5, #0
 2526 00f8 CEE7     		b	.L113
 2527              	.LVL256:
 2528              	.L121:
 410:Core/Src/SEGGER_RTT.c ****     }
 2529              		.loc 1 410 13 view .LVU1074
 2530              	.LBE126:
 2531              	.LBE128:
 2532              	.LBB129:
 2533              	.LBB111:
 537:Core/Src/SEGGER_RTT.c ****   } else {
 2534              		.loc 1 537 5 is_stmt 1 view .LVU1075
 537:Core/Src/SEGGER_RTT.c ****   } else {
 2535              		.loc 1 537 14 is_stmt 0 view .LVU1076
 2536 00fa B568     		ldr	r5, [r6, #8]
 537:Core/Src/SEGGER_RTT.c ****   } else {
 2537              		.loc 1 537 7 view .LVU1077
 2538 00fc 2F44     		add	r7, r7, r5
 2539              	.LVL257:
 537:Core/Src/SEGGER_RTT.c ****   } else {
 2540              		.loc 1 537 7 view .LVU1078
 2541 00fe 013F     		subs	r7, r7, #1
 2542 0100 3F1B     		subs	r7, r7, r4
 2543              	.LVL258:
 537:Core/Src/SEGGER_RTT.c ****   } else {
 2544              		.loc 1 537 7 view .LVU1079
 2545 0102 98E7     		b	.L107
 2546              	.LVL259:
 2547              	.L108:
 537:Core/Src/SEGGER_RTT.c ****   } else {
 2548              		.loc 1 537 7 view .LVU1080
 2549              	.LBE111:
 2550              	.LBE129:
 2551              	.LBB130:
 2552              	.LBB119:
 479:Core/Src/SEGGER_RTT.c ****     pDst = (pRing->pBuffer + WrOff) + SEGGER_RTT_UNCACHED_OFF;
 2553              		.loc 1 479 5 is_stmt 1 view .LVU1081
 480:Core/Src/SEGGER_RTT.c ****     SEGGER_RTT_MEMCPY((void*)pDst, pData, NumBytesAtOnce);
 2554              		.loc 1 480 5 view .LVU1082
 481:Core/Src/SEGGER_RTT.c ****     NumBytesAtOnce = NumBytes - Rem;
 2555              		.loc 1 481 5 view .LVU1083
 482:Core/Src/SEGGER_RTT.c ****     pDst = pRing->pBuffer + SEGGER_RTT_UNCACHED_OFF;
 2556              		.loc 1 482 20 is_stmt 0 view .LVU1084
 2557 0104 7D1B     		subs	r5, r7, r5
 481:Core/Src/SEGGER_RTT.c ****     NumBytesAtOnce = NumBytes - Rem;
 2558              		.loc 1 481 5 view .LVU1085
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccs0vIiH.s 			page 81


 2559 0106 4246     		mov	r2, r8
 2560              	.LVL260:
 481:Core/Src/SEGGER_RTT.c ****     NumBytesAtOnce = NumBytes - Rem;
 2561              		.loc 1 481 5 view .LVU1086
 2562 0108 5146     		mov	r1, r10
 2563              	.LVL261:
 481:Core/Src/SEGGER_RTT.c ****     NumBytesAtOnce = NumBytes - Rem;
 2564              		.loc 1 481 5 view .LVU1087
 2565 010a 2044     		add	r0, r0, r4
 482:Core/Src/SEGGER_RTT.c ****     pDst = pRing->pBuffer + SEGGER_RTT_UNCACHED_OFF;
 2566              		.loc 1 482 20 view .LVU1088
 2567 010c 2544     		add	r5, r5, r4
 481:Core/Src/SEGGER_RTT.c ****     NumBytesAtOnce = NumBytes - Rem;
 2568              		.loc 1 481 5 view .LVU1089
 2569 010e FFF7FEFF 		bl	memcpy
 2570              	.LVL262:
 482:Core/Src/SEGGER_RTT.c ****     pDst = pRing->pBuffer + SEGGER_RTT_UNCACHED_OFF;
 2571              		.loc 1 482 5 is_stmt 1 view .LVU1090
 483:Core/Src/SEGGER_RTT.c ****     SEGGER_RTT_MEMCPY((void*)pDst, pData + Rem, NumBytesAtOnce);
 2572              		.loc 1 483 5 view .LVU1091
 484:Core/Src/SEGGER_RTT.c ****     RTT__DMB();                     // Force data write to be complete before writing the <WrOff>, 
 2573              		.loc 1 484 5 view .LVU1092
 2574 0112 7068     		ldr	r0, [r6, #4]
 2575 0114 0AEB0801 		add	r1, r10, r8
 2576 0118 2A46     		mov	r2, r5
 2577 011a FFF7FEFF 		bl	memcpy
 2578              	.LVL263:
 485:Core/Src/SEGGER_RTT.c ****     pRing->WrOff = NumBytesAtOnce;
 2579              		.loc 1 485 5 view .LVU1093
 2580              		.syntax unified
 2581              	@ 485 "Core/Src/SEGGER_RTT.c" 1
 2582 011e BFF35F8F 		dmb
 2583              	
 2584              	@ 0 "" 2
 485:Core/Src/SEGGER_RTT.c ****     pRing->WrOff = NumBytesAtOnce;
 2585              		.loc 1 485 15 view .LVU1094
 486:Core/Src/SEGGER_RTT.c **** #endif
 2586              		.loc 1 486 5 view .LVU1095
 486:Core/Src/SEGGER_RTT.c **** #endif
 2587              		.loc 1 486 18 is_stmt 0 view .LVU1096
 2588              		.thumb
 2589              		.syntax unified
 2590 0122 F560     		str	r5, [r6, #12]
 2591              	.LBE119:
 2592              	.LBE130:
 2593              		.loc 1 1074 1 view .LVU1097
 2594 0124 3846     		mov	r0, r7
 2595 0126 BDE8F087 		pop	{r4, r5, r6, r7, r8, r9, r10, pc}
 2596              	.LVL264:
 2597              	.L105:
 2598              	.LBB131:
 2599              	.LBB123:
 479:Core/Src/SEGGER_RTT.c ****     pDst = (pRing->pBuffer + WrOff) + SEGGER_RTT_UNCACHED_OFF;
 2600              		.loc 1 479 5 is_stmt 1 view .LVU1098
 480:Core/Src/SEGGER_RTT.c ****     SEGGER_RTT_MEMCPY((void*)pDst, pData, NumBytesAtOnce);
 2601              		.loc 1 480 5 view .LVU1099
 481:Core/Src/SEGGER_RTT.c ****     NumBytesAtOnce = NumBytes - Rem;
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccs0vIiH.s 			page 82


 2602              		.loc 1 481 5 view .LVU1100
 2603 012a 2044     		add	r0, r0, r4
 482:Core/Src/SEGGER_RTT.c ****     pDst = pRing->pBuffer + SEGGER_RTT_UNCACHED_OFF;
 2604              		.loc 1 482 20 is_stmt 0 view .LVU1101
 2605 012c 4C44     		add	r4, r4, r9
 2606              	.LVL265:
 481:Core/Src/SEGGER_RTT.c ****     NumBytesAtOnce = NumBytes - Rem;
 2607              		.loc 1 481 5 view .LVU1102
 2608 012e 2A46     		mov	r2, r5
 482:Core/Src/SEGGER_RTT.c ****     pDst = pRing->pBuffer + SEGGER_RTT_UNCACHED_OFF;
 2609              		.loc 1 482 20 view .LVU1103
 2610 0130 E41B     		subs	r4, r4, r7
 481:Core/Src/SEGGER_RTT.c ****     NumBytesAtOnce = NumBytes - Rem;
 2611              		.loc 1 481 5 view .LVU1104
 2612 0132 FFF7FEFF 		bl	memcpy
 2613              	.LVL266:
 482:Core/Src/SEGGER_RTT.c ****     pDst = pRing->pBuffer + SEGGER_RTT_UNCACHED_OFF;
 2614              		.loc 1 482 5 is_stmt 1 view .LVU1105
 483:Core/Src/SEGGER_RTT.c ****     SEGGER_RTT_MEMCPY((void*)pDst, pData + Rem, NumBytesAtOnce);
 2615              		.loc 1 483 5 view .LVU1106
 484:Core/Src/SEGGER_RTT.c ****     RTT__DMB();                     // Force data write to be complete before writing the <WrOff>, 
 2616              		.loc 1 484 5 view .LVU1107
 2617 0136 7068     		ldr	r0, [r6, #4]
 2618 0138 0AEB0501 		add	r1, r10, r5
 2619 013c 2246     		mov	r2, r4
 2620 013e FFF7FEFF 		bl	memcpy
 2621              	.LVL267:
 485:Core/Src/SEGGER_RTT.c ****     pRing->WrOff = NumBytesAtOnce;
 2622              		.loc 1 485 5 view .LVU1108
 2623              		.syntax unified
 2624              	@ 485 "Core/Src/SEGGER_RTT.c" 1
 2625 0142 BFF35F8F 		dmb
 2626              	
 2627              	@ 0 "" 2
 485:Core/Src/SEGGER_RTT.c ****     pRing->WrOff = NumBytesAtOnce;
 2628              		.loc 1 485 15 view .LVU1109
 486:Core/Src/SEGGER_RTT.c **** #endif
 2629              		.loc 1 486 5 view .LVU1110
 486:Core/Src/SEGGER_RTT.c **** #endif
 2630              		.loc 1 486 18 is_stmt 0 view .LVU1111
 2631              		.thumb
 2632              		.syntax unified
 2633 0146 F460     		str	r4, [r6, #12]
 2634 0148 4F46     		mov	r7, r9
 2635 014a 6AE7     		b	.L99
 2636              	.L124:
 2637              		.align	2
 2638              	.L123:
 2639 014c 00000000 		.word	.LANCHOR0
 2640              	.LBE123:
 2641              	.LBE131:
 2642              		.cfi_endproc
 2643              	.LFE10:
 2645              		.section	.text.SEGGER_RTT_WriteNoLock,"ax",%progbits
 2646              		.align	1
 2647              		.p2align 2,,3
 2648              		.global	SEGGER_RTT_WriteNoLock
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccs0vIiH.s 			page 83


 2649              		.syntax unified
 2650              		.thumb
 2651              		.thumb_func
 2653              	SEGGER_RTT_WriteNoLock:
 2654              	.LVL268:
 2655              	.LFB11:
1075:Core/Src/SEGGER_RTT.c **** 
1076:Core/Src/SEGGER_RTT.c **** /*********************************************************************
1077:Core/Src/SEGGER_RTT.c **** *
1078:Core/Src/SEGGER_RTT.c **** *       SEGGER_RTT_WriteNoLock
1079:Core/Src/SEGGER_RTT.c **** *
1080:Core/Src/SEGGER_RTT.c **** *  Function description
1081:Core/Src/SEGGER_RTT.c **** *    Stores a specified number of characters in SEGGER RTT
1082:Core/Src/SEGGER_RTT.c **** *    control block which is then read by the host.
1083:Core/Src/SEGGER_RTT.c **** *    SEGGER_RTT_WriteNoLock does not lock the application.
1084:Core/Src/SEGGER_RTT.c **** *
1085:Core/Src/SEGGER_RTT.c **** *  Parameters
1086:Core/Src/SEGGER_RTT.c **** *    BufferIndex  Index of "Up"-buffer to be used (e.g. 0 for "Terminal").
1087:Core/Src/SEGGER_RTT.c **** *    pBuffer      Pointer to character array. Does not need to point to a \0 terminated string.
1088:Core/Src/SEGGER_RTT.c **** *    NumBytes     Number of bytes to be stored in the SEGGER RTT control block.
1089:Core/Src/SEGGER_RTT.c **** *
1090:Core/Src/SEGGER_RTT.c **** *  Return value
1091:Core/Src/SEGGER_RTT.c **** *    Number of bytes which have been stored in the "Up"-buffer.
1092:Core/Src/SEGGER_RTT.c **** *
1093:Core/Src/SEGGER_RTT.c **** *  Notes
1094:Core/Src/SEGGER_RTT.c **** *    (1) Data is stored according to buffer flags.
1095:Core/Src/SEGGER_RTT.c **** *    (2) For performance reasons this function does not call Init()
1096:Core/Src/SEGGER_RTT.c **** *        and may only be called after RTT has been initialized.
1097:Core/Src/SEGGER_RTT.c **** *        Either by calling SEGGER_RTT_Init() or calling another RTT API function first.
1098:Core/Src/SEGGER_RTT.c **** */
1099:Core/Src/SEGGER_RTT.c **** unsigned SEGGER_RTT_WriteNoLock(unsigned BufferIndex, const void* pBuffer, unsigned NumBytes) {
 2656              		.loc 1 1099 95 is_stmt 1 view -0
 2657              		.cfi_startproc
 2658              		@ args = 0, pretend = 0, frame = 8
 2659              		@ frame_needed = 0, uses_anonymous_args = 0
1100:Core/Src/SEGGER_RTT.c ****   unsigned              Status;
 2660              		.loc 1 1100 3 view .LVU1113
1101:Core/Src/SEGGER_RTT.c ****   unsigned              Avail;
 2661              		.loc 1 1101 3 view .LVU1114
1102:Core/Src/SEGGER_RTT.c ****   const char*           pData;
 2662              		.loc 1 1102 3 view .LVU1115
1103:Core/Src/SEGGER_RTT.c ****   SEGGER_RTT_BUFFER_UP* pRing;
 2663              		.loc 1 1103 3 view .LVU1116
1104:Core/Src/SEGGER_RTT.c ****   //
1105:Core/Src/SEGGER_RTT.c ****   // Get "to-host" ring buffer.
1106:Core/Src/SEGGER_RTT.c ****   //
1107:Core/Src/SEGGER_RTT.c ****   pData = (const char *)pBuffer;
 2664              		.loc 1 1107 3 view .LVU1117
1099:Core/Src/SEGGER_RTT.c ****   unsigned              Status;
 2665              		.loc 1 1099 95 is_stmt 0 view .LVU1118
 2666 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 2667              		.cfi_def_cfa_offset 36
 2668              		.cfi_offset 4, -36
 2669              		.cfi_offset 5, -32
 2670              		.cfi_offset 6, -28
 2671              		.cfi_offset 7, -24
 2672              		.cfi_offset 8, -20
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccs0vIiH.s 			page 84


 2673              		.cfi_offset 9, -16
 2674              		.cfi_offset 10, -12
 2675              		.cfi_offset 11, -8
 2676              		.cfi_offset 14, -4
1108:Core/Src/SEGGER_RTT.c ****   pRing = (SEGGER_RTT_BUFFER_UP*)((char*)&_SEGGER_RTT.aUp[BufferIndex] + SEGGER_RTT_UNCACHED_OFF); 
1109:Core/Src/SEGGER_RTT.c ****   //
1110:Core/Src/SEGGER_RTT.c ****   // How we output depends upon the mode...
1111:Core/Src/SEGGER_RTT.c ****   //
1112:Core/Src/SEGGER_RTT.c ****   switch (pRing->Flags) {
 2677              		.loc 1 1112 16 view .LVU1119
 2678 0004 DFF8BC91 		ldr	r9, .L152
 2679 0008 00EB4006 		add	r6, r0, r0, lsl #1
 2680 000c 09EBC606 		add	r6, r9, r6, lsl #3
1099:Core/Src/SEGGER_RTT.c ****   unsigned              Status;
 2681              		.loc 1 1099 95 view .LVU1120
 2682 0010 83B0     		sub	sp, sp, #12
 2683              		.cfi_def_cfa_offset 48
 2684              		.loc 1 1112 16 view .LVU1121
 2685 0012 F76A     		ldr	r7, [r6, #44]
 2686              		.loc 1 1112 3 view .LVU1122
 2687 0014 012F     		cmp	r7, #1
1099:Core/Src/SEGGER_RTT.c ****   unsigned              Status;
 2688              		.loc 1 1099 95 view .LVU1123
 2689 0016 8046     		mov	r8, r0
 2690 0018 8B46     		mov	fp, r1
 2691              	.LVL269:
1108:Core/Src/SEGGER_RTT.c ****   pRing = (SEGGER_RTT_BUFFER_UP*)((char*)&_SEGGER_RTT.aUp[BufferIndex] + SEGGER_RTT_UNCACHED_OFF); 
 2692              		.loc 1 1108 3 is_stmt 1 view .LVU1124
 2693              		.loc 1 1112 3 view .LVU1125
1099:Core/Src/SEGGER_RTT.c ****   unsigned              Status;
 2694              		.loc 1 1099 95 is_stmt 0 view .LVU1126
 2695 001a 9246     		mov	r10, r2
 2696              		.loc 1 1112 16 view .LVU1127
 2697 001c 4FEA4004 		lsl	r4, r0, #1
 2698              		.loc 1 1112 3 view .LVU1128
 2699 0020 07D0     		beq	.L126
 2700 0022 022F     		cmp	r7, #2
 2701 0024 4FD0     		beq	.L127
 2702 0026 5FB3     		cbz	r7, .L147
 2703 0028 0027     		movs	r7, #0
 2704              	.LVL270:
1113:Core/Src/SEGGER_RTT.c ****   case SEGGER_RTT_MODE_NO_BLOCK_SKIP:
1114:Core/Src/SEGGER_RTT.c ****     //
1115:Core/Src/SEGGER_RTT.c ****     // If we are in skip mode and there is no space for the whole
1116:Core/Src/SEGGER_RTT.c ****     // of this output, don't bother.
1117:Core/Src/SEGGER_RTT.c ****     //
1118:Core/Src/SEGGER_RTT.c ****     Avail = _GetAvailWriteSpace(pRing);
1119:Core/Src/SEGGER_RTT.c ****     if (Avail < NumBytes) {
1120:Core/Src/SEGGER_RTT.c ****       Status = 0u;
1121:Core/Src/SEGGER_RTT.c ****     } else {
1122:Core/Src/SEGGER_RTT.c ****       Status = NumBytes;
1123:Core/Src/SEGGER_RTT.c ****       _WriteNoCheck(pRing, pData, NumBytes);
1124:Core/Src/SEGGER_RTT.c ****     }
1125:Core/Src/SEGGER_RTT.c ****     break;
1126:Core/Src/SEGGER_RTT.c ****   case SEGGER_RTT_MODE_NO_BLOCK_TRIM:
1127:Core/Src/SEGGER_RTT.c ****     //
1128:Core/Src/SEGGER_RTT.c ****     // If we are in trim mode, trim to what we can output without blocking.
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccs0vIiH.s 			page 85


1129:Core/Src/SEGGER_RTT.c ****     //
1130:Core/Src/SEGGER_RTT.c ****     Avail = _GetAvailWriteSpace(pRing);
1131:Core/Src/SEGGER_RTT.c ****     Status = Avail < NumBytes ? Avail : NumBytes;
1132:Core/Src/SEGGER_RTT.c ****     _WriteNoCheck(pRing, pData, Status);
1133:Core/Src/SEGGER_RTT.c ****     break;
1134:Core/Src/SEGGER_RTT.c ****   case SEGGER_RTT_MODE_BLOCK_IF_FIFO_FULL:
1135:Core/Src/SEGGER_RTT.c ****     //
1136:Core/Src/SEGGER_RTT.c ****     // If we are in blocking mode, output everything.
1137:Core/Src/SEGGER_RTT.c ****     //
1138:Core/Src/SEGGER_RTT.c ****     Status = _WriteBlocking(pRing, pData, NumBytes);
1139:Core/Src/SEGGER_RTT.c ****     break;
1140:Core/Src/SEGGER_RTT.c ****   default:
1141:Core/Src/SEGGER_RTT.c ****     Status = 0u;
1142:Core/Src/SEGGER_RTT.c ****     break;
1143:Core/Src/SEGGER_RTT.c ****   }
1144:Core/Src/SEGGER_RTT.c ****   //
1145:Core/Src/SEGGER_RTT.c ****   // Finish up.
1146:Core/Src/SEGGER_RTT.c ****   //
1147:Core/Src/SEGGER_RTT.c ****   return Status;
 2705              		.loc 1 1147 3 is_stmt 1 view .LVU1129
 2706              	.L125:
1148:Core/Src/SEGGER_RTT.c **** }
 2707              		.loc 1 1148 1 is_stmt 0 view .LVU1130
 2708 002a 3846     		mov	r0, r7
 2709 002c 03B0     		add	sp, sp, #12
 2710              		.cfi_remember_state
 2711              		.cfi_def_cfa_offset 36
 2712              		@ sp needed
 2713 002e BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 2714              	.LVL271:
 2715              	.L126:
 2716              		.cfi_restore_state
1130:Core/Src/SEGGER_RTT.c ****     Status = Avail < NumBytes ? Avail : NumBytes;
 2717              		.loc 1 1130 5 is_stmt 1 view .LVU1131
 2718              	.LBB146:
 2719              	.LBI146:
 526:Core/Src/SEGGER_RTT.c ****   unsigned RdOff;
 2720              		.loc 1 526 17 view .LVU1132
 2721              	.LBB147:
 527:Core/Src/SEGGER_RTT.c ****   unsigned WrOff;
 2722              		.loc 1 527 3 view .LVU1133
 528:Core/Src/SEGGER_RTT.c ****   unsigned r;
 2723              		.loc 1 528 3 view .LVU1134
 529:Core/Src/SEGGER_RTT.c ****   //
 2724              		.loc 1 529 3 view .LVU1135
 534:Core/Src/SEGGER_RTT.c ****   WrOff = pRing->WrOff;
 2725              		.loc 1 534 3 view .LVU1136
 534:Core/Src/SEGGER_RTT.c ****   WrOff = pRing->WrOff;
 2726              		.loc 1 534 9 is_stmt 0 view .LVU1137
 2727 0032 B76A     		ldr	r7, [r6, #40]
 2728              	.LVL272:
 535:Core/Src/SEGGER_RTT.c ****   if (RdOff <= WrOff) {
 2729              		.loc 1 535 3 is_stmt 1 view .LVU1138
 535:Core/Src/SEGGER_RTT.c ****   if (RdOff <= WrOff) {
 2730              		.loc 1 535 9 is_stmt 0 view .LVU1139
 2731 0034 756A     		ldr	r5, [r6, #36]
 2732              	.LVL273:
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccs0vIiH.s 			page 86


 536:Core/Src/SEGGER_RTT.c ****     r = pRing->SizeOfBuffer - 1u - WrOff + RdOff;
 2733              		.loc 1 536 3 is_stmt 1 view .LVU1140
 536:Core/Src/SEGGER_RTT.c ****     r = pRing->SizeOfBuffer - 1u - WrOff + RdOff;
 2734              		.loc 1 536 6 is_stmt 0 view .LVU1141
 2735 0036 AF42     		cmp	r7, r5
 2736 0038 40F28480 		bls	.L148
 539:Core/Src/SEGGER_RTT.c ****   }
 2737              		.loc 1 539 5 is_stmt 1 view .LVU1142
 539:Core/Src/SEGGER_RTT.c ****   }
 2738              		.loc 1 539 7 is_stmt 0 view .LVU1143
 2739 003c 013F     		subs	r7, r7, #1
 2740              	.LVL274:
 539:Core/Src/SEGGER_RTT.c ****   }
 2741              		.loc 1 539 7 view .LVU1144
 2742 003e 7F1B     		subs	r7, r7, r5
 2743              	.LVL275:
 541:Core/Src/SEGGER_RTT.c **** }
 2744              		.loc 1 541 3 is_stmt 1 view .LVU1145
 541:Core/Src/SEGGER_RTT.c **** }
 2745              		.loc 1 541 3 is_stmt 0 view .LVU1146
 2746              	.LBE147:
 2747              	.LBE146:
1131:Core/Src/SEGGER_RTT.c ****     _WriteNoCheck(pRing, pData, Status);
 2748              		.loc 1 1131 5 is_stmt 1 view .LVU1147
 2749              	.LBB149:
 2750              	.LBB150:
 537:Core/Src/SEGGER_RTT.c ****   } else {
 2751              		.loc 1 537 14 is_stmt 0 view .LVU1148
 2752 0040 366A     		ldr	r6, [r6, #32]
 2753              	.LBE150:
 2754              	.LBE149:
1131:Core/Src/SEGGER_RTT.c ****     _WriteNoCheck(pRing, pData, Status);
 2755              		.loc 1 1131 12 view .LVU1149
 2756 0042 5745     		cmp	r7, r10
 2757 0044 28BF     		it	cs
 2758 0046 5746     		movcs	r7, r10
 2759              	.LVL276:
1132:Core/Src/SEGGER_RTT.c ****     break;
 2760              		.loc 1 1132 5 is_stmt 1 view .LVU1150
 2761              	.LBB152:
 2762              	.LBI152:
 436:Core/Src/SEGGER_RTT.c ****   unsigned NumBytesAtOnce;
 2763              		.loc 1 436 13 view .LVU1151
 2764              	.LBB153:
 437:Core/Src/SEGGER_RTT.c ****   unsigned WrOff;
 2765              		.loc 1 437 3 view .LVU1152
 438:Core/Src/SEGGER_RTT.c ****   unsigned Rem;
 2766              		.loc 1 438 3 view .LVU1153
 439:Core/Src/SEGGER_RTT.c ****   volatile char* pDst;
 2767              		.loc 1 439 3 view .LVU1154
 440:Core/Src/SEGGER_RTT.c **** 
 2768              		.loc 1 440 3 view .LVU1155
 442:Core/Src/SEGGER_RTT.c ****   Rem = pRing->SizeOfBuffer - WrOff;
 2769              		.loc 1 442 3 view .LVU1156
 443:Core/Src/SEGGER_RTT.c ****   if (Rem > NumBytes) {
 2770              		.loc 1 443 3 view .LVU1157
 443:Core/Src/SEGGER_RTT.c ****   if (Rem > NumBytes) {
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccs0vIiH.s 			page 87


 2771              		.loc 1 443 7 is_stmt 0 view .LVU1158
 2772 0048 721B     		subs	r2, r6, r5
 2773              	.LVL277:
 444:Core/Src/SEGGER_RTT.c ****     //
 2774              		.loc 1 444 3 is_stmt 1 view .LVU1159
 444:Core/Src/SEGGER_RTT.c ****     //
 2775              		.loc 1 444 6 is_stmt 0 view .LVU1160
 2776 004a 9742     		cmp	r7, r2
 2777 004c 80F08580 		bcs	.L134
 2778              	.L151:
 448:Core/Src/SEGGER_RTT.c **** #if SEGGER_RTT_MEMCPY_USE_BYTELOOP
 2779              		.loc 1 448 5 is_stmt 1 view .LVU1161
 2780              	.LVL278:
 457:Core/Src/SEGGER_RTT.c ****     RTT__DMB();                     // Force data write to be complete before writing the <WrOff>, 
 2781              		.loc 1 457 5 view .LVU1162
 448:Core/Src/SEGGER_RTT.c **** #if SEGGER_RTT_MEMCPY_USE_BYTELOOP
 2782              		.loc 1 448 18 is_stmt 0 view .LVU1163
 2783 0050 08F10103 		add	r3, r8, #1
 2784 0054 03EB4303 		add	r3, r3, r3, lsl #1
 2785 0058 09EBC303 		add	r3, r9, r3, lsl #3
 457:Core/Src/SEGGER_RTT.c ****     RTT__DMB();                     // Force data write to be complete before writing the <WrOff>, 
 2786              		.loc 1 457 5 view .LVU1164
 2787 005c 5946     		mov	r1, fp
 2788              	.LVL279:
 448:Core/Src/SEGGER_RTT.c **** #if SEGGER_RTT_MEMCPY_USE_BYTELOOP
 2789              		.loc 1 448 10 view .LVU1165
 2790 005e 5868     		ldr	r0, [r3, #4]
 2791              	.LVL280:
 457:Core/Src/SEGGER_RTT.c ****     RTT__DMB();                     // Force data write to be complete before writing the <WrOff>, 
 2792              		.loc 1 457 5 view .LVU1166
 2793 0060 3A46     		mov	r2, r7
 2794              	.LVL281:
 457:Core/Src/SEGGER_RTT.c ****     RTT__DMB();                     // Force data write to be complete before writing the <WrOff>, 
 2795              		.loc 1 457 5 view .LVU1167
 2796 0062 2844     		add	r0, r0, r5
 2797 0064 FFF7FEFF 		bl	memcpy
 2798              	.LVL282:
 458:Core/Src/SEGGER_RTT.c ****     pRing->WrOff = WrOff + NumBytes;
 2799              		.loc 1 458 5 is_stmt 1 view .LVU1168
 2800              		.syntax unified
 2801              	@ 458 "Core/Src/SEGGER_RTT.c" 1
 2802 0068 BFF35F8F 		dmb
 2803              	
 2804              	@ 0 "" 2
 458:Core/Src/SEGGER_RTT.c ****     pRing->WrOff = WrOff + NumBytes;
 2805              		.loc 1 458 15 view .LVU1169
 459:Core/Src/SEGGER_RTT.c **** #endif
 2806              		.loc 1 459 5 view .LVU1170
 459:Core/Src/SEGGER_RTT.c **** #endif
 2807              		.loc 1 459 18 is_stmt 0 view .LVU1171
 2808              		.thumb
 2809              		.syntax unified
 2810 006c A044     		add	r8, r8, r4
 2811              	.LVL283:
 459:Core/Src/SEGGER_RTT.c **** #endif
 2812              		.loc 1 459 18 view .LVU1172
 2813 006e 09EBC808 		add	r8, r9, r8, lsl #3
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccs0vIiH.s 			page 88


 459:Core/Src/SEGGER_RTT.c **** #endif
 2814              		.loc 1 459 26 view .LVU1173
 2815 0072 3D44     		add	r5, r5, r7
 2816              	.LVL284:
 459:Core/Src/SEGGER_RTT.c **** #endif
 2817              		.loc 1 459 26 view .LVU1174
 2818              	.LBE153:
 2819              	.LBE152:
 2820              		.loc 1 1148 1 view .LVU1175
 2821 0074 3846     		mov	r0, r7
 2822              	.LBB157:
 2823              	.LBB154:
 459:Core/Src/SEGGER_RTT.c **** #endif
 2824              		.loc 1 459 18 view .LVU1176
 2825 0076 C8F82450 		str	r5, [r8, #36]
 2826              	.LBE154:
 2827              	.LBE157:
 2828              		.loc 1 1148 1 view .LVU1177
 2829 007a 03B0     		add	sp, sp, #12
 2830              		.cfi_remember_state
 2831              		.cfi_def_cfa_offset 36
 2832              		@ sp needed
 2833 007c BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 2834              	.LVL285:
 2835              	.L147:
 2836              		.cfi_restore_state
1118:Core/Src/SEGGER_RTT.c ****     if (Avail < NumBytes) {
 2837              		.loc 1 1118 5 is_stmt 1 view .LVU1178
 2838              	.LBB158:
 2839              	.LBI149:
 526:Core/Src/SEGGER_RTT.c ****   unsigned RdOff;
 2840              		.loc 1 526 17 view .LVU1179
 2841              	.LBB151:
 527:Core/Src/SEGGER_RTT.c ****   unsigned WrOff;
 2842              		.loc 1 527 3 view .LVU1180
 528:Core/Src/SEGGER_RTT.c ****   unsigned r;
 2843              		.loc 1 528 3 view .LVU1181
 529:Core/Src/SEGGER_RTT.c ****   //
 2844              		.loc 1 529 3 view .LVU1182
 534:Core/Src/SEGGER_RTT.c ****   WrOff = pRing->WrOff;
 2845              		.loc 1 534 3 view .LVU1183
 534:Core/Src/SEGGER_RTT.c ****   WrOff = pRing->WrOff;
 2846              		.loc 1 534 9 is_stmt 0 view .LVU1184
 2847 0080 B36A     		ldr	r3, [r6, #40]
 2848              	.LVL286:
 535:Core/Src/SEGGER_RTT.c ****   if (RdOff <= WrOff) {
 2849              		.loc 1 535 3 is_stmt 1 view .LVU1185
 535:Core/Src/SEGGER_RTT.c ****   if (RdOff <= WrOff) {
 2850              		.loc 1 535 9 is_stmt 0 view .LVU1186
 2851 0082 756A     		ldr	r5, [r6, #36]
 2852              	.LVL287:
 536:Core/Src/SEGGER_RTT.c ****     r = pRing->SizeOfBuffer - 1u - WrOff + RdOff;
 2853              		.loc 1 536 3 is_stmt 1 view .LVU1187
 536:Core/Src/SEGGER_RTT.c ****     r = pRing->SizeOfBuffer - 1u - WrOff + RdOff;
 2854              		.loc 1 536 6 is_stmt 0 view .LVU1188
 2855 0084 AB42     		cmp	r3, r5
 537:Core/Src/SEGGER_RTT.c ****   } else {
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccs0vIiH.s 			page 89


 2856              		.loc 1 537 5 is_stmt 1 view .LVU1189
 537:Core/Src/SEGGER_RTT.c ****   } else {
 2857              		.loc 1 537 7 is_stmt 0 view .LVU1190
 2858 0086 9CBF     		itt	ls
 2859 0088 326A     		ldrls	r2, [r6, #32]
 2860              	.LVL288:
 537:Core/Src/SEGGER_RTT.c ****   } else {
 2861              		.loc 1 537 7 view .LVU1191
 2862 008a 9B18     		addls	r3, r3, r2
 2863              	.LVL289:
 539:Core/Src/SEGGER_RTT.c ****   }
 2864              		.loc 1 539 5 is_stmt 1 view .LVU1192
 539:Core/Src/SEGGER_RTT.c ****   }
 2865              		.loc 1 539 7 is_stmt 0 view .LVU1193
 2866 008c 013B     		subs	r3, r3, #1
 2867 008e 5B1B     		subs	r3, r3, r5
 2868              	.LVL290:
 541:Core/Src/SEGGER_RTT.c **** }
 2869              		.loc 1 541 3 is_stmt 1 view .LVU1194
 541:Core/Src/SEGGER_RTT.c **** }
 2870              		.loc 1 541 3 is_stmt 0 view .LVU1195
 2871              	.LBE151:
 2872              	.LBE158:
1119:Core/Src/SEGGER_RTT.c ****       Status = 0u;
 2873              		.loc 1 1119 5 is_stmt 1 view .LVU1196
1119:Core/Src/SEGGER_RTT.c ****       Status = 0u;
 2874              		.loc 1 1119 8 is_stmt 0 view .LVU1197
 2875 0090 9A45     		cmp	r10, r3
 2876 0092 CAD8     		bhi	.L125
1122:Core/Src/SEGGER_RTT.c ****       _WriteNoCheck(pRing, pData, NumBytes);
 2877              		.loc 1 1122 7 is_stmt 1 view .LVU1198
 2878              	.LVL291:
1123:Core/Src/SEGGER_RTT.c ****     }
 2879              		.loc 1 1123 7 view .LVU1199
 2880              	.LBB159:
 2881              	.LBI159:
 436:Core/Src/SEGGER_RTT.c ****   unsigned NumBytesAtOnce;
 2882              		.loc 1 436 13 view .LVU1200
 2883              	.LBB160:
 437:Core/Src/SEGGER_RTT.c ****   unsigned WrOff;
 2884              		.loc 1 437 3 view .LVU1201
 438:Core/Src/SEGGER_RTT.c ****   unsigned Rem;
 2885              		.loc 1 438 3 view .LVU1202
 439:Core/Src/SEGGER_RTT.c ****   volatile char* pDst;
 2886              		.loc 1 439 3 view .LVU1203
 440:Core/Src/SEGGER_RTT.c **** 
 2887              		.loc 1 440 3 view .LVU1204
 442:Core/Src/SEGGER_RTT.c ****   Rem = pRing->SizeOfBuffer - WrOff;
 2888              		.loc 1 442 3 view .LVU1205
 443:Core/Src/SEGGER_RTT.c ****   if (Rem > NumBytes) {
 2889              		.loc 1 443 3 view .LVU1206
 443:Core/Src/SEGGER_RTT.c ****   if (Rem > NumBytes) {
 2890              		.loc 1 443 14 is_stmt 0 view .LVU1207
 2891 0094 0444     		add	r4, r4, r0
 2892 0096 09EBC404 		add	r4, r9, r4, lsl #3
 448:Core/Src/SEGGER_RTT.c **** #if SEGGER_RTT_MEMCPY_USE_BYTELOOP
 2893              		.loc 1 448 18 view .LVU1208
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccs0vIiH.s 			page 90


 2894 009a 00F10108 		add	r8, r0, #1
 443:Core/Src/SEGGER_RTT.c ****   if (Rem > NumBytes) {
 2895              		.loc 1 443 14 view .LVU1209
 2896 009e 276A     		ldr	r7, [r4, #32]
 443:Core/Src/SEGGER_RTT.c ****   if (Rem > NumBytes) {
 2897              		.loc 1 443 7 view .LVU1210
 2898 00a0 7E1B     		subs	r6, r7, r5
 2899              	.LVL292:
 444:Core/Src/SEGGER_RTT.c ****     //
 2900              		.loc 1 444 3 is_stmt 1 view .LVU1211
 448:Core/Src/SEGGER_RTT.c **** #if SEGGER_RTT_MEMCPY_USE_BYTELOOP
 2901              		.loc 1 448 18 is_stmt 0 view .LVU1212
 2902 00a2 08EB4808 		add	r8, r8, r8, lsl #1
 444:Core/Src/SEGGER_RTT.c ****     //
 2903              		.loc 1 444 6 view .LVU1213
 2904 00a6 B245     		cmp	r10, r6
 448:Core/Src/SEGGER_RTT.c **** #if SEGGER_RTT_MEMCPY_USE_BYTELOOP
 2905              		.loc 1 448 18 view .LVU1214
 2906 00a8 09EBC808 		add	r8, r9, r8, lsl #3
 444:Core/Src/SEGGER_RTT.c ****     //
 2907              		.loc 1 444 6 view .LVU1215
 2908 00ac 76D2     		bcs	.L131
 448:Core/Src/SEGGER_RTT.c **** #if SEGGER_RTT_MEMCPY_USE_BYTELOOP
 2909              		.loc 1 448 5 is_stmt 1 view .LVU1216
 2910              	.LVL293:
 457:Core/Src/SEGGER_RTT.c ****     RTT__DMB();                     // Force data write to be complete before writing the <WrOff>, 
 2911              		.loc 1 457 5 view .LVU1217
 448:Core/Src/SEGGER_RTT.c **** #if SEGGER_RTT_MEMCPY_USE_BYTELOOP
 2912              		.loc 1 448 10 is_stmt 0 view .LVU1218
 2913 00ae D8F80400 		ldr	r0, [r8, #4]
 2914              	.LVL294:
 457:Core/Src/SEGGER_RTT.c ****     RTT__DMB();                     // Force data write to be complete before writing the <WrOff>, 
 2915              		.loc 1 457 5 view .LVU1219
 2916 00b2 5246     		mov	r2, r10
 2917 00b4 2844     		add	r0, r0, r5
 2918 00b6 FFF7FEFF 		bl	memcpy
 2919              	.LVL295:
 458:Core/Src/SEGGER_RTT.c ****     pRing->WrOff = WrOff + NumBytes;
 2920              		.loc 1 458 5 is_stmt 1 view .LVU1220
 2921              		.syntax unified
 2922              	@ 458 "Core/Src/SEGGER_RTT.c" 1
 2923 00ba BFF35F8F 		dmb
 2924              	
 2925              	@ 0 "" 2
 458:Core/Src/SEGGER_RTT.c ****     pRing->WrOff = WrOff + NumBytes;
 2926              		.loc 1 458 15 view .LVU1221
 459:Core/Src/SEGGER_RTT.c **** #endif
 2927              		.loc 1 459 5 view .LVU1222
 459:Core/Src/SEGGER_RTT.c **** #endif
 2928              		.loc 1 459 26 is_stmt 0 view .LVU1223
 2929              		.thumb
 2930              		.syntax unified
 2931 00be 5544     		add	r5, r5, r10
 2932              	.LVL296:
 459:Core/Src/SEGGER_RTT.c **** #endif
 2933              		.loc 1 459 18 view .LVU1224
 2934 00c0 6562     		str	r5, [r4, #36]
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccs0vIiH.s 			page 91


 2935 00c2 5746     		mov	r7, r10
 2936 00c4 B1E7     		b	.L125
 2937              	.LVL297:
 2938              	.L127:
 459:Core/Src/SEGGER_RTT.c **** #endif
 2939              		.loc 1 459 18 view .LVU1225
 2940              	.LBE160:
 2941              	.LBE159:
1138:Core/Src/SEGGER_RTT.c ****     break;
 2942              		.loc 1 1138 5 is_stmt 1 view .LVU1226
 2943              	.LBB162:
 2944              	.LBI162:
 374:Core/Src/SEGGER_RTT.c ****   unsigned NumBytesToWrite;
 2945              		.loc 1 374 17 view .LVU1227
 2946              	.LBB163:
 375:Core/Src/SEGGER_RTT.c ****   unsigned NumBytesWritten;
 2947              		.loc 1 375 3 view .LVU1228
 376:Core/Src/SEGGER_RTT.c ****   unsigned RdOff;
 2948              		.loc 1 376 3 view .LVU1229
 377:Core/Src/SEGGER_RTT.c ****   unsigned WrOff;
 2949              		.loc 1 377 3 view .LVU1230
 378:Core/Src/SEGGER_RTT.c ****   volatile char* pDst;
 2950              		.loc 1 378 3 view .LVU1231
 379:Core/Src/SEGGER_RTT.c ****   //
 2951              		.loc 1 379 3 view .LVU1232
 383:Core/Src/SEGGER_RTT.c ****   WrOff = pRing->WrOff;
 2952              		.loc 1 383 3 view .LVU1233
 384:Core/Src/SEGGER_RTT.c ****   do {
 2953              		.loc 1 384 3 view .LVU1234
 2954 00c6 00F10108 		add	r8, r0, #1
 394:Core/Src/SEGGER_RTT.c **** #if SEGGER_RTT_MEMCPY_USE_BYTELOOP
 2955              		.loc 1 394 18 is_stmt 0 view .LVU1235
 2956 00ca 08EB4808 		add	r8, r8, r8, lsl #1
 384:Core/Src/SEGGER_RTT.c ****   do {
 2957              		.loc 1 384 9 view .LVU1236
 2958 00ce 756A     		ldr	r5, [r6, #36]
 2959              	.LVL298:
 394:Core/Src/SEGGER_RTT.c **** #if SEGGER_RTT_MEMCPY_USE_BYTELOOP
 2960              		.loc 1 394 18 view .LVU1237
 2961 00d0 4FEAC808 		lsl	r8, r8, #3
 383:Core/Src/SEGGER_RTT.c ****   WrOff = pRing->WrOff;
 2962              		.loc 1 383 19 view .LVU1238
 2963 00d4 0027     		movs	r7, #0
 2964              	.LVL299:
 2965              	.L139:
 385:Core/Src/SEGGER_RTT.c ****     RdOff = pRing->RdOff;                         // May be changed by host (debug probe) in the me
 2966              		.loc 1 385 3 is_stmt 1 view .LVU1239
 386:Core/Src/SEGGER_RTT.c ****     if (RdOff > WrOff) {
 2967              		.loc 1 386 5 view .LVU1240
 388:Core/Src/SEGGER_RTT.c ****     } else {
 2968              		.loc 1 388 7 view .LVU1241
 390:Core/Src/SEGGER_RTT.c ****     }
 2969              		.loc 1 390 7 view .LVU1242
 386:Core/Src/SEGGER_RTT.c ****     if (RdOff > WrOff) {
 2970              		.loc 1 386 11 is_stmt 0 view .LVU1243
 2971 00d6 B36A     		ldr	r3, [r6, #40]
 2972              	.LVL300:
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccs0vIiH.s 			page 92


 387:Core/Src/SEGGER_RTT.c ****       NumBytesToWrite = RdOff - WrOff - 1u;
 2973              		.loc 1 387 5 is_stmt 1 view .LVU1244
 387:Core/Src/SEGGER_RTT.c ****       NumBytesToWrite = RdOff - WrOff - 1u;
 2974              		.loc 1 387 8 is_stmt 0 view .LVU1245
 2975 00d8 AB42     		cmp	r3, r5
 388:Core/Src/SEGGER_RTT.c ****     } else {
 2976              		.loc 1 388 23 view .LVU1246
 2977 00da 03F1FF32 		add	r2, r3, #-1
 387:Core/Src/SEGGER_RTT.c ****       NumBytesToWrite = RdOff - WrOff - 1u;
 2978              		.loc 1 387 8 view .LVU1247
 2979 00de 24D9     		bls	.L135
 2980              	.L150:
 390:Core/Src/SEGGER_RTT.c ****     }
 2981              		.loc 1 390 30 view .LVU1248
 2982 00e0 346A     		ldr	r4, [r6, #32]
 388:Core/Src/SEGGER_RTT.c ****     } else {
 2983              		.loc 1 388 23 view .LVU1249
 2984 00e2 531B     		subs	r3, r2, r5
 2985              	.LVL301:
 2986              	.L136:
 392:Core/Src/SEGGER_RTT.c ****     NumBytesToWrite = MIN(NumBytesToWrite, NumBytes);
 2987              		.loc 1 392 5 is_stmt 1 view .LVU1250
 2988 00e4 5345     		cmp	r3, r10
 394:Core/Src/SEGGER_RTT.c **** #if SEGGER_RTT_MEMCPY_USE_BYTELOOP
 2989              		.loc 1 394 18 is_stmt 0 view .LVU1251
 2990 00e6 09EB0802 		add	r2, r9, r8
 392:Core/Src/SEGGER_RTT.c ****     NumBytesToWrite = MIN(NumBytesToWrite, NumBytes);
 2991              		.loc 1 392 23 view .LVU1252
 2992 00ea A4EB0504 		sub	r4, r4, r5
 2993 00ee 28BF     		it	cs
 2994 00f0 5346     		movcs	r3, r10
 393:Core/Src/SEGGER_RTT.c ****     pDst = (pRing->pBuffer + WrOff) + SEGGER_RTT_UNCACHED_OFF;
 2995              		.loc 1 393 5 is_stmt 1 view .LVU1253
 393:Core/Src/SEGGER_RTT.c ****     pDst = (pRing->pBuffer + WrOff) + SEGGER_RTT_UNCACHED_OFF;
 2996              		.loc 1 393 21 is_stmt 0 view .LVU1254
 2997 00f2 9C42     		cmp	r4, r3
 394:Core/Src/SEGGER_RTT.c **** #if SEGGER_RTT_MEMCPY_USE_BYTELOOP
 2998              		.loc 1 394 10 view .LVU1255
 2999 00f4 5068     		ldr	r0, [r2, #4]
 393:Core/Src/SEGGER_RTT.c ****     pDst = (pRing->pBuffer + WrOff) + SEGGER_RTT_UNCACHED_OFF;
 3000              		.loc 1 393 21 view .LVU1256
 3001 00f6 28BF     		it	cs
 3002 00f8 1C46     		movcs	r4, r3
 3003              	.LVL302:
 394:Core/Src/SEGGER_RTT.c **** #if SEGGER_RTT_MEMCPY_USE_BYTELOOP
 3004              		.loc 1 394 5 is_stmt 1 view .LVU1257
 403:Core/Src/SEGGER_RTT.c ****     NumBytesWritten += NumBytesToWrite;
 3005              		.loc 1 403 5 view .LVU1258
 3006 00fa 2844     		add	r0, r0, r5
 3007 00fc 5946     		mov	r1, fp
 3008 00fe 2246     		mov	r2, r4
 3009 0100 FFF7FEFF 		bl	memcpy
 3010              	.LVL303:
 404:Core/Src/SEGGER_RTT.c ****     pBuffer         += NumBytesToWrite;
 3011              		.loc 1 404 5 view .LVU1259
 409:Core/Src/SEGGER_RTT.c ****       WrOff = 0u;
 3012              		.loc 1 409 8 is_stmt 0 view .LVU1260
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccs0vIiH.s 			page 93


 3013 0104 336A     		ldr	r3, [r6, #32]
 407:Core/Src/SEGGER_RTT.c **** #endif
 3014              		.loc 1 407 21 view .LVU1261
 3015 0106 2544     		add	r5, r5, r4
 3016              	.LVL304:
 412:Core/Src/SEGGER_RTT.c ****     pRing->WrOff = WrOff;
 3017              		.loc 1 412 5 is_stmt 1 view .LVU1262
 409:Core/Src/SEGGER_RTT.c ****       WrOff = 0u;
 3018              		.loc 1 409 8 is_stmt 0 view .LVU1263
 3019 0108 9D42     		cmp	r5, r3
 404:Core/Src/SEGGER_RTT.c ****     pBuffer         += NumBytesToWrite;
 3020              		.loc 1 404 21 view .LVU1264
 3021 010a 2744     		add	r7, r7, r4
 3022              	.LVL305:
 405:Core/Src/SEGGER_RTT.c ****     NumBytes        -= NumBytesToWrite;
 3023              		.loc 1 405 5 is_stmt 1 view .LVU1265
 405:Core/Src/SEGGER_RTT.c ****     NumBytes        -= NumBytesToWrite;
 3024              		.loc 1 405 21 is_stmt 0 view .LVU1266
 3025 010c A344     		add	fp, fp, r4
 3026              	.LVL306:
 406:Core/Src/SEGGER_RTT.c ****     WrOff           += NumBytesToWrite;
 3027              		.loc 1 406 5 is_stmt 1 view .LVU1267
 406:Core/Src/SEGGER_RTT.c ****     WrOff           += NumBytesToWrite;
 3028              		.loc 1 406 21 is_stmt 0 view .LVU1268
 3029 010e AAEB040A 		sub	r10, r10, r4
 3030              	.LVL307:
 407:Core/Src/SEGGER_RTT.c **** #endif
 3031              		.loc 1 407 5 is_stmt 1 view .LVU1269
 409:Core/Src/SEGGER_RTT.c ****       WrOff = 0u;
 3032              		.loc 1 409 5 view .LVU1270
 409:Core/Src/SEGGER_RTT.c ****       WrOff = 0u;
 3033              		.loc 1 409 8 is_stmt 0 view .LVU1271
 3034 0112 0FD0     		beq	.L149
 412:Core/Src/SEGGER_RTT.c ****     pRing->WrOff = WrOff;
 3035              		.loc 1 412 5 view .LVU1272
 3036              		.syntax unified
 3037              	@ 412 "Core/Src/SEGGER_RTT.c" 1
 3038 0114 BFF35F8F 		dmb
 3039              	
 3040              	@ 0 "" 2
 412:Core/Src/SEGGER_RTT.c ****     pRing->WrOff = WrOff;
 3041              		.loc 1 412 15 is_stmt 1 view .LVU1273
 413:Core/Src/SEGGER_RTT.c ****   } while (NumBytes);
 3042              		.loc 1 413 5 view .LVU1274
 413:Core/Src/SEGGER_RTT.c ****   } while (NumBytes);
 3043              		.loc 1 413 18 is_stmt 0 view .LVU1275
 3044              		.thumb
 3045              		.syntax unified
 3046 0118 7562     		str	r5, [r6, #36]
 414:Core/Src/SEGGER_RTT.c ****   return NumBytesWritten;
 3047              		.loc 1 414 12 is_stmt 1 view .LVU1276
 3048 011a BAF1000F 		cmp	r10, #0
 3049 011e 84D0     		beq	.L125
 385:Core/Src/SEGGER_RTT.c ****     RdOff = pRing->RdOff;                         // May be changed by host (debug probe) in the me
 3050              		.loc 1 385 3 view .LVU1277
 386:Core/Src/SEGGER_RTT.c ****     if (RdOff > WrOff) {
 3051              		.loc 1 386 5 view .LVU1278
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccs0vIiH.s 			page 94


 388:Core/Src/SEGGER_RTT.c ****     } else {
 3052              		.loc 1 388 7 view .LVU1279
 390:Core/Src/SEGGER_RTT.c ****     }
 3053              		.loc 1 390 7 view .LVU1280
 386:Core/Src/SEGGER_RTT.c ****     if (RdOff > WrOff) {
 3054              		.loc 1 386 11 is_stmt 0 view .LVU1281
 3055 0120 B36A     		ldr	r3, [r6, #40]
 3056              	.LVL308:
 387:Core/Src/SEGGER_RTT.c ****       NumBytesToWrite = RdOff - WrOff - 1u;
 3057              		.loc 1 387 5 is_stmt 1 view .LVU1282
 387:Core/Src/SEGGER_RTT.c ****       NumBytesToWrite = RdOff - WrOff - 1u;
 3058              		.loc 1 387 8 is_stmt 0 view .LVU1283
 3059 0122 AB42     		cmp	r3, r5
 388:Core/Src/SEGGER_RTT.c ****     } else {
 3060              		.loc 1 388 23 view .LVU1284
 3061 0124 03F1FF32 		add	r2, r3, #-1
 387:Core/Src/SEGGER_RTT.c ****       NumBytesToWrite = RdOff - WrOff - 1u;
 3062              		.loc 1 387 8 view .LVU1285
 3063 0128 DAD8     		bhi	.L150
 3064              	.LVL309:
 3065              	.L135:
 390:Core/Src/SEGGER_RTT.c ****     }
 3066              		.loc 1 390 30 view .LVU1286
 3067 012a 346A     		ldr	r4, [r6, #32]
 390:Core/Src/SEGGER_RTT.c ****     }
 3068              		.loc 1 390 23 view .LVU1287
 3069 012c 2344     		add	r3, r3, r4
 3070              	.LVL310:
 390:Core/Src/SEGGER_RTT.c ****     }
 3071              		.loc 1 390 23 view .LVU1288
 3072 012e 013B     		subs	r3, r3, #1
 3073 0130 5B1B     		subs	r3, r3, r5
 3074              	.LVL311:
 390:Core/Src/SEGGER_RTT.c ****     }
 3075              		.loc 1 390 23 view .LVU1289
 3076 0132 D7E7     		b	.L136
 3077              	.LVL312:
 3078              	.L149:
 412:Core/Src/SEGGER_RTT.c ****     pRing->WrOff = WrOff;
 3079              		.loc 1 412 5 is_stmt 1 view .LVU1290
 3080              		.syntax unified
 3081              	@ 412 "Core/Src/SEGGER_RTT.c" 1
 3082 0134 BFF35F8F 		dmb
 3083              	
 3084              	@ 0 "" 2
 412:Core/Src/SEGGER_RTT.c ****     pRing->WrOff = WrOff;
 3085              		.loc 1 412 15 view .LVU1291
 413:Core/Src/SEGGER_RTT.c ****   } while (NumBytes);
 3086              		.loc 1 413 5 view .LVU1292
 413:Core/Src/SEGGER_RTT.c ****   } while (NumBytes);
 3087              		.loc 1 413 18 is_stmt 0 view .LVU1293
 3088              		.thumb
 3089              		.syntax unified
 3090 0138 0025     		movs	r5, #0
 3091 013a 7562     		str	r5, [r6, #36]
 414:Core/Src/SEGGER_RTT.c ****   return NumBytesWritten;
 3092              		.loc 1 414 12 is_stmt 1 view .LVU1294
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccs0vIiH.s 			page 95


 3093 013c BAF1000F 		cmp	r10, #0
 3094 0140 C9D1     		bne	.L139
 3095 0142 72E7     		b	.L125
 3096              	.LVL313:
 3097              	.L148:
 414:Core/Src/SEGGER_RTT.c ****   return NumBytesWritten;
 3098              		.loc 1 414 12 is_stmt 0 view .LVU1295
 3099              	.LBE163:
 3100              	.LBE162:
 3101              	.LBB164:
 3102              	.LBB148:
 537:Core/Src/SEGGER_RTT.c ****   } else {
 3103              		.loc 1 537 5 is_stmt 1 view .LVU1296
 537:Core/Src/SEGGER_RTT.c ****   } else {
 3104              		.loc 1 537 14 is_stmt 0 view .LVU1297
 3105 0144 366A     		ldr	r6, [r6, #32]
 537:Core/Src/SEGGER_RTT.c ****   } else {
 3106              		.loc 1 537 7 view .LVU1298
 3107 0146 3744     		add	r7, r7, r6
 3108              	.LVL314:
 537:Core/Src/SEGGER_RTT.c ****   } else {
 3109              		.loc 1 537 7 view .LVU1299
 3110 0148 013F     		subs	r7, r7, #1
 3111 014a 7F1B     		subs	r7, r7, r5
 3112              	.LVL315:
 541:Core/Src/SEGGER_RTT.c **** }
 3113              		.loc 1 541 3 is_stmt 1 view .LVU1300
 541:Core/Src/SEGGER_RTT.c **** }
 3114              		.loc 1 541 3 is_stmt 0 view .LVU1301
 3115              	.LBE148:
 3116              	.LBE164:
1131:Core/Src/SEGGER_RTT.c ****     _WriteNoCheck(pRing, pData, Status);
 3117              		.loc 1 1131 5 is_stmt 1 view .LVU1302
1131:Core/Src/SEGGER_RTT.c ****     _WriteNoCheck(pRing, pData, Status);
 3118              		.loc 1 1131 12 is_stmt 0 view .LVU1303
 3119 014c 5745     		cmp	r7, r10
 3120 014e 28BF     		it	cs
 3121 0150 5746     		movcs	r7, r10
 3122              	.LVL316:
1132:Core/Src/SEGGER_RTT.c ****     break;
 3123              		.loc 1 1132 5 is_stmt 1 view .LVU1304
 3124              	.LBB165:
 436:Core/Src/SEGGER_RTT.c ****   unsigned NumBytesAtOnce;
 3125              		.loc 1 436 13 view .LVU1305
 3126              	.LBB155:
 437:Core/Src/SEGGER_RTT.c ****   unsigned WrOff;
 3127              		.loc 1 437 3 view .LVU1306
 438:Core/Src/SEGGER_RTT.c ****   unsigned Rem;
 3128              		.loc 1 438 3 view .LVU1307
 439:Core/Src/SEGGER_RTT.c ****   volatile char* pDst;
 3129              		.loc 1 439 3 view .LVU1308
 440:Core/Src/SEGGER_RTT.c **** 
 3130              		.loc 1 440 3 view .LVU1309
 442:Core/Src/SEGGER_RTT.c ****   Rem = pRing->SizeOfBuffer - WrOff;
 3131              		.loc 1 442 3 view .LVU1310
 443:Core/Src/SEGGER_RTT.c ****   if (Rem > NumBytes) {
 3132              		.loc 1 443 3 view .LVU1311
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccs0vIiH.s 			page 96


 443:Core/Src/SEGGER_RTT.c ****   if (Rem > NumBytes) {
 3133              		.loc 1 443 7 is_stmt 0 view .LVU1312
 3134 0152 721B     		subs	r2, r6, r5
 3135              	.LVL317:
 444:Core/Src/SEGGER_RTT.c ****     //
 3136              		.loc 1 444 3 is_stmt 1 view .LVU1313
 444:Core/Src/SEGGER_RTT.c ****     //
 3137              		.loc 1 444 6 is_stmt 0 view .LVU1314
 3138 0154 9742     		cmp	r7, r2
 3139 0156 FFF47BAF 		bcc	.L151
 3140              	.L134:
 479:Core/Src/SEGGER_RTT.c ****     pDst = (pRing->pBuffer + WrOff) + SEGGER_RTT_UNCACHED_OFF;
 3141              		.loc 1 479 5 is_stmt 1 view .LVU1315
 3142              	.LVL318:
 480:Core/Src/SEGGER_RTT.c ****     SEGGER_RTT_MEMCPY((void*)pDst, pData, NumBytesAtOnce);
 3143              		.loc 1 480 5 view .LVU1316
 481:Core/Src/SEGGER_RTT.c ****     NumBytesAtOnce = NumBytes - Rem;
 3144              		.loc 1 481 5 view .LVU1317
 480:Core/Src/SEGGER_RTT.c ****     SEGGER_RTT_MEMCPY((void*)pDst, pData, NumBytesAtOnce);
 3145              		.loc 1 480 18 is_stmt 0 view .LVU1318
 3146 015a 08F1010A 		add	r10, r8, #1
 3147              	.LVL319:
 480:Core/Src/SEGGER_RTT.c ****     SEGGER_RTT_MEMCPY((void*)pDst, pData, NumBytesAtOnce);
 3148              		.loc 1 480 18 view .LVU1319
 3149 015e 0AEB4A0A 		add	r10, r10, r10, lsl #1
 3150 0162 09EBCA0A 		add	r10, r9, r10, lsl #3
 481:Core/Src/SEGGER_RTT.c ****     NumBytesAtOnce = NumBytes - Rem;
 3151              		.loc 1 481 5 view .LVU1320
 3152 0166 5946     		mov	r1, fp
 3153              	.LVL320:
 480:Core/Src/SEGGER_RTT.c ****     SEGGER_RTT_MEMCPY((void*)pDst, pData, NumBytesAtOnce);
 3154              		.loc 1 480 10 view .LVU1321
 3155 0168 DAF80400 		ldr	r0, [r10, #4]
 3156              	.LVL321:
 481:Core/Src/SEGGER_RTT.c ****     NumBytesAtOnce = NumBytes - Rem;
 3157              		.loc 1 481 5 view .LVU1322
 3158 016c 0192     		str	r2, [sp, #4]
 3159 016e 2844     		add	r0, r0, r5
 3160 0170 FFF7FEFF 		bl	memcpy
 3161              	.LVL322:
 482:Core/Src/SEGGER_RTT.c ****     pDst = pRing->pBuffer + SEGGER_RTT_UNCACHED_OFF;
 3162              		.loc 1 482 5 is_stmt 1 view .LVU1323
 482:Core/Src/SEGGER_RTT.c ****     pDst = pRing->pBuffer + SEGGER_RTT_UNCACHED_OFF;
 3163              		.loc 1 482 20 is_stmt 0 view .LVU1324
 3164 0174 BE1B     		subs	r6, r7, r6
 484:Core/Src/SEGGER_RTT.c ****     RTT__DMB();                     // Force data write to be complete before writing the <WrOff>, 
 3165              		.loc 1 484 5 view .LVU1325
 3166 0176 019A     		ldr	r2, [sp, #4]
 3167 0178 DAF80400 		ldr	r0, [r10, #4]
 482:Core/Src/SEGGER_RTT.c ****     pDst = pRing->pBuffer + SEGGER_RTT_UNCACHED_OFF;
 3168              		.loc 1 482 20 view .LVU1326
 3169 017c 2E44     		add	r6, r6, r5
 3170              	.LVL323:
 483:Core/Src/SEGGER_RTT.c ****     SEGGER_RTT_MEMCPY((void*)pDst, pData + Rem, NumBytesAtOnce);
 3171              		.loc 1 483 5 is_stmt 1 view .LVU1327
 484:Core/Src/SEGGER_RTT.c ****     RTT__DMB();                     // Force data write to be complete before writing the <WrOff>, 
 3172              		.loc 1 484 5 view .LVU1328
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccs0vIiH.s 			page 97


 3173 017e 0BEB0201 		add	r1, fp, r2
 3174 0182 3246     		mov	r2, r6
 3175 0184 FFF7FEFF 		bl	memcpy
 3176              	.LVL324:
 485:Core/Src/SEGGER_RTT.c ****     pRing->WrOff = NumBytesAtOnce;
 3177              		.loc 1 485 5 view .LVU1329
 3178              		.syntax unified
 3179              	@ 485 "Core/Src/SEGGER_RTT.c" 1
 3180 0188 BFF35F8F 		dmb
 3181              	
 3182              	@ 0 "" 2
 485:Core/Src/SEGGER_RTT.c ****     pRing->WrOff = NumBytesAtOnce;
 3183              		.loc 1 485 15 view .LVU1330
 486:Core/Src/SEGGER_RTT.c **** #endif
 3184              		.loc 1 486 5 view .LVU1331
 486:Core/Src/SEGGER_RTT.c **** #endif
 3185              		.loc 1 486 18 is_stmt 0 view .LVU1332
 3186              		.thumb
 3187              		.syntax unified
 3188 018c 4444     		add	r4, r4, r8
 3189 018e 09EBC404 		add	r4, r9, r4, lsl #3
 3190              	.LBE155:
 3191              	.LBE165:
 3192              		.loc 1 1148 1 view .LVU1333
 3193 0192 3846     		mov	r0, r7
 3194              	.LBB166:
 3195              	.LBB156:
 486:Core/Src/SEGGER_RTT.c **** #endif
 3196              		.loc 1 486 18 view .LVU1334
 3197 0194 6662     		str	r6, [r4, #36]
 3198              	.LBE156:
 3199              	.LBE166:
 3200              		.loc 1 1148 1 view .LVU1335
 3201 0196 03B0     		add	sp, sp, #12
 3202              		.cfi_remember_state
 3203              		.cfi_def_cfa_offset 36
 3204              		@ sp needed
 3205 0198 BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 3206              	.LVL325:
 3207              	.L131:
 3208              		.cfi_restore_state
 3209              	.LBB167:
 3210              	.LBB161:
 479:Core/Src/SEGGER_RTT.c ****     pDst = (pRing->pBuffer + WrOff) + SEGGER_RTT_UNCACHED_OFF;
 3211              		.loc 1 479 5 is_stmt 1 view .LVU1336
 480:Core/Src/SEGGER_RTT.c ****     SEGGER_RTT_MEMCPY((void*)pDst, pData, NumBytesAtOnce);
 3212              		.loc 1 480 5 view .LVU1337
 481:Core/Src/SEGGER_RTT.c ****     NumBytesAtOnce = NumBytes - Rem;
 3213              		.loc 1 481 5 view .LVU1338
 480:Core/Src/SEGGER_RTT.c ****     SEGGER_RTT_MEMCPY((void*)pDst, pData, NumBytesAtOnce);
 3214              		.loc 1 480 10 is_stmt 0 view .LVU1339
 3215 019c D8F80400 		ldr	r0, [r8, #4]
 3216              	.LVL326:
 481:Core/Src/SEGGER_RTT.c ****     NumBytesAtOnce = NumBytes - Rem;
 3217              		.loc 1 481 5 view .LVU1340
 3218 01a0 2844     		add	r0, r0, r5
 482:Core/Src/SEGGER_RTT.c ****     pDst = pRing->pBuffer + SEGGER_RTT_UNCACHED_OFF;
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccs0vIiH.s 			page 98


 3219              		.loc 1 482 20 view .LVU1341
 3220 01a2 5544     		add	r5, r5, r10
 3221              	.LVL327:
 481:Core/Src/SEGGER_RTT.c ****     NumBytesAtOnce = NumBytes - Rem;
 3222              		.loc 1 481 5 view .LVU1342
 3223 01a4 3246     		mov	r2, r6
 482:Core/Src/SEGGER_RTT.c ****     pDst = pRing->pBuffer + SEGGER_RTT_UNCACHED_OFF;
 3224              		.loc 1 482 20 view .LVU1343
 3225 01a6 ED1B     		subs	r5, r5, r7
 481:Core/Src/SEGGER_RTT.c ****     NumBytesAtOnce = NumBytes - Rem;
 3226              		.loc 1 481 5 view .LVU1344
 3227 01a8 FFF7FEFF 		bl	memcpy
 3228              	.LVL328:
 482:Core/Src/SEGGER_RTT.c ****     pDst = pRing->pBuffer + SEGGER_RTT_UNCACHED_OFF;
 3229              		.loc 1 482 5 is_stmt 1 view .LVU1345
 483:Core/Src/SEGGER_RTT.c ****     SEGGER_RTT_MEMCPY((void*)pDst, pData + Rem, NumBytesAtOnce);
 3230              		.loc 1 483 5 view .LVU1346
 484:Core/Src/SEGGER_RTT.c ****     RTT__DMB();                     // Force data write to be complete before writing the <WrOff>, 
 3231              		.loc 1 484 5 view .LVU1347
 3232 01ac D8F80400 		ldr	r0, [r8, #4]
 3233 01b0 0BEB0601 		add	r1, fp, r6
 3234 01b4 2A46     		mov	r2, r5
 3235 01b6 FFF7FEFF 		bl	memcpy
 3236              	.LVL329:
 485:Core/Src/SEGGER_RTT.c ****     pRing->WrOff = NumBytesAtOnce;
 3237              		.loc 1 485 5 view .LVU1348
 3238              		.syntax unified
 3239              	@ 485 "Core/Src/SEGGER_RTT.c" 1
 3240 01ba BFF35F8F 		dmb
 3241              	
 3242              	@ 0 "" 2
 485:Core/Src/SEGGER_RTT.c ****     pRing->WrOff = NumBytesAtOnce;
 3243              		.loc 1 485 15 view .LVU1349
 486:Core/Src/SEGGER_RTT.c **** #endif
 3244              		.loc 1 486 5 view .LVU1350
 486:Core/Src/SEGGER_RTT.c **** #endif
 3245              		.loc 1 486 18 is_stmt 0 view .LVU1351
 3246              		.thumb
 3247              		.syntax unified
 3248 01be 6562     		str	r5, [r4, #36]
 3249 01c0 5746     		mov	r7, r10
 3250 01c2 32E7     		b	.L125
 3251              	.L153:
 3252              		.align	2
 3253              	.L152:
 3254 01c4 00000000 		.word	.LANCHOR0
 3255              	.LBE161:
 3256              	.LBE167:
 3257              		.cfi_endproc
 3258              	.LFE11:
 3260              		.section	.text.SEGGER_RTT_WriteDownBuffer,"ax",%progbits
 3261              		.align	1
 3262              		.p2align 2,,3
 3263              		.global	SEGGER_RTT_WriteDownBuffer
 3264              		.syntax unified
 3265              		.thumb
 3266              		.thumb_func
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccs0vIiH.s 			page 99


 3268              	SEGGER_RTT_WriteDownBuffer:
 3269              	.LVL330:
 3270              	.LFB12:
1149:Core/Src/SEGGER_RTT.c **** 
1150:Core/Src/SEGGER_RTT.c **** /*********************************************************************
1151:Core/Src/SEGGER_RTT.c **** *
1152:Core/Src/SEGGER_RTT.c **** *       SEGGER_RTT_WriteDownBuffer
1153:Core/Src/SEGGER_RTT.c **** *
1154:Core/Src/SEGGER_RTT.c **** *  Function description
1155:Core/Src/SEGGER_RTT.c **** *    Stores a specified number of characters in SEGGER RTT control block in a <Down> buffer.
1156:Core/Src/SEGGER_RTT.c **** *
1157:Core/Src/SEGGER_RTT.c **** *  Parameters
1158:Core/Src/SEGGER_RTT.c **** *    BufferIndex  Index of "Up"-buffer to be used (e.g. 0 for "Terminal").
1159:Core/Src/SEGGER_RTT.c **** *    pBuffer      Pointer to character array. Does not need to point to a \0 terminated string.
1160:Core/Src/SEGGER_RTT.c **** *    NumBytes     Number of bytes to be stored in the SEGGER RTT control block.
1161:Core/Src/SEGGER_RTT.c **** *
1162:Core/Src/SEGGER_RTT.c **** *  Return value
1163:Core/Src/SEGGER_RTT.c **** *    Number of bytes which have been stored in the "Down"-buffer.
1164:Core/Src/SEGGER_RTT.c **** *
1165:Core/Src/SEGGER_RTT.c **** *  Notes
1166:Core/Src/SEGGER_RTT.c **** *    (1) Data is stored according to buffer flags.
1167:Core/Src/SEGGER_RTT.c **** *
1168:Core/Src/SEGGER_RTT.c **** *  Additional information
1169:Core/Src/SEGGER_RTT.c **** *    This function must not be called when J-Link might also do RTT.
1170:Core/Src/SEGGER_RTT.c **** *    This function locks against all other RTT operations. I.e. during
1171:Core/Src/SEGGER_RTT.c **** *    the write operation, writing from the application is also locked.
1172:Core/Src/SEGGER_RTT.c **** *    If only one consumer writes to the down buffer, 
1173:Core/Src/SEGGER_RTT.c **** *    call SEGGER_RTT_WriteDownBufferNoLock() instead.
1174:Core/Src/SEGGER_RTT.c **** */
1175:Core/Src/SEGGER_RTT.c **** unsigned SEGGER_RTT_WriteDownBuffer(unsigned BufferIndex, const void* pBuffer, unsigned NumBytes) {
 3271              		.loc 1 1175 99 is_stmt 1 view -0
 3272              		.cfi_startproc
 3273              		@ args = 0, pretend = 0, frame = 0
 3274              		@ frame_needed = 0, uses_anonymous_args = 0
1176:Core/Src/SEGGER_RTT.c ****   unsigned Status;
 3275              		.loc 1 1176 3 view .LVU1353
 3276              	.LBB184:
1177:Core/Src/SEGGER_RTT.c **** 
1178:Core/Src/SEGGER_RTT.c ****   INIT();
 3277              		.loc 1 1178 3 view .LVU1354
 3278              		.loc 1 1178 3 view .LVU1355
 3279              		.loc 1 1178 3 view .LVU1356
 3280              		.loc 1 1178 3 view .LVU1357
 3281              	.LBE184:
1175:Core/Src/SEGGER_RTT.c ****   unsigned Status;
 3282              		.loc 1 1175 99 is_stmt 0 view .LVU1358
 3283 0000 2DE9F84F 		push	{r3, r4, r5, r6, r7, r8, r9, r10, fp, lr}
 3284              		.cfi_def_cfa_offset 40
 3285              		.cfi_offset 3, -40
 3286              		.cfi_offset 4, -36
 3287              		.cfi_offset 5, -32
 3288              		.cfi_offset 6, -28
 3289              		.cfi_offset 7, -24
 3290              		.cfi_offset 8, -20
 3291              		.cfi_offset 9, -16
 3292              		.cfi_offset 10, -12
 3293              		.cfi_offset 11, -8
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccs0vIiH.s 			page 100


 3294              		.cfi_offset 14, -4
 3295              	.LBB187:
 3296              		.loc 1 1178 3 view .LVU1359
 3297 0004 7B4C     		ldr	r4, .L181
 3298 0006 2378     		ldrb	r3, [r4]	@ zero_extendqisi2
 3299              	.LBE187:
1175:Core/Src/SEGGER_RTT.c ****   unsigned Status;
 3300              		.loc 1 1175 99 view .LVU1360
 3301 0008 0546     		mov	r5, r0
 3302 000a 8946     		mov	r9, r1
 3303 000c 9046     		mov	r8, r2
 3304              	.LBB188:
 3305              		.loc 1 1178 3 view .LVU1361
 3306 000e C3B1     		cbz	r3, .L176
 3307              	.LVL331:
 3308              	.L155:
 3309              		.loc 1 1178 3 is_stmt 1 discriminator 3 view .LVU1362
 3310              	.LBE188:
 3311              		.loc 1 1178 9 discriminator 3 view .LVU1363
 3312              	.LBB189:
1179:Core/Src/SEGGER_RTT.c ****   SEGGER_RTT_LOCK();
 3313              		.loc 1 1179 3 discriminator 3 view .LVU1364
 3314              		.loc 1 1179 3 discriminator 3 view .LVU1365
 3315              		.syntax unified
 3316              	@ 1179 "Core/Src/SEGGER_RTT.c" 1
 3317 0010 EFF3118A 		mrs   r10, basepri  
 3318 0014 4FF02001 		mov   r1, #32       
 3319 0018 81F31188 		msr   basepri, r1  
 3320              		
 3321              	@ 0 "" 2
 3322              	.LVL332:
 3323              		.loc 1 1179 20 discriminator 3 view .LVU1366
1180:Core/Src/SEGGER_RTT.c ****   Status = SEGGER_RTT_WriteDownBufferNoLock(BufferIndex, pBuffer, NumBytes);  // Call the non-locki
 3324              		.loc 1 1180 3 discriminator 3 view .LVU1367
 3325              		.thumb
 3326              		.syntax unified
 3327              	.LBB190:
 3328              	.LBI190:
1024:Core/Src/SEGGER_RTT.c ****   unsigned                Status;
 3329              		.loc 1 1024 10 discriminator 3 view .LVU1368
 3330              	.LBB191:
1025:Core/Src/SEGGER_RTT.c ****   unsigned                Avail;
 3331              		.loc 1 1025 3 discriminator 3 view .LVU1369
1026:Core/Src/SEGGER_RTT.c ****   const char*             pData;
 3332              		.loc 1 1026 3 discriminator 3 view .LVU1370
1027:Core/Src/SEGGER_RTT.c ****   SEGGER_RTT_BUFFER_UP*   pRing;
 3333              		.loc 1 1027 3 discriminator 3 view .LVU1371
1028:Core/Src/SEGGER_RTT.c ****   //
 3334              		.loc 1 1028 3 discriminator 3 view .LVU1372
1033:Core/Src/SEGGER_RTT.c ****   pRing = (SEGGER_RTT_BUFFER_UP*)((char*)&_SEGGER_RTT.aDown[BufferIndex] + SEGGER_RTT_UNCACHED_OFF)
 3335              		.loc 1 1033 3 discriminator 3 view .LVU1373
1034:Core/Src/SEGGER_RTT.c ****   //
 3336              		.loc 1 1034 3 discriminator 3 view .LVU1374
1034:Core/Src/SEGGER_RTT.c ****   //
 3337              		.loc 1 1034 9 is_stmt 0 discriminator 3 view .LVU1375
 3338 001c 05EB4505 		add	r5, r5, r5, lsl #1
 3339              	.LVL333:
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccs0vIiH.s 			page 101


1034:Core/Src/SEGGER_RTT.c ****   //
 3340              		.loc 1 1034 9 discriminator 3 view .LVU1376
 3341 0020 04EBC504 		add	r4, r4, r5, lsl #3
 3342 0024 6034     		adds	r4, r4, #96
 3343              	.LVL334:
1038:Core/Src/SEGGER_RTT.c ****   case SEGGER_RTT_MODE_NO_BLOCK_SKIP:
 3344              		.loc 1 1038 3 is_stmt 1 discriminator 3 view .LVU1377
1038:Core/Src/SEGGER_RTT.c ****   case SEGGER_RTT_MODE_NO_BLOCK_SKIP:
 3345              		.loc 1 1038 16 is_stmt 0 discriminator 3 view .LVU1378
 3346 0026 6769     		ldr	r7, [r4, #20]
1038:Core/Src/SEGGER_RTT.c ****   case SEGGER_RTT_MODE_NO_BLOCK_SKIP:
 3347              		.loc 1 1038 3 discriminator 3 view .LVU1379
 3348 0028 012F     		cmp	r7, #1
 3349 002a 00F09280 		beq	.L156
1038:Core/Src/SEGGER_RTT.c ****   case SEGGER_RTT_MODE_NO_BLOCK_SKIP:
 3350              		.loc 1 1038 3 view .LVU1380
 3351 002e 022F     		cmp	r7, #2
 3352 0030 59D0     		beq	.L157
 3353 0032 002F     		cmp	r7, #0
 3354 0034 3DD0     		beq	.L177
 3355 0036 0027     		movs	r7, #0
 3356              	.LVL335:
 3357              	.L158:
1073:Core/Src/SEGGER_RTT.c **** }
 3358              		.loc 1 1073 3 is_stmt 1 view .LVU1381
1073:Core/Src/SEGGER_RTT.c **** }
 3359              		.loc 1 1073 3 is_stmt 0 view .LVU1382
 3360              	.LBE191:
 3361              	.LBE190:
1181:Core/Src/SEGGER_RTT.c ****   SEGGER_RTT_UNLOCK();
 3362              		.loc 1 1181 3 is_stmt 1 view .LVU1383
 3363              		.syntax unified
 3364              	@ 1181 "Core/Src/SEGGER_RTT.c" 1
 3365 0038 8AF31188 		msr   basepri, r10  
 3366              		
 3367              	@ 0 "" 2
 3368              		.thumb
 3369              		.syntax unified
 3370              	.LBE189:
 3371              		.loc 1 1181 22 view .LVU1384
1182:Core/Src/SEGGER_RTT.c ****   return Status;
 3372              		.loc 1 1182 3 view .LVU1385
1183:Core/Src/SEGGER_RTT.c **** }
 3373              		.loc 1 1183 1 is_stmt 0 view .LVU1386
 3374 003c 3846     		mov	r0, r7
 3375 003e BDE8F88F 		pop	{r3, r4, r5, r6, r7, r8, r9, r10, fp, pc}
 3376              	.LVL336:
 3377              	.L176:
 3378              		.loc 1 1183 1 view .LVU1387
 3379 0042 03F0FF06 		and	r6, r3, #255
 3380              	.LBB222:
1178:Core/Src/SEGGER_RTT.c ****   SEGGER_RTT_LOCK();
 3381              		.loc 1 1178 3 is_stmt 1 view .LVU1388
 3382              	.LBB185:
 3383              	.LBI185:
 314:Core/Src/SEGGER_RTT.c ****   volatile SEGGER_RTT_CB* p;   // Volatile to make sure that compiler cannot change the order of ac
 3384              		.loc 1 314 13 view .LVU1389
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccs0vIiH.s 			page 102


 3385              	.LBB186:
 315:Core/Src/SEGGER_RTT.c ****   static const char _aInitStr[] = "\0\0\0\0\0\0TTR REGGES";  // Init complete ID string to make sur
 3386              		.loc 1 315 3 view .LVU1390
 316:Core/Src/SEGGER_RTT.c ****   unsigned i;
 3387              		.loc 1 316 3 view .LVU1391
 317:Core/Src/SEGGER_RTT.c ****   //
 3388              		.loc 1 317 3 view .LVU1392
 321:Core/Src/SEGGER_RTT.c ****   memset((SEGGER_RTT_CB*)p, 0, sizeof(_SEGGER_RTT));         // Make sure that the RTT CB is always
 3389              		.loc 1 321 3 view .LVU1393
 3390              	.LVL337:
 322:Core/Src/SEGGER_RTT.c ****   p->MaxNumUpBuffers    = SEGGER_RTT_MAX_NUM_UP_BUFFERS;
 3391              		.loc 1 322 3 view .LVU1394
 3392 0046 3146     		mov	r1, r6
 3393              	.LVL338:
 322:Core/Src/SEGGER_RTT.c ****   p->MaxNumUpBuffers    = SEGGER_RTT_MAX_NUM_UP_BUFFERS;
 3394              		.loc 1 322 3 is_stmt 0 view .LVU1395
 3395 0048 7822     		movs	r2, #120
 3396              	.LVL339:
 322:Core/Src/SEGGER_RTT.c ****   p->MaxNumUpBuffers    = SEGGER_RTT_MAX_NUM_UP_BUFFERS;
 3397              		.loc 1 322 3 view .LVU1396
 3398 004a 04F13000 		add	r0, r4, #48
 3399              	.LVL340:
 322:Core/Src/SEGGER_RTT.c ****   p->MaxNumUpBuffers    = SEGGER_RTT_MAX_NUM_UP_BUFFERS;
 3400              		.loc 1 322 3 view .LVU1397
 3401 004e FFF7FEFF 		bl	memset
 3402              	.LVL341:
 323:Core/Src/SEGGER_RTT.c ****   p->MaxNumDownBuffers  = SEGGER_RTT_MAX_NUM_DOWN_BUFFERS;
 3403              		.loc 1 323 3 is_stmt 1 view .LVU1398
 323:Core/Src/SEGGER_RTT.c ****   p->MaxNumDownBuffers  = SEGGER_RTT_MAX_NUM_DOWN_BUFFERS;
 3404              		.loc 1 323 25 is_stmt 0 view .LVU1399
 3405 0052 0322     		movs	r2, #3
 3406 0054 2261     		str	r2, [r4, #16]
 324:Core/Src/SEGGER_RTT.c ****   //
 3407              		.loc 1 324 3 is_stmt 1 view .LVU1400
 328:Core/Src/SEGGER_RTT.c ****   p->aUp[0].pBuffer       = _acUpBuffer;
 3408              		.loc 1 328 27 is_stmt 0 view .LVU1401
 3409 0056 684B     		ldr	r3, .L181+4
 324:Core/Src/SEGGER_RTT.c ****   //
 3410              		.loc 1 324 25 view .LVU1402
 3411 0058 6261     		str	r2, [r4, #20]
 328:Core/Src/SEGGER_RTT.c ****   p->aUp[0].pBuffer       = _acUpBuffer;
 3412              		.loc 1 328 3 is_stmt 1 view .LVU1403
 330:Core/Src/SEGGER_RTT.c ****   p->aUp[0].RdOff         = 0u;
 3413              		.loc 1 330 27 is_stmt 0 view .LVU1404
 3414 005a 4FF48061 		mov	r1, #1024
 329:Core/Src/SEGGER_RTT.c ****   p->aUp[0].SizeOfBuffer  = BUFFER_SIZE_UP;
 3415              		.loc 1 329 27 view .LVU1405
 3416 005e 674A     		ldr	r2, .L181+8
 328:Core/Src/SEGGER_RTT.c ****   p->aUp[0].pBuffer       = _acUpBuffer;
 3417              		.loc 1 328 27 view .LVU1406
 3418 0060 A361     		str	r3, [r4, #24]
 329:Core/Src/SEGGER_RTT.c ****   p->aUp[0].SizeOfBuffer  = BUFFER_SIZE_UP;
 3419              		.loc 1 329 3 is_stmt 1 view .LVU1407
 329:Core/Src/SEGGER_RTT.c ****   p->aUp[0].SizeOfBuffer  = BUFFER_SIZE_UP;
 3420              		.loc 1 329 27 is_stmt 0 view .LVU1408
 3421 0062 E261     		str	r2, [r4, #28]
 330:Core/Src/SEGGER_RTT.c ****   p->aUp[0].RdOff         = 0u;
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccs0vIiH.s 			page 103


 3422              		.loc 1 330 3 is_stmt 1 view .LVU1409
 330:Core/Src/SEGGER_RTT.c ****   p->aUp[0].RdOff         = 0u;
 3423              		.loc 1 330 27 is_stmt 0 view .LVU1410
 3424 0064 2162     		str	r1, [r4, #32]
 331:Core/Src/SEGGER_RTT.c ****   p->aUp[0].WrOff         = 0u;
 3425              		.loc 1 331 3 is_stmt 1 view .LVU1411
 338:Core/Src/SEGGER_RTT.c ****   p->aDown[0].SizeOfBuffer  = BUFFER_SIZE_DOWN;
 3426              		.loc 1 338 29 is_stmt 0 view .LVU1412
 3427 0066 664A     		ldr	r2, .L181+12
 331:Core/Src/SEGGER_RTT.c ****   p->aUp[0].WrOff         = 0u;
 3428              		.loc 1 331 27 view .LVU1413
 3429 0068 A662     		str	r6, [r4, #40]
 332:Core/Src/SEGGER_RTT.c ****   p->aUp[0].Flags         = SEGGER_RTT_MODE_DEFAULT;
 3430              		.loc 1 332 3 is_stmt 1 view .LVU1414
 332:Core/Src/SEGGER_RTT.c ****   p->aUp[0].Flags         = SEGGER_RTT_MODE_DEFAULT;
 3431              		.loc 1 332 27 is_stmt 0 view .LVU1415
 3432 006a 6662     		str	r6, [r4, #36]
 333:Core/Src/SEGGER_RTT.c ****   //
 3433              		.loc 1 333 3 is_stmt 1 view .LVU1416
 333:Core/Src/SEGGER_RTT.c ****   //
 3434              		.loc 1 333 27 is_stmt 0 view .LVU1417
 3435 006c E662     		str	r6, [r4, #44]
 337:Core/Src/SEGGER_RTT.c ****   p->aDown[0].pBuffer       = _acDownBuffer;
 3436              		.loc 1 337 3 is_stmt 1 view .LVU1418
 337:Core/Src/SEGGER_RTT.c ****   p->aDown[0].pBuffer       = _acDownBuffer;
 3437              		.loc 1 337 29 is_stmt 0 view .LVU1419
 3438 006e 2366     		str	r3, [r4, #96]
 338:Core/Src/SEGGER_RTT.c ****   p->aDown[0].SizeOfBuffer  = BUFFER_SIZE_DOWN;
 3439              		.loc 1 338 3 is_stmt 1 view .LVU1420
 339:Core/Src/SEGGER_RTT.c ****   p->aDown[0].RdOff         = 0u;
 3440              		.loc 1 339 29 is_stmt 0 view .LVU1421
 3441 0070 1023     		movs	r3, #16
 338:Core/Src/SEGGER_RTT.c ****   p->aDown[0].SizeOfBuffer  = BUFFER_SIZE_DOWN;
 3442              		.loc 1 338 29 view .LVU1422
 3443 0072 6266     		str	r2, [r4, #100]
 339:Core/Src/SEGGER_RTT.c ****   p->aDown[0].RdOff         = 0u;
 3444              		.loc 1 339 3 is_stmt 1 view .LVU1423
 339:Core/Src/SEGGER_RTT.c ****   p->aDown[0].RdOff         = 0u;
 3445              		.loc 1 339 29 is_stmt 0 view .LVU1424
 3446 0074 A366     		str	r3, [r4, #104]
 340:Core/Src/SEGGER_RTT.c ****   p->aDown[0].WrOff         = 0u;
 3447              		.loc 1 340 3 is_stmt 1 view .LVU1425
 340:Core/Src/SEGGER_RTT.c ****   p->aDown[0].WrOff         = 0u;
 3448              		.loc 1 340 29 is_stmt 0 view .LVU1426
 3449 0076 2667     		str	r6, [r4, #112]
 341:Core/Src/SEGGER_RTT.c ****   p->aDown[0].Flags         = SEGGER_RTT_MODE_DEFAULT;
 3450              		.loc 1 341 3 is_stmt 1 view .LVU1427
 341:Core/Src/SEGGER_RTT.c ****   p->aDown[0].Flags         = SEGGER_RTT_MODE_DEFAULT;
 3451              		.loc 1 341 29 is_stmt 0 view .LVU1428
 3452 0078 E666     		str	r6, [r4, #108]
 342:Core/Src/SEGGER_RTT.c ****   //
 3453              		.loc 1 342 3 is_stmt 1 view .LVU1429
 342:Core/Src/SEGGER_RTT.c ****   //
 3454              		.loc 1 342 29 is_stmt 0 view .LVU1430
 3455 007a 6667     		str	r6, [r4, #116]
 348:Core/Src/SEGGER_RTT.c ****   for (i = 0; i < sizeof(_aInitStr) - 1; ++i) {
 3456              		.loc 1 348 3 is_stmt 1 view .LVU1431
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccs0vIiH.s 			page 104


 3457              		.syntax unified
 3458              	@ 348 "Core/Src/SEGGER_RTT.c" 1
 3459 007c BFF35F8F 		dmb
 3460              	
 3461              	@ 0 "" 2
 348:Core/Src/SEGGER_RTT.c ****   for (i = 0; i < sizeof(_aInitStr) - 1; ++i) {
 3462              		.loc 1 348 13 view .LVU1432
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 3463              		.loc 1 349 3 view .LVU1433
 3464              	.LVL342:
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 3465              		.loc 1 349 17 view .LVU1434
 350:Core/Src/SEGGER_RTT.c ****   }
 3466              		.loc 1 350 5 view .LVU1435
 350:Core/Src/SEGGER_RTT.c ****   }
 3467              		.loc 1 350 16 is_stmt 0 view .LVU1436
 3468              		.thumb
 3469              		.syntax unified
 3470 0080 4521     		movs	r1, #69
 3471 0082 4720     		movs	r0, #71
 3472 0084 5327     		movs	r7, #83
 3473 0086 2770     		strb	r7, [r4]
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 3474              		.loc 1 349 42 is_stmt 1 view .LVU1437
 3475              	.LVL343:
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 3476              		.loc 1 349 17 view .LVU1438
 350:Core/Src/SEGGER_RTT.c ****   }
 3477              		.loc 1 350 5 view .LVU1439
 350:Core/Src/SEGGER_RTT.c ****   }
 3478              		.loc 1 350 16 is_stmt 0 view .LVU1440
 3479 0088 5222     		movs	r2, #82
 3480 008a 6170     		strb	r1, [r4, #1]
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 3481              		.loc 1 349 42 is_stmt 1 view .LVU1441
 3482              	.LVL344:
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 3483              		.loc 1 349 17 view .LVU1442
 350:Core/Src/SEGGER_RTT.c ****   }
 3484              		.loc 1 350 5 view .LVU1443
 350:Core/Src/SEGGER_RTT.c ****   }
 3485              		.loc 1 350 16 is_stmt 0 view .LVU1444
 3486 008c 5423     		movs	r3, #84
 3487 008e A070     		strb	r0, [r4, #2]
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 3488              		.loc 1 349 42 is_stmt 1 view .LVU1445
 3489              	.LVL345:
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 3490              		.loc 1 349 17 view .LVU1446
 350:Core/Src/SEGGER_RTT.c ****   }
 3491              		.loc 1 350 5 view .LVU1447
 350:Core/Src/SEGGER_RTT.c ****   }
 3492              		.loc 1 350 16 is_stmt 0 view .LVU1448
 3493 0090 E070     		strb	r0, [r4, #3]
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 3494              		.loc 1 349 42 is_stmt 1 view .LVU1449
 3495              	.LVL346:
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccs0vIiH.s 			page 105


 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 3496              		.loc 1 349 17 view .LVU1450
 350:Core/Src/SEGGER_RTT.c ****   }
 3497              		.loc 1 350 5 view .LVU1451
 350:Core/Src/SEGGER_RTT.c ****   }
 3498              		.loc 1 350 16 is_stmt 0 view .LVU1452
 3499 0092 2171     		strb	r1, [r4, #4]
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 3500              		.loc 1 349 42 is_stmt 1 view .LVU1453
 3501              	.LVL347:
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 3502              		.loc 1 349 17 view .LVU1454
 350:Core/Src/SEGGER_RTT.c ****   }
 3503              		.loc 1 350 5 view .LVU1455
 350:Core/Src/SEGGER_RTT.c ****   }
 3504              		.loc 1 350 16 is_stmt 0 view .LVU1456
 3505 0094 2021     		movs	r1, #32
 3506 0096 6271     		strb	r2, [r4, #5]
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 3507              		.loc 1 349 42 is_stmt 1 view .LVU1457
 3508              	.LVL348:
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 3509              		.loc 1 349 17 view .LVU1458
 350:Core/Src/SEGGER_RTT.c ****   }
 3510              		.loc 1 350 5 view .LVU1459
 350:Core/Src/SEGGER_RTT.c ****   }
 3511              		.loc 1 350 16 is_stmt 0 view .LVU1460
 3512 0098 A171     		strb	r1, [r4, #6]
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 3513              		.loc 1 349 42 is_stmt 1 view .LVU1461
 3514              	.LVL349:
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 3515              		.loc 1 349 17 view .LVU1462
 350:Core/Src/SEGGER_RTT.c ****   }
 3516              		.loc 1 350 5 view .LVU1463
 350:Core/Src/SEGGER_RTT.c ****   }
 3517              		.loc 1 350 16 is_stmt 0 view .LVU1464
 3518 009a E271     		strb	r2, [r4, #7]
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 3519              		.loc 1 349 42 is_stmt 1 view .LVU1465
 3520              	.LVL350:
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 3521              		.loc 1 349 17 view .LVU1466
 350:Core/Src/SEGGER_RTT.c ****   }
 3522              		.loc 1 350 5 view .LVU1467
 350:Core/Src/SEGGER_RTT.c ****   }
 3523              		.loc 1 350 16 is_stmt 0 view .LVU1468
 3524 009c 2372     		strb	r3, [r4, #8]
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 3525              		.loc 1 349 42 is_stmt 1 view .LVU1469
 3526              	.LVL351:
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 3527              		.loc 1 349 17 view .LVU1470
 350:Core/Src/SEGGER_RTT.c ****   }
 3528              		.loc 1 350 5 view .LVU1471
 350:Core/Src/SEGGER_RTT.c ****   }
 3529              		.loc 1 350 16 is_stmt 0 view .LVU1472
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccs0vIiH.s 			page 106


 3530 009e 6372     		strb	r3, [r4, #9]
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 3531              		.loc 1 349 42 is_stmt 1 view .LVU1473
 3532              	.LVL352:
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 3533              		.loc 1 349 17 view .LVU1474
 350:Core/Src/SEGGER_RTT.c ****   }
 3534              		.loc 1 350 5 view .LVU1475
 350:Core/Src/SEGGER_RTT.c ****   }
 3535              		.loc 1 350 16 is_stmt 0 view .LVU1476
 3536 00a0 A672     		strb	r6, [r4, #10]
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 3537              		.loc 1 349 42 is_stmt 1 view .LVU1477
 3538              	.LVL353:
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 3539              		.loc 1 349 17 view .LVU1478
 350:Core/Src/SEGGER_RTT.c ****   }
 3540              		.loc 1 350 5 view .LVU1479
 350:Core/Src/SEGGER_RTT.c ****   }
 3541              		.loc 1 350 16 is_stmt 0 view .LVU1480
 3542 00a2 E672     		strb	r6, [r4, #11]
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 3543              		.loc 1 349 42 is_stmt 1 view .LVU1481
 3544              	.LVL354:
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 3545              		.loc 1 349 17 view .LVU1482
 350:Core/Src/SEGGER_RTT.c ****   }
 3546              		.loc 1 350 5 view .LVU1483
 350:Core/Src/SEGGER_RTT.c ****   }
 3547              		.loc 1 350 16 is_stmt 0 view .LVU1484
 3548 00a4 2673     		strb	r6, [r4, #12]
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 3549              		.loc 1 349 42 is_stmt 1 view .LVU1485
 3550              	.LVL355:
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 3551              		.loc 1 349 17 view .LVU1486
 350:Core/Src/SEGGER_RTT.c ****   }
 3552              		.loc 1 350 5 view .LVU1487
 350:Core/Src/SEGGER_RTT.c ****   }
 3553              		.loc 1 350 16 is_stmt 0 view .LVU1488
 3554 00a6 6673     		strb	r6, [r4, #13]
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 3555              		.loc 1 349 42 is_stmt 1 view .LVU1489
 3556              	.LVL356:
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 3557              		.loc 1 349 17 view .LVU1490
 350:Core/Src/SEGGER_RTT.c ****   }
 3558              		.loc 1 350 5 view .LVU1491
 350:Core/Src/SEGGER_RTT.c ****   }
 3559              		.loc 1 350 16 is_stmt 0 view .LVU1492
 3560 00a8 A673     		strb	r6, [r4, #14]
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 3561              		.loc 1 349 42 is_stmt 1 view .LVU1493
 3562              	.LVL357:
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 3563              		.loc 1 349 17 view .LVU1494
 350:Core/Src/SEGGER_RTT.c ****   }
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccs0vIiH.s 			page 107


 3564              		.loc 1 350 5 view .LVU1495
 350:Core/Src/SEGGER_RTT.c ****   }
 3565              		.loc 1 350 16 is_stmt 0 view .LVU1496
 3566 00aa E673     		strb	r6, [r4, #15]
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 3567              		.loc 1 349 42 is_stmt 1 view .LVU1497
 3568              	.LVL358:
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 3569              		.loc 1 349 17 view .LVU1498
 352:Core/Src/SEGGER_RTT.c **** }
 3570              		.loc 1 352 3 view .LVU1499
 3571              		.syntax unified
 3572              	@ 352 "Core/Src/SEGGER_RTT.c" 1
 3573 00ac BFF35F8F 		dmb
 3574              	
 3575              	@ 0 "" 2
 352:Core/Src/SEGGER_RTT.c **** }
 3576              		.loc 1 352 13 view .LVU1500
 353:Core/Src/SEGGER_RTT.c **** 
 3577              		.loc 1 353 1 is_stmt 0 view .LVU1501
 3578              		.thumb
 3579              		.syntax unified
 3580 00b0 AEE7     		b	.L155
 3581              	.LVL359:
 3582              	.L177:
 353:Core/Src/SEGGER_RTT.c **** 
 3583              		.loc 1 353 1 view .LVU1502
 3584              	.LBE186:
 3585              	.LBE185:
 3586              	.LBE222:
 3587              	.LBB223:
 3588              	.LBB219:
 3589              	.LBB216:
1044:Core/Src/SEGGER_RTT.c ****     if (Avail < NumBytes) {
 3590              		.loc 1 1044 5 is_stmt 1 view .LVU1503
 3591              	.LBB192:
 3592              	.LBI192:
 526:Core/Src/SEGGER_RTT.c ****   unsigned RdOff;
 3593              		.loc 1 526 17 view .LVU1504
 3594              	.LBB193:
 527:Core/Src/SEGGER_RTT.c ****   unsigned WrOff;
 3595              		.loc 1 527 3 view .LVU1505
 528:Core/Src/SEGGER_RTT.c ****   unsigned r;
 3596              		.loc 1 528 3 view .LVU1506
 529:Core/Src/SEGGER_RTT.c ****   //
 3597              		.loc 1 529 3 view .LVU1507
 534:Core/Src/SEGGER_RTT.c ****   WrOff = pRing->WrOff;
 3598              		.loc 1 534 3 view .LVU1508
 534:Core/Src/SEGGER_RTT.c ****   WrOff = pRing->WrOff;
 3599              		.loc 1 534 9 is_stmt 0 view .LVU1509
 3600 00b2 2369     		ldr	r3, [r4, #16]
 3601              	.LVL360:
 535:Core/Src/SEGGER_RTT.c ****   if (RdOff <= WrOff) {
 3602              		.loc 1 535 3 is_stmt 1 view .LVU1510
 535:Core/Src/SEGGER_RTT.c ****   if (RdOff <= WrOff) {
 3603              		.loc 1 535 9 is_stmt 0 view .LVU1511
 3604 00b4 E568     		ldr	r5, [r4, #12]
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccs0vIiH.s 			page 108


 3605              	.LVL361:
 536:Core/Src/SEGGER_RTT.c ****     r = pRing->SizeOfBuffer - 1u - WrOff + RdOff;
 3606              		.loc 1 536 3 is_stmt 1 view .LVU1512
 536:Core/Src/SEGGER_RTT.c ****     r = pRing->SizeOfBuffer - 1u - WrOff + RdOff;
 3607              		.loc 1 536 6 is_stmt 0 view .LVU1513
 3608 00b6 AB42     		cmp	r3, r5
 537:Core/Src/SEGGER_RTT.c ****   } else {
 3609              		.loc 1 537 5 is_stmt 1 view .LVU1514
 537:Core/Src/SEGGER_RTT.c ****   } else {
 3610              		.loc 1 537 7 is_stmt 0 view .LVU1515
 3611 00b8 9CBF     		itt	ls
 3612 00ba A268     		ldrls	r2, [r4, #8]
 3613 00bc 9B18     		addls	r3, r3, r2
 3614              	.LVL362:
 539:Core/Src/SEGGER_RTT.c ****   }
 3615              		.loc 1 539 5 is_stmt 1 view .LVU1516
 539:Core/Src/SEGGER_RTT.c ****   }
 3616              		.loc 1 539 7 is_stmt 0 view .LVU1517
 3617 00be 013B     		subs	r3, r3, #1
 3618 00c0 5B1B     		subs	r3, r3, r5
 3619              	.LVL363:
 541:Core/Src/SEGGER_RTT.c **** }
 3620              		.loc 1 541 3 is_stmt 1 view .LVU1518
 541:Core/Src/SEGGER_RTT.c **** }
 3621              		.loc 1 541 3 is_stmt 0 view .LVU1519
 3622              	.LBE193:
 3623              	.LBE192:
1045:Core/Src/SEGGER_RTT.c ****       Status = 0u;
 3624              		.loc 1 1045 5 is_stmt 1 view .LVU1520
1045:Core/Src/SEGGER_RTT.c ****       Status = 0u;
 3625              		.loc 1 1045 8 is_stmt 0 view .LVU1521
 3626 00c2 9845     		cmp	r8, r3
 3627 00c4 B8D8     		bhi	.L158
1048:Core/Src/SEGGER_RTT.c ****       _WriteNoCheck(pRing, pData, NumBytes);
 3628              		.loc 1 1048 7 is_stmt 1 view .LVU1522
 3629              	.LVL364:
1049:Core/Src/SEGGER_RTT.c ****     }
 3630              		.loc 1 1049 7 view .LVU1523
 3631              	.LBB196:
 3632              	.LBI196:
 436:Core/Src/SEGGER_RTT.c ****   unsigned NumBytesAtOnce;
 3633              		.loc 1 436 13 view .LVU1524
 3634              	.LBB197:
 437:Core/Src/SEGGER_RTT.c ****   unsigned WrOff;
 3635              		.loc 1 437 3 view .LVU1525
 438:Core/Src/SEGGER_RTT.c ****   unsigned Rem;
 3636              		.loc 1 438 3 view .LVU1526
 439:Core/Src/SEGGER_RTT.c ****   volatile char* pDst;
 3637              		.loc 1 439 3 view .LVU1527
 440:Core/Src/SEGGER_RTT.c **** 
 3638              		.loc 1 440 3 view .LVU1528
 442:Core/Src/SEGGER_RTT.c ****   Rem = pRing->SizeOfBuffer - WrOff;
 3639              		.loc 1 442 3 view .LVU1529
 443:Core/Src/SEGGER_RTT.c ****   if (Rem > NumBytes) {
 3640              		.loc 1 443 3 view .LVU1530
 443:Core/Src/SEGGER_RTT.c ****   if (Rem > NumBytes) {
 3641              		.loc 1 443 14 is_stmt 0 view .LVU1531
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccs0vIiH.s 			page 109


 3642 00c6 A768     		ldr	r7, [r4, #8]
 443:Core/Src/SEGGER_RTT.c ****   if (Rem > NumBytes) {
 3643              		.loc 1 443 7 view .LVU1532
 3644 00c8 7E1B     		subs	r6, r7, r5
 3645              	.LVL365:
 444:Core/Src/SEGGER_RTT.c ****     //
 3646              		.loc 1 444 3 is_stmt 1 view .LVU1533
 444:Core/Src/SEGGER_RTT.c ****     //
 3647              		.loc 1 444 6 is_stmt 0 view .LVU1534
 3648 00ca B045     		cmp	r8, r6
 3649 00cc 7FD2     		bcs	.L161
 448:Core/Src/SEGGER_RTT.c **** #if SEGGER_RTT_MEMCPY_USE_BYTELOOP
 3650              		.loc 1 448 5 is_stmt 1 view .LVU1535
 3651              	.LVL366:
 457:Core/Src/SEGGER_RTT.c ****     RTT__DMB();                     // Force data write to be complete before writing the <WrOff>, 
 3652              		.loc 1 457 5 view .LVU1536
 448:Core/Src/SEGGER_RTT.c **** #if SEGGER_RTT_MEMCPY_USE_BYTELOOP
 3653              		.loc 1 448 10 is_stmt 0 view .LVU1537
 3654 00ce 6068     		ldr	r0, [r4, #4]
 457:Core/Src/SEGGER_RTT.c ****     RTT__DMB();                     // Force data write to be complete before writing the <WrOff>, 
 3655              		.loc 1 457 5 view .LVU1538
 3656 00d0 4946     		mov	r1, r9
 3657 00d2 2844     		add	r0, r0, r5
 3658              	.LVL367:
 457:Core/Src/SEGGER_RTT.c ****     RTT__DMB();                     // Force data write to be complete before writing the <WrOff>, 
 3659              		.loc 1 457 5 view .LVU1539
 3660 00d4 4246     		mov	r2, r8
 3661 00d6 FFF7FEFF 		bl	memcpy
 3662              	.LVL368:
 458:Core/Src/SEGGER_RTT.c ****     pRing->WrOff = WrOff + NumBytes;
 3663              		.loc 1 458 5 is_stmt 1 view .LVU1540
 3664              		.syntax unified
 3665              	@ 458 "Core/Src/SEGGER_RTT.c" 1
 3666 00da BFF35F8F 		dmb
 3667              	
 3668              	@ 0 "" 2
 458:Core/Src/SEGGER_RTT.c ****     pRing->WrOff = WrOff + NumBytes;
 3669              		.loc 1 458 15 view .LVU1541
 459:Core/Src/SEGGER_RTT.c **** #endif
 3670              		.loc 1 459 5 view .LVU1542
 459:Core/Src/SEGGER_RTT.c **** #endif
 3671              		.loc 1 459 26 is_stmt 0 view .LVU1543
 3672              		.thumb
 3673              		.syntax unified
 3674 00de 4544     		add	r5, r5, r8
 3675              	.LVL369:
 459:Core/Src/SEGGER_RTT.c **** #endif
 3676              		.loc 1 459 18 view .LVU1544
 3677 00e0 E560     		str	r5, [r4, #12]
 3678 00e2 4746     		mov	r7, r8
 3679 00e4 A8E7     		b	.L158
 3680              	.LVL370:
 3681              	.L157:
 459:Core/Src/SEGGER_RTT.c **** #endif
 3682              		.loc 1 459 18 view .LVU1545
 3683              	.LBE197:
 3684              	.LBE196:
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccs0vIiH.s 			page 110


1064:Core/Src/SEGGER_RTT.c ****     break;
 3685              		.loc 1 1064 5 is_stmt 1 view .LVU1546
 3686              	.LBB199:
 3687              	.LBI199:
 374:Core/Src/SEGGER_RTT.c ****   unsigned NumBytesToWrite;
 3688              		.loc 1 374 17 view .LVU1547
 3689              	.LBB200:
 375:Core/Src/SEGGER_RTT.c ****   unsigned NumBytesWritten;
 3690              		.loc 1 375 3 view .LVU1548
 376:Core/Src/SEGGER_RTT.c ****   unsigned RdOff;
 3691              		.loc 1 376 3 view .LVU1549
 377:Core/Src/SEGGER_RTT.c ****   unsigned WrOff;
 3692              		.loc 1 377 3 view .LVU1550
 378:Core/Src/SEGGER_RTT.c ****   volatile char* pDst;
 3693              		.loc 1 378 3 view .LVU1551
 379:Core/Src/SEGGER_RTT.c ****   //
 3694              		.loc 1 379 3 view .LVU1552
 383:Core/Src/SEGGER_RTT.c ****   WrOff = pRing->WrOff;
 3695              		.loc 1 383 3 view .LVU1553
 384:Core/Src/SEGGER_RTT.c ****   do {
 3696              		.loc 1 384 3 view .LVU1554
 383:Core/Src/SEGGER_RTT.c ****   WrOff = pRing->WrOff;
 3697              		.loc 1 383 19 is_stmt 0 view .LVU1555
 3698 00e6 0027     		movs	r7, #0
 384:Core/Src/SEGGER_RTT.c ****   do {
 3699              		.loc 1 384 9 view .LVU1556
 3700 00e8 E668     		ldr	r6, [r4, #12]
 3701              	.LVL371:
 384:Core/Src/SEGGER_RTT.c ****   do {
 3702              		.loc 1 384 9 view .LVU1557
 3703              	.LBE200:
 3704              	.LBE199:
 3705              	.LBB202:
 3706              	.LBB194:
 537:Core/Src/SEGGER_RTT.c ****   } else {
 3707              		.loc 1 537 14 view .LVU1558
 3708 00ea A268     		ldr	r2, [r4, #8]
 3709              	.LBE194:
 3710              	.LBE202:
 3711              	.LBB203:
 3712              	.LBB201:
 413:Core/Src/SEGGER_RTT.c ****   } while (NumBytes);
 3713              		.loc 1 413 18 view .LVU1559
 3714 00ec BB46     		mov	fp, r7
 3715              	.LVL372:
 3716              	.L169:
 385:Core/Src/SEGGER_RTT.c ****     RdOff = pRing->RdOff;                         // May be changed by host (debug probe) in the me
 3717              		.loc 1 385 3 is_stmt 1 view .LVU1560
 386:Core/Src/SEGGER_RTT.c ****     if (RdOff > WrOff) {
 3718              		.loc 1 386 5 view .LVU1561
 388:Core/Src/SEGGER_RTT.c ****     } else {
 3719              		.loc 1 388 7 view .LVU1562
 390:Core/Src/SEGGER_RTT.c ****     }
 3720              		.loc 1 390 7 view .LVU1563
 386:Core/Src/SEGGER_RTT.c ****     if (RdOff > WrOff) {
 3721              		.loc 1 386 11 is_stmt 0 view .LVU1564
 3722 00ee 2369     		ldr	r3, [r4, #16]
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccs0vIiH.s 			page 111


 3723              	.LVL373:
 387:Core/Src/SEGGER_RTT.c ****       NumBytesToWrite = RdOff - WrOff - 1u;
 3724              		.loc 1 387 5 is_stmt 1 view .LVU1565
 394:Core/Src/SEGGER_RTT.c **** #if SEGGER_RTT_MEMCPY_USE_BYTELOOP
 3725              		.loc 1 394 10 is_stmt 0 view .LVU1566
 3726 00f0 6068     		ldr	r0, [r4, #4]
 387:Core/Src/SEGGER_RTT.c ****       NumBytesToWrite = RdOff - WrOff - 1u;
 3727              		.loc 1 387 8 view .LVU1567
 3728 00f2 B342     		cmp	r3, r6
 388:Core/Src/SEGGER_RTT.c ****     } else {
 3729              		.loc 1 388 23 view .LVU1568
 3730 00f4 03F1FF31 		add	r1, r3, #-1
 390:Core/Src/SEGGER_RTT.c ****     }
 3731              		.loc 1 390 23 view .LVU1569
 3732 00f8 98BF     		it	ls
 3733 00fa 03F1FF33 		addls	r3, r3, #-1
 3734              	.LVL374:
 392:Core/Src/SEGGER_RTT.c ****     NumBytesToWrite = MIN(NumBytesToWrite, NumBytes);
 3735              		.loc 1 392 23 view .LVU1570
 3736 00fe A2EB0605 		sub	r5, r2, r6
 390:Core/Src/SEGGER_RTT.c ****     }
 3737              		.loc 1 390 23 view .LVU1571
 3738 0102 96BF     		itet	ls
 3739 0104 9B18     		addls	r3, r3, r2
 388:Core/Src/SEGGER_RTT.c ****     } else {
 3740              		.loc 1 388 23 view .LVU1572
 3741 0106 8B1B     		subhi	r3, r1, r6
 390:Core/Src/SEGGER_RTT.c ****     }
 3742              		.loc 1 390 23 view .LVU1573
 3743 0108 9B1B     		subls	r3, r3, r6
 3744              	.LVL375:
 392:Core/Src/SEGGER_RTT.c ****     NumBytesToWrite = MIN(NumBytesToWrite, NumBytes);
 3745              		.loc 1 392 5 is_stmt 1 view .LVU1574
 393:Core/Src/SEGGER_RTT.c ****     pDst = (pRing->pBuffer + WrOff) + SEGGER_RTT_UNCACHED_OFF;
 3746              		.loc 1 393 5 view .LVU1575
 393:Core/Src/SEGGER_RTT.c ****     pDst = (pRing->pBuffer + WrOff) + SEGGER_RTT_UNCACHED_OFF;
 3747              		.loc 1 393 21 is_stmt 0 view .LVU1576
 3748 010a 4545     		cmp	r5, r8
 3749 010c 28BF     		it	cs
 3750 010e 4546     		movcs	r5, r8
 3751              	.LVL376:
 393:Core/Src/SEGGER_RTT.c ****     pDst = (pRing->pBuffer + WrOff) + SEGGER_RTT_UNCACHED_OFF;
 3752              		.loc 1 393 21 view .LVU1577
 3753 0110 9D42     		cmp	r5, r3
 3754 0112 28BF     		it	cs
 3755 0114 1D46     		movcs	r5, r3
 3756              	.LVL377:
 394:Core/Src/SEGGER_RTT.c **** #if SEGGER_RTT_MEMCPY_USE_BYTELOOP
 3757              		.loc 1 394 5 is_stmt 1 view .LVU1578
 403:Core/Src/SEGGER_RTT.c ****     NumBytesWritten += NumBytesToWrite;
 3758              		.loc 1 403 5 view .LVU1579
 3759 0116 4946     		mov	r1, r9
 3760              	.LVL378:
 403:Core/Src/SEGGER_RTT.c ****     NumBytesWritten += NumBytesToWrite;
 3761              		.loc 1 403 5 is_stmt 0 view .LVU1580
 3762 0118 3044     		add	r0, r0, r6
 3763              	.LVL379:
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccs0vIiH.s 			page 112


 403:Core/Src/SEGGER_RTT.c ****     NumBytesWritten += NumBytesToWrite;
 3764              		.loc 1 403 5 view .LVU1581
 3765 011a 2A46     		mov	r2, r5
 3766 011c FFF7FEFF 		bl	memcpy
 3767              	.LVL380:
 404:Core/Src/SEGGER_RTT.c ****     pBuffer         += NumBytesToWrite;
 3768              		.loc 1 404 5 is_stmt 1 view .LVU1582
 409:Core/Src/SEGGER_RTT.c ****       WrOff = 0u;
 3769              		.loc 1 409 23 is_stmt 0 view .LVU1583
 3770 0120 A268     		ldr	r2, [r4, #8]
 407:Core/Src/SEGGER_RTT.c **** #endif
 3771              		.loc 1 407 21 view .LVU1584
 3772 0122 2E44     		add	r6, r6, r5
 3773              	.LVL381:
 412:Core/Src/SEGGER_RTT.c ****     pRing->WrOff = WrOff;
 3774              		.loc 1 412 5 is_stmt 1 view .LVU1585
 409:Core/Src/SEGGER_RTT.c ****       WrOff = 0u;
 3775              		.loc 1 409 8 is_stmt 0 view .LVU1586
 3776 0124 9642     		cmp	r6, r2
 404:Core/Src/SEGGER_RTT.c ****     pBuffer         += NumBytesToWrite;
 3777              		.loc 1 404 21 view .LVU1587
 3778 0126 2F44     		add	r7, r7, r5
 3779              	.LVL382:
 405:Core/Src/SEGGER_RTT.c ****     NumBytes        -= NumBytesToWrite;
 3780              		.loc 1 405 5 is_stmt 1 view .LVU1588
 405:Core/Src/SEGGER_RTT.c ****     NumBytes        -= NumBytesToWrite;
 3781              		.loc 1 405 21 is_stmt 0 view .LVU1589
 3782 0128 A944     		add	r9, r9, r5
 3783              	.LVL383:
 406:Core/Src/SEGGER_RTT.c ****     WrOff           += NumBytesToWrite;
 3784              		.loc 1 406 5 is_stmt 1 view .LVU1590
 406:Core/Src/SEGGER_RTT.c ****     WrOff           += NumBytesToWrite;
 3785              		.loc 1 406 21 is_stmt 0 view .LVU1591
 3786 012a A8EB0508 		sub	r8, r8, r5
 3787              	.LVL384:
 407:Core/Src/SEGGER_RTT.c **** #endif
 3788              		.loc 1 407 5 is_stmt 1 view .LVU1592
 409:Core/Src/SEGGER_RTT.c ****       WrOff = 0u;
 3789              		.loc 1 409 5 view .LVU1593
 409:Core/Src/SEGGER_RTT.c ****       WrOff = 0u;
 3790              		.loc 1 409 8 is_stmt 0 view .LVU1594
 3791 012e 06D0     		beq	.L178
 412:Core/Src/SEGGER_RTT.c ****     pRing->WrOff = WrOff;
 3792              		.loc 1 412 5 view .LVU1595
 3793              		.syntax unified
 3794              	@ 412 "Core/Src/SEGGER_RTT.c" 1
 3795 0130 BFF35F8F 		dmb
 3796              	
 3797              	@ 0 "" 2
 412:Core/Src/SEGGER_RTT.c ****     pRing->WrOff = WrOff;
 3798              		.loc 1 412 15 is_stmt 1 view .LVU1596
 413:Core/Src/SEGGER_RTT.c ****   } while (NumBytes);
 3799              		.loc 1 413 5 view .LVU1597
 413:Core/Src/SEGGER_RTT.c ****   } while (NumBytes);
 3800              		.loc 1 413 18 is_stmt 0 view .LVU1598
 3801              		.thumb
 3802              		.syntax unified
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccs0vIiH.s 			page 113


 3803 0134 E660     		str	r6, [r4, #12]
 414:Core/Src/SEGGER_RTT.c ****   return NumBytesWritten;
 3804              		.loc 1 414 12 is_stmt 1 view .LVU1599
 3805 0136 B8F1000F 		cmp	r8, #0
 3806 013a D8D1     		bne	.L169
 3807 013c 7CE7     		b	.L158
 3808              	.L178:
 3809              	.LVL385:
 412:Core/Src/SEGGER_RTT.c ****     pRing->WrOff = WrOff;
 3810              		.loc 1 412 5 view .LVU1600
 3811              		.syntax unified
 3812              	@ 412 "Core/Src/SEGGER_RTT.c" 1
 3813 013e BFF35F8F 		dmb
 3814              	
 3815              	@ 0 "" 2
 412:Core/Src/SEGGER_RTT.c ****     pRing->WrOff = WrOff;
 3816              		.loc 1 412 15 view .LVU1601
 413:Core/Src/SEGGER_RTT.c ****   } while (NumBytes);
 3817              		.loc 1 413 5 view .LVU1602
 413:Core/Src/SEGGER_RTT.c ****   } while (NumBytes);
 3818              		.loc 1 413 18 is_stmt 0 view .LVU1603
 3819              		.thumb
 3820              		.syntax unified
 3821 0142 C4F80CB0 		str	fp, [r4, #12]
 414:Core/Src/SEGGER_RTT.c ****   return NumBytesWritten;
 3822              		.loc 1 414 12 is_stmt 1 view .LVU1604
 3823 0146 B8F1000F 		cmp	r8, #0
 3824 014a 3FF475AF 		beq	.L158
 410:Core/Src/SEGGER_RTT.c ****     }
 3825              		.loc 1 410 13 is_stmt 0 view .LVU1605
 3826 014e 0026     		movs	r6, #0
 3827 0150 CDE7     		b	.L169
 3828              	.LVL386:
 3829              	.L156:
 410:Core/Src/SEGGER_RTT.c ****     }
 3830              		.loc 1 410 13 view .LVU1606
 3831              	.LBE201:
 3832              	.LBE203:
1056:Core/Src/SEGGER_RTT.c ****     Status = Avail < NumBytes ? Avail : NumBytes;
 3833              		.loc 1 1056 5 is_stmt 1 view .LVU1607
 3834              	.LBB204:
 3835              	.LBI204:
 526:Core/Src/SEGGER_RTT.c ****   unsigned RdOff;
 3836              		.loc 1 526 17 view .LVU1608
 3837              	.LBB205:
 527:Core/Src/SEGGER_RTT.c ****   unsigned WrOff;
 3838              		.loc 1 527 3 view .LVU1609
 528:Core/Src/SEGGER_RTT.c ****   unsigned r;
 3839              		.loc 1 528 3 view .LVU1610
 529:Core/Src/SEGGER_RTT.c ****   //
 3840              		.loc 1 529 3 view .LVU1611
 534:Core/Src/SEGGER_RTT.c ****   WrOff = pRing->WrOff;
 3841              		.loc 1 534 3 view .LVU1612
 534:Core/Src/SEGGER_RTT.c ****   WrOff = pRing->WrOff;
 3842              		.loc 1 534 9 is_stmt 0 view .LVU1613
 3843 0152 2769     		ldr	r7, [r4, #16]
 3844              	.LVL387:
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccs0vIiH.s 			page 114


 535:Core/Src/SEGGER_RTT.c ****   if (RdOff <= WrOff) {
 3845              		.loc 1 535 3 is_stmt 1 view .LVU1614
 535:Core/Src/SEGGER_RTT.c ****   if (RdOff <= WrOff) {
 3846              		.loc 1 535 9 is_stmt 0 view .LVU1615
 3847 0154 E568     		ldr	r5, [r4, #12]
 3848              	.LVL388:
 536:Core/Src/SEGGER_RTT.c ****     r = pRing->SizeOfBuffer - 1u - WrOff + RdOff;
 3849              		.loc 1 536 3 is_stmt 1 view .LVU1616
 536:Core/Src/SEGGER_RTT.c ****     r = pRing->SizeOfBuffer - 1u - WrOff + RdOff;
 3850              		.loc 1 536 6 is_stmt 0 view .LVU1617
 3851 0156 AF42     		cmp	r7, r5
 3852 0158 18D9     		bls	.L179
 539:Core/Src/SEGGER_RTT.c ****   }
 3853              		.loc 1 539 5 is_stmt 1 view .LVU1618
 539:Core/Src/SEGGER_RTT.c ****   }
 3854              		.loc 1 539 7 is_stmt 0 view .LVU1619
 3855 015a 013F     		subs	r7, r7, #1
 3856              	.LVL389:
 539:Core/Src/SEGGER_RTT.c ****   }
 3857              		.loc 1 539 7 view .LVU1620
 3858 015c 7F1B     		subs	r7, r7, r5
 3859              	.LVL390:
 539:Core/Src/SEGGER_RTT.c ****   }
 3860              		.loc 1 539 7 view .LVU1621
 3861              	.LBE205:
 3862              	.LBE204:
 3863              	.LBB208:
 3864              	.LBB195:
 537:Core/Src/SEGGER_RTT.c ****   } else {
 3865              		.loc 1 537 14 view .LVU1622
 3866 015e A668     		ldr	r6, [r4, #8]
 537:Core/Src/SEGGER_RTT.c ****   } else {
 3867              		.loc 1 537 14 view .LVU1623
 3868              	.LBE195:
 3869              	.LBE208:
 3870              	.LBB209:
 3871              	.LBB206:
 541:Core/Src/SEGGER_RTT.c **** }
 3872              		.loc 1 541 3 is_stmt 1 view .LVU1624
 3873              	.LVL391:
 541:Core/Src/SEGGER_RTT.c **** }
 3874              		.loc 1 541 3 is_stmt 0 view .LVU1625
 3875              	.LBE206:
 3876              	.LBE209:
1057:Core/Src/SEGGER_RTT.c ****     _WriteNoCheck(pRing, pData, Status);
 3877              		.loc 1 1057 5 is_stmt 1 view .LVU1626
1057:Core/Src/SEGGER_RTT.c ****     _WriteNoCheck(pRing, pData, Status);
 3878              		.loc 1 1057 12 is_stmt 0 view .LVU1627
 3879 0160 4745     		cmp	r7, r8
 3880 0162 28BF     		it	cs
 3881 0164 4746     		movcs	r7, r8
 3882              	.LVL392:
1058:Core/Src/SEGGER_RTT.c ****     break;
 3883              		.loc 1 1058 5 is_stmt 1 view .LVU1628
 3884              	.LBB210:
 3885              	.LBI210:
 436:Core/Src/SEGGER_RTT.c ****   unsigned NumBytesAtOnce;
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccs0vIiH.s 			page 115


 3886              		.loc 1 436 13 view .LVU1629
 3887              	.LBB211:
 437:Core/Src/SEGGER_RTT.c ****   unsigned WrOff;
 3888              		.loc 1 437 3 view .LVU1630
 438:Core/Src/SEGGER_RTT.c ****   unsigned Rem;
 3889              		.loc 1 438 3 view .LVU1631
 439:Core/Src/SEGGER_RTT.c ****   volatile char* pDst;
 3890              		.loc 1 439 3 view .LVU1632
 440:Core/Src/SEGGER_RTT.c **** 
 3891              		.loc 1 440 3 view .LVU1633
 442:Core/Src/SEGGER_RTT.c ****   Rem = pRing->SizeOfBuffer - WrOff;
 3892              		.loc 1 442 3 view .LVU1634
 443:Core/Src/SEGGER_RTT.c ****   if (Rem > NumBytes) {
 3893              		.loc 1 443 3 view .LVU1635
 443:Core/Src/SEGGER_RTT.c ****   if (Rem > NumBytes) {
 3894              		.loc 1 443 7 is_stmt 0 view .LVU1636
 3895 0166 A6EB0508 		sub	r8, r6, r5
 3896              	.LVL393:
 444:Core/Src/SEGGER_RTT.c ****     //
 3897              		.loc 1 444 3 is_stmt 1 view .LVU1637
 444:Core/Src/SEGGER_RTT.c ****     //
 3898              		.loc 1 444 6 is_stmt 0 view .LVU1638
 3899 016a 4745     		cmp	r7, r8
 3900 016c 19D2     		bcs	.L164
 3901              	.L180:
 448:Core/Src/SEGGER_RTT.c **** #if SEGGER_RTT_MEMCPY_USE_BYTELOOP
 3902              		.loc 1 448 5 is_stmt 1 view .LVU1639
 3903              	.LVL394:
 457:Core/Src/SEGGER_RTT.c ****     RTT__DMB();                     // Force data write to be complete before writing the <WrOff>, 
 3904              		.loc 1 457 5 view .LVU1640
 448:Core/Src/SEGGER_RTT.c **** #if SEGGER_RTT_MEMCPY_USE_BYTELOOP
 3905              		.loc 1 448 10 is_stmt 0 view .LVU1641
 3906 016e 6068     		ldr	r0, [r4, #4]
 457:Core/Src/SEGGER_RTT.c ****     RTT__DMB();                     // Force data write to be complete before writing the <WrOff>, 
 3907              		.loc 1 457 5 view .LVU1642
 3908 0170 4946     		mov	r1, r9
 3909 0172 2844     		add	r0, r0, r5
 3910              	.LVL395:
 457:Core/Src/SEGGER_RTT.c ****     RTT__DMB();                     // Force data write to be complete before writing the <WrOff>, 
 3911              		.loc 1 457 5 view .LVU1643
 3912 0174 3A46     		mov	r2, r7
 3913 0176 FFF7FEFF 		bl	memcpy
 3914              	.LVL396:
 458:Core/Src/SEGGER_RTT.c ****     pRing->WrOff = WrOff + NumBytes;
 3915              		.loc 1 458 5 is_stmt 1 view .LVU1644
 3916              		.syntax unified
 3917              	@ 458 "Core/Src/SEGGER_RTT.c" 1
 3918 017a BFF35F8F 		dmb
 3919              	
 3920              	@ 0 "" 2
 458:Core/Src/SEGGER_RTT.c ****     pRing->WrOff = WrOff + NumBytes;
 3921              		.loc 1 458 15 view .LVU1645
 459:Core/Src/SEGGER_RTT.c **** #endif
 3922              		.loc 1 459 5 view .LVU1646
 459:Core/Src/SEGGER_RTT.c **** #endif
 3923              		.loc 1 459 26 is_stmt 0 view .LVU1647
 3924              		.thumb
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccs0vIiH.s 			page 116


 3925              		.syntax unified
 3926 017e 3D44     		add	r5, r5, r7
 3927              	.LVL397:
 459:Core/Src/SEGGER_RTT.c **** #endif
 3928              		.loc 1 459 18 view .LVU1648
 3929 0180 E560     		str	r5, [r4, #12]
 3930              	.LVL398:
 459:Core/Src/SEGGER_RTT.c **** #endif
 3931              		.loc 1 459 18 view .LVU1649
 3932              	.LBE211:
 3933              	.LBE210:
1073:Core/Src/SEGGER_RTT.c **** }
 3934              		.loc 1 1073 3 is_stmt 1 view .LVU1650
1073:Core/Src/SEGGER_RTT.c **** }
 3935              		.loc 1 1073 3 is_stmt 0 view .LVU1651
 3936              	.LBE216:
 3937              	.LBE219:
1181:Core/Src/SEGGER_RTT.c ****   return Status;
 3938              		.loc 1 1181 3 is_stmt 1 view .LVU1652
 3939              		.syntax unified
 3940              	@ 1181 "Core/Src/SEGGER_RTT.c" 1
 3941 0182 8AF31188 		msr   basepri, r10  
 3942              		
 3943              	@ 0 "" 2
 3944              		.thumb
 3945              		.syntax unified
 3946              	.LBE223:
1181:Core/Src/SEGGER_RTT.c ****   return Status;
 3947              		.loc 1 1181 22 view .LVU1653
1182:Core/Src/SEGGER_RTT.c **** }
 3948              		.loc 1 1182 3 view .LVU1654
 3949              		.loc 1 1183 1 is_stmt 0 view .LVU1655
 3950 0186 3846     		mov	r0, r7
 3951 0188 BDE8F88F 		pop	{r3, r4, r5, r6, r7, r8, r9, r10, fp, pc}
 3952              	.LVL399:
 3953              	.L179:
 3954              	.LBB224:
 3955              	.LBB220:
 3956              	.LBB217:
 3957              	.LBB213:
 3958              	.LBB207:
 537:Core/Src/SEGGER_RTT.c ****   } else {
 3959              		.loc 1 537 5 is_stmt 1 view .LVU1656
 537:Core/Src/SEGGER_RTT.c ****   } else {
 3960              		.loc 1 537 14 is_stmt 0 view .LVU1657
 3961 018c A668     		ldr	r6, [r4, #8]
 537:Core/Src/SEGGER_RTT.c ****   } else {
 3962              		.loc 1 537 7 view .LVU1658
 3963 018e 3744     		add	r7, r7, r6
 3964              	.LVL400:
 537:Core/Src/SEGGER_RTT.c ****   } else {
 3965              		.loc 1 537 7 view .LVU1659
 3966 0190 013F     		subs	r7, r7, #1
 3967 0192 7F1B     		subs	r7, r7, r5
 3968              	.LVL401:
 541:Core/Src/SEGGER_RTT.c **** }
 3969              		.loc 1 541 3 is_stmt 1 view .LVU1660
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccs0vIiH.s 			page 117


 541:Core/Src/SEGGER_RTT.c **** }
 3970              		.loc 1 541 3 is_stmt 0 view .LVU1661
 3971              	.LBE207:
 3972              	.LBE213:
1057:Core/Src/SEGGER_RTT.c ****     _WriteNoCheck(pRing, pData, Status);
 3973              		.loc 1 1057 5 is_stmt 1 view .LVU1662
1057:Core/Src/SEGGER_RTT.c ****     _WriteNoCheck(pRing, pData, Status);
 3974              		.loc 1 1057 12 is_stmt 0 view .LVU1663
 3975 0194 4745     		cmp	r7, r8
 3976 0196 28BF     		it	cs
 3977 0198 4746     		movcs	r7, r8
 3978              	.LVL402:
1058:Core/Src/SEGGER_RTT.c ****     break;
 3979              		.loc 1 1058 5 is_stmt 1 view .LVU1664
 3980              	.LBB214:
 436:Core/Src/SEGGER_RTT.c ****   unsigned NumBytesAtOnce;
 3981              		.loc 1 436 13 view .LVU1665
 3982              	.LBB212:
 437:Core/Src/SEGGER_RTT.c ****   unsigned WrOff;
 3983              		.loc 1 437 3 view .LVU1666
 438:Core/Src/SEGGER_RTT.c ****   unsigned Rem;
 3984              		.loc 1 438 3 view .LVU1667
 439:Core/Src/SEGGER_RTT.c ****   volatile char* pDst;
 3985              		.loc 1 439 3 view .LVU1668
 440:Core/Src/SEGGER_RTT.c **** 
 3986              		.loc 1 440 3 view .LVU1669
 442:Core/Src/SEGGER_RTT.c ****   Rem = pRing->SizeOfBuffer - WrOff;
 3987              		.loc 1 442 3 view .LVU1670
 443:Core/Src/SEGGER_RTT.c ****   if (Rem > NumBytes) {
 3988              		.loc 1 443 3 view .LVU1671
 443:Core/Src/SEGGER_RTT.c ****   if (Rem > NumBytes) {
 3989              		.loc 1 443 7 is_stmt 0 view .LVU1672
 3990 019a A6EB0508 		sub	r8, r6, r5
 3991              	.LVL403:
 444:Core/Src/SEGGER_RTT.c ****     //
 3992              		.loc 1 444 3 is_stmt 1 view .LVU1673
 444:Core/Src/SEGGER_RTT.c ****     //
 3993              		.loc 1 444 6 is_stmt 0 view .LVU1674
 3994 019e 4745     		cmp	r7, r8
 3995 01a0 E5D3     		bcc	.L180
 3996              	.L164:
 479:Core/Src/SEGGER_RTT.c ****     pDst = (pRing->pBuffer + WrOff) + SEGGER_RTT_UNCACHED_OFF;
 3997              		.loc 1 479 5 is_stmt 1 view .LVU1675
 3998              	.LVL404:
 480:Core/Src/SEGGER_RTT.c ****     SEGGER_RTT_MEMCPY((void*)pDst, pData, NumBytesAtOnce);
 3999              		.loc 1 480 5 view .LVU1676
 481:Core/Src/SEGGER_RTT.c ****     NumBytesAtOnce = NumBytes - Rem;
 4000              		.loc 1 481 5 view .LVU1677
 480:Core/Src/SEGGER_RTT.c ****     SEGGER_RTT_MEMCPY((void*)pDst, pData, NumBytesAtOnce);
 4001              		.loc 1 480 10 is_stmt 0 view .LVU1678
 4002 01a2 6068     		ldr	r0, [r4, #4]
 482:Core/Src/SEGGER_RTT.c ****     pDst = pRing->pBuffer + SEGGER_RTT_UNCACHED_OFF;
 4003              		.loc 1 482 20 view .LVU1679
 4004 01a4 BE1B     		subs	r6, r7, r6
 481:Core/Src/SEGGER_RTT.c ****     NumBytesAtOnce = NumBytes - Rem;
 4005              		.loc 1 481 5 view .LVU1680
 4006 01a6 4246     		mov	r2, r8
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccs0vIiH.s 			page 118


 4007 01a8 4946     		mov	r1, r9
 4008 01aa 2844     		add	r0, r0, r5
 4009              	.LVL405:
 482:Core/Src/SEGGER_RTT.c ****     pDst = pRing->pBuffer + SEGGER_RTT_UNCACHED_OFF;
 4010              		.loc 1 482 20 view .LVU1681
 4011 01ac 2E44     		add	r6, r6, r5
 481:Core/Src/SEGGER_RTT.c ****     NumBytesAtOnce = NumBytes - Rem;
 4012              		.loc 1 481 5 view .LVU1682
 4013 01ae FFF7FEFF 		bl	memcpy
 4014              	.LVL406:
 482:Core/Src/SEGGER_RTT.c ****     pDst = pRing->pBuffer + SEGGER_RTT_UNCACHED_OFF;
 4015              		.loc 1 482 5 is_stmt 1 view .LVU1683
 483:Core/Src/SEGGER_RTT.c ****     SEGGER_RTT_MEMCPY((void*)pDst, pData + Rem, NumBytesAtOnce);
 4016              		.loc 1 483 5 view .LVU1684
 484:Core/Src/SEGGER_RTT.c ****     RTT__DMB();                     // Force data write to be complete before writing the <WrOff>, 
 4017              		.loc 1 484 5 view .LVU1685
 4018 01b2 6068     		ldr	r0, [r4, #4]
 4019 01b4 09EB0801 		add	r1, r9, r8
 4020 01b8 3246     		mov	r2, r6
 4021 01ba FFF7FEFF 		bl	memcpy
 4022              	.LVL407:
 485:Core/Src/SEGGER_RTT.c ****     pRing->WrOff = NumBytesAtOnce;
 4023              		.loc 1 485 5 view .LVU1686
 4024              		.syntax unified
 4025              	@ 485 "Core/Src/SEGGER_RTT.c" 1
 4026 01be BFF35F8F 		dmb
 4027              	
 4028              	@ 0 "" 2
 485:Core/Src/SEGGER_RTT.c ****     pRing->WrOff = NumBytesAtOnce;
 4029              		.loc 1 485 15 view .LVU1687
 486:Core/Src/SEGGER_RTT.c **** #endif
 4030              		.loc 1 486 5 view .LVU1688
 486:Core/Src/SEGGER_RTT.c **** #endif
 4031              		.loc 1 486 18 is_stmt 0 view .LVU1689
 4032              		.thumb
 4033              		.syntax unified
 4034 01c2 E660     		str	r6, [r4, #12]
 4035              	.LVL408:
 486:Core/Src/SEGGER_RTT.c **** #endif
 4036              		.loc 1 486 18 view .LVU1690
 4037              	.LBE212:
 4038              	.LBE214:
1073:Core/Src/SEGGER_RTT.c **** }
 4039              		.loc 1 1073 3 is_stmt 1 view .LVU1691
1073:Core/Src/SEGGER_RTT.c **** }
 4040              		.loc 1 1073 3 is_stmt 0 view .LVU1692
 4041              	.LBE217:
 4042              	.LBE220:
1181:Core/Src/SEGGER_RTT.c ****   return Status;
 4043              		.loc 1 1181 3 is_stmt 1 view .LVU1693
 4044              		.syntax unified
 4045              	@ 1181 "Core/Src/SEGGER_RTT.c" 1
 4046 01c4 8AF31188 		msr   basepri, r10  
 4047              		
 4048              	@ 0 "" 2
 4049              		.thumb
 4050              		.syntax unified
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccs0vIiH.s 			page 119


 4051              	.LBE224:
1181:Core/Src/SEGGER_RTT.c ****   return Status;
 4052              		.loc 1 1181 22 view .LVU1694
1182:Core/Src/SEGGER_RTT.c **** }
 4053              		.loc 1 1182 3 view .LVU1695
 4054              		.loc 1 1183 1 is_stmt 0 view .LVU1696
 4055 01c8 3846     		mov	r0, r7
 4056 01ca BDE8F88F 		pop	{r3, r4, r5, r6, r7, r8, r9, r10, fp, pc}
 4057              	.LVL409:
 4058              	.L161:
 4059              	.LBB225:
 4060              	.LBB221:
 4061              	.LBB218:
 4062              	.LBB215:
 4063              	.LBB198:
 479:Core/Src/SEGGER_RTT.c ****     pDst = (pRing->pBuffer + WrOff) + SEGGER_RTT_UNCACHED_OFF;
 4064              		.loc 1 479 5 is_stmt 1 view .LVU1697
 480:Core/Src/SEGGER_RTT.c ****     SEGGER_RTT_MEMCPY((void*)pDst, pData, NumBytesAtOnce);
 4065              		.loc 1 480 5 view .LVU1698
 481:Core/Src/SEGGER_RTT.c ****     NumBytesAtOnce = NumBytes - Rem;
 4066              		.loc 1 481 5 view .LVU1699
 480:Core/Src/SEGGER_RTT.c ****     SEGGER_RTT_MEMCPY((void*)pDst, pData, NumBytesAtOnce);
 4067              		.loc 1 480 10 is_stmt 0 view .LVU1700
 4068 01ce 6068     		ldr	r0, [r4, #4]
 481:Core/Src/SEGGER_RTT.c ****     NumBytesAtOnce = NumBytes - Rem;
 4069              		.loc 1 481 5 view .LVU1701
 4070 01d0 2844     		add	r0, r0, r5
 4071              	.LVL410:
 482:Core/Src/SEGGER_RTT.c ****     pDst = pRing->pBuffer + SEGGER_RTT_UNCACHED_OFF;
 4072              		.loc 1 482 20 view .LVU1702
 4073 01d2 4544     		add	r5, r5, r8
 4074              	.LVL411:
 481:Core/Src/SEGGER_RTT.c ****     NumBytesAtOnce = NumBytes - Rem;
 4075              		.loc 1 481 5 view .LVU1703
 4076 01d4 3246     		mov	r2, r6
 4077 01d6 4946     		mov	r1, r9
 482:Core/Src/SEGGER_RTT.c ****     pDst = pRing->pBuffer + SEGGER_RTT_UNCACHED_OFF;
 4078              		.loc 1 482 20 view .LVU1704
 4079 01d8 ED1B     		subs	r5, r5, r7
 481:Core/Src/SEGGER_RTT.c ****     NumBytesAtOnce = NumBytes - Rem;
 4080              		.loc 1 481 5 view .LVU1705
 4081 01da FFF7FEFF 		bl	memcpy
 4082              	.LVL412:
 482:Core/Src/SEGGER_RTT.c ****     pDst = pRing->pBuffer + SEGGER_RTT_UNCACHED_OFF;
 4083              		.loc 1 482 5 is_stmt 1 view .LVU1706
 483:Core/Src/SEGGER_RTT.c ****     SEGGER_RTT_MEMCPY((void*)pDst, pData + Rem, NumBytesAtOnce);
 4084              		.loc 1 483 5 view .LVU1707
 484:Core/Src/SEGGER_RTT.c ****     RTT__DMB();                     // Force data write to be complete before writing the <WrOff>, 
 4085              		.loc 1 484 5 view .LVU1708
 4086 01de 6068     		ldr	r0, [r4, #4]
 4087 01e0 09EB0601 		add	r1, r9, r6
 4088 01e4 2A46     		mov	r2, r5
 4089 01e6 FFF7FEFF 		bl	memcpy
 4090              	.LVL413:
 485:Core/Src/SEGGER_RTT.c ****     pRing->WrOff = NumBytesAtOnce;
 4091              		.loc 1 485 5 view .LVU1709
 4092              		.syntax unified
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccs0vIiH.s 			page 120


 4093              	@ 485 "Core/Src/SEGGER_RTT.c" 1
 4094 01ea BFF35F8F 		dmb
 4095              	
 4096              	@ 0 "" 2
 485:Core/Src/SEGGER_RTT.c ****     pRing->WrOff = NumBytesAtOnce;
 4097              		.loc 1 485 15 view .LVU1710
 486:Core/Src/SEGGER_RTT.c **** #endif
 4098              		.loc 1 486 5 view .LVU1711
 486:Core/Src/SEGGER_RTT.c **** #endif
 4099              		.loc 1 486 18 is_stmt 0 view .LVU1712
 4100              		.thumb
 4101              		.syntax unified
 4102 01ee E560     		str	r5, [r4, #12]
 4103 01f0 4746     		mov	r7, r8
 4104 01f2 21E7     		b	.L158
 4105              	.L182:
 4106              		.align	2
 4107              	.L181:
 4108 01f4 00000000 		.word	.LANCHOR0
 4109 01f8 00000000 		.word	.LC0
 4110 01fc 00000000 		.word	.LANCHOR1
 4111 0200 00000000 		.word	.LANCHOR2
 4112              	.LBE198:
 4113              	.LBE215:
 4114              	.LBE218:
 4115              	.LBE221:
 4116              	.LBE225:
 4117              		.cfi_endproc
 4118              	.LFE12:
 4120              		.section	.text.SEGGER_RTT_Write,"ax",%progbits
 4121              		.align	1
 4122              		.p2align 2,,3
 4123              		.global	SEGGER_RTT_Write
 4124              		.syntax unified
 4125              		.thumb
 4126              		.thumb_func
 4128              	SEGGER_RTT_Write:
 4129              	.LVL414:
 4130              	.LFB13:
1184:Core/Src/SEGGER_RTT.c **** 
1185:Core/Src/SEGGER_RTT.c **** /*********************************************************************
1186:Core/Src/SEGGER_RTT.c **** *
1187:Core/Src/SEGGER_RTT.c **** *       SEGGER_RTT_Write
1188:Core/Src/SEGGER_RTT.c **** *
1189:Core/Src/SEGGER_RTT.c **** *  Function description
1190:Core/Src/SEGGER_RTT.c **** *    Stores a specified number of characters in SEGGER RTT
1191:Core/Src/SEGGER_RTT.c **** *    control block which is then read by the host.
1192:Core/Src/SEGGER_RTT.c **** *
1193:Core/Src/SEGGER_RTT.c **** *  Parameters
1194:Core/Src/SEGGER_RTT.c **** *    BufferIndex  Index of "Up"-buffer to be used (e.g. 0 for "Terminal").
1195:Core/Src/SEGGER_RTT.c **** *    pBuffer      Pointer to character array. Does not need to point to a \0 terminated string.
1196:Core/Src/SEGGER_RTT.c **** *    NumBytes     Number of bytes to be stored in the SEGGER RTT control block.
1197:Core/Src/SEGGER_RTT.c **** *
1198:Core/Src/SEGGER_RTT.c **** *  Return value
1199:Core/Src/SEGGER_RTT.c **** *    Number of bytes which have been stored in the "Up"-buffer.
1200:Core/Src/SEGGER_RTT.c **** *
1201:Core/Src/SEGGER_RTT.c **** *  Notes
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccs0vIiH.s 			page 121


1202:Core/Src/SEGGER_RTT.c **** *    (1) Data is stored according to buffer flags.
1203:Core/Src/SEGGER_RTT.c **** */
1204:Core/Src/SEGGER_RTT.c **** unsigned SEGGER_RTT_Write(unsigned BufferIndex, const void* pBuffer, unsigned NumBytes) {
 4131              		.loc 1 1204 89 is_stmt 1 view -0
 4132              		.cfi_startproc
 4133              		@ args = 0, pretend = 0, frame = 8
 4134              		@ frame_needed = 0, uses_anonymous_args = 0
1205:Core/Src/SEGGER_RTT.c ****   unsigned Status;
 4135              		.loc 1 1205 3 view .LVU1714
 4136              	.LBB244:
1206:Core/Src/SEGGER_RTT.c **** 
1207:Core/Src/SEGGER_RTT.c ****   INIT();
 4137              		.loc 1 1207 3 view .LVU1715
 4138              		.loc 1 1207 3 view .LVU1716
 4139              		.loc 1 1207 3 view .LVU1717
 4140              		.loc 1 1207 3 view .LVU1718
 4141              	.LBE244:
1204:Core/Src/SEGGER_RTT.c ****   unsigned Status;
 4142              		.loc 1 1204 89 is_stmt 0 view .LVU1719
 4143 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 4144              		.cfi_def_cfa_offset 36
 4145              		.cfi_offset 4, -36
 4146              		.cfi_offset 5, -32
 4147              		.cfi_offset 6, -28
 4148              		.cfi_offset 7, -24
 4149              		.cfi_offset 8, -20
 4150              		.cfi_offset 9, -16
 4151              		.cfi_offset 10, -12
 4152              		.cfi_offset 11, -8
 4153              		.cfi_offset 14, -4
 4154              	.LBB247:
 4155              		.loc 1 1207 3 view .LVU1720
 4156 0004 984E     		ldr	r6, .L212
 4157 0006 3778     		ldrb	r7, [r6]	@ zero_extendqisi2
 4158              	.LBE247:
1204:Core/Src/SEGGER_RTT.c ****   unsigned Status;
 4159              		.loc 1 1204 89 view .LVU1721
 4160 0008 83B0     		sub	sp, sp, #12
 4161              		.cfi_def_cfa_offset 48
1204:Core/Src/SEGGER_RTT.c ****   unsigned Status;
 4162              		.loc 1 1204 89 view .LVU1722
 4163 000a 0446     		mov	r4, r0
 4164 000c 8B46     		mov	fp, r1
 4165 000e 9146     		mov	r9, r2
 4166              	.LBB248:
 4167              		.loc 1 1207 3 view .LVU1723
 4168 0010 0FB3     		cbz	r7, .L206
 4169              	.LVL415:
 4170              	.L184:
 4171              		.loc 1 1207 3 is_stmt 1 discriminator 3 view .LVU1724
 4172              	.LBE248:
 4173              		.loc 1 1207 9 discriminator 3 view .LVU1725
 4174              	.LBB249:
1208:Core/Src/SEGGER_RTT.c ****   SEGGER_RTT_LOCK();
 4175              		.loc 1 1208 3 discriminator 3 view .LVU1726
 4176              		.loc 1 1208 3 discriminator 3 view .LVU1727
 4177              		.syntax unified
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccs0vIiH.s 			page 122


 4178              	@ 1208 "Core/Src/SEGGER_RTT.c" 1
 4179 0012 EFF31183 		mrs   r3, basepri  
 4180 0016 4FF02001 		mov   r1, #32       
 4181 001a 81F31188 		msr   basepri, r1  
 4182              		
 4183              	@ 0 "" 2
 4184              		.thumb
 4185              		.syntax unified
 4186              	.LBB250:
 4187              	.LBB251:
1112:Core/Src/SEGGER_RTT.c ****   case SEGGER_RTT_MODE_NO_BLOCK_SKIP:
 4188              		.loc 1 1112 16 is_stmt 0 discriminator 3 view .LVU1728
 4189 001e 04EB4407 		add	r7, r4, r4, lsl #1
 4190 0022 06EBC707 		add	r7, r6, r7, lsl #3
 4191              	.LBE251:
 4192              	.LBE250:
 4193              		.loc 1 1208 3 discriminator 3 view .LVU1729
 4194 0026 0093     		str	r3, [sp]
 4195              	.LVL416:
 4196              		.loc 1 1208 20 is_stmt 1 discriminator 3 view .LVU1730
1209:Core/Src/SEGGER_RTT.c ****   Status = SEGGER_RTT_WriteNoLock(BufferIndex, pBuffer, NumBytes);  // Call the non-locking write f
 4197              		.loc 1 1209 3 discriminator 3 view .LVU1731
 4198              	.LBB272:
 4199              	.LBI250:
1099:Core/Src/SEGGER_RTT.c ****   unsigned              Status;
 4200              		.loc 1 1099 10 discriminator 3 view .LVU1732
 4201              	.LBB270:
1100:Core/Src/SEGGER_RTT.c ****   unsigned              Avail;
 4202              		.loc 1 1100 3 discriminator 3 view .LVU1733
1101:Core/Src/SEGGER_RTT.c ****   const char*           pData;
 4203              		.loc 1 1101 3 discriminator 3 view .LVU1734
1102:Core/Src/SEGGER_RTT.c ****   SEGGER_RTT_BUFFER_UP* pRing;
 4204              		.loc 1 1102 3 discriminator 3 view .LVU1735
1103:Core/Src/SEGGER_RTT.c ****   //
 4205              		.loc 1 1103 3 discriminator 3 view .LVU1736
1107:Core/Src/SEGGER_RTT.c ****   pRing = (SEGGER_RTT_BUFFER_UP*)((char*)&_SEGGER_RTT.aUp[BufferIndex] + SEGGER_RTT_UNCACHED_OFF); 
 4206              		.loc 1 1107 3 discriminator 3 view .LVU1737
1108:Core/Src/SEGGER_RTT.c ****   //
 4207              		.loc 1 1108 3 discriminator 3 view .LVU1738
1112:Core/Src/SEGGER_RTT.c ****   case SEGGER_RTT_MODE_NO_BLOCK_SKIP:
 4208              		.loc 1 1112 3 discriminator 3 view .LVU1739
1112:Core/Src/SEGGER_RTT.c ****   case SEGGER_RTT_MODE_NO_BLOCK_SKIP:
 4209              		.loc 1 1112 16 is_stmt 0 discriminator 3 view .LVU1740
 4210 0028 D7F82C80 		ldr	r8, [r7, #44]
1112:Core/Src/SEGGER_RTT.c ****   case SEGGER_RTT_MODE_NO_BLOCK_SKIP:
 4211              		.loc 1 1112 3 discriminator 3 view .LVU1741
 4212 002c B8F1010F 		cmp	r8, #1
1112:Core/Src/SEGGER_RTT.c ****   case SEGGER_RTT_MODE_NO_BLOCK_SKIP:
 4213              		.loc 1 1112 16 discriminator 3 view .LVU1742
 4214 0030 4FEA4405 		lsl	r5, r4, #1
1112:Core/Src/SEGGER_RTT.c ****   case SEGGER_RTT_MODE_NO_BLOCK_SKIP:
 4215              		.loc 1 1112 3 discriminator 3 view .LVU1743
 4216 0034 00F0B080 		beq	.L185
1112:Core/Src/SEGGER_RTT.c ****   case SEGGER_RTT_MODE_NO_BLOCK_SKIP:
 4217              		.loc 1 1112 3 view .LVU1744
 4218 0038 B8F1020F 		cmp	r8, #2
 4219 003c 6CD0     		beq	.L186
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccs0vIiH.s 			page 123


 4220 003e B8F1000F 		cmp	r8, #0
 4221 0042 42D0     		beq	.L207
 4222 0044 4FF00008 		mov	r8, #0
 4223              	.LVL417:
 4224              	.L187:
1147:Core/Src/SEGGER_RTT.c **** }
 4225              		.loc 1 1147 3 is_stmt 1 view .LVU1745
1147:Core/Src/SEGGER_RTT.c **** }
 4226              		.loc 1 1147 3 is_stmt 0 view .LVU1746
 4227              	.LBE270:
 4228              	.LBE272:
1210:Core/Src/SEGGER_RTT.c ****   SEGGER_RTT_UNLOCK();
 4229              		.loc 1 1210 3 is_stmt 1 view .LVU1747
 4230 0048 009B     		ldr	r3, [sp]
 4231              		.syntax unified
 4232              	@ 1210 "Core/Src/SEGGER_RTT.c" 1
 4233 004a 83F31188 		msr   basepri, r3  
 4234              		
 4235              	@ 0 "" 2
 4236              		.thumb
 4237              		.syntax unified
 4238              	.LBE249:
 4239              		.loc 1 1210 22 view .LVU1748
1211:Core/Src/SEGGER_RTT.c ****   return Status;
 4240              		.loc 1 1211 3 view .LVU1749
1212:Core/Src/SEGGER_RTT.c **** }
 4241              		.loc 1 1212 1 is_stmt 0 view .LVU1750
 4242 004e 4046     		mov	r0, r8
 4243 0050 03B0     		add	sp, sp, #12
 4244              		.cfi_remember_state
 4245              		.cfi_def_cfa_offset 36
 4246              	.LVL418:
 4247              		.loc 1 1212 1 view .LVU1751
 4248              		@ sp needed
 4249 0052 BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 4250              	.LVL419:
 4251              	.L206:
 4252              		.cfi_restore_state
 4253              		.loc 1 1212 1 view .LVU1752
 4254 0056 07F0FF05 		and	r5, r7, #255
 4255              	.LBB274:
1207:Core/Src/SEGGER_RTT.c ****   SEGGER_RTT_LOCK();
 4256              		.loc 1 1207 3 is_stmt 1 view .LVU1753
 4257              	.LBB245:
 4258              	.LBI245:
 314:Core/Src/SEGGER_RTT.c ****   volatile SEGGER_RTT_CB* p;   // Volatile to make sure that compiler cannot change the order of ac
 4259              		.loc 1 314 13 view .LVU1754
 4260              	.LBB246:
 315:Core/Src/SEGGER_RTT.c ****   static const char _aInitStr[] = "\0\0\0\0\0\0TTR REGGES";  // Init complete ID string to make sur
 4261              		.loc 1 315 3 view .LVU1755
 316:Core/Src/SEGGER_RTT.c ****   unsigned i;
 4262              		.loc 1 316 3 view .LVU1756
 317:Core/Src/SEGGER_RTT.c ****   //
 4263              		.loc 1 317 3 view .LVU1757
 321:Core/Src/SEGGER_RTT.c ****   memset((SEGGER_RTT_CB*)p, 0, sizeof(_SEGGER_RTT));         // Make sure that the RTT CB is always
 4264              		.loc 1 321 3 view .LVU1758
 4265              	.LVL420:
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccs0vIiH.s 			page 124


 322:Core/Src/SEGGER_RTT.c ****   p->MaxNumUpBuffers    = SEGGER_RTT_MAX_NUM_UP_BUFFERS;
 4266              		.loc 1 322 3 view .LVU1759
 4267 005a 2946     		mov	r1, r5
 4268              	.LVL421:
 322:Core/Src/SEGGER_RTT.c ****   p->MaxNumUpBuffers    = SEGGER_RTT_MAX_NUM_UP_BUFFERS;
 4269              		.loc 1 322 3 is_stmt 0 view .LVU1760
 4270 005c 7822     		movs	r2, #120
 4271              	.LVL422:
 322:Core/Src/SEGGER_RTT.c ****   p->MaxNumUpBuffers    = SEGGER_RTT_MAX_NUM_UP_BUFFERS;
 4272              		.loc 1 322 3 view .LVU1761
 4273 005e 06F13000 		add	r0, r6, #48
 4274              	.LVL423:
 322:Core/Src/SEGGER_RTT.c ****   p->MaxNumUpBuffers    = SEGGER_RTT_MAX_NUM_UP_BUFFERS;
 4275              		.loc 1 322 3 view .LVU1762
 4276 0062 FFF7FEFF 		bl	memset
 4277              	.LVL424:
 323:Core/Src/SEGGER_RTT.c ****   p->MaxNumDownBuffers  = SEGGER_RTT_MAX_NUM_DOWN_BUFFERS;
 4278              		.loc 1 323 3 is_stmt 1 view .LVU1763
 323:Core/Src/SEGGER_RTT.c ****   p->MaxNumDownBuffers  = SEGGER_RTT_MAX_NUM_DOWN_BUFFERS;
 4279              		.loc 1 323 25 is_stmt 0 view .LVU1764
 4280 0066 0321     		movs	r1, #3
 4281 0068 3161     		str	r1, [r6, #16]
 324:Core/Src/SEGGER_RTT.c ****   //
 4282              		.loc 1 324 3 is_stmt 1 view .LVU1765
 328:Core/Src/SEGGER_RTT.c ****   p->aUp[0].pBuffer       = _acUpBuffer;
 4283              		.loc 1 328 27 is_stmt 0 view .LVU1766
 4284 006a 804A     		ldr	r2, .L212+4
 324:Core/Src/SEGGER_RTT.c ****   //
 4285              		.loc 1 324 25 view .LVU1767
 4286 006c 7161     		str	r1, [r6, #20]
 328:Core/Src/SEGGER_RTT.c ****   p->aUp[0].pBuffer       = _acUpBuffer;
 4287              		.loc 1 328 3 is_stmt 1 view .LVU1768
 330:Core/Src/SEGGER_RTT.c ****   p->aUp[0].RdOff         = 0u;
 4288              		.loc 1 330 27 is_stmt 0 view .LVU1769
 4289 006e 4FF48060 		mov	r0, #1024
 329:Core/Src/SEGGER_RTT.c ****   p->aUp[0].SizeOfBuffer  = BUFFER_SIZE_UP;
 4290              		.loc 1 329 27 view .LVU1770
 4291 0072 7F49     		ldr	r1, .L212+8
 328:Core/Src/SEGGER_RTT.c ****   p->aUp[0].pBuffer       = _acUpBuffer;
 4292              		.loc 1 328 27 view .LVU1771
 4293 0074 B261     		str	r2, [r6, #24]
 329:Core/Src/SEGGER_RTT.c ****   p->aUp[0].SizeOfBuffer  = BUFFER_SIZE_UP;
 4294              		.loc 1 329 3 is_stmt 1 view .LVU1772
 329:Core/Src/SEGGER_RTT.c ****   p->aUp[0].SizeOfBuffer  = BUFFER_SIZE_UP;
 4295              		.loc 1 329 27 is_stmt 0 view .LVU1773
 4296 0076 F161     		str	r1, [r6, #28]
 330:Core/Src/SEGGER_RTT.c ****   p->aUp[0].RdOff         = 0u;
 4297              		.loc 1 330 3 is_stmt 1 view .LVU1774
 330:Core/Src/SEGGER_RTT.c ****   p->aUp[0].RdOff         = 0u;
 4298              		.loc 1 330 27 is_stmt 0 view .LVU1775
 4299 0078 3062     		str	r0, [r6, #32]
 331:Core/Src/SEGGER_RTT.c ****   p->aUp[0].WrOff         = 0u;
 4300              		.loc 1 331 3 is_stmt 1 view .LVU1776
 338:Core/Src/SEGGER_RTT.c ****   p->aDown[0].SizeOfBuffer  = BUFFER_SIZE_DOWN;
 4301              		.loc 1 338 29 is_stmt 0 view .LVU1777
 4302 007a 7E49     		ldr	r1, .L212+12
 331:Core/Src/SEGGER_RTT.c ****   p->aUp[0].WrOff         = 0u;
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccs0vIiH.s 			page 125


 4303              		.loc 1 331 27 view .LVU1778
 4304 007c B562     		str	r5, [r6, #40]
 332:Core/Src/SEGGER_RTT.c ****   p->aUp[0].Flags         = SEGGER_RTT_MODE_DEFAULT;
 4305              		.loc 1 332 3 is_stmt 1 view .LVU1779
 332:Core/Src/SEGGER_RTT.c ****   p->aUp[0].Flags         = SEGGER_RTT_MODE_DEFAULT;
 4306              		.loc 1 332 27 is_stmt 0 view .LVU1780
 4307 007e 7562     		str	r5, [r6, #36]
 333:Core/Src/SEGGER_RTT.c ****   //
 4308              		.loc 1 333 3 is_stmt 1 view .LVU1781
 333:Core/Src/SEGGER_RTT.c ****   //
 4309              		.loc 1 333 27 is_stmt 0 view .LVU1782
 4310 0080 F562     		str	r5, [r6, #44]
 337:Core/Src/SEGGER_RTT.c ****   p->aDown[0].pBuffer       = _acDownBuffer;
 4311              		.loc 1 337 3 is_stmt 1 view .LVU1783
 337:Core/Src/SEGGER_RTT.c ****   p->aDown[0].pBuffer       = _acDownBuffer;
 4312              		.loc 1 337 29 is_stmt 0 view .LVU1784
 4313 0082 3266     		str	r2, [r6, #96]
 338:Core/Src/SEGGER_RTT.c ****   p->aDown[0].SizeOfBuffer  = BUFFER_SIZE_DOWN;
 4314              		.loc 1 338 3 is_stmt 1 view .LVU1785
 339:Core/Src/SEGGER_RTT.c ****   p->aDown[0].RdOff         = 0u;
 4315              		.loc 1 339 29 is_stmt 0 view .LVU1786
 4316 0084 1022     		movs	r2, #16
 338:Core/Src/SEGGER_RTT.c ****   p->aDown[0].SizeOfBuffer  = BUFFER_SIZE_DOWN;
 4317              		.loc 1 338 29 view .LVU1787
 4318 0086 7166     		str	r1, [r6, #100]
 339:Core/Src/SEGGER_RTT.c ****   p->aDown[0].RdOff         = 0u;
 4319              		.loc 1 339 3 is_stmt 1 view .LVU1788
 339:Core/Src/SEGGER_RTT.c ****   p->aDown[0].RdOff         = 0u;
 4320              		.loc 1 339 29 is_stmt 0 view .LVU1789
 4321 0088 B266     		str	r2, [r6, #104]
 340:Core/Src/SEGGER_RTT.c ****   p->aDown[0].WrOff         = 0u;
 4322              		.loc 1 340 3 is_stmt 1 view .LVU1790
 340:Core/Src/SEGGER_RTT.c ****   p->aDown[0].WrOff         = 0u;
 4323              		.loc 1 340 29 is_stmt 0 view .LVU1791
 4324 008a 3567     		str	r5, [r6, #112]
 341:Core/Src/SEGGER_RTT.c ****   p->aDown[0].Flags         = SEGGER_RTT_MODE_DEFAULT;
 4325              		.loc 1 341 3 is_stmt 1 view .LVU1792
 341:Core/Src/SEGGER_RTT.c ****   p->aDown[0].Flags         = SEGGER_RTT_MODE_DEFAULT;
 4326              		.loc 1 341 29 is_stmt 0 view .LVU1793
 4327 008c F566     		str	r5, [r6, #108]
 342:Core/Src/SEGGER_RTT.c ****   //
 4328              		.loc 1 342 3 is_stmt 1 view .LVU1794
 342:Core/Src/SEGGER_RTT.c ****   //
 4329              		.loc 1 342 29 is_stmt 0 view .LVU1795
 4330 008e 7567     		str	r5, [r6, #116]
 348:Core/Src/SEGGER_RTT.c ****   for (i = 0; i < sizeof(_aInitStr) - 1; ++i) {
 4331              		.loc 1 348 3 is_stmt 1 view .LVU1796
 4332              		.syntax unified
 4333              	@ 348 "Core/Src/SEGGER_RTT.c" 1
 4334 0090 BFF35F8F 		dmb
 4335              	
 4336              	@ 0 "" 2
 348:Core/Src/SEGGER_RTT.c ****   for (i = 0; i < sizeof(_aInitStr) - 1; ++i) {
 4337              		.loc 1 348 13 view .LVU1797
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 4338              		.loc 1 349 3 view .LVU1798
 4339              	.LVL425:
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccs0vIiH.s 			page 126


 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 4340              		.loc 1 349 17 view .LVU1799
 350:Core/Src/SEGGER_RTT.c ****   }
 4341              		.loc 1 350 5 view .LVU1800
 350:Core/Src/SEGGER_RTT.c ****   }
 4342              		.loc 1 350 16 is_stmt 0 view .LVU1801
 4343              		.thumb
 4344              		.syntax unified
 4345 0094 4520     		movs	r0, #69
 4346 0096 4727     		movs	r7, #71
 4347 0098 4FF0530C 		mov	ip, #83
 4348 009c 86F800C0 		strb	ip, [r6]
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 4349              		.loc 1 349 42 is_stmt 1 view .LVU1802
 4350              	.LVL426:
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 4351              		.loc 1 349 17 view .LVU1803
 350:Core/Src/SEGGER_RTT.c ****   }
 4352              		.loc 1 350 5 view .LVU1804
 350:Core/Src/SEGGER_RTT.c ****   }
 4353              		.loc 1 350 16 is_stmt 0 view .LVU1805
 4354 00a0 5221     		movs	r1, #82
 4355 00a2 7070     		strb	r0, [r6, #1]
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 4356              		.loc 1 349 42 is_stmt 1 view .LVU1806
 4357              	.LVL427:
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 4358              		.loc 1 349 17 view .LVU1807
 350:Core/Src/SEGGER_RTT.c ****   }
 4359              		.loc 1 350 5 view .LVU1808
 350:Core/Src/SEGGER_RTT.c ****   }
 4360              		.loc 1 350 16 is_stmt 0 view .LVU1809
 4361 00a4 5422     		movs	r2, #84
 4362 00a6 B770     		strb	r7, [r6, #2]
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 4363              		.loc 1 349 42 is_stmt 1 view .LVU1810
 4364              	.LVL428:
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 4365              		.loc 1 349 17 view .LVU1811
 350:Core/Src/SEGGER_RTT.c ****   }
 4366              		.loc 1 350 5 view .LVU1812
 350:Core/Src/SEGGER_RTT.c ****   }
 4367              		.loc 1 350 16 is_stmt 0 view .LVU1813
 4368 00a8 F770     		strb	r7, [r6, #3]
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 4369              		.loc 1 349 42 is_stmt 1 view .LVU1814
 4370              	.LVL429:
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 4371              		.loc 1 349 17 view .LVU1815
 350:Core/Src/SEGGER_RTT.c ****   }
 4372              		.loc 1 350 5 view .LVU1816
 350:Core/Src/SEGGER_RTT.c ****   }
 4373              		.loc 1 350 16 is_stmt 0 view .LVU1817
 4374 00aa 3071     		strb	r0, [r6, #4]
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 4375              		.loc 1 349 42 is_stmt 1 view .LVU1818
 4376              	.LVL430:
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccs0vIiH.s 			page 127


 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 4377              		.loc 1 349 17 view .LVU1819
 350:Core/Src/SEGGER_RTT.c ****   }
 4378              		.loc 1 350 5 view .LVU1820
 350:Core/Src/SEGGER_RTT.c ****   }
 4379              		.loc 1 350 16 is_stmt 0 view .LVU1821
 4380 00ac 2020     		movs	r0, #32
 4381 00ae 7171     		strb	r1, [r6, #5]
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 4382              		.loc 1 349 42 is_stmt 1 view .LVU1822
 4383              	.LVL431:
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 4384              		.loc 1 349 17 view .LVU1823
 350:Core/Src/SEGGER_RTT.c ****   }
 4385              		.loc 1 350 5 view .LVU1824
 350:Core/Src/SEGGER_RTT.c ****   }
 4386              		.loc 1 350 16 is_stmt 0 view .LVU1825
 4387 00b0 B071     		strb	r0, [r6, #6]
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 4388              		.loc 1 349 42 is_stmt 1 view .LVU1826
 4389              	.LVL432:
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 4390              		.loc 1 349 17 view .LVU1827
 350:Core/Src/SEGGER_RTT.c ****   }
 4391              		.loc 1 350 5 view .LVU1828
 350:Core/Src/SEGGER_RTT.c ****   }
 4392              		.loc 1 350 16 is_stmt 0 view .LVU1829
 4393 00b2 F171     		strb	r1, [r6, #7]
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 4394              		.loc 1 349 42 is_stmt 1 view .LVU1830
 4395              	.LVL433:
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 4396              		.loc 1 349 17 view .LVU1831
 350:Core/Src/SEGGER_RTT.c ****   }
 4397              		.loc 1 350 5 view .LVU1832
 350:Core/Src/SEGGER_RTT.c ****   }
 4398              		.loc 1 350 16 is_stmt 0 view .LVU1833
 4399 00b4 3272     		strb	r2, [r6, #8]
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 4400              		.loc 1 349 42 is_stmt 1 view .LVU1834
 4401              	.LVL434:
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 4402              		.loc 1 349 17 view .LVU1835
 350:Core/Src/SEGGER_RTT.c ****   }
 4403              		.loc 1 350 5 view .LVU1836
 350:Core/Src/SEGGER_RTT.c ****   }
 4404              		.loc 1 350 16 is_stmt 0 view .LVU1837
 4405 00b6 7272     		strb	r2, [r6, #9]
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 4406              		.loc 1 349 42 is_stmt 1 view .LVU1838
 4407              	.LVL435:
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 4408              		.loc 1 349 17 view .LVU1839
 350:Core/Src/SEGGER_RTT.c ****   }
 4409              		.loc 1 350 5 view .LVU1840
 350:Core/Src/SEGGER_RTT.c ****   }
 4410              		.loc 1 350 16 is_stmt 0 view .LVU1841
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccs0vIiH.s 			page 128


 4411 00b8 B572     		strb	r5, [r6, #10]
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 4412              		.loc 1 349 42 is_stmt 1 view .LVU1842
 4413              	.LVL436:
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 4414              		.loc 1 349 17 view .LVU1843
 350:Core/Src/SEGGER_RTT.c ****   }
 4415              		.loc 1 350 5 view .LVU1844
 350:Core/Src/SEGGER_RTT.c ****   }
 4416              		.loc 1 350 16 is_stmt 0 view .LVU1845
 4417 00ba F572     		strb	r5, [r6, #11]
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 4418              		.loc 1 349 42 is_stmt 1 view .LVU1846
 4419              	.LVL437:
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 4420              		.loc 1 349 17 view .LVU1847
 350:Core/Src/SEGGER_RTT.c ****   }
 4421              		.loc 1 350 5 view .LVU1848
 350:Core/Src/SEGGER_RTT.c ****   }
 4422              		.loc 1 350 16 is_stmt 0 view .LVU1849
 4423 00bc 3573     		strb	r5, [r6, #12]
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 4424              		.loc 1 349 42 is_stmt 1 view .LVU1850
 4425              	.LVL438:
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 4426              		.loc 1 349 17 view .LVU1851
 350:Core/Src/SEGGER_RTT.c ****   }
 4427              		.loc 1 350 5 view .LVU1852
 350:Core/Src/SEGGER_RTT.c ****   }
 4428              		.loc 1 350 16 is_stmt 0 view .LVU1853
 4429 00be 7573     		strb	r5, [r6, #13]
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 4430              		.loc 1 349 42 is_stmt 1 view .LVU1854
 4431              	.LVL439:
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 4432              		.loc 1 349 17 view .LVU1855
 350:Core/Src/SEGGER_RTT.c ****   }
 4433              		.loc 1 350 5 view .LVU1856
 350:Core/Src/SEGGER_RTT.c ****   }
 4434              		.loc 1 350 16 is_stmt 0 view .LVU1857
 4435 00c0 B573     		strb	r5, [r6, #14]
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 4436              		.loc 1 349 42 is_stmt 1 view .LVU1858
 4437              	.LVL440:
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 4438              		.loc 1 349 17 view .LVU1859
 350:Core/Src/SEGGER_RTT.c ****   }
 4439              		.loc 1 350 5 view .LVU1860
 350:Core/Src/SEGGER_RTT.c ****   }
 4440              		.loc 1 350 16 is_stmt 0 view .LVU1861
 4441 00c2 F573     		strb	r5, [r6, #15]
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 4442              		.loc 1 349 42 is_stmt 1 view .LVU1862
 4443              	.LVL441:
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 4444              		.loc 1 349 17 view .LVU1863
 352:Core/Src/SEGGER_RTT.c **** }
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccs0vIiH.s 			page 129


 4445              		.loc 1 352 3 view .LVU1864
 4446              		.syntax unified
 4447              	@ 352 "Core/Src/SEGGER_RTT.c" 1
 4448 00c4 BFF35F8F 		dmb
 4449              	
 4450              	@ 0 "" 2
 352:Core/Src/SEGGER_RTT.c **** }
 4451              		.loc 1 352 13 view .LVU1865
 353:Core/Src/SEGGER_RTT.c **** 
 4452              		.loc 1 353 1 is_stmt 0 view .LVU1866
 4453              		.thumb
 4454              		.syntax unified
 4455 00c8 A3E7     		b	.L184
 4456              	.LVL442:
 4457              	.L207:
 353:Core/Src/SEGGER_RTT.c **** 
 4458              		.loc 1 353 1 view .LVU1867
 4459              	.LBE246:
 4460              	.LBE245:
 4461              	.LBE274:
 4462              	.LBB275:
 4463              	.LBB273:
 4464              	.LBB271:
1118:Core/Src/SEGGER_RTT.c ****     if (Avail < NumBytes) {
 4465              		.loc 1 1118 5 is_stmt 1 view .LVU1868
 4466              	.LBB252:
 4467              	.LBI252:
 526:Core/Src/SEGGER_RTT.c ****   unsigned RdOff;
 4468              		.loc 1 526 17 view .LVU1869
 4469              	.LBB253:
 527:Core/Src/SEGGER_RTT.c ****   unsigned WrOff;
 4470              		.loc 1 527 3 view .LVU1870
 528:Core/Src/SEGGER_RTT.c ****   unsigned r;
 4471              		.loc 1 528 3 view .LVU1871
 529:Core/Src/SEGGER_RTT.c ****   //
 4472              		.loc 1 529 3 view .LVU1872
 534:Core/Src/SEGGER_RTT.c ****   WrOff = pRing->WrOff;
 4473              		.loc 1 534 3 view .LVU1873
 534:Core/Src/SEGGER_RTT.c ****   WrOff = pRing->WrOff;
 4474              		.loc 1 534 9 is_stmt 0 view .LVU1874
 4475 00ca BA6A     		ldr	r2, [r7, #40]
 4476              	.LVL443:
 535:Core/Src/SEGGER_RTT.c ****   if (RdOff <= WrOff) {
 4477              		.loc 1 535 3 is_stmt 1 view .LVU1875
 535:Core/Src/SEGGER_RTT.c ****   if (RdOff <= WrOff) {
 4478              		.loc 1 535 9 is_stmt 0 view .LVU1876
 4479 00cc D7F824A0 		ldr	r10, [r7, #36]
 4480              	.LVL444:
 536:Core/Src/SEGGER_RTT.c ****     r = pRing->SizeOfBuffer - 1u - WrOff + RdOff;
 4481              		.loc 1 536 3 is_stmt 1 view .LVU1877
 536:Core/Src/SEGGER_RTT.c ****     r = pRing->SizeOfBuffer - 1u - WrOff + RdOff;
 4482              		.loc 1 536 6 is_stmt 0 view .LVU1878
 4483 00d0 5245     		cmp	r2, r10
 537:Core/Src/SEGGER_RTT.c ****   } else {
 4484              		.loc 1 537 5 is_stmt 1 view .LVU1879
 537:Core/Src/SEGGER_RTT.c ****   } else {
 4485              		.loc 1 537 7 is_stmt 0 view .LVU1880
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccs0vIiH.s 			page 130


 4486 00d2 9CBF     		itt	ls
 4487 00d4 396A     		ldrls	r1, [r7, #32]
 4488 00d6 5218     		addls	r2, r2, r1
 4489              	.LVL445:
 539:Core/Src/SEGGER_RTT.c ****   }
 4490              		.loc 1 539 5 is_stmt 1 view .LVU1881
 539:Core/Src/SEGGER_RTT.c ****   }
 4491              		.loc 1 539 7 is_stmt 0 view .LVU1882
 4492 00d8 013A     		subs	r2, r2, #1
 4493 00da A2EB0A02 		sub	r2, r2, r10
 4494              	.LVL446:
 541:Core/Src/SEGGER_RTT.c **** }
 4495              		.loc 1 541 3 is_stmt 1 view .LVU1883
 541:Core/Src/SEGGER_RTT.c **** }
 4496              		.loc 1 541 3 is_stmt 0 view .LVU1884
 4497              	.LBE253:
 4498              	.LBE252:
1119:Core/Src/SEGGER_RTT.c ****       Status = 0u;
 4499              		.loc 1 1119 5 is_stmt 1 view .LVU1885
1119:Core/Src/SEGGER_RTT.c ****       Status = 0u;
 4500              		.loc 1 1119 8 is_stmt 0 view .LVU1886
 4501 00de 9145     		cmp	r9, r2
 4502 00e0 B2D8     		bhi	.L187
1122:Core/Src/SEGGER_RTT.c ****       _WriteNoCheck(pRing, pData, NumBytes);
 4503              		.loc 1 1122 7 is_stmt 1 view .LVU1887
 4504              	.LVL447:
1123:Core/Src/SEGGER_RTT.c ****     }
 4505              		.loc 1 1123 7 view .LVU1888
 4506              	.LBB255:
 4507              	.LBI255:
 436:Core/Src/SEGGER_RTT.c ****   unsigned NumBytesAtOnce;
 4508              		.loc 1 436 13 view .LVU1889
 4509              	.LBB256:
 437:Core/Src/SEGGER_RTT.c ****   unsigned WrOff;
 4510              		.loc 1 437 3 view .LVU1890
 438:Core/Src/SEGGER_RTT.c ****   unsigned Rem;
 4511              		.loc 1 438 3 view .LVU1891
 439:Core/Src/SEGGER_RTT.c ****   volatile char* pDst;
 4512              		.loc 1 439 3 view .LVU1892
 440:Core/Src/SEGGER_RTT.c **** 
 4513              		.loc 1 440 3 view .LVU1893
 442:Core/Src/SEGGER_RTT.c ****   Rem = pRing->SizeOfBuffer - WrOff;
 4514              		.loc 1 442 3 view .LVU1894
 443:Core/Src/SEGGER_RTT.c ****   if (Rem > NumBytes) {
 4515              		.loc 1 443 3 view .LVU1895
 443:Core/Src/SEGGER_RTT.c ****   if (Rem > NumBytes) {
 4516              		.loc 1 443 14 is_stmt 0 view .LVU1896
 4517 00e2 2544     		add	r5, r5, r4
 4518 00e4 06EBC505 		add	r5, r6, r5, lsl #3
 448:Core/Src/SEGGER_RTT.c **** #if SEGGER_RTT_MEMCPY_USE_BYTELOOP
 4519              		.loc 1 448 18 view .LVU1897
 4520 00e8 0134     		adds	r4, r4, #1
 4521              	.LVL448:
 443:Core/Src/SEGGER_RTT.c ****   if (Rem > NumBytes) {
 4522              		.loc 1 443 14 view .LVU1898
 4523 00ea 2F6A     		ldr	r7, [r5, #32]
 443:Core/Src/SEGGER_RTT.c ****   if (Rem > NumBytes) {
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccs0vIiH.s 			page 131


 4524              		.loc 1 443 7 view .LVU1899
 4525 00ec A7EB0A08 		sub	r8, r7, r10
 4526              	.LVL449:
 444:Core/Src/SEGGER_RTT.c ****     //
 4527              		.loc 1 444 3 is_stmt 1 view .LVU1900
 444:Core/Src/SEGGER_RTT.c ****     //
 4528              		.loc 1 444 6 is_stmt 0 view .LVU1901
 4529 00f0 C145     		cmp	r9, r8
 448:Core/Src/SEGGER_RTT.c **** #if SEGGER_RTT_MEMCPY_USE_BYTELOOP
 4530              		.loc 1 448 18 view .LVU1902
 4531 00f2 04EB4404 		add	r4, r4, r4, lsl #1
 4532              	.LVL450:
 444:Core/Src/SEGGER_RTT.c ****     //
 4533              		.loc 1 444 6 view .LVU1903
 4534 00f6 80F0A180 		bcs	.L190
 448:Core/Src/SEGGER_RTT.c **** #if SEGGER_RTT_MEMCPY_USE_BYTELOOP
 4535              		.loc 1 448 5 is_stmt 1 view .LVU1904
 4536              	.LVL451:
 457:Core/Src/SEGGER_RTT.c ****     RTT__DMB();                     // Force data write to be complete before writing the <WrOff>, 
 4537              		.loc 1 457 5 view .LVU1905
 448:Core/Src/SEGGER_RTT.c **** #if SEGGER_RTT_MEMCPY_USE_BYTELOOP
 4538              		.loc 1 448 18 is_stmt 0 view .LVU1906
 4539 00fa 06EBC402 		add	r2, r6, r4, lsl #3
 4540              	.LVL452:
 457:Core/Src/SEGGER_RTT.c ****     RTT__DMB();                     // Force data write to be complete before writing the <WrOff>, 
 4541              		.loc 1 457 5 view .LVU1907
 4542 00fe 5946     		mov	r1, fp
 448:Core/Src/SEGGER_RTT.c **** #if SEGGER_RTT_MEMCPY_USE_BYTELOOP
 4543              		.loc 1 448 10 view .LVU1908
 4544 0100 5068     		ldr	r0, [r2, #4]
 457:Core/Src/SEGGER_RTT.c ****     RTT__DMB();                     // Force data write to be complete before writing the <WrOff>, 
 4545              		.loc 1 457 5 view .LVU1909
 4546 0102 4A46     		mov	r2, r9
 4547 0104 5044     		add	r0, r0, r10
 4548 0106 FFF7FEFF 		bl	memcpy
 4549              	.LVL453:
 458:Core/Src/SEGGER_RTT.c ****     pRing->WrOff = WrOff + NumBytes;
 4550              		.loc 1 458 5 is_stmt 1 view .LVU1910
 4551              		.syntax unified
 4552              	@ 458 "Core/Src/SEGGER_RTT.c" 1
 4553 010a BFF35F8F 		dmb
 4554              	
 4555              	@ 0 "" 2
 458:Core/Src/SEGGER_RTT.c ****     pRing->WrOff = WrOff + NumBytes;
 4556              		.loc 1 458 15 view .LVU1911
 459:Core/Src/SEGGER_RTT.c **** #endif
 4557              		.loc 1 459 5 view .LVU1912
 459:Core/Src/SEGGER_RTT.c **** #endif
 4558              		.loc 1 459 26 is_stmt 0 view .LVU1913
 4559              		.thumb
 4560              		.syntax unified
 4561 010e 09EB0A03 		add	r3, r9, r10
 459:Core/Src/SEGGER_RTT.c **** #endif
 4562              		.loc 1 459 18 view .LVU1914
 4563 0112 6B62     		str	r3, [r5, #36]
 4564 0114 C846     		mov	r8, r9
 4565              	.LVL454:
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccs0vIiH.s 			page 132


 459:Core/Src/SEGGER_RTT.c **** #endif
 4566              		.loc 1 459 18 view .LVU1915
 4567 0116 97E7     		b	.L187
 4568              	.LVL455:
 4569              	.L186:
 459:Core/Src/SEGGER_RTT.c **** #endif
 4570              		.loc 1 459 18 view .LVU1916
 4571              	.LBE256:
 4572              	.LBE255:
1138:Core/Src/SEGGER_RTT.c ****     break;
 4573              		.loc 1 1138 5 is_stmt 1 view .LVU1917
 4574              	.LBB258:
 4575              	.LBI258:
 374:Core/Src/SEGGER_RTT.c ****   unsigned NumBytesToWrite;
 4576              		.loc 1 374 17 view .LVU1918
 4577              	.LBB259:
 375:Core/Src/SEGGER_RTT.c ****   unsigned NumBytesWritten;
 4578              		.loc 1 375 3 view .LVU1919
 376:Core/Src/SEGGER_RTT.c ****   unsigned RdOff;
 4579              		.loc 1 376 3 view .LVU1920
 377:Core/Src/SEGGER_RTT.c ****   unsigned WrOff;
 4580              		.loc 1 377 3 view .LVU1921
 378:Core/Src/SEGGER_RTT.c ****   volatile char* pDst;
 4581              		.loc 1 378 3 view .LVU1922
 379:Core/Src/SEGGER_RTT.c ****   //
 4582              		.loc 1 379 3 view .LVU1923
 383:Core/Src/SEGGER_RTT.c ****   WrOff = pRing->WrOff;
 4583              		.loc 1 383 3 view .LVU1924
 384:Core/Src/SEGGER_RTT.c ****   do {
 4584              		.loc 1 384 3 view .LVU1925
 4585 0118 0134     		adds	r4, r4, #1
 4586              	.LVL456:
 394:Core/Src/SEGGER_RTT.c **** #if SEGGER_RTT_MEMCPY_USE_BYTELOOP
 4587              		.loc 1 394 18 is_stmt 0 view .LVU1926
 4588 011a 04EB4404 		add	r4, r4, r4, lsl #1
 4589              	.LVL457:
 384:Core/Src/SEGGER_RTT.c ****   do {
 4590              		.loc 1 384 9 view .LVU1927
 4591 011e 7D6A     		ldr	r5, [r7, #36]
 4592              	.LVL458:
 394:Core/Src/SEGGER_RTT.c **** #if SEGGER_RTT_MEMCPY_USE_BYTELOOP
 4593              		.loc 1 394 18 view .LVU1928
 4594 0120 4FEAC40A 		lsl	r10, r4, #3
 383:Core/Src/SEGGER_RTT.c ****   WrOff = pRing->WrOff;
 4595              		.loc 1 383 19 view .LVU1929
 4596 0124 4FF00008 		mov	r8, #0
 4597              	.LVL459:
 4598              	.L198:
 385:Core/Src/SEGGER_RTT.c ****     RdOff = pRing->RdOff;                         // May be changed by host (debug probe) in the me
 4599              		.loc 1 385 3 is_stmt 1 view .LVU1930
 386:Core/Src/SEGGER_RTT.c ****     if (RdOff > WrOff) {
 4600              		.loc 1 386 5 view .LVU1931
 388:Core/Src/SEGGER_RTT.c ****     } else {
 4601              		.loc 1 388 7 view .LVU1932
 390:Core/Src/SEGGER_RTT.c ****     }
 4602              		.loc 1 390 7 view .LVU1933
 386:Core/Src/SEGGER_RTT.c ****     if (RdOff > WrOff) {
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccs0vIiH.s 			page 133


 4603              		.loc 1 386 11 is_stmt 0 view .LVU1934
 4604 0128 BB6A     		ldr	r3, [r7, #40]
 4605              	.LVL460:
 387:Core/Src/SEGGER_RTT.c ****       NumBytesToWrite = RdOff - WrOff - 1u;
 4606              		.loc 1 387 5 is_stmt 1 view .LVU1935
 387:Core/Src/SEGGER_RTT.c ****       NumBytesToWrite = RdOff - WrOff - 1u;
 4607              		.loc 1 387 8 is_stmt 0 view .LVU1936
 4608 012a AB42     		cmp	r3, r5
 388:Core/Src/SEGGER_RTT.c ****     } else {
 4609              		.loc 1 388 23 view .LVU1937
 4610 012c 03F1FF32 		add	r2, r3, #-1
 387:Core/Src/SEGGER_RTT.c ****       NumBytesToWrite = RdOff - WrOff - 1u;
 4611              		.loc 1 387 8 view .LVU1938
 4612 0130 25D9     		bls	.L194
 4613              	.L209:
 390:Core/Src/SEGGER_RTT.c ****     }
 4614              		.loc 1 390 30 view .LVU1939
 4615 0132 3C6A     		ldr	r4, [r7, #32]
 388:Core/Src/SEGGER_RTT.c ****     } else {
 4616              		.loc 1 388 23 view .LVU1940
 4617 0134 531B     		subs	r3, r2, r5
 4618              	.LVL461:
 4619              	.L195:
 392:Core/Src/SEGGER_RTT.c ****     NumBytesToWrite = MIN(NumBytesToWrite, NumBytes);
 4620              		.loc 1 392 5 is_stmt 1 view .LVU1941
 4621 0136 4B45     		cmp	r3, r9
 394:Core/Src/SEGGER_RTT.c **** #if SEGGER_RTT_MEMCPY_USE_BYTELOOP
 4622              		.loc 1 394 18 is_stmt 0 view .LVU1942
 4623 0138 06EB0A02 		add	r2, r6, r10
 392:Core/Src/SEGGER_RTT.c ****     NumBytesToWrite = MIN(NumBytesToWrite, NumBytes);
 4624              		.loc 1 392 23 view .LVU1943
 4625 013c A4EB0504 		sub	r4, r4, r5
 4626 0140 28BF     		it	cs
 4627 0142 4B46     		movcs	r3, r9
 393:Core/Src/SEGGER_RTT.c ****     pDst = (pRing->pBuffer + WrOff) + SEGGER_RTT_UNCACHED_OFF;
 4628              		.loc 1 393 5 is_stmt 1 view .LVU1944
 393:Core/Src/SEGGER_RTT.c ****     pDst = (pRing->pBuffer + WrOff) + SEGGER_RTT_UNCACHED_OFF;
 4629              		.loc 1 393 21 is_stmt 0 view .LVU1945
 4630 0144 9C42     		cmp	r4, r3
 394:Core/Src/SEGGER_RTT.c **** #if SEGGER_RTT_MEMCPY_USE_BYTELOOP
 4631              		.loc 1 394 10 view .LVU1946
 4632 0146 5068     		ldr	r0, [r2, #4]
 393:Core/Src/SEGGER_RTT.c ****     pDst = (pRing->pBuffer + WrOff) + SEGGER_RTT_UNCACHED_OFF;
 4633              		.loc 1 393 21 view .LVU1947
 4634 0148 28BF     		it	cs
 4635 014a 1C46     		movcs	r4, r3
 4636              	.LVL462:
 394:Core/Src/SEGGER_RTT.c **** #if SEGGER_RTT_MEMCPY_USE_BYTELOOP
 4637              		.loc 1 394 5 is_stmt 1 view .LVU1948
 403:Core/Src/SEGGER_RTT.c ****     NumBytesWritten += NumBytesToWrite;
 4638              		.loc 1 403 5 view .LVU1949
 4639 014c 2844     		add	r0, r0, r5
 4640 014e 5946     		mov	r1, fp
 4641 0150 2246     		mov	r2, r4
 4642 0152 FFF7FEFF 		bl	memcpy
 4643              	.LVL463:
 404:Core/Src/SEGGER_RTT.c ****     pBuffer         += NumBytesToWrite;
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccs0vIiH.s 			page 134


 4644              		.loc 1 404 5 view .LVU1950
 409:Core/Src/SEGGER_RTT.c ****       WrOff = 0u;
 4645              		.loc 1 409 8 is_stmt 0 view .LVU1951
 4646 0156 3B6A     		ldr	r3, [r7, #32]
 407:Core/Src/SEGGER_RTT.c **** #endif
 4647              		.loc 1 407 21 view .LVU1952
 4648 0158 2544     		add	r5, r5, r4
 4649              	.LVL464:
 412:Core/Src/SEGGER_RTT.c ****     pRing->WrOff = WrOff;
 4650              		.loc 1 412 5 is_stmt 1 view .LVU1953
 409:Core/Src/SEGGER_RTT.c ****       WrOff = 0u;
 4651              		.loc 1 409 8 is_stmt 0 view .LVU1954
 4652 015a 9D42     		cmp	r5, r3
 404:Core/Src/SEGGER_RTT.c ****     pBuffer         += NumBytesToWrite;
 4653              		.loc 1 404 21 view .LVU1955
 4654 015c A044     		add	r8, r8, r4
 4655              	.LVL465:
 405:Core/Src/SEGGER_RTT.c ****     NumBytes        -= NumBytesToWrite;
 4656              		.loc 1 405 5 is_stmt 1 view .LVU1956
 405:Core/Src/SEGGER_RTT.c ****     NumBytes        -= NumBytesToWrite;
 4657              		.loc 1 405 21 is_stmt 0 view .LVU1957
 4658 015e A344     		add	fp, fp, r4
 4659              	.LVL466:
 406:Core/Src/SEGGER_RTT.c ****     WrOff           += NumBytesToWrite;
 4660              		.loc 1 406 5 is_stmt 1 view .LVU1958
 406:Core/Src/SEGGER_RTT.c ****     WrOff           += NumBytesToWrite;
 4661              		.loc 1 406 21 is_stmt 0 view .LVU1959
 4662 0160 A9EB0409 		sub	r9, r9, r4
 4663              	.LVL467:
 407:Core/Src/SEGGER_RTT.c **** #endif
 4664              		.loc 1 407 5 is_stmt 1 view .LVU1960
 409:Core/Src/SEGGER_RTT.c ****       WrOff = 0u;
 4665              		.loc 1 409 5 view .LVU1961
 409:Core/Src/SEGGER_RTT.c ****       WrOff = 0u;
 4666              		.loc 1 409 8 is_stmt 0 view .LVU1962
 4667 0164 10D0     		beq	.L208
 412:Core/Src/SEGGER_RTT.c ****     pRing->WrOff = WrOff;
 4668              		.loc 1 412 5 view .LVU1963
 4669              		.syntax unified
 4670              	@ 412 "Core/Src/SEGGER_RTT.c" 1
 4671 0166 BFF35F8F 		dmb
 4672              	
 4673              	@ 0 "" 2
 412:Core/Src/SEGGER_RTT.c ****     pRing->WrOff = WrOff;
 4674              		.loc 1 412 15 is_stmt 1 view .LVU1964
 413:Core/Src/SEGGER_RTT.c ****   } while (NumBytes);
 4675              		.loc 1 413 5 view .LVU1965
 413:Core/Src/SEGGER_RTT.c ****   } while (NumBytes);
 4676              		.loc 1 413 18 is_stmt 0 view .LVU1966
 4677              		.thumb
 4678              		.syntax unified
 4679 016a 7D62     		str	r5, [r7, #36]
 414:Core/Src/SEGGER_RTT.c ****   return NumBytesWritten;
 4680              		.loc 1 414 12 is_stmt 1 view .LVU1967
 4681 016c B9F1000F 		cmp	r9, #0
 4682 0170 3FF46AAF 		beq	.L187
 385:Core/Src/SEGGER_RTT.c ****     RdOff = pRing->RdOff;                         // May be changed by host (debug probe) in the me
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccs0vIiH.s 			page 135


 4683              		.loc 1 385 3 view .LVU1968
 386:Core/Src/SEGGER_RTT.c ****     if (RdOff > WrOff) {
 4684              		.loc 1 386 5 view .LVU1969
 388:Core/Src/SEGGER_RTT.c ****     } else {
 4685              		.loc 1 388 7 view .LVU1970
 390:Core/Src/SEGGER_RTT.c ****     }
 4686              		.loc 1 390 7 view .LVU1971
 386:Core/Src/SEGGER_RTT.c ****     if (RdOff > WrOff) {
 4687              		.loc 1 386 11 is_stmt 0 view .LVU1972
 4688 0174 BB6A     		ldr	r3, [r7, #40]
 4689              	.LVL468:
 387:Core/Src/SEGGER_RTT.c ****       NumBytesToWrite = RdOff - WrOff - 1u;
 4690              		.loc 1 387 5 is_stmt 1 view .LVU1973
 387:Core/Src/SEGGER_RTT.c ****       NumBytesToWrite = RdOff - WrOff - 1u;
 4691              		.loc 1 387 8 is_stmt 0 view .LVU1974
 4692 0176 AB42     		cmp	r3, r5
 388:Core/Src/SEGGER_RTT.c ****     } else {
 4693              		.loc 1 388 23 view .LVU1975
 4694 0178 03F1FF32 		add	r2, r3, #-1
 387:Core/Src/SEGGER_RTT.c ****       NumBytesToWrite = RdOff - WrOff - 1u;
 4695              		.loc 1 387 8 view .LVU1976
 4696 017c D9D8     		bhi	.L209
 4697              	.LVL469:
 4698              	.L194:
 390:Core/Src/SEGGER_RTT.c ****     }
 4699              		.loc 1 390 30 view .LVU1977
 4700 017e 3C6A     		ldr	r4, [r7, #32]
 390:Core/Src/SEGGER_RTT.c ****     }
 4701              		.loc 1 390 23 view .LVU1978
 4702 0180 2344     		add	r3, r3, r4
 4703              	.LVL470:
 390:Core/Src/SEGGER_RTT.c ****     }
 4704              		.loc 1 390 23 view .LVU1979
 4705 0182 013B     		subs	r3, r3, #1
 4706 0184 5B1B     		subs	r3, r3, r5
 4707              	.LVL471:
 390:Core/Src/SEGGER_RTT.c ****     }
 4708              		.loc 1 390 23 view .LVU1980
 4709 0186 D6E7     		b	.L195
 4710              	.LVL472:
 4711              	.L208:
 412:Core/Src/SEGGER_RTT.c ****     pRing->WrOff = WrOff;
 4712              		.loc 1 412 5 is_stmt 1 view .LVU1981
 4713              		.syntax unified
 4714              	@ 412 "Core/Src/SEGGER_RTT.c" 1
 4715 0188 BFF35F8F 		dmb
 4716              	
 4717              	@ 0 "" 2
 412:Core/Src/SEGGER_RTT.c ****     pRing->WrOff = WrOff;
 4718              		.loc 1 412 15 view .LVU1982
 413:Core/Src/SEGGER_RTT.c ****   } while (NumBytes);
 4719              		.loc 1 413 5 view .LVU1983
 413:Core/Src/SEGGER_RTT.c ****   } while (NumBytes);
 4720              		.loc 1 413 18 is_stmt 0 view .LVU1984
 4721              		.thumb
 4722              		.syntax unified
 4723 018c 0025     		movs	r5, #0
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccs0vIiH.s 			page 136


 4724 018e 7D62     		str	r5, [r7, #36]
 414:Core/Src/SEGGER_RTT.c ****   return NumBytesWritten;
 4725              		.loc 1 414 12 is_stmt 1 view .LVU1985
 4726 0190 B9F1000F 		cmp	r9, #0
 4727 0194 C8D1     		bne	.L198
 4728 0196 57E7     		b	.L187
 4729              	.LVL473:
 4730              	.L185:
 414:Core/Src/SEGGER_RTT.c ****   return NumBytesWritten;
 4731              		.loc 1 414 12 is_stmt 0 view .LVU1986
 4732              	.LBE259:
 4733              	.LBE258:
1130:Core/Src/SEGGER_RTT.c ****     Status = Avail < NumBytes ? Avail : NumBytes;
 4734              		.loc 1 1130 5 is_stmt 1 view .LVU1987
 4735              	.LBB260:
 4736              	.LBI260:
 526:Core/Src/SEGGER_RTT.c ****   unsigned RdOff;
 4737              		.loc 1 526 17 view .LVU1988
 4738              	.LBB261:
 527:Core/Src/SEGGER_RTT.c ****   unsigned WrOff;
 4739              		.loc 1 527 3 view .LVU1989
 528:Core/Src/SEGGER_RTT.c ****   unsigned r;
 4740              		.loc 1 528 3 view .LVU1990
 529:Core/Src/SEGGER_RTT.c ****   //
 4741              		.loc 1 529 3 view .LVU1991
 534:Core/Src/SEGGER_RTT.c ****   WrOff = pRing->WrOff;
 4742              		.loc 1 534 3 view .LVU1992
 534:Core/Src/SEGGER_RTT.c ****   WrOff = pRing->WrOff;
 4743              		.loc 1 534 9 is_stmt 0 view .LVU1993
 4744 0198 BA6A     		ldr	r2, [r7, #40]
 4745              	.LVL474:
 535:Core/Src/SEGGER_RTT.c ****   if (RdOff <= WrOff) {
 4746              		.loc 1 535 3 is_stmt 1 view .LVU1994
 535:Core/Src/SEGGER_RTT.c ****   if (RdOff <= WrOff) {
 4747              		.loc 1 535 9 is_stmt 0 view .LVU1995
 4748 019a D7F824A0 		ldr	r10, [r7, #36]
 4749              	.LVL475:
 536:Core/Src/SEGGER_RTT.c ****     r = pRing->SizeOfBuffer - 1u - WrOff + RdOff;
 4750              		.loc 1 536 3 is_stmt 1 view .LVU1996
 536:Core/Src/SEGGER_RTT.c ****     r = pRing->SizeOfBuffer - 1u - WrOff + RdOff;
 4751              		.loc 1 536 6 is_stmt 0 view .LVU1997
 4752 019e 5245     		cmp	r2, r10
 4753 01a0 1FD9     		bls	.L210
 539:Core/Src/SEGGER_RTT.c ****   }
 4754              		.loc 1 539 5 is_stmt 1 view .LVU1998
 539:Core/Src/SEGGER_RTT.c ****   }
 4755              		.loc 1 539 7 is_stmt 0 view .LVU1999
 4756 01a2 02F1FF38 		add	r8, r2, #-1
 4757 01a6 A8EB0A08 		sub	r8, r8, r10
 4758              	.LVL476:
 541:Core/Src/SEGGER_RTT.c **** }
 4759              		.loc 1 541 3 is_stmt 1 view .LVU2000
 541:Core/Src/SEGGER_RTT.c **** }
 4760              		.loc 1 541 3 is_stmt 0 view .LVU2001
 4761              	.LBE261:
 4762              	.LBE260:
1131:Core/Src/SEGGER_RTT.c ****     _WriteNoCheck(pRing, pData, Status);
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccs0vIiH.s 			page 137


 4763              		.loc 1 1131 5 is_stmt 1 view .LVU2002
 4764              	.LBB263:
 4765              	.LBB254:
 537:Core/Src/SEGGER_RTT.c ****   } else {
 4766              		.loc 1 537 14 is_stmt 0 view .LVU2003
 4767 01aa 3F6A     		ldr	r7, [r7, #32]
 4768              	.LBE254:
 4769              	.LBE263:
1131:Core/Src/SEGGER_RTT.c ****     _WriteNoCheck(pRing, pData, Status);
 4770              		.loc 1 1131 12 view .LVU2004
 4771 01ac C845     		cmp	r8, r9
 4772 01ae 28BF     		it	cs
 4773 01b0 C846     		movcs	r8, r9
 4774              	.LVL477:
1132:Core/Src/SEGGER_RTT.c ****     break;
 4775              		.loc 1 1132 5 is_stmt 1 view .LVU2005
 4776              	.LBB264:
 4777              	.LBI264:
 436:Core/Src/SEGGER_RTT.c ****   unsigned NumBytesAtOnce;
 4778              		.loc 1 436 13 view .LVU2006
 4779              	.LBB265:
 437:Core/Src/SEGGER_RTT.c ****   unsigned WrOff;
 4780              		.loc 1 437 3 view .LVU2007
 438:Core/Src/SEGGER_RTT.c ****   unsigned Rem;
 4781              		.loc 1 438 3 view .LVU2008
 439:Core/Src/SEGGER_RTT.c ****   volatile char* pDst;
 4782              		.loc 1 439 3 view .LVU2009
 440:Core/Src/SEGGER_RTT.c **** 
 4783              		.loc 1 440 3 view .LVU2010
 442:Core/Src/SEGGER_RTT.c ****   Rem = pRing->SizeOfBuffer - WrOff;
 4784              		.loc 1 442 3 view .LVU2011
 443:Core/Src/SEGGER_RTT.c ****   if (Rem > NumBytes) {
 4785              		.loc 1 443 3 view .LVU2012
 443:Core/Src/SEGGER_RTT.c ****   if (Rem > NumBytes) {
 4786              		.loc 1 443 7 is_stmt 0 view .LVU2013
 4787 01b2 A7EB0A02 		sub	r2, r7, r10
 4788              	.LVL478:
 444:Core/Src/SEGGER_RTT.c ****     //
 4789              		.loc 1 444 3 is_stmt 1 view .LVU2014
 444:Core/Src/SEGGER_RTT.c ****     //
 4790              		.loc 1 444 6 is_stmt 0 view .LVU2015
 4791 01b6 9045     		cmp	r8, r2
 4792 01b8 21D2     		bcs	.L193
 4793              	.L211:
 448:Core/Src/SEGGER_RTT.c **** #if SEGGER_RTT_MEMCPY_USE_BYTELOOP
 4794              		.loc 1 448 5 is_stmt 1 view .LVU2016
 4795              	.LVL479:
 457:Core/Src/SEGGER_RTT.c ****     RTT__DMB();                     // Force data write to be complete before writing the <WrOff>, 
 4796              		.loc 1 457 5 view .LVU2017
 448:Core/Src/SEGGER_RTT.c **** #if SEGGER_RTT_MEMCPY_USE_BYTELOOP
 4797              		.loc 1 448 18 is_stmt 0 view .LVU2018
 4798 01ba 631C     		adds	r3, r4, #1
 4799              	.LVL480:
 448:Core/Src/SEGGER_RTT.c **** #if SEGGER_RTT_MEMCPY_USE_BYTELOOP
 4800              		.loc 1 448 18 view .LVU2019
 4801 01bc 03EB4303 		add	r3, r3, r3, lsl #1
 4802 01c0 06EBC303 		add	r3, r6, r3, lsl #3
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccs0vIiH.s 			page 138


 457:Core/Src/SEGGER_RTT.c ****     RTT__DMB();                     // Force data write to be complete before writing the <WrOff>, 
 4803              		.loc 1 457 5 view .LVU2020
 4804 01c4 5946     		mov	r1, fp
 448:Core/Src/SEGGER_RTT.c **** #if SEGGER_RTT_MEMCPY_USE_BYTELOOP
 4805              		.loc 1 448 10 view .LVU2021
 4806 01c6 5868     		ldr	r0, [r3, #4]
 457:Core/Src/SEGGER_RTT.c ****     RTT__DMB();                     // Force data write to be complete before writing the <WrOff>, 
 4807              		.loc 1 457 5 view .LVU2022
 4808 01c8 4246     		mov	r2, r8
 4809              	.LVL481:
 457:Core/Src/SEGGER_RTT.c ****     RTT__DMB();                     // Force data write to be complete before writing the <WrOff>, 
 4810              		.loc 1 457 5 view .LVU2023
 4811 01ca 5044     		add	r0, r0, r10
 4812 01cc FFF7FEFF 		bl	memcpy
 4813              	.LVL482:
 458:Core/Src/SEGGER_RTT.c ****     pRing->WrOff = WrOff + NumBytes;
 4814              		.loc 1 458 5 is_stmt 1 view .LVU2024
 4815              		.syntax unified
 4816              	@ 458 "Core/Src/SEGGER_RTT.c" 1
 4817 01d0 BFF35F8F 		dmb
 4818              	
 4819              	@ 0 "" 2
 458:Core/Src/SEGGER_RTT.c ****     pRing->WrOff = WrOff + NumBytes;
 4820              		.loc 1 458 15 view .LVU2025
 459:Core/Src/SEGGER_RTT.c **** #endif
 4821              		.loc 1 459 5 view .LVU2026
 459:Core/Src/SEGGER_RTT.c **** #endif
 4822              		.loc 1 459 18 is_stmt 0 view .LVU2027
 4823              		.thumb
 4824              		.syntax unified
 4825 01d4 2544     		add	r5, r5, r4
 4826 01d6 06EBC505 		add	r5, r6, r5, lsl #3
 459:Core/Src/SEGGER_RTT.c **** #endif
 4827              		.loc 1 459 26 view .LVU2028
 4828 01da 0AEB0803 		add	r3, r10, r8
 459:Core/Src/SEGGER_RTT.c **** #endif
 4829              		.loc 1 459 18 view .LVU2029
 4830 01de 6B62     		str	r3, [r5, #36]
 4831 01e0 32E7     		b	.L187
 4832              	.LVL483:
 4833              	.L210:
 459:Core/Src/SEGGER_RTT.c **** #endif
 4834              		.loc 1 459 18 view .LVU2030
 4835              	.LBE265:
 4836              	.LBE264:
 4837              	.LBB267:
 4838              	.LBB262:
 537:Core/Src/SEGGER_RTT.c ****   } else {
 4839              		.loc 1 537 5 is_stmt 1 view .LVU2031
 537:Core/Src/SEGGER_RTT.c ****   } else {
 4840              		.loc 1 537 14 is_stmt 0 view .LVU2032
 4841 01e2 3F6A     		ldr	r7, [r7, #32]
 537:Core/Src/SEGGER_RTT.c ****   } else {
 4842              		.loc 1 537 7 view .LVU2033
 4843 01e4 02EB0708 		add	r8, r2, r7
 4844 01e8 08F1FF38 		add	r8, r8, #-1
 4845 01ec A8EB0A08 		sub	r8, r8, r10
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccs0vIiH.s 			page 139


 4846              	.LVL484:
 541:Core/Src/SEGGER_RTT.c **** }
 4847              		.loc 1 541 3 is_stmt 1 view .LVU2034
 541:Core/Src/SEGGER_RTT.c **** }
 4848              		.loc 1 541 3 is_stmt 0 view .LVU2035
 4849              	.LBE262:
 4850              	.LBE267:
1131:Core/Src/SEGGER_RTT.c ****     _WriteNoCheck(pRing, pData, Status);
 4851              		.loc 1 1131 5 is_stmt 1 view .LVU2036
1131:Core/Src/SEGGER_RTT.c ****     _WriteNoCheck(pRing, pData, Status);
 4852              		.loc 1 1131 12 is_stmt 0 view .LVU2037
 4853 01f0 C845     		cmp	r8, r9
 4854 01f2 28BF     		it	cs
 4855 01f4 C846     		movcs	r8, r9
 4856              	.LVL485:
1132:Core/Src/SEGGER_RTT.c ****     break;
 4857              		.loc 1 1132 5 is_stmt 1 view .LVU2038
 4858              	.LBB268:
 436:Core/Src/SEGGER_RTT.c ****   unsigned NumBytesAtOnce;
 4859              		.loc 1 436 13 view .LVU2039
 4860              	.LBB266:
 437:Core/Src/SEGGER_RTT.c ****   unsigned WrOff;
 4861              		.loc 1 437 3 view .LVU2040
 438:Core/Src/SEGGER_RTT.c ****   unsigned Rem;
 4862              		.loc 1 438 3 view .LVU2041
 439:Core/Src/SEGGER_RTT.c ****   volatile char* pDst;
 4863              		.loc 1 439 3 view .LVU2042
 440:Core/Src/SEGGER_RTT.c **** 
 4864              		.loc 1 440 3 view .LVU2043
 442:Core/Src/SEGGER_RTT.c ****   Rem = pRing->SizeOfBuffer - WrOff;
 4865              		.loc 1 442 3 view .LVU2044
 443:Core/Src/SEGGER_RTT.c ****   if (Rem > NumBytes) {
 4866              		.loc 1 443 3 view .LVU2045
 443:Core/Src/SEGGER_RTT.c ****   if (Rem > NumBytes) {
 4867              		.loc 1 443 7 is_stmt 0 view .LVU2046
 4868 01f6 A7EB0A02 		sub	r2, r7, r10
 4869              	.LVL486:
 444:Core/Src/SEGGER_RTT.c ****     //
 4870              		.loc 1 444 3 is_stmt 1 view .LVU2047
 444:Core/Src/SEGGER_RTT.c ****     //
 4871              		.loc 1 444 6 is_stmt 0 view .LVU2048
 4872 01fa 9045     		cmp	r8, r2
 4873 01fc DDD3     		bcc	.L211
 4874              	.L193:
 479:Core/Src/SEGGER_RTT.c ****     pDst = (pRing->pBuffer + WrOff) + SEGGER_RTT_UNCACHED_OFF;
 4875              		.loc 1 479 5 is_stmt 1 view .LVU2049
 4876              	.LVL487:
 480:Core/Src/SEGGER_RTT.c ****     SEGGER_RTT_MEMCPY((void*)pDst, pData, NumBytesAtOnce);
 4877              		.loc 1 480 5 view .LVU2050
 481:Core/Src/SEGGER_RTT.c ****     NumBytesAtOnce = NumBytes - Rem;
 4878              		.loc 1 481 5 view .LVU2051
 480:Core/Src/SEGGER_RTT.c ****     SEGGER_RTT_MEMCPY((void*)pDst, pData, NumBytesAtOnce);
 4879              		.loc 1 480 18 is_stmt 0 view .LVU2052
 4880 01fe 04F10109 		add	r9, r4, #1
 4881              	.LVL488:
 480:Core/Src/SEGGER_RTT.c ****     SEGGER_RTT_MEMCPY((void*)pDst, pData, NumBytesAtOnce);
 4882              		.loc 1 480 18 view .LVU2053
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccs0vIiH.s 			page 140


 4883 0202 09EB4909 		add	r9, r9, r9, lsl #1
 4884 0206 06EBC909 		add	r9, r6, r9, lsl #3
 481:Core/Src/SEGGER_RTT.c ****     NumBytesAtOnce = NumBytes - Rem;
 4885              		.loc 1 481 5 view .LVU2054
 4886 020a 5946     		mov	r1, fp
 480:Core/Src/SEGGER_RTT.c ****     SEGGER_RTT_MEMCPY((void*)pDst, pData, NumBytesAtOnce);
 4887              		.loc 1 480 10 view .LVU2055
 4888 020c D9F80400 		ldr	r0, [r9, #4]
 481:Core/Src/SEGGER_RTT.c ****     NumBytesAtOnce = NumBytes - Rem;
 4889              		.loc 1 481 5 view .LVU2056
 4890 0210 0192     		str	r2, [sp, #4]
 4891 0212 5044     		add	r0, r0, r10
 4892 0214 FFF7FEFF 		bl	memcpy
 4893              	.LVL489:
 482:Core/Src/SEGGER_RTT.c ****     pDst = pRing->pBuffer + SEGGER_RTT_UNCACHED_OFF;
 4894              		.loc 1 482 5 is_stmt 1 view .LVU2057
 482:Core/Src/SEGGER_RTT.c ****     pDst = pRing->pBuffer + SEGGER_RTT_UNCACHED_OFF;
 4895              		.loc 1 482 20 is_stmt 0 view .LVU2058
 4896 0218 A8EB0707 		sub	r7, r8, r7
 484:Core/Src/SEGGER_RTT.c ****     RTT__DMB();                     // Force data write to be complete before writing the <WrOff>, 
 4897              		.loc 1 484 5 view .LVU2059
 4898 021c 019A     		ldr	r2, [sp, #4]
 4899 021e D9F80400 		ldr	r0, [r9, #4]
 482:Core/Src/SEGGER_RTT.c ****     pDst = pRing->pBuffer + SEGGER_RTT_UNCACHED_OFF;
 4900              		.loc 1 482 20 view .LVU2060
 4901 0222 5744     		add	r7, r7, r10
 4902              	.LVL490:
 483:Core/Src/SEGGER_RTT.c ****     SEGGER_RTT_MEMCPY((void*)pDst, pData + Rem, NumBytesAtOnce);
 4903              		.loc 1 483 5 is_stmt 1 view .LVU2061
 484:Core/Src/SEGGER_RTT.c ****     RTT__DMB();                     // Force data write to be complete before writing the <WrOff>, 
 4904              		.loc 1 484 5 view .LVU2062
 4905 0224 0BEB0201 		add	r1, fp, r2
 4906 0228 3A46     		mov	r2, r7
 4907 022a FFF7FEFF 		bl	memcpy
 4908              	.LVL491:
 485:Core/Src/SEGGER_RTT.c ****     pRing->WrOff = NumBytesAtOnce;
 4909              		.loc 1 485 5 view .LVU2063
 4910              		.syntax unified
 4911              	@ 485 "Core/Src/SEGGER_RTT.c" 1
 4912 022e BFF35F8F 		dmb
 4913              	
 4914              	@ 0 "" 2
 485:Core/Src/SEGGER_RTT.c ****     pRing->WrOff = NumBytesAtOnce;
 4915              		.loc 1 485 15 view .LVU2064
 486:Core/Src/SEGGER_RTT.c **** #endif
 4916              		.loc 1 486 5 view .LVU2065
 486:Core/Src/SEGGER_RTT.c **** #endif
 4917              		.loc 1 486 18 is_stmt 0 view .LVU2066
 4918              		.thumb
 4919              		.syntax unified
 4920 0232 2544     		add	r5, r5, r4
 4921 0234 06EBC505 		add	r5, r6, r5, lsl #3
 4922 0238 6F62     		str	r7, [r5, #36]
 4923 023a 05E7     		b	.L187
 4924              	.LVL492:
 4925              	.L190:
 486:Core/Src/SEGGER_RTT.c **** #endif
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccs0vIiH.s 			page 141


 4926              		.loc 1 486 18 view .LVU2067
 4927              	.LBE266:
 4928              	.LBE268:
 4929              	.LBB269:
 4930              	.LBB257:
 479:Core/Src/SEGGER_RTT.c ****     pDst = (pRing->pBuffer + WrOff) + SEGGER_RTT_UNCACHED_OFF;
 4931              		.loc 1 479 5 is_stmt 1 view .LVU2068
 480:Core/Src/SEGGER_RTT.c ****     SEGGER_RTT_MEMCPY((void*)pDst, pData, NumBytesAtOnce);
 4932              		.loc 1 480 5 view .LVU2069
 481:Core/Src/SEGGER_RTT.c ****     NumBytesAtOnce = NumBytes - Rem;
 4933              		.loc 1 481 5 view .LVU2070
 480:Core/Src/SEGGER_RTT.c ****     SEGGER_RTT_MEMCPY((void*)pDst, pData, NumBytesAtOnce);
 4934              		.loc 1 480 18 is_stmt 0 view .LVU2071
 4935 023c 06EBC406 		add	r6, r6, r4, lsl #3
 482:Core/Src/SEGGER_RTT.c ****     pDst = pRing->pBuffer + SEGGER_RTT_UNCACHED_OFF;
 4936              		.loc 1 482 20 view .LVU2072
 4937 0240 09EB0A04 		add	r4, r9, r10
 480:Core/Src/SEGGER_RTT.c ****     SEGGER_RTT_MEMCPY((void*)pDst, pData, NumBytesAtOnce);
 4938              		.loc 1 480 10 view .LVU2073
 4939 0244 7068     		ldr	r0, [r6, #4]
 481:Core/Src/SEGGER_RTT.c ****     NumBytesAtOnce = NumBytes - Rem;
 4940              		.loc 1 481 5 view .LVU2074
 4941 0246 4246     		mov	r2, r8
 4942              	.LVL493:
 481:Core/Src/SEGGER_RTT.c ****     NumBytesAtOnce = NumBytes - Rem;
 4943              		.loc 1 481 5 view .LVU2075
 4944 0248 5946     		mov	r1, fp
 4945 024a 5044     		add	r0, r0, r10
 482:Core/Src/SEGGER_RTT.c ****     pDst = pRing->pBuffer + SEGGER_RTT_UNCACHED_OFF;
 4946              		.loc 1 482 20 view .LVU2076
 4947 024c E41B     		subs	r4, r4, r7
 481:Core/Src/SEGGER_RTT.c ****     NumBytesAtOnce = NumBytes - Rem;
 4948              		.loc 1 481 5 view .LVU2077
 4949 024e FFF7FEFF 		bl	memcpy
 4950              	.LVL494:
 482:Core/Src/SEGGER_RTT.c ****     pDst = pRing->pBuffer + SEGGER_RTT_UNCACHED_OFF;
 4951              		.loc 1 482 5 is_stmt 1 view .LVU2078
 483:Core/Src/SEGGER_RTT.c ****     SEGGER_RTT_MEMCPY((void*)pDst, pData + Rem, NumBytesAtOnce);
 4952              		.loc 1 483 5 view .LVU2079
 484:Core/Src/SEGGER_RTT.c ****     RTT__DMB();                     // Force data write to be complete before writing the <WrOff>, 
 4953              		.loc 1 484 5 view .LVU2080
 4954 0252 7068     		ldr	r0, [r6, #4]
 4955 0254 0BEB0801 		add	r1, fp, r8
 4956 0258 2246     		mov	r2, r4
 4957 025a FFF7FEFF 		bl	memcpy
 4958              	.LVL495:
 485:Core/Src/SEGGER_RTT.c ****     pRing->WrOff = NumBytesAtOnce;
 4959              		.loc 1 485 5 view .LVU2081
 4960              		.syntax unified
 4961              	@ 485 "Core/Src/SEGGER_RTT.c" 1
 4962 025e BFF35F8F 		dmb
 4963              	
 4964              	@ 0 "" 2
 485:Core/Src/SEGGER_RTT.c ****     pRing->WrOff = NumBytesAtOnce;
 4965              		.loc 1 485 15 view .LVU2082
 486:Core/Src/SEGGER_RTT.c **** #endif
 4966              		.loc 1 486 5 view .LVU2083
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccs0vIiH.s 			page 142


 486:Core/Src/SEGGER_RTT.c **** #endif
 4967              		.loc 1 486 18 is_stmt 0 view .LVU2084
 4968              		.thumb
 4969              		.syntax unified
 4970 0262 6C62     		str	r4, [r5, #36]
 4971 0264 C846     		mov	r8, r9
 4972              	.LVL496:
 486:Core/Src/SEGGER_RTT.c **** #endif
 4973              		.loc 1 486 18 view .LVU2085
 4974 0266 EFE6     		b	.L187
 4975              	.L213:
 4976              		.align	2
 4977              	.L212:
 4978 0268 00000000 		.word	.LANCHOR0
 4979 026c 00000000 		.word	.LC0
 4980 0270 00000000 		.word	.LANCHOR1
 4981 0274 00000000 		.word	.LANCHOR2
 4982              	.LBE257:
 4983              	.LBE269:
 4984              	.LBE271:
 4985              	.LBE273:
 4986              	.LBE275:
 4987              		.cfi_endproc
 4988              	.LFE13:
 4990              		.section	.text.SEGGER_RTT_WriteString,"ax",%progbits
 4991              		.align	1
 4992              		.p2align 2,,3
 4993              		.global	SEGGER_RTT_WriteString
 4994              		.syntax unified
 4995              		.thumb
 4996              		.thumb_func
 4998              	SEGGER_RTT_WriteString:
 4999              	.LVL497:
 5000              	.LFB14:
1213:Core/Src/SEGGER_RTT.c **** 
1214:Core/Src/SEGGER_RTT.c **** /*********************************************************************
1215:Core/Src/SEGGER_RTT.c **** *
1216:Core/Src/SEGGER_RTT.c **** *       SEGGER_RTT_WriteString
1217:Core/Src/SEGGER_RTT.c **** *
1218:Core/Src/SEGGER_RTT.c **** *  Function description
1219:Core/Src/SEGGER_RTT.c **** *    Stores string in SEGGER RTT control block.
1220:Core/Src/SEGGER_RTT.c **** *    This data is read by the host.
1221:Core/Src/SEGGER_RTT.c **** *
1222:Core/Src/SEGGER_RTT.c **** *  Parameters
1223:Core/Src/SEGGER_RTT.c **** *    BufferIndex  Index of "Up"-buffer to be used (e.g. 0 for "Terminal").
1224:Core/Src/SEGGER_RTT.c **** *    s            Pointer to string.
1225:Core/Src/SEGGER_RTT.c **** *
1226:Core/Src/SEGGER_RTT.c **** *  Return value
1227:Core/Src/SEGGER_RTT.c **** *    Number of bytes which have been stored in the "Up"-buffer.
1228:Core/Src/SEGGER_RTT.c **** *
1229:Core/Src/SEGGER_RTT.c **** *  Notes
1230:Core/Src/SEGGER_RTT.c **** *    (1) Data is stored according to buffer flags.
1231:Core/Src/SEGGER_RTT.c **** *    (2) String passed to this function has to be \0 terminated
1232:Core/Src/SEGGER_RTT.c **** *    (3) \0 termination character is *not* stored in RTT buffer
1233:Core/Src/SEGGER_RTT.c **** */
1234:Core/Src/SEGGER_RTT.c **** unsigned SEGGER_RTT_WriteString(unsigned BufferIndex, const char* s) {
 5001              		.loc 1 1234 70 is_stmt 1 view -0
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccs0vIiH.s 			page 143


 5002              		.cfi_startproc
 5003              		@ args = 0, pretend = 0, frame = 8
 5004              		@ frame_needed = 0, uses_anonymous_args = 0
1235:Core/Src/SEGGER_RTT.c ****   unsigned Len;
 5005              		.loc 1 1235 3 view .LVU2087
1236:Core/Src/SEGGER_RTT.c **** 
1237:Core/Src/SEGGER_RTT.c ****   Len = STRLEN(s);
 5006              		.loc 1 1237 3 view .LVU2088
1234:Core/Src/SEGGER_RTT.c ****   unsigned Len;
 5007              		.loc 1 1234 70 is_stmt 0 view .LVU2089
 5008 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 5009              		.cfi_def_cfa_offset 36
 5010              		.cfi_offset 4, -36
 5011              		.cfi_offset 5, -32
 5012              		.cfi_offset 6, -28
 5013              		.cfi_offset 7, -24
 5014              		.cfi_offset 8, -20
 5015              		.cfi_offset 9, -16
 5016              		.cfi_offset 10, -12
 5017              		.cfi_offset 11, -8
 5018              		.cfi_offset 14, -4
 5019              	.LBB294:
 5020              	.LBB295:
 5021              	.LBB296:
1207:Core/Src/SEGGER_RTT.c ****   SEGGER_RTT_LOCK();
 5022              		.loc 1 1207 3 view .LVU2090
 5023 0004 9A4E     		ldr	r6, .L243
 5024              	.LBE296:
 5025              	.LBE295:
 5026              	.LBE294:
1234:Core/Src/SEGGER_RTT.c ****   unsigned Len;
 5027              		.loc 1 1234 70 view .LVU2091
 5028 0006 83B0     		sub	sp, sp, #12
 5029              		.cfi_def_cfa_offset 48
1234:Core/Src/SEGGER_RTT.c ****   unsigned Len;
 5030              		.loc 1 1234 70 view .LVU2092
 5031 0008 0446     		mov	r4, r0
 5032              		.loc 1 1237 9 view .LVU2093
 5033 000a 0846     		mov	r0, r1
 5034              	.LVL498:
1234:Core/Src/SEGGER_RTT.c ****   unsigned Len;
 5035              		.loc 1 1234 70 view .LVU2094
 5036 000c 8B46     		mov	fp, r1
 5037              		.loc 1 1237 9 view .LVU2095
 5038 000e FFF7FEFF 		bl	strlen
 5039              	.LVL499:
 5040              	.LBB331:
 5041              	.LBB328:
 5042              	.LBB299:
1207:Core/Src/SEGGER_RTT.c ****   SEGGER_RTT_LOCK();
 5043              		.loc 1 1207 3 view .LVU2096
 5044 0012 3278     		ldrb	r2, [r6]	@ zero_extendqisi2
 5045              	.LBE299:
 5046              	.LBE328:
 5047              	.LBE331:
 5048              		.loc 1 1237 9 view .LVU2097
 5049 0014 8146     		mov	r9, r0
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccs0vIiH.s 			page 144


 5050              	.LVL500:
1238:Core/Src/SEGGER_RTT.c ****   return SEGGER_RTT_Write(BufferIndex, s, Len);
 5051              		.loc 1 1238 3 is_stmt 1 view .LVU2098
 5052              	.LBB332:
 5053              	.LBI294:
1204:Core/Src/SEGGER_RTT.c ****   unsigned Status;
 5054              		.loc 1 1204 10 view .LVU2099
 5055              	.LBB329:
1205:Core/Src/SEGGER_RTT.c **** 
 5056              		.loc 1 1205 3 view .LVU2100
 5057              	.LBB300:
1207:Core/Src/SEGGER_RTT.c ****   SEGGER_RTT_LOCK();
 5058              		.loc 1 1207 3 view .LVU2101
1207:Core/Src/SEGGER_RTT.c ****   SEGGER_RTT_LOCK();
 5059              		.loc 1 1207 3 view .LVU2102
1207:Core/Src/SEGGER_RTT.c ****   SEGGER_RTT_LOCK();
 5060              		.loc 1 1207 3 view .LVU2103
1207:Core/Src/SEGGER_RTT.c ****   SEGGER_RTT_LOCK();
 5061              		.loc 1 1207 3 view .LVU2104
 5062 0016 0AB3     		cbz	r2, .L237
 5063              	.LVL501:
 5064              	.L215:
1207:Core/Src/SEGGER_RTT.c ****   SEGGER_RTT_LOCK();
 5065              		.loc 1 1207 3 view .LVU2105
 5066              	.LBE300:
1207:Core/Src/SEGGER_RTT.c ****   SEGGER_RTT_LOCK();
 5067              		.loc 1 1207 9 view .LVU2106
 5068              	.LBB301:
1208:Core/Src/SEGGER_RTT.c ****   Status = SEGGER_RTT_WriteNoLock(BufferIndex, pBuffer, NumBytes);  // Call the non-locking write f
 5069              		.loc 1 1208 3 view .LVU2107
1208:Core/Src/SEGGER_RTT.c ****   Status = SEGGER_RTT_WriteNoLock(BufferIndex, pBuffer, NumBytes);  // Call the non-locking write f
 5070              		.loc 1 1208 3 view .LVU2108
 5071              		.syntax unified
 5072              	@ 1208 "Core/Src/SEGGER_RTT.c" 1
 5073 0018 EFF31183 		mrs   r3, basepri  
 5074 001c 4FF02001 		mov   r1, #32       
 5075 0020 81F31188 		msr   basepri, r1  
 5076              		
 5077              	@ 0 "" 2
 5078              		.thumb
 5079              		.syntax unified
 5080              	.LBB302:
 5081              	.LBB303:
1112:Core/Src/SEGGER_RTT.c ****   case SEGGER_RTT_MODE_NO_BLOCK_SKIP:
 5082              		.loc 1 1112 16 is_stmt 0 view .LVU2109
 5083 0024 04EB4407 		add	r7, r4, r4, lsl #1
 5084 0028 06EBC707 		add	r7, r6, r7, lsl #3
 5085              	.LBE303:
 5086              	.LBE302:
1208:Core/Src/SEGGER_RTT.c ****   Status = SEGGER_RTT_WriteNoLock(BufferIndex, pBuffer, NumBytes);  // Call the non-locking write f
 5087              		.loc 1 1208 3 view .LVU2110
 5088 002c 0093     		str	r3, [sp]
 5089              	.LVL502:
1208:Core/Src/SEGGER_RTT.c ****   Status = SEGGER_RTT_WriteNoLock(BufferIndex, pBuffer, NumBytes);  // Call the non-locking write f
 5090              		.loc 1 1208 20 is_stmt 1 view .LVU2111
1209:Core/Src/SEGGER_RTT.c ****   SEGGER_RTT_UNLOCK();
 5091              		.loc 1 1209 3 view .LVU2112
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccs0vIiH.s 			page 145


 5092              	.LBB324:
 5093              	.LBI302:
1099:Core/Src/SEGGER_RTT.c ****   unsigned              Status;
 5094              		.loc 1 1099 10 view .LVU2113
 5095              	.LBB322:
1100:Core/Src/SEGGER_RTT.c ****   unsigned              Avail;
 5096              		.loc 1 1100 3 view .LVU2114
1101:Core/Src/SEGGER_RTT.c ****   const char*           pData;
 5097              		.loc 1 1101 3 view .LVU2115
1102:Core/Src/SEGGER_RTT.c ****   SEGGER_RTT_BUFFER_UP* pRing;
 5098              		.loc 1 1102 3 view .LVU2116
1103:Core/Src/SEGGER_RTT.c ****   //
 5099              		.loc 1 1103 3 view .LVU2117
1107:Core/Src/SEGGER_RTT.c ****   pRing = (SEGGER_RTT_BUFFER_UP*)((char*)&_SEGGER_RTT.aUp[BufferIndex] + SEGGER_RTT_UNCACHED_OFF); 
 5100              		.loc 1 1107 3 view .LVU2118
1108:Core/Src/SEGGER_RTT.c ****   //
 5101              		.loc 1 1108 3 view .LVU2119
1112:Core/Src/SEGGER_RTT.c ****   case SEGGER_RTT_MODE_NO_BLOCK_SKIP:
 5102              		.loc 1 1112 3 view .LVU2120
1112:Core/Src/SEGGER_RTT.c ****   case SEGGER_RTT_MODE_NO_BLOCK_SKIP:
 5103              		.loc 1 1112 16 is_stmt 0 view .LVU2121
 5104 002e D7F82C80 		ldr	r8, [r7, #44]
1112:Core/Src/SEGGER_RTT.c ****   case SEGGER_RTT_MODE_NO_BLOCK_SKIP:
 5105              		.loc 1 1112 3 view .LVU2122
 5106 0032 B8F1010F 		cmp	r8, #1
1112:Core/Src/SEGGER_RTT.c ****   case SEGGER_RTT_MODE_NO_BLOCK_SKIP:
 5107              		.loc 1 1112 16 view .LVU2123
 5108 0036 4FEA4405 		lsl	r5, r4, #1
1112:Core/Src/SEGGER_RTT.c ****   case SEGGER_RTT_MODE_NO_BLOCK_SKIP:
 5109              		.loc 1 1112 3 view .LVU2124
 5110 003a 00F0B080 		beq	.L216
 5111 003e B8F1020F 		cmp	r8, #2
 5112 0042 6CD0     		beq	.L217
 5113 0044 B8F1000F 		cmp	r8, #0
 5114 0048 42D0     		beq	.L238
 5115 004a 4FF00008 		mov	r8, #0
 5116              	.LVL503:
 5117              	.L218:
1147:Core/Src/SEGGER_RTT.c **** }
 5118              		.loc 1 1147 3 is_stmt 1 view .LVU2125
1147:Core/Src/SEGGER_RTT.c **** }
 5119              		.loc 1 1147 3 is_stmt 0 view .LVU2126
 5120              	.LBE322:
 5121              	.LBE324:
1210:Core/Src/SEGGER_RTT.c ****   return Status;
 5122              		.loc 1 1210 3 is_stmt 1 view .LVU2127
 5123 004e 009B     		ldr	r3, [sp]
 5124              		.syntax unified
 5125              	@ 1210 "Core/Src/SEGGER_RTT.c" 1
 5126 0050 83F31188 		msr   basepri, r3  
 5127              		
 5128              	@ 0 "" 2
 5129              		.thumb
 5130              		.syntax unified
 5131              	.LBE301:
1210:Core/Src/SEGGER_RTT.c ****   return Status;
 5132              		.loc 1 1210 22 view .LVU2128
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccs0vIiH.s 			page 146


1211:Core/Src/SEGGER_RTT.c **** }
 5133              		.loc 1 1211 3 view .LVU2129
 5134              	.LVL504:
1211:Core/Src/SEGGER_RTT.c **** }
 5135              		.loc 1 1211 3 is_stmt 0 view .LVU2130
 5136              	.LBE329:
 5137              	.LBE332:
1239:Core/Src/SEGGER_RTT.c **** }
 5138              		.loc 1 1239 1 view .LVU2131
 5139 0054 4046     		mov	r0, r8
 5140 0056 03B0     		add	sp, sp, #12
 5141              		.cfi_remember_state
 5142              		.cfi_def_cfa_offset 36
 5143              		@ sp needed
 5144 0058 BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 5145              	.LVL505:
 5146              	.L237:
 5147              		.cfi_restore_state
 5148              		.loc 1 1239 1 view .LVU2132
 5149 005c 02F0FF05 		and	r5, r2, #255
 5150              	.LBB333:
 5151              	.LBB330:
 5152              	.LBB326:
1207:Core/Src/SEGGER_RTT.c ****   SEGGER_RTT_LOCK();
 5153              		.loc 1 1207 3 is_stmt 1 view .LVU2133
 5154              	.LBB297:
 5155              	.LBI297:
 314:Core/Src/SEGGER_RTT.c ****   volatile SEGGER_RTT_CB* p;   // Volatile to make sure that compiler cannot change the order of ac
 5156              		.loc 1 314 13 view .LVU2134
 5157              	.LBB298:
 315:Core/Src/SEGGER_RTT.c ****   static const char _aInitStr[] = "\0\0\0\0\0\0TTR REGGES";  // Init complete ID string to make sur
 5158              		.loc 1 315 3 view .LVU2135
 316:Core/Src/SEGGER_RTT.c ****   unsigned i;
 5159              		.loc 1 316 3 view .LVU2136
 317:Core/Src/SEGGER_RTT.c ****   //
 5160              		.loc 1 317 3 view .LVU2137
 321:Core/Src/SEGGER_RTT.c ****   memset((SEGGER_RTT_CB*)p, 0, sizeof(_SEGGER_RTT));         // Make sure that the RTT CB is always
 5161              		.loc 1 321 3 view .LVU2138
 5162              	.LVL506:
 322:Core/Src/SEGGER_RTT.c ****   p->MaxNumUpBuffers    = SEGGER_RTT_MAX_NUM_UP_BUFFERS;
 5163              		.loc 1 322 3 view .LVU2139
 5164 0060 2946     		mov	r1, r5
 5165 0062 7822     		movs	r2, #120
 5166 0064 06F13000 		add	r0, r6, #48
 5167              	.LVL507:
 322:Core/Src/SEGGER_RTT.c ****   p->MaxNumUpBuffers    = SEGGER_RTT_MAX_NUM_UP_BUFFERS;
 5168              		.loc 1 322 3 is_stmt 0 view .LVU2140
 5169 0068 FFF7FEFF 		bl	memset
 5170              	.LVL508:
 323:Core/Src/SEGGER_RTT.c ****   p->MaxNumDownBuffers  = SEGGER_RTT_MAX_NUM_DOWN_BUFFERS;
 5171              		.loc 1 323 3 is_stmt 1 view .LVU2141
 323:Core/Src/SEGGER_RTT.c ****   p->MaxNumDownBuffers  = SEGGER_RTT_MAX_NUM_DOWN_BUFFERS;
 5172              		.loc 1 323 25 is_stmt 0 view .LVU2142
 5173 006c 0321     		movs	r1, #3
 5174 006e 3161     		str	r1, [r6, #16]
 324:Core/Src/SEGGER_RTT.c ****   //
 5175              		.loc 1 324 3 is_stmt 1 view .LVU2143
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccs0vIiH.s 			page 147


 328:Core/Src/SEGGER_RTT.c ****   p->aUp[0].pBuffer       = _acUpBuffer;
 5176              		.loc 1 328 27 is_stmt 0 view .LVU2144
 5177 0070 804A     		ldr	r2, .L243+4
 324:Core/Src/SEGGER_RTT.c ****   //
 5178              		.loc 1 324 25 view .LVU2145
 5179 0072 7161     		str	r1, [r6, #20]
 328:Core/Src/SEGGER_RTT.c ****   p->aUp[0].pBuffer       = _acUpBuffer;
 5180              		.loc 1 328 3 is_stmt 1 view .LVU2146
 330:Core/Src/SEGGER_RTT.c ****   p->aUp[0].RdOff         = 0u;
 5181              		.loc 1 330 27 is_stmt 0 view .LVU2147
 5182 0074 4FF48060 		mov	r0, #1024
 329:Core/Src/SEGGER_RTT.c ****   p->aUp[0].SizeOfBuffer  = BUFFER_SIZE_UP;
 5183              		.loc 1 329 27 view .LVU2148
 5184 0078 7F49     		ldr	r1, .L243+8
 328:Core/Src/SEGGER_RTT.c ****   p->aUp[0].pBuffer       = _acUpBuffer;
 5185              		.loc 1 328 27 view .LVU2149
 5186 007a B261     		str	r2, [r6, #24]
 329:Core/Src/SEGGER_RTT.c ****   p->aUp[0].SizeOfBuffer  = BUFFER_SIZE_UP;
 5187              		.loc 1 329 3 is_stmt 1 view .LVU2150
 329:Core/Src/SEGGER_RTT.c ****   p->aUp[0].SizeOfBuffer  = BUFFER_SIZE_UP;
 5188              		.loc 1 329 27 is_stmt 0 view .LVU2151
 5189 007c F161     		str	r1, [r6, #28]
 330:Core/Src/SEGGER_RTT.c ****   p->aUp[0].RdOff         = 0u;
 5190              		.loc 1 330 3 is_stmt 1 view .LVU2152
 330:Core/Src/SEGGER_RTT.c ****   p->aUp[0].RdOff         = 0u;
 5191              		.loc 1 330 27 is_stmt 0 view .LVU2153
 5192 007e 3062     		str	r0, [r6, #32]
 331:Core/Src/SEGGER_RTT.c ****   p->aUp[0].WrOff         = 0u;
 5193              		.loc 1 331 3 is_stmt 1 view .LVU2154
 338:Core/Src/SEGGER_RTT.c ****   p->aDown[0].SizeOfBuffer  = BUFFER_SIZE_DOWN;
 5194              		.loc 1 338 29 is_stmt 0 view .LVU2155
 5195 0080 7E49     		ldr	r1, .L243+12
 331:Core/Src/SEGGER_RTT.c ****   p->aUp[0].WrOff         = 0u;
 5196              		.loc 1 331 27 view .LVU2156
 5197 0082 B562     		str	r5, [r6, #40]
 332:Core/Src/SEGGER_RTT.c ****   p->aUp[0].Flags         = SEGGER_RTT_MODE_DEFAULT;
 5198              		.loc 1 332 3 is_stmt 1 view .LVU2157
 332:Core/Src/SEGGER_RTT.c ****   p->aUp[0].Flags         = SEGGER_RTT_MODE_DEFAULT;
 5199              		.loc 1 332 27 is_stmt 0 view .LVU2158
 5200 0084 7562     		str	r5, [r6, #36]
 333:Core/Src/SEGGER_RTT.c ****   //
 5201              		.loc 1 333 3 is_stmt 1 view .LVU2159
 333:Core/Src/SEGGER_RTT.c ****   //
 5202              		.loc 1 333 27 is_stmt 0 view .LVU2160
 5203 0086 F562     		str	r5, [r6, #44]
 337:Core/Src/SEGGER_RTT.c ****   p->aDown[0].pBuffer       = _acDownBuffer;
 5204              		.loc 1 337 3 is_stmt 1 view .LVU2161
 337:Core/Src/SEGGER_RTT.c ****   p->aDown[0].pBuffer       = _acDownBuffer;
 5205              		.loc 1 337 29 is_stmt 0 view .LVU2162
 5206 0088 3266     		str	r2, [r6, #96]
 338:Core/Src/SEGGER_RTT.c ****   p->aDown[0].SizeOfBuffer  = BUFFER_SIZE_DOWN;
 5207              		.loc 1 338 3 is_stmt 1 view .LVU2163
 339:Core/Src/SEGGER_RTT.c ****   p->aDown[0].RdOff         = 0u;
 5208              		.loc 1 339 29 is_stmt 0 view .LVU2164
 5209 008a 1022     		movs	r2, #16
 338:Core/Src/SEGGER_RTT.c ****   p->aDown[0].SizeOfBuffer  = BUFFER_SIZE_DOWN;
 5210              		.loc 1 338 29 view .LVU2165
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccs0vIiH.s 			page 148


 5211 008c 7166     		str	r1, [r6, #100]
 339:Core/Src/SEGGER_RTT.c ****   p->aDown[0].RdOff         = 0u;
 5212              		.loc 1 339 3 is_stmt 1 view .LVU2166
 339:Core/Src/SEGGER_RTT.c ****   p->aDown[0].RdOff         = 0u;
 5213              		.loc 1 339 29 is_stmt 0 view .LVU2167
 5214 008e B266     		str	r2, [r6, #104]
 340:Core/Src/SEGGER_RTT.c ****   p->aDown[0].WrOff         = 0u;
 5215              		.loc 1 340 3 is_stmt 1 view .LVU2168
 340:Core/Src/SEGGER_RTT.c ****   p->aDown[0].WrOff         = 0u;
 5216              		.loc 1 340 29 is_stmt 0 view .LVU2169
 5217 0090 3567     		str	r5, [r6, #112]
 341:Core/Src/SEGGER_RTT.c ****   p->aDown[0].Flags         = SEGGER_RTT_MODE_DEFAULT;
 5218              		.loc 1 341 3 is_stmt 1 view .LVU2170
 341:Core/Src/SEGGER_RTT.c ****   p->aDown[0].Flags         = SEGGER_RTT_MODE_DEFAULT;
 5219              		.loc 1 341 29 is_stmt 0 view .LVU2171
 5220 0092 F566     		str	r5, [r6, #108]
 342:Core/Src/SEGGER_RTT.c ****   //
 5221              		.loc 1 342 3 is_stmt 1 view .LVU2172
 342:Core/Src/SEGGER_RTT.c ****   //
 5222              		.loc 1 342 29 is_stmt 0 view .LVU2173
 5223 0094 7567     		str	r5, [r6, #116]
 348:Core/Src/SEGGER_RTT.c ****   for (i = 0; i < sizeof(_aInitStr) - 1; ++i) {
 5224              		.loc 1 348 3 is_stmt 1 view .LVU2174
 5225              		.syntax unified
 5226              	@ 348 "Core/Src/SEGGER_RTT.c" 1
 5227 0096 BFF35F8F 		dmb
 5228              	
 5229              	@ 0 "" 2
 348:Core/Src/SEGGER_RTT.c ****   for (i = 0; i < sizeof(_aInitStr) - 1; ++i) {
 5230              		.loc 1 348 13 view .LVU2175
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 5231              		.loc 1 349 3 view .LVU2176
 5232              	.LVL509:
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 5233              		.loc 1 349 17 view .LVU2177
 350:Core/Src/SEGGER_RTT.c ****   }
 5234              		.loc 1 350 5 view .LVU2178
 350:Core/Src/SEGGER_RTT.c ****   }
 5235              		.loc 1 350 16 is_stmt 0 view .LVU2179
 5236              		.thumb
 5237              		.syntax unified
 5238 009a 4520     		movs	r0, #69
 5239 009c 4727     		movs	r7, #71
 5240 009e 4FF0530C 		mov	ip, #83
 5241 00a2 86F800C0 		strb	ip, [r6]
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 5242              		.loc 1 349 42 is_stmt 1 view .LVU2180
 5243              	.LVL510:
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 5244              		.loc 1 349 17 view .LVU2181
 350:Core/Src/SEGGER_RTT.c ****   }
 5245              		.loc 1 350 5 view .LVU2182
 350:Core/Src/SEGGER_RTT.c ****   }
 5246              		.loc 1 350 16 is_stmt 0 view .LVU2183
 5247 00a6 5221     		movs	r1, #82
 5248 00a8 7070     		strb	r0, [r6, #1]
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccs0vIiH.s 			page 149


 5249              		.loc 1 349 42 is_stmt 1 view .LVU2184
 5250              	.LVL511:
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 5251              		.loc 1 349 17 view .LVU2185
 350:Core/Src/SEGGER_RTT.c ****   }
 5252              		.loc 1 350 5 view .LVU2186
 350:Core/Src/SEGGER_RTT.c ****   }
 5253              		.loc 1 350 16 is_stmt 0 view .LVU2187
 5254 00aa 5422     		movs	r2, #84
 5255 00ac B770     		strb	r7, [r6, #2]
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 5256              		.loc 1 349 42 is_stmt 1 view .LVU2188
 5257              	.LVL512:
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 5258              		.loc 1 349 17 view .LVU2189
 350:Core/Src/SEGGER_RTT.c ****   }
 5259              		.loc 1 350 5 view .LVU2190
 350:Core/Src/SEGGER_RTT.c ****   }
 5260              		.loc 1 350 16 is_stmt 0 view .LVU2191
 5261 00ae F770     		strb	r7, [r6, #3]
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 5262              		.loc 1 349 42 is_stmt 1 view .LVU2192
 5263              	.LVL513:
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 5264              		.loc 1 349 17 view .LVU2193
 350:Core/Src/SEGGER_RTT.c ****   }
 5265              		.loc 1 350 5 view .LVU2194
 350:Core/Src/SEGGER_RTT.c ****   }
 5266              		.loc 1 350 16 is_stmt 0 view .LVU2195
 5267 00b0 3071     		strb	r0, [r6, #4]
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 5268              		.loc 1 349 42 is_stmt 1 view .LVU2196
 5269              	.LVL514:
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 5270              		.loc 1 349 17 view .LVU2197
 350:Core/Src/SEGGER_RTT.c ****   }
 5271              		.loc 1 350 5 view .LVU2198
 350:Core/Src/SEGGER_RTT.c ****   }
 5272              		.loc 1 350 16 is_stmt 0 view .LVU2199
 5273 00b2 2020     		movs	r0, #32
 5274 00b4 7171     		strb	r1, [r6, #5]
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 5275              		.loc 1 349 42 is_stmt 1 view .LVU2200
 5276              	.LVL515:
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 5277              		.loc 1 349 17 view .LVU2201
 350:Core/Src/SEGGER_RTT.c ****   }
 5278              		.loc 1 350 5 view .LVU2202
 350:Core/Src/SEGGER_RTT.c ****   }
 5279              		.loc 1 350 16 is_stmt 0 view .LVU2203
 5280 00b6 B071     		strb	r0, [r6, #6]
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 5281              		.loc 1 349 42 is_stmt 1 view .LVU2204
 5282              	.LVL516:
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 5283              		.loc 1 349 17 view .LVU2205
 350:Core/Src/SEGGER_RTT.c ****   }
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccs0vIiH.s 			page 150


 5284              		.loc 1 350 5 view .LVU2206
 350:Core/Src/SEGGER_RTT.c ****   }
 5285              		.loc 1 350 16 is_stmt 0 view .LVU2207
 5286 00b8 F171     		strb	r1, [r6, #7]
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 5287              		.loc 1 349 42 is_stmt 1 view .LVU2208
 5288              	.LVL517:
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 5289              		.loc 1 349 17 view .LVU2209
 350:Core/Src/SEGGER_RTT.c ****   }
 5290              		.loc 1 350 5 view .LVU2210
 350:Core/Src/SEGGER_RTT.c ****   }
 5291              		.loc 1 350 16 is_stmt 0 view .LVU2211
 5292 00ba 3272     		strb	r2, [r6, #8]
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 5293              		.loc 1 349 42 is_stmt 1 view .LVU2212
 5294              	.LVL518:
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 5295              		.loc 1 349 17 view .LVU2213
 350:Core/Src/SEGGER_RTT.c ****   }
 5296              		.loc 1 350 5 view .LVU2214
 350:Core/Src/SEGGER_RTT.c ****   }
 5297              		.loc 1 350 16 is_stmt 0 view .LVU2215
 5298 00bc 7272     		strb	r2, [r6, #9]
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 5299              		.loc 1 349 42 is_stmt 1 view .LVU2216
 5300              	.LVL519:
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 5301              		.loc 1 349 17 view .LVU2217
 350:Core/Src/SEGGER_RTT.c ****   }
 5302              		.loc 1 350 5 view .LVU2218
 350:Core/Src/SEGGER_RTT.c ****   }
 5303              		.loc 1 350 16 is_stmt 0 view .LVU2219
 5304 00be B572     		strb	r5, [r6, #10]
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 5305              		.loc 1 349 42 is_stmt 1 view .LVU2220
 5306              	.LVL520:
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 5307              		.loc 1 349 17 view .LVU2221
 350:Core/Src/SEGGER_RTT.c ****   }
 5308              		.loc 1 350 5 view .LVU2222
 350:Core/Src/SEGGER_RTT.c ****   }
 5309              		.loc 1 350 16 is_stmt 0 view .LVU2223
 5310 00c0 F572     		strb	r5, [r6, #11]
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 5311              		.loc 1 349 42 is_stmt 1 view .LVU2224
 5312              	.LVL521:
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 5313              		.loc 1 349 17 view .LVU2225
 350:Core/Src/SEGGER_RTT.c ****   }
 5314              		.loc 1 350 5 view .LVU2226
 350:Core/Src/SEGGER_RTT.c ****   }
 5315              		.loc 1 350 16 is_stmt 0 view .LVU2227
 5316 00c2 3573     		strb	r5, [r6, #12]
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 5317              		.loc 1 349 42 is_stmt 1 view .LVU2228
 5318              	.LVL522:
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccs0vIiH.s 			page 151


 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 5319              		.loc 1 349 17 view .LVU2229
 350:Core/Src/SEGGER_RTT.c ****   }
 5320              		.loc 1 350 5 view .LVU2230
 350:Core/Src/SEGGER_RTT.c ****   }
 5321              		.loc 1 350 16 is_stmt 0 view .LVU2231
 5322 00c4 7573     		strb	r5, [r6, #13]
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 5323              		.loc 1 349 42 is_stmt 1 view .LVU2232
 5324              	.LVL523:
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 5325              		.loc 1 349 17 view .LVU2233
 350:Core/Src/SEGGER_RTT.c ****   }
 5326              		.loc 1 350 5 view .LVU2234
 350:Core/Src/SEGGER_RTT.c ****   }
 5327              		.loc 1 350 16 is_stmt 0 view .LVU2235
 5328 00c6 B573     		strb	r5, [r6, #14]
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 5329              		.loc 1 349 42 is_stmt 1 view .LVU2236
 5330              	.LVL524:
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 5331              		.loc 1 349 17 view .LVU2237
 350:Core/Src/SEGGER_RTT.c ****   }
 5332              		.loc 1 350 5 view .LVU2238
 350:Core/Src/SEGGER_RTT.c ****   }
 5333              		.loc 1 350 16 is_stmt 0 view .LVU2239
 5334 00c8 F573     		strb	r5, [r6, #15]
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 5335              		.loc 1 349 42 is_stmt 1 view .LVU2240
 5336              	.LVL525:
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 5337              		.loc 1 349 17 view .LVU2241
 352:Core/Src/SEGGER_RTT.c **** }
 5338              		.loc 1 352 3 view .LVU2242
 5339              		.syntax unified
 5340              	@ 352 "Core/Src/SEGGER_RTT.c" 1
 5341 00ca BFF35F8F 		dmb
 5342              	
 5343              	@ 0 "" 2
 352:Core/Src/SEGGER_RTT.c **** }
 5344              		.loc 1 352 13 view .LVU2243
 353:Core/Src/SEGGER_RTT.c **** 
 5345              		.loc 1 353 1 is_stmt 0 view .LVU2244
 5346              		.thumb
 5347              		.syntax unified
 5348 00ce A3E7     		b	.L215
 5349              	.LVL526:
 5350              	.L238:
 353:Core/Src/SEGGER_RTT.c **** 
 5351              		.loc 1 353 1 view .LVU2245
 5352              	.LBE298:
 5353              	.LBE297:
 5354              	.LBE326:
 5355              	.LBB327:
 5356              	.LBB325:
 5357              	.LBB323:
1118:Core/Src/SEGGER_RTT.c ****     if (Avail < NumBytes) {
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccs0vIiH.s 			page 152


 5358              		.loc 1 1118 5 is_stmt 1 view .LVU2246
 5359              	.LBB304:
 5360              	.LBI304:
 526:Core/Src/SEGGER_RTT.c ****   unsigned RdOff;
 5361              		.loc 1 526 17 view .LVU2247
 5362              	.LBB305:
 527:Core/Src/SEGGER_RTT.c ****   unsigned WrOff;
 5363              		.loc 1 527 3 view .LVU2248
 528:Core/Src/SEGGER_RTT.c ****   unsigned r;
 5364              		.loc 1 528 3 view .LVU2249
 529:Core/Src/SEGGER_RTT.c ****   //
 5365              		.loc 1 529 3 view .LVU2250
 534:Core/Src/SEGGER_RTT.c ****   WrOff = pRing->WrOff;
 5366              		.loc 1 534 3 view .LVU2251
 534:Core/Src/SEGGER_RTT.c ****   WrOff = pRing->WrOff;
 5367              		.loc 1 534 9 is_stmt 0 view .LVU2252
 5368 00d0 BA6A     		ldr	r2, [r7, #40]
 5369              	.LVL527:
 535:Core/Src/SEGGER_RTT.c ****   if (RdOff <= WrOff) {
 5370              		.loc 1 535 3 is_stmt 1 view .LVU2253
 535:Core/Src/SEGGER_RTT.c ****   if (RdOff <= WrOff) {
 5371              		.loc 1 535 9 is_stmt 0 view .LVU2254
 5372 00d2 D7F824A0 		ldr	r10, [r7, #36]
 5373              	.LVL528:
 536:Core/Src/SEGGER_RTT.c ****     r = pRing->SizeOfBuffer - 1u - WrOff + RdOff;
 5374              		.loc 1 536 3 is_stmt 1 view .LVU2255
 536:Core/Src/SEGGER_RTT.c ****     r = pRing->SizeOfBuffer - 1u - WrOff + RdOff;
 5375              		.loc 1 536 6 is_stmt 0 view .LVU2256
 5376 00d6 5245     		cmp	r2, r10
 537:Core/Src/SEGGER_RTT.c ****   } else {
 5377              		.loc 1 537 5 is_stmt 1 view .LVU2257
 537:Core/Src/SEGGER_RTT.c ****   } else {
 5378              		.loc 1 537 7 is_stmt 0 view .LVU2258
 5379 00d8 9CBF     		itt	ls
 5380 00da 396A     		ldrls	r1, [r7, #32]
 5381 00dc 5218     		addls	r2, r2, r1
 5382              	.LVL529:
 539:Core/Src/SEGGER_RTT.c ****   }
 5383              		.loc 1 539 5 is_stmt 1 view .LVU2259
 539:Core/Src/SEGGER_RTT.c ****   }
 5384              		.loc 1 539 7 is_stmt 0 view .LVU2260
 5385 00de 013A     		subs	r2, r2, #1
 5386 00e0 A2EB0A02 		sub	r2, r2, r10
 5387              	.LVL530:
 541:Core/Src/SEGGER_RTT.c **** }
 5388              		.loc 1 541 3 is_stmt 1 view .LVU2261
 541:Core/Src/SEGGER_RTT.c **** }
 5389              		.loc 1 541 3 is_stmt 0 view .LVU2262
 5390              	.LBE305:
 5391              	.LBE304:
1119:Core/Src/SEGGER_RTT.c ****       Status = 0u;
 5392              		.loc 1 1119 5 is_stmt 1 view .LVU2263
1119:Core/Src/SEGGER_RTT.c ****       Status = 0u;
 5393              		.loc 1 1119 8 is_stmt 0 view .LVU2264
 5394 00e4 9145     		cmp	r9, r2
 5395 00e6 B2D8     		bhi	.L218
1122:Core/Src/SEGGER_RTT.c ****       _WriteNoCheck(pRing, pData, NumBytes);
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccs0vIiH.s 			page 153


 5396              		.loc 1 1122 7 is_stmt 1 view .LVU2265
 5397              	.LVL531:
1123:Core/Src/SEGGER_RTT.c ****     }
 5398              		.loc 1 1123 7 view .LVU2266
 5399              	.LBB307:
 5400              	.LBI307:
 436:Core/Src/SEGGER_RTT.c ****   unsigned NumBytesAtOnce;
 5401              		.loc 1 436 13 view .LVU2267
 5402              	.LBB308:
 437:Core/Src/SEGGER_RTT.c ****   unsigned WrOff;
 5403              		.loc 1 437 3 view .LVU2268
 438:Core/Src/SEGGER_RTT.c ****   unsigned Rem;
 5404              		.loc 1 438 3 view .LVU2269
 439:Core/Src/SEGGER_RTT.c ****   volatile char* pDst;
 5405              		.loc 1 439 3 view .LVU2270
 440:Core/Src/SEGGER_RTT.c **** 
 5406              		.loc 1 440 3 view .LVU2271
 442:Core/Src/SEGGER_RTT.c ****   Rem = pRing->SizeOfBuffer - WrOff;
 5407              		.loc 1 442 3 view .LVU2272
 443:Core/Src/SEGGER_RTT.c ****   if (Rem > NumBytes) {
 5408              		.loc 1 443 3 view .LVU2273
 443:Core/Src/SEGGER_RTT.c ****   if (Rem > NumBytes) {
 5409              		.loc 1 443 14 is_stmt 0 view .LVU2274
 5410 00e8 2544     		add	r5, r5, r4
 5411 00ea 06EBC505 		add	r5, r6, r5, lsl #3
 448:Core/Src/SEGGER_RTT.c **** #if SEGGER_RTT_MEMCPY_USE_BYTELOOP
 5412              		.loc 1 448 18 view .LVU2275
 5413 00ee 0134     		adds	r4, r4, #1
 5414              	.LVL532:
 443:Core/Src/SEGGER_RTT.c ****   if (Rem > NumBytes) {
 5415              		.loc 1 443 14 view .LVU2276
 5416 00f0 2F6A     		ldr	r7, [r5, #32]
 443:Core/Src/SEGGER_RTT.c ****   if (Rem > NumBytes) {
 5417              		.loc 1 443 7 view .LVU2277
 5418 00f2 A7EB0A08 		sub	r8, r7, r10
 5419              	.LVL533:
 444:Core/Src/SEGGER_RTT.c ****     //
 5420              		.loc 1 444 3 is_stmt 1 view .LVU2278
 444:Core/Src/SEGGER_RTT.c ****     //
 5421              		.loc 1 444 6 is_stmt 0 view .LVU2279
 5422 00f6 C145     		cmp	r9, r8
 448:Core/Src/SEGGER_RTT.c **** #if SEGGER_RTT_MEMCPY_USE_BYTELOOP
 5423              		.loc 1 448 18 view .LVU2280
 5424 00f8 04EB4404 		add	r4, r4, r4, lsl #1
 5425              	.LVL534:
 444:Core/Src/SEGGER_RTT.c ****     //
 5426              		.loc 1 444 6 view .LVU2281
 5427 00fc 80F0A180 		bcs	.L221
 448:Core/Src/SEGGER_RTT.c **** #if SEGGER_RTT_MEMCPY_USE_BYTELOOP
 5428              		.loc 1 448 5 is_stmt 1 view .LVU2282
 5429              	.LVL535:
 457:Core/Src/SEGGER_RTT.c ****     RTT__DMB();                     // Force data write to be complete before writing the <WrOff>, 
 5430              		.loc 1 457 5 view .LVU2283
 448:Core/Src/SEGGER_RTT.c **** #if SEGGER_RTT_MEMCPY_USE_BYTELOOP
 5431              		.loc 1 448 18 is_stmt 0 view .LVU2284
 5432 0100 06EBC402 		add	r2, r6, r4, lsl #3
 5433              	.LVL536:
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccs0vIiH.s 			page 154


 457:Core/Src/SEGGER_RTT.c ****     RTT__DMB();                     // Force data write to be complete before writing the <WrOff>, 
 5434              		.loc 1 457 5 view .LVU2285
 5435 0104 5946     		mov	r1, fp
 448:Core/Src/SEGGER_RTT.c **** #if SEGGER_RTT_MEMCPY_USE_BYTELOOP
 5436              		.loc 1 448 10 view .LVU2286
 5437 0106 5068     		ldr	r0, [r2, #4]
 457:Core/Src/SEGGER_RTT.c ****     RTT__DMB();                     // Force data write to be complete before writing the <WrOff>, 
 5438              		.loc 1 457 5 view .LVU2287
 5439 0108 4A46     		mov	r2, r9
 5440 010a 5044     		add	r0, r0, r10
 5441 010c FFF7FEFF 		bl	memcpy
 5442              	.LVL537:
 458:Core/Src/SEGGER_RTT.c ****     pRing->WrOff = WrOff + NumBytes;
 5443              		.loc 1 458 5 is_stmt 1 view .LVU2288
 5444              		.syntax unified
 5445              	@ 458 "Core/Src/SEGGER_RTT.c" 1
 5446 0110 BFF35F8F 		dmb
 5447              	
 5448              	@ 0 "" 2
 458:Core/Src/SEGGER_RTT.c ****     pRing->WrOff = WrOff + NumBytes;
 5449              		.loc 1 458 15 view .LVU2289
 459:Core/Src/SEGGER_RTT.c **** #endif
 5450              		.loc 1 459 5 view .LVU2290
 459:Core/Src/SEGGER_RTT.c **** #endif
 5451              		.loc 1 459 26 is_stmt 0 view .LVU2291
 5452              		.thumb
 5453              		.syntax unified
 5454 0114 09EB0A03 		add	r3, r9, r10
 459:Core/Src/SEGGER_RTT.c **** #endif
 5455              		.loc 1 459 18 view .LVU2292
 5456 0118 6B62     		str	r3, [r5, #36]
 5457 011a C846     		mov	r8, r9
 5458              	.LVL538:
 459:Core/Src/SEGGER_RTT.c **** #endif
 5459              		.loc 1 459 18 view .LVU2293
 5460 011c 97E7     		b	.L218
 5461              	.LVL539:
 5462              	.L217:
 459:Core/Src/SEGGER_RTT.c **** #endif
 5463              		.loc 1 459 18 view .LVU2294
 5464              	.LBE308:
 5465              	.LBE307:
1138:Core/Src/SEGGER_RTT.c ****     break;
 5466              		.loc 1 1138 5 is_stmt 1 view .LVU2295
 5467              	.LBB310:
 5468              	.LBI310:
 374:Core/Src/SEGGER_RTT.c ****   unsigned NumBytesToWrite;
 5469              		.loc 1 374 17 view .LVU2296
 5470              	.LBB311:
 375:Core/Src/SEGGER_RTT.c ****   unsigned NumBytesWritten;
 5471              		.loc 1 375 3 view .LVU2297
 376:Core/Src/SEGGER_RTT.c ****   unsigned RdOff;
 5472              		.loc 1 376 3 view .LVU2298
 377:Core/Src/SEGGER_RTT.c ****   unsigned WrOff;
 5473              		.loc 1 377 3 view .LVU2299
 378:Core/Src/SEGGER_RTT.c ****   volatile char* pDst;
 5474              		.loc 1 378 3 view .LVU2300
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccs0vIiH.s 			page 155


 379:Core/Src/SEGGER_RTT.c ****   //
 5475              		.loc 1 379 3 view .LVU2301
 383:Core/Src/SEGGER_RTT.c ****   WrOff = pRing->WrOff;
 5476              		.loc 1 383 3 view .LVU2302
 384:Core/Src/SEGGER_RTT.c ****   do {
 5477              		.loc 1 384 3 view .LVU2303
 5478 011e 0134     		adds	r4, r4, #1
 5479              	.LVL540:
 394:Core/Src/SEGGER_RTT.c **** #if SEGGER_RTT_MEMCPY_USE_BYTELOOP
 5480              		.loc 1 394 18 is_stmt 0 view .LVU2304
 5481 0120 04EB4404 		add	r4, r4, r4, lsl #1
 5482              	.LVL541:
 384:Core/Src/SEGGER_RTT.c ****   do {
 5483              		.loc 1 384 9 view .LVU2305
 5484 0124 7D6A     		ldr	r5, [r7, #36]
 5485              	.LVL542:
 394:Core/Src/SEGGER_RTT.c **** #if SEGGER_RTT_MEMCPY_USE_BYTELOOP
 5486              		.loc 1 394 18 view .LVU2306
 5487 0126 4FEAC40A 		lsl	r10, r4, #3
 383:Core/Src/SEGGER_RTT.c ****   WrOff = pRing->WrOff;
 5488              		.loc 1 383 19 view .LVU2307
 5489 012a 4FF00008 		mov	r8, #0
 5490              	.LVL543:
 5491              	.L229:
 385:Core/Src/SEGGER_RTT.c ****     RdOff = pRing->RdOff;                         // May be changed by host (debug probe) in the me
 5492              		.loc 1 385 3 is_stmt 1 view .LVU2308
 386:Core/Src/SEGGER_RTT.c ****     if (RdOff > WrOff) {
 5493              		.loc 1 386 5 view .LVU2309
 388:Core/Src/SEGGER_RTT.c ****     } else {
 5494              		.loc 1 388 7 view .LVU2310
 390:Core/Src/SEGGER_RTT.c ****     }
 5495              		.loc 1 390 7 view .LVU2311
 386:Core/Src/SEGGER_RTT.c ****     if (RdOff > WrOff) {
 5496              		.loc 1 386 11 is_stmt 0 view .LVU2312
 5497 012e BB6A     		ldr	r3, [r7, #40]
 5498              	.LVL544:
 387:Core/Src/SEGGER_RTT.c ****       NumBytesToWrite = RdOff - WrOff - 1u;
 5499              		.loc 1 387 5 is_stmt 1 view .LVU2313
 387:Core/Src/SEGGER_RTT.c ****       NumBytesToWrite = RdOff - WrOff - 1u;
 5500              		.loc 1 387 8 is_stmt 0 view .LVU2314
 5501 0130 AB42     		cmp	r3, r5
 388:Core/Src/SEGGER_RTT.c ****     } else {
 5502              		.loc 1 388 23 view .LVU2315
 5503 0132 03F1FF32 		add	r2, r3, #-1
 387:Core/Src/SEGGER_RTT.c ****       NumBytesToWrite = RdOff - WrOff - 1u;
 5504              		.loc 1 387 8 view .LVU2316
 5505 0136 25D9     		bls	.L225
 5506              	.L240:
 390:Core/Src/SEGGER_RTT.c ****     }
 5507              		.loc 1 390 30 view .LVU2317
 5508 0138 3C6A     		ldr	r4, [r7, #32]
 388:Core/Src/SEGGER_RTT.c ****     } else {
 5509              		.loc 1 388 23 view .LVU2318
 5510 013a 531B     		subs	r3, r2, r5
 5511              	.LVL545:
 5512              	.L226:
 392:Core/Src/SEGGER_RTT.c ****     NumBytesToWrite = MIN(NumBytesToWrite, NumBytes);
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccs0vIiH.s 			page 156


 5513              		.loc 1 392 5 is_stmt 1 view .LVU2319
 5514 013c 4B45     		cmp	r3, r9
 394:Core/Src/SEGGER_RTT.c **** #if SEGGER_RTT_MEMCPY_USE_BYTELOOP
 5515              		.loc 1 394 18 is_stmt 0 view .LVU2320
 5516 013e 06EB0A02 		add	r2, r6, r10
 392:Core/Src/SEGGER_RTT.c ****     NumBytesToWrite = MIN(NumBytesToWrite, NumBytes);
 5517              		.loc 1 392 23 view .LVU2321
 5518 0142 A4EB0504 		sub	r4, r4, r5
 5519 0146 28BF     		it	cs
 5520 0148 4B46     		movcs	r3, r9
 393:Core/Src/SEGGER_RTT.c ****     pDst = (pRing->pBuffer + WrOff) + SEGGER_RTT_UNCACHED_OFF;
 5521              		.loc 1 393 5 is_stmt 1 view .LVU2322
 393:Core/Src/SEGGER_RTT.c ****     pDst = (pRing->pBuffer + WrOff) + SEGGER_RTT_UNCACHED_OFF;
 5522              		.loc 1 393 21 is_stmt 0 view .LVU2323
 5523 014a 9C42     		cmp	r4, r3
 394:Core/Src/SEGGER_RTT.c **** #if SEGGER_RTT_MEMCPY_USE_BYTELOOP
 5524              		.loc 1 394 10 view .LVU2324
 5525 014c 5068     		ldr	r0, [r2, #4]
 393:Core/Src/SEGGER_RTT.c ****     pDst = (pRing->pBuffer + WrOff) + SEGGER_RTT_UNCACHED_OFF;
 5526              		.loc 1 393 21 view .LVU2325
 5527 014e 28BF     		it	cs
 5528 0150 1C46     		movcs	r4, r3
 5529              	.LVL546:
 394:Core/Src/SEGGER_RTT.c **** #if SEGGER_RTT_MEMCPY_USE_BYTELOOP
 5530              		.loc 1 394 5 is_stmt 1 view .LVU2326
 403:Core/Src/SEGGER_RTT.c ****     NumBytesWritten += NumBytesToWrite;
 5531              		.loc 1 403 5 view .LVU2327
 5532 0152 2844     		add	r0, r0, r5
 5533 0154 5946     		mov	r1, fp
 5534 0156 2246     		mov	r2, r4
 5535 0158 FFF7FEFF 		bl	memcpy
 5536              	.LVL547:
 404:Core/Src/SEGGER_RTT.c ****     pBuffer         += NumBytesToWrite;
 5537              		.loc 1 404 5 view .LVU2328
 409:Core/Src/SEGGER_RTT.c ****       WrOff = 0u;
 5538              		.loc 1 409 8 is_stmt 0 view .LVU2329
 5539 015c 3B6A     		ldr	r3, [r7, #32]
 407:Core/Src/SEGGER_RTT.c **** #endif
 5540              		.loc 1 407 21 view .LVU2330
 5541 015e 2544     		add	r5, r5, r4
 5542              	.LVL548:
 412:Core/Src/SEGGER_RTT.c ****     pRing->WrOff = WrOff;
 5543              		.loc 1 412 5 is_stmt 1 view .LVU2331
 409:Core/Src/SEGGER_RTT.c ****       WrOff = 0u;
 5544              		.loc 1 409 8 is_stmt 0 view .LVU2332
 5545 0160 9D42     		cmp	r5, r3
 404:Core/Src/SEGGER_RTT.c ****     pBuffer         += NumBytesToWrite;
 5546              		.loc 1 404 21 view .LVU2333
 5547 0162 A044     		add	r8, r8, r4
 5548              	.LVL549:
 405:Core/Src/SEGGER_RTT.c ****     NumBytes        -= NumBytesToWrite;
 5549              		.loc 1 405 5 is_stmt 1 view .LVU2334
 405:Core/Src/SEGGER_RTT.c ****     NumBytes        -= NumBytesToWrite;
 5550              		.loc 1 405 21 is_stmt 0 view .LVU2335
 5551 0164 A344     		add	fp, fp, r4
 5552              	.LVL550:
 406:Core/Src/SEGGER_RTT.c ****     WrOff           += NumBytesToWrite;
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccs0vIiH.s 			page 157


 5553              		.loc 1 406 5 is_stmt 1 view .LVU2336
 406:Core/Src/SEGGER_RTT.c ****     WrOff           += NumBytesToWrite;
 5554              		.loc 1 406 21 is_stmt 0 view .LVU2337
 5555 0166 A9EB0409 		sub	r9, r9, r4
 5556              	.LVL551:
 407:Core/Src/SEGGER_RTT.c **** #endif
 5557              		.loc 1 407 5 is_stmt 1 view .LVU2338
 409:Core/Src/SEGGER_RTT.c ****       WrOff = 0u;
 5558              		.loc 1 409 5 view .LVU2339
 409:Core/Src/SEGGER_RTT.c ****       WrOff = 0u;
 5559              		.loc 1 409 8 is_stmt 0 view .LVU2340
 5560 016a 10D0     		beq	.L239
 412:Core/Src/SEGGER_RTT.c ****     pRing->WrOff = WrOff;
 5561              		.loc 1 412 5 view .LVU2341
 5562              		.syntax unified
 5563              	@ 412 "Core/Src/SEGGER_RTT.c" 1
 5564 016c BFF35F8F 		dmb
 5565              	
 5566              	@ 0 "" 2
 412:Core/Src/SEGGER_RTT.c ****     pRing->WrOff = WrOff;
 5567              		.loc 1 412 15 is_stmt 1 view .LVU2342
 413:Core/Src/SEGGER_RTT.c ****   } while (NumBytes);
 5568              		.loc 1 413 5 view .LVU2343
 413:Core/Src/SEGGER_RTT.c ****   } while (NumBytes);
 5569              		.loc 1 413 18 is_stmt 0 view .LVU2344
 5570              		.thumb
 5571              		.syntax unified
 5572 0170 7D62     		str	r5, [r7, #36]
 414:Core/Src/SEGGER_RTT.c ****   return NumBytesWritten;
 5573              		.loc 1 414 12 is_stmt 1 view .LVU2345
 5574 0172 B9F1000F 		cmp	r9, #0
 5575 0176 3FF46AAF 		beq	.L218
 385:Core/Src/SEGGER_RTT.c ****     RdOff = pRing->RdOff;                         // May be changed by host (debug probe) in the me
 5576              		.loc 1 385 3 view .LVU2346
 386:Core/Src/SEGGER_RTT.c ****     if (RdOff > WrOff) {
 5577              		.loc 1 386 5 view .LVU2347
 388:Core/Src/SEGGER_RTT.c ****     } else {
 5578              		.loc 1 388 7 view .LVU2348
 390:Core/Src/SEGGER_RTT.c ****     }
 5579              		.loc 1 390 7 view .LVU2349
 386:Core/Src/SEGGER_RTT.c ****     if (RdOff > WrOff) {
 5580              		.loc 1 386 11 is_stmt 0 view .LVU2350
 5581 017a BB6A     		ldr	r3, [r7, #40]
 5582              	.LVL552:
 387:Core/Src/SEGGER_RTT.c ****       NumBytesToWrite = RdOff - WrOff - 1u;
 5583              		.loc 1 387 5 is_stmt 1 view .LVU2351
 387:Core/Src/SEGGER_RTT.c ****       NumBytesToWrite = RdOff - WrOff - 1u;
 5584              		.loc 1 387 8 is_stmt 0 view .LVU2352
 5585 017c AB42     		cmp	r3, r5
 388:Core/Src/SEGGER_RTT.c ****     } else {
 5586              		.loc 1 388 23 view .LVU2353
 5587 017e 03F1FF32 		add	r2, r3, #-1
 387:Core/Src/SEGGER_RTT.c ****       NumBytesToWrite = RdOff - WrOff - 1u;
 5588              		.loc 1 387 8 view .LVU2354
 5589 0182 D9D8     		bhi	.L240
 5590              	.LVL553:
 5591              	.L225:
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccs0vIiH.s 			page 158


 390:Core/Src/SEGGER_RTT.c ****     }
 5592              		.loc 1 390 30 view .LVU2355
 5593 0184 3C6A     		ldr	r4, [r7, #32]
 390:Core/Src/SEGGER_RTT.c ****     }
 5594              		.loc 1 390 23 view .LVU2356
 5595 0186 2344     		add	r3, r3, r4
 5596              	.LVL554:
 390:Core/Src/SEGGER_RTT.c ****     }
 5597              		.loc 1 390 23 view .LVU2357
 5598 0188 013B     		subs	r3, r3, #1
 5599 018a 5B1B     		subs	r3, r3, r5
 5600              	.LVL555:
 390:Core/Src/SEGGER_RTT.c ****     }
 5601              		.loc 1 390 23 view .LVU2358
 5602 018c D6E7     		b	.L226
 5603              	.LVL556:
 5604              	.L239:
 412:Core/Src/SEGGER_RTT.c ****     pRing->WrOff = WrOff;
 5605              		.loc 1 412 5 is_stmt 1 view .LVU2359
 5606              		.syntax unified
 5607              	@ 412 "Core/Src/SEGGER_RTT.c" 1
 5608 018e BFF35F8F 		dmb
 5609              	
 5610              	@ 0 "" 2
 412:Core/Src/SEGGER_RTT.c ****     pRing->WrOff = WrOff;
 5611              		.loc 1 412 15 view .LVU2360
 413:Core/Src/SEGGER_RTT.c ****   } while (NumBytes);
 5612              		.loc 1 413 5 view .LVU2361
 413:Core/Src/SEGGER_RTT.c ****   } while (NumBytes);
 5613              		.loc 1 413 18 is_stmt 0 view .LVU2362
 5614              		.thumb
 5615              		.syntax unified
 5616 0192 0025     		movs	r5, #0
 5617 0194 7D62     		str	r5, [r7, #36]
 414:Core/Src/SEGGER_RTT.c ****   return NumBytesWritten;
 5618              		.loc 1 414 12 is_stmt 1 view .LVU2363
 5619 0196 B9F1000F 		cmp	r9, #0
 5620 019a C8D1     		bne	.L229
 5621 019c 57E7     		b	.L218
 5622              	.LVL557:
 5623              	.L216:
 414:Core/Src/SEGGER_RTT.c ****   return NumBytesWritten;
 5624              		.loc 1 414 12 is_stmt 0 view .LVU2364
 5625              	.LBE311:
 5626              	.LBE310:
1130:Core/Src/SEGGER_RTT.c ****     Status = Avail < NumBytes ? Avail : NumBytes;
 5627              		.loc 1 1130 5 is_stmt 1 view .LVU2365
 5628              	.LBB312:
 5629              	.LBI312:
 526:Core/Src/SEGGER_RTT.c ****   unsigned RdOff;
 5630              		.loc 1 526 17 view .LVU2366
 5631              	.LBB313:
 527:Core/Src/SEGGER_RTT.c ****   unsigned WrOff;
 5632              		.loc 1 527 3 view .LVU2367
 528:Core/Src/SEGGER_RTT.c ****   unsigned r;
 5633              		.loc 1 528 3 view .LVU2368
 529:Core/Src/SEGGER_RTT.c ****   //
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccs0vIiH.s 			page 159


 5634              		.loc 1 529 3 view .LVU2369
 534:Core/Src/SEGGER_RTT.c ****   WrOff = pRing->WrOff;
 5635              		.loc 1 534 3 view .LVU2370
 534:Core/Src/SEGGER_RTT.c ****   WrOff = pRing->WrOff;
 5636              		.loc 1 534 9 is_stmt 0 view .LVU2371
 5637 019e BA6A     		ldr	r2, [r7, #40]
 5638              	.LVL558:
 535:Core/Src/SEGGER_RTT.c ****   if (RdOff <= WrOff) {
 5639              		.loc 1 535 3 is_stmt 1 view .LVU2372
 535:Core/Src/SEGGER_RTT.c ****   if (RdOff <= WrOff) {
 5640              		.loc 1 535 9 is_stmt 0 view .LVU2373
 5641 01a0 D7F824A0 		ldr	r10, [r7, #36]
 5642              	.LVL559:
 536:Core/Src/SEGGER_RTT.c ****     r = pRing->SizeOfBuffer - 1u - WrOff + RdOff;
 5643              		.loc 1 536 3 is_stmt 1 view .LVU2374
 536:Core/Src/SEGGER_RTT.c ****     r = pRing->SizeOfBuffer - 1u - WrOff + RdOff;
 5644              		.loc 1 536 6 is_stmt 0 view .LVU2375
 5645 01a4 5245     		cmp	r2, r10
 5646 01a6 1FD9     		bls	.L241
 539:Core/Src/SEGGER_RTT.c ****   }
 5647              		.loc 1 539 5 is_stmt 1 view .LVU2376
 539:Core/Src/SEGGER_RTT.c ****   }
 5648              		.loc 1 539 7 is_stmt 0 view .LVU2377
 5649 01a8 02F1FF38 		add	r8, r2, #-1
 5650 01ac A8EB0A08 		sub	r8, r8, r10
 5651              	.LVL560:
 541:Core/Src/SEGGER_RTT.c **** }
 5652              		.loc 1 541 3 is_stmt 1 view .LVU2378
 541:Core/Src/SEGGER_RTT.c **** }
 5653              		.loc 1 541 3 is_stmt 0 view .LVU2379
 5654              	.LBE313:
 5655              	.LBE312:
1131:Core/Src/SEGGER_RTT.c ****     _WriteNoCheck(pRing, pData, Status);
 5656              		.loc 1 1131 5 is_stmt 1 view .LVU2380
 5657              	.LBB315:
 5658              	.LBB306:
 537:Core/Src/SEGGER_RTT.c ****   } else {
 5659              		.loc 1 537 14 is_stmt 0 view .LVU2381
 5660 01b0 3F6A     		ldr	r7, [r7, #32]
 5661              	.LBE306:
 5662              	.LBE315:
1131:Core/Src/SEGGER_RTT.c ****     _WriteNoCheck(pRing, pData, Status);
 5663              		.loc 1 1131 12 view .LVU2382
 5664 01b2 C845     		cmp	r8, r9
 5665 01b4 28BF     		it	cs
 5666 01b6 C846     		movcs	r8, r9
 5667              	.LVL561:
1132:Core/Src/SEGGER_RTT.c ****     break;
 5668              		.loc 1 1132 5 is_stmt 1 view .LVU2383
 5669              	.LBB316:
 5670              	.LBI316:
 436:Core/Src/SEGGER_RTT.c ****   unsigned NumBytesAtOnce;
 5671              		.loc 1 436 13 view .LVU2384
 5672              	.LBB317:
 437:Core/Src/SEGGER_RTT.c ****   unsigned WrOff;
 5673              		.loc 1 437 3 view .LVU2385
 438:Core/Src/SEGGER_RTT.c ****   unsigned Rem;
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccs0vIiH.s 			page 160


 5674              		.loc 1 438 3 view .LVU2386
 439:Core/Src/SEGGER_RTT.c ****   volatile char* pDst;
 5675              		.loc 1 439 3 view .LVU2387
 440:Core/Src/SEGGER_RTT.c **** 
 5676              		.loc 1 440 3 view .LVU2388
 442:Core/Src/SEGGER_RTT.c ****   Rem = pRing->SizeOfBuffer - WrOff;
 5677              		.loc 1 442 3 view .LVU2389
 443:Core/Src/SEGGER_RTT.c ****   if (Rem > NumBytes) {
 5678              		.loc 1 443 3 view .LVU2390
 443:Core/Src/SEGGER_RTT.c ****   if (Rem > NumBytes) {
 5679              		.loc 1 443 7 is_stmt 0 view .LVU2391
 5680 01b8 A7EB0A02 		sub	r2, r7, r10
 5681              	.LVL562:
 444:Core/Src/SEGGER_RTT.c ****     //
 5682              		.loc 1 444 3 is_stmt 1 view .LVU2392
 444:Core/Src/SEGGER_RTT.c ****     //
 5683              		.loc 1 444 6 is_stmt 0 view .LVU2393
 5684 01bc 9045     		cmp	r8, r2
 5685 01be 21D2     		bcs	.L224
 5686              	.L242:
 448:Core/Src/SEGGER_RTT.c **** #if SEGGER_RTT_MEMCPY_USE_BYTELOOP
 5687              		.loc 1 448 5 is_stmt 1 view .LVU2394
 5688              	.LVL563:
 457:Core/Src/SEGGER_RTT.c ****     RTT__DMB();                     // Force data write to be complete before writing the <WrOff>, 
 5689              		.loc 1 457 5 view .LVU2395
 448:Core/Src/SEGGER_RTT.c **** #if SEGGER_RTT_MEMCPY_USE_BYTELOOP
 5690              		.loc 1 448 18 is_stmt 0 view .LVU2396
 5691 01c0 631C     		adds	r3, r4, #1
 5692              	.LVL564:
 448:Core/Src/SEGGER_RTT.c **** #if SEGGER_RTT_MEMCPY_USE_BYTELOOP
 5693              		.loc 1 448 18 view .LVU2397
 5694 01c2 03EB4303 		add	r3, r3, r3, lsl #1
 5695 01c6 06EBC303 		add	r3, r6, r3, lsl #3
 457:Core/Src/SEGGER_RTT.c ****     RTT__DMB();                     // Force data write to be complete before writing the <WrOff>, 
 5696              		.loc 1 457 5 view .LVU2398
 5697 01ca 5946     		mov	r1, fp
 448:Core/Src/SEGGER_RTT.c **** #if SEGGER_RTT_MEMCPY_USE_BYTELOOP
 5698              		.loc 1 448 10 view .LVU2399
 5699 01cc 5868     		ldr	r0, [r3, #4]
 457:Core/Src/SEGGER_RTT.c ****     RTT__DMB();                     // Force data write to be complete before writing the <WrOff>, 
 5700              		.loc 1 457 5 view .LVU2400
 5701 01ce 4246     		mov	r2, r8
 5702              	.LVL565:
 457:Core/Src/SEGGER_RTT.c ****     RTT__DMB();                     // Force data write to be complete before writing the <WrOff>, 
 5703              		.loc 1 457 5 view .LVU2401
 5704 01d0 5044     		add	r0, r0, r10
 5705 01d2 FFF7FEFF 		bl	memcpy
 5706              	.LVL566:
 458:Core/Src/SEGGER_RTT.c ****     pRing->WrOff = WrOff + NumBytes;
 5707              		.loc 1 458 5 is_stmt 1 view .LVU2402
 5708              		.syntax unified
 5709              	@ 458 "Core/Src/SEGGER_RTT.c" 1
 5710 01d6 BFF35F8F 		dmb
 5711              	
 5712              	@ 0 "" 2
 458:Core/Src/SEGGER_RTT.c ****     pRing->WrOff = WrOff + NumBytes;
 5713              		.loc 1 458 15 view .LVU2403
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccs0vIiH.s 			page 161


 459:Core/Src/SEGGER_RTT.c **** #endif
 5714              		.loc 1 459 5 view .LVU2404
 459:Core/Src/SEGGER_RTT.c **** #endif
 5715              		.loc 1 459 18 is_stmt 0 view .LVU2405
 5716              		.thumb
 5717              		.syntax unified
 5718 01da 2544     		add	r5, r5, r4
 5719 01dc 06EBC505 		add	r5, r6, r5, lsl #3
 459:Core/Src/SEGGER_RTT.c **** #endif
 5720              		.loc 1 459 26 view .LVU2406
 5721 01e0 0AEB0803 		add	r3, r10, r8
 459:Core/Src/SEGGER_RTT.c **** #endif
 5722              		.loc 1 459 18 view .LVU2407
 5723 01e4 6B62     		str	r3, [r5, #36]
 5724 01e6 32E7     		b	.L218
 5725              	.LVL567:
 5726              	.L241:
 459:Core/Src/SEGGER_RTT.c **** #endif
 5727              		.loc 1 459 18 view .LVU2408
 5728              	.LBE317:
 5729              	.LBE316:
 5730              	.LBB319:
 5731              	.LBB314:
 537:Core/Src/SEGGER_RTT.c ****   } else {
 5732              		.loc 1 537 5 is_stmt 1 view .LVU2409
 537:Core/Src/SEGGER_RTT.c ****   } else {
 5733              		.loc 1 537 14 is_stmt 0 view .LVU2410
 5734 01e8 3F6A     		ldr	r7, [r7, #32]
 537:Core/Src/SEGGER_RTT.c ****   } else {
 5735              		.loc 1 537 7 view .LVU2411
 5736 01ea 02EB0708 		add	r8, r2, r7
 5737 01ee 08F1FF38 		add	r8, r8, #-1
 5738 01f2 A8EB0A08 		sub	r8, r8, r10
 5739              	.LVL568:
 541:Core/Src/SEGGER_RTT.c **** }
 5740              		.loc 1 541 3 is_stmt 1 view .LVU2412
 541:Core/Src/SEGGER_RTT.c **** }
 5741              		.loc 1 541 3 is_stmt 0 view .LVU2413
 5742              	.LBE314:
 5743              	.LBE319:
1131:Core/Src/SEGGER_RTT.c ****     _WriteNoCheck(pRing, pData, Status);
 5744              		.loc 1 1131 5 is_stmt 1 view .LVU2414
1131:Core/Src/SEGGER_RTT.c ****     _WriteNoCheck(pRing, pData, Status);
 5745              		.loc 1 1131 12 is_stmt 0 view .LVU2415
 5746 01f6 C845     		cmp	r8, r9
 5747 01f8 28BF     		it	cs
 5748 01fa C846     		movcs	r8, r9
 5749              	.LVL569:
1132:Core/Src/SEGGER_RTT.c ****     break;
 5750              		.loc 1 1132 5 is_stmt 1 view .LVU2416
 5751              	.LBB320:
 436:Core/Src/SEGGER_RTT.c ****   unsigned NumBytesAtOnce;
 5752              		.loc 1 436 13 view .LVU2417
 5753              	.LBB318:
 437:Core/Src/SEGGER_RTT.c ****   unsigned WrOff;
 5754              		.loc 1 437 3 view .LVU2418
 438:Core/Src/SEGGER_RTT.c ****   unsigned Rem;
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccs0vIiH.s 			page 162


 5755              		.loc 1 438 3 view .LVU2419
 439:Core/Src/SEGGER_RTT.c ****   volatile char* pDst;
 5756              		.loc 1 439 3 view .LVU2420
 440:Core/Src/SEGGER_RTT.c **** 
 5757              		.loc 1 440 3 view .LVU2421
 442:Core/Src/SEGGER_RTT.c ****   Rem = pRing->SizeOfBuffer - WrOff;
 5758              		.loc 1 442 3 view .LVU2422
 443:Core/Src/SEGGER_RTT.c ****   if (Rem > NumBytes) {
 5759              		.loc 1 443 3 view .LVU2423
 443:Core/Src/SEGGER_RTT.c ****   if (Rem > NumBytes) {
 5760              		.loc 1 443 7 is_stmt 0 view .LVU2424
 5761 01fc A7EB0A02 		sub	r2, r7, r10
 5762              	.LVL570:
 444:Core/Src/SEGGER_RTT.c ****     //
 5763              		.loc 1 444 3 is_stmt 1 view .LVU2425
 444:Core/Src/SEGGER_RTT.c ****     //
 5764              		.loc 1 444 6 is_stmt 0 view .LVU2426
 5765 0200 9045     		cmp	r8, r2
 5766 0202 DDD3     		bcc	.L242
 5767              	.L224:
 479:Core/Src/SEGGER_RTT.c ****     pDst = (pRing->pBuffer + WrOff) + SEGGER_RTT_UNCACHED_OFF;
 5768              		.loc 1 479 5 is_stmt 1 view .LVU2427
 5769              	.LVL571:
 480:Core/Src/SEGGER_RTT.c ****     SEGGER_RTT_MEMCPY((void*)pDst, pData, NumBytesAtOnce);
 5770              		.loc 1 480 5 view .LVU2428
 481:Core/Src/SEGGER_RTT.c ****     NumBytesAtOnce = NumBytes - Rem;
 5771              		.loc 1 481 5 view .LVU2429
 480:Core/Src/SEGGER_RTT.c ****     SEGGER_RTT_MEMCPY((void*)pDst, pData, NumBytesAtOnce);
 5772              		.loc 1 480 18 is_stmt 0 view .LVU2430
 5773 0204 04F10109 		add	r9, r4, #1
 5774              	.LVL572:
 480:Core/Src/SEGGER_RTT.c ****     SEGGER_RTT_MEMCPY((void*)pDst, pData, NumBytesAtOnce);
 5775              		.loc 1 480 18 view .LVU2431
 5776 0208 09EB4909 		add	r9, r9, r9, lsl #1
 5777 020c 06EBC909 		add	r9, r6, r9, lsl #3
 481:Core/Src/SEGGER_RTT.c ****     NumBytesAtOnce = NumBytes - Rem;
 5778              		.loc 1 481 5 view .LVU2432
 5779 0210 5946     		mov	r1, fp
 480:Core/Src/SEGGER_RTT.c ****     SEGGER_RTT_MEMCPY((void*)pDst, pData, NumBytesAtOnce);
 5780              		.loc 1 480 10 view .LVU2433
 5781 0212 D9F80400 		ldr	r0, [r9, #4]
 481:Core/Src/SEGGER_RTT.c ****     NumBytesAtOnce = NumBytes - Rem;
 5782              		.loc 1 481 5 view .LVU2434
 5783 0216 0192     		str	r2, [sp, #4]
 5784 0218 5044     		add	r0, r0, r10
 5785 021a FFF7FEFF 		bl	memcpy
 5786              	.LVL573:
 482:Core/Src/SEGGER_RTT.c ****     pDst = pRing->pBuffer + SEGGER_RTT_UNCACHED_OFF;
 5787              		.loc 1 482 5 is_stmt 1 view .LVU2435
 482:Core/Src/SEGGER_RTT.c ****     pDst = pRing->pBuffer + SEGGER_RTT_UNCACHED_OFF;
 5788              		.loc 1 482 20 is_stmt 0 view .LVU2436
 5789 021e A8EB0707 		sub	r7, r8, r7
 484:Core/Src/SEGGER_RTT.c ****     RTT__DMB();                     // Force data write to be complete before writing the <WrOff>, 
 5790              		.loc 1 484 5 view .LVU2437
 5791 0222 019A     		ldr	r2, [sp, #4]
 5792 0224 D9F80400 		ldr	r0, [r9, #4]
 482:Core/Src/SEGGER_RTT.c ****     pDst = pRing->pBuffer + SEGGER_RTT_UNCACHED_OFF;
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccs0vIiH.s 			page 163


 5793              		.loc 1 482 20 view .LVU2438
 5794 0228 5744     		add	r7, r7, r10
 5795              	.LVL574:
 483:Core/Src/SEGGER_RTT.c ****     SEGGER_RTT_MEMCPY((void*)pDst, pData + Rem, NumBytesAtOnce);
 5796              		.loc 1 483 5 is_stmt 1 view .LVU2439
 484:Core/Src/SEGGER_RTT.c ****     RTT__DMB();                     // Force data write to be complete before writing the <WrOff>, 
 5797              		.loc 1 484 5 view .LVU2440
 5798 022a 0BEB0201 		add	r1, fp, r2
 5799 022e 3A46     		mov	r2, r7
 5800 0230 FFF7FEFF 		bl	memcpy
 5801              	.LVL575:
 485:Core/Src/SEGGER_RTT.c ****     pRing->WrOff = NumBytesAtOnce;
 5802              		.loc 1 485 5 view .LVU2441
 5803              		.syntax unified
 5804              	@ 485 "Core/Src/SEGGER_RTT.c" 1
 5805 0234 BFF35F8F 		dmb
 5806              	
 5807              	@ 0 "" 2
 485:Core/Src/SEGGER_RTT.c ****     pRing->WrOff = NumBytesAtOnce;
 5808              		.loc 1 485 15 view .LVU2442
 486:Core/Src/SEGGER_RTT.c **** #endif
 5809              		.loc 1 486 5 view .LVU2443
 486:Core/Src/SEGGER_RTT.c **** #endif
 5810              		.loc 1 486 18 is_stmt 0 view .LVU2444
 5811              		.thumb
 5812              		.syntax unified
 5813 0238 2544     		add	r5, r5, r4
 5814 023a 06EBC505 		add	r5, r6, r5, lsl #3
 5815 023e 6F62     		str	r7, [r5, #36]
 5816 0240 05E7     		b	.L218
 5817              	.LVL576:
 5818              	.L221:
 486:Core/Src/SEGGER_RTT.c **** #endif
 5819              		.loc 1 486 18 view .LVU2445
 5820              	.LBE318:
 5821              	.LBE320:
 5822              	.LBB321:
 5823              	.LBB309:
 479:Core/Src/SEGGER_RTT.c ****     pDst = (pRing->pBuffer + WrOff) + SEGGER_RTT_UNCACHED_OFF;
 5824              		.loc 1 479 5 is_stmt 1 view .LVU2446
 480:Core/Src/SEGGER_RTT.c ****     SEGGER_RTT_MEMCPY((void*)pDst, pData, NumBytesAtOnce);
 5825              		.loc 1 480 5 view .LVU2447
 481:Core/Src/SEGGER_RTT.c ****     NumBytesAtOnce = NumBytes - Rem;
 5826              		.loc 1 481 5 view .LVU2448
 480:Core/Src/SEGGER_RTT.c ****     SEGGER_RTT_MEMCPY((void*)pDst, pData, NumBytesAtOnce);
 5827              		.loc 1 480 18 is_stmt 0 view .LVU2449
 5828 0242 06EBC406 		add	r6, r6, r4, lsl #3
 482:Core/Src/SEGGER_RTT.c ****     pDst = pRing->pBuffer + SEGGER_RTT_UNCACHED_OFF;
 5829              		.loc 1 482 20 view .LVU2450
 5830 0246 AAEB0704 		sub	r4, r10, r7
 480:Core/Src/SEGGER_RTT.c ****     SEGGER_RTT_MEMCPY((void*)pDst, pData, NumBytesAtOnce);
 5831              		.loc 1 480 10 view .LVU2451
 5832 024a 7068     		ldr	r0, [r6, #4]
 481:Core/Src/SEGGER_RTT.c ****     NumBytesAtOnce = NumBytes - Rem;
 5833              		.loc 1 481 5 view .LVU2452
 5834 024c 4246     		mov	r2, r8
 5835              	.LVL577:
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccs0vIiH.s 			page 164


 481:Core/Src/SEGGER_RTT.c ****     NumBytesAtOnce = NumBytes - Rem;
 5836              		.loc 1 481 5 view .LVU2453
 5837 024e 5946     		mov	r1, fp
 5838 0250 5044     		add	r0, r0, r10
 482:Core/Src/SEGGER_RTT.c ****     pDst = pRing->pBuffer + SEGGER_RTT_UNCACHED_OFF;
 5839              		.loc 1 482 20 view .LVU2454
 5840 0252 4C44     		add	r4, r4, r9
 481:Core/Src/SEGGER_RTT.c ****     NumBytesAtOnce = NumBytes - Rem;
 5841              		.loc 1 481 5 view .LVU2455
 5842 0254 FFF7FEFF 		bl	memcpy
 5843              	.LVL578:
 482:Core/Src/SEGGER_RTT.c ****     pDst = pRing->pBuffer + SEGGER_RTT_UNCACHED_OFF;
 5844              		.loc 1 482 5 is_stmt 1 view .LVU2456
 483:Core/Src/SEGGER_RTT.c ****     SEGGER_RTT_MEMCPY((void*)pDst, pData + Rem, NumBytesAtOnce);
 5845              		.loc 1 483 5 view .LVU2457
 484:Core/Src/SEGGER_RTT.c ****     RTT__DMB();                     // Force data write to be complete before writing the <WrOff>, 
 5846              		.loc 1 484 5 view .LVU2458
 5847 0258 7068     		ldr	r0, [r6, #4]
 5848 025a 0BEB0801 		add	r1, fp, r8
 5849 025e 2246     		mov	r2, r4
 5850 0260 FFF7FEFF 		bl	memcpy
 5851              	.LVL579:
 485:Core/Src/SEGGER_RTT.c ****     pRing->WrOff = NumBytesAtOnce;
 5852              		.loc 1 485 5 view .LVU2459
 5853              		.syntax unified
 5854              	@ 485 "Core/Src/SEGGER_RTT.c" 1
 5855 0264 BFF35F8F 		dmb
 5856              	
 5857              	@ 0 "" 2
 485:Core/Src/SEGGER_RTT.c ****     pRing->WrOff = NumBytesAtOnce;
 5858              		.loc 1 485 15 view .LVU2460
 486:Core/Src/SEGGER_RTT.c **** #endif
 5859              		.loc 1 486 5 view .LVU2461
 486:Core/Src/SEGGER_RTT.c **** #endif
 5860              		.loc 1 486 18 is_stmt 0 view .LVU2462
 5861              		.thumb
 5862              		.syntax unified
 5863 0268 6C62     		str	r4, [r5, #36]
 5864 026a C846     		mov	r8, r9
 5865              	.LVL580:
 486:Core/Src/SEGGER_RTT.c **** #endif
 5866              		.loc 1 486 18 view .LVU2463
 5867 026c EFE6     		b	.L218
 5868              	.L244:
 5869 026e 00BF     		.align	2
 5870              	.L243:
 5871 0270 00000000 		.word	.LANCHOR0
 5872 0274 00000000 		.word	.LC0
 5873 0278 00000000 		.word	.LANCHOR1
 5874 027c 00000000 		.word	.LANCHOR2
 5875              	.LBE309:
 5876              	.LBE321:
 5877              	.LBE323:
 5878              	.LBE325:
 5879              	.LBE327:
 5880              	.LBE330:
 5881              	.LBE333:
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccs0vIiH.s 			page 165


 5882              		.cfi_endproc
 5883              	.LFE14:
 5885              		.section	.text.SEGGER_RTT_PutCharSkipNoLock,"ax",%progbits
 5886              		.align	1
 5887              		.p2align 2,,3
 5888              		.global	SEGGER_RTT_PutCharSkipNoLock
 5889              		.syntax unified
 5890              		.thumb
 5891              		.thumb_func
 5893              	SEGGER_RTT_PutCharSkipNoLock:
 5894              	.LVL581:
 5895              	.LFB15:
1240:Core/Src/SEGGER_RTT.c **** 
1241:Core/Src/SEGGER_RTT.c **** /*********************************************************************
1242:Core/Src/SEGGER_RTT.c **** *
1243:Core/Src/SEGGER_RTT.c **** *       SEGGER_RTT_PutCharSkipNoLock
1244:Core/Src/SEGGER_RTT.c **** *
1245:Core/Src/SEGGER_RTT.c **** *  Function description
1246:Core/Src/SEGGER_RTT.c **** *    Stores a single character/byte in SEGGER RTT buffer.
1247:Core/Src/SEGGER_RTT.c **** *    SEGGER_RTT_PutCharSkipNoLock does not lock the application and
1248:Core/Src/SEGGER_RTT.c **** *    skips the byte, if it does not fit into the buffer.
1249:Core/Src/SEGGER_RTT.c **** *
1250:Core/Src/SEGGER_RTT.c **** *  Parameters
1251:Core/Src/SEGGER_RTT.c **** *    BufferIndex  Index of "Up"-buffer to be used (e.g. 0 for "Terminal").
1252:Core/Src/SEGGER_RTT.c **** *    c            Byte to be stored.
1253:Core/Src/SEGGER_RTT.c **** *
1254:Core/Src/SEGGER_RTT.c **** *  Return value
1255:Core/Src/SEGGER_RTT.c **** *    Number of bytes which have been stored in the "Up"-buffer.
1256:Core/Src/SEGGER_RTT.c **** *
1257:Core/Src/SEGGER_RTT.c **** *  Notes
1258:Core/Src/SEGGER_RTT.c **** *    (1) If there is not enough space in the "Up"-buffer, the character is dropped.
1259:Core/Src/SEGGER_RTT.c **** *    (2) For performance reasons this function does not call Init()
1260:Core/Src/SEGGER_RTT.c **** *        and may only be called after RTT has been initialized.
1261:Core/Src/SEGGER_RTT.c **** *        Either by calling SEGGER_RTT_Init() or calling another RTT API function first.
1262:Core/Src/SEGGER_RTT.c **** */
1263:Core/Src/SEGGER_RTT.c **** 
1264:Core/Src/SEGGER_RTT.c **** unsigned SEGGER_RTT_PutCharSkipNoLock(unsigned BufferIndex, char c) {
 5896              		.loc 1 1264 69 is_stmt 1 view -0
 5897              		.cfi_startproc
 5898              		@ args = 0, pretend = 0, frame = 0
 5899              		@ frame_needed = 0, uses_anonymous_args = 0
 5900              		@ link register save eliminated.
1265:Core/Src/SEGGER_RTT.c ****   SEGGER_RTT_BUFFER_UP* pRing;
 5901              		.loc 1 1265 3 view .LVU2465
1266:Core/Src/SEGGER_RTT.c ****   unsigned              WrOff;
 5902              		.loc 1 1266 3 view .LVU2466
1267:Core/Src/SEGGER_RTT.c ****   unsigned              Status;
 5903              		.loc 1 1267 3 view .LVU2467
1268:Core/Src/SEGGER_RTT.c ****   volatile char*        pDst;
 5904              		.loc 1 1268 3 view .LVU2468
1269:Core/Src/SEGGER_RTT.c ****   //
1270:Core/Src/SEGGER_RTT.c ****   // Get "to-host" ring buffer.
1271:Core/Src/SEGGER_RTT.c ****   //
1272:Core/Src/SEGGER_RTT.c ****   pRing = (SEGGER_RTT_BUFFER_UP*)((char*)&_SEGGER_RTT.aUp[BufferIndex] + SEGGER_RTT_UNCACHED_OFF); 
 5905              		.loc 1 1272 3 view .LVU2469
1264:Core/Src/SEGGER_RTT.c ****   SEGGER_RTT_BUFFER_UP* pRing;
 5906              		.loc 1 1264 69 is_stmt 0 view .LVU2470
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccs0vIiH.s 			page 166


 5907 0000 F0B4     		push	{r4, r5, r6, r7}
 5908              		.cfi_def_cfa_offset 16
 5909              		.cfi_offset 4, -16
 5910              		.cfi_offset 5, -12
 5911              		.cfi_offset 6, -8
 5912              		.cfi_offset 7, -4
1273:Core/Src/SEGGER_RTT.c ****   //
1274:Core/Src/SEGGER_RTT.c ****   // Get write position and handle wrap-around if necessary
1275:Core/Src/SEGGER_RTT.c ****   //
1276:Core/Src/SEGGER_RTT.c ****   WrOff = pRing->WrOff + 1;
 5913              		.loc 1 1276 16 view .LVU2471
 5914 0002 0F4C     		ldr	r4, .L250
 5915              	.LVL582:
 5916              		.loc 1 1276 3 is_stmt 1 view .LVU2472
 5917              		.loc 1 1276 16 is_stmt 0 view .LVU2473
 5918 0004 00EB4003 		add	r3, r0, r0, lsl #1
 5919 0008 04EBC303 		add	r3, r4, r3, lsl #3
 5920 000c 5D6A     		ldr	r5, [r3, #36]
1277:Core/Src/SEGGER_RTT.c ****   if (WrOff == pRing->SizeOfBuffer) {
1278:Core/Src/SEGGER_RTT.c ****     WrOff = 0;
 5921              		.loc 1 1278 11 view .LVU2474
 5922 000e 1F6A     		ldr	r7, [r3, #32]
1279:Core/Src/SEGGER_RTT.c ****   }
1280:Core/Src/SEGGER_RTT.c ****   //
1281:Core/Src/SEGGER_RTT.c ****   // Output byte if free space is available
1282:Core/Src/SEGGER_RTT.c ****   //
1283:Core/Src/SEGGER_RTT.c ****   if (WrOff != pRing->RdOff) {
 5923              		.loc 1 1283 21 view .LVU2475
 5924 0010 9E6A     		ldr	r6, [r3, #40]
1276:Core/Src/SEGGER_RTT.c ****   if (WrOff == pRing->SizeOfBuffer) {
 5925              		.loc 1 1276 9 view .LVU2476
 5926 0012 6A1C     		adds	r2, r5, #1
 5927              	.LVL583:
1277:Core/Src/SEGGER_RTT.c ****   if (WrOff == pRing->SizeOfBuffer) {
 5928              		.loc 1 1277 3 is_stmt 1 view .LVU2477
1278:Core/Src/SEGGER_RTT.c ****   }
 5929              		.loc 1 1278 11 is_stmt 0 view .LVU2478
 5930 0014 9742     		cmp	r7, r2
 5931 0016 08BF     		it	eq
 5932 0018 0022     		moveq	r2, #0
 5933              	.LVL584:
 5934              		.loc 1 1283 3 is_stmt 1 view .LVU2479
 5935              		.loc 1 1283 6 is_stmt 0 view .LVU2480
 5936 001a 9642     		cmp	r6, r2
 5937 001c 0CD0     		beq	.L248
1284:Core/Src/SEGGER_RTT.c ****     pDst = (pRing->pBuffer + pRing->WrOff) + SEGGER_RTT_UNCACHED_OFF;
 5938              		.loc 1 1284 5 is_stmt 1 view .LVU2481
 5939              		.loc 1 1284 18 is_stmt 0 view .LVU2482
 5940 001e 0130     		adds	r0, r0, #1
 5941              	.LVL585:
 5942              		.loc 1 1284 18 view .LVU2483
 5943 0020 00EB4000 		add	r0, r0, r0, lsl #1
 5944              	.LVL586:
 5945              		.loc 1 1284 18 view .LVU2484
 5946 0024 04EBC004 		add	r4, r4, r0, lsl #3
 5947              		.loc 1 1284 10 view .LVU2485
 5948 0028 6068     		ldr	r0, [r4, #4]
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccs0vIiH.s 			page 167


 5949              	.LVL587:
1285:Core/Src/SEGGER_RTT.c ****     *pDst = c;
 5950              		.loc 1 1285 5 is_stmt 1 view .LVU2486
 5951              		.loc 1 1285 11 is_stmt 0 view .LVU2487
 5952 002a 4155     		strb	r1, [r0, r5]
1286:Core/Src/SEGGER_RTT.c ****     RTT__DMB();                     // Force data write to be complete before writing the <WrOff>, 
 5953              		.loc 1 1286 5 is_stmt 1 view .LVU2488
 5954              		.syntax unified
 5955              	@ 1286 "Core/Src/SEGGER_RTT.c" 1
 5956 002c BFF35F8F 		dmb
 5957              	
 5958              	@ 0 "" 2
 5959              		.loc 1 1286 15 view .LVU2489
1287:Core/Src/SEGGER_RTT.c ****     pRing->WrOff = WrOff;
 5960              		.loc 1 1287 5 view .LVU2490
1288:Core/Src/SEGGER_RTT.c ****     Status = 1;
 5961              		.loc 1 1288 12 is_stmt 0 view .LVU2491
 5962              		.thumb
 5963              		.syntax unified
 5964 0030 0120     		movs	r0, #1
 5965              	.LVL588:
1289:Core/Src/SEGGER_RTT.c ****   } else {
1290:Core/Src/SEGGER_RTT.c ****     Status = 0;
1291:Core/Src/SEGGER_RTT.c ****   }
1292:Core/Src/SEGGER_RTT.c ****   //
1293:Core/Src/SEGGER_RTT.c ****   return Status;
1294:Core/Src/SEGGER_RTT.c **** }
 5966              		.loc 1 1294 1 view .LVU2492
 5967 0032 F0BC     		pop	{r4, r5, r6, r7}
 5968              		.cfi_remember_state
 5969              		.cfi_restore 7
 5970              		.cfi_restore 6
 5971              		.cfi_restore 5
 5972              		.cfi_restore 4
 5973              		.cfi_def_cfa_offset 0
1287:Core/Src/SEGGER_RTT.c ****     Status = 1;
 5974              		.loc 1 1287 18 view .LVU2493
 5975 0034 5A62     		str	r2, [r3, #36]
1288:Core/Src/SEGGER_RTT.c ****     Status = 1;
 5976              		.loc 1 1288 5 is_stmt 1 view .LVU2494
 5977              	.LVL589:
 5978              		.loc 1 1294 1 is_stmt 0 view .LVU2495
 5979 0036 7047     		bx	lr
 5980              	.LVL590:
 5981              	.L248:
 5982              		.cfi_restore_state
1290:Core/Src/SEGGER_RTT.c ****   }
 5983              		.loc 1 1290 12 view .LVU2496
 5984 0038 0020     		movs	r0, #0
 5985              	.LVL591:
1293:Core/Src/SEGGER_RTT.c **** }
 5986              		.loc 1 1293 3 is_stmt 1 view .LVU2497
 5987              		.loc 1 1294 1 is_stmt 0 view .LVU2498
 5988 003a F0BC     		pop	{r4, r5, r6, r7}
 5989              		.cfi_restore 7
 5990              		.cfi_restore 6
 5991              		.cfi_restore 5
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccs0vIiH.s 			page 168


 5992              		.cfi_restore 4
 5993              		.cfi_def_cfa_offset 0
 5994 003c 7047     		bx	lr
 5995              	.L251:
 5996 003e 00BF     		.align	2
 5997              	.L250:
 5998 0040 00000000 		.word	.LANCHOR0
 5999              		.cfi_endproc
 6000              	.LFE15:
 6002              		.section	.text.SEGGER_RTT_PutCharSkip,"ax",%progbits
 6003              		.align	1
 6004              		.p2align 2,,3
 6005              		.global	SEGGER_RTT_PutCharSkip
 6006              		.syntax unified
 6007              		.thumb
 6008              		.thumb_func
 6010              	SEGGER_RTT_PutCharSkip:
 6011              	.LVL592:
 6012              	.LFB16:
1295:Core/Src/SEGGER_RTT.c **** 
1296:Core/Src/SEGGER_RTT.c **** /*********************************************************************
1297:Core/Src/SEGGER_RTT.c **** *
1298:Core/Src/SEGGER_RTT.c **** *       SEGGER_RTT_PutCharSkip
1299:Core/Src/SEGGER_RTT.c **** *
1300:Core/Src/SEGGER_RTT.c **** *  Function description
1301:Core/Src/SEGGER_RTT.c **** *    Stores a single character/byte in SEGGER RTT buffer.
1302:Core/Src/SEGGER_RTT.c **** *
1303:Core/Src/SEGGER_RTT.c **** *  Parameters
1304:Core/Src/SEGGER_RTT.c **** *    BufferIndex  Index of "Up"-buffer to be used (e.g. 0 for "Terminal").
1305:Core/Src/SEGGER_RTT.c **** *    c            Byte to be stored.
1306:Core/Src/SEGGER_RTT.c **** *
1307:Core/Src/SEGGER_RTT.c **** *  Return value
1308:Core/Src/SEGGER_RTT.c **** *    Number of bytes which have been stored in the "Up"-buffer.
1309:Core/Src/SEGGER_RTT.c **** *
1310:Core/Src/SEGGER_RTT.c **** *  Notes
1311:Core/Src/SEGGER_RTT.c **** *    (1) If there is not enough space in the "Up"-buffer, the character is dropped.
1312:Core/Src/SEGGER_RTT.c **** */
1313:Core/Src/SEGGER_RTT.c **** 
1314:Core/Src/SEGGER_RTT.c **** unsigned SEGGER_RTT_PutCharSkip(unsigned BufferIndex, char c) {
 6013              		.loc 1 1314 63 is_stmt 1 view -0
 6014              		.cfi_startproc
 6015              		@ args = 0, pretend = 0, frame = 0
 6016              		@ frame_needed = 0, uses_anonymous_args = 0
1315:Core/Src/SEGGER_RTT.c ****   SEGGER_RTT_BUFFER_UP* pRing;
 6017              		.loc 1 1315 3 view .LVU2500
1316:Core/Src/SEGGER_RTT.c ****   unsigned              WrOff;
 6018              		.loc 1 1316 3 view .LVU2501
1317:Core/Src/SEGGER_RTT.c ****   unsigned              Status;
 6019              		.loc 1 1317 3 view .LVU2502
1318:Core/Src/SEGGER_RTT.c ****   volatile char*        pDst;
 6020              		.loc 1 1318 3 view .LVU2503
 6021              	.LBB338:
1319:Core/Src/SEGGER_RTT.c ****   //
1320:Core/Src/SEGGER_RTT.c ****   // Prepare
1321:Core/Src/SEGGER_RTT.c ****   //
1322:Core/Src/SEGGER_RTT.c ****   INIT();
 6022              		.loc 1 1322 3 view .LVU2504
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccs0vIiH.s 			page 169


 6023              		.loc 1 1322 3 view .LVU2505
 6024              		.loc 1 1322 3 view .LVU2506
 6025              		.loc 1 1322 3 view .LVU2507
 6026              	.LBE338:
1314:Core/Src/SEGGER_RTT.c ****   SEGGER_RTT_BUFFER_UP* pRing;
 6027              		.loc 1 1314 63 is_stmt 0 view .LVU2508
 6028 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 6029              		.cfi_def_cfa_offset 24
 6030              		.cfi_offset 4, -24
 6031              		.cfi_offset 5, -20
 6032              		.cfi_offset 6, -16
 6033              		.cfi_offset 7, -12
 6034              		.cfi_offset 8, -8
 6035              		.cfi_offset 14, -4
 6036              	.LBB341:
 6037              		.loc 1 1322 3 view .LVU2509
 6038 0004 324C     		ldr	r4, .L259
 6039 0006 2378     		ldrb	r3, [r4]	@ zero_extendqisi2
 6040              	.LBE341:
1314:Core/Src/SEGGER_RTT.c ****   SEGGER_RTT_BUFFER_UP* pRing;
 6041              		.loc 1 1314 63 view .LVU2510
 6042 0008 0546     		mov	r5, r0
 6043 000a 8846     		mov	r8, r1
 6044              	.LBB342:
 6045              		.loc 1 1322 3 view .LVU2511
 6046 000c 3BB3     		cbz	r3, .L258
 6047              	.LVL593:
 6048              	.L253:
 6049              		.loc 1 1322 3 is_stmt 1 discriminator 3 view .LVU2512
 6050              	.LBE342:
 6051              		.loc 1 1322 9 discriminator 3 view .LVU2513
 6052              	.LBB343:
1323:Core/Src/SEGGER_RTT.c ****   SEGGER_RTT_LOCK();
 6053              		.loc 1 1323 3 discriminator 3 view .LVU2514
 6054              		.loc 1 1323 3 discriminator 3 view .LVU2515
 6055              		.syntax unified
 6056              	@ 1323 "Core/Src/SEGGER_RTT.c" 1
 6057 000e EFF31187 		mrs   r7, basepri  
 6058 0012 4FF02001 		mov   r1, #32       
 6059 0016 81F31188 		msr   basepri, r1  
 6060              		
 6061              	@ 0 "" 2
 6062              	.LVL594:
 6063              		.loc 1 1323 20 discriminator 3 view .LVU2516
1324:Core/Src/SEGGER_RTT.c ****   //
1325:Core/Src/SEGGER_RTT.c ****   // Get "to-host" ring buffer.
1326:Core/Src/SEGGER_RTT.c ****   //
1327:Core/Src/SEGGER_RTT.c ****   pRing = (SEGGER_RTT_BUFFER_UP*)((char*)&_SEGGER_RTT.aUp[BufferIndex] + SEGGER_RTT_UNCACHED_OFF); 
 6064              		.loc 1 1327 3 discriminator 3 view .LVU2517
1328:Core/Src/SEGGER_RTT.c ****   //
1329:Core/Src/SEGGER_RTT.c ****   // Get write position and handle wrap-around if necessary
1330:Core/Src/SEGGER_RTT.c ****   //
1331:Core/Src/SEGGER_RTT.c ****   WrOff = pRing->WrOff + 1;
 6065              		.loc 1 1331 3 discriminator 3 view .LVU2518
 6066              		.loc 1 1331 16 is_stmt 0 discriminator 3 view .LVU2519
 6067              		.thumb
 6068              		.syntax unified
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccs0vIiH.s 			page 170


 6069 001a 05EB4503 		add	r3, r5, r5, lsl #1
 6070 001e 04EBC303 		add	r3, r4, r3, lsl #3
 6071 0022 596A     		ldr	r1, [r3, #36]
1332:Core/Src/SEGGER_RTT.c ****   if (WrOff == pRing->SizeOfBuffer) {
1333:Core/Src/SEGGER_RTT.c ****     WrOff = 0;
 6072              		.loc 1 1333 11 discriminator 3 view .LVU2520
 6073 0024 1E6A     		ldr	r6, [r3, #32]
1334:Core/Src/SEGGER_RTT.c ****   }
1335:Core/Src/SEGGER_RTT.c ****   //
1336:Core/Src/SEGGER_RTT.c ****   // Output byte if free space is available
1337:Core/Src/SEGGER_RTT.c ****   //
1338:Core/Src/SEGGER_RTT.c ****   if (WrOff != pRing->RdOff) {
 6074              		.loc 1 1338 21 discriminator 3 view .LVU2521
 6075 0026 986A     		ldr	r0, [r3, #40]
1331:Core/Src/SEGGER_RTT.c ****   if (WrOff == pRing->SizeOfBuffer) {
 6076              		.loc 1 1331 9 discriminator 3 view .LVU2522
 6077 0028 4A1C     		adds	r2, r1, #1
 6078              	.LVL595:
1332:Core/Src/SEGGER_RTT.c ****   if (WrOff == pRing->SizeOfBuffer) {
 6079              		.loc 1 1332 3 is_stmt 1 discriminator 3 view .LVU2523
1333:Core/Src/SEGGER_RTT.c ****   }
 6080              		.loc 1 1333 11 is_stmt 0 discriminator 3 view .LVU2524
 6081 002a 9642     		cmp	r6, r2
 6082 002c 08BF     		it	eq
 6083 002e 0022     		moveq	r2, #0
 6084              	.LVL596:
 6085              		.loc 1 1338 3 is_stmt 1 discriminator 3 view .LVU2525
 6086              		.loc 1 1338 6 is_stmt 0 discriminator 3 view .LVU2526
 6087 0030 9042     		cmp	r0, r2
 6088 0032 0FD0     		beq	.L256
1339:Core/Src/SEGGER_RTT.c ****     pDst  = (pRing->pBuffer + pRing->WrOff) + SEGGER_RTT_UNCACHED_OFF;
 6089              		.loc 1 1339 5 is_stmt 1 view .LVU2527
 6090              		.loc 1 1339 19 is_stmt 0 view .LVU2528
 6091 0034 0135     		adds	r5, r5, #1
 6092              	.LVL597:
 6093              		.loc 1 1339 19 view .LVU2529
 6094 0036 05EB4505 		add	r5, r5, r5, lsl #1
 6095              	.LVL598:
 6096              		.loc 1 1339 19 view .LVU2530
 6097 003a 04EBC504 		add	r4, r4, r5, lsl #3
 6098              		.loc 1 1339 11 view .LVU2531
 6099 003e 6068     		ldr	r0, [r4, #4]
 6100              	.LVL599:
1340:Core/Src/SEGGER_RTT.c ****     *pDst = c;
 6101              		.loc 1 1340 5 is_stmt 1 view .LVU2532
 6102              		.loc 1 1340 11 is_stmt 0 view .LVU2533
 6103 0040 00F80180 		strb	r8, [r0, r1]
1341:Core/Src/SEGGER_RTT.c ****     RTT__DMB();                     // Force data write to be complete before writing the <WrOff>, 
 6104              		.loc 1 1341 5 is_stmt 1 view .LVU2534
 6105              		.syntax unified
 6106              	@ 1341 "Core/Src/SEGGER_RTT.c" 1
 6107 0044 BFF35F8F 		dmb
 6108              	
 6109              	@ 0 "" 2
 6110              		.loc 1 1341 15 view .LVU2535
1342:Core/Src/SEGGER_RTT.c ****     pRing->WrOff = WrOff;
 6111              		.loc 1 1342 5 view .LVU2536
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccs0vIiH.s 			page 171


1343:Core/Src/SEGGER_RTT.c ****     Status = 1;
 6112              		.loc 1 1343 12 is_stmt 0 view .LVU2537
 6113              		.thumb
 6114              		.syntax unified
 6115 0048 0120     		movs	r0, #1
 6116              	.LVL600:
1342:Core/Src/SEGGER_RTT.c ****     pRing->WrOff = WrOff;
 6117              		.loc 1 1342 18 view .LVU2538
 6118 004a 5A62     		str	r2, [r3, #36]
 6119              		.loc 1 1343 5 is_stmt 1 view .LVU2539
 6120              	.LVL601:
1344:Core/Src/SEGGER_RTT.c ****   } else {
1345:Core/Src/SEGGER_RTT.c ****     Status = 0;
1346:Core/Src/SEGGER_RTT.c ****   }
1347:Core/Src/SEGGER_RTT.c ****   //
1348:Core/Src/SEGGER_RTT.c ****   // Finish up.
1349:Core/Src/SEGGER_RTT.c ****   //
1350:Core/Src/SEGGER_RTT.c ****   SEGGER_RTT_UNLOCK();
 6121              		.loc 1 1350 3 view .LVU2540
 6122              		.syntax unified
 6123              	@ 1350 "Core/Src/SEGGER_RTT.c" 1
 6124 004c 87F31188 		msr   basepri, r7  
 6125              		
 6126              	@ 0 "" 2
 6127              		.thumb
 6128              		.syntax unified
 6129              	.LBE343:
 6130              		.loc 1 1350 22 view .LVU2541
1351:Core/Src/SEGGER_RTT.c ****   //
1352:Core/Src/SEGGER_RTT.c ****   return Status;
 6131              		.loc 1 1352 3 view .LVU2542
1353:Core/Src/SEGGER_RTT.c **** }
 6132              		.loc 1 1353 1 is_stmt 0 view .LVU2543
 6133 0050 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 6134              	.LVL602:
 6135              	.L256:
 6136              	.LBB344:
1345:Core/Src/SEGGER_RTT.c ****   }
 6137              		.loc 1 1345 12 view .LVU2544
 6138 0054 0020     		movs	r0, #0
 6139              	.LVL603:
1350:Core/Src/SEGGER_RTT.c ****   //
 6140              		.loc 1 1350 3 is_stmt 1 view .LVU2545
 6141              		.syntax unified
 6142              	@ 1350 "Core/Src/SEGGER_RTT.c" 1
 6143 0056 87F31188 		msr   basepri, r7  
 6144              		
 6145              	@ 0 "" 2
 6146              		.thumb
 6147              		.syntax unified
 6148              	.LBE344:
1350:Core/Src/SEGGER_RTT.c ****   //
 6149              		.loc 1 1350 22 view .LVU2546
1352:Core/Src/SEGGER_RTT.c **** }
 6150              		.loc 1 1352 3 view .LVU2547
 6151              		.loc 1 1353 1 is_stmt 0 view .LVU2548
 6152 005a BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccs0vIiH.s 			page 172


 6153              	.LVL604:
 6154              	.L258:
 6155              		.loc 1 1353 1 view .LVU2549
 6156 005e 03F0FF07 		and	r7, r3, #255
 6157              	.LBB345:
1322:Core/Src/SEGGER_RTT.c ****   SEGGER_RTT_LOCK();
 6158              		.loc 1 1322 3 is_stmt 1 view .LVU2550
 6159              	.LBB339:
 6160              	.LBI339:
 314:Core/Src/SEGGER_RTT.c ****   volatile SEGGER_RTT_CB* p;   // Volatile to make sure that compiler cannot change the order of ac
 6161              		.loc 1 314 13 view .LVU2551
 6162              	.LBB340:
 315:Core/Src/SEGGER_RTT.c ****   static const char _aInitStr[] = "\0\0\0\0\0\0TTR REGGES";  // Init complete ID string to make sur
 6163              		.loc 1 315 3 view .LVU2552
 316:Core/Src/SEGGER_RTT.c ****   unsigned i;
 6164              		.loc 1 316 3 view .LVU2553
 317:Core/Src/SEGGER_RTT.c ****   //
 6165              		.loc 1 317 3 view .LVU2554
 321:Core/Src/SEGGER_RTT.c ****   memset((SEGGER_RTT_CB*)p, 0, sizeof(_SEGGER_RTT));         // Make sure that the RTT CB is always
 6166              		.loc 1 321 3 view .LVU2555
 6167              	.LVL605:
 322:Core/Src/SEGGER_RTT.c ****   p->MaxNumUpBuffers    = SEGGER_RTT_MAX_NUM_UP_BUFFERS;
 6168              		.loc 1 322 3 view .LVU2556
 6169 0062 3946     		mov	r1, r7
 6170              	.LVL606:
 322:Core/Src/SEGGER_RTT.c ****   p->MaxNumUpBuffers    = SEGGER_RTT_MAX_NUM_UP_BUFFERS;
 6171              		.loc 1 322 3 is_stmt 0 view .LVU2557
 6172 0064 7822     		movs	r2, #120
 6173 0066 04F13000 		add	r0, r4, #48
 6174              	.LVL607:
 322:Core/Src/SEGGER_RTT.c ****   p->MaxNumUpBuffers    = SEGGER_RTT_MAX_NUM_UP_BUFFERS;
 6175              		.loc 1 322 3 view .LVU2558
 6176 006a FFF7FEFF 		bl	memset
 6177              	.LVL608:
 323:Core/Src/SEGGER_RTT.c ****   p->MaxNumDownBuffers  = SEGGER_RTT_MAX_NUM_DOWN_BUFFERS;
 6178              		.loc 1 323 3 is_stmt 1 view .LVU2559
 323:Core/Src/SEGGER_RTT.c ****   p->MaxNumDownBuffers  = SEGGER_RTT_MAX_NUM_DOWN_BUFFERS;
 6179              		.loc 1 323 25 is_stmt 0 view .LVU2560
 6180 006e 0323     		movs	r3, #3
 6181 0070 2361     		str	r3, [r4, #16]
 324:Core/Src/SEGGER_RTT.c ****   //
 6182              		.loc 1 324 3 is_stmt 1 view .LVU2561
 329:Core/Src/SEGGER_RTT.c ****   p->aUp[0].SizeOfBuffer  = BUFFER_SIZE_UP;
 6183              		.loc 1 329 27 is_stmt 0 view .LVU2562
 6184 0072 184A     		ldr	r2, .L259+4
 324:Core/Src/SEGGER_RTT.c ****   //
 6185              		.loc 1 324 25 view .LVU2563
 6186 0074 6361     		str	r3, [r4, #20]
 328:Core/Src/SEGGER_RTT.c ****   p->aUp[0].pBuffer       = _acUpBuffer;
 6187              		.loc 1 328 3 is_stmt 1 view .LVU2564
 330:Core/Src/SEGGER_RTT.c ****   p->aUp[0].RdOff         = 0u;
 6188              		.loc 1 330 27 is_stmt 0 view .LVU2565
 6189 0076 4FF48061 		mov	r1, #1024
 328:Core/Src/SEGGER_RTT.c ****   p->aUp[0].pBuffer       = _acUpBuffer;
 6190              		.loc 1 328 27 view .LVU2566
 6191 007a 174B     		ldr	r3, .L259+8
 6192 007c A361     		str	r3, [r4, #24]
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccs0vIiH.s 			page 173


 329:Core/Src/SEGGER_RTT.c ****   p->aUp[0].SizeOfBuffer  = BUFFER_SIZE_UP;
 6193              		.loc 1 329 3 is_stmt 1 view .LVU2567
 329:Core/Src/SEGGER_RTT.c ****   p->aUp[0].SizeOfBuffer  = BUFFER_SIZE_UP;
 6194              		.loc 1 329 27 is_stmt 0 view .LVU2568
 6195 007e E261     		str	r2, [r4, #28]
 330:Core/Src/SEGGER_RTT.c ****   p->aUp[0].RdOff         = 0u;
 6196              		.loc 1 330 3 is_stmt 1 view .LVU2569
 330:Core/Src/SEGGER_RTT.c ****   p->aUp[0].RdOff         = 0u;
 6197              		.loc 1 330 27 is_stmt 0 view .LVU2570
 6198 0080 2162     		str	r1, [r4, #32]
 331:Core/Src/SEGGER_RTT.c ****   p->aUp[0].WrOff         = 0u;
 6199              		.loc 1 331 3 is_stmt 1 view .LVU2571
 338:Core/Src/SEGGER_RTT.c ****   p->aDown[0].SizeOfBuffer  = BUFFER_SIZE_DOWN;
 6200              		.loc 1 338 29 is_stmt 0 view .LVU2572
 6201 0082 164A     		ldr	r2, .L259+12
 331:Core/Src/SEGGER_RTT.c ****   p->aUp[0].WrOff         = 0u;
 6202              		.loc 1 331 27 view .LVU2573
 6203 0084 A762     		str	r7, [r4, #40]
 332:Core/Src/SEGGER_RTT.c ****   p->aUp[0].Flags         = SEGGER_RTT_MODE_DEFAULT;
 6204              		.loc 1 332 3 is_stmt 1 view .LVU2574
 332:Core/Src/SEGGER_RTT.c ****   p->aUp[0].Flags         = SEGGER_RTT_MODE_DEFAULT;
 6205              		.loc 1 332 27 is_stmt 0 view .LVU2575
 6206 0086 6762     		str	r7, [r4, #36]
 333:Core/Src/SEGGER_RTT.c ****   //
 6207              		.loc 1 333 3 is_stmt 1 view .LVU2576
 333:Core/Src/SEGGER_RTT.c ****   //
 6208              		.loc 1 333 27 is_stmt 0 view .LVU2577
 6209 0088 E762     		str	r7, [r4, #44]
 337:Core/Src/SEGGER_RTT.c ****   p->aDown[0].pBuffer       = _acDownBuffer;
 6210              		.loc 1 337 3 is_stmt 1 view .LVU2578
 337:Core/Src/SEGGER_RTT.c ****   p->aDown[0].pBuffer       = _acDownBuffer;
 6211              		.loc 1 337 29 is_stmt 0 view .LVU2579
 6212 008a 2366     		str	r3, [r4, #96]
 338:Core/Src/SEGGER_RTT.c ****   p->aDown[0].SizeOfBuffer  = BUFFER_SIZE_DOWN;
 6213              		.loc 1 338 3 is_stmt 1 view .LVU2580
 339:Core/Src/SEGGER_RTT.c ****   p->aDown[0].RdOff         = 0u;
 6214              		.loc 1 339 29 is_stmt 0 view .LVU2581
 6215 008c 1023     		movs	r3, #16
 338:Core/Src/SEGGER_RTT.c ****   p->aDown[0].SizeOfBuffer  = BUFFER_SIZE_DOWN;
 6216              		.loc 1 338 29 view .LVU2582
 6217 008e 6266     		str	r2, [r4, #100]
 339:Core/Src/SEGGER_RTT.c ****   p->aDown[0].RdOff         = 0u;
 6218              		.loc 1 339 3 is_stmt 1 view .LVU2583
 339:Core/Src/SEGGER_RTT.c ****   p->aDown[0].RdOff         = 0u;
 6219              		.loc 1 339 29 is_stmt 0 view .LVU2584
 6220 0090 A366     		str	r3, [r4, #104]
 340:Core/Src/SEGGER_RTT.c ****   p->aDown[0].WrOff         = 0u;
 6221              		.loc 1 340 3 is_stmt 1 view .LVU2585
 340:Core/Src/SEGGER_RTT.c ****   p->aDown[0].WrOff         = 0u;
 6222              		.loc 1 340 29 is_stmt 0 view .LVU2586
 6223 0092 2767     		str	r7, [r4, #112]
 341:Core/Src/SEGGER_RTT.c ****   p->aDown[0].Flags         = SEGGER_RTT_MODE_DEFAULT;
 6224              		.loc 1 341 3 is_stmt 1 view .LVU2587
 341:Core/Src/SEGGER_RTT.c ****   p->aDown[0].Flags         = SEGGER_RTT_MODE_DEFAULT;
 6225              		.loc 1 341 29 is_stmt 0 view .LVU2588
 6226 0094 E766     		str	r7, [r4, #108]
 342:Core/Src/SEGGER_RTT.c ****   //
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccs0vIiH.s 			page 174


 6227              		.loc 1 342 3 is_stmt 1 view .LVU2589
 342:Core/Src/SEGGER_RTT.c ****   //
 6228              		.loc 1 342 29 is_stmt 0 view .LVU2590
 6229 0096 6767     		str	r7, [r4, #116]
 348:Core/Src/SEGGER_RTT.c ****   for (i = 0; i < sizeof(_aInitStr) - 1; ++i) {
 6230              		.loc 1 348 3 is_stmt 1 view .LVU2591
 6231              		.syntax unified
 6232              	@ 348 "Core/Src/SEGGER_RTT.c" 1
 6233 0098 BFF35F8F 		dmb
 6234              	
 6235              	@ 0 "" 2
 348:Core/Src/SEGGER_RTT.c ****   for (i = 0; i < sizeof(_aInitStr) - 1; ++i) {
 6236              		.loc 1 348 13 view .LVU2592
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 6237              		.loc 1 349 3 view .LVU2593
 6238              	.LVL609:
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 6239              		.loc 1 349 17 view .LVU2594
 350:Core/Src/SEGGER_RTT.c ****   }
 6240              		.loc 1 350 5 view .LVU2595
 350:Core/Src/SEGGER_RTT.c ****   }
 6241              		.loc 1 350 16 is_stmt 0 view .LVU2596
 6242              		.thumb
 6243              		.syntax unified
 6244 009c 5323     		movs	r3, #83
 6245 009e 2370     		strb	r3, [r4]
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 6246              		.loc 1 349 42 is_stmt 1 view .LVU2597
 6247              	.LVL610:
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 6248              		.loc 1 349 17 view .LVU2598
 350:Core/Src/SEGGER_RTT.c ****   }
 6249              		.loc 1 350 5 view .LVU2599
 350:Core/Src/SEGGER_RTT.c ****   }
 6250              		.loc 1 350 16 is_stmt 0 view .LVU2600
 6251 00a0 4722     		movs	r2, #71
 6252 00a2 4523     		movs	r3, #69
 6253 00a4 6370     		strb	r3, [r4, #1]
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 6254              		.loc 1 349 42 is_stmt 1 view .LVU2601
 6255              	.LVL611:
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 6256              		.loc 1 349 17 view .LVU2602
 350:Core/Src/SEGGER_RTT.c ****   }
 6257              		.loc 1 350 5 view .LVU2603
 350:Core/Src/SEGGER_RTT.c ****   }
 6258              		.loc 1 350 16 is_stmt 0 view .LVU2604
 6259 00a6 2021     		movs	r1, #32
 6260 00a8 A270     		strb	r2, [r4, #2]
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 6261              		.loc 1 349 42 is_stmt 1 view .LVU2605
 6262              	.LVL612:
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 6263              		.loc 1 349 17 view .LVU2606
 350:Core/Src/SEGGER_RTT.c ****   }
 6264              		.loc 1 350 5 view .LVU2607
 350:Core/Src/SEGGER_RTT.c ****   }
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccs0vIiH.s 			page 175


 6265              		.loc 1 350 16 is_stmt 0 view .LVU2608
 6266 00aa E270     		strb	r2, [r4, #3]
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 6267              		.loc 1 349 42 is_stmt 1 view .LVU2609
 6268              	.LVL613:
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 6269              		.loc 1 349 17 view .LVU2610
 350:Core/Src/SEGGER_RTT.c ****   }
 6270              		.loc 1 350 5 view .LVU2611
 350:Core/Src/SEGGER_RTT.c ****   }
 6271              		.loc 1 350 16 is_stmt 0 view .LVU2612
 6272 00ac 2371     		strb	r3, [r4, #4]
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 6273              		.loc 1 349 42 is_stmt 1 view .LVU2613
 6274              	.LVL614:
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 6275              		.loc 1 349 17 view .LVU2614
 350:Core/Src/SEGGER_RTT.c ****   }
 6276              		.loc 1 350 5 view .LVU2615
 350:Core/Src/SEGGER_RTT.c ****   }
 6277              		.loc 1 350 16 is_stmt 0 view .LVU2616
 6278 00ae 5222     		movs	r2, #82
 6279 00b0 5423     		movs	r3, #84
 6280 00b2 6271     		strb	r2, [r4, #5]
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 6281              		.loc 1 349 42 is_stmt 1 view .LVU2617
 6282              	.LVL615:
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 6283              		.loc 1 349 17 view .LVU2618
 350:Core/Src/SEGGER_RTT.c ****   }
 6284              		.loc 1 350 5 view .LVU2619
 350:Core/Src/SEGGER_RTT.c ****   }
 6285              		.loc 1 350 16 is_stmt 0 view .LVU2620
 6286 00b4 A171     		strb	r1, [r4, #6]
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 6287              		.loc 1 349 42 is_stmt 1 view .LVU2621
 6288              	.LVL616:
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 6289              		.loc 1 349 17 view .LVU2622
 350:Core/Src/SEGGER_RTT.c ****   }
 6290              		.loc 1 350 5 view .LVU2623
 350:Core/Src/SEGGER_RTT.c ****   }
 6291              		.loc 1 350 16 is_stmt 0 view .LVU2624
 6292 00b6 E271     		strb	r2, [r4, #7]
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 6293              		.loc 1 349 42 is_stmt 1 view .LVU2625
 6294              	.LVL617:
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 6295              		.loc 1 349 17 view .LVU2626
 350:Core/Src/SEGGER_RTT.c ****   }
 6296              		.loc 1 350 5 view .LVU2627
 350:Core/Src/SEGGER_RTT.c ****   }
 6297              		.loc 1 350 16 is_stmt 0 view .LVU2628
 6298 00b8 2372     		strb	r3, [r4, #8]
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 6299              		.loc 1 349 42 is_stmt 1 view .LVU2629
 6300              	.LVL618:
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccs0vIiH.s 			page 176


 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 6301              		.loc 1 349 17 view .LVU2630
 350:Core/Src/SEGGER_RTT.c ****   }
 6302              		.loc 1 350 5 view .LVU2631
 350:Core/Src/SEGGER_RTT.c ****   }
 6303              		.loc 1 350 16 is_stmt 0 view .LVU2632
 6304 00ba 6372     		strb	r3, [r4, #9]
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 6305              		.loc 1 349 42 is_stmt 1 view .LVU2633
 6306              	.LVL619:
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 6307              		.loc 1 349 17 view .LVU2634
 350:Core/Src/SEGGER_RTT.c ****   }
 6308              		.loc 1 350 5 view .LVU2635
 350:Core/Src/SEGGER_RTT.c ****   }
 6309              		.loc 1 350 16 is_stmt 0 view .LVU2636
 6310 00bc A772     		strb	r7, [r4, #10]
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 6311              		.loc 1 349 42 is_stmt 1 view .LVU2637
 6312              	.LVL620:
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 6313              		.loc 1 349 17 view .LVU2638
 350:Core/Src/SEGGER_RTT.c ****   }
 6314              		.loc 1 350 5 view .LVU2639
 350:Core/Src/SEGGER_RTT.c ****   }
 6315              		.loc 1 350 16 is_stmt 0 view .LVU2640
 6316 00be E772     		strb	r7, [r4, #11]
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 6317              		.loc 1 349 42 is_stmt 1 view .LVU2641
 6318              	.LVL621:
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 6319              		.loc 1 349 17 view .LVU2642
 350:Core/Src/SEGGER_RTT.c ****   }
 6320              		.loc 1 350 5 view .LVU2643
 350:Core/Src/SEGGER_RTT.c ****   }
 6321              		.loc 1 350 16 is_stmt 0 view .LVU2644
 6322 00c0 2773     		strb	r7, [r4, #12]
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 6323              		.loc 1 349 42 is_stmt 1 view .LVU2645
 6324              	.LVL622:
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 6325              		.loc 1 349 17 view .LVU2646
 350:Core/Src/SEGGER_RTT.c ****   }
 6326              		.loc 1 350 5 view .LVU2647
 350:Core/Src/SEGGER_RTT.c ****   }
 6327              		.loc 1 350 16 is_stmt 0 view .LVU2648
 6328 00c2 6773     		strb	r7, [r4, #13]
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 6329              		.loc 1 349 42 is_stmt 1 view .LVU2649
 6330              	.LVL623:
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 6331              		.loc 1 349 17 view .LVU2650
 350:Core/Src/SEGGER_RTT.c ****   }
 6332              		.loc 1 350 5 view .LVU2651
 350:Core/Src/SEGGER_RTT.c ****   }
 6333              		.loc 1 350 16 is_stmt 0 view .LVU2652
 6334 00c4 A773     		strb	r7, [r4, #14]
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccs0vIiH.s 			page 177


 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 6335              		.loc 1 349 42 is_stmt 1 view .LVU2653
 6336              	.LVL624:
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 6337              		.loc 1 349 17 view .LVU2654
 350:Core/Src/SEGGER_RTT.c ****   }
 6338              		.loc 1 350 5 view .LVU2655
 350:Core/Src/SEGGER_RTT.c ****   }
 6339              		.loc 1 350 16 is_stmt 0 view .LVU2656
 6340 00c6 E773     		strb	r7, [r4, #15]
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 6341              		.loc 1 349 42 is_stmt 1 view .LVU2657
 6342              	.LVL625:
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 6343              		.loc 1 349 17 view .LVU2658
 352:Core/Src/SEGGER_RTT.c **** }
 6344              		.loc 1 352 3 view .LVU2659
 6345              		.syntax unified
 6346              	@ 352 "Core/Src/SEGGER_RTT.c" 1
 6347 00c8 BFF35F8F 		dmb
 6348              	
 6349              	@ 0 "" 2
 352:Core/Src/SEGGER_RTT.c **** }
 6350              		.loc 1 352 13 view .LVU2660
 353:Core/Src/SEGGER_RTT.c **** 
 6351              		.loc 1 353 1 is_stmt 0 view .LVU2661
 6352              		.thumb
 6353              		.syntax unified
 6354 00cc 9FE7     		b	.L253
 6355              	.L260:
 6356 00ce 00BF     		.align	2
 6357              	.L259:
 6358 00d0 00000000 		.word	.LANCHOR0
 6359 00d4 00000000 		.word	.LANCHOR1
 6360 00d8 00000000 		.word	.LC0
 6361 00dc 00000000 		.word	.LANCHOR2
 6362              	.LBE340:
 6363              	.LBE339:
 6364              	.LBE345:
 6365              		.cfi_endproc
 6366              	.LFE16:
 6368              		.section	.text.SEGGER_RTT_PutChar,"ax",%progbits
 6369              		.align	1
 6370              		.p2align 2,,3
 6371              		.global	SEGGER_RTT_PutChar
 6372              		.syntax unified
 6373              		.thumb
 6374              		.thumb_func
 6376              	SEGGER_RTT_PutChar:
 6377              	.LVL626:
 6378              	.LFB17:
1354:Core/Src/SEGGER_RTT.c **** 
1355:Core/Src/SEGGER_RTT.c ****  /*********************************************************************
1356:Core/Src/SEGGER_RTT.c **** *
1357:Core/Src/SEGGER_RTT.c **** *       SEGGER_RTT_PutChar
1358:Core/Src/SEGGER_RTT.c **** *
1359:Core/Src/SEGGER_RTT.c **** *  Function description
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccs0vIiH.s 			page 178


1360:Core/Src/SEGGER_RTT.c **** *    Stores a single character/byte in SEGGER RTT buffer.
1361:Core/Src/SEGGER_RTT.c **** *
1362:Core/Src/SEGGER_RTT.c **** *  Parameters
1363:Core/Src/SEGGER_RTT.c **** *    BufferIndex  Index of "Up"-buffer to be used (e.g. 0 for "Terminal").
1364:Core/Src/SEGGER_RTT.c **** *    c            Byte to be stored.
1365:Core/Src/SEGGER_RTT.c **** *
1366:Core/Src/SEGGER_RTT.c **** *  Return value
1367:Core/Src/SEGGER_RTT.c **** *    Number of bytes which have been stored in the "Up"-buffer.
1368:Core/Src/SEGGER_RTT.c **** *
1369:Core/Src/SEGGER_RTT.c **** *  Notes
1370:Core/Src/SEGGER_RTT.c **** *    (1) Data is stored according to buffer flags.
1371:Core/Src/SEGGER_RTT.c **** */
1372:Core/Src/SEGGER_RTT.c **** 
1373:Core/Src/SEGGER_RTT.c **** unsigned SEGGER_RTT_PutChar(unsigned BufferIndex, char c) {
 6379              		.loc 1 1373 59 is_stmt 1 view -0
 6380              		.cfi_startproc
 6381              		@ args = 0, pretend = 0, frame = 0
 6382              		@ frame_needed = 0, uses_anonymous_args = 0
1374:Core/Src/SEGGER_RTT.c ****   SEGGER_RTT_BUFFER_UP* pRing;
 6383              		.loc 1 1374 3 view .LVU2663
1375:Core/Src/SEGGER_RTT.c ****   unsigned              WrOff;
 6384              		.loc 1 1375 3 view .LVU2664
1376:Core/Src/SEGGER_RTT.c ****   unsigned              Status;
 6385              		.loc 1 1376 3 view .LVU2665
1377:Core/Src/SEGGER_RTT.c ****   volatile char*        pDst;
 6386              		.loc 1 1377 3 view .LVU2666
 6387              	.LBB350:
1378:Core/Src/SEGGER_RTT.c ****   //
1379:Core/Src/SEGGER_RTT.c ****   // Prepare
1380:Core/Src/SEGGER_RTT.c ****   //
1381:Core/Src/SEGGER_RTT.c ****   INIT();
 6388              		.loc 1 1381 3 view .LVU2667
 6389              		.loc 1 1381 3 view .LVU2668
 6390              		.loc 1 1381 3 view .LVU2669
 6391              		.loc 1 1381 3 view .LVU2670
 6392              	.LBE350:
1373:Core/Src/SEGGER_RTT.c ****   SEGGER_RTT_BUFFER_UP* pRing;
 6393              		.loc 1 1373 59 is_stmt 0 view .LVU2671
 6394 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 6395              		.cfi_def_cfa_offset 24
 6396              		.cfi_offset 3, -24
 6397              		.cfi_offset 4, -20
 6398              		.cfi_offset 5, -16
 6399              		.cfi_offset 6, -12
 6400              		.cfi_offset 7, -8
 6401              		.cfi_offset 14, -4
 6402              	.LBB353:
 6403              		.loc 1 1381 3 view .LVU2672
 6404 0002 394C     		ldr	r4, .L272
 6405 0004 2378     		ldrb	r3, [r4]	@ zero_extendqisi2
 6406              	.LBE353:
1373:Core/Src/SEGGER_RTT.c ****   SEGGER_RTT_BUFFER_UP* pRing;
 6407              		.loc 1 1373 59 view .LVU2673
 6408 0006 0546     		mov	r5, r0
 6409 0008 0E46     		mov	r6, r1
 6410              	.LBB354:
 6411              		.loc 1 1381 3 view .LVU2674
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccs0vIiH.s 			page 179


 6412 000a 002B     		cmp	r3, #0
 6413 000c 34D0     		beq	.L271
 6414              	.LVL627:
 6415              	.L262:
 6416              		.loc 1 1381 3 is_stmt 1 discriminator 3 view .LVU2675
 6417              	.LBE354:
 6418              		.loc 1 1381 9 discriminator 3 view .LVU2676
 6419              	.LBB355:
1382:Core/Src/SEGGER_RTT.c ****   SEGGER_RTT_LOCK();
 6420              		.loc 1 1382 3 discriminator 3 view .LVU2677
 6421              		.loc 1 1382 3 discriminator 3 view .LVU2678
 6422              		.syntax unified
 6423              	@ 1382 "Core/Src/SEGGER_RTT.c" 1
 6424 000e EFF3118C 		mrs   ip, basepri  
 6425 0012 4FF02001 		mov   r1, #32       
 6426 0016 81F31188 		msr   basepri, r1  
 6427              		
 6428              	@ 0 "" 2
 6429              	.LVL628:
 6430              		.loc 1 1382 20 discriminator 3 view .LVU2679
1383:Core/Src/SEGGER_RTT.c ****   //
1384:Core/Src/SEGGER_RTT.c ****   // Get "to-host" ring buffer.
1385:Core/Src/SEGGER_RTT.c ****   //
1386:Core/Src/SEGGER_RTT.c ****   pRing = (SEGGER_RTT_BUFFER_UP*)((char*)&_SEGGER_RTT.aUp[BufferIndex] + SEGGER_RTT_UNCACHED_OFF); 
 6431              		.loc 1 1386 3 discriminator 3 view .LVU2680
1387:Core/Src/SEGGER_RTT.c ****   //
1388:Core/Src/SEGGER_RTT.c ****   // Get write position and handle wrap-around if necessary
1389:Core/Src/SEGGER_RTT.c ****   //
1390:Core/Src/SEGGER_RTT.c ****   WrOff = pRing->WrOff + 1;
 6432              		.loc 1 1390 3 discriminator 3 view .LVU2681
 6433              		.loc 1 1390 16 is_stmt 0 discriminator 3 view .LVU2682
 6434              		.thumb
 6435              		.syntax unified
 6436 001a 05EB4503 		add	r3, r5, r5, lsl #1
 6437 001e 04EBC303 		add	r3, r4, r3, lsl #3
1391:Core/Src/SEGGER_RTT.c ****   if (WrOff == pRing->SizeOfBuffer) {
 6438              		.loc 1 1391 6 discriminator 3 view .LVU2683
 6439 0022 D3E90807 		ldrd	r0, r7, [r3, #32]
1392:Core/Src/SEGGER_RTT.c ****     WrOff = 0;
1393:Core/Src/SEGGER_RTT.c ****   }
1394:Core/Src/SEGGER_RTT.c ****   //
1395:Core/Src/SEGGER_RTT.c ****   // Wait for free space if mode is set to blocking
1396:Core/Src/SEGGER_RTT.c ****   //
1397:Core/Src/SEGGER_RTT.c ****   if (pRing->Flags == SEGGER_RTT_MODE_BLOCK_IF_FIFO_FULL) {
 6440              		.loc 1 1397 6 discriminator 3 view .LVU2684
 6441 0026 D96A     		ldr	r1, [r3, #44]
1390:Core/Src/SEGGER_RTT.c ****   if (WrOff == pRing->SizeOfBuffer) {
 6442              		.loc 1 1390 9 discriminator 3 view .LVU2685
 6443 0028 7A1C     		adds	r2, r7, #1
 6444              	.LVL629:
1391:Core/Src/SEGGER_RTT.c ****   if (WrOff == pRing->SizeOfBuffer) {
 6445              		.loc 1 1391 3 is_stmt 1 discriminator 3 view .LVU2686
1392:Core/Src/SEGGER_RTT.c ****     WrOff = 0;
 6446              		.loc 1 1392 11 is_stmt 0 discriminator 3 view .LVU2687
 6447 002a 9042     		cmp	r0, r2
 6448 002c 08BF     		it	eq
 6449 002e 0022     		moveq	r2, #0
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccs0vIiH.s 			page 180


 6450              	.LVL630:
 6451              		.loc 1 1397 3 is_stmt 1 discriminator 3 view .LVU2688
 6452              		.loc 1 1397 6 is_stmt 0 discriminator 3 view .LVU2689
 6453 0030 0229     		cmp	r1, #2
1390:Core/Src/SEGGER_RTT.c ****   if (WrOff == pRing->SizeOfBuffer) {
 6454              		.loc 1 1390 16 discriminator 3 view .LVU2690
 6455 0032 4FEA450E 		lsl	lr, r5, #1
 6456              		.loc 1 1397 6 discriminator 3 view .LVU2691
 6457 0036 14D0     		beq	.L265
 6458              	.L264:
1398:Core/Src/SEGGER_RTT.c ****     while (WrOff == pRing->RdOff) {
1399:Core/Src/SEGGER_RTT.c ****       ;
1400:Core/Src/SEGGER_RTT.c ****     }
1401:Core/Src/SEGGER_RTT.c ****   }
1402:Core/Src/SEGGER_RTT.c ****   //
1403:Core/Src/SEGGER_RTT.c ****   // Output byte if free space is available
1404:Core/Src/SEGGER_RTT.c ****   //
1405:Core/Src/SEGGER_RTT.c ****   if (WrOff != pRing->RdOff) {
 6459              		.loc 1 1405 3 is_stmt 1 view .LVU2692
 6460              		.loc 1 1405 21 is_stmt 0 view .LVU2693
 6461 0038 0EEB0503 		add	r3, lr, r5
 6462 003c 04EBC303 		add	r3, r4, r3, lsl #3
 6463 0040 996A     		ldr	r1, [r3, #40]
 6464              		.loc 1 1405 6 view .LVU2694
 6465 0042 9142     		cmp	r1, r2
 6466 0044 14D0     		beq	.L267
1406:Core/Src/SEGGER_RTT.c ****     pDst  = (pRing->pBuffer + pRing->WrOff) + SEGGER_RTT_UNCACHED_OFF;
 6467              		.loc 1 1406 5 is_stmt 1 view .LVU2695
 6468              		.loc 1 1406 19 is_stmt 0 view .LVU2696
 6469 0046 0135     		adds	r5, r5, #1
 6470              	.LVL631:
 6471              		.loc 1 1406 19 view .LVU2697
 6472 0048 05EB4505 		add	r5, r5, r5, lsl #1
 6473              	.LVL632:
 6474              		.loc 1 1406 19 view .LVU2698
 6475 004c 04EBC504 		add	r4, r4, r5, lsl #3
 6476              		.loc 1 1406 11 view .LVU2699
 6477 0050 6168     		ldr	r1, [r4, #4]
 6478              	.LVL633:
1407:Core/Src/SEGGER_RTT.c ****     *pDst = c;
 6479              		.loc 1 1407 5 is_stmt 1 view .LVU2700
 6480              		.loc 1 1407 11 is_stmt 0 view .LVU2701
 6481 0052 CE55     		strb	r6, [r1, r7]
1408:Core/Src/SEGGER_RTT.c ****     RTT__DMB();                     // Force data write to be complete before writing the <WrOff>, 
 6482              		.loc 1 1408 5 is_stmt 1 view .LVU2702
 6483              		.syntax unified
 6484              	@ 1408 "Core/Src/SEGGER_RTT.c" 1
 6485 0054 BFF35F8F 		dmb
 6486              	
 6487              	@ 0 "" 2
 6488              		.loc 1 1408 15 view .LVU2703
1409:Core/Src/SEGGER_RTT.c ****     pRing->WrOff = WrOff;
 6489              		.loc 1 1409 5 view .LVU2704
1410:Core/Src/SEGGER_RTT.c ****     Status = 1;
 6490              		.loc 1 1410 12 is_stmt 0 view .LVU2705
 6491              		.thumb
 6492              		.syntax unified
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccs0vIiH.s 			page 181


 6493 0058 0120     		movs	r0, #1
1409:Core/Src/SEGGER_RTT.c ****     pRing->WrOff = WrOff;
 6494              		.loc 1 1409 18 view .LVU2706
 6495 005a 5A62     		str	r2, [r3, #36]
 6496              		.loc 1 1410 5 is_stmt 1 view .LVU2707
 6497              	.LVL634:
1411:Core/Src/SEGGER_RTT.c ****   } else {
1412:Core/Src/SEGGER_RTT.c ****     Status = 0;
1413:Core/Src/SEGGER_RTT.c ****   }
1414:Core/Src/SEGGER_RTT.c ****   //
1415:Core/Src/SEGGER_RTT.c ****   // Finish up.
1416:Core/Src/SEGGER_RTT.c ****   //
1417:Core/Src/SEGGER_RTT.c ****   SEGGER_RTT_UNLOCK();
 6498              		.loc 1 1417 3 view .LVU2708
 6499              		.syntax unified
 6500              	@ 1417 "Core/Src/SEGGER_RTT.c" 1
 6501 005c 8CF31188 		msr   basepri, ip  
 6502              		
 6503              	@ 0 "" 2
 6504              		.thumb
 6505              		.syntax unified
 6506              	.LBE355:
 6507              		.loc 1 1417 22 view .LVU2709
1418:Core/Src/SEGGER_RTT.c ****   return Status;
 6508              		.loc 1 1418 3 view .LVU2710
1419:Core/Src/SEGGER_RTT.c **** }
 6509              		.loc 1 1419 1 is_stmt 0 view .LVU2711
 6510 0060 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 6511              	.LVL635:
 6512              	.L265:
 6513              	.LBB356:
1399:Core/Src/SEGGER_RTT.c ****     }
 6514              		.loc 1 1399 7 is_stmt 1 discriminator 1 view .LVU2712
1398:Core/Src/SEGGER_RTT.c ****       ;
 6515              		.loc 1 1398 18 discriminator 1 view .LVU2713
1398:Core/Src/SEGGER_RTT.c ****       ;
 6516              		.loc 1 1398 26 is_stmt 0 discriminator 1 view .LVU2714
 6517 0062 996A     		ldr	r1, [r3, #40]
1398:Core/Src/SEGGER_RTT.c ****       ;
 6518              		.loc 1 1398 18 discriminator 1 view .LVU2715
 6519 0064 9142     		cmp	r1, r2
 6520 0066 E7D1     		bne	.L264
1399:Core/Src/SEGGER_RTT.c ****     }
 6521              		.loc 1 1399 7 is_stmt 1 view .LVU2716
1398:Core/Src/SEGGER_RTT.c ****       ;
 6522              		.loc 1 1398 18 view .LVU2717
1398:Core/Src/SEGGER_RTT.c ****       ;
 6523              		.loc 1 1398 26 is_stmt 0 view .LVU2718
 6524 0068 996A     		ldr	r1, [r3, #40]
1398:Core/Src/SEGGER_RTT.c ****       ;
 6525              		.loc 1 1398 18 view .LVU2719
 6526 006a 9142     		cmp	r1, r2
 6527 006c F9D0     		beq	.L265
 6528 006e E3E7     		b	.L264
 6529              	.L267:
1412:Core/Src/SEGGER_RTT.c ****   }
 6530              		.loc 1 1412 12 view .LVU2720
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccs0vIiH.s 			page 182


 6531 0070 0020     		movs	r0, #0
 6532              	.LVL636:
1417:Core/Src/SEGGER_RTT.c ****   return Status;
 6533              		.loc 1 1417 3 is_stmt 1 view .LVU2721
 6534              		.syntax unified
 6535              	@ 1417 "Core/Src/SEGGER_RTT.c" 1
 6536 0072 8CF31188 		msr   basepri, ip  
 6537              		
 6538              	@ 0 "" 2
 6539              		.thumb
 6540              		.syntax unified
 6541              	.LBE356:
1417:Core/Src/SEGGER_RTT.c ****   return Status;
 6542              		.loc 1 1417 22 view .LVU2722
1418:Core/Src/SEGGER_RTT.c **** }
 6543              		.loc 1 1418 3 view .LVU2723
 6544              		.loc 1 1419 1 is_stmt 0 view .LVU2724
 6545 0076 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 6546              	.LVL637:
 6547              	.L271:
 6548              		.loc 1 1419 1 view .LVU2725
 6549 0078 03F0FF07 		and	r7, r3, #255
 6550              	.LBB357:
1381:Core/Src/SEGGER_RTT.c ****   SEGGER_RTT_LOCK();
 6551              		.loc 1 1381 3 is_stmt 1 view .LVU2726
 6552              	.LBB351:
 6553              	.LBI351:
 314:Core/Src/SEGGER_RTT.c ****   volatile SEGGER_RTT_CB* p;   // Volatile to make sure that compiler cannot change the order of ac
 6554              		.loc 1 314 13 view .LVU2727
 6555              	.LBB352:
 315:Core/Src/SEGGER_RTT.c ****   static const char _aInitStr[] = "\0\0\0\0\0\0TTR REGGES";  // Init complete ID string to make sur
 6556              		.loc 1 315 3 view .LVU2728
 316:Core/Src/SEGGER_RTT.c ****   unsigned i;
 6557              		.loc 1 316 3 view .LVU2729
 317:Core/Src/SEGGER_RTT.c ****   //
 6558              		.loc 1 317 3 view .LVU2730
 321:Core/Src/SEGGER_RTT.c ****   memset((SEGGER_RTT_CB*)p, 0, sizeof(_SEGGER_RTT));         // Make sure that the RTT CB is always
 6559              		.loc 1 321 3 view .LVU2731
 6560              	.LVL638:
 322:Core/Src/SEGGER_RTT.c ****   p->MaxNumUpBuffers    = SEGGER_RTT_MAX_NUM_UP_BUFFERS;
 6561              		.loc 1 322 3 view .LVU2732
 6562 007c 3946     		mov	r1, r7
 6563              	.LVL639:
 322:Core/Src/SEGGER_RTT.c ****   p->MaxNumUpBuffers    = SEGGER_RTT_MAX_NUM_UP_BUFFERS;
 6564              		.loc 1 322 3 is_stmt 0 view .LVU2733
 6565 007e 7822     		movs	r2, #120
 6566 0080 04F13000 		add	r0, r4, #48
 6567              	.LVL640:
 322:Core/Src/SEGGER_RTT.c ****   p->MaxNumUpBuffers    = SEGGER_RTT_MAX_NUM_UP_BUFFERS;
 6568              		.loc 1 322 3 view .LVU2734
 6569 0084 FFF7FEFF 		bl	memset
 6570              	.LVL641:
 323:Core/Src/SEGGER_RTT.c ****   p->MaxNumDownBuffers  = SEGGER_RTT_MAX_NUM_DOWN_BUFFERS;
 6571              		.loc 1 323 3 is_stmt 1 view .LVU2735
 323:Core/Src/SEGGER_RTT.c ****   p->MaxNumDownBuffers  = SEGGER_RTT_MAX_NUM_DOWN_BUFFERS;
 6572              		.loc 1 323 25 is_stmt 0 view .LVU2736
 6573 0088 0323     		movs	r3, #3
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccs0vIiH.s 			page 183


 6574 008a 2361     		str	r3, [r4, #16]
 324:Core/Src/SEGGER_RTT.c ****   //
 6575              		.loc 1 324 3 is_stmt 1 view .LVU2737
 329:Core/Src/SEGGER_RTT.c ****   p->aUp[0].SizeOfBuffer  = BUFFER_SIZE_UP;
 6576              		.loc 1 329 27 is_stmt 0 view .LVU2738
 6577 008c 174A     		ldr	r2, .L272+4
 324:Core/Src/SEGGER_RTT.c ****   //
 6578              		.loc 1 324 25 view .LVU2739
 6579 008e 6361     		str	r3, [r4, #20]
 328:Core/Src/SEGGER_RTT.c ****   p->aUp[0].pBuffer       = _acUpBuffer;
 6580              		.loc 1 328 3 is_stmt 1 view .LVU2740
 330:Core/Src/SEGGER_RTT.c ****   p->aUp[0].RdOff         = 0u;
 6581              		.loc 1 330 27 is_stmt 0 view .LVU2741
 6582 0090 4FF48061 		mov	r1, #1024
 328:Core/Src/SEGGER_RTT.c ****   p->aUp[0].pBuffer       = _acUpBuffer;
 6583              		.loc 1 328 27 view .LVU2742
 6584 0094 164B     		ldr	r3, .L272+8
 6585 0096 A361     		str	r3, [r4, #24]
 329:Core/Src/SEGGER_RTT.c ****   p->aUp[0].SizeOfBuffer  = BUFFER_SIZE_UP;
 6586              		.loc 1 329 3 is_stmt 1 view .LVU2743
 329:Core/Src/SEGGER_RTT.c ****   p->aUp[0].SizeOfBuffer  = BUFFER_SIZE_UP;
 6587              		.loc 1 329 27 is_stmt 0 view .LVU2744
 6588 0098 E261     		str	r2, [r4, #28]
 330:Core/Src/SEGGER_RTT.c ****   p->aUp[0].RdOff         = 0u;
 6589              		.loc 1 330 3 is_stmt 1 view .LVU2745
 330:Core/Src/SEGGER_RTT.c ****   p->aUp[0].RdOff         = 0u;
 6590              		.loc 1 330 27 is_stmt 0 view .LVU2746
 6591 009a 2162     		str	r1, [r4, #32]
 331:Core/Src/SEGGER_RTT.c ****   p->aUp[0].WrOff         = 0u;
 6592              		.loc 1 331 3 is_stmt 1 view .LVU2747
 338:Core/Src/SEGGER_RTT.c ****   p->aDown[0].SizeOfBuffer  = BUFFER_SIZE_DOWN;
 6593              		.loc 1 338 29 is_stmt 0 view .LVU2748
 6594 009c 154A     		ldr	r2, .L272+12
 331:Core/Src/SEGGER_RTT.c ****   p->aUp[0].WrOff         = 0u;
 6595              		.loc 1 331 27 view .LVU2749
 6596 009e A762     		str	r7, [r4, #40]
 332:Core/Src/SEGGER_RTT.c ****   p->aUp[0].Flags         = SEGGER_RTT_MODE_DEFAULT;
 6597              		.loc 1 332 3 is_stmt 1 view .LVU2750
 332:Core/Src/SEGGER_RTT.c ****   p->aUp[0].Flags         = SEGGER_RTT_MODE_DEFAULT;
 6598              		.loc 1 332 27 is_stmt 0 view .LVU2751
 6599 00a0 6762     		str	r7, [r4, #36]
 333:Core/Src/SEGGER_RTT.c ****   //
 6600              		.loc 1 333 3 is_stmt 1 view .LVU2752
 333:Core/Src/SEGGER_RTT.c ****   //
 6601              		.loc 1 333 27 is_stmt 0 view .LVU2753
 6602 00a2 E762     		str	r7, [r4, #44]
 337:Core/Src/SEGGER_RTT.c ****   p->aDown[0].pBuffer       = _acDownBuffer;
 6603              		.loc 1 337 3 is_stmt 1 view .LVU2754
 337:Core/Src/SEGGER_RTT.c ****   p->aDown[0].pBuffer       = _acDownBuffer;
 6604              		.loc 1 337 29 is_stmt 0 view .LVU2755
 6605 00a4 2366     		str	r3, [r4, #96]
 338:Core/Src/SEGGER_RTT.c ****   p->aDown[0].SizeOfBuffer  = BUFFER_SIZE_DOWN;
 6606              		.loc 1 338 3 is_stmt 1 view .LVU2756
 339:Core/Src/SEGGER_RTT.c ****   p->aDown[0].RdOff         = 0u;
 6607              		.loc 1 339 29 is_stmt 0 view .LVU2757
 6608 00a6 1023     		movs	r3, #16
 338:Core/Src/SEGGER_RTT.c ****   p->aDown[0].SizeOfBuffer  = BUFFER_SIZE_DOWN;
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccs0vIiH.s 			page 184


 6609              		.loc 1 338 29 view .LVU2758
 6610 00a8 6266     		str	r2, [r4, #100]
 339:Core/Src/SEGGER_RTT.c ****   p->aDown[0].RdOff         = 0u;
 6611              		.loc 1 339 3 is_stmt 1 view .LVU2759
 339:Core/Src/SEGGER_RTT.c ****   p->aDown[0].RdOff         = 0u;
 6612              		.loc 1 339 29 is_stmt 0 view .LVU2760
 6613 00aa A366     		str	r3, [r4, #104]
 340:Core/Src/SEGGER_RTT.c ****   p->aDown[0].WrOff         = 0u;
 6614              		.loc 1 340 3 is_stmt 1 view .LVU2761
 340:Core/Src/SEGGER_RTT.c ****   p->aDown[0].WrOff         = 0u;
 6615              		.loc 1 340 29 is_stmt 0 view .LVU2762
 6616 00ac 2767     		str	r7, [r4, #112]
 341:Core/Src/SEGGER_RTT.c ****   p->aDown[0].Flags         = SEGGER_RTT_MODE_DEFAULT;
 6617              		.loc 1 341 3 is_stmt 1 view .LVU2763
 341:Core/Src/SEGGER_RTT.c ****   p->aDown[0].Flags         = SEGGER_RTT_MODE_DEFAULT;
 6618              		.loc 1 341 29 is_stmt 0 view .LVU2764
 6619 00ae E766     		str	r7, [r4, #108]
 342:Core/Src/SEGGER_RTT.c ****   //
 6620              		.loc 1 342 3 is_stmt 1 view .LVU2765
 342:Core/Src/SEGGER_RTT.c ****   //
 6621              		.loc 1 342 29 is_stmt 0 view .LVU2766
 6622 00b0 6767     		str	r7, [r4, #116]
 348:Core/Src/SEGGER_RTT.c ****   for (i = 0; i < sizeof(_aInitStr) - 1; ++i) {
 6623              		.loc 1 348 3 is_stmt 1 view .LVU2767
 6624              		.syntax unified
 6625              	@ 348 "Core/Src/SEGGER_RTT.c" 1
 6626 00b2 BFF35F8F 		dmb
 6627              	
 6628              	@ 0 "" 2
 348:Core/Src/SEGGER_RTT.c ****   for (i = 0; i < sizeof(_aInitStr) - 1; ++i) {
 6629              		.loc 1 348 13 view .LVU2768
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 6630              		.loc 1 349 3 view .LVU2769
 6631              	.LVL642:
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 6632              		.loc 1 349 17 view .LVU2770
 350:Core/Src/SEGGER_RTT.c ****   }
 6633              		.loc 1 350 5 view .LVU2771
 350:Core/Src/SEGGER_RTT.c ****   }
 6634              		.loc 1 350 16 is_stmt 0 view .LVU2772
 6635              		.thumb
 6636              		.syntax unified
 6637 00b6 5323     		movs	r3, #83
 6638 00b8 2370     		strb	r3, [r4]
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 6639              		.loc 1 349 42 is_stmt 1 view .LVU2773
 6640              	.LVL643:
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 6641              		.loc 1 349 17 view .LVU2774
 350:Core/Src/SEGGER_RTT.c ****   }
 6642              		.loc 1 350 5 view .LVU2775
 350:Core/Src/SEGGER_RTT.c ****   }
 6643              		.loc 1 350 16 is_stmt 0 view .LVU2776
 6644 00ba 4722     		movs	r2, #71
 6645 00bc 4523     		movs	r3, #69
 6646 00be 6370     		strb	r3, [r4, #1]
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccs0vIiH.s 			page 185


 6647              		.loc 1 349 42 is_stmt 1 view .LVU2777
 6648              	.LVL644:
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 6649              		.loc 1 349 17 view .LVU2778
 350:Core/Src/SEGGER_RTT.c ****   }
 6650              		.loc 1 350 5 view .LVU2779
 350:Core/Src/SEGGER_RTT.c ****   }
 6651              		.loc 1 350 16 is_stmt 0 view .LVU2780
 6652 00c0 2021     		movs	r1, #32
 6653 00c2 A270     		strb	r2, [r4, #2]
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 6654              		.loc 1 349 42 is_stmt 1 view .LVU2781
 6655              	.LVL645:
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 6656              		.loc 1 349 17 view .LVU2782
 350:Core/Src/SEGGER_RTT.c ****   }
 6657              		.loc 1 350 5 view .LVU2783
 350:Core/Src/SEGGER_RTT.c ****   }
 6658              		.loc 1 350 16 is_stmt 0 view .LVU2784
 6659 00c4 E270     		strb	r2, [r4, #3]
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 6660              		.loc 1 349 42 is_stmt 1 view .LVU2785
 6661              	.LVL646:
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 6662              		.loc 1 349 17 view .LVU2786
 350:Core/Src/SEGGER_RTT.c ****   }
 6663              		.loc 1 350 5 view .LVU2787
 350:Core/Src/SEGGER_RTT.c ****   }
 6664              		.loc 1 350 16 is_stmt 0 view .LVU2788
 6665 00c6 2371     		strb	r3, [r4, #4]
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 6666              		.loc 1 349 42 is_stmt 1 view .LVU2789
 6667              	.LVL647:
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 6668              		.loc 1 349 17 view .LVU2790
 350:Core/Src/SEGGER_RTT.c ****   }
 6669              		.loc 1 350 5 view .LVU2791
 350:Core/Src/SEGGER_RTT.c ****   }
 6670              		.loc 1 350 16 is_stmt 0 view .LVU2792
 6671 00c8 5222     		movs	r2, #82
 6672 00ca 5423     		movs	r3, #84
 6673 00cc 6271     		strb	r2, [r4, #5]
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 6674              		.loc 1 349 42 is_stmt 1 view .LVU2793
 6675              	.LVL648:
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 6676              		.loc 1 349 17 view .LVU2794
 350:Core/Src/SEGGER_RTT.c ****   }
 6677              		.loc 1 350 5 view .LVU2795
 350:Core/Src/SEGGER_RTT.c ****   }
 6678              		.loc 1 350 16 is_stmt 0 view .LVU2796
 6679 00ce A171     		strb	r1, [r4, #6]
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 6680              		.loc 1 349 42 is_stmt 1 view .LVU2797
 6681              	.LVL649:
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 6682              		.loc 1 349 17 view .LVU2798
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccs0vIiH.s 			page 186


 350:Core/Src/SEGGER_RTT.c ****   }
 6683              		.loc 1 350 5 view .LVU2799
 350:Core/Src/SEGGER_RTT.c ****   }
 6684              		.loc 1 350 16 is_stmt 0 view .LVU2800
 6685 00d0 E271     		strb	r2, [r4, #7]
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 6686              		.loc 1 349 42 is_stmt 1 view .LVU2801
 6687              	.LVL650:
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 6688              		.loc 1 349 17 view .LVU2802
 350:Core/Src/SEGGER_RTT.c ****   }
 6689              		.loc 1 350 5 view .LVU2803
 350:Core/Src/SEGGER_RTT.c ****   }
 6690              		.loc 1 350 16 is_stmt 0 view .LVU2804
 6691 00d2 2372     		strb	r3, [r4, #8]
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 6692              		.loc 1 349 42 is_stmt 1 view .LVU2805
 6693              	.LVL651:
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 6694              		.loc 1 349 17 view .LVU2806
 350:Core/Src/SEGGER_RTT.c ****   }
 6695              		.loc 1 350 5 view .LVU2807
 350:Core/Src/SEGGER_RTT.c ****   }
 6696              		.loc 1 350 16 is_stmt 0 view .LVU2808
 6697 00d4 6372     		strb	r3, [r4, #9]
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 6698              		.loc 1 349 42 is_stmt 1 view .LVU2809
 6699              	.LVL652:
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 6700              		.loc 1 349 17 view .LVU2810
 350:Core/Src/SEGGER_RTT.c ****   }
 6701              		.loc 1 350 5 view .LVU2811
 350:Core/Src/SEGGER_RTT.c ****   }
 6702              		.loc 1 350 16 is_stmt 0 view .LVU2812
 6703 00d6 A772     		strb	r7, [r4, #10]
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 6704              		.loc 1 349 42 is_stmt 1 view .LVU2813
 6705              	.LVL653:
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 6706              		.loc 1 349 17 view .LVU2814
 350:Core/Src/SEGGER_RTT.c ****   }
 6707              		.loc 1 350 5 view .LVU2815
 350:Core/Src/SEGGER_RTT.c ****   }
 6708              		.loc 1 350 16 is_stmt 0 view .LVU2816
 6709 00d8 E772     		strb	r7, [r4, #11]
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 6710              		.loc 1 349 42 is_stmt 1 view .LVU2817
 6711              	.LVL654:
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 6712              		.loc 1 349 17 view .LVU2818
 350:Core/Src/SEGGER_RTT.c ****   }
 6713              		.loc 1 350 5 view .LVU2819
 350:Core/Src/SEGGER_RTT.c ****   }
 6714              		.loc 1 350 16 is_stmt 0 view .LVU2820
 6715 00da 2773     		strb	r7, [r4, #12]
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 6716              		.loc 1 349 42 is_stmt 1 view .LVU2821
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccs0vIiH.s 			page 187


 6717              	.LVL655:
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 6718              		.loc 1 349 17 view .LVU2822
 350:Core/Src/SEGGER_RTT.c ****   }
 6719              		.loc 1 350 5 view .LVU2823
 350:Core/Src/SEGGER_RTT.c ****   }
 6720              		.loc 1 350 16 is_stmt 0 view .LVU2824
 6721 00dc 6773     		strb	r7, [r4, #13]
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 6722              		.loc 1 349 42 is_stmt 1 view .LVU2825
 6723              	.LVL656:
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 6724              		.loc 1 349 17 view .LVU2826
 350:Core/Src/SEGGER_RTT.c ****   }
 6725              		.loc 1 350 5 view .LVU2827
 350:Core/Src/SEGGER_RTT.c ****   }
 6726              		.loc 1 350 16 is_stmt 0 view .LVU2828
 6727 00de A773     		strb	r7, [r4, #14]
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 6728              		.loc 1 349 42 is_stmt 1 view .LVU2829
 6729              	.LVL657:
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 6730              		.loc 1 349 17 view .LVU2830
 350:Core/Src/SEGGER_RTT.c ****   }
 6731              		.loc 1 350 5 view .LVU2831
 350:Core/Src/SEGGER_RTT.c ****   }
 6732              		.loc 1 350 16 is_stmt 0 view .LVU2832
 6733 00e0 E773     		strb	r7, [r4, #15]
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 6734              		.loc 1 349 42 is_stmt 1 view .LVU2833
 6735              	.LVL658:
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 6736              		.loc 1 349 17 view .LVU2834
 352:Core/Src/SEGGER_RTT.c **** }
 6737              		.loc 1 352 3 view .LVU2835
 6738              		.syntax unified
 6739              	@ 352 "Core/Src/SEGGER_RTT.c" 1
 6740 00e2 BFF35F8F 		dmb
 6741              	
 6742              	@ 0 "" 2
 352:Core/Src/SEGGER_RTT.c **** }
 6743              		.loc 1 352 13 view .LVU2836
 353:Core/Src/SEGGER_RTT.c **** 
 6744              		.loc 1 353 1 is_stmt 0 view .LVU2837
 6745              		.thumb
 6746              		.syntax unified
 6747 00e6 92E7     		b	.L262
 6748              	.L273:
 6749              		.align	2
 6750              	.L272:
 6751 00e8 00000000 		.word	.LANCHOR0
 6752 00ec 00000000 		.word	.LANCHOR1
 6753 00f0 00000000 		.word	.LC0
 6754 00f4 00000000 		.word	.LANCHOR2
 6755              	.LBE352:
 6756              	.LBE351:
 6757              	.LBE357:
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccs0vIiH.s 			page 188


 6758              		.cfi_endproc
 6759              	.LFE17:
 6761              		.section	.text.SEGGER_RTT_GetKey,"ax",%progbits
 6762              		.align	1
 6763              		.p2align 2,,3
 6764              		.global	SEGGER_RTT_GetKey
 6765              		.syntax unified
 6766              		.thumb
 6767              		.thumb_func
 6769              	SEGGER_RTT_GetKey:
 6770              	.LFB18:
1420:Core/Src/SEGGER_RTT.c **** 
1421:Core/Src/SEGGER_RTT.c **** /*********************************************************************
1422:Core/Src/SEGGER_RTT.c **** *
1423:Core/Src/SEGGER_RTT.c **** *       SEGGER_RTT_GetKey
1424:Core/Src/SEGGER_RTT.c **** *
1425:Core/Src/SEGGER_RTT.c **** *  Function description
1426:Core/Src/SEGGER_RTT.c **** *    Reads one character from the SEGGER RTT buffer.
1427:Core/Src/SEGGER_RTT.c **** *    Host has previously stored data there.
1428:Core/Src/SEGGER_RTT.c **** *
1429:Core/Src/SEGGER_RTT.c **** *  Return value
1430:Core/Src/SEGGER_RTT.c **** *    <  0 -   No character available (buffer empty).
1431:Core/Src/SEGGER_RTT.c **** *    >= 0 -   Character which has been read. (Possible values: 0 - 255)
1432:Core/Src/SEGGER_RTT.c **** *
1433:Core/Src/SEGGER_RTT.c **** *  Notes
1434:Core/Src/SEGGER_RTT.c **** *    (1) This function is only specified for accesses to RTT buffer 0.
1435:Core/Src/SEGGER_RTT.c **** */
1436:Core/Src/SEGGER_RTT.c **** int SEGGER_RTT_GetKey(void) {
 6771              		.loc 1 1436 29 is_stmt 1 view -0
 6772              		.cfi_startproc
 6773              		@ args = 0, pretend = 0, frame = 8
 6774              		@ frame_needed = 0, uses_anonymous_args = 0
1437:Core/Src/SEGGER_RTT.c ****   char c;
 6775              		.loc 1 1437 3 view .LVU2839
1438:Core/Src/SEGGER_RTT.c ****   int r;
 6776              		.loc 1 1438 3 view .LVU2840
1439:Core/Src/SEGGER_RTT.c **** 
1440:Core/Src/SEGGER_RTT.c ****   r = (int)SEGGER_RTT_Read(0u, &c, 1u);
 6777              		.loc 1 1440 3 view .LVU2841
 6778              	.LVL659:
1436:Core/Src/SEGGER_RTT.c ****   char c;
 6779              		.loc 1 1436 29 is_stmt 0 view .LVU2842
 6780 0000 2DE9F047 		push	{r4, r5, r6, r7, r8, r9, r10, lr}
 6781              		.cfi_def_cfa_offset 32
 6782              		.cfi_offset 4, -32
 6783              		.cfi_offset 5, -28
 6784              		.cfi_offset 6, -24
 6785              		.cfi_offset 7, -20
 6786              		.cfi_offset 8, -16
 6787              		.cfi_offset 9, -12
 6788              		.cfi_offset 10, -8
 6789              		.cfi_offset 14, -4
 6790 0004 82B0     		sub	sp, sp, #8
 6791              		.cfi_def_cfa_offset 40
 6792              	.LVL660:
 6793              	.LBB369:
 6794              	.LBI369:
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccs0vIiH.s 			page 189


 794:Core/Src/SEGGER_RTT.c ****   unsigned NumBytesRead;
 6795              		.loc 1 794 10 is_stmt 1 view .LVU2843
 6796              	.LBB370:
 795:Core/Src/SEGGER_RTT.c **** 
 6797              		.loc 1 795 3 view .LVU2844
 6798              	.LBB371:
 797:Core/Src/SEGGER_RTT.c ****   //
 6799              		.loc 1 797 3 view .LVU2845
 797:Core/Src/SEGGER_RTT.c ****   //
 6800              		.loc 1 797 3 view .LVU2846
 6801              		.syntax unified
 6802              	@ 797 "Core/Src/SEGGER_RTT.c" 1
 6803 0006 EFF31188 		mrs   r8, basepri  
 6804 000a 4FF02001 		mov   r1, #32       
 6805 000e 81F31188 		msr   basepri, r1  
 6806              		
 6807              	@ 0 "" 2
 6808              	.LVL661:
 797:Core/Src/SEGGER_RTT.c ****   //
 6809              		.loc 1 797 20 view .LVU2847
 801:Core/Src/SEGGER_RTT.c ****   //
 6810              		.loc 1 801 3 view .LVU2848
 6811              		.thumb
 6812              		.syntax unified
 6813              	.LBB372:
 6814              	.LBI372:
 665:Core/Src/SEGGER_RTT.c ****   unsigned                NumBytesRem;
 6815              		.loc 1 665 10 view .LVU2849
 6816              	.LBB373:
 666:Core/Src/SEGGER_RTT.c ****   unsigned                NumBytesRead;
 6817              		.loc 1 666 3 view .LVU2850
 667:Core/Src/SEGGER_RTT.c ****   unsigned                RdOff;
 6818              		.loc 1 667 3 view .LVU2851
 668:Core/Src/SEGGER_RTT.c ****   unsigned                WrOff;
 6819              		.loc 1 668 3 view .LVU2852
 669:Core/Src/SEGGER_RTT.c ****   unsigned char*          pBuffer;
 6820              		.loc 1 669 3 view .LVU2853
 670:Core/Src/SEGGER_RTT.c ****   SEGGER_RTT_BUFFER_DOWN* pRing;
 6821              		.loc 1 670 3 view .LVU2854
 671:Core/Src/SEGGER_RTT.c ****   volatile char*          pSrc;
 6822              		.loc 1 671 3 view .LVU2855
 672:Core/Src/SEGGER_RTT.c ****   //
 6823              		.loc 1 672 3 view .LVU2856
 6824              	.LBB374:
 674:Core/Src/SEGGER_RTT.c ****   pRing = (SEGGER_RTT_BUFFER_DOWN*)((char*)&_SEGGER_RTT.aDown[BufferIndex] + SEGGER_RTT_UNCACHED_OF
 6825              		.loc 1 674 3 view .LVU2857
 674:Core/Src/SEGGER_RTT.c ****   pRing = (SEGGER_RTT_BUFFER_DOWN*)((char*)&_SEGGER_RTT.aDown[BufferIndex] + SEGGER_RTT_UNCACHED_OF
 6826              		.loc 1 674 3 view .LVU2858
 674:Core/Src/SEGGER_RTT.c ****   pRing = (SEGGER_RTT_BUFFER_DOWN*)((char*)&_SEGGER_RTT.aDown[BufferIndex] + SEGGER_RTT_UNCACHED_OF
 6827              		.loc 1 674 3 view .LVU2859
 674:Core/Src/SEGGER_RTT.c ****   pRing = (SEGGER_RTT_BUFFER_DOWN*)((char*)&_SEGGER_RTT.aDown[BufferIndex] + SEGGER_RTT_UNCACHED_OF
 6828              		.loc 1 674 3 view .LVU2860
 6829 0012 424C     		ldr	r4, .L294
 6830 0014 2378     		ldrb	r3, [r4]	@ zero_extendqisi2
 6831 0016 002B     		cmp	r3, #0
 6832 0018 3FD0     		beq	.L275
 6833              	.LBE374:
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccs0vIiH.s 			page 190


 678:Core/Src/SEGGER_RTT.c ****   NumBytesRead = 0u;
 6834              		.loc 1 678 9 is_stmt 0 view .LVU2861
 6835 001a E66E     		ldr	r6, [r4, #108]
 677:Core/Src/SEGGER_RTT.c ****   WrOff = pRing->WrOff;
 6836              		.loc 1 677 9 view .LVU2862
 6837 001c 256F     		ldr	r5, [r4, #112]
 6838              	.LBB377:
 674:Core/Src/SEGGER_RTT.c ****   pRing = (SEGGER_RTT_BUFFER_DOWN*)((char*)&_SEGGER_RTT.aDown[BufferIndex] + SEGGER_RTT_UNCACHED_OF
 6839              		.loc 1 674 3 is_stmt 1 view .LVU2863
 6840              	.LBE377:
 674:Core/Src/SEGGER_RTT.c ****   pRing = (SEGGER_RTT_BUFFER_DOWN*)((char*)&_SEGGER_RTT.aDown[BufferIndex] + SEGGER_RTT_UNCACHED_OF
 6841              		.loc 1 674 9 view .LVU2864
 675:Core/Src/SEGGER_RTT.c ****   pBuffer = (unsigned char*)pData;
 6842              		.loc 1 675 3 view .LVU2865
 6843              	.LVL662:
 676:Core/Src/SEGGER_RTT.c ****   RdOff = pRing->RdOff;
 6844              		.loc 1 676 3 view .LVU2866
 677:Core/Src/SEGGER_RTT.c ****   WrOff = pRing->WrOff;
 6845              		.loc 1 677 3 view .LVU2867
 678:Core/Src/SEGGER_RTT.c ****   NumBytesRead = 0u;
 6846              		.loc 1 678 3 view .LVU2868
 679:Core/Src/SEGGER_RTT.c ****   //
 6847              		.loc 1 679 3 view .LVU2869
 683:Core/Src/SEGGER_RTT.c ****     NumBytesRem = pRing->SizeOfBuffer - RdOff;
 6848              		.loc 1 683 3 view .LVU2870
 683:Core/Src/SEGGER_RTT.c ****     NumBytesRem = pRing->SizeOfBuffer - RdOff;
 6849              		.loc 1 683 6 is_stmt 0 view .LVU2871
 6850 001e AE42     		cmp	r6, r5
 6851 0020 08D3     		bcc	.L291
 711:Core/Src/SEGGER_RTT.c ****   NumBytesRem = MIN(NumBytesRem, BufferSize);
 6852              		.loc 1 711 3 is_stmt 1 view .LVU2872
 6853              	.LVL663:
 712:Core/Src/SEGGER_RTT.c ****   if (NumBytesRem > 0u) {
 6854              		.loc 1 712 3 view .LVU2873
 713:Core/Src/SEGGER_RTT.c ****     pSrc = (pRing->pBuffer + RdOff) + SEGGER_RTT_UNCACHED_OFF;
 6855              		.loc 1 713 3 view .LVU2874
 713:Core/Src/SEGGER_RTT.c ****     pSrc = (pRing->pBuffer + RdOff) + SEGGER_RTT_UNCACHED_OFF;
 6856              		.loc 1 713 6 is_stmt 0 view .LVU2875
 6857 0022 AE42     		cmp	r6, r5
 6858 0024 26D1     		bne	.L292
 6859              	.LVL664:
 6860              	.L283:
 734:Core/Src/SEGGER_RTT.c **** }
 6861              		.loc 1 734 3 is_stmt 1 view .LVU2876
 734:Core/Src/SEGGER_RTT.c **** }
 6862              		.loc 1 734 3 is_stmt 0 view .LVU2877
 6863              	.LBE373:
 6864              	.LBE372:
 805:Core/Src/SEGGER_RTT.c ****   //
 6865              		.loc 1 805 3 is_stmt 1 view .LVU2878
 6866              		.syntax unified
 6867              	@ 805 "Core/Src/SEGGER_RTT.c" 1
 6868 0026 88F31188 		msr   basepri, r8  
 6869              		
 6870              	@ 0 "" 2
 6871              	.LVL665:
 6872              		.thumb
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccs0vIiH.s 			page 191


 6873              		.syntax unified
 6874              	.L290:
 805:Core/Src/SEGGER_RTT.c ****   //
 6875              		.loc 1 805 3 is_stmt 0 view .LVU2879
 6876              	.LBE371:
 805:Core/Src/SEGGER_RTT.c ****   //
 6877              		.loc 1 805 22 is_stmt 1 view .LVU2880
 807:Core/Src/SEGGER_RTT.c **** }
 6878              		.loc 1 807 3 view .LVU2881
 807:Core/Src/SEGGER_RTT.c **** }
 6879              		.loc 1 807 3 is_stmt 0 view .LVU2882
 6880              	.LBE370:
 6881              	.LBE369:
1441:Core/Src/SEGGER_RTT.c ****   if (r == 1) {
 6882              		.loc 1 1441 3 is_stmt 1 view .LVU2883
1442:Core/Src/SEGGER_RTT.c ****     r = (int)(unsigned char)c;
1443:Core/Src/SEGGER_RTT.c ****   } else {
1444:Core/Src/SEGGER_RTT.c ****     r = -1;
 6883              		.loc 1 1444 7 is_stmt 0 view .LVU2884
 6884 002a 4FF0FF30 		mov	r0, #-1
1445:Core/Src/SEGGER_RTT.c ****   }
1446:Core/Src/SEGGER_RTT.c ****   return r;
1447:Core/Src/SEGGER_RTT.c **** }
 6885              		.loc 1 1447 1 view .LVU2885
 6886 002e 02B0     		add	sp, sp, #8
 6887              		.cfi_remember_state
 6888              		.cfi_def_cfa_offset 32
 6889              		@ sp needed
 6890 0030 BDE8F087 		pop	{r4, r5, r6, r7, r8, r9, r10, pc}
 6891              	.LVL666:
 6892              	.L291:
 6893              		.cfi_restore_state
 6894              	.LBB391:
 6895              	.LBB388:
 6896              	.LBB385:
 6897              	.LBB382:
 6898              	.LBB379:
 684:Core/Src/SEGGER_RTT.c ****     NumBytesRem = MIN(NumBytesRem, BufferSize);
 6899              		.loc 1 684 5 is_stmt 1 view .LVU2886
 686:Core/Src/SEGGER_RTT.c **** #if SEGGER_RTT_MEMCPY_USE_BYTELOOP
 6900              		.loc 1 686 18 is_stmt 0 view .LVU2887
 6901 0034 D4E9199A 		ldrd	r9, r10, [r4, #100]
 684:Core/Src/SEGGER_RTT.c ****     NumBytesRem = MIN(NumBytesRem, BufferSize);
 6902              		.loc 1 684 17 view .LVU2888
 6903 0038 AAEB0507 		sub	r7, r10, r5
 6904              	.LVL667:
 685:Core/Src/SEGGER_RTT.c ****     pSrc = (pRing->pBuffer + RdOff) + SEGGER_RTT_UNCACHED_OFF;
 6905              		.loc 1 685 5 is_stmt 1 view .LVU2889
 685:Core/Src/SEGGER_RTT.c ****     pSrc = (pRing->pBuffer + RdOff) + SEGGER_RTT_UNCACHED_OFF;
 6906              		.loc 1 685 17 is_stmt 0 view .LVU2890
 6907 003c 012F     		cmp	r7, #1
 6908 003e 28BF     		it	cs
 6909 0040 0127     		movcs	r7, #1
 6910              	.LVL668:
 686:Core/Src/SEGGER_RTT.c **** #if SEGGER_RTT_MEMCPY_USE_BYTELOOP
 6911              		.loc 1 686 5 is_stmt 1 view .LVU2891
 695:Core/Src/SEGGER_RTT.c ****     NumBytesRead += NumBytesRem;
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccs0vIiH.s 			page 192


 6912              		.loc 1 695 5 view .LVU2892
 6913 0042 3A46     		mov	r2, r7
 6914 0044 09EB0501 		add	r1, r9, r5
 6915              	.LVL669:
 695:Core/Src/SEGGER_RTT.c ****     NumBytesRead += NumBytesRem;
 6916              		.loc 1 695 5 is_stmt 0 view .LVU2893
 6917 0048 0DF10700 		add	r0, sp, #7
 6918              	.LVL670:
 695:Core/Src/SEGGER_RTT.c ****     NumBytesRead += NumBytesRem;
 6919              		.loc 1 695 5 view .LVU2894
 6920 004c FFF7FEFF 		bl	memcpy
 6921              	.LVL671:
 696:Core/Src/SEGGER_RTT.c ****     pBuffer      += NumBytesRem;
 6922              		.loc 1 696 5 is_stmt 1 view .LVU2895
 697:Core/Src/SEGGER_RTT.c ****     BufferSize   -= NumBytesRem;
 6923              		.loc 1 697 5 view .LVU2896
 698:Core/Src/SEGGER_RTT.c ****     RdOff        += NumBytesRem;
 6924              		.loc 1 698 5 view .LVU2897
 699:Core/Src/SEGGER_RTT.c **** #endif
 6925              		.loc 1 699 18 is_stmt 0 view .LVU2898
 6926 0050 7A19     		adds	r2, r7, r5
 704:Core/Src/SEGGER_RTT.c ****       RdOff = 0u;
 6927              		.loc 1 704 8 view .LVU2899
 6928 0052 9245     		cmp	r10, r2
 698:Core/Src/SEGGER_RTT.c ****     RdOff        += NumBytesRem;
 6929              		.loc 1 698 18 view .LVU2900
 6930 0054 C7F10103 		rsb	r3, r7, #1
 6931              	.LVL672:
 699:Core/Src/SEGGER_RTT.c **** #endif
 6932              		.loc 1 699 5 is_stmt 1 view .LVU2901
 704:Core/Src/SEGGER_RTT.c ****       RdOff = 0u;
 6933              		.loc 1 704 5 view .LVU2902
 711:Core/Src/SEGGER_RTT.c ****   NumBytesRem = MIN(NumBytesRem, BufferSize);
 6934              		.loc 1 711 15 is_stmt 0 view .LVU2903
 6935 0058 14BF     		ite	ne
 6936 005a B61A     		subne	r6, r6, r2
 6937              	.LVL673:
 705:Core/Src/SEGGER_RTT.c ****     }
 6938              		.loc 1 705 13 view .LVU2904
 6939 005c 0022     		moveq	r2, #0
 6940              	.LVL674:
 711:Core/Src/SEGGER_RTT.c ****   NumBytesRem = MIN(NumBytesRem, BufferSize);
 6941              		.loc 1 711 3 is_stmt 1 view .LVU2905
 712:Core/Src/SEGGER_RTT.c ****   if (NumBytesRem > 0u) {
 6942              		.loc 1 712 3 view .LVU2906
 713:Core/Src/SEGGER_RTT.c ****     pSrc = (pRing->pBuffer + RdOff) + SEGGER_RTT_UNCACHED_OFF;
 6943              		.loc 1 713 3 view .LVU2907
 712:Core/Src/SEGGER_RTT.c ****   if (NumBytesRem > 0u) {
 6944              		.loc 1 712 15 is_stmt 0 view .LVU2908
 6945 005e B342     		cmp	r3, r6
 6946 0060 28BF     		it	cs
 6947 0062 3346     		movcs	r3, r6
 6948              	.LVL675:
 713:Core/Src/SEGGER_RTT.c ****     pSrc = (pRing->pBuffer + RdOff) + SEGGER_RTT_UNCACHED_OFF;
 6949              		.loc 1 713 6 view .LVU2909
 6950 0064 002B     		cmp	r3, #0
 6951 0066 53D1     		bne	.L293
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccs0vIiH.s 			page 193


 730:Core/Src/SEGGER_RTT.c ****     pRing->RdOff = RdOff;
 6952              		.loc 1 730 3 is_stmt 1 view .LVU2910
 730:Core/Src/SEGGER_RTT.c ****     pRing->RdOff = RdOff;
 6953              		.loc 1 730 6 is_stmt 0 view .LVU2911
 6954 0068 AA45     		cmp	r10, r5
 6955 006a DCD0     		beq	.L283
 6956              	.LVL676:
 731:Core/Src/SEGGER_RTT.c ****   }
 6957              		.loc 1 731 5 is_stmt 1 view .LVU2912
 731:Core/Src/SEGGER_RTT.c ****   }
 6958              		.loc 1 731 18 is_stmt 0 view .LVU2913
 6959 006c 2267     		str	r2, [r4, #112]
 6960              	.LVL677:
 734:Core/Src/SEGGER_RTT.c **** }
 6961              		.loc 1 734 3 is_stmt 1 view .LVU2914
 734:Core/Src/SEGGER_RTT.c **** }
 6962              		.loc 1 734 3 is_stmt 0 view .LVU2915
 6963              	.LBE379:
 6964              	.LBE382:
 805:Core/Src/SEGGER_RTT.c ****   //
 6965              		.loc 1 805 3 is_stmt 1 view .LVU2916
 6966              		.syntax unified
 6967              	@ 805 "Core/Src/SEGGER_RTT.c" 1
 6968 006e 88F31188 		msr   basepri, r8  
 6969              		
 6970              	@ 0 "" 2
 6971              		.thumb
 6972              		.syntax unified
 6973              	.LBE385:
 805:Core/Src/SEGGER_RTT.c ****   //
 6974              		.loc 1 805 22 view .LVU2917
 807:Core/Src/SEGGER_RTT.c **** }
 6975              		.loc 1 807 3 view .LVU2918
 6976              	.LVL678:
 807:Core/Src/SEGGER_RTT.c **** }
 6977              		.loc 1 807 3 is_stmt 0 view .LVU2919
 6978              	.LBE388:
 6979              	.LBE391:
1441:Core/Src/SEGGER_RTT.c ****     r = (int)(unsigned char)c;
 6980              		.loc 1 1441 3 is_stmt 1 view .LVU2920
 6981 0072 0DE0     		b	.L280
 6982              	.LVL679:
 6983              	.L292:
 6984              	.LBB392:
 6985              	.LBB389:
 6986              	.LBB386:
 6987              	.LBB383:
 6988              	.LBB380:
 686:Core/Src/SEGGER_RTT.c **** #if SEGGER_RTT_MEMCPY_USE_BYTELOOP
 6989              		.loc 1 686 18 is_stmt 0 view .LVU2921
 6990 0074 D4F86490 		ldr	r9, [r4, #100]
 6991 0078 0127     		movs	r7, #1
 676:Core/Src/SEGGER_RTT.c ****   RdOff = pRing->RdOff;
 6992              		.loc 1 676 11 view .LVU2922
 6993 007a 0DF10703 		add	r3, sp, #7
 6994              	.LVL680:
 6995              	.L284:
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccs0vIiH.s 			page 194


 714:Core/Src/SEGGER_RTT.c **** #if SEGGER_RTT_MEMCPY_USE_BYTELOOP
 6996              		.loc 1 714 5 is_stmt 1 view .LVU2923
 723:Core/Src/SEGGER_RTT.c ****     NumBytesRead += NumBytesRem;
 6997              		.loc 1 723 5 view .LVU2924
 6998 007e 19F80520 		ldrb	r2, [r9, r5]	@ zero_extendqisi2
 6999 0082 1A70     		strb	r2, [r3]
 724:Core/Src/SEGGER_RTT.c ****     pBuffer      += NumBytesRem;
 7000              		.loc 1 724 5 view .LVU2925
 725:Core/Src/SEGGER_RTT.c ****     BufferSize   -= NumBytesRem;
 7001              		.loc 1 725 5 view .LVU2926
 726:Core/Src/SEGGER_RTT.c ****     RdOff        += NumBytesRem;
 7002              		.loc 1 726 5 view .LVU2927
 727:Core/Src/SEGGER_RTT.c **** #endif
 7003              		.loc 1 727 5 view .LVU2928
 7004              	.LVL681:
 730:Core/Src/SEGGER_RTT.c ****     pRing->RdOff = RdOff;
 7005              		.loc 1 730 3 view .LVU2929
 731:Core/Src/SEGGER_RTT.c ****   }
 7006              		.loc 1 731 5 view .LVU2930
 727:Core/Src/SEGGER_RTT.c **** #endif
 7007              		.loc 1 727 18 is_stmt 0 view .LVU2931
 7008 0084 0135     		adds	r5, r5, #1
 7009              	.LVL682:
 731:Core/Src/SEGGER_RTT.c ****   }
 7010              		.loc 1 731 18 view .LVU2932
 7011 0086 2567     		str	r5, [r4, #112]
 7012              	.LVL683:
 734:Core/Src/SEGGER_RTT.c **** }
 7013              		.loc 1 734 3 is_stmt 1 view .LVU2933
 734:Core/Src/SEGGER_RTT.c **** }
 7014              		.loc 1 734 3 is_stmt 0 view .LVU2934
 7015              	.LBE380:
 7016              	.LBE383:
 805:Core/Src/SEGGER_RTT.c ****   //
 7017              		.loc 1 805 3 is_stmt 1 view .LVU2935
 7018              		.syntax unified
 7019              	@ 805 "Core/Src/SEGGER_RTT.c" 1
 7020 0088 88F31188 		msr   basepri, r8  
 7021              		
 7022              	@ 0 "" 2
 7023              		.thumb
 7024              		.syntax unified
 7025              	.LBE386:
 805:Core/Src/SEGGER_RTT.c ****   //
 7026              		.loc 1 805 22 view .LVU2936
 807:Core/Src/SEGGER_RTT.c **** }
 7027              		.loc 1 807 3 view .LVU2937
 7028              	.LVL684:
 807:Core/Src/SEGGER_RTT.c **** }
 7029              		.loc 1 807 3 is_stmt 0 view .LVU2938
 7030              	.LBE389:
 7031              	.LBE392:
1441:Core/Src/SEGGER_RTT.c ****     r = (int)(unsigned char)c;
 7032              		.loc 1 1441 3 is_stmt 1 view .LVU2939
1441:Core/Src/SEGGER_RTT.c ****     r = (int)(unsigned char)c;
 7033              		.loc 1 1441 6 is_stmt 0 view .LVU2940
 7034 008c 012F     		cmp	r7, #1
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccs0vIiH.s 			page 195


 7035 008e CCD1     		bne	.L290
 7036              	.LVL685:
 7037              	.L280:
1442:Core/Src/SEGGER_RTT.c ****   } else {
 7038              		.loc 1 1442 5 is_stmt 1 view .LVU2941
1442:Core/Src/SEGGER_RTT.c ****   } else {
 7039              		.loc 1 1442 7 is_stmt 0 view .LVU2942
 7040 0090 9DF80700 		ldrb	r0, [sp, #7]	@ zero_extendqisi2
 7041              	.LVL686:
1446:Core/Src/SEGGER_RTT.c **** }
 7042              		.loc 1 1446 3 is_stmt 1 view .LVU2943
 7043              		.loc 1 1447 1 is_stmt 0 view .LVU2944
 7044 0094 02B0     		add	sp, sp, #8
 7045              		.cfi_remember_state
 7046              		.cfi_def_cfa_offset 32
 7047              		@ sp needed
 7048 0096 BDE8F087 		pop	{r4, r5, r6, r7, r8, r9, r10, pc}
 7049              	.LVL687:
 7050              	.L275:
 7051              		.cfi_restore_state
 7052              		.loc 1 1447 1 view .LVU2945
 7053 009a 03F0FF05 		and	r5, r3, #255
 7054              	.LBB393:
 7055              	.LBB390:
 7056              	.LBB387:
 7057              	.LBB384:
 7058              	.LBB381:
 7059              	.LBB378:
 674:Core/Src/SEGGER_RTT.c ****   pRing = (SEGGER_RTT_BUFFER_DOWN*)((char*)&_SEGGER_RTT.aDown[BufferIndex] + SEGGER_RTT_UNCACHED_OF
 7060              		.loc 1 674 3 is_stmt 1 view .LVU2946
 7061              	.LBB375:
 7062              	.LBI375:
 314:Core/Src/SEGGER_RTT.c ****   volatile SEGGER_RTT_CB* p;   // Volatile to make sure that compiler cannot change the order of ac
 7063              		.loc 1 314 13 view .LVU2947
 7064              	.LBB376:
 315:Core/Src/SEGGER_RTT.c ****   static const char _aInitStr[] = "\0\0\0\0\0\0TTR REGGES";  // Init complete ID string to make sur
 7065              		.loc 1 315 3 view .LVU2948
 316:Core/Src/SEGGER_RTT.c ****   unsigned i;
 7066              		.loc 1 316 3 view .LVU2949
 317:Core/Src/SEGGER_RTT.c ****   //
 7067              		.loc 1 317 3 view .LVU2950
 321:Core/Src/SEGGER_RTT.c ****   memset((SEGGER_RTT_CB*)p, 0, sizeof(_SEGGER_RTT));         // Make sure that the RTT CB is always
 7068              		.loc 1 321 3 view .LVU2951
 7069              	.LVL688:
 322:Core/Src/SEGGER_RTT.c ****   p->MaxNumUpBuffers    = SEGGER_RTT_MAX_NUM_UP_BUFFERS;
 7070              		.loc 1 322 3 view .LVU2952
 7071 009e 7822     		movs	r2, #120
 7072 00a0 2946     		mov	r1, r5
 7073 00a2 04F13000 		add	r0, r4, #48
 7074 00a6 FFF7FEFF 		bl	memset
 7075              	.LVL689:
 323:Core/Src/SEGGER_RTT.c ****   p->MaxNumDownBuffers  = SEGGER_RTT_MAX_NUM_DOWN_BUFFERS;
 7076              		.loc 1 323 3 view .LVU2953
 323:Core/Src/SEGGER_RTT.c ****   p->MaxNumDownBuffers  = SEGGER_RTT_MAX_NUM_DOWN_BUFFERS;
 7077              		.loc 1 323 25 is_stmt 0 view .LVU2954
 7078 00aa 0322     		movs	r2, #3
 7079 00ac 2261     		str	r2, [r4, #16]
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccs0vIiH.s 			page 196


 324:Core/Src/SEGGER_RTT.c ****   //
 7080              		.loc 1 324 3 is_stmt 1 view .LVU2955
 328:Core/Src/SEGGER_RTT.c ****   p->aUp[0].pBuffer       = _acUpBuffer;
 7081              		.loc 1 328 27 is_stmt 0 view .LVU2956
 7082 00ae 1C4B     		ldr	r3, .L294+4
 324:Core/Src/SEGGER_RTT.c ****   //
 7083              		.loc 1 324 25 view .LVU2957
 7084 00b0 6261     		str	r2, [r4, #20]
 328:Core/Src/SEGGER_RTT.c ****   p->aUp[0].pBuffer       = _acUpBuffer;
 7085              		.loc 1 328 3 is_stmt 1 view .LVU2958
 329:Core/Src/SEGGER_RTT.c ****   p->aUp[0].SizeOfBuffer  = BUFFER_SIZE_UP;
 7086              		.loc 1 329 27 is_stmt 0 view .LVU2959
 7087 00b2 1C4A     		ldr	r2, .L294+8
 328:Core/Src/SEGGER_RTT.c ****   p->aUp[0].pBuffer       = _acUpBuffer;
 7088              		.loc 1 328 27 view .LVU2960
 7089 00b4 A361     		str	r3, [r4, #24]
 329:Core/Src/SEGGER_RTT.c ****   p->aUp[0].SizeOfBuffer  = BUFFER_SIZE_UP;
 7090              		.loc 1 329 3 is_stmt 1 view .LVU2961
 329:Core/Src/SEGGER_RTT.c ****   p->aUp[0].SizeOfBuffer  = BUFFER_SIZE_UP;
 7091              		.loc 1 329 27 is_stmt 0 view .LVU2962
 7092 00b6 E261     		str	r2, [r4, #28]
 330:Core/Src/SEGGER_RTT.c ****   p->aUp[0].RdOff         = 0u;
 7093              		.loc 1 330 3 is_stmt 1 view .LVU2963
 330:Core/Src/SEGGER_RTT.c ****   p->aUp[0].RdOff         = 0u;
 7094              		.loc 1 330 27 is_stmt 0 view .LVU2964
 7095 00b8 4FF48062 		mov	r2, #1024
 7096 00bc 2262     		str	r2, [r4, #32]
 331:Core/Src/SEGGER_RTT.c ****   p->aUp[0].WrOff         = 0u;
 7097              		.loc 1 331 3 is_stmt 1 view .LVU2965
 331:Core/Src/SEGGER_RTT.c ****   p->aUp[0].WrOff         = 0u;
 7098              		.loc 1 331 27 is_stmt 0 view .LVU2966
 7099 00be A562     		str	r5, [r4, #40]
 332:Core/Src/SEGGER_RTT.c ****   p->aUp[0].Flags         = SEGGER_RTT_MODE_DEFAULT;
 7100              		.loc 1 332 3 is_stmt 1 view .LVU2967
 338:Core/Src/SEGGER_RTT.c ****   p->aDown[0].SizeOfBuffer  = BUFFER_SIZE_DOWN;
 7101              		.loc 1 338 29 is_stmt 0 view .LVU2968
 7102 00c0 194A     		ldr	r2, .L294+12
 332:Core/Src/SEGGER_RTT.c ****   p->aUp[0].Flags         = SEGGER_RTT_MODE_DEFAULT;
 7103              		.loc 1 332 27 view .LVU2969
 7104 00c2 6562     		str	r5, [r4, #36]
 333:Core/Src/SEGGER_RTT.c ****   //
 7105              		.loc 1 333 3 is_stmt 1 view .LVU2970
 333:Core/Src/SEGGER_RTT.c ****   //
 7106              		.loc 1 333 27 is_stmt 0 view .LVU2971
 7107 00c4 E562     		str	r5, [r4, #44]
 337:Core/Src/SEGGER_RTT.c ****   p->aDown[0].pBuffer       = _acDownBuffer;
 7108              		.loc 1 337 3 is_stmt 1 view .LVU2972
 337:Core/Src/SEGGER_RTT.c ****   p->aDown[0].pBuffer       = _acDownBuffer;
 7109              		.loc 1 337 29 is_stmt 0 view .LVU2973
 7110 00c6 2366     		str	r3, [r4, #96]
 338:Core/Src/SEGGER_RTT.c ****   p->aDown[0].SizeOfBuffer  = BUFFER_SIZE_DOWN;
 7111              		.loc 1 338 3 is_stmt 1 view .LVU2974
 339:Core/Src/SEGGER_RTT.c ****   p->aDown[0].RdOff         = 0u;
 7112              		.loc 1 339 29 is_stmt 0 view .LVU2975
 7113 00c8 1023     		movs	r3, #16
 338:Core/Src/SEGGER_RTT.c ****   p->aDown[0].SizeOfBuffer  = BUFFER_SIZE_DOWN;
 7114              		.loc 1 338 29 view .LVU2976
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccs0vIiH.s 			page 197


 7115 00ca 6266     		str	r2, [r4, #100]
 339:Core/Src/SEGGER_RTT.c ****   p->aDown[0].RdOff         = 0u;
 7116              		.loc 1 339 3 is_stmt 1 view .LVU2977
 339:Core/Src/SEGGER_RTT.c ****   p->aDown[0].RdOff         = 0u;
 7117              		.loc 1 339 29 is_stmt 0 view .LVU2978
 7118 00cc A366     		str	r3, [r4, #104]
 340:Core/Src/SEGGER_RTT.c ****   p->aDown[0].WrOff         = 0u;
 7119              		.loc 1 340 3 is_stmt 1 view .LVU2979
 340:Core/Src/SEGGER_RTT.c ****   p->aDown[0].WrOff         = 0u;
 7120              		.loc 1 340 29 is_stmt 0 view .LVU2980
 7121 00ce 2567     		str	r5, [r4, #112]
 341:Core/Src/SEGGER_RTT.c ****   p->aDown[0].Flags         = SEGGER_RTT_MODE_DEFAULT;
 7122              		.loc 1 341 3 is_stmt 1 view .LVU2981
 341:Core/Src/SEGGER_RTT.c ****   p->aDown[0].Flags         = SEGGER_RTT_MODE_DEFAULT;
 7123              		.loc 1 341 29 is_stmt 0 view .LVU2982
 7124 00d0 E566     		str	r5, [r4, #108]
 342:Core/Src/SEGGER_RTT.c ****   //
 7125              		.loc 1 342 3 is_stmt 1 view .LVU2983
 342:Core/Src/SEGGER_RTT.c ****   //
 7126              		.loc 1 342 29 is_stmt 0 view .LVU2984
 7127 00d2 6567     		str	r5, [r4, #116]
 348:Core/Src/SEGGER_RTT.c ****   for (i = 0; i < sizeof(_aInitStr) - 1; ++i) {
 7128              		.loc 1 348 3 is_stmt 1 view .LVU2985
 7129              		.syntax unified
 7130              	@ 348 "Core/Src/SEGGER_RTT.c" 1
 7131 00d4 BFF35F8F 		dmb
 7132              	
 7133              	@ 0 "" 2
 348:Core/Src/SEGGER_RTT.c ****   for (i = 0; i < sizeof(_aInitStr) - 1; ++i) {
 7134              		.loc 1 348 13 view .LVU2986
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 7135              		.loc 1 349 3 view .LVU2987
 7136              	.LVL690:
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 7137              		.loc 1 349 17 view .LVU2988
 350:Core/Src/SEGGER_RTT.c ****   }
 7138              		.loc 1 350 5 view .LVU2989
 350:Core/Src/SEGGER_RTT.c ****   }
 7139              		.loc 1 350 16 is_stmt 0 view .LVU2990
 7140              		.thumb
 7141              		.syntax unified
 7142 00d8 4523     		movs	r3, #69
 7143 00da 4722     		movs	r2, #71
 7144 00dc 5321     		movs	r1, #83
 7145 00de 2170     		strb	r1, [r4]
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 7146              		.loc 1 349 42 is_stmt 1 view .LVU2991
 7147              	.LVL691:
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 7148              		.loc 1 349 17 view .LVU2992
 350:Core/Src/SEGGER_RTT.c ****   }
 7149              		.loc 1 350 5 view .LVU2993
 350:Core/Src/SEGGER_RTT.c ****   }
 7150              		.loc 1 350 16 is_stmt 0 view .LVU2994
 7151 00e0 6370     		strb	r3, [r4, #1]
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 7152              		.loc 1 349 42 is_stmt 1 view .LVU2995
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccs0vIiH.s 			page 198


 7153              	.LVL692:
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 7154              		.loc 1 349 17 view .LVU2996
 350:Core/Src/SEGGER_RTT.c ****   }
 7155              		.loc 1 350 5 view .LVU2997
 350:Core/Src/SEGGER_RTT.c ****   }
 7156              		.loc 1 350 16 is_stmt 0 view .LVU2998
 7157 00e2 2021     		movs	r1, #32
 7158 00e4 A270     		strb	r2, [r4, #2]
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 7159              		.loc 1 349 42 is_stmt 1 view .LVU2999
 7160              	.LVL693:
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 7161              		.loc 1 349 17 view .LVU3000
 350:Core/Src/SEGGER_RTT.c ****   }
 7162              		.loc 1 350 5 view .LVU3001
 350:Core/Src/SEGGER_RTT.c ****   }
 7163              		.loc 1 350 16 is_stmt 0 view .LVU3002
 7164 00e6 E270     		strb	r2, [r4, #3]
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 7165              		.loc 1 349 42 is_stmt 1 view .LVU3003
 7166              	.LVL694:
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 7167              		.loc 1 349 17 view .LVU3004
 350:Core/Src/SEGGER_RTT.c ****   }
 7168              		.loc 1 350 5 view .LVU3005
 350:Core/Src/SEGGER_RTT.c ****   }
 7169              		.loc 1 350 16 is_stmt 0 view .LVU3006
 7170 00e8 2371     		strb	r3, [r4, #4]
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 7171              		.loc 1 349 42 is_stmt 1 view .LVU3007
 7172              	.LVL695:
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 7173              		.loc 1 349 17 view .LVU3008
 350:Core/Src/SEGGER_RTT.c ****   }
 7174              		.loc 1 350 5 view .LVU3009
 350:Core/Src/SEGGER_RTT.c ****   }
 7175              		.loc 1 350 16 is_stmt 0 view .LVU3010
 7176 00ea 5222     		movs	r2, #82
 7177 00ec 5423     		movs	r3, #84
 7178 00ee 6271     		strb	r2, [r4, #5]
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 7179              		.loc 1 349 42 is_stmt 1 view .LVU3011
 7180              	.LVL696:
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 7181              		.loc 1 349 17 view .LVU3012
 350:Core/Src/SEGGER_RTT.c ****   }
 7182              		.loc 1 350 5 view .LVU3013
 350:Core/Src/SEGGER_RTT.c ****   }
 7183              		.loc 1 350 16 is_stmt 0 view .LVU3014
 7184 00f0 A171     		strb	r1, [r4, #6]
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 7185              		.loc 1 349 42 is_stmt 1 view .LVU3015
 7186              	.LVL697:
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 7187              		.loc 1 349 17 view .LVU3016
 350:Core/Src/SEGGER_RTT.c ****   }
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccs0vIiH.s 			page 199


 7188              		.loc 1 350 5 view .LVU3017
 350:Core/Src/SEGGER_RTT.c ****   }
 7189              		.loc 1 350 16 is_stmt 0 view .LVU3018
 7190 00f2 E271     		strb	r2, [r4, #7]
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 7191              		.loc 1 349 42 is_stmt 1 view .LVU3019
 7192              	.LVL698:
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 7193              		.loc 1 349 17 view .LVU3020
 350:Core/Src/SEGGER_RTT.c ****   }
 7194              		.loc 1 350 5 view .LVU3021
 350:Core/Src/SEGGER_RTT.c ****   }
 7195              		.loc 1 350 16 is_stmt 0 view .LVU3022
 7196 00f4 2372     		strb	r3, [r4, #8]
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 7197              		.loc 1 349 42 is_stmt 1 view .LVU3023
 7198              	.LVL699:
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 7199              		.loc 1 349 17 view .LVU3024
 350:Core/Src/SEGGER_RTT.c ****   }
 7200              		.loc 1 350 5 view .LVU3025
 350:Core/Src/SEGGER_RTT.c ****   }
 7201              		.loc 1 350 16 is_stmt 0 view .LVU3026
 7202 00f6 6372     		strb	r3, [r4, #9]
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 7203              		.loc 1 349 42 is_stmt 1 view .LVU3027
 7204              	.LVL700:
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 7205              		.loc 1 349 17 view .LVU3028
 350:Core/Src/SEGGER_RTT.c ****   }
 7206              		.loc 1 350 5 view .LVU3029
 350:Core/Src/SEGGER_RTT.c ****   }
 7207              		.loc 1 350 16 is_stmt 0 view .LVU3030
 7208 00f8 A572     		strb	r5, [r4, #10]
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 7209              		.loc 1 349 42 is_stmt 1 view .LVU3031
 7210              	.LVL701:
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 7211              		.loc 1 349 17 view .LVU3032
 350:Core/Src/SEGGER_RTT.c ****   }
 7212              		.loc 1 350 5 view .LVU3033
 350:Core/Src/SEGGER_RTT.c ****   }
 7213              		.loc 1 350 16 is_stmt 0 view .LVU3034
 7214 00fa E572     		strb	r5, [r4, #11]
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 7215              		.loc 1 349 42 is_stmt 1 view .LVU3035
 7216              	.LVL702:
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 7217              		.loc 1 349 17 view .LVU3036
 350:Core/Src/SEGGER_RTT.c ****   }
 7218              		.loc 1 350 5 view .LVU3037
 350:Core/Src/SEGGER_RTT.c ****   }
 7219              		.loc 1 350 16 is_stmt 0 view .LVU3038
 7220 00fc 2573     		strb	r5, [r4, #12]
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 7221              		.loc 1 349 42 is_stmt 1 view .LVU3039
 7222              	.LVL703:
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccs0vIiH.s 			page 200


 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 7223              		.loc 1 349 17 view .LVU3040
 350:Core/Src/SEGGER_RTT.c ****   }
 7224              		.loc 1 350 5 view .LVU3041
 350:Core/Src/SEGGER_RTT.c ****   }
 7225              		.loc 1 350 16 is_stmt 0 view .LVU3042
 7226 00fe 6573     		strb	r5, [r4, #13]
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 7227              		.loc 1 349 42 is_stmt 1 view .LVU3043
 7228              	.LVL704:
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 7229              		.loc 1 349 17 view .LVU3044
 350:Core/Src/SEGGER_RTT.c ****   }
 7230              		.loc 1 350 5 view .LVU3045
 350:Core/Src/SEGGER_RTT.c ****   }
 7231              		.loc 1 350 16 is_stmt 0 view .LVU3046
 7232 0100 A573     		strb	r5, [r4, #14]
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 7233              		.loc 1 349 42 is_stmt 1 view .LVU3047
 7234              	.LVL705:
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 7235              		.loc 1 349 17 view .LVU3048
 350:Core/Src/SEGGER_RTT.c ****   }
 7236              		.loc 1 350 5 view .LVU3049
 350:Core/Src/SEGGER_RTT.c ****   }
 7237              		.loc 1 350 16 is_stmt 0 view .LVU3050
 7238 0102 E573     		strb	r5, [r4, #15]
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 7239              		.loc 1 349 42 is_stmt 1 view .LVU3051
 7240              	.LVL706:
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 7241              		.loc 1 349 17 view .LVU3052
 352:Core/Src/SEGGER_RTT.c **** }
 7242              		.loc 1 352 3 view .LVU3053
 7243              		.syntax unified
 7244              	@ 352 "Core/Src/SEGGER_RTT.c" 1
 7245 0104 BFF35F8F 		dmb
 7246              	
 7247              	@ 0 "" 2
 352:Core/Src/SEGGER_RTT.c **** }
 7248              		.loc 1 352 13 view .LVU3054
 7249              	.LVL707:
 352:Core/Src/SEGGER_RTT.c **** }
 7250              		.loc 1 352 13 is_stmt 0 view .LVU3055
 7251              		.thumb
 7252              		.syntax unified
 7253              	.LBE376:
 7254              	.LBE375:
 674:Core/Src/SEGGER_RTT.c ****   pRing = (SEGGER_RTT_BUFFER_DOWN*)((char*)&_SEGGER_RTT.aDown[BufferIndex] + SEGGER_RTT_UNCACHED_OF
 7255              		.loc 1 674 3 is_stmt 1 view .LVU3056
 7256              	.LBE378:
 674:Core/Src/SEGGER_RTT.c ****   pRing = (SEGGER_RTT_BUFFER_DOWN*)((char*)&_SEGGER_RTT.aDown[BufferIndex] + SEGGER_RTT_UNCACHED_OF
 7257              		.loc 1 674 9 view .LVU3057
 675:Core/Src/SEGGER_RTT.c ****   pBuffer = (unsigned char*)pData;
 7258              		.loc 1 675 3 view .LVU3058
 676:Core/Src/SEGGER_RTT.c ****   RdOff = pRing->RdOff;
 7259              		.loc 1 676 3 view .LVU3059
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccs0vIiH.s 			page 201


 677:Core/Src/SEGGER_RTT.c ****   WrOff = pRing->WrOff;
 7260              		.loc 1 677 3 view .LVU3060
 678:Core/Src/SEGGER_RTT.c ****   NumBytesRead = 0u;
 7261              		.loc 1 678 3 view .LVU3061
 678:Core/Src/SEGGER_RTT.c ****   NumBytesRead = 0u;
 7262              		.loc 1 678 9 is_stmt 0 view .LVU3062
 7263 0108 E66E     		ldr	r6, [r4, #108]
 7264              	.LVL708:
 679:Core/Src/SEGGER_RTT.c ****   //
 7265              		.loc 1 679 3 is_stmt 1 view .LVU3063
 683:Core/Src/SEGGER_RTT.c ****     NumBytesRem = pRing->SizeOfBuffer - RdOff;
 7266              		.loc 1 683 3 view .LVU3064
 711:Core/Src/SEGGER_RTT.c ****   NumBytesRem = MIN(NumBytesRem, BufferSize);
 7267              		.loc 1 711 3 view .LVU3065
 712:Core/Src/SEGGER_RTT.c ****   if (NumBytesRem > 0u) {
 7268              		.loc 1 712 3 view .LVU3066
 713:Core/Src/SEGGER_RTT.c ****     pSrc = (pRing->pBuffer + RdOff) + SEGGER_RTT_UNCACHED_OFF;
 7269              		.loc 1 713 3 view .LVU3067
 713:Core/Src/SEGGER_RTT.c ****     pSrc = (pRing->pBuffer + RdOff) + SEGGER_RTT_UNCACHED_OFF;
 7270              		.loc 1 713 6 is_stmt 0 view .LVU3068
 7271 010a AE42     		cmp	r6, r5
 7272 010c 8BD0     		beq	.L283
 7273 010e B1E7     		b	.L292
 7274              	.LVL709:
 7275              	.L293:
 697:Core/Src/SEGGER_RTT.c ****     BufferSize   -= NumBytesRem;
 7276              		.loc 1 697 18 view .LVU3069
 7277 0110 0DF10703 		add	r3, sp, #7
 7278              	.LVL710:
 697:Core/Src/SEGGER_RTT.c ****     BufferSize   -= NumBytesRem;
 7279              		.loc 1 697 18 view .LVU3070
 7280 0114 3B44     		add	r3, r3, r7
 7281              	.LVL711:
 724:Core/Src/SEGGER_RTT.c ****     pBuffer      += NumBytesRem;
 7282              		.loc 1 724 18 view .LVU3071
 7283 0116 1546     		mov	r5, r2
 7284              	.LVL712:
 724:Core/Src/SEGGER_RTT.c ****     pBuffer      += NumBytesRem;
 7285              		.loc 1 724 18 view .LVU3072
 7286 0118 0137     		adds	r7, r7, #1
 7287              	.LVL713:
 724:Core/Src/SEGGER_RTT.c ****     pBuffer      += NumBytesRem;
 7288              		.loc 1 724 18 view .LVU3073
 7289 011a B0E7     		b	.L284
 7290              	.L295:
 7291              		.align	2
 7292              	.L294:
 7293 011c 00000000 		.word	.LANCHOR0
 7294 0120 00000000 		.word	.LC0
 7295 0124 00000000 		.word	.LANCHOR1
 7296 0128 00000000 		.word	.LANCHOR2
 7297              	.LBE381:
 7298              	.LBE384:
 7299              	.LBE387:
 7300              	.LBE390:
 7301              	.LBE393:
 7302              		.cfi_endproc
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccs0vIiH.s 			page 202


 7303              	.LFE18:
 7305              		.section	.text.SEGGER_RTT_WaitKey,"ax",%progbits
 7306              		.align	1
 7307              		.p2align 2,,3
 7308              		.global	SEGGER_RTT_WaitKey
 7309              		.syntax unified
 7310              		.thumb
 7311              		.thumb_func
 7313              	SEGGER_RTT_WaitKey:
 7314              	.LFB19:
1448:Core/Src/SEGGER_RTT.c **** 
1449:Core/Src/SEGGER_RTT.c **** /*********************************************************************
1450:Core/Src/SEGGER_RTT.c **** *
1451:Core/Src/SEGGER_RTT.c **** *       SEGGER_RTT_WaitKey
1452:Core/Src/SEGGER_RTT.c **** *
1453:Core/Src/SEGGER_RTT.c **** *  Function description
1454:Core/Src/SEGGER_RTT.c **** *    Waits until at least one character is avaible in the SEGGER RTT buffer.
1455:Core/Src/SEGGER_RTT.c **** *    Once a character is available, it is read and this function returns.
1456:Core/Src/SEGGER_RTT.c **** *
1457:Core/Src/SEGGER_RTT.c **** *  Return value
1458:Core/Src/SEGGER_RTT.c **** *    >=0 -   Character which has been read.
1459:Core/Src/SEGGER_RTT.c **** *
1460:Core/Src/SEGGER_RTT.c **** *  Notes
1461:Core/Src/SEGGER_RTT.c **** *    (1) This function is only specified for accesses to RTT buffer 0
1462:Core/Src/SEGGER_RTT.c **** *    (2) This function is blocking if no character is present in RTT buffer
1463:Core/Src/SEGGER_RTT.c **** */
1464:Core/Src/SEGGER_RTT.c **** int SEGGER_RTT_WaitKey(void) {
 7315              		.loc 1 1464 30 is_stmt 1 view -0
 7316              		.cfi_startproc
 7317              		@ args = 0, pretend = 0, frame = 16
 7318              		@ frame_needed = 0, uses_anonymous_args = 0
 7319 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 7320              		.cfi_def_cfa_offset 36
 7321              		.cfi_offset 4, -36
 7322              		.cfi_offset 5, -32
 7323              		.cfi_offset 6, -28
 7324              		.cfi_offset 7, -24
 7325              		.cfi_offset 8, -20
 7326              		.cfi_offset 9, -16
 7327              		.cfi_offset 10, -12
 7328              		.cfi_offset 11, -8
 7329              		.cfi_offset 14, -4
 7330 0004 484C     		ldr	r4, .L317
 7331              	.LBB404:
 7332              	.LBB405:
 7333              	.LBB406:
 7334              	.LBB407:
 7335              	.LBB408:
 7336              	.LBB409:
 7337              	.LBB410:
 7338              	.LBB411:
 7339              	.LBB412:
 7340              	.LBB413:
 328:Core/Src/SEGGER_RTT.c ****   p->aUp[0].pBuffer       = _acUpBuffer;
 7341              		.loc 1 328 27 is_stmt 0 view .LVU3075
 7342 0006 494F     		ldr	r7, .L317+4
 7343              	.LBE413:
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccs0vIiH.s 			page 203


 7344              	.LBE412:
 7345              	.LBE411:
 7346              	.LBE410:
 7347              	.LBE409:
 7348              	.LBE408:
 7349              	.LBE407:
 7350              	.LBE406:
 7351              	.LBE405:
 7352              	.LBE404:
 7353              		.loc 1 1464 30 view .LVU3076
 7354 0008 85B0     		sub	sp, sp, #20
 7355              		.cfi_def_cfa_offset 56
 7356              	.LBB452:
 7357              	.LBB447:
 7358              	.LBB442:
 7359              	.LBB437:
 7360              	.LBB432:
 7361              	.LBB427:
 7362              	.LBB422:
 7363              	.LBB418:
 7364              	.LBB416:
 7365              	.LBB414:
 322:Core/Src/SEGGER_RTT.c ****   p->MaxNumUpBuffers    = SEGGER_RTT_MAX_NUM_UP_BUFFERS;
 7366              		.loc 1 322 3 view .LVU3077
 7367 000a 04F13008 		add	r8, r4, #48
 7368              	.L305:
 7369              	.LBE414:
 7370              	.LBE416:
 7371              	.LBE418:
 7372              	.LBE422:
 7373              	.LBE427:
 7374              	.LBE432:
 7375              	.LBE437:
 7376              	.LBE442:
 7377              	.LBE447:
 7378              	.LBE452:
1465:Core/Src/SEGGER_RTT.c ****   int r;
 7379              		.loc 1 1465 3 is_stmt 1 discriminator 1 view .LVU3078
1466:Core/Src/SEGGER_RTT.c **** 
1467:Core/Src/SEGGER_RTT.c ****   do {
 7380              		.loc 1 1467 3 discriminator 1 view .LVU3079
1468:Core/Src/SEGGER_RTT.c ****     r = SEGGER_RTT_GetKey();
 7381              		.loc 1 1468 5 discriminator 1 view .LVU3080
 7382              	.LBB453:
 7383              	.LBI404:
1436:Core/Src/SEGGER_RTT.c ****   char c;
 7384              		.loc 1 1436 5 discriminator 1 view .LVU3081
 7385              	.LBB448:
1437:Core/Src/SEGGER_RTT.c ****   int r;
 7386              		.loc 1 1437 3 discriminator 1 view .LVU3082
1438:Core/Src/SEGGER_RTT.c **** 
 7387              		.loc 1 1438 3 discriminator 1 view .LVU3083
1440:Core/Src/SEGGER_RTT.c ****   if (r == 1) {
 7388              		.loc 1 1440 3 discriminator 1 view .LVU3084
 7389              	.LVL714:
 7390              	.LBB443:
 7391              	.LBI406:
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccs0vIiH.s 			page 204


 794:Core/Src/SEGGER_RTT.c ****   unsigned NumBytesRead;
 7392              		.loc 1 794 10 discriminator 1 view .LVU3085
 7393              	.LBB438:
 795:Core/Src/SEGGER_RTT.c **** 
 7394              		.loc 1 795 3 discriminator 1 view .LVU3086
 7395              	.LBB433:
 797:Core/Src/SEGGER_RTT.c ****   //
 7396              		.loc 1 797 3 discriminator 1 view .LVU3087
 797:Core/Src/SEGGER_RTT.c ****   //
 7397              		.loc 1 797 3 discriminator 1 view .LVU3088
 7398              		.syntax unified
 7399              	@ 797 "Core/Src/SEGGER_RTT.c" 1
 7400 000e EFF3118A 		mrs   r10, basepri  
 7401 0012 4FF02001 		mov   r1, #32       
 7402 0016 81F31188 		msr   basepri, r1  
 7403              		
 7404              	@ 0 "" 2
 7405              	.LVL715:
 797:Core/Src/SEGGER_RTT.c ****   //
 7406              		.loc 1 797 20 discriminator 1 view .LVU3089
 801:Core/Src/SEGGER_RTT.c ****   //
 7407              		.loc 1 801 3 discriminator 1 view .LVU3090
 7408              		.thumb
 7409              		.syntax unified
 7410              	.LBB428:
 7411              	.LBI409:
 665:Core/Src/SEGGER_RTT.c ****   unsigned                NumBytesRem;
 7412              		.loc 1 665 10 discriminator 1 view .LVU3091
 7413              	.LBB423:
 666:Core/Src/SEGGER_RTT.c ****   unsigned                NumBytesRead;
 7414              		.loc 1 666 3 discriminator 1 view .LVU3092
 667:Core/Src/SEGGER_RTT.c ****   unsigned                RdOff;
 7415              		.loc 1 667 3 discriminator 1 view .LVU3093
 668:Core/Src/SEGGER_RTT.c ****   unsigned                WrOff;
 7416              		.loc 1 668 3 discriminator 1 view .LVU3094
 669:Core/Src/SEGGER_RTT.c ****   unsigned char*          pBuffer;
 7417              		.loc 1 669 3 discriminator 1 view .LVU3095
 670:Core/Src/SEGGER_RTT.c ****   SEGGER_RTT_BUFFER_DOWN* pRing;
 7418              		.loc 1 670 3 discriminator 1 view .LVU3096
 671:Core/Src/SEGGER_RTT.c ****   volatile char*          pSrc;
 7419              		.loc 1 671 3 discriminator 1 view .LVU3097
 672:Core/Src/SEGGER_RTT.c ****   //
 7420              		.loc 1 672 3 discriminator 1 view .LVU3098
 7421              	.LBB419:
 674:Core/Src/SEGGER_RTT.c ****   pRing = (SEGGER_RTT_BUFFER_DOWN*)((char*)&_SEGGER_RTT.aDown[BufferIndex] + SEGGER_RTT_UNCACHED_OF
 7422              		.loc 1 674 3 discriminator 1 view .LVU3099
 674:Core/Src/SEGGER_RTT.c ****   pRing = (SEGGER_RTT_BUFFER_DOWN*)((char*)&_SEGGER_RTT.aDown[BufferIndex] + SEGGER_RTT_UNCACHED_OF
 7423              		.loc 1 674 3 discriminator 1 view .LVU3100
 674:Core/Src/SEGGER_RTT.c ****   pRing = (SEGGER_RTT_BUFFER_DOWN*)((char*)&_SEGGER_RTT.aDown[BufferIndex] + SEGGER_RTT_UNCACHED_OF
 7424              		.loc 1 674 3 discriminator 1 view .LVU3101
 674:Core/Src/SEGGER_RTT.c ****   pRing = (SEGGER_RTT_BUFFER_DOWN*)((char*)&_SEGGER_RTT.aDown[BufferIndex] + SEGGER_RTT_UNCACHED_OF
 7425              		.loc 1 674 3 discriminator 1 view .LVU3102
 7426 001a 2378     		ldrb	r3, [r4]	@ zero_extendqisi2
 7427 001c 03F0FF05 		and	r5, r3, #255
 7428 0020 63B3     		cbz	r3, .L297
 7429              	.LBE419:
 678:Core/Src/SEGGER_RTT.c ****   NumBytesRead = 0u;
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccs0vIiH.s 			page 205


 7430              		.loc 1 678 9 is_stmt 0 view .LVU3103
 7431 0022 E66E     		ldr	r6, [r4, #108]
 677:Core/Src/SEGGER_RTT.c ****   WrOff = pRing->WrOff;
 7432              		.loc 1 677 9 view .LVU3104
 7433 0024 256F     		ldr	r5, [r4, #112]
 7434              	.LBB420:
 674:Core/Src/SEGGER_RTT.c ****   pRing = (SEGGER_RTT_BUFFER_DOWN*)((char*)&_SEGGER_RTT.aDown[BufferIndex] + SEGGER_RTT_UNCACHED_OF
 7435              		.loc 1 674 3 is_stmt 1 view .LVU3105
 7436              	.LBE420:
 674:Core/Src/SEGGER_RTT.c ****   pRing = (SEGGER_RTT_BUFFER_DOWN*)((char*)&_SEGGER_RTT.aDown[BufferIndex] + SEGGER_RTT_UNCACHED_OF
 7437              		.loc 1 674 9 view .LVU3106
 675:Core/Src/SEGGER_RTT.c ****   pBuffer = (unsigned char*)pData;
 7438              		.loc 1 675 3 view .LVU3107
 7439              	.LVL716:
 676:Core/Src/SEGGER_RTT.c ****   RdOff = pRing->RdOff;
 7440              		.loc 1 676 3 view .LVU3108
 677:Core/Src/SEGGER_RTT.c ****   WrOff = pRing->WrOff;
 7441              		.loc 1 677 3 view .LVU3109
 678:Core/Src/SEGGER_RTT.c ****   NumBytesRead = 0u;
 7442              		.loc 1 678 3 view .LVU3110
 679:Core/Src/SEGGER_RTT.c ****   //
 7443              		.loc 1 679 3 view .LVU3111
 683:Core/Src/SEGGER_RTT.c ****     NumBytesRem = pRing->SizeOfBuffer - RdOff;
 7444              		.loc 1 683 3 view .LVU3112
 683:Core/Src/SEGGER_RTT.c ****     NumBytesRem = pRing->SizeOfBuffer - RdOff;
 7445              		.loc 1 683 6 is_stmt 0 view .LVU3113
 7446 0026 B542     		cmp	r5, r6
 7447 0028 5CD9     		bls	.L299
 684:Core/Src/SEGGER_RTT.c ****     NumBytesRem = MIN(NumBytesRem, BufferSize);
 7448              		.loc 1 684 5 is_stmt 1 view .LVU3114
 686:Core/Src/SEGGER_RTT.c **** #if SEGGER_RTT_MEMCPY_USE_BYTELOOP
 7449              		.loc 1 686 18 is_stmt 0 view .LVU3115
 7450 002a D4E919B3 		ldrd	fp, r3, [r4, #100]
 684:Core/Src/SEGGER_RTT.c ****     NumBytesRem = MIN(NumBytesRem, BufferSize);
 7451              		.loc 1 684 17 view .LVU3116
 7452 002e A3EB0509 		sub	r9, r3, r5
 685:Core/Src/SEGGER_RTT.c ****     pSrc = (pRing->pBuffer + RdOff) + SEGGER_RTT_UNCACHED_OFF;
 7453              		.loc 1 685 17 view .LVU3117
 7454 0032 B9F1010F 		cmp	r9, #1
 7455 0036 28BF     		it	cs
 7456 0038 4FF00109 		movcs	r9, #1
 695:Core/Src/SEGGER_RTT.c ****     NumBytesRead += NumBytesRem;
 7457              		.loc 1 695 5 view .LVU3118
 7458 003c 4A46     		mov	r2, r9
 7459 003e 0BEB0501 		add	r1, fp, r5
 7460 0042 0DF10F00 		add	r0, sp, #15
 7461              	.LVL717:
 684:Core/Src/SEGGER_RTT.c ****     NumBytesRem = MIN(NumBytesRem, BufferSize);
 7462              		.loc 1 684 17 view .LVU3119
 7463 0046 0193     		str	r3, [sp, #4]
 685:Core/Src/SEGGER_RTT.c ****     pSrc = (pRing->pBuffer + RdOff) + SEGGER_RTT_UNCACHED_OFF;
 7464              		.loc 1 685 5 is_stmt 1 view .LVU3120
 7465              	.LVL718:
 686:Core/Src/SEGGER_RTT.c **** #if SEGGER_RTT_MEMCPY_USE_BYTELOOP
 7466              		.loc 1 686 5 view .LVU3121
 695:Core/Src/SEGGER_RTT.c ****     NumBytesRead += NumBytesRem;
 7467              		.loc 1 695 5 view .LVU3122
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccs0vIiH.s 			page 206


 7468 0048 FFF7FEFF 		bl	memcpy
 7469              	.LVL719:
 696:Core/Src/SEGGER_RTT.c ****     pBuffer      += NumBytesRem;
 7470              		.loc 1 696 5 view .LVU3123
 697:Core/Src/SEGGER_RTT.c ****     BufferSize   -= NumBytesRem;
 7471              		.loc 1 697 5 view .LVU3124
 698:Core/Src/SEGGER_RTT.c ****     RdOff        += NumBytesRem;
 7472              		.loc 1 698 5 view .LVU3125
 704:Core/Src/SEGGER_RTT.c ****       RdOff = 0u;
 7473              		.loc 1 704 8 is_stmt 0 view .LVU3126
 7474 004c 019B     		ldr	r3, [sp, #4]
 699:Core/Src/SEGGER_RTT.c **** #endif
 7475              		.loc 1 699 18 view .LVU3127
 7476 004e 05EB0900 		add	r0, r5, r9
 704:Core/Src/SEGGER_RTT.c ****       RdOff = 0u;
 7477              		.loc 1 704 8 view .LVU3128
 7478 0052 8342     		cmp	r3, r0
 698:Core/Src/SEGGER_RTT.c ****     RdOff        += NumBytesRem;
 7479              		.loc 1 698 18 view .LVU3129
 7480 0054 C9F10102 		rsb	r2, r9, #1
 7481              	.LVL720:
 699:Core/Src/SEGGER_RTT.c **** #endif
 7482              		.loc 1 699 5 is_stmt 1 view .LVU3130
 704:Core/Src/SEGGER_RTT.c ****       RdOff = 0u;
 7483              		.loc 1 704 5 view .LVU3131
 711:Core/Src/SEGGER_RTT.c ****   NumBytesRem = MIN(NumBytesRem, BufferSize);
 7484              		.loc 1 711 15 is_stmt 0 view .LVU3132
 7485 0058 14BF     		ite	ne
 7486 005a 361A     		subne	r6, r6, r0
 7487              	.LVL721:
 705:Core/Src/SEGGER_RTT.c ****     }
 7488              		.loc 1 705 13 view .LVU3133
 7489 005c 0020     		moveq	r0, #0
 7490              	.LVL722:
 711:Core/Src/SEGGER_RTT.c ****   NumBytesRem = MIN(NumBytesRem, BufferSize);
 7491              		.loc 1 711 3 is_stmt 1 view .LVU3134
 712:Core/Src/SEGGER_RTT.c ****   if (NumBytesRem > 0u) {
 7492              		.loc 1 712 3 view .LVU3135
 713:Core/Src/SEGGER_RTT.c ****     pSrc = (pRing->pBuffer + RdOff) + SEGGER_RTT_UNCACHED_OFF;
 7493              		.loc 1 713 3 view .LVU3136
 712:Core/Src/SEGGER_RTT.c ****   if (NumBytesRem > 0u) {
 7494              		.loc 1 712 15 is_stmt 0 view .LVU3137
 7495 005e B242     		cmp	r2, r6
 7496 0060 28BF     		it	cs
 7497 0062 3246     		movcs	r2, r6
 7498              	.LVL723:
 713:Core/Src/SEGGER_RTT.c ****     pSrc = (pRing->pBuffer + RdOff) + SEGGER_RTT_UNCACHED_OFF;
 7499              		.loc 1 713 6 view .LVU3138
 7500 0064 002A     		cmp	r2, #0
 7501 0066 58D1     		bne	.L315
 7502              	.LVL724:
 730:Core/Src/SEGGER_RTT.c ****     pRing->RdOff = RdOff;
 7503              		.loc 1 730 3 is_stmt 1 view .LVU3139
 730:Core/Src/SEGGER_RTT.c ****     pRing->RdOff = RdOff;
 7504              		.loc 1 730 6 is_stmt 0 view .LVU3140
 7505 0068 9D42     		cmp	r5, r3
 7506 006a 3DD0     		beq	.L306
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccs0vIiH.s 			page 207


 7507              	.LVL725:
 731:Core/Src/SEGGER_RTT.c ****   }
 7508              		.loc 1 731 5 is_stmt 1 view .LVU3141
 731:Core/Src/SEGGER_RTT.c ****   }
 7509              		.loc 1 731 18 is_stmt 0 view .LVU3142
 7510 006c 2067     		str	r0, [r4, #112]
 7511              	.LVL726:
 734:Core/Src/SEGGER_RTT.c **** }
 7512              		.loc 1 734 3 is_stmt 1 view .LVU3143
 734:Core/Src/SEGGER_RTT.c **** }
 7513              		.loc 1 734 3 is_stmt 0 view .LVU3144
 7514              	.LBE423:
 7515              	.LBE428:
 805:Core/Src/SEGGER_RTT.c ****   //
 7516              		.loc 1 805 3 is_stmt 1 view .LVU3145
 7517              		.syntax unified
 7518              	@ 805 "Core/Src/SEGGER_RTT.c" 1
 7519 006e 8AF31188 		msr   basepri, r10  
 7520              		
 7521              	@ 0 "" 2
 7522              		.thumb
 7523              		.syntax unified
 7524              	.LBE433:
 805:Core/Src/SEGGER_RTT.c ****   //
 7525              		.loc 1 805 22 view .LVU3146
 807:Core/Src/SEGGER_RTT.c **** }
 7526              		.loc 1 807 3 view .LVU3147
 7527              	.LVL727:
 807:Core/Src/SEGGER_RTT.c **** }
 7528              		.loc 1 807 3 is_stmt 0 view .LVU3148
 7529              	.LBE438:
 7530              	.LBE443:
1441:Core/Src/SEGGER_RTT.c ****     r = (int)(unsigned char)c;
 7531              		.loc 1 1441 3 is_stmt 1 view .LVU3149
1442:Core/Src/SEGGER_RTT.c ****   } else {
 7532              		.loc 1 1442 5 view .LVU3150
1442:Core/Src/SEGGER_RTT.c ****   } else {
 7533              		.loc 1 1442 7 is_stmt 0 view .LVU3151
 7534 0072 9DF80F00 		ldrb	r0, [sp, #15]	@ zero_extendqisi2
 7535              	.LVL728:
1446:Core/Src/SEGGER_RTT.c **** }
 7536              		.loc 1 1446 3 is_stmt 1 view .LVU3152
1446:Core/Src/SEGGER_RTT.c **** }
 7537              		.loc 1 1446 3 is_stmt 0 view .LVU3153
 7538              	.LBE448:
 7539              	.LBE453:
1469:Core/Src/SEGGER_RTT.c ****   } while (r < 0);
 7540              		.loc 1 1469 14 is_stmt 1 view .LVU3154
1470:Core/Src/SEGGER_RTT.c ****   return r;
 7541              		.loc 1 1470 3 view .LVU3155
1471:Core/Src/SEGGER_RTT.c **** }
 7542              		.loc 1 1471 1 is_stmt 0 view .LVU3156
 7543 0076 05B0     		add	sp, sp, #20
 7544              		.cfi_remember_state
 7545              		.cfi_def_cfa_offset 36
 7546              		@ sp needed
 7547 0078 BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccs0vIiH.s 			page 208


 7548              	.LVL729:
 7549              	.L297:
 7550              		.cfi_restore_state
 7551              	.LBB454:
 7552              	.LBB449:
 7553              	.LBB444:
 7554              	.LBB439:
 7555              	.LBB434:
 7556              	.LBB429:
 7557              	.LBB424:
 7558              	.LBB421:
 674:Core/Src/SEGGER_RTT.c ****   pRing = (SEGGER_RTT_BUFFER_DOWN*)((char*)&_SEGGER_RTT.aDown[BufferIndex] + SEGGER_RTT_UNCACHED_OF
 7559              		.loc 1 674 3 is_stmt 1 view .LVU3157
 7560              	.LBB417:
 7561              	.LBI412:
 314:Core/Src/SEGGER_RTT.c ****   volatile SEGGER_RTT_CB* p;   // Volatile to make sure that compiler cannot change the order of ac
 7562              		.loc 1 314 13 view .LVU3158
 7563              	.LBB415:
 315:Core/Src/SEGGER_RTT.c ****   static const char _aInitStr[] = "\0\0\0\0\0\0TTR REGGES";  // Init complete ID string to make sur
 7564              		.loc 1 315 3 view .LVU3159
 316:Core/Src/SEGGER_RTT.c ****   unsigned i;
 7565              		.loc 1 316 3 view .LVU3160
 317:Core/Src/SEGGER_RTT.c ****   //
 7566              		.loc 1 317 3 view .LVU3161
 321:Core/Src/SEGGER_RTT.c ****   memset((SEGGER_RTT_CB*)p, 0, sizeof(_SEGGER_RTT));         // Make sure that the RTT CB is always
 7567              		.loc 1 321 3 view .LVU3162
 322:Core/Src/SEGGER_RTT.c ****   p->MaxNumUpBuffers    = SEGGER_RTT_MAX_NUM_UP_BUFFERS;
 7568              		.loc 1 322 3 view .LVU3163
 7569 007c 2946     		mov	r1, r5
 7570 007e 7822     		movs	r2, #120
 7571 0080 4046     		mov	r0, r8
 7572 0082 FFF7FEFF 		bl	memset
 7573              	.LVL730:
 323:Core/Src/SEGGER_RTT.c ****   p->MaxNumDownBuffers  = SEGGER_RTT_MAX_NUM_DOWN_BUFFERS;
 7574              		.loc 1 323 3 view .LVU3164
 323:Core/Src/SEGGER_RTT.c ****   p->MaxNumDownBuffers  = SEGGER_RTT_MAX_NUM_DOWN_BUFFERS;
 7575              		.loc 1 323 25 is_stmt 0 view .LVU3165
 7576 0086 0323     		movs	r3, #3
 7577 0088 2361     		str	r3, [r4, #16]
 324:Core/Src/SEGGER_RTT.c ****   //
 7578              		.loc 1 324 3 is_stmt 1 view .LVU3166
 338:Core/Src/SEGGER_RTT.c ****   p->aDown[0].SizeOfBuffer  = BUFFER_SIZE_DOWN;
 7579              		.loc 1 338 29 is_stmt 0 view .LVU3167
 7580 008a 2949     		ldr	r1, .L317+8
 324:Core/Src/SEGGER_RTT.c ****   //
 7581              		.loc 1 324 25 view .LVU3168
 7582 008c 6361     		str	r3, [r4, #20]
 328:Core/Src/SEGGER_RTT.c ****   p->aUp[0].pBuffer       = _acUpBuffer;
 7583              		.loc 1 328 3 is_stmt 1 view .LVU3169
 330:Core/Src/SEGGER_RTT.c ****   p->aUp[0].RdOff         = 0u;
 7584              		.loc 1 330 27 is_stmt 0 view .LVU3170
 7585 008e 4FF48060 		mov	r0, #1024
 329:Core/Src/SEGGER_RTT.c ****   p->aUp[0].SizeOfBuffer  = BUFFER_SIZE_UP;
 7586              		.loc 1 329 27 view .LVU3171
 7587 0092 284B     		ldr	r3, .L317+12
 328:Core/Src/SEGGER_RTT.c ****   p->aUp[0].pBuffer       = _acUpBuffer;
 7588              		.loc 1 328 27 view .LVU3172
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccs0vIiH.s 			page 209


 7589 0094 A761     		str	r7, [r4, #24]
 329:Core/Src/SEGGER_RTT.c ****   p->aUp[0].SizeOfBuffer  = BUFFER_SIZE_UP;
 7590              		.loc 1 329 3 is_stmt 1 view .LVU3173
 339:Core/Src/SEGGER_RTT.c ****   p->aDown[0].RdOff         = 0u;
 7591              		.loc 1 339 29 is_stmt 0 view .LVU3174
 7592 0096 1022     		movs	r2, #16
 329:Core/Src/SEGGER_RTT.c ****   p->aUp[0].SizeOfBuffer  = BUFFER_SIZE_UP;
 7593              		.loc 1 329 27 view .LVU3175
 7594 0098 E361     		str	r3, [r4, #28]
 330:Core/Src/SEGGER_RTT.c ****   p->aUp[0].RdOff         = 0u;
 7595              		.loc 1 330 3 is_stmt 1 view .LVU3176
 330:Core/Src/SEGGER_RTT.c ****   p->aUp[0].RdOff         = 0u;
 7596              		.loc 1 330 27 is_stmt 0 view .LVU3177
 7597 009a 2062     		str	r0, [r4, #32]
 331:Core/Src/SEGGER_RTT.c ****   p->aUp[0].WrOff         = 0u;
 7598              		.loc 1 331 3 is_stmt 1 view .LVU3178
 331:Core/Src/SEGGER_RTT.c ****   p->aUp[0].WrOff         = 0u;
 7599              		.loc 1 331 27 is_stmt 0 view .LVU3179
 7600 009c A562     		str	r5, [r4, #40]
 332:Core/Src/SEGGER_RTT.c ****   p->aUp[0].Flags         = SEGGER_RTT_MODE_DEFAULT;
 7601              		.loc 1 332 3 is_stmt 1 view .LVU3180
 332:Core/Src/SEGGER_RTT.c ****   p->aUp[0].Flags         = SEGGER_RTT_MODE_DEFAULT;
 7602              		.loc 1 332 27 is_stmt 0 view .LVU3181
 7603 009e 6562     		str	r5, [r4, #36]
 333:Core/Src/SEGGER_RTT.c ****   //
 7604              		.loc 1 333 3 is_stmt 1 view .LVU3182
 333:Core/Src/SEGGER_RTT.c ****   //
 7605              		.loc 1 333 27 is_stmt 0 view .LVU3183
 7606 00a0 E562     		str	r5, [r4, #44]
 337:Core/Src/SEGGER_RTT.c ****   p->aDown[0].pBuffer       = _acDownBuffer;
 7607              		.loc 1 337 3 is_stmt 1 view .LVU3184
 337:Core/Src/SEGGER_RTT.c ****   p->aDown[0].pBuffer       = _acDownBuffer;
 7608              		.loc 1 337 29 is_stmt 0 view .LVU3185
 7609 00a2 2766     		str	r7, [r4, #96]
 338:Core/Src/SEGGER_RTT.c ****   p->aDown[0].SizeOfBuffer  = BUFFER_SIZE_DOWN;
 7610              		.loc 1 338 3 is_stmt 1 view .LVU3186
 338:Core/Src/SEGGER_RTT.c ****   p->aDown[0].SizeOfBuffer  = BUFFER_SIZE_DOWN;
 7611              		.loc 1 338 29 is_stmt 0 view .LVU3187
 7612 00a4 6166     		str	r1, [r4, #100]
 339:Core/Src/SEGGER_RTT.c ****   p->aDown[0].RdOff         = 0u;
 7613              		.loc 1 339 3 is_stmt 1 view .LVU3188
 339:Core/Src/SEGGER_RTT.c ****   p->aDown[0].RdOff         = 0u;
 7614              		.loc 1 339 29 is_stmt 0 view .LVU3189
 7615 00a6 A266     		str	r2, [r4, #104]
 340:Core/Src/SEGGER_RTT.c ****   p->aDown[0].WrOff         = 0u;
 7616              		.loc 1 340 3 is_stmt 1 view .LVU3190
 340:Core/Src/SEGGER_RTT.c ****   p->aDown[0].WrOff         = 0u;
 7617              		.loc 1 340 29 is_stmt 0 view .LVU3191
 7618 00a8 2567     		str	r5, [r4, #112]
 341:Core/Src/SEGGER_RTT.c ****   p->aDown[0].Flags         = SEGGER_RTT_MODE_DEFAULT;
 7619              		.loc 1 341 3 is_stmt 1 view .LVU3192
 341:Core/Src/SEGGER_RTT.c ****   p->aDown[0].Flags         = SEGGER_RTT_MODE_DEFAULT;
 7620              		.loc 1 341 29 is_stmt 0 view .LVU3193
 7621 00aa E566     		str	r5, [r4, #108]
 342:Core/Src/SEGGER_RTT.c ****   //
 7622              		.loc 1 342 3 is_stmt 1 view .LVU3194
 342:Core/Src/SEGGER_RTT.c ****   //
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccs0vIiH.s 			page 210


 7623              		.loc 1 342 29 is_stmt 0 view .LVU3195
 7624 00ac 6567     		str	r5, [r4, #116]
 348:Core/Src/SEGGER_RTT.c ****   for (i = 0; i < sizeof(_aInitStr) - 1; ++i) {
 7625              		.loc 1 348 3 is_stmt 1 view .LVU3196
 7626              		.syntax unified
 7627              	@ 348 "Core/Src/SEGGER_RTT.c" 1
 7628 00ae BFF35F8F 		dmb
 7629              	
 7630              	@ 0 "" 2
 348:Core/Src/SEGGER_RTT.c ****   for (i = 0; i < sizeof(_aInitStr) - 1; ++i) {
 7631              		.loc 1 348 13 view .LVU3197
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 7632              		.loc 1 349 3 view .LVU3198
 7633              	.LVL731:
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 7634              		.loc 1 349 17 view .LVU3199
 350:Core/Src/SEGGER_RTT.c ****   }
 7635              		.loc 1 350 5 view .LVU3200
 350:Core/Src/SEGGER_RTT.c ****   }
 7636              		.loc 1 350 16 is_stmt 0 view .LVU3201
 7637              		.thumb
 7638              		.syntax unified
 7639 00b2 4523     		movs	r3, #69
 7640 00b4 4721     		movs	r1, #71
 7641 00b6 5320     		movs	r0, #83
 7642 00b8 2070     		strb	r0, [r4]
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 7643              		.loc 1 349 42 is_stmt 1 view .LVU3202
 7644              	.LVL732:
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 7645              		.loc 1 349 17 view .LVU3203
 350:Core/Src/SEGGER_RTT.c ****   }
 7646              		.loc 1 350 5 view .LVU3204
 350:Core/Src/SEGGER_RTT.c ****   }
 7647              		.loc 1 350 16 is_stmt 0 view .LVU3205
 7648 00ba 5222     		movs	r2, #82
 7649 00bc 6370     		strb	r3, [r4, #1]
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 7650              		.loc 1 349 42 is_stmt 1 view .LVU3206
 7651              	.LVL733:
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 7652              		.loc 1 349 17 view .LVU3207
 350:Core/Src/SEGGER_RTT.c ****   }
 7653              		.loc 1 350 5 view .LVU3208
 350:Core/Src/SEGGER_RTT.c ****   }
 7654              		.loc 1 350 16 is_stmt 0 view .LVU3209
 7655 00be 2020     		movs	r0, #32
 7656 00c0 A170     		strb	r1, [r4, #2]
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 7657              		.loc 1 349 42 is_stmt 1 view .LVU3210
 7658              	.LVL734:
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 7659              		.loc 1 349 17 view .LVU3211
 350:Core/Src/SEGGER_RTT.c ****   }
 7660              		.loc 1 350 5 view .LVU3212
 350:Core/Src/SEGGER_RTT.c ****   }
 7661              		.loc 1 350 16 is_stmt 0 view .LVU3213
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccs0vIiH.s 			page 211


 7662 00c2 E170     		strb	r1, [r4, #3]
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 7663              		.loc 1 349 42 is_stmt 1 view .LVU3214
 7664              	.LVL735:
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 7665              		.loc 1 349 17 view .LVU3215
 350:Core/Src/SEGGER_RTT.c ****   }
 7666              		.loc 1 350 5 view .LVU3216
 350:Core/Src/SEGGER_RTT.c ****   }
 7667              		.loc 1 350 16 is_stmt 0 view .LVU3217
 7668 00c4 2371     		strb	r3, [r4, #4]
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 7669              		.loc 1 349 42 is_stmt 1 view .LVU3218
 7670              	.LVL736:
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 7671              		.loc 1 349 17 view .LVU3219
 350:Core/Src/SEGGER_RTT.c ****   }
 7672              		.loc 1 350 5 view .LVU3220
 350:Core/Src/SEGGER_RTT.c ****   }
 7673              		.loc 1 350 16 is_stmt 0 view .LVU3221
 7674 00c6 5423     		movs	r3, #84
 7675 00c8 6271     		strb	r2, [r4, #5]
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 7676              		.loc 1 349 42 is_stmt 1 view .LVU3222
 7677              	.LVL737:
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 7678              		.loc 1 349 17 view .LVU3223
 350:Core/Src/SEGGER_RTT.c ****   }
 7679              		.loc 1 350 5 view .LVU3224
 350:Core/Src/SEGGER_RTT.c ****   }
 7680              		.loc 1 350 16 is_stmt 0 view .LVU3225
 7681 00ca A071     		strb	r0, [r4, #6]
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 7682              		.loc 1 349 42 is_stmt 1 view .LVU3226
 7683              	.LVL738:
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 7684              		.loc 1 349 17 view .LVU3227
 350:Core/Src/SEGGER_RTT.c ****   }
 7685              		.loc 1 350 5 view .LVU3228
 350:Core/Src/SEGGER_RTT.c ****   }
 7686              		.loc 1 350 16 is_stmt 0 view .LVU3229
 7687 00cc E271     		strb	r2, [r4, #7]
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 7688              		.loc 1 349 42 is_stmt 1 view .LVU3230
 7689              	.LVL739:
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 7690              		.loc 1 349 17 view .LVU3231
 350:Core/Src/SEGGER_RTT.c ****   }
 7691              		.loc 1 350 5 view .LVU3232
 350:Core/Src/SEGGER_RTT.c ****   }
 7692              		.loc 1 350 16 is_stmt 0 view .LVU3233
 7693 00ce 2372     		strb	r3, [r4, #8]
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 7694              		.loc 1 349 42 is_stmt 1 view .LVU3234
 7695              	.LVL740:
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 7696              		.loc 1 349 17 view .LVU3235
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccs0vIiH.s 			page 212


 350:Core/Src/SEGGER_RTT.c ****   }
 7697              		.loc 1 350 5 view .LVU3236
 350:Core/Src/SEGGER_RTT.c ****   }
 7698              		.loc 1 350 16 is_stmt 0 view .LVU3237
 7699 00d0 6372     		strb	r3, [r4, #9]
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 7700              		.loc 1 349 42 is_stmt 1 view .LVU3238
 7701              	.LVL741:
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 7702              		.loc 1 349 17 view .LVU3239
 350:Core/Src/SEGGER_RTT.c ****   }
 7703              		.loc 1 350 5 view .LVU3240
 350:Core/Src/SEGGER_RTT.c ****   }
 7704              		.loc 1 350 16 is_stmt 0 view .LVU3241
 7705 00d2 A572     		strb	r5, [r4, #10]
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 7706              		.loc 1 349 42 is_stmt 1 view .LVU3242
 7707              	.LVL742:
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 7708              		.loc 1 349 17 view .LVU3243
 350:Core/Src/SEGGER_RTT.c ****   }
 7709              		.loc 1 350 5 view .LVU3244
 350:Core/Src/SEGGER_RTT.c ****   }
 7710              		.loc 1 350 16 is_stmt 0 view .LVU3245
 7711 00d4 E572     		strb	r5, [r4, #11]
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 7712              		.loc 1 349 42 is_stmt 1 view .LVU3246
 7713              	.LVL743:
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 7714              		.loc 1 349 17 view .LVU3247
 350:Core/Src/SEGGER_RTT.c ****   }
 7715              		.loc 1 350 5 view .LVU3248
 350:Core/Src/SEGGER_RTT.c ****   }
 7716              		.loc 1 350 16 is_stmt 0 view .LVU3249
 7717 00d6 2573     		strb	r5, [r4, #12]
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 7718              		.loc 1 349 42 is_stmt 1 view .LVU3250
 7719              	.LVL744:
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 7720              		.loc 1 349 17 view .LVU3251
 350:Core/Src/SEGGER_RTT.c ****   }
 7721              		.loc 1 350 5 view .LVU3252
 350:Core/Src/SEGGER_RTT.c ****   }
 7722              		.loc 1 350 16 is_stmt 0 view .LVU3253
 7723 00d8 6573     		strb	r5, [r4, #13]
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 7724              		.loc 1 349 42 is_stmt 1 view .LVU3254
 7725              	.LVL745:
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 7726              		.loc 1 349 17 view .LVU3255
 350:Core/Src/SEGGER_RTT.c ****   }
 7727              		.loc 1 350 5 view .LVU3256
 350:Core/Src/SEGGER_RTT.c ****   }
 7728              		.loc 1 350 16 is_stmt 0 view .LVU3257
 7729 00da A573     		strb	r5, [r4, #14]
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 7730              		.loc 1 349 42 is_stmt 1 view .LVU3258
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccs0vIiH.s 			page 213


 7731              	.LVL746:
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 7732              		.loc 1 349 17 view .LVU3259
 350:Core/Src/SEGGER_RTT.c ****   }
 7733              		.loc 1 350 5 view .LVU3260
 350:Core/Src/SEGGER_RTT.c ****   }
 7734              		.loc 1 350 16 is_stmt 0 view .LVU3261
 7735 00dc E573     		strb	r5, [r4, #15]
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 7736              		.loc 1 349 42 is_stmt 1 view .LVU3262
 7737              	.LVL747:
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 7738              		.loc 1 349 17 view .LVU3263
 352:Core/Src/SEGGER_RTT.c **** }
 7739              		.loc 1 352 3 view .LVU3264
 7740              		.syntax unified
 7741              	@ 352 "Core/Src/SEGGER_RTT.c" 1
 7742 00de BFF35F8F 		dmb
 7743              	
 7744              	@ 0 "" 2
 352:Core/Src/SEGGER_RTT.c **** }
 7745              		.loc 1 352 13 view .LVU3265
 7746              	.LVL748:
 352:Core/Src/SEGGER_RTT.c **** }
 7747              		.loc 1 352 13 is_stmt 0 view .LVU3266
 7748              		.thumb
 7749              		.syntax unified
 7750              	.LBE415:
 7751              	.LBE417:
 674:Core/Src/SEGGER_RTT.c ****   pRing = (SEGGER_RTT_BUFFER_DOWN*)((char*)&_SEGGER_RTT.aDown[BufferIndex] + SEGGER_RTT_UNCACHED_OF
 7752              		.loc 1 674 3 is_stmt 1 view .LVU3267
 7753              	.LBE421:
 674:Core/Src/SEGGER_RTT.c ****   pRing = (SEGGER_RTT_BUFFER_DOWN*)((char*)&_SEGGER_RTT.aDown[BufferIndex] + SEGGER_RTT_UNCACHED_OF
 7754              		.loc 1 674 9 view .LVU3268
 675:Core/Src/SEGGER_RTT.c ****   pBuffer = (unsigned char*)pData;
 7755              		.loc 1 675 3 view .LVU3269
 676:Core/Src/SEGGER_RTT.c ****   RdOff = pRing->RdOff;
 7756              		.loc 1 676 3 view .LVU3270
 677:Core/Src/SEGGER_RTT.c ****   WrOff = pRing->WrOff;
 7757              		.loc 1 677 3 view .LVU3271
 678:Core/Src/SEGGER_RTT.c ****   NumBytesRead = 0u;
 7758              		.loc 1 678 3 view .LVU3272
 678:Core/Src/SEGGER_RTT.c ****   NumBytesRead = 0u;
 7759              		.loc 1 678 9 is_stmt 0 view .LVU3273
 7760 00e2 E66E     		ldr	r6, [r4, #108]
 7761              	.LVL749:
 679:Core/Src/SEGGER_RTT.c ****   //
 7762              		.loc 1 679 3 is_stmt 1 view .LVU3274
 683:Core/Src/SEGGER_RTT.c ****     NumBytesRem = pRing->SizeOfBuffer - RdOff;
 7763              		.loc 1 683 3 view .LVU3275
 7764              	.L299:
 711:Core/Src/SEGGER_RTT.c ****   NumBytesRem = MIN(NumBytesRem, BufferSize);
 7765              		.loc 1 711 3 view .LVU3276
 712:Core/Src/SEGGER_RTT.c ****   if (NumBytesRem > 0u) {
 7766              		.loc 1 712 3 view .LVU3277
 713:Core/Src/SEGGER_RTT.c ****     pSrc = (pRing->pBuffer + RdOff) + SEGGER_RTT_UNCACHED_OFF;
 7767              		.loc 1 713 3 view .LVU3278
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccs0vIiH.s 			page 214


 713:Core/Src/SEGGER_RTT.c ****     pSrc = (pRing->pBuffer + RdOff) + SEGGER_RTT_UNCACHED_OFF;
 7768              		.loc 1 713 6 is_stmt 0 view .LVU3279
 7769 00e4 AE42     		cmp	r6, r5
 7770 00e6 02D1     		bne	.L316
 7771              	.LVL750:
 7772              	.L306:
 734:Core/Src/SEGGER_RTT.c **** }
 7773              		.loc 1 734 3 is_stmt 1 view .LVU3280
 734:Core/Src/SEGGER_RTT.c **** }
 7774              		.loc 1 734 3 is_stmt 0 view .LVU3281
 7775              	.LBE424:
 7776              	.LBE429:
 805:Core/Src/SEGGER_RTT.c ****   //
 7777              		.loc 1 805 3 is_stmt 1 view .LVU3282
 7778              		.syntax unified
 7779              	@ 805 "Core/Src/SEGGER_RTT.c" 1
 7780 00e8 8AF31188 		msr   basepri, r10  
 7781              		
 7782              	@ 0 "" 2
 7783              		.thumb
 7784              		.syntax unified
 7785              	.LBE434:
 805:Core/Src/SEGGER_RTT.c ****   //
 7786              		.loc 1 805 22 view .LVU3283
 807:Core/Src/SEGGER_RTT.c **** }
 7787              		.loc 1 807 3 view .LVU3284
 7788              	.LVL751:
 807:Core/Src/SEGGER_RTT.c **** }
 7789              		.loc 1 807 3 is_stmt 0 view .LVU3285
 7790              	.LBE439:
 7791              	.LBE444:
1441:Core/Src/SEGGER_RTT.c ****     r = (int)(unsigned char)c;
 7792              		.loc 1 1441 3 is_stmt 1 view .LVU3286
1446:Core/Src/SEGGER_RTT.c **** }
 7793              		.loc 1 1446 3 view .LVU3287
1446:Core/Src/SEGGER_RTT.c **** }
 7794              		.loc 1 1446 3 is_stmt 0 view .LVU3288
 7795              	.LBE449:
 7796              	.LBE454:
1469:Core/Src/SEGGER_RTT.c ****   return r;
 7797              		.loc 1 1469 14 is_stmt 1 view .LVU3289
 7798 00ec 8FE7     		b	.L305
 7799              	.LVL752:
 7800              	.L316:
 7801              	.LBB455:
 7802              	.LBB450:
 7803              	.LBB445:
 7804              	.LBB440:
 7805              	.LBB435:
 7806              	.LBB430:
 7807              	.LBB425:
 686:Core/Src/SEGGER_RTT.c **** #if SEGGER_RTT_MEMCPY_USE_BYTELOOP
 7808              		.loc 1 686 18 is_stmt 0 view .LVU3290
 7809 00ee D4F864B0 		ldr	fp, [r4, #100]
 7810 00f2 4FF00109 		mov	r9, #1
 676:Core/Src/SEGGER_RTT.c ****   RdOff = pRing->RdOff;
 7811              		.loc 1 676 11 view .LVU3291
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccs0vIiH.s 			page 215


 7812 00f6 0DF10F03 		add	r3, sp, #15
 7813              	.LVL753:
 7814              	.L307:
 714:Core/Src/SEGGER_RTT.c **** #if SEGGER_RTT_MEMCPY_USE_BYTELOOP
 7815              		.loc 1 714 5 is_stmt 1 view .LVU3292
 723:Core/Src/SEGGER_RTT.c ****     NumBytesRead += NumBytesRem;
 7816              		.loc 1 723 5 view .LVU3293
 7817 00fa 1BF80520 		ldrb	r2, [fp, r5]	@ zero_extendqisi2
 7818 00fe 1A70     		strb	r2, [r3]
 724:Core/Src/SEGGER_RTT.c ****     pBuffer      += NumBytesRem;
 7819              		.loc 1 724 5 view .LVU3294
 725:Core/Src/SEGGER_RTT.c ****     BufferSize   -= NumBytesRem;
 7820              		.loc 1 725 5 view .LVU3295
 726:Core/Src/SEGGER_RTT.c ****     RdOff        += NumBytesRem;
 7821              		.loc 1 726 5 view .LVU3296
 727:Core/Src/SEGGER_RTT.c **** #endif
 7822              		.loc 1 727 5 view .LVU3297
 7823              	.LVL754:
 730:Core/Src/SEGGER_RTT.c ****     pRing->RdOff = RdOff;
 7824              		.loc 1 730 3 view .LVU3298
 731:Core/Src/SEGGER_RTT.c ****   }
 7825              		.loc 1 731 5 view .LVU3299
 727:Core/Src/SEGGER_RTT.c **** #endif
 7826              		.loc 1 727 18 is_stmt 0 view .LVU3300
 7827 0100 0135     		adds	r5, r5, #1
 7828              	.LVL755:
 731:Core/Src/SEGGER_RTT.c ****   }
 7829              		.loc 1 731 18 view .LVU3301
 7830 0102 2567     		str	r5, [r4, #112]
 7831              	.LVL756:
 734:Core/Src/SEGGER_RTT.c **** }
 7832              		.loc 1 734 3 is_stmt 1 view .LVU3302
 734:Core/Src/SEGGER_RTT.c **** }
 7833              		.loc 1 734 3 is_stmt 0 view .LVU3303
 7834              	.LBE425:
 7835              	.LBE430:
 805:Core/Src/SEGGER_RTT.c ****   //
 7836              		.loc 1 805 3 is_stmt 1 view .LVU3304
 7837              		.syntax unified
 7838              	@ 805 "Core/Src/SEGGER_RTT.c" 1
 7839 0104 8AF31188 		msr   basepri, r10  
 7840              		
 7841              	@ 0 "" 2
 7842              		.thumb
 7843              		.syntax unified
 7844              	.LBE435:
 805:Core/Src/SEGGER_RTT.c ****   //
 7845              		.loc 1 805 22 view .LVU3305
 807:Core/Src/SEGGER_RTT.c **** }
 7846              		.loc 1 807 3 view .LVU3306
 7847              	.LVL757:
 807:Core/Src/SEGGER_RTT.c **** }
 7848              		.loc 1 807 3 is_stmt 0 view .LVU3307
 7849              	.LBE440:
 7850              	.LBE445:
1441:Core/Src/SEGGER_RTT.c ****     r = (int)(unsigned char)c;
 7851              		.loc 1 1441 3 is_stmt 1 view .LVU3308
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccs0vIiH.s 			page 216


1441:Core/Src/SEGGER_RTT.c ****     r = (int)(unsigned char)c;
 7852              		.loc 1 1441 6 is_stmt 0 view .LVU3309
 7853 0108 B9F1010F 		cmp	r9, #1
 7854 010c 7FF47FAF 		bne	.L305
1442:Core/Src/SEGGER_RTT.c ****   } else {
 7855              		.loc 1 1442 5 is_stmt 1 view .LVU3310
1442:Core/Src/SEGGER_RTT.c ****   } else {
 7856              		.loc 1 1442 7 is_stmt 0 view .LVU3311
 7857 0110 9DF80F00 		ldrb	r0, [sp, #15]	@ zero_extendqisi2
 7858              	.LVL758:
1446:Core/Src/SEGGER_RTT.c **** }
 7859              		.loc 1 1446 3 is_stmt 1 view .LVU3312
1446:Core/Src/SEGGER_RTT.c **** }
 7860              		.loc 1 1446 3 is_stmt 0 view .LVU3313
 7861              	.LBE450:
 7862              	.LBE455:
1469:Core/Src/SEGGER_RTT.c ****   return r;
 7863              		.loc 1 1469 14 is_stmt 1 view .LVU3314
1470:Core/Src/SEGGER_RTT.c **** }
 7864              		.loc 1 1470 3 view .LVU3315
 7865              		.loc 1 1471 1 is_stmt 0 view .LVU3316
 7866 0114 05B0     		add	sp, sp, #20
 7867              		.cfi_remember_state
 7868              		.cfi_def_cfa_offset 36
 7869              		@ sp needed
 7870 0116 BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 7871              	.LVL759:
 7872              	.L315:
 7873              		.cfi_restore_state
 7874              	.LBB456:
 7875              	.LBB451:
 7876              	.LBB446:
 7877              	.LBB441:
 7878              	.LBB436:
 7879              	.LBB431:
 7880              	.LBB426:
 697:Core/Src/SEGGER_RTT.c ****     BufferSize   -= NumBytesRem;
 7881              		.loc 1 697 18 view .LVU3317
 7882 011a 0DF10F03 		add	r3, sp, #15
 7883              	.LVL760:
 697:Core/Src/SEGGER_RTT.c ****     BufferSize   -= NumBytesRem;
 7884              		.loc 1 697 18 view .LVU3318
 7885 011e 4B44     		add	r3, r3, r9
 7886              	.LVL761:
 724:Core/Src/SEGGER_RTT.c ****     pBuffer      += NumBytesRem;
 7887              		.loc 1 724 18 view .LVU3319
 7888 0120 0546     		mov	r5, r0
 7889              	.LVL762:
 724:Core/Src/SEGGER_RTT.c ****     pBuffer      += NumBytesRem;
 7890              		.loc 1 724 18 view .LVU3320
 7891 0122 09F10109 		add	r9, r9, #1
 7892              	.LVL763:
 724:Core/Src/SEGGER_RTT.c ****     pBuffer      += NumBytesRem;
 7893              		.loc 1 724 18 view .LVU3321
 7894 0126 E8E7     		b	.L307
 7895              	.L318:
 7896              		.align	2
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccs0vIiH.s 			page 217


 7897              	.L317:
 7898 0128 00000000 		.word	.LANCHOR0
 7899 012c 00000000 		.word	.LC0
 7900 0130 00000000 		.word	.LANCHOR2
 7901 0134 00000000 		.word	.LANCHOR1
 7902              	.LBE426:
 7903              	.LBE431:
 7904              	.LBE436:
 7905              	.LBE441:
 7906              	.LBE446:
 7907              	.LBE451:
 7908              	.LBE456:
 7909              		.cfi_endproc
 7910              	.LFE19:
 7912              		.section	.text.SEGGER_RTT_HasKey,"ax",%progbits
 7913              		.align	1
 7914              		.p2align 2,,3
 7915              		.global	SEGGER_RTT_HasKey
 7916              		.syntax unified
 7917              		.thumb
 7918              		.thumb_func
 7920              	SEGGER_RTT_HasKey:
 7921              	.LFB20:
1472:Core/Src/SEGGER_RTT.c **** 
1473:Core/Src/SEGGER_RTT.c **** /*********************************************************************
1474:Core/Src/SEGGER_RTT.c **** *
1475:Core/Src/SEGGER_RTT.c **** *       SEGGER_RTT_HasKey
1476:Core/Src/SEGGER_RTT.c **** *
1477:Core/Src/SEGGER_RTT.c **** *  Function description
1478:Core/Src/SEGGER_RTT.c **** *    Checks if at least one character for reading is available in the SEGGER RTT buffer.
1479:Core/Src/SEGGER_RTT.c **** *
1480:Core/Src/SEGGER_RTT.c **** *  Return value
1481:Core/Src/SEGGER_RTT.c **** *    == 0 -     No characters are available to read.
1482:Core/Src/SEGGER_RTT.c **** *    == 1 -     At least one character is available.
1483:Core/Src/SEGGER_RTT.c **** *
1484:Core/Src/SEGGER_RTT.c **** *  Notes
1485:Core/Src/SEGGER_RTT.c **** *    (1) This function is only specified for accesses to RTT buffer 0
1486:Core/Src/SEGGER_RTT.c **** */
1487:Core/Src/SEGGER_RTT.c **** int SEGGER_RTT_HasKey(void) {
 7922              		.loc 1 1487 29 is_stmt 1 view -0
 7923              		.cfi_startproc
 7924              		@ args = 0, pretend = 0, frame = 0
 7925              		@ frame_needed = 0, uses_anonymous_args = 0
1488:Core/Src/SEGGER_RTT.c ****   SEGGER_RTT_BUFFER_DOWN* pRing;
 7926              		.loc 1 1488 3 view .LVU3323
1489:Core/Src/SEGGER_RTT.c ****   unsigned RdOff;
 7927              		.loc 1 1489 3 view .LVU3324
1490:Core/Src/SEGGER_RTT.c ****   int r;
 7928              		.loc 1 1490 3 view .LVU3325
 7929              	.LBB460:
1491:Core/Src/SEGGER_RTT.c **** 
1492:Core/Src/SEGGER_RTT.c ****   INIT();
 7930              		.loc 1 1492 3 view .LVU3326
 7931              		.loc 1 1492 3 view .LVU3327
 7932              	.LVL764:
 7933              		.loc 1 1492 3 view .LVU3328
 7934              		.loc 1 1492 3 view .LVU3329
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccs0vIiH.s 			page 218


 7935              	.LBE460:
1487:Core/Src/SEGGER_RTT.c ****   SEGGER_RTT_BUFFER_DOWN* pRing;
 7936              		.loc 1 1487 29 is_stmt 0 view .LVU3330
 7937 0000 38B5     		push	{r3, r4, r5, lr}
 7938              		.cfi_def_cfa_offset 16
 7939              		.cfi_offset 3, -16
 7940              		.cfi_offset 4, -12
 7941              		.cfi_offset 5, -8
 7942              		.cfi_offset 14, -4
 7943              	.LBB463:
 7944              		.loc 1 1492 3 view .LVU3331
 7945 0002 224C     		ldr	r4, .L323
 7946 0004 2378     		ldrb	r3, [r4]	@ zero_extendqisi2
 7947 0006 2BB1     		cbz	r3, .L320
 7948              		.loc 1 1492 3 is_stmt 1 view .LVU3332
 7949              	.LBE463:
 7950              		.loc 1 1492 9 view .LVU3333
1493:Core/Src/SEGGER_RTT.c ****   pRing = (SEGGER_RTT_BUFFER_DOWN*)((char*)&_SEGGER_RTT.aDown[0] + SEGGER_RTT_UNCACHED_OFF);  // Ac
 7951              		.loc 1 1493 3 view .LVU3334
 7952              	.LVL765:
1494:Core/Src/SEGGER_RTT.c ****   RdOff = pRing->RdOff;
 7953              		.loc 1 1494 3 view .LVU3335
1495:Core/Src/SEGGER_RTT.c ****   if (RdOff != pRing->WrOff) {
 7954              		.loc 1 1495 3 view .LVU3336
1494:Core/Src/SEGGER_RTT.c ****   RdOff = pRing->RdOff;
 7955              		.loc 1 1494 9 is_stmt 0 view .LVU3337
 7956 0008 256F     		ldr	r5, [r4, #112]
 7957              		.loc 1 1495 21 view .LVU3338
 7958 000a E06E     		ldr	r0, [r4, #108]
 7959              	.LVL766:
1496:Core/Src/SEGGER_RTT.c ****     r = 1;
1497:Core/Src/SEGGER_RTT.c ****   } else {
1498:Core/Src/SEGGER_RTT.c ****     r = 0;
1499:Core/Src/SEGGER_RTT.c ****   }
1500:Core/Src/SEGGER_RTT.c ****   return r;
 7960              		.loc 1 1500 3 is_stmt 1 view .LVU3339
1501:Core/Src/SEGGER_RTT.c **** }
 7961              		.loc 1 1501 1 is_stmt 0 view .LVU3340
 7962 000c 401B     		subs	r0, r0, r5
 7963              	.LVL767:
 7964              		.loc 1 1501 1 view .LVU3341
 7965 000e 18BF     		it	ne
 7966 0010 0120     		movne	r0, #1
 7967 0012 38BD     		pop	{r3, r4, r5, pc}
 7968              	.LVL768:
 7969              	.L320:
 7970              		.loc 1 1501 1 view .LVU3342
 7971 0014 03F0FF05 		and	r5, r3, #255
 7972              	.LBB464:
1492:Core/Src/SEGGER_RTT.c ****   pRing = (SEGGER_RTT_BUFFER_DOWN*)((char*)&_SEGGER_RTT.aDown[0] + SEGGER_RTT_UNCACHED_OFF);  // Ac
 7973              		.loc 1 1492 3 is_stmt 1 view .LVU3343
 7974              	.LBB461:
 7975              	.LBI461:
 314:Core/Src/SEGGER_RTT.c ****   volatile SEGGER_RTT_CB* p;   // Volatile to make sure that compiler cannot change the order of ac
 7976              		.loc 1 314 13 view .LVU3344
 7977              	.LBB462:
 315:Core/Src/SEGGER_RTT.c ****   static const char _aInitStr[] = "\0\0\0\0\0\0TTR REGGES";  // Init complete ID string to make sur
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccs0vIiH.s 			page 219


 7978              		.loc 1 315 3 view .LVU3345
 316:Core/Src/SEGGER_RTT.c ****   unsigned i;
 7979              		.loc 1 316 3 view .LVU3346
 317:Core/Src/SEGGER_RTT.c ****   //
 7980              		.loc 1 317 3 view .LVU3347
 321:Core/Src/SEGGER_RTT.c ****   memset((SEGGER_RTT_CB*)p, 0, sizeof(_SEGGER_RTT));         // Make sure that the RTT CB is always
 7981              		.loc 1 321 3 view .LVU3348
 7982              	.LVL769:
 322:Core/Src/SEGGER_RTT.c ****   p->MaxNumUpBuffers    = SEGGER_RTT_MAX_NUM_UP_BUFFERS;
 7983              		.loc 1 322 3 view .LVU3349
 7984 0018 2946     		mov	r1, r5
 7985 001a 7822     		movs	r2, #120
 7986 001c 04F13000 		add	r0, r4, #48
 7987 0020 FFF7FEFF 		bl	memset
 7988              	.LVL770:
 323:Core/Src/SEGGER_RTT.c ****   p->MaxNumDownBuffers  = SEGGER_RTT_MAX_NUM_DOWN_BUFFERS;
 7989              		.loc 1 323 3 view .LVU3350
 323:Core/Src/SEGGER_RTT.c ****   p->MaxNumDownBuffers  = SEGGER_RTT_MAX_NUM_DOWN_BUFFERS;
 7990              		.loc 1 323 25 is_stmt 0 view .LVU3351
 7991 0024 0322     		movs	r2, #3
 7992 0026 2261     		str	r2, [r4, #16]
 324:Core/Src/SEGGER_RTT.c ****   //
 7993              		.loc 1 324 3 is_stmt 1 view .LVU3352
 328:Core/Src/SEGGER_RTT.c ****   p->aUp[0].pBuffer       = _acUpBuffer;
 7994              		.loc 1 328 27 is_stmt 0 view .LVU3353
 7995 0028 194B     		ldr	r3, .L323+4
 324:Core/Src/SEGGER_RTT.c ****   //
 7996              		.loc 1 324 25 view .LVU3354
 7997 002a 6261     		str	r2, [r4, #20]
 328:Core/Src/SEGGER_RTT.c ****   p->aUp[0].pBuffer       = _acUpBuffer;
 7998              		.loc 1 328 3 is_stmt 1 view .LVU3355
 329:Core/Src/SEGGER_RTT.c ****   p->aUp[0].SizeOfBuffer  = BUFFER_SIZE_UP;
 7999              		.loc 1 329 27 is_stmt 0 view .LVU3356
 8000 002c 1949     		ldr	r1, .L323+8
 328:Core/Src/SEGGER_RTT.c ****   p->aUp[0].pBuffer       = _acUpBuffer;
 8001              		.loc 1 328 27 view .LVU3357
 8002 002e A361     		str	r3, [r4, #24]
 329:Core/Src/SEGGER_RTT.c ****   p->aUp[0].SizeOfBuffer  = BUFFER_SIZE_UP;
 8003              		.loc 1 329 3 is_stmt 1 view .LVU3358
 330:Core/Src/SEGGER_RTT.c ****   p->aUp[0].RdOff         = 0u;
 8004              		.loc 1 330 27 is_stmt 0 view .LVU3359
 8005 0030 4FF48062 		mov	r2, #1024
 329:Core/Src/SEGGER_RTT.c ****   p->aUp[0].SizeOfBuffer  = BUFFER_SIZE_UP;
 8006              		.loc 1 329 27 view .LVU3360
 8007 0034 E161     		str	r1, [r4, #28]
 330:Core/Src/SEGGER_RTT.c ****   p->aUp[0].RdOff         = 0u;
 8008              		.loc 1 330 3 is_stmt 1 view .LVU3361
 330:Core/Src/SEGGER_RTT.c ****   p->aUp[0].RdOff         = 0u;
 8009              		.loc 1 330 27 is_stmt 0 view .LVU3362
 8010 0036 2262     		str	r2, [r4, #32]
 331:Core/Src/SEGGER_RTT.c ****   p->aUp[0].WrOff         = 0u;
 8011              		.loc 1 331 3 is_stmt 1 view .LVU3363
 338:Core/Src/SEGGER_RTT.c ****   p->aDown[0].SizeOfBuffer  = BUFFER_SIZE_DOWN;
 8012              		.loc 1 338 29 is_stmt 0 view .LVU3364
 8013 0038 1749     		ldr	r1, .L323+12
 331:Core/Src/SEGGER_RTT.c ****   p->aUp[0].WrOff         = 0u;
 8014              		.loc 1 331 27 view .LVU3365
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccs0vIiH.s 			page 220


 8015 003a A562     		str	r5, [r4, #40]
 332:Core/Src/SEGGER_RTT.c ****   p->aUp[0].Flags         = SEGGER_RTT_MODE_DEFAULT;
 8016              		.loc 1 332 3 is_stmt 1 view .LVU3366
 339:Core/Src/SEGGER_RTT.c ****   p->aDown[0].RdOff         = 0u;
 8017              		.loc 1 339 29 is_stmt 0 view .LVU3367
 8018 003c 1022     		movs	r2, #16
 332:Core/Src/SEGGER_RTT.c ****   p->aUp[0].Flags         = SEGGER_RTT_MODE_DEFAULT;
 8019              		.loc 1 332 27 view .LVU3368
 8020 003e 6562     		str	r5, [r4, #36]
 333:Core/Src/SEGGER_RTT.c ****   //
 8021              		.loc 1 333 3 is_stmt 1 view .LVU3369
 333:Core/Src/SEGGER_RTT.c ****   //
 8022              		.loc 1 333 27 is_stmt 0 view .LVU3370
 8023 0040 E562     		str	r5, [r4, #44]
 337:Core/Src/SEGGER_RTT.c ****   p->aDown[0].pBuffer       = _acDownBuffer;
 8024              		.loc 1 337 3 is_stmt 1 view .LVU3371
 337:Core/Src/SEGGER_RTT.c ****   p->aDown[0].pBuffer       = _acDownBuffer;
 8025              		.loc 1 337 29 is_stmt 0 view .LVU3372
 8026 0042 2366     		str	r3, [r4, #96]
 338:Core/Src/SEGGER_RTT.c ****   p->aDown[0].SizeOfBuffer  = BUFFER_SIZE_DOWN;
 8027              		.loc 1 338 3 is_stmt 1 view .LVU3373
 338:Core/Src/SEGGER_RTT.c ****   p->aDown[0].SizeOfBuffer  = BUFFER_SIZE_DOWN;
 8028              		.loc 1 338 29 is_stmt 0 view .LVU3374
 8029 0044 6166     		str	r1, [r4, #100]
 339:Core/Src/SEGGER_RTT.c ****   p->aDown[0].RdOff         = 0u;
 8030              		.loc 1 339 3 is_stmt 1 view .LVU3375
 339:Core/Src/SEGGER_RTT.c ****   p->aDown[0].RdOff         = 0u;
 8031              		.loc 1 339 29 is_stmt 0 view .LVU3376
 8032 0046 A266     		str	r2, [r4, #104]
 340:Core/Src/SEGGER_RTT.c ****   p->aDown[0].WrOff         = 0u;
 8033              		.loc 1 340 3 is_stmt 1 view .LVU3377
 340:Core/Src/SEGGER_RTT.c ****   p->aDown[0].WrOff         = 0u;
 8034              		.loc 1 340 29 is_stmt 0 view .LVU3378
 8035 0048 2567     		str	r5, [r4, #112]
 341:Core/Src/SEGGER_RTT.c ****   p->aDown[0].Flags         = SEGGER_RTT_MODE_DEFAULT;
 8036              		.loc 1 341 3 is_stmt 1 view .LVU3379
 341:Core/Src/SEGGER_RTT.c ****   p->aDown[0].Flags         = SEGGER_RTT_MODE_DEFAULT;
 8037              		.loc 1 341 29 is_stmt 0 view .LVU3380
 8038 004a E566     		str	r5, [r4, #108]
 342:Core/Src/SEGGER_RTT.c ****   //
 8039              		.loc 1 342 3 is_stmt 1 view .LVU3381
 342:Core/Src/SEGGER_RTT.c ****   //
 8040              		.loc 1 342 29 is_stmt 0 view .LVU3382
 8041 004c 6567     		str	r5, [r4, #116]
 348:Core/Src/SEGGER_RTT.c ****   for (i = 0; i < sizeof(_aInitStr) - 1; ++i) {
 8042              		.loc 1 348 3 is_stmt 1 view .LVU3383
 8043              		.syntax unified
 8044              	@ 348 "Core/Src/SEGGER_RTT.c" 1
 8045 004e BFF35F8F 		dmb
 8046              	
 8047              	@ 0 "" 2
 348:Core/Src/SEGGER_RTT.c ****   for (i = 0; i < sizeof(_aInitStr) - 1; ++i) {
 8048              		.loc 1 348 13 view .LVU3384
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 8049              		.loc 1 349 3 view .LVU3385
 8050              	.LVL771:
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccs0vIiH.s 			page 221


 8051              		.loc 1 349 17 view .LVU3386
 350:Core/Src/SEGGER_RTT.c ****   }
 8052              		.loc 1 350 5 view .LVU3387
 350:Core/Src/SEGGER_RTT.c ****   }
 8053              		.loc 1 350 16 is_stmt 0 view .LVU3388
 8054              		.thumb
 8055              		.syntax unified
 8056 0052 4521     		movs	r1, #69
 8057 0054 4723     		movs	r3, #71
 8058 0056 5320     		movs	r0, #83
 8059 0058 2070     		strb	r0, [r4]
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 8060              		.loc 1 349 42 is_stmt 1 view .LVU3389
 8061              	.LVL772:
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 8062              		.loc 1 349 17 view .LVU3390
 350:Core/Src/SEGGER_RTT.c ****   }
 8063              		.loc 1 350 5 view .LVU3391
 350:Core/Src/SEGGER_RTT.c ****   }
 8064              		.loc 1 350 16 is_stmt 0 view .LVU3392
 8065 005a 5222     		movs	r2, #82
 8066 005c 6170     		strb	r1, [r4, #1]
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 8067              		.loc 1 349 42 is_stmt 1 view .LVU3393
 8068              	.LVL773:
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 8069              		.loc 1 349 17 view .LVU3394
 350:Core/Src/SEGGER_RTT.c ****   }
 8070              		.loc 1 350 5 view .LVU3395
 350:Core/Src/SEGGER_RTT.c ****   }
 8071              		.loc 1 350 16 is_stmt 0 view .LVU3396
 8072 005e 2020     		movs	r0, #32
 8073 0060 A370     		strb	r3, [r4, #2]
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 8074              		.loc 1 349 42 is_stmt 1 view .LVU3397
 8075              	.LVL774:
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 8076              		.loc 1 349 17 view .LVU3398
 350:Core/Src/SEGGER_RTT.c ****   }
 8077              		.loc 1 350 5 view .LVU3399
 350:Core/Src/SEGGER_RTT.c ****   }
 8078              		.loc 1 350 16 is_stmt 0 view .LVU3400
 8079 0062 E370     		strb	r3, [r4, #3]
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 8080              		.loc 1 349 42 is_stmt 1 view .LVU3401
 8081              	.LVL775:
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 8082              		.loc 1 349 17 view .LVU3402
 350:Core/Src/SEGGER_RTT.c ****   }
 8083              		.loc 1 350 5 view .LVU3403
 350:Core/Src/SEGGER_RTT.c ****   }
 8084              		.loc 1 350 16 is_stmt 0 view .LVU3404
 8085 0064 5423     		movs	r3, #84
 8086 0066 2171     		strb	r1, [r4, #4]
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 8087              		.loc 1 349 42 is_stmt 1 view .LVU3405
 8088              	.LVL776:
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccs0vIiH.s 			page 222


 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 8089              		.loc 1 349 17 view .LVU3406
 350:Core/Src/SEGGER_RTT.c ****   }
 8090              		.loc 1 350 5 view .LVU3407
 350:Core/Src/SEGGER_RTT.c ****   }
 8091              		.loc 1 350 16 is_stmt 0 view .LVU3408
 8092 0068 6271     		strb	r2, [r4, #5]
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 8093              		.loc 1 349 42 is_stmt 1 view .LVU3409
 8094              	.LVL777:
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 8095              		.loc 1 349 17 view .LVU3410
 350:Core/Src/SEGGER_RTT.c ****   }
 8096              		.loc 1 350 5 view .LVU3411
 350:Core/Src/SEGGER_RTT.c ****   }
 8097              		.loc 1 350 16 is_stmt 0 view .LVU3412
 8098 006a A071     		strb	r0, [r4, #6]
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 8099              		.loc 1 349 42 is_stmt 1 view .LVU3413
 8100              	.LVL778:
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 8101              		.loc 1 349 17 view .LVU3414
 350:Core/Src/SEGGER_RTT.c ****   }
 8102              		.loc 1 350 5 view .LVU3415
 350:Core/Src/SEGGER_RTT.c ****   }
 8103              		.loc 1 350 16 is_stmt 0 view .LVU3416
 8104 006c E271     		strb	r2, [r4, #7]
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 8105              		.loc 1 349 42 is_stmt 1 view .LVU3417
 8106              	.LVL779:
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 8107              		.loc 1 349 17 view .LVU3418
 350:Core/Src/SEGGER_RTT.c ****   }
 8108              		.loc 1 350 5 view .LVU3419
 350:Core/Src/SEGGER_RTT.c ****   }
 8109              		.loc 1 350 16 is_stmt 0 view .LVU3420
 8110 006e 2372     		strb	r3, [r4, #8]
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 8111              		.loc 1 349 42 is_stmt 1 view .LVU3421
 8112              	.LVL780:
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 8113              		.loc 1 349 17 view .LVU3422
 350:Core/Src/SEGGER_RTT.c ****   }
 8114              		.loc 1 350 5 view .LVU3423
 350:Core/Src/SEGGER_RTT.c ****   }
 8115              		.loc 1 350 16 is_stmt 0 view .LVU3424
 8116 0070 6372     		strb	r3, [r4, #9]
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 8117              		.loc 1 349 42 is_stmt 1 view .LVU3425
 8118              	.LVL781:
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 8119              		.loc 1 349 17 view .LVU3426
 350:Core/Src/SEGGER_RTT.c ****   }
 8120              		.loc 1 350 5 view .LVU3427
 350:Core/Src/SEGGER_RTT.c ****   }
 8121              		.loc 1 350 16 is_stmt 0 view .LVU3428
 8122 0072 A572     		strb	r5, [r4, #10]
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccs0vIiH.s 			page 223


 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 8123              		.loc 1 349 42 is_stmt 1 view .LVU3429
 8124              	.LVL782:
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 8125              		.loc 1 349 17 view .LVU3430
 350:Core/Src/SEGGER_RTT.c ****   }
 8126              		.loc 1 350 5 view .LVU3431
 350:Core/Src/SEGGER_RTT.c ****   }
 8127              		.loc 1 350 16 is_stmt 0 view .LVU3432
 8128 0074 E572     		strb	r5, [r4, #11]
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 8129              		.loc 1 349 42 is_stmt 1 view .LVU3433
 8130              	.LVL783:
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 8131              		.loc 1 349 17 view .LVU3434
 350:Core/Src/SEGGER_RTT.c ****   }
 8132              		.loc 1 350 5 view .LVU3435
 350:Core/Src/SEGGER_RTT.c ****   }
 8133              		.loc 1 350 16 is_stmt 0 view .LVU3436
 8134 0076 2573     		strb	r5, [r4, #12]
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 8135              		.loc 1 349 42 is_stmt 1 view .LVU3437
 8136              	.LVL784:
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 8137              		.loc 1 349 17 view .LVU3438
 350:Core/Src/SEGGER_RTT.c ****   }
 8138              		.loc 1 350 5 view .LVU3439
 350:Core/Src/SEGGER_RTT.c ****   }
 8139              		.loc 1 350 16 is_stmt 0 view .LVU3440
 8140 0078 6573     		strb	r5, [r4, #13]
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 8141              		.loc 1 349 42 is_stmt 1 view .LVU3441
 8142              	.LVL785:
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 8143              		.loc 1 349 17 view .LVU3442
 350:Core/Src/SEGGER_RTT.c ****   }
 8144              		.loc 1 350 5 view .LVU3443
 350:Core/Src/SEGGER_RTT.c ****   }
 8145              		.loc 1 350 16 is_stmt 0 view .LVU3444
 8146 007a A573     		strb	r5, [r4, #14]
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 8147              		.loc 1 349 42 is_stmt 1 view .LVU3445
 8148              	.LVL786:
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 8149              		.loc 1 349 17 view .LVU3446
 350:Core/Src/SEGGER_RTT.c ****   }
 8150              		.loc 1 350 5 view .LVU3447
 350:Core/Src/SEGGER_RTT.c ****   }
 8151              		.loc 1 350 16 is_stmt 0 view .LVU3448
 8152 007c E573     		strb	r5, [r4, #15]
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 8153              		.loc 1 349 42 is_stmt 1 view .LVU3449
 8154              	.LVL787:
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 8155              		.loc 1 349 17 view .LVU3450
 352:Core/Src/SEGGER_RTT.c **** }
 8156              		.loc 1 352 3 view .LVU3451
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccs0vIiH.s 			page 224


 8157              		.syntax unified
 8158              	@ 352 "Core/Src/SEGGER_RTT.c" 1
 8159 007e BFF35F8F 		dmb
 8160              	
 8161              	@ 0 "" 2
 352:Core/Src/SEGGER_RTT.c **** }
 8162              		.loc 1 352 13 view .LVU3452
 8163              	.LVL788:
 352:Core/Src/SEGGER_RTT.c **** }
 8164              		.loc 1 352 13 is_stmt 0 view .LVU3453
 8165              		.thumb
 8166              		.syntax unified
 8167              	.LBE462:
 8168              	.LBE461:
1492:Core/Src/SEGGER_RTT.c ****   pRing = (SEGGER_RTT_BUFFER_DOWN*)((char*)&_SEGGER_RTT.aDown[0] + SEGGER_RTT_UNCACHED_OFF);  // Ac
 8169              		.loc 1 1492 3 is_stmt 1 view .LVU3454
 8170              	.LBE464:
1492:Core/Src/SEGGER_RTT.c ****   pRing = (SEGGER_RTT_BUFFER_DOWN*)((char*)&_SEGGER_RTT.aDown[0] + SEGGER_RTT_UNCACHED_OFF);  // Ac
 8171              		.loc 1 1492 9 view .LVU3455
1493:Core/Src/SEGGER_RTT.c ****   RdOff = pRing->RdOff;
 8172              		.loc 1 1493 3 view .LVU3456
1494:Core/Src/SEGGER_RTT.c ****   if (RdOff != pRing->WrOff) {
 8173              		.loc 1 1494 3 view .LVU3457
1495:Core/Src/SEGGER_RTT.c ****     r = 1;
 8174              		.loc 1 1495 3 view .LVU3458
1495:Core/Src/SEGGER_RTT.c ****     r = 1;
 8175              		.loc 1 1495 21 is_stmt 0 view .LVU3459
 8176 0082 E06E     		ldr	r0, [r4, #108]
 8177              	.LVL789:
1500:Core/Src/SEGGER_RTT.c **** }
 8178              		.loc 1 1500 3 is_stmt 1 view .LVU3460
 8179              		.loc 1 1501 1 is_stmt 0 view .LVU3461
 8180 0084 401B     		subs	r0, r0, r5
 8181              	.LVL790:
 8182              		.loc 1 1501 1 view .LVU3462
 8183 0086 18BF     		it	ne
 8184 0088 0120     		movne	r0, #1
 8185 008a 38BD     		pop	{r3, r4, r5, pc}
 8186              	.LVL791:
 8187              	.L324:
 8188              		.loc 1 1501 1 view .LVU3463
 8189              		.align	2
 8190              	.L323:
 8191 008c 00000000 		.word	.LANCHOR0
 8192 0090 00000000 		.word	.LC0
 8193 0094 00000000 		.word	.LANCHOR1
 8194 0098 00000000 		.word	.LANCHOR2
 8195              		.cfi_endproc
 8196              	.LFE20:
 8198              		.section	.text.SEGGER_RTT_HasData,"ax",%progbits
 8199              		.align	1
 8200              		.p2align 2,,3
 8201              		.global	SEGGER_RTT_HasData
 8202              		.syntax unified
 8203              		.thumb
 8204              		.thumb_func
 8206              	SEGGER_RTT_HasData:
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccs0vIiH.s 			page 225


 8207              	.LVL792:
 8208              	.LFB21:
1502:Core/Src/SEGGER_RTT.c **** 
1503:Core/Src/SEGGER_RTT.c **** /*********************************************************************
1504:Core/Src/SEGGER_RTT.c **** *
1505:Core/Src/SEGGER_RTT.c **** *       SEGGER_RTT_HasData
1506:Core/Src/SEGGER_RTT.c **** *
1507:Core/Src/SEGGER_RTT.c **** *  Function description
1508:Core/Src/SEGGER_RTT.c **** *    Check if there is data from the host in the given buffer.
1509:Core/Src/SEGGER_RTT.c **** *
1510:Core/Src/SEGGER_RTT.c **** *  Return value:
1511:Core/Src/SEGGER_RTT.c **** *  ==0:  No data
1512:Core/Src/SEGGER_RTT.c **** *  !=0:  Data in buffer
1513:Core/Src/SEGGER_RTT.c **** *
1514:Core/Src/SEGGER_RTT.c **** */
1515:Core/Src/SEGGER_RTT.c **** unsigned SEGGER_RTT_HasData(unsigned BufferIndex) {
 8209              		.loc 1 1515 51 is_stmt 1 view -0
 8210              		.cfi_startproc
 8211              		@ args = 0, pretend = 0, frame = 0
 8212              		@ frame_needed = 0, uses_anonymous_args = 0
 8213              		@ link register save eliminated.
1516:Core/Src/SEGGER_RTT.c ****   SEGGER_RTT_BUFFER_DOWN* pRing;
 8214              		.loc 1 1516 3 view .LVU3465
1517:Core/Src/SEGGER_RTT.c ****   unsigned                v;
 8215              		.loc 1 1517 3 view .LVU3466
1518:Core/Src/SEGGER_RTT.c **** 
1519:Core/Src/SEGGER_RTT.c ****   pRing = (SEGGER_RTT_BUFFER_DOWN*)((char*)&_SEGGER_RTT.aDown[BufferIndex] + SEGGER_RTT_UNCACHED_OF
 8216              		.loc 1 1519 3 view .LVU3467
1520:Core/Src/SEGGER_RTT.c ****   v = pRing->WrOff;
 8217              		.loc 1 1520 3 view .LVU3468
 8218              		.loc 1 1520 5 is_stmt 0 view .LVU3469
 8219 0000 044B     		ldr	r3, .L326
 8220 0002 00EB4000 		add	r0, r0, r0, lsl #1
 8221              	.LVL793:
 8222              		.loc 1 1520 5 view .LVU3470
 8223 0006 03EBC003 		add	r3, r3, r0, lsl #3
 8224 000a D86E     		ldr	r0, [r3, #108]
 8225              	.LVL794:
1521:Core/Src/SEGGER_RTT.c ****   return v - pRing->RdOff;
 8226              		.loc 1 1521 3 is_stmt 1 view .LVU3471
 8227              		.loc 1 1521 12 is_stmt 0 view .LVU3472
 8228 000c 1B6F     		ldr	r3, [r3, #112]
1522:Core/Src/SEGGER_RTT.c **** }
 8229              		.loc 1 1522 1 view .LVU3473
 8230 000e C01A     		subs	r0, r0, r3
 8231              	.LVL795:
 8232              		.loc 1 1522 1 view .LVU3474
 8233 0010 7047     		bx	lr
 8234              	.L327:
 8235 0012 00BF     		.align	2
 8236              	.L326:
 8237 0014 00000000 		.word	.LANCHOR0
 8238              		.cfi_endproc
 8239              	.LFE21:
 8241              		.section	.text.SEGGER_RTT_HasDataUp,"ax",%progbits
 8242              		.align	1
 8243              		.p2align 2,,3
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccs0vIiH.s 			page 226


 8244              		.global	SEGGER_RTT_HasDataUp
 8245              		.syntax unified
 8246              		.thumb
 8247              		.thumb_func
 8249              	SEGGER_RTT_HasDataUp:
 8250              	.LVL796:
 8251              	.LFB22:
1523:Core/Src/SEGGER_RTT.c **** 
1524:Core/Src/SEGGER_RTT.c **** /*********************************************************************
1525:Core/Src/SEGGER_RTT.c **** *
1526:Core/Src/SEGGER_RTT.c **** *       SEGGER_RTT_HasDataUp
1527:Core/Src/SEGGER_RTT.c **** *
1528:Core/Src/SEGGER_RTT.c **** *  Function description
1529:Core/Src/SEGGER_RTT.c **** *    Check if there is data remaining to be sent in the given buffer.
1530:Core/Src/SEGGER_RTT.c **** *
1531:Core/Src/SEGGER_RTT.c **** *  Return value:
1532:Core/Src/SEGGER_RTT.c **** *  ==0:  No data
1533:Core/Src/SEGGER_RTT.c **** *  !=0:  Data in buffer
1534:Core/Src/SEGGER_RTT.c **** *
1535:Core/Src/SEGGER_RTT.c **** */
1536:Core/Src/SEGGER_RTT.c **** unsigned SEGGER_RTT_HasDataUp(unsigned BufferIndex) {
 8252              		.loc 1 1536 53 is_stmt 1 view -0
 8253              		.cfi_startproc
 8254              		@ args = 0, pretend = 0, frame = 0
 8255              		@ frame_needed = 0, uses_anonymous_args = 0
 8256              		@ link register save eliminated.
1537:Core/Src/SEGGER_RTT.c ****   SEGGER_RTT_BUFFER_UP* pRing;
 8257              		.loc 1 1537 3 view .LVU3476
1538:Core/Src/SEGGER_RTT.c ****   unsigned                v;
 8258              		.loc 1 1538 3 view .LVU3477
1539:Core/Src/SEGGER_RTT.c **** 
1540:Core/Src/SEGGER_RTT.c ****   pRing = (SEGGER_RTT_BUFFER_UP*)((char*)&_SEGGER_RTT.aUp[BufferIndex] + SEGGER_RTT_UNCACHED_OFF); 
 8259              		.loc 1 1540 3 view .LVU3478
1541:Core/Src/SEGGER_RTT.c ****   v = pRing->RdOff;
 8260              		.loc 1 1541 3 view .LVU3479
 8261              		.loc 1 1541 5 is_stmt 0 view .LVU3480
 8262 0000 044B     		ldr	r3, .L329
 8263 0002 00EB4000 		add	r0, r0, r0, lsl #1
 8264              	.LVL797:
 8265              		.loc 1 1541 5 view .LVU3481
 8266 0006 03EBC003 		add	r3, r3, r0, lsl #3
 8267 000a 9A6A     		ldr	r2, [r3, #40]
 8268              	.LVL798:
1542:Core/Src/SEGGER_RTT.c ****   return pRing->WrOff - v;
 8269              		.loc 1 1542 3 is_stmt 1 view .LVU3482
 8270              		.loc 1 1542 23 is_stmt 0 view .LVU3483
 8271 000c 586A     		ldr	r0, [r3, #36]
1543:Core/Src/SEGGER_RTT.c **** }
 8272              		.loc 1 1543 1 view .LVU3484
 8273 000e 801A     		subs	r0, r0, r2
 8274 0010 7047     		bx	lr
 8275              	.L330:
 8276 0012 00BF     		.align	2
 8277              	.L329:
 8278 0014 00000000 		.word	.LANCHOR0
 8279              		.cfi_endproc
 8280              	.LFE22:
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccs0vIiH.s 			page 227


 8282              		.section	.text.SEGGER_RTT_AllocDownBuffer,"ax",%progbits
 8283              		.align	1
 8284              		.p2align 2,,3
 8285              		.global	SEGGER_RTT_AllocDownBuffer
 8286              		.syntax unified
 8287              		.thumb
 8288              		.thumb_func
 8290              	SEGGER_RTT_AllocDownBuffer:
 8291              	.LVL799:
 8292              	.LFB23:
1544:Core/Src/SEGGER_RTT.c **** 
1545:Core/Src/SEGGER_RTT.c **** /*********************************************************************
1546:Core/Src/SEGGER_RTT.c **** *
1547:Core/Src/SEGGER_RTT.c **** *       SEGGER_RTT_AllocDownBuffer
1548:Core/Src/SEGGER_RTT.c **** *
1549:Core/Src/SEGGER_RTT.c **** *  Function description
1550:Core/Src/SEGGER_RTT.c **** *    Run-time configuration of the next down-buffer (H->T).
1551:Core/Src/SEGGER_RTT.c **** *    The next buffer, which is not used yet is configured.
1552:Core/Src/SEGGER_RTT.c **** *    This includes: Buffer address, size, name, flags, ...
1553:Core/Src/SEGGER_RTT.c **** *
1554:Core/Src/SEGGER_RTT.c **** *  Parameters
1555:Core/Src/SEGGER_RTT.c **** *    sName        Pointer to a constant name string.
1556:Core/Src/SEGGER_RTT.c **** *    pBuffer      Pointer to a buffer to be used.
1557:Core/Src/SEGGER_RTT.c **** *    BufferSize   Size of the buffer.
1558:Core/Src/SEGGER_RTT.c **** *    Flags        Operating modes. Define behavior if buffer is full (not enough space for entire m
1559:Core/Src/SEGGER_RTT.c **** *                 Flags[31:24] are used for validity check and must be zero. Flags[23:2] are reserv
1560:Core/Src/SEGGER_RTT.c **** *
1561:Core/Src/SEGGER_RTT.c **** *  Return value
1562:Core/Src/SEGGER_RTT.c **** *    >= 0 - O.K. Buffer Index
1563:Core/Src/SEGGER_RTT.c **** *     < 0 - Error
1564:Core/Src/SEGGER_RTT.c **** */
1565:Core/Src/SEGGER_RTT.c **** int SEGGER_RTT_AllocDownBuffer(const char* sName, void* pBuffer, unsigned BufferSize, unsigned Flag
 8293              		.loc 1 1565 103 is_stmt 1 view -0
 8294              		.cfi_startproc
 8295              		@ args = 0, pretend = 0, frame = 0
 8296              		@ frame_needed = 0, uses_anonymous_args = 0
1566:Core/Src/SEGGER_RTT.c ****   int BufferIndex;
 8297              		.loc 1 1566 3 view .LVU3486
1567:Core/Src/SEGGER_RTT.c ****   volatile SEGGER_RTT_CB* pRTTCB;
 8298              		.loc 1 1567 3 view .LVU3487
 8299              	.LBB469:
1568:Core/Src/SEGGER_RTT.c **** 
1569:Core/Src/SEGGER_RTT.c ****   INIT();
 8300              		.loc 1 1569 3 view .LVU3488
 8301              		.loc 1 1569 3 view .LVU3489
 8302              		.loc 1 1569 3 view .LVU3490
 8303              		.loc 1 1569 3 view .LVU3491
 8304              	.LBE469:
1565:Core/Src/SEGGER_RTT.c ****   int BufferIndex;
 8305              		.loc 1 1565 103 is_stmt 0 view .LVU3492
 8306 0000 2DE9F843 		push	{r3, r4, r5, r6, r7, r8, r9, lr}
 8307              		.cfi_def_cfa_offset 32
 8308              		.cfi_offset 3, -32
 8309              		.cfi_offset 4, -28
 8310              		.cfi_offset 5, -24
 8311              		.cfi_offset 6, -20
 8312              		.cfi_offset 7, -16
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccs0vIiH.s 			page 228


 8313              		.cfi_offset 8, -12
 8314              		.cfi_offset 9, -8
 8315              		.cfi_offset 14, -4
 8316              	.LBB472:
 8317              		.loc 1 1569 3 view .LVU3493
 8318 0004 3A4C     		ldr	r4, .L345
 8319              	.LBE472:
1565:Core/Src/SEGGER_RTT.c ****   int BufferIndex;
 8320              		.loc 1 1565 103 view .LVU3494
 8321 0006 1E46     		mov	r6, r3
 8322              	.LBB473:
 8323              		.loc 1 1569 3 view .LVU3495
 8324 0008 2378     		ldrb	r3, [r4]	@ zero_extendqisi2
 8325              	.LVL800:
 8326              		.loc 1 1569 3 view .LVU3496
 8327              	.LBE473:
1565:Core/Src/SEGGER_RTT.c ****   int BufferIndex;
 8328              		.loc 1 1565 103 view .LVU3497
 8329 000a 8146     		mov	r9, r0
 8330 000c 8846     		mov	r8, r1
 8331 000e 1746     		mov	r7, r2
 8332              	.LBB474:
 8333              		.loc 1 1569 3 view .LVU3498
 8334 0010 002B     		cmp	r3, #0
 8335 0012 2CD0     		beq	.L344
 8336              	.LVL801:
 8337              	.L332:
 8338              		.loc 1 1569 3 is_stmt 1 discriminator 3 view .LVU3499
 8339              	.LBE474:
 8340              		.loc 1 1569 9 discriminator 3 view .LVU3500
 8341              	.LBB475:
1570:Core/Src/SEGGER_RTT.c ****   SEGGER_RTT_LOCK();
 8342              		.loc 1 1570 3 discriminator 3 view .LVU3501
 8343              		.loc 1 1570 3 discriminator 3 view .LVU3502
 8344              		.syntax unified
 8345              	@ 1570 "Core/Src/SEGGER_RTT.c" 1
 8346 0014 EFF31182 		mrs   r2, basepri  
 8347 0018 4FF02001 		mov   r1, #32       
 8348 001c 81F31188 		msr   basepri, r1  
 8349              		
 8350              	@ 0 "" 2
 8351              	.LVL802:
 8352              		.loc 1 1570 20 discriminator 3 view .LVU3503
1571:Core/Src/SEGGER_RTT.c ****   pRTTCB = (volatile SEGGER_RTT_CB*)((unsigned char*)&_SEGGER_RTT + SEGGER_RTT_UNCACHED_OFF);  // A
 8353              		.loc 1 1571 3 discriminator 3 view .LVU3504
1572:Core/Src/SEGGER_RTT.c ****   BufferIndex = 0;
 8354              		.loc 1 1572 3 discriminator 3 view .LVU3505
1573:Core/Src/SEGGER_RTT.c ****   do {
 8355              		.loc 1 1573 3 discriminator 3 view .LVU3506
1574:Core/Src/SEGGER_RTT.c ****     if (pRTTCB->aDown[BufferIndex].pBuffer == NULL) {
 8356              		.loc 1 1574 5 discriminator 3 view .LVU3507
 8357              		.loc 1 1574 35 is_stmt 0 discriminator 3 view .LVU3508
 8358              		.thumb
 8359              		.syntax unified
 8360 0020 606E     		ldr	r0, [r4, #100]
 8361              		.loc 1 1574 8 discriminator 3 view .LVU3509
 8362 0022 70B1     		cbz	r0, .L335
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccs0vIiH.s 			page 229


1575:Core/Src/SEGGER_RTT.c ****       break;
1576:Core/Src/SEGGER_RTT.c ****     }
1577:Core/Src/SEGGER_RTT.c ****     BufferIndex++;
 8363              		.loc 1 1577 5 is_stmt 1 view .LVU3510
 8364              	.LVL803:
1578:Core/Src/SEGGER_RTT.c ****   } while (BufferIndex < pRTTCB->MaxNumDownBuffers);
 8365              		.loc 1 1578 24 view .LVU3511
 8366              		.loc 1 1578 32 is_stmt 0 view .LVU3512
 8367 0024 6369     		ldr	r3, [r4, #20]
 8368              		.loc 1 1578 24 view .LVU3513
 8369 0026 012B     		cmp	r3, #1
 8370 0028 5BDD     		ble	.L339
1573:Core/Src/SEGGER_RTT.c ****     if (pRTTCB->aDown[BufferIndex].pBuffer == NULL) {
 8371              		.loc 1 1573 3 is_stmt 1 view .LVU3514
1574:Core/Src/SEGGER_RTT.c ****       break;
 8372              		.loc 1 1574 5 view .LVU3515
1574:Core/Src/SEGGER_RTT.c ****       break;
 8373              		.loc 1 1574 35 is_stmt 0 view .LVU3516
 8374 002a E36F     		ldr	r3, [r4, #124]
1574:Core/Src/SEGGER_RTT.c ****       break;
 8375              		.loc 1 1574 8 view .LVU3517
 8376 002c 002B     		cmp	r3, #0
 8377 002e 58D0     		beq	.L339
1577:Core/Src/SEGGER_RTT.c ****   } while (BufferIndex < pRTTCB->MaxNumDownBuffers);
 8378              		.loc 1 1577 5 is_stmt 1 view .LVU3518
 8379              	.LVL804:
 8380              		.loc 1 1578 24 view .LVU3519
 8381              		.loc 1 1578 32 is_stmt 0 view .LVU3520
 8382 0030 6369     		ldr	r3, [r4, #20]
 8383              		.loc 1 1578 24 view .LVU3521
 8384 0032 022B     		cmp	r3, #2
 8385 0034 57DD     		ble	.L341
1573:Core/Src/SEGGER_RTT.c ****     if (pRTTCB->aDown[BufferIndex].pBuffer == NULL) {
 8386              		.loc 1 1573 3 is_stmt 1 view .LVU3522
1574:Core/Src/SEGGER_RTT.c ****       break;
 8387              		.loc 1 1574 5 view .LVU3523
1574:Core/Src/SEGGER_RTT.c ****       break;
 8388              		.loc 1 1574 35 is_stmt 0 view .LVU3524
 8389 0036 D4F89430 		ldr	r3, [r4, #148]
1574:Core/Src/SEGGER_RTT.c ****       break;
 8390              		.loc 1 1574 8 view .LVU3525
 8391 003a 002B     		cmp	r3, #0
 8392 003c 53D0     		beq	.L341
1577:Core/Src/SEGGER_RTT.c ****   } while (BufferIndex < pRTTCB->MaxNumDownBuffers);
 8393              		.loc 1 1577 5 is_stmt 1 view .LVU3526
 8394              	.LVL805:
 8395              		.loc 1 1578 24 view .LVU3527
 8396              		.loc 1 1578 32 is_stmt 0 view .LVU3528
 8397 003e 6369     		ldr	r3, [r4, #20]
1577:Core/Src/SEGGER_RTT.c ****   } while (BufferIndex < pRTTCB->MaxNumDownBuffers);
 8398              		.loc 1 1577 16 view .LVU3529
 8399 0040 0320     		movs	r0, #3
 8400              	.LVL806:
 8401              	.L335:
1579:Core/Src/SEGGER_RTT.c ****   if (BufferIndex < pRTTCB->MaxNumDownBuffers) {
 8402              		.loc 1 1579 3 is_stmt 1 view .LVU3530
 8403              		.loc 1 1579 27 is_stmt 0 view .LVU3531
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccs0vIiH.s 			page 230


 8404 0042 6369     		ldr	r3, [r4, #20]
 8405              		.loc 1 1579 6 view .LVU3532
 8406 0044 8342     		cmp	r3, r0
 8407 0046 50DD     		ble	.L342
1580:Core/Src/SEGGER_RTT.c ****     pRTTCB->aDown[BufferIndex].sName        = sName;
 8408              		.loc 1 1580 5 is_stmt 1 view .LVU3533
 8409              		.loc 1 1580 45 is_stmt 0 view .LVU3534
 8410 0048 00EB4003 		add	r3, r0, r0, lsl #1
 8411 004c 04EBC304 		add	r4, r4, r3, lsl #3
1581:Core/Src/SEGGER_RTT.c ****     pRTTCB->aDown[BufferIndex].pBuffer      = (char*)pBuffer;
1582:Core/Src/SEGGER_RTT.c ****     pRTTCB->aDown[BufferIndex].SizeOfBuffer = BufferSize;
1583:Core/Src/SEGGER_RTT.c ****     pRTTCB->aDown[BufferIndex].RdOff        = 0u;
 8412              		.loc 1 1583 45 view .LVU3535
 8413 0050 0023     		movs	r3, #0
1580:Core/Src/SEGGER_RTT.c ****     pRTTCB->aDown[BufferIndex].sName        = sName;
 8414              		.loc 1 1580 45 view .LVU3536
 8415 0052 C4F86090 		str	r9, [r4, #96]
1581:Core/Src/SEGGER_RTT.c ****     pRTTCB->aDown[BufferIndex].pBuffer      = (char*)pBuffer;
 8416              		.loc 1 1581 5 is_stmt 1 view .LVU3537
1581:Core/Src/SEGGER_RTT.c ****     pRTTCB->aDown[BufferIndex].pBuffer      = (char*)pBuffer;
 8417              		.loc 1 1581 45 is_stmt 0 view .LVU3538
 8418 0056 C4F86480 		str	r8, [r4, #100]
1582:Core/Src/SEGGER_RTT.c ****     pRTTCB->aDown[BufferIndex].RdOff        = 0u;
 8419              		.loc 1 1582 5 is_stmt 1 view .LVU3539
1582:Core/Src/SEGGER_RTT.c ****     pRTTCB->aDown[BufferIndex].RdOff        = 0u;
 8420              		.loc 1 1582 45 is_stmt 0 view .LVU3540
 8421 005a A766     		str	r7, [r4, #104]
 8422              		.loc 1 1583 5 is_stmt 1 view .LVU3541
 8423              		.loc 1 1583 45 is_stmt 0 view .LVU3542
 8424 005c 2367     		str	r3, [r4, #112]
1584:Core/Src/SEGGER_RTT.c ****     pRTTCB->aDown[BufferIndex].WrOff        = 0u;
 8425              		.loc 1 1584 5 is_stmt 1 view .LVU3543
 8426              		.loc 1 1584 45 is_stmt 0 view .LVU3544
 8427 005e E366     		str	r3, [r4, #108]
1585:Core/Src/SEGGER_RTT.c ****     pRTTCB->aDown[BufferIndex].Flags        = Flags;
 8428              		.loc 1 1585 5 is_stmt 1 view .LVU3545
 8429              		.loc 1 1585 45 is_stmt 0 view .LVU3546
 8430 0060 6667     		str	r6, [r4, #116]
1586:Core/Src/SEGGER_RTT.c ****     RTT__DMB();                     // Force data write to be complete before writing the <WrOff>, 
 8431              		.loc 1 1586 5 is_stmt 1 view .LVU3547
 8432              		.syntax unified
 8433              	@ 1586 "Core/Src/SEGGER_RTT.c" 1
 8434 0062 BFF35F8F 		dmb
 8435              	
 8436              	@ 0 "" 2
 8437              		.loc 1 1586 15 view .LVU3548
 8438              	.LVL807:
 8439              		.thumb
 8440              		.syntax unified
 8441              	.L336:
1587:Core/Src/SEGGER_RTT.c ****   } else {
1588:Core/Src/SEGGER_RTT.c ****     BufferIndex = -1;
1589:Core/Src/SEGGER_RTT.c ****   }
1590:Core/Src/SEGGER_RTT.c ****   SEGGER_RTT_UNLOCK();
 8442              		.loc 1 1590 3 view .LVU3549
 8443              		.syntax unified
 8444              	@ 1590 "Core/Src/SEGGER_RTT.c" 1
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccs0vIiH.s 			page 231


 8445 0066 82F31188 		msr   basepri, r2  
 8446              		
 8447              	@ 0 "" 2
 8448              		.thumb
 8449              		.syntax unified
 8450              	.LBE475:
 8451              		.loc 1 1590 22 view .LVU3550
1591:Core/Src/SEGGER_RTT.c ****   return BufferIndex;
 8452              		.loc 1 1591 3 view .LVU3551
1592:Core/Src/SEGGER_RTT.c **** }
 8453              		.loc 1 1592 1 is_stmt 0 view .LVU3552
 8454 006a BDE8F883 		pop	{r3, r4, r5, r6, r7, r8, r9, pc}
 8455              	.LVL808:
 8456              	.L344:
 8457              		.loc 1 1592 1 view .LVU3553
 8458 006e 03F0FF05 		and	r5, r3, #255
 8459              	.LBB476:
1569:Core/Src/SEGGER_RTT.c ****   SEGGER_RTT_LOCK();
 8460              		.loc 1 1569 3 is_stmt 1 view .LVU3554
 8461              	.LBB470:
 8462              	.LBI470:
 314:Core/Src/SEGGER_RTT.c ****   volatile SEGGER_RTT_CB* p;   // Volatile to make sure that compiler cannot change the order of ac
 8463              		.loc 1 314 13 view .LVU3555
 8464              	.LBB471:
 315:Core/Src/SEGGER_RTT.c ****   static const char _aInitStr[] = "\0\0\0\0\0\0TTR REGGES";  // Init complete ID string to make sur
 8465              		.loc 1 315 3 view .LVU3556
 316:Core/Src/SEGGER_RTT.c ****   unsigned i;
 8466              		.loc 1 316 3 view .LVU3557
 317:Core/Src/SEGGER_RTT.c ****   //
 8467              		.loc 1 317 3 view .LVU3558
 321:Core/Src/SEGGER_RTT.c ****   memset((SEGGER_RTT_CB*)p, 0, sizeof(_SEGGER_RTT));         // Make sure that the RTT CB is always
 8468              		.loc 1 321 3 view .LVU3559
 8469              	.LVL809:
 322:Core/Src/SEGGER_RTT.c ****   p->MaxNumUpBuffers    = SEGGER_RTT_MAX_NUM_UP_BUFFERS;
 8470              		.loc 1 322 3 view .LVU3560
 8471 0072 2946     		mov	r1, r5
 8472              	.LVL810:
 322:Core/Src/SEGGER_RTT.c ****   p->MaxNumUpBuffers    = SEGGER_RTT_MAX_NUM_UP_BUFFERS;
 8473              		.loc 1 322 3 is_stmt 0 view .LVU3561
 8474 0074 7822     		movs	r2, #120
 8475              	.LVL811:
 322:Core/Src/SEGGER_RTT.c ****   p->MaxNumUpBuffers    = SEGGER_RTT_MAX_NUM_UP_BUFFERS;
 8476              		.loc 1 322 3 view .LVU3562
 8477 0076 04F13000 		add	r0, r4, #48
 8478              	.LVL812:
 322:Core/Src/SEGGER_RTT.c ****   p->MaxNumUpBuffers    = SEGGER_RTT_MAX_NUM_UP_BUFFERS;
 8479              		.loc 1 322 3 view .LVU3563
 8480 007a FFF7FEFF 		bl	memset
 8481              	.LVL813:
 323:Core/Src/SEGGER_RTT.c ****   p->MaxNumDownBuffers  = SEGGER_RTT_MAX_NUM_DOWN_BUFFERS;
 8482              		.loc 1 323 3 is_stmt 1 view .LVU3564
 323:Core/Src/SEGGER_RTT.c ****   p->MaxNumDownBuffers  = SEGGER_RTT_MAX_NUM_DOWN_BUFFERS;
 8483              		.loc 1 323 25 is_stmt 0 view .LVU3565
 8484 007e 0322     		movs	r2, #3
 8485 0080 2261     		str	r2, [r4, #16]
 324:Core/Src/SEGGER_RTT.c ****   //
 8486              		.loc 1 324 3 is_stmt 1 view .LVU3566
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccs0vIiH.s 			page 232


 328:Core/Src/SEGGER_RTT.c ****   p->aUp[0].pBuffer       = _acUpBuffer;
 8487              		.loc 1 328 27 is_stmt 0 view .LVU3567
 8488 0082 1C4B     		ldr	r3, .L345+4
 324:Core/Src/SEGGER_RTT.c ****   //
 8489              		.loc 1 324 25 view .LVU3568
 8490 0084 6261     		str	r2, [r4, #20]
 328:Core/Src/SEGGER_RTT.c ****   p->aUp[0].pBuffer       = _acUpBuffer;
 8491              		.loc 1 328 3 is_stmt 1 view .LVU3569
 330:Core/Src/SEGGER_RTT.c ****   p->aUp[0].RdOff         = 0u;
 8492              		.loc 1 330 27 is_stmt 0 view .LVU3570
 8493 0086 4FF48061 		mov	r1, #1024
 329:Core/Src/SEGGER_RTT.c ****   p->aUp[0].SizeOfBuffer  = BUFFER_SIZE_UP;
 8494              		.loc 1 329 27 view .LVU3571
 8495 008a 1B4A     		ldr	r2, .L345+8
 328:Core/Src/SEGGER_RTT.c ****   p->aUp[0].pBuffer       = _acUpBuffer;
 8496              		.loc 1 328 27 view .LVU3572
 8497 008c A361     		str	r3, [r4, #24]
 329:Core/Src/SEGGER_RTT.c ****   p->aUp[0].SizeOfBuffer  = BUFFER_SIZE_UP;
 8498              		.loc 1 329 3 is_stmt 1 view .LVU3573
 329:Core/Src/SEGGER_RTT.c ****   p->aUp[0].SizeOfBuffer  = BUFFER_SIZE_UP;
 8499              		.loc 1 329 27 is_stmt 0 view .LVU3574
 8500 008e E261     		str	r2, [r4, #28]
 330:Core/Src/SEGGER_RTT.c ****   p->aUp[0].RdOff         = 0u;
 8501              		.loc 1 330 3 is_stmt 1 view .LVU3575
 330:Core/Src/SEGGER_RTT.c ****   p->aUp[0].RdOff         = 0u;
 8502              		.loc 1 330 27 is_stmt 0 view .LVU3576
 8503 0090 2162     		str	r1, [r4, #32]
 331:Core/Src/SEGGER_RTT.c ****   p->aUp[0].WrOff         = 0u;
 8504              		.loc 1 331 3 is_stmt 1 view .LVU3577
 338:Core/Src/SEGGER_RTT.c ****   p->aDown[0].SizeOfBuffer  = BUFFER_SIZE_DOWN;
 8505              		.loc 1 338 29 is_stmt 0 view .LVU3578
 8506 0092 1A4A     		ldr	r2, .L345+12
 331:Core/Src/SEGGER_RTT.c ****   p->aUp[0].WrOff         = 0u;
 8507              		.loc 1 331 27 view .LVU3579
 8508 0094 A562     		str	r5, [r4, #40]
 332:Core/Src/SEGGER_RTT.c ****   p->aUp[0].Flags         = SEGGER_RTT_MODE_DEFAULT;
 8509              		.loc 1 332 3 is_stmt 1 view .LVU3580
 332:Core/Src/SEGGER_RTT.c ****   p->aUp[0].Flags         = SEGGER_RTT_MODE_DEFAULT;
 8510              		.loc 1 332 27 is_stmt 0 view .LVU3581
 8511 0096 6562     		str	r5, [r4, #36]
 333:Core/Src/SEGGER_RTT.c ****   //
 8512              		.loc 1 333 3 is_stmt 1 view .LVU3582
 333:Core/Src/SEGGER_RTT.c ****   //
 8513              		.loc 1 333 27 is_stmt 0 view .LVU3583
 8514 0098 E562     		str	r5, [r4, #44]
 337:Core/Src/SEGGER_RTT.c ****   p->aDown[0].pBuffer       = _acDownBuffer;
 8515              		.loc 1 337 3 is_stmt 1 view .LVU3584
 337:Core/Src/SEGGER_RTT.c ****   p->aDown[0].pBuffer       = _acDownBuffer;
 8516              		.loc 1 337 29 is_stmt 0 view .LVU3585
 8517 009a 2366     		str	r3, [r4, #96]
 338:Core/Src/SEGGER_RTT.c ****   p->aDown[0].SizeOfBuffer  = BUFFER_SIZE_DOWN;
 8518              		.loc 1 338 3 is_stmt 1 view .LVU3586
 339:Core/Src/SEGGER_RTT.c ****   p->aDown[0].RdOff         = 0u;
 8519              		.loc 1 339 29 is_stmt 0 view .LVU3587
 8520 009c 1023     		movs	r3, #16
 338:Core/Src/SEGGER_RTT.c ****   p->aDown[0].SizeOfBuffer  = BUFFER_SIZE_DOWN;
 8521              		.loc 1 338 29 view .LVU3588
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccs0vIiH.s 			page 233


 8522 009e 6266     		str	r2, [r4, #100]
 339:Core/Src/SEGGER_RTT.c ****   p->aDown[0].RdOff         = 0u;
 8523              		.loc 1 339 3 is_stmt 1 view .LVU3589
 339:Core/Src/SEGGER_RTT.c ****   p->aDown[0].RdOff         = 0u;
 8524              		.loc 1 339 29 is_stmt 0 view .LVU3590
 8525 00a0 A366     		str	r3, [r4, #104]
 340:Core/Src/SEGGER_RTT.c ****   p->aDown[0].WrOff         = 0u;
 8526              		.loc 1 340 3 is_stmt 1 view .LVU3591
 340:Core/Src/SEGGER_RTT.c ****   p->aDown[0].WrOff         = 0u;
 8527              		.loc 1 340 29 is_stmt 0 view .LVU3592
 8528 00a2 2567     		str	r5, [r4, #112]
 341:Core/Src/SEGGER_RTT.c ****   p->aDown[0].Flags         = SEGGER_RTT_MODE_DEFAULT;
 8529              		.loc 1 341 3 is_stmt 1 view .LVU3593
 341:Core/Src/SEGGER_RTT.c ****   p->aDown[0].Flags         = SEGGER_RTT_MODE_DEFAULT;
 8530              		.loc 1 341 29 is_stmt 0 view .LVU3594
 8531 00a4 E566     		str	r5, [r4, #108]
 342:Core/Src/SEGGER_RTT.c ****   //
 8532              		.loc 1 342 3 is_stmt 1 view .LVU3595
 342:Core/Src/SEGGER_RTT.c ****   //
 8533              		.loc 1 342 29 is_stmt 0 view .LVU3596
 8534 00a6 6567     		str	r5, [r4, #116]
 348:Core/Src/SEGGER_RTT.c ****   for (i = 0; i < sizeof(_aInitStr) - 1; ++i) {
 8535              		.loc 1 348 3 is_stmt 1 view .LVU3597
 8536              		.syntax unified
 8537              	@ 348 "Core/Src/SEGGER_RTT.c" 1
 8538 00a8 BFF35F8F 		dmb
 8539              	
 8540              	@ 0 "" 2
 348:Core/Src/SEGGER_RTT.c ****   for (i = 0; i < sizeof(_aInitStr) - 1; ++i) {
 8541              		.loc 1 348 13 view .LVU3598
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 8542              		.loc 1 349 3 view .LVU3599
 8543              	.LVL814:
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 8544              		.loc 1 349 17 view .LVU3600
 350:Core/Src/SEGGER_RTT.c ****   }
 8545              		.loc 1 350 5 view .LVU3601
 350:Core/Src/SEGGER_RTT.c ****   }
 8546              		.loc 1 350 16 is_stmt 0 view .LVU3602
 8547              		.thumb
 8548              		.syntax unified
 8549 00ac 4521     		movs	r1, #69
 8550 00ae 4720     		movs	r0, #71
 8551 00b0 4FF0530C 		mov	ip, #83
 8552 00b4 84F800C0 		strb	ip, [r4]
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 8553              		.loc 1 349 42 is_stmt 1 view .LVU3603
 8554              	.LVL815:
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 8555              		.loc 1 349 17 view .LVU3604
 350:Core/Src/SEGGER_RTT.c ****   }
 8556              		.loc 1 350 5 view .LVU3605
 350:Core/Src/SEGGER_RTT.c ****   }
 8557              		.loc 1 350 16 is_stmt 0 view .LVU3606
 8558 00b8 5222     		movs	r2, #82
 8559 00ba 6170     		strb	r1, [r4, #1]
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccs0vIiH.s 			page 234


 8560              		.loc 1 349 42 is_stmt 1 view .LVU3607
 8561              	.LVL816:
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 8562              		.loc 1 349 17 view .LVU3608
 350:Core/Src/SEGGER_RTT.c ****   }
 8563              		.loc 1 350 5 view .LVU3609
 350:Core/Src/SEGGER_RTT.c ****   }
 8564              		.loc 1 350 16 is_stmt 0 view .LVU3610
 8565 00bc 5423     		movs	r3, #84
 8566 00be A070     		strb	r0, [r4, #2]
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 8567              		.loc 1 349 42 is_stmt 1 view .LVU3611
 8568              	.LVL817:
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 8569              		.loc 1 349 17 view .LVU3612
 350:Core/Src/SEGGER_RTT.c ****   }
 8570              		.loc 1 350 5 view .LVU3613
 350:Core/Src/SEGGER_RTT.c ****   }
 8571              		.loc 1 350 16 is_stmt 0 view .LVU3614
 8572 00c0 E070     		strb	r0, [r4, #3]
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 8573              		.loc 1 349 42 is_stmt 1 view .LVU3615
 8574              	.LVL818:
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 8575              		.loc 1 349 17 view .LVU3616
 350:Core/Src/SEGGER_RTT.c ****   }
 8576              		.loc 1 350 5 view .LVU3617
 350:Core/Src/SEGGER_RTT.c ****   }
 8577              		.loc 1 350 16 is_stmt 0 view .LVU3618
 8578 00c2 2171     		strb	r1, [r4, #4]
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 8579              		.loc 1 349 42 is_stmt 1 view .LVU3619
 8580              	.LVL819:
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 8581              		.loc 1 349 17 view .LVU3620
 350:Core/Src/SEGGER_RTT.c ****   }
 8582              		.loc 1 350 5 view .LVU3621
 350:Core/Src/SEGGER_RTT.c ****   }
 8583              		.loc 1 350 16 is_stmt 0 view .LVU3622
 8584 00c4 2021     		movs	r1, #32
 8585 00c6 6271     		strb	r2, [r4, #5]
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 8586              		.loc 1 349 42 is_stmt 1 view .LVU3623
 8587              	.LVL820:
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 8588              		.loc 1 349 17 view .LVU3624
 350:Core/Src/SEGGER_RTT.c ****   }
 8589              		.loc 1 350 5 view .LVU3625
 350:Core/Src/SEGGER_RTT.c ****   }
 8590              		.loc 1 350 16 is_stmt 0 view .LVU3626
 8591 00c8 A171     		strb	r1, [r4, #6]
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 8592              		.loc 1 349 42 is_stmt 1 view .LVU3627
 8593              	.LVL821:
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 8594              		.loc 1 349 17 view .LVU3628
 350:Core/Src/SEGGER_RTT.c ****   }
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccs0vIiH.s 			page 235


 8595              		.loc 1 350 5 view .LVU3629
 350:Core/Src/SEGGER_RTT.c ****   }
 8596              		.loc 1 350 16 is_stmt 0 view .LVU3630
 8597 00ca E271     		strb	r2, [r4, #7]
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 8598              		.loc 1 349 42 is_stmt 1 view .LVU3631
 8599              	.LVL822:
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 8600              		.loc 1 349 17 view .LVU3632
 350:Core/Src/SEGGER_RTT.c ****   }
 8601              		.loc 1 350 5 view .LVU3633
 350:Core/Src/SEGGER_RTT.c ****   }
 8602              		.loc 1 350 16 is_stmt 0 view .LVU3634
 8603 00cc 2372     		strb	r3, [r4, #8]
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 8604              		.loc 1 349 42 is_stmt 1 view .LVU3635
 8605              	.LVL823:
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 8606              		.loc 1 349 17 view .LVU3636
 350:Core/Src/SEGGER_RTT.c ****   }
 8607              		.loc 1 350 5 view .LVU3637
 350:Core/Src/SEGGER_RTT.c ****   }
 8608              		.loc 1 350 16 is_stmt 0 view .LVU3638
 8609 00ce 6372     		strb	r3, [r4, #9]
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 8610              		.loc 1 349 42 is_stmt 1 view .LVU3639
 8611              	.LVL824:
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 8612              		.loc 1 349 17 view .LVU3640
 350:Core/Src/SEGGER_RTT.c ****   }
 8613              		.loc 1 350 5 view .LVU3641
 350:Core/Src/SEGGER_RTT.c ****   }
 8614              		.loc 1 350 16 is_stmt 0 view .LVU3642
 8615 00d0 A572     		strb	r5, [r4, #10]
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 8616              		.loc 1 349 42 is_stmt 1 view .LVU3643
 8617              	.LVL825:
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 8618              		.loc 1 349 17 view .LVU3644
 350:Core/Src/SEGGER_RTT.c ****   }
 8619              		.loc 1 350 5 view .LVU3645
 350:Core/Src/SEGGER_RTT.c ****   }
 8620              		.loc 1 350 16 is_stmt 0 view .LVU3646
 8621 00d2 E572     		strb	r5, [r4, #11]
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 8622              		.loc 1 349 42 is_stmt 1 view .LVU3647
 8623              	.LVL826:
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 8624              		.loc 1 349 17 view .LVU3648
 350:Core/Src/SEGGER_RTT.c ****   }
 8625              		.loc 1 350 5 view .LVU3649
 350:Core/Src/SEGGER_RTT.c ****   }
 8626              		.loc 1 350 16 is_stmt 0 view .LVU3650
 8627 00d4 2573     		strb	r5, [r4, #12]
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 8628              		.loc 1 349 42 is_stmt 1 view .LVU3651
 8629              	.LVL827:
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccs0vIiH.s 			page 236


 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 8630              		.loc 1 349 17 view .LVU3652
 350:Core/Src/SEGGER_RTT.c ****   }
 8631              		.loc 1 350 5 view .LVU3653
 350:Core/Src/SEGGER_RTT.c ****   }
 8632              		.loc 1 350 16 is_stmt 0 view .LVU3654
 8633 00d6 6573     		strb	r5, [r4, #13]
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 8634              		.loc 1 349 42 is_stmt 1 view .LVU3655
 8635              	.LVL828:
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 8636              		.loc 1 349 17 view .LVU3656
 350:Core/Src/SEGGER_RTT.c ****   }
 8637              		.loc 1 350 5 view .LVU3657
 350:Core/Src/SEGGER_RTT.c ****   }
 8638              		.loc 1 350 16 is_stmt 0 view .LVU3658
 8639 00d8 A573     		strb	r5, [r4, #14]
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 8640              		.loc 1 349 42 is_stmt 1 view .LVU3659
 8641              	.LVL829:
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 8642              		.loc 1 349 17 view .LVU3660
 350:Core/Src/SEGGER_RTT.c ****   }
 8643              		.loc 1 350 5 view .LVU3661
 350:Core/Src/SEGGER_RTT.c ****   }
 8644              		.loc 1 350 16 is_stmt 0 view .LVU3662
 8645 00da E573     		strb	r5, [r4, #15]
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 8646              		.loc 1 349 42 is_stmt 1 view .LVU3663
 8647              	.LVL830:
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 8648              		.loc 1 349 17 view .LVU3664
 352:Core/Src/SEGGER_RTT.c **** }
 8649              		.loc 1 352 3 view .LVU3665
 8650              		.syntax unified
 8651              	@ 352 "Core/Src/SEGGER_RTT.c" 1
 8652 00dc BFF35F8F 		dmb
 8653              	
 8654              	@ 0 "" 2
 352:Core/Src/SEGGER_RTT.c **** }
 8655              		.loc 1 352 13 view .LVU3666
 353:Core/Src/SEGGER_RTT.c **** 
 8656              		.loc 1 353 1 is_stmt 0 view .LVU3667
 8657              		.thumb
 8658              		.syntax unified
 8659 00e0 98E7     		b	.L332
 8660              	.LVL831:
 8661              	.L339:
 353:Core/Src/SEGGER_RTT.c **** 
 8662              		.loc 1 353 1 view .LVU3668
 8663              	.LBE471:
 8664              	.LBE470:
 8665              	.LBE476:
 8666              	.LBB477:
1577:Core/Src/SEGGER_RTT.c ****   } while (BufferIndex < pRTTCB->MaxNumDownBuffers);
 8667              		.loc 1 1577 16 view .LVU3669
 8668 00e2 0120     		movs	r0, #1
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccs0vIiH.s 			page 237


 8669 00e4 ADE7     		b	.L335
 8670              	.LVL832:
 8671              	.L341:
1577:Core/Src/SEGGER_RTT.c ****   } while (BufferIndex < pRTTCB->MaxNumDownBuffers);
 8672              		.loc 1 1577 16 view .LVU3670
 8673 00e6 0220     		movs	r0, #2
 8674 00e8 ABE7     		b	.L335
 8675              	.LVL833:
 8676              	.L342:
1588:Core/Src/SEGGER_RTT.c ****   }
 8677              		.loc 1 1588 17 view .LVU3671
 8678 00ea 4FF0FF30 		mov	r0, #-1
 8679              	.LVL834:
1588:Core/Src/SEGGER_RTT.c ****   }
 8680              		.loc 1 1588 17 view .LVU3672
 8681 00ee BAE7     		b	.L336
 8682              	.L346:
 8683              		.align	2
 8684              	.L345:
 8685 00f0 00000000 		.word	.LANCHOR0
 8686 00f4 00000000 		.word	.LC0
 8687 00f8 00000000 		.word	.LANCHOR1
 8688 00fc 00000000 		.word	.LANCHOR2
 8689              	.LBE477:
 8690              		.cfi_endproc
 8691              	.LFE23:
 8693              		.section	.text.SEGGER_RTT_AllocUpBuffer,"ax",%progbits
 8694              		.align	1
 8695              		.p2align 2,,3
 8696              		.global	SEGGER_RTT_AllocUpBuffer
 8697              		.syntax unified
 8698              		.thumb
 8699              		.thumb_func
 8701              	SEGGER_RTT_AllocUpBuffer:
 8702              	.LVL835:
 8703              	.LFB24:
1593:Core/Src/SEGGER_RTT.c **** 
1594:Core/Src/SEGGER_RTT.c **** /*********************************************************************
1595:Core/Src/SEGGER_RTT.c **** *
1596:Core/Src/SEGGER_RTT.c **** *       SEGGER_RTT_AllocUpBuffer
1597:Core/Src/SEGGER_RTT.c **** *
1598:Core/Src/SEGGER_RTT.c **** *  Function description
1599:Core/Src/SEGGER_RTT.c **** *    Run-time configuration of the next up-buffer (T->H).
1600:Core/Src/SEGGER_RTT.c **** *    The next buffer, which is not used yet is configured.
1601:Core/Src/SEGGER_RTT.c **** *    This includes: Buffer address, size, name, flags, ...
1602:Core/Src/SEGGER_RTT.c **** *
1603:Core/Src/SEGGER_RTT.c **** *  Parameters
1604:Core/Src/SEGGER_RTT.c **** *    sName        Pointer to a constant name string.
1605:Core/Src/SEGGER_RTT.c **** *    pBuffer      Pointer to a buffer to be used.
1606:Core/Src/SEGGER_RTT.c **** *    BufferSize   Size of the buffer.
1607:Core/Src/SEGGER_RTT.c **** *    Flags        Operating modes. Define behavior if buffer is full (not enough space for entire m
1608:Core/Src/SEGGER_RTT.c **** *                 Flags[31:24] are used for validity check and must be zero. Flags[23:2] are reserv
1609:Core/Src/SEGGER_RTT.c **** *
1610:Core/Src/SEGGER_RTT.c **** *  Return value
1611:Core/Src/SEGGER_RTT.c **** *    >= 0 - O.K. Buffer Index
1612:Core/Src/SEGGER_RTT.c **** *     < 0 - Error
1613:Core/Src/SEGGER_RTT.c **** */
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccs0vIiH.s 			page 238


1614:Core/Src/SEGGER_RTT.c **** int SEGGER_RTT_AllocUpBuffer(const char* sName, void* pBuffer, unsigned BufferSize, unsigned Flags)
 8704              		.loc 1 1614 101 is_stmt 1 view -0
 8705              		.cfi_startproc
 8706              		@ args = 0, pretend = 0, frame = 0
 8707              		@ frame_needed = 0, uses_anonymous_args = 0
1615:Core/Src/SEGGER_RTT.c ****   int BufferIndex;
 8708              		.loc 1 1615 3 view .LVU3674
1616:Core/Src/SEGGER_RTT.c ****   volatile SEGGER_RTT_CB* pRTTCB;
 8709              		.loc 1 1616 3 view .LVU3675
 8710              	.LBB482:
1617:Core/Src/SEGGER_RTT.c **** 
1618:Core/Src/SEGGER_RTT.c ****   INIT();
 8711              		.loc 1 1618 3 view .LVU3676
 8712              		.loc 1 1618 3 view .LVU3677
 8713              		.loc 1 1618 3 view .LVU3678
 8714              		.loc 1 1618 3 view .LVU3679
 8715              	.LBE482:
1614:Core/Src/SEGGER_RTT.c ****   int BufferIndex;
 8716              		.loc 1 1614 101 is_stmt 0 view .LVU3680
 8717 0000 2DE9F843 		push	{r3, r4, r5, r6, r7, r8, r9, lr}
 8718              		.cfi_def_cfa_offset 32
 8719              		.cfi_offset 3, -32
 8720              		.cfi_offset 4, -28
 8721              		.cfi_offset 5, -24
 8722              		.cfi_offset 6, -20
 8723              		.cfi_offset 7, -16
 8724              		.cfi_offset 8, -12
 8725              		.cfi_offset 9, -8
 8726              		.cfi_offset 14, -4
 8727              	.LBB485:
 8728              		.loc 1 1618 3 view .LVU3681
 8729 0004 434C     		ldr	r4, .L361
 8730              	.LBE485:
1614:Core/Src/SEGGER_RTT.c ****   int BufferIndex;
 8731              		.loc 1 1614 101 view .LVU3682
 8732 0006 1D46     		mov	r5, r3
 8733              	.LBB486:
 8734              		.loc 1 1618 3 view .LVU3683
 8735 0008 2378     		ldrb	r3, [r4]	@ zero_extendqisi2
 8736              	.LVL836:
 8737              		.loc 1 1618 3 view .LVU3684
 8738              	.LBE486:
1614:Core/Src/SEGGER_RTT.c ****   int BufferIndex;
 8739              		.loc 1 1614 101 view .LVU3685
 8740 000a 8046     		mov	r8, r0
 8741 000c 0F46     		mov	r7, r1
 8742 000e 1646     		mov	r6, r2
 8743              	.LBB487:
 8744              		.loc 1 1618 3 view .LVU3686
 8745 0010 002B     		cmp	r3, #0
 8746 0012 32D0     		beq	.L360
 8747              	.LVL837:
 8748              	.L348:
 8749              		.loc 1 1618 3 is_stmt 1 discriminator 3 view .LVU3687
 8750              	.LBE487:
 8751              		.loc 1 1618 9 discriminator 3 view .LVU3688
 8752              	.LBB488:
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccs0vIiH.s 			page 239


1619:Core/Src/SEGGER_RTT.c ****   SEGGER_RTT_LOCK();
 8753              		.loc 1 1619 3 discriminator 3 view .LVU3689
 8754              		.loc 1 1619 3 discriminator 3 view .LVU3690
 8755              		.syntax unified
 8756              	@ 1619 "Core/Src/SEGGER_RTT.c" 1
 8757 0014 EFF31182 		mrs   r2, basepri  
 8758 0018 4FF02001 		mov   r1, #32       
 8759 001c 81F31188 		msr   basepri, r1  
 8760              		
 8761              	@ 0 "" 2
 8762              	.LVL838:
 8763              		.loc 1 1619 20 discriminator 3 view .LVU3691
1620:Core/Src/SEGGER_RTT.c ****   pRTTCB = (volatile SEGGER_RTT_CB*)((unsigned char*)&_SEGGER_RTT + SEGGER_RTT_UNCACHED_OFF);  // A
 8764              		.loc 1 1620 3 discriminator 3 view .LVU3692
1621:Core/Src/SEGGER_RTT.c ****   BufferIndex = 0;
 8765              		.loc 1 1621 3 discriminator 3 view .LVU3693
1622:Core/Src/SEGGER_RTT.c ****   do {
 8766              		.loc 1 1622 3 discriminator 3 view .LVU3694
1623:Core/Src/SEGGER_RTT.c ****     if (pRTTCB->aUp[BufferIndex].pBuffer == NULL) {
 8767              		.loc 1 1623 5 discriminator 3 view .LVU3695
 8768              		.loc 1 1623 33 is_stmt 0 discriminator 3 view .LVU3696
 8769              		.thumb
 8770              		.syntax unified
 8771 0020 E069     		ldr	r0, [r4, #28]
 8772              		.loc 1 1623 8 discriminator 3 view .LVU3697
 8773 0022 68B1     		cbz	r0, .L351
1624:Core/Src/SEGGER_RTT.c ****       break;
1625:Core/Src/SEGGER_RTT.c ****     }
1626:Core/Src/SEGGER_RTT.c ****     BufferIndex++;
 8774              		.loc 1 1626 5 is_stmt 1 view .LVU3698
 8775              	.LVL839:
1627:Core/Src/SEGGER_RTT.c ****   } while (BufferIndex < pRTTCB->MaxNumUpBuffers);
 8776              		.loc 1 1627 24 view .LVU3699
 8777              		.loc 1 1627 32 is_stmt 0 view .LVU3700
 8778 0024 2369     		ldr	r3, [r4, #16]
 8779              		.loc 1 1627 24 view .LVU3701
 8780 0026 012B     		cmp	r3, #1
 8781 0028 6DDD     		ble	.L355
1622:Core/Src/SEGGER_RTT.c ****     if (pRTTCB->aUp[BufferIndex].pBuffer == NULL) {
 8782              		.loc 1 1622 3 is_stmt 1 view .LVU3702
1623:Core/Src/SEGGER_RTT.c ****       break;
 8783              		.loc 1 1623 5 view .LVU3703
1623:Core/Src/SEGGER_RTT.c ****       break;
 8784              		.loc 1 1623 33 is_stmt 0 view .LVU3704
 8785 002a 636B     		ldr	r3, [r4, #52]
1623:Core/Src/SEGGER_RTT.c ****       break;
 8786              		.loc 1 1623 8 view .LVU3705
 8787 002c 002B     		cmp	r3, #0
 8788 002e 6AD0     		beq	.L355
1626:Core/Src/SEGGER_RTT.c ****   } while (BufferIndex < pRTTCB->MaxNumUpBuffers);
 8789              		.loc 1 1626 5 is_stmt 1 view .LVU3706
 8790              	.LVL840:
 8791              		.loc 1 1627 24 view .LVU3707
 8792              		.loc 1 1627 32 is_stmt 0 view .LVU3708
 8793 0030 2369     		ldr	r3, [r4, #16]
 8794              		.loc 1 1627 24 view .LVU3709
 8795 0032 022B     		cmp	r3, #2
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccs0vIiH.s 			page 240


 8796 0034 69DD     		ble	.L357
1622:Core/Src/SEGGER_RTT.c ****     if (pRTTCB->aUp[BufferIndex].pBuffer == NULL) {
 8797              		.loc 1 1622 3 is_stmt 1 view .LVU3710
1623:Core/Src/SEGGER_RTT.c ****       break;
 8798              		.loc 1 1623 5 view .LVU3711
1623:Core/Src/SEGGER_RTT.c ****       break;
 8799              		.loc 1 1623 33 is_stmt 0 view .LVU3712
 8800 0036 E36C     		ldr	r3, [r4, #76]
1623:Core/Src/SEGGER_RTT.c ****       break;
 8801              		.loc 1 1623 8 view .LVU3713
 8802 0038 002B     		cmp	r3, #0
 8803 003a 66D0     		beq	.L357
1626:Core/Src/SEGGER_RTT.c ****   } while (BufferIndex < pRTTCB->MaxNumUpBuffers);
 8804              		.loc 1 1626 5 is_stmt 1 view .LVU3714
 8805              	.LVL841:
 8806              		.loc 1 1627 24 view .LVU3715
 8807              		.loc 1 1627 32 is_stmt 0 view .LVU3716
 8808 003c 2369     		ldr	r3, [r4, #16]
1626:Core/Src/SEGGER_RTT.c ****   } while (BufferIndex < pRTTCB->MaxNumUpBuffers);
 8809              		.loc 1 1626 16 view .LVU3717
 8810 003e 0320     		movs	r0, #3
 8811              	.LVL842:
 8812              	.L351:
1628:Core/Src/SEGGER_RTT.c ****   if (BufferIndex < pRTTCB->MaxNumUpBuffers) {
 8813              		.loc 1 1628 3 is_stmt 1 view .LVU3718
 8814              		.loc 1 1628 27 is_stmt 0 view .LVU3719
 8815 0040 2369     		ldr	r3, [r4, #16]
 8816              		.loc 1 1628 6 view .LVU3720
 8817 0042 8342     		cmp	r3, r0
 8818 0044 63DD     		ble	.L358
1629:Core/Src/SEGGER_RTT.c ****     pRTTCB->aUp[BufferIndex].sName        = sName;
 8819              		.loc 1 1629 5 is_stmt 1 view .LVU3721
 8820              		.loc 1 1629 43 is_stmt 0 view .LVU3722
 8821 0046 00F1010C 		add	ip, r0, #1
 8822 004a 0CEB4C0C 		add	ip, ip, ip, lsl #1
 8823 004e 4FEACC0C 		lsl	ip, ip, #3
1630:Core/Src/SEGGER_RTT.c ****     pRTTCB->aUp[BufferIndex].pBuffer      = (char*)pBuffer;
1631:Core/Src/SEGGER_RTT.c ****     pRTTCB->aUp[BufferIndex].SizeOfBuffer = BufferSize;
 8824              		.loc 1 1631 43 view .LVU3723
 8825 0052 00EB4003 		add	r3, r0, r0, lsl #1
1629:Core/Src/SEGGER_RTT.c ****     pRTTCB->aUp[BufferIndex].sName        = sName;
 8826              		.loc 1 1629 43 view .LVU3724
 8827 0056 44F80C80 		str	r8, [r4, ip]
1630:Core/Src/SEGGER_RTT.c ****     pRTTCB->aUp[BufferIndex].pBuffer      = (char*)pBuffer;
 8828              		.loc 1 1630 5 is_stmt 1 view .LVU3725
1630:Core/Src/SEGGER_RTT.c ****     pRTTCB->aUp[BufferIndex].pBuffer      = (char*)pBuffer;
 8829              		.loc 1 1630 43 is_stmt 0 view .LVU3726
 8830 005a A444     		add	ip, ip, r4
 8831              		.loc 1 1631 43 view .LVU3727
 8832 005c 04EBC304 		add	r4, r4, r3, lsl #3
1632:Core/Src/SEGGER_RTT.c ****     pRTTCB->aUp[BufferIndex].RdOff        = 0u;
 8833              		.loc 1 1632 43 view .LVU3728
 8834 0060 0023     		movs	r3, #0
1630:Core/Src/SEGGER_RTT.c ****     pRTTCB->aUp[BufferIndex].pBuffer      = (char*)pBuffer;
 8835              		.loc 1 1630 43 view .LVU3729
 8836 0062 CCF80470 		str	r7, [ip, #4]
1631:Core/Src/SEGGER_RTT.c ****     pRTTCB->aUp[BufferIndex].RdOff        = 0u;
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccs0vIiH.s 			page 241


 8837              		.loc 1 1631 5 is_stmt 1 view .LVU3730
1631:Core/Src/SEGGER_RTT.c ****     pRTTCB->aUp[BufferIndex].RdOff        = 0u;
 8838              		.loc 1 1631 43 is_stmt 0 view .LVU3731
 8839 0066 2662     		str	r6, [r4, #32]
 8840              		.loc 1 1632 5 is_stmt 1 view .LVU3732
 8841              		.loc 1 1632 43 is_stmt 0 view .LVU3733
 8842 0068 A362     		str	r3, [r4, #40]
1633:Core/Src/SEGGER_RTT.c ****     pRTTCB->aUp[BufferIndex].WrOff        = 0u;
 8843              		.loc 1 1633 5 is_stmt 1 view .LVU3734
 8844              		.loc 1 1633 43 is_stmt 0 view .LVU3735
 8845 006a 6362     		str	r3, [r4, #36]
1634:Core/Src/SEGGER_RTT.c ****     pRTTCB->aUp[BufferIndex].Flags        = Flags;
 8846              		.loc 1 1634 5 is_stmt 1 view .LVU3736
 8847              		.loc 1 1634 43 is_stmt 0 view .LVU3737
 8848 006c E562     		str	r5, [r4, #44]
1635:Core/Src/SEGGER_RTT.c ****     RTT__DMB();                     // Force data write to be complete before writing the <WrOff>, 
 8849              		.loc 1 1635 5 is_stmt 1 view .LVU3738
 8850              		.syntax unified
 8851              	@ 1635 "Core/Src/SEGGER_RTT.c" 1
 8852 006e BFF35F8F 		dmb
 8853              	
 8854              	@ 0 "" 2
 8855              		.loc 1 1635 15 view .LVU3739
 8856              	.LVL843:
 8857              		.thumb
 8858              		.syntax unified
 8859              	.L352:
1636:Core/Src/SEGGER_RTT.c ****   } else {
1637:Core/Src/SEGGER_RTT.c ****     BufferIndex = -1;
1638:Core/Src/SEGGER_RTT.c ****   }
1639:Core/Src/SEGGER_RTT.c ****   SEGGER_RTT_UNLOCK();
 8860              		.loc 1 1639 3 view .LVU3740
 8861              		.syntax unified
 8862              	@ 1639 "Core/Src/SEGGER_RTT.c" 1
 8863 0072 82F31188 		msr   basepri, r2  
 8864              		
 8865              	@ 0 "" 2
 8866              		.thumb
 8867              		.syntax unified
 8868              	.LBE488:
 8869              		.loc 1 1639 22 view .LVU3741
1640:Core/Src/SEGGER_RTT.c ****   return BufferIndex;
 8870              		.loc 1 1640 3 view .LVU3742
1641:Core/Src/SEGGER_RTT.c **** }
 8871              		.loc 1 1641 1 is_stmt 0 view .LVU3743
 8872 0076 BDE8F883 		pop	{r3, r4, r5, r6, r7, r8, r9, pc}
 8873              	.LVL844:
 8874              	.L360:
 8875              		.loc 1 1641 1 view .LVU3744
 8876 007a 03F0FF09 		and	r9, r3, #255
 8877              	.LBB489:
1618:Core/Src/SEGGER_RTT.c ****   SEGGER_RTT_LOCK();
 8878              		.loc 1 1618 3 is_stmt 1 view .LVU3745
 8879              	.LBB483:
 8880              	.LBI483:
 314:Core/Src/SEGGER_RTT.c ****   volatile SEGGER_RTT_CB* p;   // Volatile to make sure that compiler cannot change the order of ac
 8881              		.loc 1 314 13 view .LVU3746
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccs0vIiH.s 			page 242


 8882              	.LBB484:
 315:Core/Src/SEGGER_RTT.c ****   static const char _aInitStr[] = "\0\0\0\0\0\0TTR REGGES";  // Init complete ID string to make sur
 8883              		.loc 1 315 3 view .LVU3747
 316:Core/Src/SEGGER_RTT.c ****   unsigned i;
 8884              		.loc 1 316 3 view .LVU3748
 317:Core/Src/SEGGER_RTT.c ****   //
 8885              		.loc 1 317 3 view .LVU3749
 321:Core/Src/SEGGER_RTT.c ****   memset((SEGGER_RTT_CB*)p, 0, sizeof(_SEGGER_RTT));         // Make sure that the RTT CB is always
 8886              		.loc 1 321 3 view .LVU3750
 8887              	.LVL845:
 322:Core/Src/SEGGER_RTT.c ****   p->MaxNumUpBuffers    = SEGGER_RTT_MAX_NUM_UP_BUFFERS;
 8888              		.loc 1 322 3 view .LVU3751
 8889 007e 4946     		mov	r1, r9
 8890              	.LVL846:
 322:Core/Src/SEGGER_RTT.c ****   p->MaxNumUpBuffers    = SEGGER_RTT_MAX_NUM_UP_BUFFERS;
 8891              		.loc 1 322 3 is_stmt 0 view .LVU3752
 8892 0080 7822     		movs	r2, #120
 8893              	.LVL847:
 322:Core/Src/SEGGER_RTT.c ****   p->MaxNumUpBuffers    = SEGGER_RTT_MAX_NUM_UP_BUFFERS;
 8894              		.loc 1 322 3 view .LVU3753
 8895 0082 04F13000 		add	r0, r4, #48
 8896              	.LVL848:
 322:Core/Src/SEGGER_RTT.c ****   p->MaxNumUpBuffers    = SEGGER_RTT_MAX_NUM_UP_BUFFERS;
 8897              		.loc 1 322 3 view .LVU3754
 8898 0086 FFF7FEFF 		bl	memset
 8899              	.LVL849:
 323:Core/Src/SEGGER_RTT.c ****   p->MaxNumDownBuffers  = SEGGER_RTT_MAX_NUM_DOWN_BUFFERS;
 8900              		.loc 1 323 3 is_stmt 1 view .LVU3755
 323:Core/Src/SEGGER_RTT.c ****   p->MaxNumDownBuffers  = SEGGER_RTT_MAX_NUM_DOWN_BUFFERS;
 8901              		.loc 1 323 25 is_stmt 0 view .LVU3756
 8902 008a 0322     		movs	r2, #3
 8903 008c 2261     		str	r2, [r4, #16]
 324:Core/Src/SEGGER_RTT.c ****   //
 8904              		.loc 1 324 3 is_stmt 1 view .LVU3757
 328:Core/Src/SEGGER_RTT.c ****   p->aUp[0].pBuffer       = _acUpBuffer;
 8905              		.loc 1 328 27 is_stmt 0 view .LVU3758
 8906 008e 224B     		ldr	r3, .L361+4
 324:Core/Src/SEGGER_RTT.c ****   //
 8907              		.loc 1 324 25 view .LVU3759
 8908 0090 6261     		str	r2, [r4, #20]
 328:Core/Src/SEGGER_RTT.c ****   p->aUp[0].pBuffer       = _acUpBuffer;
 8909              		.loc 1 328 3 is_stmt 1 view .LVU3760
 330:Core/Src/SEGGER_RTT.c ****   p->aUp[0].RdOff         = 0u;
 8910              		.loc 1 330 27 is_stmt 0 view .LVU3761
 8911 0092 4FF48061 		mov	r1, #1024
 329:Core/Src/SEGGER_RTT.c ****   p->aUp[0].SizeOfBuffer  = BUFFER_SIZE_UP;
 8912              		.loc 1 329 27 view .LVU3762
 8913 0096 214A     		ldr	r2, .L361+8
 328:Core/Src/SEGGER_RTT.c ****   p->aUp[0].pBuffer       = _acUpBuffer;
 8914              		.loc 1 328 27 view .LVU3763
 8915 0098 A361     		str	r3, [r4, #24]
 329:Core/Src/SEGGER_RTT.c ****   p->aUp[0].SizeOfBuffer  = BUFFER_SIZE_UP;
 8916              		.loc 1 329 3 is_stmt 1 view .LVU3764
 329:Core/Src/SEGGER_RTT.c ****   p->aUp[0].SizeOfBuffer  = BUFFER_SIZE_UP;
 8917              		.loc 1 329 27 is_stmt 0 view .LVU3765
 8918 009a E261     		str	r2, [r4, #28]
 330:Core/Src/SEGGER_RTT.c ****   p->aUp[0].RdOff         = 0u;
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccs0vIiH.s 			page 243


 8919              		.loc 1 330 3 is_stmt 1 view .LVU3766
 330:Core/Src/SEGGER_RTT.c ****   p->aUp[0].RdOff         = 0u;
 8920              		.loc 1 330 27 is_stmt 0 view .LVU3767
 8921 009c 2162     		str	r1, [r4, #32]
 331:Core/Src/SEGGER_RTT.c ****   p->aUp[0].WrOff         = 0u;
 8922              		.loc 1 331 3 is_stmt 1 view .LVU3768
 338:Core/Src/SEGGER_RTT.c ****   p->aDown[0].SizeOfBuffer  = BUFFER_SIZE_DOWN;
 8923              		.loc 1 338 29 is_stmt 0 view .LVU3769
 8924 009e 204A     		ldr	r2, .L361+12
 331:Core/Src/SEGGER_RTT.c ****   p->aUp[0].WrOff         = 0u;
 8925              		.loc 1 331 27 view .LVU3770
 8926 00a0 C4F82890 		str	r9, [r4, #40]
 332:Core/Src/SEGGER_RTT.c ****   p->aUp[0].Flags         = SEGGER_RTT_MODE_DEFAULT;
 8927              		.loc 1 332 3 is_stmt 1 view .LVU3771
 332:Core/Src/SEGGER_RTT.c ****   p->aUp[0].Flags         = SEGGER_RTT_MODE_DEFAULT;
 8928              		.loc 1 332 27 is_stmt 0 view .LVU3772
 8929 00a4 C4F82490 		str	r9, [r4, #36]
 333:Core/Src/SEGGER_RTT.c ****   //
 8930              		.loc 1 333 3 is_stmt 1 view .LVU3773
 333:Core/Src/SEGGER_RTT.c ****   //
 8931              		.loc 1 333 27 is_stmt 0 view .LVU3774
 8932 00a8 C4F82C90 		str	r9, [r4, #44]
 337:Core/Src/SEGGER_RTT.c ****   p->aDown[0].pBuffer       = _acDownBuffer;
 8933              		.loc 1 337 3 is_stmt 1 view .LVU3775
 337:Core/Src/SEGGER_RTT.c ****   p->aDown[0].pBuffer       = _acDownBuffer;
 8934              		.loc 1 337 29 is_stmt 0 view .LVU3776
 8935 00ac 2366     		str	r3, [r4, #96]
 338:Core/Src/SEGGER_RTT.c ****   p->aDown[0].SizeOfBuffer  = BUFFER_SIZE_DOWN;
 8936              		.loc 1 338 3 is_stmt 1 view .LVU3777
 339:Core/Src/SEGGER_RTT.c ****   p->aDown[0].RdOff         = 0u;
 8937              		.loc 1 339 29 is_stmt 0 view .LVU3778
 8938 00ae 1023     		movs	r3, #16
 338:Core/Src/SEGGER_RTT.c ****   p->aDown[0].SizeOfBuffer  = BUFFER_SIZE_DOWN;
 8939              		.loc 1 338 29 view .LVU3779
 8940 00b0 6266     		str	r2, [r4, #100]
 339:Core/Src/SEGGER_RTT.c ****   p->aDown[0].RdOff         = 0u;
 8941              		.loc 1 339 3 is_stmt 1 view .LVU3780
 339:Core/Src/SEGGER_RTT.c ****   p->aDown[0].RdOff         = 0u;
 8942              		.loc 1 339 29 is_stmt 0 view .LVU3781
 8943 00b2 A366     		str	r3, [r4, #104]
 340:Core/Src/SEGGER_RTT.c ****   p->aDown[0].WrOff         = 0u;
 8944              		.loc 1 340 3 is_stmt 1 view .LVU3782
 340:Core/Src/SEGGER_RTT.c ****   p->aDown[0].WrOff         = 0u;
 8945              		.loc 1 340 29 is_stmt 0 view .LVU3783
 8946 00b4 C4F87090 		str	r9, [r4, #112]
 341:Core/Src/SEGGER_RTT.c ****   p->aDown[0].Flags         = SEGGER_RTT_MODE_DEFAULT;
 8947              		.loc 1 341 3 is_stmt 1 view .LVU3784
 341:Core/Src/SEGGER_RTT.c ****   p->aDown[0].Flags         = SEGGER_RTT_MODE_DEFAULT;
 8948              		.loc 1 341 29 is_stmt 0 view .LVU3785
 8949 00b8 C4F86C90 		str	r9, [r4, #108]
 342:Core/Src/SEGGER_RTT.c ****   //
 8950              		.loc 1 342 3 is_stmt 1 view .LVU3786
 342:Core/Src/SEGGER_RTT.c ****   //
 8951              		.loc 1 342 29 is_stmt 0 view .LVU3787
 8952 00bc C4F87490 		str	r9, [r4, #116]
 348:Core/Src/SEGGER_RTT.c ****   for (i = 0; i < sizeof(_aInitStr) - 1; ++i) {
 8953              		.loc 1 348 3 is_stmt 1 view .LVU3788
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccs0vIiH.s 			page 244


 8954              		.syntax unified
 8955              	@ 348 "Core/Src/SEGGER_RTT.c" 1
 8956 00c0 BFF35F8F 		dmb
 8957              	
 8958              	@ 0 "" 2
 348:Core/Src/SEGGER_RTT.c ****   for (i = 0; i < sizeof(_aInitStr) - 1; ++i) {
 8959              		.loc 1 348 13 view .LVU3789
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 8960              		.loc 1 349 3 view .LVU3790
 8961              	.LVL850:
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 8962              		.loc 1 349 17 view .LVU3791
 350:Core/Src/SEGGER_RTT.c ****   }
 8963              		.loc 1 350 5 view .LVU3792
 350:Core/Src/SEGGER_RTT.c ****   }
 8964              		.loc 1 350 16 is_stmt 0 view .LVU3793
 8965              		.thumb
 8966              		.syntax unified
 8967 00c4 4521     		movs	r1, #69
 8968 00c6 4720     		movs	r0, #71
 8969 00c8 4FF0530C 		mov	ip, #83
 8970 00cc 84F800C0 		strb	ip, [r4]
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 8971              		.loc 1 349 42 is_stmt 1 view .LVU3794
 8972              	.LVL851:
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 8973              		.loc 1 349 17 view .LVU3795
 350:Core/Src/SEGGER_RTT.c ****   }
 8974              		.loc 1 350 5 view .LVU3796
 350:Core/Src/SEGGER_RTT.c ****   }
 8975              		.loc 1 350 16 is_stmt 0 view .LVU3797
 8976 00d0 5222     		movs	r2, #82
 8977 00d2 6170     		strb	r1, [r4, #1]
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 8978              		.loc 1 349 42 is_stmt 1 view .LVU3798
 8979              	.LVL852:
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 8980              		.loc 1 349 17 view .LVU3799
 350:Core/Src/SEGGER_RTT.c ****   }
 8981              		.loc 1 350 5 view .LVU3800
 350:Core/Src/SEGGER_RTT.c ****   }
 8982              		.loc 1 350 16 is_stmt 0 view .LVU3801
 8983 00d4 5423     		movs	r3, #84
 8984 00d6 A070     		strb	r0, [r4, #2]
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 8985              		.loc 1 349 42 is_stmt 1 view .LVU3802
 8986              	.LVL853:
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 8987              		.loc 1 349 17 view .LVU3803
 350:Core/Src/SEGGER_RTT.c ****   }
 8988              		.loc 1 350 5 view .LVU3804
 350:Core/Src/SEGGER_RTT.c ****   }
 8989              		.loc 1 350 16 is_stmt 0 view .LVU3805
 8990 00d8 E070     		strb	r0, [r4, #3]
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 8991              		.loc 1 349 42 is_stmt 1 view .LVU3806
 8992              	.LVL854:
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccs0vIiH.s 			page 245


 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 8993              		.loc 1 349 17 view .LVU3807
 350:Core/Src/SEGGER_RTT.c ****   }
 8994              		.loc 1 350 5 view .LVU3808
 350:Core/Src/SEGGER_RTT.c ****   }
 8995              		.loc 1 350 16 is_stmt 0 view .LVU3809
 8996 00da 2171     		strb	r1, [r4, #4]
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 8997              		.loc 1 349 42 is_stmt 1 view .LVU3810
 8998              	.LVL855:
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 8999              		.loc 1 349 17 view .LVU3811
 350:Core/Src/SEGGER_RTT.c ****   }
 9000              		.loc 1 350 5 view .LVU3812
 350:Core/Src/SEGGER_RTT.c ****   }
 9001              		.loc 1 350 16 is_stmt 0 view .LVU3813
 9002 00dc 2021     		movs	r1, #32
 9003 00de 6271     		strb	r2, [r4, #5]
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 9004              		.loc 1 349 42 is_stmt 1 view .LVU3814
 9005              	.LVL856:
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 9006              		.loc 1 349 17 view .LVU3815
 350:Core/Src/SEGGER_RTT.c ****   }
 9007              		.loc 1 350 5 view .LVU3816
 350:Core/Src/SEGGER_RTT.c ****   }
 9008              		.loc 1 350 16 is_stmt 0 view .LVU3817
 9009 00e0 A171     		strb	r1, [r4, #6]
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 9010              		.loc 1 349 42 is_stmt 1 view .LVU3818
 9011              	.LVL857:
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 9012              		.loc 1 349 17 view .LVU3819
 350:Core/Src/SEGGER_RTT.c ****   }
 9013              		.loc 1 350 5 view .LVU3820
 350:Core/Src/SEGGER_RTT.c ****   }
 9014              		.loc 1 350 16 is_stmt 0 view .LVU3821
 9015 00e2 E271     		strb	r2, [r4, #7]
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 9016              		.loc 1 349 42 is_stmt 1 view .LVU3822
 9017              	.LVL858:
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 9018              		.loc 1 349 17 view .LVU3823
 350:Core/Src/SEGGER_RTT.c ****   }
 9019              		.loc 1 350 5 view .LVU3824
 350:Core/Src/SEGGER_RTT.c ****   }
 9020              		.loc 1 350 16 is_stmt 0 view .LVU3825
 9021 00e4 2372     		strb	r3, [r4, #8]
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 9022              		.loc 1 349 42 is_stmt 1 view .LVU3826
 9023              	.LVL859:
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 9024              		.loc 1 349 17 view .LVU3827
 350:Core/Src/SEGGER_RTT.c ****   }
 9025              		.loc 1 350 5 view .LVU3828
 350:Core/Src/SEGGER_RTT.c ****   }
 9026              		.loc 1 350 16 is_stmt 0 view .LVU3829
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccs0vIiH.s 			page 246


 9027 00e6 6372     		strb	r3, [r4, #9]
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 9028              		.loc 1 349 42 is_stmt 1 view .LVU3830
 9029              	.LVL860:
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 9030              		.loc 1 349 17 view .LVU3831
 350:Core/Src/SEGGER_RTT.c ****   }
 9031              		.loc 1 350 5 view .LVU3832
 350:Core/Src/SEGGER_RTT.c ****   }
 9032              		.loc 1 350 16 is_stmt 0 view .LVU3833
 9033 00e8 84F80A90 		strb	r9, [r4, #10]
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 9034              		.loc 1 349 42 is_stmt 1 view .LVU3834
 9035              	.LVL861:
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 9036              		.loc 1 349 17 view .LVU3835
 350:Core/Src/SEGGER_RTT.c ****   }
 9037              		.loc 1 350 5 view .LVU3836
 350:Core/Src/SEGGER_RTT.c ****   }
 9038              		.loc 1 350 16 is_stmt 0 view .LVU3837
 9039 00ec 84F80B90 		strb	r9, [r4, #11]
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 9040              		.loc 1 349 42 is_stmt 1 view .LVU3838
 9041              	.LVL862:
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 9042              		.loc 1 349 17 view .LVU3839
 350:Core/Src/SEGGER_RTT.c ****   }
 9043              		.loc 1 350 5 view .LVU3840
 350:Core/Src/SEGGER_RTT.c ****   }
 9044              		.loc 1 350 16 is_stmt 0 view .LVU3841
 9045 00f0 84F80C90 		strb	r9, [r4, #12]
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 9046              		.loc 1 349 42 is_stmt 1 view .LVU3842
 9047              	.LVL863:
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 9048              		.loc 1 349 17 view .LVU3843
 350:Core/Src/SEGGER_RTT.c ****   }
 9049              		.loc 1 350 5 view .LVU3844
 350:Core/Src/SEGGER_RTT.c ****   }
 9050              		.loc 1 350 16 is_stmt 0 view .LVU3845
 9051 00f4 84F80D90 		strb	r9, [r4, #13]
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 9052              		.loc 1 349 42 is_stmt 1 view .LVU3846
 9053              	.LVL864:
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 9054              		.loc 1 349 17 view .LVU3847
 350:Core/Src/SEGGER_RTT.c ****   }
 9055              		.loc 1 350 5 view .LVU3848
 350:Core/Src/SEGGER_RTT.c ****   }
 9056              		.loc 1 350 16 is_stmt 0 view .LVU3849
 9057 00f8 84F80E90 		strb	r9, [r4, #14]
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 9058              		.loc 1 349 42 is_stmt 1 view .LVU3850
 9059              	.LVL865:
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 9060              		.loc 1 349 17 view .LVU3851
 350:Core/Src/SEGGER_RTT.c ****   }
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccs0vIiH.s 			page 247


 9061              		.loc 1 350 5 view .LVU3852
 350:Core/Src/SEGGER_RTT.c ****   }
 9062              		.loc 1 350 16 is_stmt 0 view .LVU3853
 9063 00fc 84F80F90 		strb	r9, [r4, #15]
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 9064              		.loc 1 349 42 is_stmt 1 view .LVU3854
 9065              	.LVL866:
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 9066              		.loc 1 349 17 view .LVU3855
 352:Core/Src/SEGGER_RTT.c **** }
 9067              		.loc 1 352 3 view .LVU3856
 9068              		.syntax unified
 9069              	@ 352 "Core/Src/SEGGER_RTT.c" 1
 9070 0100 BFF35F8F 		dmb
 9071              	
 9072              	@ 0 "" 2
 352:Core/Src/SEGGER_RTT.c **** }
 9073              		.loc 1 352 13 view .LVU3857
 353:Core/Src/SEGGER_RTT.c **** 
 9074              		.loc 1 353 1 is_stmt 0 view .LVU3858
 9075              		.thumb
 9076              		.syntax unified
 9077 0104 86E7     		b	.L348
 9078              	.LVL867:
 9079              	.L355:
 353:Core/Src/SEGGER_RTT.c **** 
 9080              		.loc 1 353 1 view .LVU3859
 9081              	.LBE484:
 9082              	.LBE483:
 9083              	.LBE489:
 9084              	.LBB490:
1626:Core/Src/SEGGER_RTT.c ****   } while (BufferIndex < pRTTCB->MaxNumUpBuffers);
 9085              		.loc 1 1626 16 view .LVU3860
 9086 0106 0120     		movs	r0, #1
 9087 0108 9AE7     		b	.L351
 9088              	.LVL868:
 9089              	.L357:
1626:Core/Src/SEGGER_RTT.c ****   } while (BufferIndex < pRTTCB->MaxNumUpBuffers);
 9090              		.loc 1 1626 16 view .LVU3861
 9091 010a 0220     		movs	r0, #2
 9092 010c 98E7     		b	.L351
 9093              	.LVL869:
 9094              	.L358:
1637:Core/Src/SEGGER_RTT.c ****   }
 9095              		.loc 1 1637 17 view .LVU3862
 9096 010e 4FF0FF30 		mov	r0, #-1
 9097              	.LVL870:
1637:Core/Src/SEGGER_RTT.c ****   }
 9098              		.loc 1 1637 17 view .LVU3863
 9099 0112 AEE7     		b	.L352
 9100              	.L362:
 9101              		.align	2
 9102              	.L361:
 9103 0114 00000000 		.word	.LANCHOR0
 9104 0118 00000000 		.word	.LC0
 9105 011c 00000000 		.word	.LANCHOR1
 9106 0120 00000000 		.word	.LANCHOR2
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccs0vIiH.s 			page 248


 9107              	.LBE490:
 9108              		.cfi_endproc
 9109              	.LFE24:
 9111              		.section	.text.SEGGER_RTT_ConfigUpBuffer,"ax",%progbits
 9112              		.align	1
 9113              		.p2align 2,,3
 9114              		.global	SEGGER_RTT_ConfigUpBuffer
 9115              		.syntax unified
 9116              		.thumb
 9117              		.thumb_func
 9119              	SEGGER_RTT_ConfigUpBuffer:
 9120              	.LVL871:
 9121              	.LFB25:
1642:Core/Src/SEGGER_RTT.c **** 
1643:Core/Src/SEGGER_RTT.c **** /*********************************************************************
1644:Core/Src/SEGGER_RTT.c **** *
1645:Core/Src/SEGGER_RTT.c **** *       SEGGER_RTT_ConfigUpBuffer
1646:Core/Src/SEGGER_RTT.c **** *
1647:Core/Src/SEGGER_RTT.c **** *  Function description
1648:Core/Src/SEGGER_RTT.c **** *    Run-time configuration of a specific up-buffer (T->H).
1649:Core/Src/SEGGER_RTT.c **** *    Buffer to be configured is specified by index.
1650:Core/Src/SEGGER_RTT.c **** *    This includes: Buffer address, size, name, flags, ...
1651:Core/Src/SEGGER_RTT.c **** *
1652:Core/Src/SEGGER_RTT.c **** *  Parameters
1653:Core/Src/SEGGER_RTT.c **** *    BufferIndex  Index of the buffer to configure.
1654:Core/Src/SEGGER_RTT.c **** *    sName        Pointer to a constant name string.
1655:Core/Src/SEGGER_RTT.c **** *    pBuffer      Pointer to a buffer to be used.
1656:Core/Src/SEGGER_RTT.c **** *    BufferSize   Size of the buffer.
1657:Core/Src/SEGGER_RTT.c **** *    Flags        Operating modes. Define behavior if buffer is full (not enough space for entire m
1658:Core/Src/SEGGER_RTT.c **** *                 Flags[31:24] are used for validity check and must be zero. Flags[23:2] are reserv
1659:Core/Src/SEGGER_RTT.c **** *
1660:Core/Src/SEGGER_RTT.c **** *  Return value
1661:Core/Src/SEGGER_RTT.c **** *    >= 0 - O.K.
1662:Core/Src/SEGGER_RTT.c **** *     < 0 - Error
1663:Core/Src/SEGGER_RTT.c **** *
1664:Core/Src/SEGGER_RTT.c **** *  Additional information
1665:Core/Src/SEGGER_RTT.c **** *    Buffer 0 is configured on compile-time.
1666:Core/Src/SEGGER_RTT.c **** *    May only be called once per buffer.
1667:Core/Src/SEGGER_RTT.c **** *    Buffer name and flags can be reconfigured using the appropriate functions.
1668:Core/Src/SEGGER_RTT.c **** */
1669:Core/Src/SEGGER_RTT.c **** int SEGGER_RTT_ConfigUpBuffer(unsigned BufferIndex, const char* sName, void* pBuffer, unsigned Buff
 9122              		.loc 1 1669 124 is_stmt 1 view -0
 9123              		.cfi_startproc
 9124              		@ args = 4, pretend = 0, frame = 0
 9125              		@ frame_needed = 0, uses_anonymous_args = 0
1670:Core/Src/SEGGER_RTT.c ****   int r;
 9126              		.loc 1 1670 3 view .LVU3865
1671:Core/Src/SEGGER_RTT.c ****   volatile SEGGER_RTT_CB* pRTTCB;
 9127              		.loc 1 1671 3 view .LVU3866
1672:Core/Src/SEGGER_RTT.c ****   volatile SEGGER_RTT_BUFFER_UP* pUp;
 9128              		.loc 1 1672 3 view .LVU3867
 9129              	.LBB495:
1673:Core/Src/SEGGER_RTT.c **** 
1674:Core/Src/SEGGER_RTT.c ****   INIT();
 9130              		.loc 1 1674 3 view .LVU3868
 9131              		.loc 1 1674 3 view .LVU3869
 9132              		.loc 1 1674 3 view .LVU3870
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccs0vIiH.s 			page 249


 9133              		.loc 1 1674 3 view .LVU3871
 9134              	.LBE495:
1669:Core/Src/SEGGER_RTT.c ****   int r;
 9135              		.loc 1 1669 124 is_stmt 0 view .LVU3872
 9136 0000 2DE9F843 		push	{r3, r4, r5, r6, r7, r8, r9, lr}
 9137              		.cfi_def_cfa_offset 32
 9138              		.cfi_offset 3, -32
 9139              		.cfi_offset 4, -28
 9140              		.cfi_offset 5, -24
 9141              		.cfi_offset 6, -20
 9142              		.cfi_offset 7, -16
 9143              		.cfi_offset 8, -12
 9144              		.cfi_offset 9, -8
 9145              		.cfi_offset 14, -4
 9146              	.LBB498:
 9147              		.loc 1 1674 3 view .LVU3873
 9148 0004 354C     		ldr	r4, .L373
 9149              	.LBE498:
1669:Core/Src/SEGGER_RTT.c ****   int r;
 9150              		.loc 1 1669 124 view .LVU3874
 9151 0006 1F46     		mov	r7, r3
 9152              	.LBB499:
 9153              		.loc 1 1674 3 view .LVU3875
 9154 0008 2378     		ldrb	r3, [r4]	@ zero_extendqisi2
 9155              	.LVL872:
 9156              		.loc 1 1674 3 view .LVU3876
 9157              	.LBE499:
1669:Core/Src/SEGGER_RTT.c ****   int r;
 9158              		.loc 1 1669 124 view .LVU3877
 9159 000a 0546     		mov	r5, r0
 9160 000c 8946     		mov	r9, r1
 9161 000e 9046     		mov	r8, r2
 9162              	.LBB500:
 9163              		.loc 1 1674 3 view .LVU3878
 9164 0010 33B3     		cbz	r3, .L372
 9165              	.LVL873:
 9166              	.L364:
 9167              		.loc 1 1674 3 is_stmt 1 discriminator 3 view .LVU3879
 9168              	.LBE500:
 9169              		.loc 1 1674 9 discriminator 3 view .LVU3880
1675:Core/Src/SEGGER_RTT.c ****   pRTTCB = (volatile SEGGER_RTT_CB*)((unsigned char*)&_SEGGER_RTT + SEGGER_RTT_UNCACHED_OFF);  // A
 9170              		.loc 1 1675 3 discriminator 3 view .LVU3881
1676:Core/Src/SEGGER_RTT.c ****   if (BufferIndex < SEGGER_RTT_MAX_NUM_UP_BUFFERS) {
 9171              		.loc 1 1676 3 discriminator 3 view .LVU3882
 9172              		.loc 1 1676 6 is_stmt 0 discriminator 3 view .LVU3883
 9173 0012 022D     		cmp	r5, #2
 9174 0014 5ED8     		bhi	.L367
 9175              	.LBB501:
1677:Core/Src/SEGGER_RTT.c ****     SEGGER_RTT_LOCK();
 9176              		.loc 1 1677 5 is_stmt 1 view .LVU3884
 9177              		.loc 1 1677 5 view .LVU3885
 9178              		.syntax unified
 9179              	@ 1677 "Core/Src/SEGGER_RTT.c" 1
 9180 0016 EFF31186 		mrs   r6, basepri  
 9181 001a 4FF02001 		mov   r1, #32       
 9182 001e 81F31188 		msr   basepri, r1  
 9183              		
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccs0vIiH.s 			page 250


 9184              	@ 0 "" 2
 9185              	.LVL874:
 9186              		.loc 1 1677 22 view .LVU3886
1678:Core/Src/SEGGER_RTT.c ****     pUp = &pRTTCB->aUp[BufferIndex];
 9187              		.loc 1 1678 5 view .LVU3887
1679:Core/Src/SEGGER_RTT.c ****     if (BufferIndex) {
 9188              		.loc 1 1679 5 view .LVU3888
 9189              		.loc 1 1679 8 is_stmt 0 view .LVU3889
 9190              		.thumb
 9191              		.syntax unified
 9192 0022 55B9     		cbnz	r5, .L370
 9193 0024 2A46     		mov	r2, r5
 9194              	.L366:
1680:Core/Src/SEGGER_RTT.c ****       pUp->sName        = sName;
1681:Core/Src/SEGGER_RTT.c ****       pUp->pBuffer      = (char*)pBuffer;
1682:Core/Src/SEGGER_RTT.c ****       pUp->SizeOfBuffer = BufferSize;
1683:Core/Src/SEGGER_RTT.c ****       pUp->RdOff        = 0u;
1684:Core/Src/SEGGER_RTT.c ****       pUp->WrOff        = 0u;
1685:Core/Src/SEGGER_RTT.c ****     }
1686:Core/Src/SEGGER_RTT.c ****     pUp->Flags          = Flags;
 9195              		.loc 1 1686 5 is_stmt 1 view .LVU3890
 9196              		.loc 1 1686 25 is_stmt 0 view .LVU3891
 9197 0026 5319     		adds	r3, r2, r5
 9198 0028 04EBC304 		add	r4, r4, r3, lsl #3
 9199 002c 089B     		ldr	r3, [sp, #32]
 9200 002e E362     		str	r3, [r4, #44]
1687:Core/Src/SEGGER_RTT.c ****     SEGGER_RTT_UNLOCK();
 9201              		.loc 1 1687 5 is_stmt 1 view .LVU3892
 9202              		.syntax unified
 9203              	@ 1687 "Core/Src/SEGGER_RTT.c" 1
 9204 0030 86F31188 		msr   basepri, r6  
 9205              		
 9206              	@ 0 "" 2
 9207              		.thumb
 9208              		.syntax unified
 9209              	.LBE501:
 9210              		.loc 1 1687 24 view .LVU3893
1688:Core/Src/SEGGER_RTT.c ****     r =  0;
 9211              		.loc 1 1688 5 view .LVU3894
 9212              	.LVL875:
 9213              		.loc 1 1688 7 is_stmt 0 view .LVU3895
 9214 0034 0020     		movs	r0, #0
 9215              	.LVL876:
 9216              	.L363:
1689:Core/Src/SEGGER_RTT.c ****   } else {
1690:Core/Src/SEGGER_RTT.c ****     r = -1;
1691:Core/Src/SEGGER_RTT.c ****   }
1692:Core/Src/SEGGER_RTT.c ****   return r;
1693:Core/Src/SEGGER_RTT.c **** }
 9217              		.loc 1 1693 1 view .LVU3896
 9218 0036 BDE8F883 		pop	{r3, r4, r5, r6, r7, r8, r9, pc}
 9219              	.LVL877:
 9220              	.L370:
 9221              	.LBB502:
1680:Core/Src/SEGGER_RTT.c ****       pUp->pBuffer      = (char*)pBuffer;
 9222              		.loc 1 1680 7 is_stmt 1 view .LVU3897
1680:Core/Src/SEGGER_RTT.c ****       pUp->pBuffer      = (char*)pBuffer;
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccs0vIiH.s 			page 251


 9223              		.loc 1 1680 25 is_stmt 0 view .LVU3898
 9224 003a 681C     		adds	r0, r5, #1
 9225 003c 00EB4000 		add	r0, r0, r0, lsl #1
 9226 0040 C000     		lsls	r0, r0, #3
1682:Core/Src/SEGGER_RTT.c ****       pUp->RdOff        = 0u;
 9227              		.loc 1 1682 25 view .LVU3899
 9228 0042 05EB4503 		add	r3, r5, r5, lsl #1
1680:Core/Src/SEGGER_RTT.c ****       pUp->pBuffer      = (char*)pBuffer;
 9229              		.loc 1 1680 25 view .LVU3900
 9230 0046 44F80090 		str	r9, [r4, r0]
1681:Core/Src/SEGGER_RTT.c ****       pUp->SizeOfBuffer = BufferSize;
 9231              		.loc 1 1681 7 is_stmt 1 view .LVU3901
1682:Core/Src/SEGGER_RTT.c ****       pUp->RdOff        = 0u;
 9232              		.loc 1 1682 25 is_stmt 0 view .LVU3902
 9233 004a 04EBC303 		add	r3, r4, r3, lsl #3
1681:Core/Src/SEGGER_RTT.c ****       pUp->SizeOfBuffer = BufferSize;
 9234              		.loc 1 1681 25 view .LVU3903
 9235 004e 2044     		add	r0, r0, r4
1683:Core/Src/SEGGER_RTT.c ****       pUp->WrOff        = 0u;
 9236              		.loc 1 1683 25 view .LVU3904
 9237 0050 0021     		movs	r1, #0
1681:Core/Src/SEGGER_RTT.c ****       pUp->SizeOfBuffer = BufferSize;
 9238              		.loc 1 1681 25 view .LVU3905
 9239 0052 C0F80480 		str	r8, [r0, #4]
1682:Core/Src/SEGGER_RTT.c ****       pUp->RdOff        = 0u;
 9240              		.loc 1 1682 7 is_stmt 1 view .LVU3906
1682:Core/Src/SEGGER_RTT.c ****       pUp->RdOff        = 0u;
 9241              		.loc 1 1682 25 is_stmt 0 view .LVU3907
 9242 0056 6A00     		lsls	r2, r5, #1
 9243 0058 1F62     		str	r7, [r3, #32]
1683:Core/Src/SEGGER_RTT.c ****       pUp->WrOff        = 0u;
 9244              		.loc 1 1683 7 is_stmt 1 view .LVU3908
1683:Core/Src/SEGGER_RTT.c ****       pUp->WrOff        = 0u;
 9245              		.loc 1 1683 25 is_stmt 0 view .LVU3909
 9246 005a 9962     		str	r1, [r3, #40]
1684:Core/Src/SEGGER_RTT.c ****     }
 9247              		.loc 1 1684 7 is_stmt 1 view .LVU3910
1684:Core/Src/SEGGER_RTT.c ****     }
 9248              		.loc 1 1684 25 is_stmt 0 view .LVU3911
 9249 005c 5962     		str	r1, [r3, #36]
 9250 005e E2E7     		b	.L366
 9251              	.LVL878:
 9252              	.L372:
1684:Core/Src/SEGGER_RTT.c ****     }
 9253              		.loc 1 1684 25 view .LVU3912
 9254 0060 03F0FF06 		and	r6, r3, #255
 9255              	.LBE502:
 9256              	.LBB503:
1674:Core/Src/SEGGER_RTT.c ****   pRTTCB = (volatile SEGGER_RTT_CB*)((unsigned char*)&_SEGGER_RTT + SEGGER_RTT_UNCACHED_OFF);  // A
 9257              		.loc 1 1674 3 is_stmt 1 view .LVU3913
 9258              	.LBB496:
 9259              	.LBI496:
 314:Core/Src/SEGGER_RTT.c ****   volatile SEGGER_RTT_CB* p;   // Volatile to make sure that compiler cannot change the order of ac
 9260              		.loc 1 314 13 view .LVU3914
 9261              	.LBB497:
 315:Core/Src/SEGGER_RTT.c ****   static const char _aInitStr[] = "\0\0\0\0\0\0TTR REGGES";  // Init complete ID string to make sur
 9262              		.loc 1 315 3 view .LVU3915
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccs0vIiH.s 			page 252


 316:Core/Src/SEGGER_RTT.c ****   unsigned i;
 9263              		.loc 1 316 3 view .LVU3916
 317:Core/Src/SEGGER_RTT.c ****   //
 9264              		.loc 1 317 3 view .LVU3917
 321:Core/Src/SEGGER_RTT.c ****   memset((SEGGER_RTT_CB*)p, 0, sizeof(_SEGGER_RTT));         // Make sure that the RTT CB is always
 9265              		.loc 1 321 3 view .LVU3918
 9266              	.LVL879:
 322:Core/Src/SEGGER_RTT.c ****   p->MaxNumUpBuffers    = SEGGER_RTT_MAX_NUM_UP_BUFFERS;
 9267              		.loc 1 322 3 view .LVU3919
 9268 0064 3146     		mov	r1, r6
 9269              	.LVL880:
 322:Core/Src/SEGGER_RTT.c ****   p->MaxNumUpBuffers    = SEGGER_RTT_MAX_NUM_UP_BUFFERS;
 9270              		.loc 1 322 3 is_stmt 0 view .LVU3920
 9271 0066 7822     		movs	r2, #120
 9272              	.LVL881:
 322:Core/Src/SEGGER_RTT.c ****   p->MaxNumUpBuffers    = SEGGER_RTT_MAX_NUM_UP_BUFFERS;
 9273              		.loc 1 322 3 view .LVU3921
 9274 0068 04F13000 		add	r0, r4, #48
 9275              	.LVL882:
 322:Core/Src/SEGGER_RTT.c ****   p->MaxNumUpBuffers    = SEGGER_RTT_MAX_NUM_UP_BUFFERS;
 9276              		.loc 1 322 3 view .LVU3922
 9277 006c FFF7FEFF 		bl	memset
 9278              	.LVL883:
 323:Core/Src/SEGGER_RTT.c ****   p->MaxNumDownBuffers  = SEGGER_RTT_MAX_NUM_DOWN_BUFFERS;
 9279              		.loc 1 323 3 is_stmt 1 view .LVU3923
 323:Core/Src/SEGGER_RTT.c ****   p->MaxNumDownBuffers  = SEGGER_RTT_MAX_NUM_DOWN_BUFFERS;
 9280              		.loc 1 323 25 is_stmt 0 view .LVU3924
 9281 0070 0322     		movs	r2, #3
 9282 0072 2261     		str	r2, [r4, #16]
 324:Core/Src/SEGGER_RTT.c ****   //
 9283              		.loc 1 324 3 is_stmt 1 view .LVU3925
 328:Core/Src/SEGGER_RTT.c ****   p->aUp[0].pBuffer       = _acUpBuffer;
 9284              		.loc 1 328 27 is_stmt 0 view .LVU3926
 9285 0074 1A4B     		ldr	r3, .L373+4
 324:Core/Src/SEGGER_RTT.c ****   //
 9286              		.loc 1 324 25 view .LVU3927
 9287 0076 6261     		str	r2, [r4, #20]
 328:Core/Src/SEGGER_RTT.c ****   p->aUp[0].pBuffer       = _acUpBuffer;
 9288              		.loc 1 328 3 is_stmt 1 view .LVU3928
 330:Core/Src/SEGGER_RTT.c ****   p->aUp[0].RdOff         = 0u;
 9289              		.loc 1 330 27 is_stmt 0 view .LVU3929
 9290 0078 4FF48061 		mov	r1, #1024
 329:Core/Src/SEGGER_RTT.c ****   p->aUp[0].SizeOfBuffer  = BUFFER_SIZE_UP;
 9291              		.loc 1 329 27 view .LVU3930
 9292 007c 194A     		ldr	r2, .L373+8
 328:Core/Src/SEGGER_RTT.c ****   p->aUp[0].pBuffer       = _acUpBuffer;
 9293              		.loc 1 328 27 view .LVU3931
 9294 007e A361     		str	r3, [r4, #24]
 329:Core/Src/SEGGER_RTT.c ****   p->aUp[0].SizeOfBuffer  = BUFFER_SIZE_UP;
 9295              		.loc 1 329 3 is_stmt 1 view .LVU3932
 329:Core/Src/SEGGER_RTT.c ****   p->aUp[0].SizeOfBuffer  = BUFFER_SIZE_UP;
 9296              		.loc 1 329 27 is_stmt 0 view .LVU3933
 9297 0080 E261     		str	r2, [r4, #28]
 330:Core/Src/SEGGER_RTT.c ****   p->aUp[0].RdOff         = 0u;
 9298              		.loc 1 330 3 is_stmt 1 view .LVU3934
 330:Core/Src/SEGGER_RTT.c ****   p->aUp[0].RdOff         = 0u;
 9299              		.loc 1 330 27 is_stmt 0 view .LVU3935
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccs0vIiH.s 			page 253


 9300 0082 2162     		str	r1, [r4, #32]
 331:Core/Src/SEGGER_RTT.c ****   p->aUp[0].WrOff         = 0u;
 9301              		.loc 1 331 3 is_stmt 1 view .LVU3936
 338:Core/Src/SEGGER_RTT.c ****   p->aDown[0].SizeOfBuffer  = BUFFER_SIZE_DOWN;
 9302              		.loc 1 338 29 is_stmt 0 view .LVU3937
 9303 0084 184A     		ldr	r2, .L373+12
 331:Core/Src/SEGGER_RTT.c ****   p->aUp[0].WrOff         = 0u;
 9304              		.loc 1 331 27 view .LVU3938
 9305 0086 A662     		str	r6, [r4, #40]
 332:Core/Src/SEGGER_RTT.c ****   p->aUp[0].Flags         = SEGGER_RTT_MODE_DEFAULT;
 9306              		.loc 1 332 3 is_stmt 1 view .LVU3939
 332:Core/Src/SEGGER_RTT.c ****   p->aUp[0].Flags         = SEGGER_RTT_MODE_DEFAULT;
 9307              		.loc 1 332 27 is_stmt 0 view .LVU3940
 9308 0088 6662     		str	r6, [r4, #36]
 333:Core/Src/SEGGER_RTT.c ****   //
 9309              		.loc 1 333 3 is_stmt 1 view .LVU3941
 333:Core/Src/SEGGER_RTT.c ****   //
 9310              		.loc 1 333 27 is_stmt 0 view .LVU3942
 9311 008a E662     		str	r6, [r4, #44]
 337:Core/Src/SEGGER_RTT.c ****   p->aDown[0].pBuffer       = _acDownBuffer;
 9312              		.loc 1 337 3 is_stmt 1 view .LVU3943
 337:Core/Src/SEGGER_RTT.c ****   p->aDown[0].pBuffer       = _acDownBuffer;
 9313              		.loc 1 337 29 is_stmt 0 view .LVU3944
 9314 008c 2366     		str	r3, [r4, #96]
 338:Core/Src/SEGGER_RTT.c ****   p->aDown[0].SizeOfBuffer  = BUFFER_SIZE_DOWN;
 9315              		.loc 1 338 3 is_stmt 1 view .LVU3945
 339:Core/Src/SEGGER_RTT.c ****   p->aDown[0].RdOff         = 0u;
 9316              		.loc 1 339 29 is_stmt 0 view .LVU3946
 9317 008e 1023     		movs	r3, #16
 338:Core/Src/SEGGER_RTT.c ****   p->aDown[0].SizeOfBuffer  = BUFFER_SIZE_DOWN;
 9318              		.loc 1 338 29 view .LVU3947
 9319 0090 6266     		str	r2, [r4, #100]
 339:Core/Src/SEGGER_RTT.c ****   p->aDown[0].RdOff         = 0u;
 9320              		.loc 1 339 3 is_stmt 1 view .LVU3948
 339:Core/Src/SEGGER_RTT.c ****   p->aDown[0].RdOff         = 0u;
 9321              		.loc 1 339 29 is_stmt 0 view .LVU3949
 9322 0092 A366     		str	r3, [r4, #104]
 340:Core/Src/SEGGER_RTT.c ****   p->aDown[0].WrOff         = 0u;
 9323              		.loc 1 340 3 is_stmt 1 view .LVU3950
 340:Core/Src/SEGGER_RTT.c ****   p->aDown[0].WrOff         = 0u;
 9324              		.loc 1 340 29 is_stmt 0 view .LVU3951
 9325 0094 2667     		str	r6, [r4, #112]
 341:Core/Src/SEGGER_RTT.c ****   p->aDown[0].Flags         = SEGGER_RTT_MODE_DEFAULT;
 9326              		.loc 1 341 3 is_stmt 1 view .LVU3952
 341:Core/Src/SEGGER_RTT.c ****   p->aDown[0].Flags         = SEGGER_RTT_MODE_DEFAULT;
 9327              		.loc 1 341 29 is_stmt 0 view .LVU3953
 9328 0096 E666     		str	r6, [r4, #108]
 342:Core/Src/SEGGER_RTT.c ****   //
 9329              		.loc 1 342 3 is_stmt 1 view .LVU3954
 342:Core/Src/SEGGER_RTT.c ****   //
 9330              		.loc 1 342 29 is_stmt 0 view .LVU3955
 9331 0098 6667     		str	r6, [r4, #116]
 348:Core/Src/SEGGER_RTT.c ****   for (i = 0; i < sizeof(_aInitStr) - 1; ++i) {
 9332              		.loc 1 348 3 is_stmt 1 view .LVU3956
 9333              		.syntax unified
 9334              	@ 348 "Core/Src/SEGGER_RTT.c" 1
 9335 009a BFF35F8F 		dmb
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccs0vIiH.s 			page 254


 9336              	
 9337              	@ 0 "" 2
 348:Core/Src/SEGGER_RTT.c ****   for (i = 0; i < sizeof(_aInitStr) - 1; ++i) {
 9338              		.loc 1 348 13 view .LVU3957
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 9339              		.loc 1 349 3 view .LVU3958
 9340              	.LVL884:
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 9341              		.loc 1 349 17 view .LVU3959
 350:Core/Src/SEGGER_RTT.c ****   }
 9342              		.loc 1 350 5 view .LVU3960
 350:Core/Src/SEGGER_RTT.c ****   }
 9343              		.loc 1 350 16 is_stmt 0 view .LVU3961
 9344              		.thumb
 9345              		.syntax unified
 9346 009e 4521     		movs	r1, #69
 9347 00a0 4720     		movs	r0, #71
 9348 00a2 4FF0530C 		mov	ip, #83
 9349 00a6 84F800C0 		strb	ip, [r4]
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 9350              		.loc 1 349 42 is_stmt 1 view .LVU3962
 9351              	.LVL885:
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 9352              		.loc 1 349 17 view .LVU3963
 350:Core/Src/SEGGER_RTT.c ****   }
 9353              		.loc 1 350 5 view .LVU3964
 350:Core/Src/SEGGER_RTT.c ****   }
 9354              		.loc 1 350 16 is_stmt 0 view .LVU3965
 9355 00aa 5222     		movs	r2, #82
 9356 00ac 6170     		strb	r1, [r4, #1]
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 9357              		.loc 1 349 42 is_stmt 1 view .LVU3966
 9358              	.LVL886:
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 9359              		.loc 1 349 17 view .LVU3967
 350:Core/Src/SEGGER_RTT.c ****   }
 9360              		.loc 1 350 5 view .LVU3968
 350:Core/Src/SEGGER_RTT.c ****   }
 9361              		.loc 1 350 16 is_stmt 0 view .LVU3969
 9362 00ae 5423     		movs	r3, #84
 9363 00b0 A070     		strb	r0, [r4, #2]
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 9364              		.loc 1 349 42 is_stmt 1 view .LVU3970
 9365              	.LVL887:
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 9366              		.loc 1 349 17 view .LVU3971
 350:Core/Src/SEGGER_RTT.c ****   }
 9367              		.loc 1 350 5 view .LVU3972
 350:Core/Src/SEGGER_RTT.c ****   }
 9368              		.loc 1 350 16 is_stmt 0 view .LVU3973
 9369 00b2 E070     		strb	r0, [r4, #3]
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 9370              		.loc 1 349 42 is_stmt 1 view .LVU3974
 9371              	.LVL888:
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 9372              		.loc 1 349 17 view .LVU3975
 350:Core/Src/SEGGER_RTT.c ****   }
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccs0vIiH.s 			page 255


 9373              		.loc 1 350 5 view .LVU3976
 350:Core/Src/SEGGER_RTT.c ****   }
 9374              		.loc 1 350 16 is_stmt 0 view .LVU3977
 9375 00b4 2171     		strb	r1, [r4, #4]
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 9376              		.loc 1 349 42 is_stmt 1 view .LVU3978
 9377              	.LVL889:
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 9378              		.loc 1 349 17 view .LVU3979
 350:Core/Src/SEGGER_RTT.c ****   }
 9379              		.loc 1 350 5 view .LVU3980
 350:Core/Src/SEGGER_RTT.c ****   }
 9380              		.loc 1 350 16 is_stmt 0 view .LVU3981
 9381 00b6 2021     		movs	r1, #32
 9382 00b8 6271     		strb	r2, [r4, #5]
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 9383              		.loc 1 349 42 is_stmt 1 view .LVU3982
 9384              	.LVL890:
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 9385              		.loc 1 349 17 view .LVU3983
 350:Core/Src/SEGGER_RTT.c ****   }
 9386              		.loc 1 350 5 view .LVU3984
 350:Core/Src/SEGGER_RTT.c ****   }
 9387              		.loc 1 350 16 is_stmt 0 view .LVU3985
 9388 00ba A171     		strb	r1, [r4, #6]
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 9389              		.loc 1 349 42 is_stmt 1 view .LVU3986
 9390              	.LVL891:
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 9391              		.loc 1 349 17 view .LVU3987
 350:Core/Src/SEGGER_RTT.c ****   }
 9392              		.loc 1 350 5 view .LVU3988
 350:Core/Src/SEGGER_RTT.c ****   }
 9393              		.loc 1 350 16 is_stmt 0 view .LVU3989
 9394 00bc E271     		strb	r2, [r4, #7]
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 9395              		.loc 1 349 42 is_stmt 1 view .LVU3990
 9396              	.LVL892:
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 9397              		.loc 1 349 17 view .LVU3991
 350:Core/Src/SEGGER_RTT.c ****   }
 9398              		.loc 1 350 5 view .LVU3992
 350:Core/Src/SEGGER_RTT.c ****   }
 9399              		.loc 1 350 16 is_stmt 0 view .LVU3993
 9400 00be 2372     		strb	r3, [r4, #8]
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 9401              		.loc 1 349 42 is_stmt 1 view .LVU3994
 9402              	.LVL893:
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 9403              		.loc 1 349 17 view .LVU3995
 350:Core/Src/SEGGER_RTT.c ****   }
 9404              		.loc 1 350 5 view .LVU3996
 350:Core/Src/SEGGER_RTT.c ****   }
 9405              		.loc 1 350 16 is_stmt 0 view .LVU3997
 9406 00c0 6372     		strb	r3, [r4, #9]
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 9407              		.loc 1 349 42 is_stmt 1 view .LVU3998
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccs0vIiH.s 			page 256


 9408              	.LVL894:
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 9409              		.loc 1 349 17 view .LVU3999
 350:Core/Src/SEGGER_RTT.c ****   }
 9410              		.loc 1 350 5 view .LVU4000
 350:Core/Src/SEGGER_RTT.c ****   }
 9411              		.loc 1 350 16 is_stmt 0 view .LVU4001
 9412 00c2 A672     		strb	r6, [r4, #10]
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 9413              		.loc 1 349 42 is_stmt 1 view .LVU4002
 9414              	.LVL895:
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 9415              		.loc 1 349 17 view .LVU4003
 350:Core/Src/SEGGER_RTT.c ****   }
 9416              		.loc 1 350 5 view .LVU4004
 350:Core/Src/SEGGER_RTT.c ****   }
 9417              		.loc 1 350 16 is_stmt 0 view .LVU4005
 9418 00c4 E672     		strb	r6, [r4, #11]
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 9419              		.loc 1 349 42 is_stmt 1 view .LVU4006
 9420              	.LVL896:
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 9421              		.loc 1 349 17 view .LVU4007
 350:Core/Src/SEGGER_RTT.c ****   }
 9422              		.loc 1 350 5 view .LVU4008
 350:Core/Src/SEGGER_RTT.c ****   }
 9423              		.loc 1 350 16 is_stmt 0 view .LVU4009
 9424 00c6 2673     		strb	r6, [r4, #12]
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 9425              		.loc 1 349 42 is_stmt 1 view .LVU4010
 9426              	.LVL897:
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 9427              		.loc 1 349 17 view .LVU4011
 350:Core/Src/SEGGER_RTT.c ****   }
 9428              		.loc 1 350 5 view .LVU4012
 350:Core/Src/SEGGER_RTT.c ****   }
 9429              		.loc 1 350 16 is_stmt 0 view .LVU4013
 9430 00c8 6673     		strb	r6, [r4, #13]
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 9431              		.loc 1 349 42 is_stmt 1 view .LVU4014
 9432              	.LVL898:
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 9433              		.loc 1 349 17 view .LVU4015
 350:Core/Src/SEGGER_RTT.c ****   }
 9434              		.loc 1 350 5 view .LVU4016
 350:Core/Src/SEGGER_RTT.c ****   }
 9435              		.loc 1 350 16 is_stmt 0 view .LVU4017
 9436 00ca A673     		strb	r6, [r4, #14]
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 9437              		.loc 1 349 42 is_stmt 1 view .LVU4018
 9438              	.LVL899:
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 9439              		.loc 1 349 17 view .LVU4019
 350:Core/Src/SEGGER_RTT.c ****   }
 9440              		.loc 1 350 5 view .LVU4020
 350:Core/Src/SEGGER_RTT.c ****   }
 9441              		.loc 1 350 16 is_stmt 0 view .LVU4021
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccs0vIiH.s 			page 257


 9442 00cc E673     		strb	r6, [r4, #15]
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 9443              		.loc 1 349 42 is_stmt 1 view .LVU4022
 9444              	.LVL900:
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 9445              		.loc 1 349 17 view .LVU4023
 352:Core/Src/SEGGER_RTT.c **** }
 9446              		.loc 1 352 3 view .LVU4024
 9447              		.syntax unified
 9448              	@ 352 "Core/Src/SEGGER_RTT.c" 1
 9449 00ce BFF35F8F 		dmb
 9450              	
 9451              	@ 0 "" 2
 352:Core/Src/SEGGER_RTT.c **** }
 9452              		.loc 1 352 13 view .LVU4025
 353:Core/Src/SEGGER_RTT.c **** 
 9453              		.loc 1 353 1 is_stmt 0 view .LVU4026
 9454              		.thumb
 9455              		.syntax unified
 9456 00d2 9EE7     		b	.L364
 9457              	.LVL901:
 9458              	.L367:
 353:Core/Src/SEGGER_RTT.c **** 
 9459              		.loc 1 353 1 view .LVU4027
 9460              	.LBE497:
 9461              	.LBE496:
 9462              	.LBE503:
1690:Core/Src/SEGGER_RTT.c ****   }
 9463              		.loc 1 1690 7 view .LVU4028
 9464 00d4 4FF0FF30 		mov	r0, #-1
 9465              	.LVL902:
1692:Core/Src/SEGGER_RTT.c **** }
 9466              		.loc 1 1692 3 is_stmt 1 view .LVU4029
1692:Core/Src/SEGGER_RTT.c **** }
 9467              		.loc 1 1692 10 is_stmt 0 view .LVU4030
 9468 00d8 ADE7     		b	.L363
 9469              	.L374:
 9470 00da 00BF     		.align	2
 9471              	.L373:
 9472 00dc 00000000 		.word	.LANCHOR0
 9473 00e0 00000000 		.word	.LC0
 9474 00e4 00000000 		.word	.LANCHOR1
 9475 00e8 00000000 		.word	.LANCHOR2
 9476              		.cfi_endproc
 9477              	.LFE25:
 9479              		.section	.text.SEGGER_RTT_ConfigDownBuffer,"ax",%progbits
 9480              		.align	1
 9481              		.p2align 2,,3
 9482              		.global	SEGGER_RTT_ConfigDownBuffer
 9483              		.syntax unified
 9484              		.thumb
 9485              		.thumb_func
 9487              	SEGGER_RTT_ConfigDownBuffer:
 9488              	.LVL903:
 9489              	.LFB26:
1694:Core/Src/SEGGER_RTT.c **** 
1695:Core/Src/SEGGER_RTT.c **** /*********************************************************************
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccs0vIiH.s 			page 258


1696:Core/Src/SEGGER_RTT.c **** *
1697:Core/Src/SEGGER_RTT.c **** *       SEGGER_RTT_ConfigDownBuffer
1698:Core/Src/SEGGER_RTT.c **** *
1699:Core/Src/SEGGER_RTT.c **** *  Function description
1700:Core/Src/SEGGER_RTT.c **** *    Run-time configuration of a specific down-buffer (H->T).
1701:Core/Src/SEGGER_RTT.c **** *    Buffer to be configured is specified by index.
1702:Core/Src/SEGGER_RTT.c **** *    This includes: Buffer address, size, name, flags, ...
1703:Core/Src/SEGGER_RTT.c **** *
1704:Core/Src/SEGGER_RTT.c **** *  Parameters
1705:Core/Src/SEGGER_RTT.c **** *    BufferIndex  Index of the buffer to configure.
1706:Core/Src/SEGGER_RTT.c **** *    sName        Pointer to a constant name string.
1707:Core/Src/SEGGER_RTT.c **** *    pBuffer      Pointer to a buffer to be used.
1708:Core/Src/SEGGER_RTT.c **** *    BufferSize   Size of the buffer.
1709:Core/Src/SEGGER_RTT.c **** *    Flags        Operating modes. Define behavior if buffer is full (not enough space for entire m
1710:Core/Src/SEGGER_RTT.c **** *                 Flags[31:24] are used for validity check and must be zero. Flags[23:2] are reserv
1711:Core/Src/SEGGER_RTT.c **** *
1712:Core/Src/SEGGER_RTT.c **** *  Return value
1713:Core/Src/SEGGER_RTT.c **** *    >= 0  O.K.
1714:Core/Src/SEGGER_RTT.c **** *     < 0  Error
1715:Core/Src/SEGGER_RTT.c **** *
1716:Core/Src/SEGGER_RTT.c **** *  Additional information
1717:Core/Src/SEGGER_RTT.c **** *    Buffer 0 is configured on compile-time.
1718:Core/Src/SEGGER_RTT.c **** *    May only be called once per buffer.
1719:Core/Src/SEGGER_RTT.c **** *    Buffer name and flags can be reconfigured using the appropriate functions.
1720:Core/Src/SEGGER_RTT.c **** */
1721:Core/Src/SEGGER_RTT.c **** int SEGGER_RTT_ConfigDownBuffer(unsigned BufferIndex, const char* sName, void* pBuffer, unsigned Bu
 9490              		.loc 1 1721 126 is_stmt 1 view -0
 9491              		.cfi_startproc
 9492              		@ args = 4, pretend = 0, frame = 0
 9493              		@ frame_needed = 0, uses_anonymous_args = 0
1722:Core/Src/SEGGER_RTT.c ****   int r;
 9494              		.loc 1 1722 3 view .LVU4032
1723:Core/Src/SEGGER_RTT.c ****   volatile SEGGER_RTT_CB* pRTTCB;
 9495              		.loc 1 1723 3 view .LVU4033
1724:Core/Src/SEGGER_RTT.c ****   volatile SEGGER_RTT_BUFFER_DOWN* pDown;
 9496              		.loc 1 1724 3 view .LVU4034
 9497              	.LBB508:
1725:Core/Src/SEGGER_RTT.c **** 
1726:Core/Src/SEGGER_RTT.c ****   INIT();
 9498              		.loc 1 1726 3 view .LVU4035
 9499              		.loc 1 1726 3 view .LVU4036
 9500              		.loc 1 1726 3 view .LVU4037
 9501              		.loc 1 1726 3 view .LVU4038
 9502              	.LBE508:
1721:Core/Src/SEGGER_RTT.c ****   int r;
 9503              		.loc 1 1721 126 is_stmt 0 view .LVU4039
 9504 0000 2DE9F843 		push	{r3, r4, r5, r6, r7, r8, r9, lr}
 9505              		.cfi_def_cfa_offset 32
 9506              		.cfi_offset 3, -32
 9507              		.cfi_offset 4, -28
 9508              		.cfi_offset 5, -24
 9509              		.cfi_offset 6, -20
 9510              		.cfi_offset 7, -16
 9511              		.cfi_offset 8, -12
 9512              		.cfi_offset 9, -8
 9513              		.cfi_offset 14, -4
 9514              	.LBB511:
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccs0vIiH.s 			page 259


 9515              		.loc 1 1726 3 view .LVU4040
 9516 0004 334C     		ldr	r4, .L385
 9517              	.LBE511:
1721:Core/Src/SEGGER_RTT.c ****   int r;
 9518              		.loc 1 1721 126 view .LVU4041
 9519 0006 0546     		mov	r5, r0
 9520              	.LBB512:
 9521              		.loc 1 1726 3 view .LVU4042
 9522 0008 2078     		ldrb	r0, [r4]	@ zero_extendqisi2
 9523              	.LVL904:
 9524              		.loc 1 1726 3 view .LVU4043
 9525              	.LBE512:
1721:Core/Src/SEGGER_RTT.c ****   int r;
 9526              		.loc 1 1721 126 view .LVU4044
 9527 000a 8846     		mov	r8, r1
 9528 000c 1746     		mov	r7, r2
 9529 000e 9946     		mov	r9, r3
 9530              	.LBB513:
 9531              		.loc 1 1726 3 view .LVU4045
 9532 0010 18B3     		cbz	r0, .L384
 9533              	.LVL905:
 9534              	.L376:
 9535              		.loc 1 1726 3 is_stmt 1 discriminator 3 view .LVU4046
 9536              	.LBE513:
 9537              		.loc 1 1726 9 discriminator 3 view .LVU4047
1727:Core/Src/SEGGER_RTT.c ****   pRTTCB = (volatile SEGGER_RTT_CB*)((unsigned char*)&_SEGGER_RTT + SEGGER_RTT_UNCACHED_OFF);  // A
 9538              		.loc 1 1727 3 discriminator 3 view .LVU4048
1728:Core/Src/SEGGER_RTT.c ****   if (BufferIndex < SEGGER_RTT_MAX_NUM_DOWN_BUFFERS) {
 9539              		.loc 1 1728 3 discriminator 3 view .LVU4049
 9540              		.loc 1 1728 6 is_stmt 0 discriminator 3 view .LVU4050
 9541 0012 022D     		cmp	r5, #2
 9542 0014 5BD8     		bhi	.L379
 9543              	.LBB514:
1729:Core/Src/SEGGER_RTT.c ****     SEGGER_RTT_LOCK();
 9544              		.loc 1 1729 5 is_stmt 1 view .LVU4051
 9545              		.loc 1 1729 5 view .LVU4052
 9546              		.syntax unified
 9547              	@ 1729 "Core/Src/SEGGER_RTT.c" 1
 9548 0016 EFF31182 		mrs   r2, basepri  
 9549 001a 4FF02001 		mov   r1, #32       
 9550 001e 81F31188 		msr   basepri, r1  
 9551              		
 9552              	@ 0 "" 2
 9553              	.LVL906:
 9554              		.loc 1 1729 22 view .LVU4053
1730:Core/Src/SEGGER_RTT.c ****     pDown = &pRTTCB->aDown[BufferIndex];
 9555              		.loc 1 1730 5 view .LVU4054
1731:Core/Src/SEGGER_RTT.c ****     if (BufferIndex) {
 9556              		.loc 1 1731 5 view .LVU4055
 9557              		.loc 1 1731 8 is_stmt 0 view .LVU4056
 9558              		.thumb
 9559              		.syntax unified
 9560 0022 65B9     		cbnz	r5, .L382
 9561 0024 2B46     		mov	r3, r5
 9562              	.L378:
1732:Core/Src/SEGGER_RTT.c ****       pDown->sName        = sName;
1733:Core/Src/SEGGER_RTT.c ****       pDown->pBuffer      = (char*)pBuffer;
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccs0vIiH.s 			page 260


1734:Core/Src/SEGGER_RTT.c ****       pDown->SizeOfBuffer = BufferSize;
1735:Core/Src/SEGGER_RTT.c ****       pDown->RdOff        = 0u;
1736:Core/Src/SEGGER_RTT.c ****       pDown->WrOff        = 0u;
1737:Core/Src/SEGGER_RTT.c ****     }
1738:Core/Src/SEGGER_RTT.c ****     pDown->Flags          = Flags;
 9563              		.loc 1 1738 5 is_stmt 1 view .LVU4057
 9564              		.loc 1 1738 27 is_stmt 0 view .LVU4058
 9565 0026 2B44     		add	r3, r3, r5
 9566 0028 04EBC304 		add	r4, r4, r3, lsl #3
 9567 002c 089B     		ldr	r3, [sp, #32]
 9568 002e 6367     		str	r3, [r4, #116]
1739:Core/Src/SEGGER_RTT.c ****     RTT__DMB();                     // Force data write to be complete before writing the <WrOff>, 
 9569              		.loc 1 1739 5 is_stmt 1 view .LVU4059
 9570              		.syntax unified
 9571              	@ 1739 "Core/Src/SEGGER_RTT.c" 1
 9572 0030 BFF35F8F 		dmb
 9573              	
 9574              	@ 0 "" 2
 9575              		.loc 1 1739 15 view .LVU4060
1740:Core/Src/SEGGER_RTT.c ****     SEGGER_RTT_UNLOCK();
 9576              		.loc 1 1740 5 view .LVU4061
 9577              	@ 1740 "Core/Src/SEGGER_RTT.c" 1
 9578 0034 82F31188 		msr   basepri, r2  
 9579              		
 9580              	@ 0 "" 2
 9581              		.thumb
 9582              		.syntax unified
 9583              	.LBE514:
 9584              		.loc 1 1740 24 view .LVU4062
1741:Core/Src/SEGGER_RTT.c ****     r =  0;
 9585              		.loc 1 1741 5 view .LVU4063
 9586              	.LVL907:
 9587              		.loc 1 1741 7 is_stmt 0 view .LVU4064
 9588 0038 0020     		movs	r0, #0
 9589              	.LVL908:
 9590              	.L375:
1742:Core/Src/SEGGER_RTT.c ****   } else {
1743:Core/Src/SEGGER_RTT.c ****     r = -1;
1744:Core/Src/SEGGER_RTT.c ****   }
1745:Core/Src/SEGGER_RTT.c ****   return r;
1746:Core/Src/SEGGER_RTT.c **** }
 9591              		.loc 1 1746 1 view .LVU4065
 9592 003a BDE8F883 		pop	{r3, r4, r5, r6, r7, r8, r9, pc}
 9593              	.LVL909:
 9594              	.L382:
 9595              	.LBB515:
1732:Core/Src/SEGGER_RTT.c ****       pDown->pBuffer      = (char*)pBuffer;
 9596              		.loc 1 1732 7 is_stmt 1 view .LVU4066
1732:Core/Src/SEGGER_RTT.c ****       pDown->pBuffer      = (char*)pBuffer;
 9597              		.loc 1 1732 27 is_stmt 0 view .LVU4067
 9598 003e 05EB4500 		add	r0, r5, r5, lsl #1
 9599 0042 04EBC000 		add	r0, r4, r0, lsl #3
1735:Core/Src/SEGGER_RTT.c ****       pDown->WrOff        = 0u;
 9600              		.loc 1 1735 27 view .LVU4068
 9601 0046 0023     		movs	r3, #0
1732:Core/Src/SEGGER_RTT.c ****       pDown->pBuffer      = (char*)pBuffer;
 9602              		.loc 1 1732 27 view .LVU4069
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccs0vIiH.s 			page 261


 9603 0048 C0F86080 		str	r8, [r0, #96]
1733:Core/Src/SEGGER_RTT.c ****       pDown->SizeOfBuffer = BufferSize;
 9604              		.loc 1 1733 7 is_stmt 1 view .LVU4070
1733:Core/Src/SEGGER_RTT.c ****       pDown->SizeOfBuffer = BufferSize;
 9605              		.loc 1 1733 27 is_stmt 0 view .LVU4071
 9606 004c 4766     		str	r7, [r0, #100]
1734:Core/Src/SEGGER_RTT.c ****       pDown->RdOff        = 0u;
 9607              		.loc 1 1734 7 is_stmt 1 view .LVU4072
1734:Core/Src/SEGGER_RTT.c ****       pDown->RdOff        = 0u;
 9608              		.loc 1 1734 27 is_stmt 0 view .LVU4073
 9609 004e C0F86890 		str	r9, [r0, #104]
1735:Core/Src/SEGGER_RTT.c ****       pDown->WrOff        = 0u;
 9610              		.loc 1 1735 7 is_stmt 1 view .LVU4074
1735:Core/Src/SEGGER_RTT.c ****       pDown->WrOff        = 0u;
 9611              		.loc 1 1735 27 is_stmt 0 view .LVU4075
 9612 0052 0367     		str	r3, [r0, #112]
1736:Core/Src/SEGGER_RTT.c ****     }
 9613              		.loc 1 1736 7 is_stmt 1 view .LVU4076
1736:Core/Src/SEGGER_RTT.c ****     }
 9614              		.loc 1 1736 27 is_stmt 0 view .LVU4077
 9615 0054 C366     		str	r3, [r0, #108]
1732:Core/Src/SEGGER_RTT.c ****       pDown->pBuffer      = (char*)pBuffer;
 9616              		.loc 1 1732 27 view .LVU4078
 9617 0056 6B00     		lsls	r3, r5, #1
 9618 0058 E5E7     		b	.L378
 9619              	.LVL910:
 9620              	.L384:
1732:Core/Src/SEGGER_RTT.c ****       pDown->pBuffer      = (char*)pBuffer;
 9621              		.loc 1 1732 27 view .LVU4079
 9622 005a 00F0FF06 		and	r6, r0, #255
 9623              	.LBE515:
 9624              	.LBB516:
1726:Core/Src/SEGGER_RTT.c ****   pRTTCB = (volatile SEGGER_RTT_CB*)((unsigned char*)&_SEGGER_RTT + SEGGER_RTT_UNCACHED_OFF);  // A
 9625              		.loc 1 1726 3 is_stmt 1 view .LVU4080
 9626              	.LBB509:
 9627              	.LBI509:
 314:Core/Src/SEGGER_RTT.c ****   volatile SEGGER_RTT_CB* p;   // Volatile to make sure that compiler cannot change the order of ac
 9628              		.loc 1 314 13 view .LVU4081
 9629              	.LBB510:
 315:Core/Src/SEGGER_RTT.c ****   static const char _aInitStr[] = "\0\0\0\0\0\0TTR REGGES";  // Init complete ID string to make sur
 9630              		.loc 1 315 3 view .LVU4082
 316:Core/Src/SEGGER_RTT.c ****   unsigned i;
 9631              		.loc 1 316 3 view .LVU4083
 317:Core/Src/SEGGER_RTT.c ****   //
 9632              		.loc 1 317 3 view .LVU4084
 321:Core/Src/SEGGER_RTT.c ****   memset((SEGGER_RTT_CB*)p, 0, sizeof(_SEGGER_RTT));         // Make sure that the RTT CB is always
 9633              		.loc 1 321 3 view .LVU4085
 9634              	.LVL911:
 322:Core/Src/SEGGER_RTT.c ****   p->MaxNumUpBuffers    = SEGGER_RTT_MAX_NUM_UP_BUFFERS;
 9635              		.loc 1 322 3 view .LVU4086
 9636 005e 3146     		mov	r1, r6
 9637              	.LVL912:
 322:Core/Src/SEGGER_RTT.c ****   p->MaxNumUpBuffers    = SEGGER_RTT_MAX_NUM_UP_BUFFERS;
 9638              		.loc 1 322 3 is_stmt 0 view .LVU4087
 9639 0060 7822     		movs	r2, #120
 9640              	.LVL913:
 322:Core/Src/SEGGER_RTT.c ****   p->MaxNumUpBuffers    = SEGGER_RTT_MAX_NUM_UP_BUFFERS;
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccs0vIiH.s 			page 262


 9641              		.loc 1 322 3 view .LVU4088
 9642 0062 04F13000 		add	r0, r4, #48
 9643 0066 FFF7FEFF 		bl	memset
 9644              	.LVL914:
 323:Core/Src/SEGGER_RTT.c ****   p->MaxNumDownBuffers  = SEGGER_RTT_MAX_NUM_DOWN_BUFFERS;
 9645              		.loc 1 323 3 is_stmt 1 view .LVU4089
 323:Core/Src/SEGGER_RTT.c ****   p->MaxNumDownBuffers  = SEGGER_RTT_MAX_NUM_DOWN_BUFFERS;
 9646              		.loc 1 323 25 is_stmt 0 view .LVU4090
 9647 006a 0322     		movs	r2, #3
 9648 006c 2261     		str	r2, [r4, #16]
 324:Core/Src/SEGGER_RTT.c ****   //
 9649              		.loc 1 324 3 is_stmt 1 view .LVU4091
 328:Core/Src/SEGGER_RTT.c ****   p->aUp[0].pBuffer       = _acUpBuffer;
 9650              		.loc 1 328 27 is_stmt 0 view .LVU4092
 9651 006e 1A4B     		ldr	r3, .L385+4
 324:Core/Src/SEGGER_RTT.c ****   //
 9652              		.loc 1 324 25 view .LVU4093
 9653 0070 6261     		str	r2, [r4, #20]
 328:Core/Src/SEGGER_RTT.c ****   p->aUp[0].pBuffer       = _acUpBuffer;
 9654              		.loc 1 328 3 is_stmt 1 view .LVU4094
 330:Core/Src/SEGGER_RTT.c ****   p->aUp[0].RdOff         = 0u;
 9655              		.loc 1 330 27 is_stmt 0 view .LVU4095
 9656 0072 4FF48061 		mov	r1, #1024
 329:Core/Src/SEGGER_RTT.c ****   p->aUp[0].SizeOfBuffer  = BUFFER_SIZE_UP;
 9657              		.loc 1 329 27 view .LVU4096
 9658 0076 194A     		ldr	r2, .L385+8
 328:Core/Src/SEGGER_RTT.c ****   p->aUp[0].pBuffer       = _acUpBuffer;
 9659              		.loc 1 328 27 view .LVU4097
 9660 0078 A361     		str	r3, [r4, #24]
 329:Core/Src/SEGGER_RTT.c ****   p->aUp[0].SizeOfBuffer  = BUFFER_SIZE_UP;
 9661              		.loc 1 329 3 is_stmt 1 view .LVU4098
 329:Core/Src/SEGGER_RTT.c ****   p->aUp[0].SizeOfBuffer  = BUFFER_SIZE_UP;
 9662              		.loc 1 329 27 is_stmt 0 view .LVU4099
 9663 007a E261     		str	r2, [r4, #28]
 330:Core/Src/SEGGER_RTT.c ****   p->aUp[0].RdOff         = 0u;
 9664              		.loc 1 330 3 is_stmt 1 view .LVU4100
 330:Core/Src/SEGGER_RTT.c ****   p->aUp[0].RdOff         = 0u;
 9665              		.loc 1 330 27 is_stmt 0 view .LVU4101
 9666 007c 2162     		str	r1, [r4, #32]
 331:Core/Src/SEGGER_RTT.c ****   p->aUp[0].WrOff         = 0u;
 9667              		.loc 1 331 3 is_stmt 1 view .LVU4102
 338:Core/Src/SEGGER_RTT.c ****   p->aDown[0].SizeOfBuffer  = BUFFER_SIZE_DOWN;
 9668              		.loc 1 338 29 is_stmt 0 view .LVU4103
 9669 007e 184A     		ldr	r2, .L385+12
 331:Core/Src/SEGGER_RTT.c ****   p->aUp[0].WrOff         = 0u;
 9670              		.loc 1 331 27 view .LVU4104
 9671 0080 A662     		str	r6, [r4, #40]
 332:Core/Src/SEGGER_RTT.c ****   p->aUp[0].Flags         = SEGGER_RTT_MODE_DEFAULT;
 9672              		.loc 1 332 3 is_stmt 1 view .LVU4105
 332:Core/Src/SEGGER_RTT.c ****   p->aUp[0].Flags         = SEGGER_RTT_MODE_DEFAULT;
 9673              		.loc 1 332 27 is_stmt 0 view .LVU4106
 9674 0082 6662     		str	r6, [r4, #36]
 333:Core/Src/SEGGER_RTT.c ****   //
 9675              		.loc 1 333 3 is_stmt 1 view .LVU4107
 333:Core/Src/SEGGER_RTT.c ****   //
 9676              		.loc 1 333 27 is_stmt 0 view .LVU4108
 9677 0084 E662     		str	r6, [r4, #44]
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccs0vIiH.s 			page 263


 337:Core/Src/SEGGER_RTT.c ****   p->aDown[0].pBuffer       = _acDownBuffer;
 9678              		.loc 1 337 3 is_stmt 1 view .LVU4109
 337:Core/Src/SEGGER_RTT.c ****   p->aDown[0].pBuffer       = _acDownBuffer;
 9679              		.loc 1 337 29 is_stmt 0 view .LVU4110
 9680 0086 2366     		str	r3, [r4, #96]
 338:Core/Src/SEGGER_RTT.c ****   p->aDown[0].SizeOfBuffer  = BUFFER_SIZE_DOWN;
 9681              		.loc 1 338 3 is_stmt 1 view .LVU4111
 339:Core/Src/SEGGER_RTT.c ****   p->aDown[0].RdOff         = 0u;
 9682              		.loc 1 339 29 is_stmt 0 view .LVU4112
 9683 0088 1023     		movs	r3, #16
 338:Core/Src/SEGGER_RTT.c ****   p->aDown[0].SizeOfBuffer  = BUFFER_SIZE_DOWN;
 9684              		.loc 1 338 29 view .LVU4113
 9685 008a 6266     		str	r2, [r4, #100]
 339:Core/Src/SEGGER_RTT.c ****   p->aDown[0].RdOff         = 0u;
 9686              		.loc 1 339 3 is_stmt 1 view .LVU4114
 339:Core/Src/SEGGER_RTT.c ****   p->aDown[0].RdOff         = 0u;
 9687              		.loc 1 339 29 is_stmt 0 view .LVU4115
 9688 008c A366     		str	r3, [r4, #104]
 340:Core/Src/SEGGER_RTT.c ****   p->aDown[0].WrOff         = 0u;
 9689              		.loc 1 340 3 is_stmt 1 view .LVU4116
 340:Core/Src/SEGGER_RTT.c ****   p->aDown[0].WrOff         = 0u;
 9690              		.loc 1 340 29 is_stmt 0 view .LVU4117
 9691 008e 2667     		str	r6, [r4, #112]
 341:Core/Src/SEGGER_RTT.c ****   p->aDown[0].Flags         = SEGGER_RTT_MODE_DEFAULT;
 9692              		.loc 1 341 3 is_stmt 1 view .LVU4118
 341:Core/Src/SEGGER_RTT.c ****   p->aDown[0].Flags         = SEGGER_RTT_MODE_DEFAULT;
 9693              		.loc 1 341 29 is_stmt 0 view .LVU4119
 9694 0090 E666     		str	r6, [r4, #108]
 342:Core/Src/SEGGER_RTT.c ****   //
 9695              		.loc 1 342 3 is_stmt 1 view .LVU4120
 342:Core/Src/SEGGER_RTT.c ****   //
 9696              		.loc 1 342 29 is_stmt 0 view .LVU4121
 9697 0092 6667     		str	r6, [r4, #116]
 348:Core/Src/SEGGER_RTT.c ****   for (i = 0; i < sizeof(_aInitStr) - 1; ++i) {
 9698              		.loc 1 348 3 is_stmt 1 view .LVU4122
 9699              		.syntax unified
 9700              	@ 348 "Core/Src/SEGGER_RTT.c" 1
 9701 0094 BFF35F8F 		dmb
 9702              	
 9703              	@ 0 "" 2
 348:Core/Src/SEGGER_RTT.c ****   for (i = 0; i < sizeof(_aInitStr) - 1; ++i) {
 9704              		.loc 1 348 13 view .LVU4123
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 9705              		.loc 1 349 3 view .LVU4124
 9706              	.LVL915:
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 9707              		.loc 1 349 17 view .LVU4125
 350:Core/Src/SEGGER_RTT.c ****   }
 9708              		.loc 1 350 5 view .LVU4126
 350:Core/Src/SEGGER_RTT.c ****   }
 9709              		.loc 1 350 16 is_stmt 0 view .LVU4127
 9710              		.thumb
 9711              		.syntax unified
 9712 0098 4521     		movs	r1, #69
 9713 009a 4720     		movs	r0, #71
 9714 009c 4FF0530C 		mov	ip, #83
 9715 00a0 84F800C0 		strb	ip, [r4]
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccs0vIiH.s 			page 264


 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 9716              		.loc 1 349 42 is_stmt 1 view .LVU4128
 9717              	.LVL916:
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 9718              		.loc 1 349 17 view .LVU4129
 350:Core/Src/SEGGER_RTT.c ****   }
 9719              		.loc 1 350 5 view .LVU4130
 350:Core/Src/SEGGER_RTT.c ****   }
 9720              		.loc 1 350 16 is_stmt 0 view .LVU4131
 9721 00a4 5222     		movs	r2, #82
 9722 00a6 6170     		strb	r1, [r4, #1]
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 9723              		.loc 1 349 42 is_stmt 1 view .LVU4132
 9724              	.LVL917:
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 9725              		.loc 1 349 17 view .LVU4133
 350:Core/Src/SEGGER_RTT.c ****   }
 9726              		.loc 1 350 5 view .LVU4134
 350:Core/Src/SEGGER_RTT.c ****   }
 9727              		.loc 1 350 16 is_stmt 0 view .LVU4135
 9728 00a8 5423     		movs	r3, #84
 9729 00aa A070     		strb	r0, [r4, #2]
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 9730              		.loc 1 349 42 is_stmt 1 view .LVU4136
 9731              	.LVL918:
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 9732              		.loc 1 349 17 view .LVU4137
 350:Core/Src/SEGGER_RTT.c ****   }
 9733              		.loc 1 350 5 view .LVU4138
 350:Core/Src/SEGGER_RTT.c ****   }
 9734              		.loc 1 350 16 is_stmt 0 view .LVU4139
 9735 00ac E070     		strb	r0, [r4, #3]
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 9736              		.loc 1 349 42 is_stmt 1 view .LVU4140
 9737              	.LVL919:
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 9738              		.loc 1 349 17 view .LVU4141
 350:Core/Src/SEGGER_RTT.c ****   }
 9739              		.loc 1 350 5 view .LVU4142
 350:Core/Src/SEGGER_RTT.c ****   }
 9740              		.loc 1 350 16 is_stmt 0 view .LVU4143
 9741 00ae 2171     		strb	r1, [r4, #4]
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 9742              		.loc 1 349 42 is_stmt 1 view .LVU4144
 9743              	.LVL920:
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 9744              		.loc 1 349 17 view .LVU4145
 350:Core/Src/SEGGER_RTT.c ****   }
 9745              		.loc 1 350 5 view .LVU4146
 350:Core/Src/SEGGER_RTT.c ****   }
 9746              		.loc 1 350 16 is_stmt 0 view .LVU4147
 9747 00b0 2021     		movs	r1, #32
 9748 00b2 6271     		strb	r2, [r4, #5]
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 9749              		.loc 1 349 42 is_stmt 1 view .LVU4148
 9750              	.LVL921:
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccs0vIiH.s 			page 265


 9751              		.loc 1 349 17 view .LVU4149
 350:Core/Src/SEGGER_RTT.c ****   }
 9752              		.loc 1 350 5 view .LVU4150
 350:Core/Src/SEGGER_RTT.c ****   }
 9753              		.loc 1 350 16 is_stmt 0 view .LVU4151
 9754 00b4 A171     		strb	r1, [r4, #6]
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 9755              		.loc 1 349 42 is_stmt 1 view .LVU4152
 9756              	.LVL922:
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 9757              		.loc 1 349 17 view .LVU4153
 350:Core/Src/SEGGER_RTT.c ****   }
 9758              		.loc 1 350 5 view .LVU4154
 350:Core/Src/SEGGER_RTT.c ****   }
 9759              		.loc 1 350 16 is_stmt 0 view .LVU4155
 9760 00b6 E271     		strb	r2, [r4, #7]
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 9761              		.loc 1 349 42 is_stmt 1 view .LVU4156
 9762              	.LVL923:
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 9763              		.loc 1 349 17 view .LVU4157
 350:Core/Src/SEGGER_RTT.c ****   }
 9764              		.loc 1 350 5 view .LVU4158
 350:Core/Src/SEGGER_RTT.c ****   }
 9765              		.loc 1 350 16 is_stmt 0 view .LVU4159
 9766 00b8 2372     		strb	r3, [r4, #8]
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 9767              		.loc 1 349 42 is_stmt 1 view .LVU4160
 9768              	.LVL924:
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 9769              		.loc 1 349 17 view .LVU4161
 350:Core/Src/SEGGER_RTT.c ****   }
 9770              		.loc 1 350 5 view .LVU4162
 350:Core/Src/SEGGER_RTT.c ****   }
 9771              		.loc 1 350 16 is_stmt 0 view .LVU4163
 9772 00ba 6372     		strb	r3, [r4, #9]
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 9773              		.loc 1 349 42 is_stmt 1 view .LVU4164
 9774              	.LVL925:
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 9775              		.loc 1 349 17 view .LVU4165
 350:Core/Src/SEGGER_RTT.c ****   }
 9776              		.loc 1 350 5 view .LVU4166
 350:Core/Src/SEGGER_RTT.c ****   }
 9777              		.loc 1 350 16 is_stmt 0 view .LVU4167
 9778 00bc A672     		strb	r6, [r4, #10]
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 9779              		.loc 1 349 42 is_stmt 1 view .LVU4168
 9780              	.LVL926:
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 9781              		.loc 1 349 17 view .LVU4169
 350:Core/Src/SEGGER_RTT.c ****   }
 9782              		.loc 1 350 5 view .LVU4170
 350:Core/Src/SEGGER_RTT.c ****   }
 9783              		.loc 1 350 16 is_stmt 0 view .LVU4171
 9784 00be E672     		strb	r6, [r4, #11]
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccs0vIiH.s 			page 266


 9785              		.loc 1 349 42 is_stmt 1 view .LVU4172
 9786              	.LVL927:
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 9787              		.loc 1 349 17 view .LVU4173
 350:Core/Src/SEGGER_RTT.c ****   }
 9788              		.loc 1 350 5 view .LVU4174
 350:Core/Src/SEGGER_RTT.c ****   }
 9789              		.loc 1 350 16 is_stmt 0 view .LVU4175
 9790 00c0 2673     		strb	r6, [r4, #12]
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 9791              		.loc 1 349 42 is_stmt 1 view .LVU4176
 9792              	.LVL928:
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 9793              		.loc 1 349 17 view .LVU4177
 350:Core/Src/SEGGER_RTT.c ****   }
 9794              		.loc 1 350 5 view .LVU4178
 350:Core/Src/SEGGER_RTT.c ****   }
 9795              		.loc 1 350 16 is_stmt 0 view .LVU4179
 9796 00c2 6673     		strb	r6, [r4, #13]
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 9797              		.loc 1 349 42 is_stmt 1 view .LVU4180
 9798              	.LVL929:
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 9799              		.loc 1 349 17 view .LVU4181
 350:Core/Src/SEGGER_RTT.c ****   }
 9800              		.loc 1 350 5 view .LVU4182
 350:Core/Src/SEGGER_RTT.c ****   }
 9801              		.loc 1 350 16 is_stmt 0 view .LVU4183
 9802 00c4 A673     		strb	r6, [r4, #14]
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 9803              		.loc 1 349 42 is_stmt 1 view .LVU4184
 9804              	.LVL930:
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 9805              		.loc 1 349 17 view .LVU4185
 350:Core/Src/SEGGER_RTT.c ****   }
 9806              		.loc 1 350 5 view .LVU4186
 350:Core/Src/SEGGER_RTT.c ****   }
 9807              		.loc 1 350 16 is_stmt 0 view .LVU4187
 9808 00c6 E673     		strb	r6, [r4, #15]
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 9809              		.loc 1 349 42 is_stmt 1 view .LVU4188
 9810              	.LVL931:
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 9811              		.loc 1 349 17 view .LVU4189
 352:Core/Src/SEGGER_RTT.c **** }
 9812              		.loc 1 352 3 view .LVU4190
 9813              		.syntax unified
 9814              	@ 352 "Core/Src/SEGGER_RTT.c" 1
 9815 00c8 BFF35F8F 		dmb
 9816              	
 9817              	@ 0 "" 2
 352:Core/Src/SEGGER_RTT.c **** }
 9818              		.loc 1 352 13 view .LVU4191
 353:Core/Src/SEGGER_RTT.c **** 
 9819              		.loc 1 353 1 is_stmt 0 view .LVU4192
 9820              		.thumb
 9821              		.syntax unified
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccs0vIiH.s 			page 267


 9822 00cc A1E7     		b	.L376
 9823              	.LVL932:
 9824              	.L379:
 353:Core/Src/SEGGER_RTT.c **** 
 9825              		.loc 1 353 1 view .LVU4193
 9826              	.LBE510:
 9827              	.LBE509:
 9828              	.LBE516:
1743:Core/Src/SEGGER_RTT.c ****   }
 9829              		.loc 1 1743 7 view .LVU4194
 9830 00ce 4FF0FF30 		mov	r0, #-1
 9831              	.LVL933:
1745:Core/Src/SEGGER_RTT.c **** }
 9832              		.loc 1 1745 3 is_stmt 1 view .LVU4195
1745:Core/Src/SEGGER_RTT.c **** }
 9833              		.loc 1 1745 10 is_stmt 0 view .LVU4196
 9834 00d2 B2E7     		b	.L375
 9835              	.L386:
 9836              		.align	2
 9837              	.L385:
 9838 00d4 00000000 		.word	.LANCHOR0
 9839 00d8 00000000 		.word	.LC0
 9840 00dc 00000000 		.word	.LANCHOR1
 9841 00e0 00000000 		.word	.LANCHOR2
 9842              		.cfi_endproc
 9843              	.LFE26:
 9845              		.section	.text.SEGGER_RTT_SetNameUpBuffer,"ax",%progbits
 9846              		.align	1
 9847              		.p2align 2,,3
 9848              		.global	SEGGER_RTT_SetNameUpBuffer
 9849              		.syntax unified
 9850              		.thumb
 9851              		.thumb_func
 9853              	SEGGER_RTT_SetNameUpBuffer:
 9854              	.LVL934:
 9855              	.LFB27:
1747:Core/Src/SEGGER_RTT.c **** 
1748:Core/Src/SEGGER_RTT.c **** /*********************************************************************
1749:Core/Src/SEGGER_RTT.c **** *
1750:Core/Src/SEGGER_RTT.c **** *       SEGGER_RTT_SetNameUpBuffer
1751:Core/Src/SEGGER_RTT.c **** *
1752:Core/Src/SEGGER_RTT.c **** *  Function description
1753:Core/Src/SEGGER_RTT.c **** *    Run-time configuration of a specific up-buffer name (T->H).
1754:Core/Src/SEGGER_RTT.c **** *    Buffer to be configured is specified by index.
1755:Core/Src/SEGGER_RTT.c **** *
1756:Core/Src/SEGGER_RTT.c **** *  Parameters
1757:Core/Src/SEGGER_RTT.c **** *    BufferIndex  Index of the buffer to renamed.
1758:Core/Src/SEGGER_RTT.c **** *    sName        Pointer to a constant name string.
1759:Core/Src/SEGGER_RTT.c **** *
1760:Core/Src/SEGGER_RTT.c **** *  Return value
1761:Core/Src/SEGGER_RTT.c **** *    >= 0  O.K.
1762:Core/Src/SEGGER_RTT.c **** *     < 0  Error
1763:Core/Src/SEGGER_RTT.c **** */
1764:Core/Src/SEGGER_RTT.c **** int SEGGER_RTT_SetNameUpBuffer(unsigned BufferIndex, const char* sName) {
 9856              		.loc 1 1764 73 is_stmt 1 view -0
 9857              		.cfi_startproc
 9858              		@ args = 0, pretend = 0, frame = 0
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccs0vIiH.s 			page 268


 9859              		@ frame_needed = 0, uses_anonymous_args = 0
1765:Core/Src/SEGGER_RTT.c ****   int r;
 9860              		.loc 1 1765 3 view .LVU4198
1766:Core/Src/SEGGER_RTT.c ****   volatile SEGGER_RTT_CB* pRTTCB;
 9861              		.loc 1 1766 3 view .LVU4199
1767:Core/Src/SEGGER_RTT.c ****   volatile SEGGER_RTT_BUFFER_UP* pUp;
 9862              		.loc 1 1767 3 view .LVU4200
 9863              	.LBB521:
1768:Core/Src/SEGGER_RTT.c **** 
1769:Core/Src/SEGGER_RTT.c ****   INIT();
 9864              		.loc 1 1769 3 view .LVU4201
 9865              		.loc 1 1769 3 view .LVU4202
 9866              		.loc 1 1769 3 view .LVU4203
 9867              		.loc 1 1769 3 view .LVU4204
 9868              	.LBE521:
1764:Core/Src/SEGGER_RTT.c ****   int r;
 9869              		.loc 1 1764 73 is_stmt 0 view .LVU4205
 9870 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 9871              		.cfi_def_cfa_offset 24
 9872              		.cfi_offset 3, -24
 9873              		.cfi_offset 4, -20
 9874              		.cfi_offset 5, -16
 9875              		.cfi_offset 6, -12
 9876              		.cfi_offset 7, -8
 9877              		.cfi_offset 14, -4
 9878              	.LBB524:
 9879              		.loc 1 1769 3 view .LVU4206
 9880 0002 284C     		ldr	r4, .L393
 9881 0004 2378     		ldrb	r3, [r4]	@ zero_extendqisi2
 9882              	.LBE524:
1764:Core/Src/SEGGER_RTT.c ****   int r;
 9883              		.loc 1 1764 73 view .LVU4207
 9884 0006 0546     		mov	r5, r0
 9885 0008 0F46     		mov	r7, r1
 9886              	.LBB525:
 9887              		.loc 1 1769 3 view .LVU4208
 9888 000a 83B1     		cbz	r3, .L392
 9889              	.LVL935:
 9890              	.L388:
 9891              		.loc 1 1769 3 is_stmt 1 discriminator 3 view .LVU4209
 9892              	.LBE525:
 9893              		.loc 1 1769 9 discriminator 3 view .LVU4210
1770:Core/Src/SEGGER_RTT.c ****   pRTTCB = (volatile SEGGER_RTT_CB*)((unsigned char*)&_SEGGER_RTT + SEGGER_RTT_UNCACHED_OFF);  // A
 9894              		.loc 1 1770 3 discriminator 3 view .LVU4211
1771:Core/Src/SEGGER_RTT.c ****   if (BufferIndex < SEGGER_RTT_MAX_NUM_UP_BUFFERS) {
 9895              		.loc 1 1771 3 discriminator 3 view .LVU4212
 9896              		.loc 1 1771 6 is_stmt 0 discriminator 3 view .LVU4213
 9897 000c 022D     		cmp	r5, #2
 9898 000e 46D8     		bhi	.L390
 9899              	.LBB526:
1772:Core/Src/SEGGER_RTT.c ****     SEGGER_RTT_LOCK();
 9900              		.loc 1 1772 5 is_stmt 1 view .LVU4214
 9901              		.loc 1 1772 5 view .LVU4215
 9902              		.syntax unified
 9903              	@ 1772 "Core/Src/SEGGER_RTT.c" 1
 9904 0010 EFF31183 		mrs   r3, basepri  
 9905 0014 4FF02001 		mov   r1, #32       
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccs0vIiH.s 			page 269


 9906 0018 81F31188 		msr   basepri, r1  
 9907              		
 9908              	@ 0 "" 2
 9909              	.LVL936:
 9910              		.loc 1 1772 22 view .LVU4216
1773:Core/Src/SEGGER_RTT.c ****     pUp = &pRTTCB->aUp[BufferIndex];
 9911              		.loc 1 1773 5 view .LVU4217
1774:Core/Src/SEGGER_RTT.c ****     pUp->sName = sName;
 9912              		.loc 1 1774 5 view .LVU4218
 9913              		.loc 1 1774 16 is_stmt 0 view .LVU4219
 9914              		.thumb
 9915              		.syntax unified
 9916 001c 0135     		adds	r5, r5, #1
 9917              	.LVL937:
 9918              		.loc 1 1774 16 view .LVU4220
 9919 001e 05EB4505 		add	r5, r5, r5, lsl #1
 9920              	.LVL938:
 9921              		.loc 1 1774 16 view .LVU4221
 9922 0022 ED00     		lsls	r5, r5, #3
 9923 0024 6751     		str	r7, [r4, r5]
1775:Core/Src/SEGGER_RTT.c ****     SEGGER_RTT_UNLOCK();
 9924              		.loc 1 1775 5 is_stmt 1 view .LVU4222
 9925              		.syntax unified
 9926              	@ 1775 "Core/Src/SEGGER_RTT.c" 1
 9927 0026 83F31188 		msr   basepri, r3  
 9928              		
 9929              	@ 0 "" 2
 9930              		.thumb
 9931              		.syntax unified
 9932              	.LBE526:
 9933              		.loc 1 1775 24 view .LVU4223
1776:Core/Src/SEGGER_RTT.c ****     r =  0;
 9934              		.loc 1 1776 5 view .LVU4224
 9935              	.LVL939:
 9936              		.loc 1 1776 7 is_stmt 0 view .LVU4225
 9937 002a 0020     		movs	r0, #0
1777:Core/Src/SEGGER_RTT.c ****   } else {
1778:Core/Src/SEGGER_RTT.c ****     r = -1;
1779:Core/Src/SEGGER_RTT.c ****   }
1780:Core/Src/SEGGER_RTT.c ****   return r;
1781:Core/Src/SEGGER_RTT.c **** }
 9938              		.loc 1 1781 1 view .LVU4226
 9939 002c F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 9940              	.LVL940:
 9941              	.L392:
 9942              		.loc 1 1781 1 view .LVU4227
 9943 002e 03F0FF06 		and	r6, r3, #255
 9944              	.LBB527:
1769:Core/Src/SEGGER_RTT.c ****   pRTTCB = (volatile SEGGER_RTT_CB*)((unsigned char*)&_SEGGER_RTT + SEGGER_RTT_UNCACHED_OFF);  // A
 9945              		.loc 1 1769 3 is_stmt 1 view .LVU4228
 9946              	.LBB522:
 9947              	.LBI522:
 314:Core/Src/SEGGER_RTT.c ****   volatile SEGGER_RTT_CB* p;   // Volatile to make sure that compiler cannot change the order of ac
 9948              		.loc 1 314 13 view .LVU4229
 9949              	.LBB523:
 315:Core/Src/SEGGER_RTT.c ****   static const char _aInitStr[] = "\0\0\0\0\0\0TTR REGGES";  // Init complete ID string to make sur
 9950              		.loc 1 315 3 view .LVU4230
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccs0vIiH.s 			page 270


 316:Core/Src/SEGGER_RTT.c ****   unsigned i;
 9951              		.loc 1 316 3 view .LVU4231
 317:Core/Src/SEGGER_RTT.c ****   //
 9952              		.loc 1 317 3 view .LVU4232
 321:Core/Src/SEGGER_RTT.c ****   memset((SEGGER_RTT_CB*)p, 0, sizeof(_SEGGER_RTT));         // Make sure that the RTT CB is always
 9953              		.loc 1 321 3 view .LVU4233
 9954              	.LVL941:
 322:Core/Src/SEGGER_RTT.c ****   p->MaxNumUpBuffers    = SEGGER_RTT_MAX_NUM_UP_BUFFERS;
 9955              		.loc 1 322 3 view .LVU4234
 9956 0032 3146     		mov	r1, r6
 9957              	.LVL942:
 322:Core/Src/SEGGER_RTT.c ****   p->MaxNumUpBuffers    = SEGGER_RTT_MAX_NUM_UP_BUFFERS;
 9958              		.loc 1 322 3 is_stmt 0 view .LVU4235
 9959 0034 7822     		movs	r2, #120
 9960 0036 04F13000 		add	r0, r4, #48
 9961              	.LVL943:
 322:Core/Src/SEGGER_RTT.c ****   p->MaxNumUpBuffers    = SEGGER_RTT_MAX_NUM_UP_BUFFERS;
 9962              		.loc 1 322 3 view .LVU4236
 9963 003a FFF7FEFF 		bl	memset
 9964              	.LVL944:
 323:Core/Src/SEGGER_RTT.c ****   p->MaxNumDownBuffers  = SEGGER_RTT_MAX_NUM_DOWN_BUFFERS;
 9965              		.loc 1 323 3 is_stmt 1 view .LVU4237
 323:Core/Src/SEGGER_RTT.c ****   p->MaxNumDownBuffers  = SEGGER_RTT_MAX_NUM_DOWN_BUFFERS;
 9966              		.loc 1 323 25 is_stmt 0 view .LVU4238
 9967 003e 0323     		movs	r3, #3
 9968 0040 2361     		str	r3, [r4, #16]
 324:Core/Src/SEGGER_RTT.c ****   //
 9969              		.loc 1 324 3 is_stmt 1 view .LVU4239
 329:Core/Src/SEGGER_RTT.c ****   p->aUp[0].SizeOfBuffer  = BUFFER_SIZE_UP;
 9970              		.loc 1 329 27 is_stmt 0 view .LVU4240
 9971 0042 194A     		ldr	r2, .L393+4
 324:Core/Src/SEGGER_RTT.c ****   //
 9972              		.loc 1 324 25 view .LVU4241
 9973 0044 6361     		str	r3, [r4, #20]
 328:Core/Src/SEGGER_RTT.c ****   p->aUp[0].pBuffer       = _acUpBuffer;
 9974              		.loc 1 328 3 is_stmt 1 view .LVU4242
 330:Core/Src/SEGGER_RTT.c ****   p->aUp[0].RdOff         = 0u;
 9975              		.loc 1 330 27 is_stmt 0 view .LVU4243
 9976 0046 4FF48061 		mov	r1, #1024
 328:Core/Src/SEGGER_RTT.c ****   p->aUp[0].pBuffer       = _acUpBuffer;
 9977              		.loc 1 328 27 view .LVU4244
 9978 004a 184B     		ldr	r3, .L393+8
 9979 004c A361     		str	r3, [r4, #24]
 329:Core/Src/SEGGER_RTT.c ****   p->aUp[0].SizeOfBuffer  = BUFFER_SIZE_UP;
 9980              		.loc 1 329 3 is_stmt 1 view .LVU4245
 329:Core/Src/SEGGER_RTT.c ****   p->aUp[0].SizeOfBuffer  = BUFFER_SIZE_UP;
 9981              		.loc 1 329 27 is_stmt 0 view .LVU4246
 9982 004e E261     		str	r2, [r4, #28]
 330:Core/Src/SEGGER_RTT.c ****   p->aUp[0].RdOff         = 0u;
 9983              		.loc 1 330 3 is_stmt 1 view .LVU4247
 330:Core/Src/SEGGER_RTT.c ****   p->aUp[0].RdOff         = 0u;
 9984              		.loc 1 330 27 is_stmt 0 view .LVU4248
 9985 0050 2162     		str	r1, [r4, #32]
 331:Core/Src/SEGGER_RTT.c ****   p->aUp[0].WrOff         = 0u;
 9986              		.loc 1 331 3 is_stmt 1 view .LVU4249
 338:Core/Src/SEGGER_RTT.c ****   p->aDown[0].SizeOfBuffer  = BUFFER_SIZE_DOWN;
 9987              		.loc 1 338 29 is_stmt 0 view .LVU4250
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccs0vIiH.s 			page 271


 9988 0052 174A     		ldr	r2, .L393+12
 331:Core/Src/SEGGER_RTT.c ****   p->aUp[0].WrOff         = 0u;
 9989              		.loc 1 331 27 view .LVU4251
 9990 0054 A662     		str	r6, [r4, #40]
 332:Core/Src/SEGGER_RTT.c ****   p->aUp[0].Flags         = SEGGER_RTT_MODE_DEFAULT;
 9991              		.loc 1 332 3 is_stmt 1 view .LVU4252
 332:Core/Src/SEGGER_RTT.c ****   p->aUp[0].Flags         = SEGGER_RTT_MODE_DEFAULT;
 9992              		.loc 1 332 27 is_stmt 0 view .LVU4253
 9993 0056 6662     		str	r6, [r4, #36]
 333:Core/Src/SEGGER_RTT.c ****   //
 9994              		.loc 1 333 3 is_stmt 1 view .LVU4254
 333:Core/Src/SEGGER_RTT.c ****   //
 9995              		.loc 1 333 27 is_stmt 0 view .LVU4255
 9996 0058 E662     		str	r6, [r4, #44]
 337:Core/Src/SEGGER_RTT.c ****   p->aDown[0].pBuffer       = _acDownBuffer;
 9997              		.loc 1 337 3 is_stmt 1 view .LVU4256
 337:Core/Src/SEGGER_RTT.c ****   p->aDown[0].pBuffer       = _acDownBuffer;
 9998              		.loc 1 337 29 is_stmt 0 view .LVU4257
 9999 005a 2366     		str	r3, [r4, #96]
 338:Core/Src/SEGGER_RTT.c ****   p->aDown[0].SizeOfBuffer  = BUFFER_SIZE_DOWN;
 10000              		.loc 1 338 3 is_stmt 1 view .LVU4258
 339:Core/Src/SEGGER_RTT.c ****   p->aDown[0].RdOff         = 0u;
 10001              		.loc 1 339 29 is_stmt 0 view .LVU4259
 10002 005c 1023     		movs	r3, #16
 338:Core/Src/SEGGER_RTT.c ****   p->aDown[0].SizeOfBuffer  = BUFFER_SIZE_DOWN;
 10003              		.loc 1 338 29 view .LVU4260
 10004 005e 6266     		str	r2, [r4, #100]
 339:Core/Src/SEGGER_RTT.c ****   p->aDown[0].RdOff         = 0u;
 10005              		.loc 1 339 3 is_stmt 1 view .LVU4261
 339:Core/Src/SEGGER_RTT.c ****   p->aDown[0].RdOff         = 0u;
 10006              		.loc 1 339 29 is_stmt 0 view .LVU4262
 10007 0060 A366     		str	r3, [r4, #104]
 340:Core/Src/SEGGER_RTT.c ****   p->aDown[0].WrOff         = 0u;
 10008              		.loc 1 340 3 is_stmt 1 view .LVU4263
 340:Core/Src/SEGGER_RTT.c ****   p->aDown[0].WrOff         = 0u;
 10009              		.loc 1 340 29 is_stmt 0 view .LVU4264
 10010 0062 2667     		str	r6, [r4, #112]
 341:Core/Src/SEGGER_RTT.c ****   p->aDown[0].Flags         = SEGGER_RTT_MODE_DEFAULT;
 10011              		.loc 1 341 3 is_stmt 1 view .LVU4265
 341:Core/Src/SEGGER_RTT.c ****   p->aDown[0].Flags         = SEGGER_RTT_MODE_DEFAULT;
 10012              		.loc 1 341 29 is_stmt 0 view .LVU4266
 10013 0064 E666     		str	r6, [r4, #108]
 342:Core/Src/SEGGER_RTT.c ****   //
 10014              		.loc 1 342 3 is_stmt 1 view .LVU4267
 342:Core/Src/SEGGER_RTT.c ****   //
 10015              		.loc 1 342 29 is_stmt 0 view .LVU4268
 10016 0066 6667     		str	r6, [r4, #116]
 348:Core/Src/SEGGER_RTT.c ****   for (i = 0; i < sizeof(_aInitStr) - 1; ++i) {
 10017              		.loc 1 348 3 is_stmt 1 view .LVU4269
 10018              		.syntax unified
 10019              	@ 348 "Core/Src/SEGGER_RTT.c" 1
 10020 0068 BFF35F8F 		dmb
 10021              	
 10022              	@ 0 "" 2
 348:Core/Src/SEGGER_RTT.c ****   for (i = 0; i < sizeof(_aInitStr) - 1; ++i) {
 10023              		.loc 1 348 13 view .LVU4270
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccs0vIiH.s 			page 272


 10024              		.loc 1 349 3 view .LVU4271
 10025              	.LVL945:
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 10026              		.loc 1 349 17 view .LVU4272
 350:Core/Src/SEGGER_RTT.c ****   }
 10027              		.loc 1 350 5 view .LVU4273
 350:Core/Src/SEGGER_RTT.c ****   }
 10028              		.loc 1 350 16 is_stmt 0 view .LVU4274
 10029              		.thumb
 10030              		.syntax unified
 10031 006c 5323     		movs	r3, #83
 10032 006e 2370     		strb	r3, [r4]
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 10033              		.loc 1 349 42 is_stmt 1 view .LVU4275
 10034              	.LVL946:
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 10035              		.loc 1 349 17 view .LVU4276
 350:Core/Src/SEGGER_RTT.c ****   }
 10036              		.loc 1 350 5 view .LVU4277
 350:Core/Src/SEGGER_RTT.c ****   }
 10037              		.loc 1 350 16 is_stmt 0 view .LVU4278
 10038 0070 4722     		movs	r2, #71
 10039 0072 4523     		movs	r3, #69
 10040 0074 6370     		strb	r3, [r4, #1]
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 10041              		.loc 1 349 42 is_stmt 1 view .LVU4279
 10042              	.LVL947:
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 10043              		.loc 1 349 17 view .LVU4280
 350:Core/Src/SEGGER_RTT.c ****   }
 10044              		.loc 1 350 5 view .LVU4281
 350:Core/Src/SEGGER_RTT.c ****   }
 10045              		.loc 1 350 16 is_stmt 0 view .LVU4282
 10046 0076 2021     		movs	r1, #32
 10047 0078 A270     		strb	r2, [r4, #2]
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 10048              		.loc 1 349 42 is_stmt 1 view .LVU4283
 10049              	.LVL948:
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 10050              		.loc 1 349 17 view .LVU4284
 350:Core/Src/SEGGER_RTT.c ****   }
 10051              		.loc 1 350 5 view .LVU4285
 350:Core/Src/SEGGER_RTT.c ****   }
 10052              		.loc 1 350 16 is_stmt 0 view .LVU4286
 10053 007a E270     		strb	r2, [r4, #3]
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 10054              		.loc 1 349 42 is_stmt 1 view .LVU4287
 10055              	.LVL949:
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 10056              		.loc 1 349 17 view .LVU4288
 350:Core/Src/SEGGER_RTT.c ****   }
 10057              		.loc 1 350 5 view .LVU4289
 350:Core/Src/SEGGER_RTT.c ****   }
 10058              		.loc 1 350 16 is_stmt 0 view .LVU4290
 10059 007c 2371     		strb	r3, [r4, #4]
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 10060              		.loc 1 349 42 is_stmt 1 view .LVU4291
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccs0vIiH.s 			page 273


 10061              	.LVL950:
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 10062              		.loc 1 349 17 view .LVU4292
 350:Core/Src/SEGGER_RTT.c ****   }
 10063              		.loc 1 350 5 view .LVU4293
 350:Core/Src/SEGGER_RTT.c ****   }
 10064              		.loc 1 350 16 is_stmt 0 view .LVU4294
 10065 007e 5222     		movs	r2, #82
 10066 0080 5423     		movs	r3, #84
 10067 0082 6271     		strb	r2, [r4, #5]
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 10068              		.loc 1 349 42 is_stmt 1 view .LVU4295
 10069              	.LVL951:
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 10070              		.loc 1 349 17 view .LVU4296
 350:Core/Src/SEGGER_RTT.c ****   }
 10071              		.loc 1 350 5 view .LVU4297
 350:Core/Src/SEGGER_RTT.c ****   }
 10072              		.loc 1 350 16 is_stmt 0 view .LVU4298
 10073 0084 A171     		strb	r1, [r4, #6]
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 10074              		.loc 1 349 42 is_stmt 1 view .LVU4299
 10075              	.LVL952:
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 10076              		.loc 1 349 17 view .LVU4300
 350:Core/Src/SEGGER_RTT.c ****   }
 10077              		.loc 1 350 5 view .LVU4301
 350:Core/Src/SEGGER_RTT.c ****   }
 10078              		.loc 1 350 16 is_stmt 0 view .LVU4302
 10079 0086 E271     		strb	r2, [r4, #7]
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 10080              		.loc 1 349 42 is_stmt 1 view .LVU4303
 10081              	.LVL953:
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 10082              		.loc 1 349 17 view .LVU4304
 350:Core/Src/SEGGER_RTT.c ****   }
 10083              		.loc 1 350 5 view .LVU4305
 350:Core/Src/SEGGER_RTT.c ****   }
 10084              		.loc 1 350 16 is_stmt 0 view .LVU4306
 10085 0088 2372     		strb	r3, [r4, #8]
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 10086              		.loc 1 349 42 is_stmt 1 view .LVU4307
 10087              	.LVL954:
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 10088              		.loc 1 349 17 view .LVU4308
 350:Core/Src/SEGGER_RTT.c ****   }
 10089              		.loc 1 350 5 view .LVU4309
 350:Core/Src/SEGGER_RTT.c ****   }
 10090              		.loc 1 350 16 is_stmt 0 view .LVU4310
 10091 008a 6372     		strb	r3, [r4, #9]
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 10092              		.loc 1 349 42 is_stmt 1 view .LVU4311
 10093              	.LVL955:
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 10094              		.loc 1 349 17 view .LVU4312
 350:Core/Src/SEGGER_RTT.c ****   }
 10095              		.loc 1 350 5 view .LVU4313
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccs0vIiH.s 			page 274


 350:Core/Src/SEGGER_RTT.c ****   }
 10096              		.loc 1 350 16 is_stmt 0 view .LVU4314
 10097 008c A672     		strb	r6, [r4, #10]
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 10098              		.loc 1 349 42 is_stmt 1 view .LVU4315
 10099              	.LVL956:
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 10100              		.loc 1 349 17 view .LVU4316
 350:Core/Src/SEGGER_RTT.c ****   }
 10101              		.loc 1 350 5 view .LVU4317
 350:Core/Src/SEGGER_RTT.c ****   }
 10102              		.loc 1 350 16 is_stmt 0 view .LVU4318
 10103 008e E672     		strb	r6, [r4, #11]
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 10104              		.loc 1 349 42 is_stmt 1 view .LVU4319
 10105              	.LVL957:
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 10106              		.loc 1 349 17 view .LVU4320
 350:Core/Src/SEGGER_RTT.c ****   }
 10107              		.loc 1 350 5 view .LVU4321
 350:Core/Src/SEGGER_RTT.c ****   }
 10108              		.loc 1 350 16 is_stmt 0 view .LVU4322
 10109 0090 2673     		strb	r6, [r4, #12]
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 10110              		.loc 1 349 42 is_stmt 1 view .LVU4323
 10111              	.LVL958:
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 10112              		.loc 1 349 17 view .LVU4324
 350:Core/Src/SEGGER_RTT.c ****   }
 10113              		.loc 1 350 5 view .LVU4325
 350:Core/Src/SEGGER_RTT.c ****   }
 10114              		.loc 1 350 16 is_stmt 0 view .LVU4326
 10115 0092 6673     		strb	r6, [r4, #13]
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 10116              		.loc 1 349 42 is_stmt 1 view .LVU4327
 10117              	.LVL959:
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 10118              		.loc 1 349 17 view .LVU4328
 350:Core/Src/SEGGER_RTT.c ****   }
 10119              		.loc 1 350 5 view .LVU4329
 350:Core/Src/SEGGER_RTT.c ****   }
 10120              		.loc 1 350 16 is_stmt 0 view .LVU4330
 10121 0094 A673     		strb	r6, [r4, #14]
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 10122              		.loc 1 349 42 is_stmt 1 view .LVU4331
 10123              	.LVL960:
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 10124              		.loc 1 349 17 view .LVU4332
 350:Core/Src/SEGGER_RTT.c ****   }
 10125              		.loc 1 350 5 view .LVU4333
 350:Core/Src/SEGGER_RTT.c ****   }
 10126              		.loc 1 350 16 is_stmt 0 view .LVU4334
 10127 0096 E673     		strb	r6, [r4, #15]
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 10128              		.loc 1 349 42 is_stmt 1 view .LVU4335
 10129              	.LVL961:
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccs0vIiH.s 			page 275


 10130              		.loc 1 349 17 view .LVU4336
 352:Core/Src/SEGGER_RTT.c **** }
 10131              		.loc 1 352 3 view .LVU4337
 10132              		.syntax unified
 10133              	@ 352 "Core/Src/SEGGER_RTT.c" 1
 10134 0098 BFF35F8F 		dmb
 10135              	
 10136              	@ 0 "" 2
 352:Core/Src/SEGGER_RTT.c **** }
 10137              		.loc 1 352 13 view .LVU4338
 353:Core/Src/SEGGER_RTT.c **** 
 10138              		.loc 1 353 1 is_stmt 0 view .LVU4339
 10139              		.thumb
 10140              		.syntax unified
 10141 009c B6E7     		b	.L388
 10142              	.LVL962:
 10143              	.L390:
 353:Core/Src/SEGGER_RTT.c **** 
 10144              		.loc 1 353 1 view .LVU4340
 10145              	.LBE523:
 10146              	.LBE522:
 10147              	.LBE527:
1778:Core/Src/SEGGER_RTT.c ****   }
 10148              		.loc 1 1778 7 view .LVU4341
 10149 009e 4FF0FF30 		mov	r0, #-1
 10150              	.LVL963:
1780:Core/Src/SEGGER_RTT.c **** }
 10151              		.loc 1 1780 3 is_stmt 1 view .LVU4342
 10152              		.loc 1 1781 1 is_stmt 0 view .LVU4343
 10153 00a2 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 10154              	.LVL964:
 10155              	.L394:
 10156              		.loc 1 1781 1 view .LVU4344
 10157              		.align	2
 10158              	.L393:
 10159 00a4 00000000 		.word	.LANCHOR0
 10160 00a8 00000000 		.word	.LANCHOR1
 10161 00ac 00000000 		.word	.LC0
 10162 00b0 00000000 		.word	.LANCHOR2
 10163              		.cfi_endproc
 10164              	.LFE27:
 10166              		.section	.text.SEGGER_RTT_SetNameDownBuffer,"ax",%progbits
 10167              		.align	1
 10168              		.p2align 2,,3
 10169              		.global	SEGGER_RTT_SetNameDownBuffer
 10170              		.syntax unified
 10171              		.thumb
 10172              		.thumb_func
 10174              	SEGGER_RTT_SetNameDownBuffer:
 10175              	.LVL965:
 10176              	.LFB28:
1782:Core/Src/SEGGER_RTT.c **** 
1783:Core/Src/SEGGER_RTT.c **** /*********************************************************************
1784:Core/Src/SEGGER_RTT.c **** *
1785:Core/Src/SEGGER_RTT.c **** *       SEGGER_RTT_SetNameDownBuffer
1786:Core/Src/SEGGER_RTT.c **** *
1787:Core/Src/SEGGER_RTT.c **** *  Function description
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccs0vIiH.s 			page 276


1788:Core/Src/SEGGER_RTT.c **** *    Run-time configuration of a specific Down-buffer name (T->H).
1789:Core/Src/SEGGER_RTT.c **** *    Buffer to be configured is specified by index.
1790:Core/Src/SEGGER_RTT.c **** *
1791:Core/Src/SEGGER_RTT.c **** *  Parameters
1792:Core/Src/SEGGER_RTT.c **** *    BufferIndex  Index of the buffer to renamed.
1793:Core/Src/SEGGER_RTT.c **** *    sName        Pointer to a constant name string.
1794:Core/Src/SEGGER_RTT.c **** *
1795:Core/Src/SEGGER_RTT.c **** *  Return value
1796:Core/Src/SEGGER_RTT.c **** *    >= 0  O.K.
1797:Core/Src/SEGGER_RTT.c **** *     < 0  Error
1798:Core/Src/SEGGER_RTT.c **** */
1799:Core/Src/SEGGER_RTT.c **** int SEGGER_RTT_SetNameDownBuffer(unsigned BufferIndex, const char* sName) {
 10177              		.loc 1 1799 75 is_stmt 1 view -0
 10178              		.cfi_startproc
 10179              		@ args = 0, pretend = 0, frame = 0
 10180              		@ frame_needed = 0, uses_anonymous_args = 0
1800:Core/Src/SEGGER_RTT.c ****   int r;
 10181              		.loc 1 1800 3 view .LVU4346
1801:Core/Src/SEGGER_RTT.c ****   volatile SEGGER_RTT_CB* pRTTCB;
 10182              		.loc 1 1801 3 view .LVU4347
1802:Core/Src/SEGGER_RTT.c ****   volatile SEGGER_RTT_BUFFER_DOWN* pDown;
 10183              		.loc 1 1802 3 view .LVU4348
 10184              	.LBB532:
1803:Core/Src/SEGGER_RTT.c **** 
1804:Core/Src/SEGGER_RTT.c ****   INIT();
 10185              		.loc 1 1804 3 view .LVU4349
 10186              		.loc 1 1804 3 view .LVU4350
 10187              		.loc 1 1804 3 view .LVU4351
 10188              		.loc 1 1804 3 view .LVU4352
 10189              	.LBE532:
1799:Core/Src/SEGGER_RTT.c ****   int r;
 10190              		.loc 1 1799 75 is_stmt 0 view .LVU4353
 10191 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 10192              		.cfi_def_cfa_offset 24
 10193              		.cfi_offset 3, -24
 10194              		.cfi_offset 4, -20
 10195              		.cfi_offset 5, -16
 10196              		.cfi_offset 6, -12
 10197              		.cfi_offset 7, -8
 10198              		.cfi_offset 14, -4
 10199              	.LBB535:
 10200              		.loc 1 1804 3 view .LVU4354
 10201 0002 284C     		ldr	r4, .L401
 10202 0004 2378     		ldrb	r3, [r4]	@ zero_extendqisi2
 10203              	.LBE535:
1799:Core/Src/SEGGER_RTT.c ****   int r;
 10204              		.loc 1 1799 75 view .LVU4355
 10205 0006 0546     		mov	r5, r0
 10206 0008 0F46     		mov	r7, r1
 10207              	.LBB536:
 10208              		.loc 1 1804 3 view .LVU4356
 10209 000a 83B1     		cbz	r3, .L400
 10210              	.LVL966:
 10211              	.L396:
 10212              		.loc 1 1804 3 is_stmt 1 discriminator 3 view .LVU4357
 10213              	.LBE536:
 10214              		.loc 1 1804 9 discriminator 3 view .LVU4358
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccs0vIiH.s 			page 277


1805:Core/Src/SEGGER_RTT.c ****   pRTTCB = (volatile SEGGER_RTT_CB*)((unsigned char*)&_SEGGER_RTT + SEGGER_RTT_UNCACHED_OFF);  // A
 10215              		.loc 1 1805 3 discriminator 3 view .LVU4359
1806:Core/Src/SEGGER_RTT.c ****   if (BufferIndex < SEGGER_RTT_MAX_NUM_DOWN_BUFFERS) {
 10216              		.loc 1 1806 3 discriminator 3 view .LVU4360
 10217              		.loc 1 1806 6 is_stmt 0 discriminator 3 view .LVU4361
 10218 000c 022D     		cmp	r5, #2
 10219 000e 46D8     		bhi	.L398
 10220              	.LBB537:
1807:Core/Src/SEGGER_RTT.c ****     SEGGER_RTT_LOCK();
 10221              		.loc 1 1807 5 is_stmt 1 view .LVU4362
 10222              		.loc 1 1807 5 view .LVU4363
 10223              		.syntax unified
 10224              	@ 1807 "Core/Src/SEGGER_RTT.c" 1
 10225 0010 EFF31183 		mrs   r3, basepri  
 10226 0014 4FF02001 		mov   r1, #32       
 10227 0018 81F31188 		msr   basepri, r1  
 10228              		
 10229              	@ 0 "" 2
 10230              	.LVL967:
 10231              		.loc 1 1807 22 view .LVU4364
1808:Core/Src/SEGGER_RTT.c ****     pDown = &pRTTCB->aDown[BufferIndex];
 10232              		.loc 1 1808 5 view .LVU4365
1809:Core/Src/SEGGER_RTT.c ****     pDown->sName = sName;
 10233              		.loc 1 1809 5 view .LVU4366
 10234              		.loc 1 1809 18 is_stmt 0 view .LVU4367
 10235              		.thumb
 10236              		.syntax unified
 10237 001c 05EB4505 		add	r5, r5, r5, lsl #1
 10238              	.LVL968:
 10239              		.loc 1 1809 18 view .LVU4368
 10240 0020 04EBC504 		add	r4, r4, r5, lsl #3
 10241 0024 2766     		str	r7, [r4, #96]
1810:Core/Src/SEGGER_RTT.c ****     SEGGER_RTT_UNLOCK();
 10242              		.loc 1 1810 5 is_stmt 1 view .LVU4369
 10243              		.syntax unified
 10244              	@ 1810 "Core/Src/SEGGER_RTT.c" 1
 10245 0026 83F31188 		msr   basepri, r3  
 10246              		
 10247              	@ 0 "" 2
 10248              		.thumb
 10249              		.syntax unified
 10250              	.LBE537:
 10251              		.loc 1 1810 24 view .LVU4370
1811:Core/Src/SEGGER_RTT.c ****     r =  0;
 10252              		.loc 1 1811 5 view .LVU4371
 10253              	.LVL969:
 10254              		.loc 1 1811 7 is_stmt 0 view .LVU4372
 10255 002a 0020     		movs	r0, #0
1812:Core/Src/SEGGER_RTT.c ****   } else {
1813:Core/Src/SEGGER_RTT.c ****     r = -1;
1814:Core/Src/SEGGER_RTT.c ****   }
1815:Core/Src/SEGGER_RTT.c ****   return r;
1816:Core/Src/SEGGER_RTT.c **** }
 10256              		.loc 1 1816 1 view .LVU4373
 10257 002c F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 10258              	.LVL970:
 10259              	.L400:
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccs0vIiH.s 			page 278


 10260              		.loc 1 1816 1 view .LVU4374
 10261 002e 03F0FF06 		and	r6, r3, #255
 10262              	.LBB538:
1804:Core/Src/SEGGER_RTT.c ****   pRTTCB = (volatile SEGGER_RTT_CB*)((unsigned char*)&_SEGGER_RTT + SEGGER_RTT_UNCACHED_OFF);  // A
 10263              		.loc 1 1804 3 is_stmt 1 view .LVU4375
 10264              	.LBB533:
 10265              	.LBI533:
 314:Core/Src/SEGGER_RTT.c ****   volatile SEGGER_RTT_CB* p;   // Volatile to make sure that compiler cannot change the order of ac
 10266              		.loc 1 314 13 view .LVU4376
 10267              	.LBB534:
 315:Core/Src/SEGGER_RTT.c ****   static const char _aInitStr[] = "\0\0\0\0\0\0TTR REGGES";  // Init complete ID string to make sur
 10268              		.loc 1 315 3 view .LVU4377
 316:Core/Src/SEGGER_RTT.c ****   unsigned i;
 10269              		.loc 1 316 3 view .LVU4378
 317:Core/Src/SEGGER_RTT.c ****   //
 10270              		.loc 1 317 3 view .LVU4379
 321:Core/Src/SEGGER_RTT.c ****   memset((SEGGER_RTT_CB*)p, 0, sizeof(_SEGGER_RTT));         // Make sure that the RTT CB is always
 10271              		.loc 1 321 3 view .LVU4380
 10272              	.LVL971:
 322:Core/Src/SEGGER_RTT.c ****   p->MaxNumUpBuffers    = SEGGER_RTT_MAX_NUM_UP_BUFFERS;
 10273              		.loc 1 322 3 view .LVU4381
 10274 0032 3146     		mov	r1, r6
 10275              	.LVL972:
 322:Core/Src/SEGGER_RTT.c ****   p->MaxNumUpBuffers    = SEGGER_RTT_MAX_NUM_UP_BUFFERS;
 10276              		.loc 1 322 3 is_stmt 0 view .LVU4382
 10277 0034 7822     		movs	r2, #120
 10278 0036 04F13000 		add	r0, r4, #48
 10279              	.LVL973:
 322:Core/Src/SEGGER_RTT.c ****   p->MaxNumUpBuffers    = SEGGER_RTT_MAX_NUM_UP_BUFFERS;
 10280              		.loc 1 322 3 view .LVU4383
 10281 003a FFF7FEFF 		bl	memset
 10282              	.LVL974:
 323:Core/Src/SEGGER_RTT.c ****   p->MaxNumDownBuffers  = SEGGER_RTT_MAX_NUM_DOWN_BUFFERS;
 10283              		.loc 1 323 3 is_stmt 1 view .LVU4384
 323:Core/Src/SEGGER_RTT.c ****   p->MaxNumDownBuffers  = SEGGER_RTT_MAX_NUM_DOWN_BUFFERS;
 10284              		.loc 1 323 25 is_stmt 0 view .LVU4385
 10285 003e 0323     		movs	r3, #3
 10286 0040 2361     		str	r3, [r4, #16]
 324:Core/Src/SEGGER_RTT.c ****   //
 10287              		.loc 1 324 3 is_stmt 1 view .LVU4386
 329:Core/Src/SEGGER_RTT.c ****   p->aUp[0].SizeOfBuffer  = BUFFER_SIZE_UP;
 10288              		.loc 1 329 27 is_stmt 0 view .LVU4387
 10289 0042 194A     		ldr	r2, .L401+4
 324:Core/Src/SEGGER_RTT.c ****   //
 10290              		.loc 1 324 25 view .LVU4388
 10291 0044 6361     		str	r3, [r4, #20]
 328:Core/Src/SEGGER_RTT.c ****   p->aUp[0].pBuffer       = _acUpBuffer;
 10292              		.loc 1 328 3 is_stmt 1 view .LVU4389
 330:Core/Src/SEGGER_RTT.c ****   p->aUp[0].RdOff         = 0u;
 10293              		.loc 1 330 27 is_stmt 0 view .LVU4390
 10294 0046 4FF48061 		mov	r1, #1024
 328:Core/Src/SEGGER_RTT.c ****   p->aUp[0].pBuffer       = _acUpBuffer;
 10295              		.loc 1 328 27 view .LVU4391
 10296 004a 184B     		ldr	r3, .L401+8
 10297 004c A361     		str	r3, [r4, #24]
 329:Core/Src/SEGGER_RTT.c ****   p->aUp[0].SizeOfBuffer  = BUFFER_SIZE_UP;
 10298              		.loc 1 329 3 is_stmt 1 view .LVU4392
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccs0vIiH.s 			page 279


 329:Core/Src/SEGGER_RTT.c ****   p->aUp[0].SizeOfBuffer  = BUFFER_SIZE_UP;
 10299              		.loc 1 329 27 is_stmt 0 view .LVU4393
 10300 004e E261     		str	r2, [r4, #28]
 330:Core/Src/SEGGER_RTT.c ****   p->aUp[0].RdOff         = 0u;
 10301              		.loc 1 330 3 is_stmt 1 view .LVU4394
 330:Core/Src/SEGGER_RTT.c ****   p->aUp[0].RdOff         = 0u;
 10302              		.loc 1 330 27 is_stmt 0 view .LVU4395
 10303 0050 2162     		str	r1, [r4, #32]
 331:Core/Src/SEGGER_RTT.c ****   p->aUp[0].WrOff         = 0u;
 10304              		.loc 1 331 3 is_stmt 1 view .LVU4396
 338:Core/Src/SEGGER_RTT.c ****   p->aDown[0].SizeOfBuffer  = BUFFER_SIZE_DOWN;
 10305              		.loc 1 338 29 is_stmt 0 view .LVU4397
 10306 0052 174A     		ldr	r2, .L401+12
 331:Core/Src/SEGGER_RTT.c ****   p->aUp[0].WrOff         = 0u;
 10307              		.loc 1 331 27 view .LVU4398
 10308 0054 A662     		str	r6, [r4, #40]
 332:Core/Src/SEGGER_RTT.c ****   p->aUp[0].Flags         = SEGGER_RTT_MODE_DEFAULT;
 10309              		.loc 1 332 3 is_stmt 1 view .LVU4399
 332:Core/Src/SEGGER_RTT.c ****   p->aUp[0].Flags         = SEGGER_RTT_MODE_DEFAULT;
 10310              		.loc 1 332 27 is_stmt 0 view .LVU4400
 10311 0056 6662     		str	r6, [r4, #36]
 333:Core/Src/SEGGER_RTT.c ****   //
 10312              		.loc 1 333 3 is_stmt 1 view .LVU4401
 333:Core/Src/SEGGER_RTT.c ****   //
 10313              		.loc 1 333 27 is_stmt 0 view .LVU4402
 10314 0058 E662     		str	r6, [r4, #44]
 337:Core/Src/SEGGER_RTT.c ****   p->aDown[0].pBuffer       = _acDownBuffer;
 10315              		.loc 1 337 3 is_stmt 1 view .LVU4403
 337:Core/Src/SEGGER_RTT.c ****   p->aDown[0].pBuffer       = _acDownBuffer;
 10316              		.loc 1 337 29 is_stmt 0 view .LVU4404
 10317 005a 2366     		str	r3, [r4, #96]
 338:Core/Src/SEGGER_RTT.c ****   p->aDown[0].SizeOfBuffer  = BUFFER_SIZE_DOWN;
 10318              		.loc 1 338 3 is_stmt 1 view .LVU4405
 339:Core/Src/SEGGER_RTT.c ****   p->aDown[0].RdOff         = 0u;
 10319              		.loc 1 339 29 is_stmt 0 view .LVU4406
 10320 005c 1023     		movs	r3, #16
 338:Core/Src/SEGGER_RTT.c ****   p->aDown[0].SizeOfBuffer  = BUFFER_SIZE_DOWN;
 10321              		.loc 1 338 29 view .LVU4407
 10322 005e 6266     		str	r2, [r4, #100]
 339:Core/Src/SEGGER_RTT.c ****   p->aDown[0].RdOff         = 0u;
 10323              		.loc 1 339 3 is_stmt 1 view .LVU4408
 339:Core/Src/SEGGER_RTT.c ****   p->aDown[0].RdOff         = 0u;
 10324              		.loc 1 339 29 is_stmt 0 view .LVU4409
 10325 0060 A366     		str	r3, [r4, #104]
 340:Core/Src/SEGGER_RTT.c ****   p->aDown[0].WrOff         = 0u;
 10326              		.loc 1 340 3 is_stmt 1 view .LVU4410
 340:Core/Src/SEGGER_RTT.c ****   p->aDown[0].WrOff         = 0u;
 10327              		.loc 1 340 29 is_stmt 0 view .LVU4411
 10328 0062 2667     		str	r6, [r4, #112]
 341:Core/Src/SEGGER_RTT.c ****   p->aDown[0].Flags         = SEGGER_RTT_MODE_DEFAULT;
 10329              		.loc 1 341 3 is_stmt 1 view .LVU4412
 341:Core/Src/SEGGER_RTT.c ****   p->aDown[0].Flags         = SEGGER_RTT_MODE_DEFAULT;
 10330              		.loc 1 341 29 is_stmt 0 view .LVU4413
 10331 0064 E666     		str	r6, [r4, #108]
 342:Core/Src/SEGGER_RTT.c ****   //
 10332              		.loc 1 342 3 is_stmt 1 view .LVU4414
 342:Core/Src/SEGGER_RTT.c ****   //
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccs0vIiH.s 			page 280


 10333              		.loc 1 342 29 is_stmt 0 view .LVU4415
 10334 0066 6667     		str	r6, [r4, #116]
 348:Core/Src/SEGGER_RTT.c ****   for (i = 0; i < sizeof(_aInitStr) - 1; ++i) {
 10335              		.loc 1 348 3 is_stmt 1 view .LVU4416
 10336              		.syntax unified
 10337              	@ 348 "Core/Src/SEGGER_RTT.c" 1
 10338 0068 BFF35F8F 		dmb
 10339              	
 10340              	@ 0 "" 2
 348:Core/Src/SEGGER_RTT.c ****   for (i = 0; i < sizeof(_aInitStr) - 1; ++i) {
 10341              		.loc 1 348 13 view .LVU4417
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 10342              		.loc 1 349 3 view .LVU4418
 10343              	.LVL975:
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 10344              		.loc 1 349 17 view .LVU4419
 350:Core/Src/SEGGER_RTT.c ****   }
 10345              		.loc 1 350 5 view .LVU4420
 350:Core/Src/SEGGER_RTT.c ****   }
 10346              		.loc 1 350 16 is_stmt 0 view .LVU4421
 10347              		.thumb
 10348              		.syntax unified
 10349 006c 5323     		movs	r3, #83
 10350 006e 2370     		strb	r3, [r4]
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 10351              		.loc 1 349 42 is_stmt 1 view .LVU4422
 10352              	.LVL976:
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 10353              		.loc 1 349 17 view .LVU4423
 350:Core/Src/SEGGER_RTT.c ****   }
 10354              		.loc 1 350 5 view .LVU4424
 350:Core/Src/SEGGER_RTT.c ****   }
 10355              		.loc 1 350 16 is_stmt 0 view .LVU4425
 10356 0070 4722     		movs	r2, #71
 10357 0072 4523     		movs	r3, #69
 10358 0074 6370     		strb	r3, [r4, #1]
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 10359              		.loc 1 349 42 is_stmt 1 view .LVU4426
 10360              	.LVL977:
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 10361              		.loc 1 349 17 view .LVU4427
 350:Core/Src/SEGGER_RTT.c ****   }
 10362              		.loc 1 350 5 view .LVU4428
 350:Core/Src/SEGGER_RTT.c ****   }
 10363              		.loc 1 350 16 is_stmt 0 view .LVU4429
 10364 0076 2021     		movs	r1, #32
 10365 0078 A270     		strb	r2, [r4, #2]
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 10366              		.loc 1 349 42 is_stmt 1 view .LVU4430
 10367              	.LVL978:
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 10368              		.loc 1 349 17 view .LVU4431
 350:Core/Src/SEGGER_RTT.c ****   }
 10369              		.loc 1 350 5 view .LVU4432
 350:Core/Src/SEGGER_RTT.c ****   }
 10370              		.loc 1 350 16 is_stmt 0 view .LVU4433
 10371 007a E270     		strb	r2, [r4, #3]
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccs0vIiH.s 			page 281


 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 10372              		.loc 1 349 42 is_stmt 1 view .LVU4434
 10373              	.LVL979:
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 10374              		.loc 1 349 17 view .LVU4435
 350:Core/Src/SEGGER_RTT.c ****   }
 10375              		.loc 1 350 5 view .LVU4436
 350:Core/Src/SEGGER_RTT.c ****   }
 10376              		.loc 1 350 16 is_stmt 0 view .LVU4437
 10377 007c 2371     		strb	r3, [r4, #4]
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 10378              		.loc 1 349 42 is_stmt 1 view .LVU4438
 10379              	.LVL980:
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 10380              		.loc 1 349 17 view .LVU4439
 350:Core/Src/SEGGER_RTT.c ****   }
 10381              		.loc 1 350 5 view .LVU4440
 350:Core/Src/SEGGER_RTT.c ****   }
 10382              		.loc 1 350 16 is_stmt 0 view .LVU4441
 10383 007e 5222     		movs	r2, #82
 10384 0080 5423     		movs	r3, #84
 10385 0082 6271     		strb	r2, [r4, #5]
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 10386              		.loc 1 349 42 is_stmt 1 view .LVU4442
 10387              	.LVL981:
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 10388              		.loc 1 349 17 view .LVU4443
 350:Core/Src/SEGGER_RTT.c ****   }
 10389              		.loc 1 350 5 view .LVU4444
 350:Core/Src/SEGGER_RTT.c ****   }
 10390              		.loc 1 350 16 is_stmt 0 view .LVU4445
 10391 0084 A171     		strb	r1, [r4, #6]
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 10392              		.loc 1 349 42 is_stmt 1 view .LVU4446
 10393              	.LVL982:
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 10394              		.loc 1 349 17 view .LVU4447
 350:Core/Src/SEGGER_RTT.c ****   }
 10395              		.loc 1 350 5 view .LVU4448
 350:Core/Src/SEGGER_RTT.c ****   }
 10396              		.loc 1 350 16 is_stmt 0 view .LVU4449
 10397 0086 E271     		strb	r2, [r4, #7]
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 10398              		.loc 1 349 42 is_stmt 1 view .LVU4450
 10399              	.LVL983:
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 10400              		.loc 1 349 17 view .LVU4451
 350:Core/Src/SEGGER_RTT.c ****   }
 10401              		.loc 1 350 5 view .LVU4452
 350:Core/Src/SEGGER_RTT.c ****   }
 10402              		.loc 1 350 16 is_stmt 0 view .LVU4453
 10403 0088 2372     		strb	r3, [r4, #8]
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 10404              		.loc 1 349 42 is_stmt 1 view .LVU4454
 10405              	.LVL984:
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 10406              		.loc 1 349 17 view .LVU4455
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccs0vIiH.s 			page 282


 350:Core/Src/SEGGER_RTT.c ****   }
 10407              		.loc 1 350 5 view .LVU4456
 350:Core/Src/SEGGER_RTT.c ****   }
 10408              		.loc 1 350 16 is_stmt 0 view .LVU4457
 10409 008a 6372     		strb	r3, [r4, #9]
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 10410              		.loc 1 349 42 is_stmt 1 view .LVU4458
 10411              	.LVL985:
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 10412              		.loc 1 349 17 view .LVU4459
 350:Core/Src/SEGGER_RTT.c ****   }
 10413              		.loc 1 350 5 view .LVU4460
 350:Core/Src/SEGGER_RTT.c ****   }
 10414              		.loc 1 350 16 is_stmt 0 view .LVU4461
 10415 008c A672     		strb	r6, [r4, #10]
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 10416              		.loc 1 349 42 is_stmt 1 view .LVU4462
 10417              	.LVL986:
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 10418              		.loc 1 349 17 view .LVU4463
 350:Core/Src/SEGGER_RTT.c ****   }
 10419              		.loc 1 350 5 view .LVU4464
 350:Core/Src/SEGGER_RTT.c ****   }
 10420              		.loc 1 350 16 is_stmt 0 view .LVU4465
 10421 008e E672     		strb	r6, [r4, #11]
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 10422              		.loc 1 349 42 is_stmt 1 view .LVU4466
 10423              	.LVL987:
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 10424              		.loc 1 349 17 view .LVU4467
 350:Core/Src/SEGGER_RTT.c ****   }
 10425              		.loc 1 350 5 view .LVU4468
 350:Core/Src/SEGGER_RTT.c ****   }
 10426              		.loc 1 350 16 is_stmt 0 view .LVU4469
 10427 0090 2673     		strb	r6, [r4, #12]
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 10428              		.loc 1 349 42 is_stmt 1 view .LVU4470
 10429              	.LVL988:
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 10430              		.loc 1 349 17 view .LVU4471
 350:Core/Src/SEGGER_RTT.c ****   }
 10431              		.loc 1 350 5 view .LVU4472
 350:Core/Src/SEGGER_RTT.c ****   }
 10432              		.loc 1 350 16 is_stmt 0 view .LVU4473
 10433 0092 6673     		strb	r6, [r4, #13]
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 10434              		.loc 1 349 42 is_stmt 1 view .LVU4474
 10435              	.LVL989:
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 10436              		.loc 1 349 17 view .LVU4475
 350:Core/Src/SEGGER_RTT.c ****   }
 10437              		.loc 1 350 5 view .LVU4476
 350:Core/Src/SEGGER_RTT.c ****   }
 10438              		.loc 1 350 16 is_stmt 0 view .LVU4477
 10439 0094 A673     		strb	r6, [r4, #14]
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 10440              		.loc 1 349 42 is_stmt 1 view .LVU4478
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccs0vIiH.s 			page 283


 10441              	.LVL990:
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 10442              		.loc 1 349 17 view .LVU4479
 350:Core/Src/SEGGER_RTT.c ****   }
 10443              		.loc 1 350 5 view .LVU4480
 350:Core/Src/SEGGER_RTT.c ****   }
 10444              		.loc 1 350 16 is_stmt 0 view .LVU4481
 10445 0096 E673     		strb	r6, [r4, #15]
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 10446              		.loc 1 349 42 is_stmt 1 view .LVU4482
 10447              	.LVL991:
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 10448              		.loc 1 349 17 view .LVU4483
 352:Core/Src/SEGGER_RTT.c **** }
 10449              		.loc 1 352 3 view .LVU4484
 10450              		.syntax unified
 10451              	@ 352 "Core/Src/SEGGER_RTT.c" 1
 10452 0098 BFF35F8F 		dmb
 10453              	
 10454              	@ 0 "" 2
 352:Core/Src/SEGGER_RTT.c **** }
 10455              		.loc 1 352 13 view .LVU4485
 353:Core/Src/SEGGER_RTT.c **** 
 10456              		.loc 1 353 1 is_stmt 0 view .LVU4486
 10457              		.thumb
 10458              		.syntax unified
 10459 009c B6E7     		b	.L396
 10460              	.LVL992:
 10461              	.L398:
 353:Core/Src/SEGGER_RTT.c **** 
 10462              		.loc 1 353 1 view .LVU4487
 10463              	.LBE534:
 10464              	.LBE533:
 10465              	.LBE538:
1813:Core/Src/SEGGER_RTT.c ****   }
 10466              		.loc 1 1813 7 view .LVU4488
 10467 009e 4FF0FF30 		mov	r0, #-1
 10468              	.LVL993:
1815:Core/Src/SEGGER_RTT.c **** }
 10469              		.loc 1 1815 3 is_stmt 1 view .LVU4489
 10470              		.loc 1 1816 1 is_stmt 0 view .LVU4490
 10471 00a2 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 10472              	.LVL994:
 10473              	.L402:
 10474              		.loc 1 1816 1 view .LVU4491
 10475              		.align	2
 10476              	.L401:
 10477 00a4 00000000 		.word	.LANCHOR0
 10478 00a8 00000000 		.word	.LANCHOR1
 10479 00ac 00000000 		.word	.LC0
 10480 00b0 00000000 		.word	.LANCHOR2
 10481              		.cfi_endproc
 10482              	.LFE28:
 10484              		.section	.text.SEGGER_RTT_SetFlagsUpBuffer,"ax",%progbits
 10485              		.align	1
 10486              		.p2align 2,,3
 10487              		.global	SEGGER_RTT_SetFlagsUpBuffer
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccs0vIiH.s 			page 284


 10488              		.syntax unified
 10489              		.thumb
 10490              		.thumb_func
 10492              	SEGGER_RTT_SetFlagsUpBuffer:
 10493              	.LVL995:
 10494              	.LFB29:
1817:Core/Src/SEGGER_RTT.c **** 
1818:Core/Src/SEGGER_RTT.c **** /*********************************************************************
1819:Core/Src/SEGGER_RTT.c **** *
1820:Core/Src/SEGGER_RTT.c **** *       SEGGER_RTT_SetFlagsUpBuffer
1821:Core/Src/SEGGER_RTT.c **** *
1822:Core/Src/SEGGER_RTT.c **** *  Function description
1823:Core/Src/SEGGER_RTT.c **** *    Run-time configuration of specific up-buffer flags (T->H).
1824:Core/Src/SEGGER_RTT.c **** *    Buffer to be configured is specified by index.
1825:Core/Src/SEGGER_RTT.c **** *
1826:Core/Src/SEGGER_RTT.c **** *  Parameters
1827:Core/Src/SEGGER_RTT.c **** *    BufferIndex  Index of the buffer.
1828:Core/Src/SEGGER_RTT.c **** *    Flags        Flags to set for the buffer.
1829:Core/Src/SEGGER_RTT.c **** *                 Flags[31:24] are used for validity check and must be zero. Flags[23:2] are reserv
1830:Core/Src/SEGGER_RTT.c **** *
1831:Core/Src/SEGGER_RTT.c **** *  Return value
1832:Core/Src/SEGGER_RTT.c **** *    >= 0  O.K.
1833:Core/Src/SEGGER_RTT.c **** *     < 0  Error
1834:Core/Src/SEGGER_RTT.c **** */
1835:Core/Src/SEGGER_RTT.c **** int SEGGER_RTT_SetFlagsUpBuffer(unsigned BufferIndex, unsigned Flags) {
 10495              		.loc 1 1835 71 is_stmt 1 view -0
 10496              		.cfi_startproc
 10497              		@ args = 0, pretend = 0, frame = 0
 10498              		@ frame_needed = 0, uses_anonymous_args = 0
1836:Core/Src/SEGGER_RTT.c ****   int r;
 10499              		.loc 1 1836 3 view .LVU4493
1837:Core/Src/SEGGER_RTT.c ****   volatile SEGGER_RTT_CB* pRTTCB;
 10500              		.loc 1 1837 3 view .LVU4494
1838:Core/Src/SEGGER_RTT.c ****   volatile SEGGER_RTT_BUFFER_UP* pUp;
 10501              		.loc 1 1838 3 view .LVU4495
 10502              	.LBB543:
1839:Core/Src/SEGGER_RTT.c **** 
1840:Core/Src/SEGGER_RTT.c ****   INIT();
 10503              		.loc 1 1840 3 view .LVU4496
 10504              		.loc 1 1840 3 view .LVU4497
 10505              		.loc 1 1840 3 view .LVU4498
 10506              		.loc 1 1840 3 view .LVU4499
 10507              	.LBE543:
1835:Core/Src/SEGGER_RTT.c ****   int r;
 10508              		.loc 1 1835 71 is_stmt 0 view .LVU4500
 10509 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 10510              		.cfi_def_cfa_offset 24
 10511              		.cfi_offset 3, -24
 10512              		.cfi_offset 4, -20
 10513              		.cfi_offset 5, -16
 10514              		.cfi_offset 6, -12
 10515              		.cfi_offset 7, -8
 10516              		.cfi_offset 14, -4
 10517              	.LBB546:
 10518              		.loc 1 1840 3 view .LVU4501
 10519 0002 284C     		ldr	r4, .L409
 10520 0004 2378     		ldrb	r3, [r4]	@ zero_extendqisi2
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccs0vIiH.s 			page 285


 10521              	.LBE546:
1835:Core/Src/SEGGER_RTT.c ****   int r;
 10522              		.loc 1 1835 71 view .LVU4502
 10523 0006 0546     		mov	r5, r0
 10524 0008 0F46     		mov	r7, r1
 10525              	.LBB547:
 10526              		.loc 1 1840 3 view .LVU4503
 10527 000a 83B1     		cbz	r3, .L408
 10528              	.LVL996:
 10529              	.L404:
 10530              		.loc 1 1840 3 is_stmt 1 discriminator 3 view .LVU4504
 10531              	.LBE547:
 10532              		.loc 1 1840 9 discriminator 3 view .LVU4505
1841:Core/Src/SEGGER_RTT.c ****   pRTTCB = (volatile SEGGER_RTT_CB*)((unsigned char*)&_SEGGER_RTT + SEGGER_RTT_UNCACHED_OFF);  // A
 10533              		.loc 1 1841 3 discriminator 3 view .LVU4506
1842:Core/Src/SEGGER_RTT.c ****   if (BufferIndex < SEGGER_RTT_MAX_NUM_UP_BUFFERS) {
 10534              		.loc 1 1842 3 discriminator 3 view .LVU4507
 10535              		.loc 1 1842 6 is_stmt 0 discriminator 3 view .LVU4508
 10536 000c 022D     		cmp	r5, #2
 10537 000e 46D8     		bhi	.L406
 10538              	.LBB548:
1843:Core/Src/SEGGER_RTT.c ****     SEGGER_RTT_LOCK();
 10539              		.loc 1 1843 5 is_stmt 1 view .LVU4509
 10540              		.loc 1 1843 5 view .LVU4510
 10541              		.syntax unified
 10542              	@ 1843 "Core/Src/SEGGER_RTT.c" 1
 10543 0010 EFF31183 		mrs   r3, basepri  
 10544 0014 4FF02001 		mov   r1, #32       
 10545 0018 81F31188 		msr   basepri, r1  
 10546              		
 10547              	@ 0 "" 2
 10548              	.LVL997:
 10549              		.loc 1 1843 22 view .LVU4511
1844:Core/Src/SEGGER_RTT.c ****     pUp = &pRTTCB->aUp[BufferIndex];
 10550              		.loc 1 1844 5 view .LVU4512
1845:Core/Src/SEGGER_RTT.c ****     pUp->Flags = Flags;
 10551              		.loc 1 1845 5 view .LVU4513
 10552              		.loc 1 1845 16 is_stmt 0 view .LVU4514
 10553              		.thumb
 10554              		.syntax unified
 10555 001c 05EB4505 		add	r5, r5, r5, lsl #1
 10556              	.LVL998:
 10557              		.loc 1 1845 16 view .LVU4515
 10558 0020 04EBC504 		add	r4, r4, r5, lsl #3
 10559 0024 E762     		str	r7, [r4, #44]
1846:Core/Src/SEGGER_RTT.c ****     SEGGER_RTT_UNLOCK();
 10560              		.loc 1 1846 5 is_stmt 1 view .LVU4516
 10561              		.syntax unified
 10562              	@ 1846 "Core/Src/SEGGER_RTT.c" 1
 10563 0026 83F31188 		msr   basepri, r3  
 10564              		
 10565              	@ 0 "" 2
 10566              		.thumb
 10567              		.syntax unified
 10568              	.LBE548:
 10569              		.loc 1 1846 24 view .LVU4517
1847:Core/Src/SEGGER_RTT.c ****     r =  0;
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccs0vIiH.s 			page 286


 10570              		.loc 1 1847 5 view .LVU4518
 10571              	.LVL999:
 10572              		.loc 1 1847 7 is_stmt 0 view .LVU4519
 10573 002a 0020     		movs	r0, #0
1848:Core/Src/SEGGER_RTT.c ****   } else {
1849:Core/Src/SEGGER_RTT.c ****     r = -1;
1850:Core/Src/SEGGER_RTT.c ****   }
1851:Core/Src/SEGGER_RTT.c ****   return r;
1852:Core/Src/SEGGER_RTT.c **** }
 10574              		.loc 1 1852 1 view .LVU4520
 10575 002c F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 10576              	.LVL1000:
 10577              	.L408:
 10578              		.loc 1 1852 1 view .LVU4521
 10579 002e 03F0FF06 		and	r6, r3, #255
 10580              	.LBB549:
1840:Core/Src/SEGGER_RTT.c ****   pRTTCB = (volatile SEGGER_RTT_CB*)((unsigned char*)&_SEGGER_RTT + SEGGER_RTT_UNCACHED_OFF);  // A
 10581              		.loc 1 1840 3 is_stmt 1 view .LVU4522
 10582              	.LBB544:
 10583              	.LBI544:
 314:Core/Src/SEGGER_RTT.c ****   volatile SEGGER_RTT_CB* p;   // Volatile to make sure that compiler cannot change the order of ac
 10584              		.loc 1 314 13 view .LVU4523
 10585              	.LBB545:
 315:Core/Src/SEGGER_RTT.c ****   static const char _aInitStr[] = "\0\0\0\0\0\0TTR REGGES";  // Init complete ID string to make sur
 10586              		.loc 1 315 3 view .LVU4524
 316:Core/Src/SEGGER_RTT.c ****   unsigned i;
 10587              		.loc 1 316 3 view .LVU4525
 317:Core/Src/SEGGER_RTT.c ****   //
 10588              		.loc 1 317 3 view .LVU4526
 321:Core/Src/SEGGER_RTT.c ****   memset((SEGGER_RTT_CB*)p, 0, sizeof(_SEGGER_RTT));         // Make sure that the RTT CB is always
 10589              		.loc 1 321 3 view .LVU4527
 10590              	.LVL1001:
 322:Core/Src/SEGGER_RTT.c ****   p->MaxNumUpBuffers    = SEGGER_RTT_MAX_NUM_UP_BUFFERS;
 10591              		.loc 1 322 3 view .LVU4528
 10592 0032 3146     		mov	r1, r6
 10593              	.LVL1002:
 322:Core/Src/SEGGER_RTT.c ****   p->MaxNumUpBuffers    = SEGGER_RTT_MAX_NUM_UP_BUFFERS;
 10594              		.loc 1 322 3 is_stmt 0 view .LVU4529
 10595 0034 7822     		movs	r2, #120
 10596 0036 04F13000 		add	r0, r4, #48
 10597              	.LVL1003:
 322:Core/Src/SEGGER_RTT.c ****   p->MaxNumUpBuffers    = SEGGER_RTT_MAX_NUM_UP_BUFFERS;
 10598              		.loc 1 322 3 view .LVU4530
 10599 003a FFF7FEFF 		bl	memset
 10600              	.LVL1004:
 323:Core/Src/SEGGER_RTT.c ****   p->MaxNumDownBuffers  = SEGGER_RTT_MAX_NUM_DOWN_BUFFERS;
 10601              		.loc 1 323 3 is_stmt 1 view .LVU4531
 323:Core/Src/SEGGER_RTT.c ****   p->MaxNumDownBuffers  = SEGGER_RTT_MAX_NUM_DOWN_BUFFERS;
 10602              		.loc 1 323 25 is_stmt 0 view .LVU4532
 10603 003e 0323     		movs	r3, #3
 10604 0040 2361     		str	r3, [r4, #16]
 324:Core/Src/SEGGER_RTT.c ****   //
 10605              		.loc 1 324 3 is_stmt 1 view .LVU4533
 329:Core/Src/SEGGER_RTT.c ****   p->aUp[0].SizeOfBuffer  = BUFFER_SIZE_UP;
 10606              		.loc 1 329 27 is_stmt 0 view .LVU4534
 10607 0042 194A     		ldr	r2, .L409+4
 324:Core/Src/SEGGER_RTT.c ****   //
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccs0vIiH.s 			page 287


 10608              		.loc 1 324 25 view .LVU4535
 10609 0044 6361     		str	r3, [r4, #20]
 328:Core/Src/SEGGER_RTT.c ****   p->aUp[0].pBuffer       = _acUpBuffer;
 10610              		.loc 1 328 3 is_stmt 1 view .LVU4536
 330:Core/Src/SEGGER_RTT.c ****   p->aUp[0].RdOff         = 0u;
 10611              		.loc 1 330 27 is_stmt 0 view .LVU4537
 10612 0046 4FF48061 		mov	r1, #1024
 328:Core/Src/SEGGER_RTT.c ****   p->aUp[0].pBuffer       = _acUpBuffer;
 10613              		.loc 1 328 27 view .LVU4538
 10614 004a 184B     		ldr	r3, .L409+8
 10615 004c A361     		str	r3, [r4, #24]
 329:Core/Src/SEGGER_RTT.c ****   p->aUp[0].SizeOfBuffer  = BUFFER_SIZE_UP;
 10616              		.loc 1 329 3 is_stmt 1 view .LVU4539
 329:Core/Src/SEGGER_RTT.c ****   p->aUp[0].SizeOfBuffer  = BUFFER_SIZE_UP;
 10617              		.loc 1 329 27 is_stmt 0 view .LVU4540
 10618 004e E261     		str	r2, [r4, #28]
 330:Core/Src/SEGGER_RTT.c ****   p->aUp[0].RdOff         = 0u;
 10619              		.loc 1 330 3 is_stmt 1 view .LVU4541
 330:Core/Src/SEGGER_RTT.c ****   p->aUp[0].RdOff         = 0u;
 10620              		.loc 1 330 27 is_stmt 0 view .LVU4542
 10621 0050 2162     		str	r1, [r4, #32]
 331:Core/Src/SEGGER_RTT.c ****   p->aUp[0].WrOff         = 0u;
 10622              		.loc 1 331 3 is_stmt 1 view .LVU4543
 338:Core/Src/SEGGER_RTT.c ****   p->aDown[0].SizeOfBuffer  = BUFFER_SIZE_DOWN;
 10623              		.loc 1 338 29 is_stmt 0 view .LVU4544
 10624 0052 174A     		ldr	r2, .L409+12
 331:Core/Src/SEGGER_RTT.c ****   p->aUp[0].WrOff         = 0u;
 10625              		.loc 1 331 27 view .LVU4545
 10626 0054 A662     		str	r6, [r4, #40]
 332:Core/Src/SEGGER_RTT.c ****   p->aUp[0].Flags         = SEGGER_RTT_MODE_DEFAULT;
 10627              		.loc 1 332 3 is_stmt 1 view .LVU4546
 332:Core/Src/SEGGER_RTT.c ****   p->aUp[0].Flags         = SEGGER_RTT_MODE_DEFAULT;
 10628              		.loc 1 332 27 is_stmt 0 view .LVU4547
 10629 0056 6662     		str	r6, [r4, #36]
 333:Core/Src/SEGGER_RTT.c ****   //
 10630              		.loc 1 333 3 is_stmt 1 view .LVU4548
 333:Core/Src/SEGGER_RTT.c ****   //
 10631              		.loc 1 333 27 is_stmt 0 view .LVU4549
 10632 0058 E662     		str	r6, [r4, #44]
 337:Core/Src/SEGGER_RTT.c ****   p->aDown[0].pBuffer       = _acDownBuffer;
 10633              		.loc 1 337 3 is_stmt 1 view .LVU4550
 337:Core/Src/SEGGER_RTT.c ****   p->aDown[0].pBuffer       = _acDownBuffer;
 10634              		.loc 1 337 29 is_stmt 0 view .LVU4551
 10635 005a 2366     		str	r3, [r4, #96]
 338:Core/Src/SEGGER_RTT.c ****   p->aDown[0].SizeOfBuffer  = BUFFER_SIZE_DOWN;
 10636              		.loc 1 338 3 is_stmt 1 view .LVU4552
 339:Core/Src/SEGGER_RTT.c ****   p->aDown[0].RdOff         = 0u;
 10637              		.loc 1 339 29 is_stmt 0 view .LVU4553
 10638 005c 1023     		movs	r3, #16
 338:Core/Src/SEGGER_RTT.c ****   p->aDown[0].SizeOfBuffer  = BUFFER_SIZE_DOWN;
 10639              		.loc 1 338 29 view .LVU4554
 10640 005e 6266     		str	r2, [r4, #100]
 339:Core/Src/SEGGER_RTT.c ****   p->aDown[0].RdOff         = 0u;
 10641              		.loc 1 339 3 is_stmt 1 view .LVU4555
 339:Core/Src/SEGGER_RTT.c ****   p->aDown[0].RdOff         = 0u;
 10642              		.loc 1 339 29 is_stmt 0 view .LVU4556
 10643 0060 A366     		str	r3, [r4, #104]
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccs0vIiH.s 			page 288


 340:Core/Src/SEGGER_RTT.c ****   p->aDown[0].WrOff         = 0u;
 10644              		.loc 1 340 3 is_stmt 1 view .LVU4557
 340:Core/Src/SEGGER_RTT.c ****   p->aDown[0].WrOff         = 0u;
 10645              		.loc 1 340 29 is_stmt 0 view .LVU4558
 10646 0062 2667     		str	r6, [r4, #112]
 341:Core/Src/SEGGER_RTT.c ****   p->aDown[0].Flags         = SEGGER_RTT_MODE_DEFAULT;
 10647              		.loc 1 341 3 is_stmt 1 view .LVU4559
 341:Core/Src/SEGGER_RTT.c ****   p->aDown[0].Flags         = SEGGER_RTT_MODE_DEFAULT;
 10648              		.loc 1 341 29 is_stmt 0 view .LVU4560
 10649 0064 E666     		str	r6, [r4, #108]
 342:Core/Src/SEGGER_RTT.c ****   //
 10650              		.loc 1 342 3 is_stmt 1 view .LVU4561
 342:Core/Src/SEGGER_RTT.c ****   //
 10651              		.loc 1 342 29 is_stmt 0 view .LVU4562
 10652 0066 6667     		str	r6, [r4, #116]
 348:Core/Src/SEGGER_RTT.c ****   for (i = 0; i < sizeof(_aInitStr) - 1; ++i) {
 10653              		.loc 1 348 3 is_stmt 1 view .LVU4563
 10654              		.syntax unified
 10655              	@ 348 "Core/Src/SEGGER_RTT.c" 1
 10656 0068 BFF35F8F 		dmb
 10657              	
 10658              	@ 0 "" 2
 348:Core/Src/SEGGER_RTT.c ****   for (i = 0; i < sizeof(_aInitStr) - 1; ++i) {
 10659              		.loc 1 348 13 view .LVU4564
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 10660              		.loc 1 349 3 view .LVU4565
 10661              	.LVL1005:
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 10662              		.loc 1 349 17 view .LVU4566
 350:Core/Src/SEGGER_RTT.c ****   }
 10663              		.loc 1 350 5 view .LVU4567
 350:Core/Src/SEGGER_RTT.c ****   }
 10664              		.loc 1 350 16 is_stmt 0 view .LVU4568
 10665              		.thumb
 10666              		.syntax unified
 10667 006c 5323     		movs	r3, #83
 10668 006e 2370     		strb	r3, [r4]
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 10669              		.loc 1 349 42 is_stmt 1 view .LVU4569
 10670              	.LVL1006:
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 10671              		.loc 1 349 17 view .LVU4570
 350:Core/Src/SEGGER_RTT.c ****   }
 10672              		.loc 1 350 5 view .LVU4571
 350:Core/Src/SEGGER_RTT.c ****   }
 10673              		.loc 1 350 16 is_stmt 0 view .LVU4572
 10674 0070 4722     		movs	r2, #71
 10675 0072 4523     		movs	r3, #69
 10676 0074 6370     		strb	r3, [r4, #1]
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 10677              		.loc 1 349 42 is_stmt 1 view .LVU4573
 10678              	.LVL1007:
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 10679              		.loc 1 349 17 view .LVU4574
 350:Core/Src/SEGGER_RTT.c ****   }
 10680              		.loc 1 350 5 view .LVU4575
 350:Core/Src/SEGGER_RTT.c ****   }
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccs0vIiH.s 			page 289


 10681              		.loc 1 350 16 is_stmt 0 view .LVU4576
 10682 0076 2021     		movs	r1, #32
 10683 0078 A270     		strb	r2, [r4, #2]
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 10684              		.loc 1 349 42 is_stmt 1 view .LVU4577
 10685              	.LVL1008:
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 10686              		.loc 1 349 17 view .LVU4578
 350:Core/Src/SEGGER_RTT.c ****   }
 10687              		.loc 1 350 5 view .LVU4579
 350:Core/Src/SEGGER_RTT.c ****   }
 10688              		.loc 1 350 16 is_stmt 0 view .LVU4580
 10689 007a E270     		strb	r2, [r4, #3]
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 10690              		.loc 1 349 42 is_stmt 1 view .LVU4581
 10691              	.LVL1009:
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 10692              		.loc 1 349 17 view .LVU4582
 350:Core/Src/SEGGER_RTT.c ****   }
 10693              		.loc 1 350 5 view .LVU4583
 350:Core/Src/SEGGER_RTT.c ****   }
 10694              		.loc 1 350 16 is_stmt 0 view .LVU4584
 10695 007c 2371     		strb	r3, [r4, #4]
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 10696              		.loc 1 349 42 is_stmt 1 view .LVU4585
 10697              	.LVL1010:
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 10698              		.loc 1 349 17 view .LVU4586
 350:Core/Src/SEGGER_RTT.c ****   }
 10699              		.loc 1 350 5 view .LVU4587
 350:Core/Src/SEGGER_RTT.c ****   }
 10700              		.loc 1 350 16 is_stmt 0 view .LVU4588
 10701 007e 5222     		movs	r2, #82
 10702 0080 5423     		movs	r3, #84
 10703 0082 6271     		strb	r2, [r4, #5]
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 10704              		.loc 1 349 42 is_stmt 1 view .LVU4589
 10705              	.LVL1011:
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 10706              		.loc 1 349 17 view .LVU4590
 350:Core/Src/SEGGER_RTT.c ****   }
 10707              		.loc 1 350 5 view .LVU4591
 350:Core/Src/SEGGER_RTT.c ****   }
 10708              		.loc 1 350 16 is_stmt 0 view .LVU4592
 10709 0084 A171     		strb	r1, [r4, #6]
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 10710              		.loc 1 349 42 is_stmt 1 view .LVU4593
 10711              	.LVL1012:
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 10712              		.loc 1 349 17 view .LVU4594
 350:Core/Src/SEGGER_RTT.c ****   }
 10713              		.loc 1 350 5 view .LVU4595
 350:Core/Src/SEGGER_RTT.c ****   }
 10714              		.loc 1 350 16 is_stmt 0 view .LVU4596
 10715 0086 E271     		strb	r2, [r4, #7]
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 10716              		.loc 1 349 42 is_stmt 1 view .LVU4597
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccs0vIiH.s 			page 290


 10717              	.LVL1013:
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 10718              		.loc 1 349 17 view .LVU4598
 350:Core/Src/SEGGER_RTT.c ****   }
 10719              		.loc 1 350 5 view .LVU4599
 350:Core/Src/SEGGER_RTT.c ****   }
 10720              		.loc 1 350 16 is_stmt 0 view .LVU4600
 10721 0088 2372     		strb	r3, [r4, #8]
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 10722              		.loc 1 349 42 is_stmt 1 view .LVU4601
 10723              	.LVL1014:
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 10724              		.loc 1 349 17 view .LVU4602
 350:Core/Src/SEGGER_RTT.c ****   }
 10725              		.loc 1 350 5 view .LVU4603
 350:Core/Src/SEGGER_RTT.c ****   }
 10726              		.loc 1 350 16 is_stmt 0 view .LVU4604
 10727 008a 6372     		strb	r3, [r4, #9]
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 10728              		.loc 1 349 42 is_stmt 1 view .LVU4605
 10729              	.LVL1015:
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 10730              		.loc 1 349 17 view .LVU4606
 350:Core/Src/SEGGER_RTT.c ****   }
 10731              		.loc 1 350 5 view .LVU4607
 350:Core/Src/SEGGER_RTT.c ****   }
 10732              		.loc 1 350 16 is_stmt 0 view .LVU4608
 10733 008c A672     		strb	r6, [r4, #10]
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 10734              		.loc 1 349 42 is_stmt 1 view .LVU4609
 10735              	.LVL1016:
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 10736              		.loc 1 349 17 view .LVU4610
 350:Core/Src/SEGGER_RTT.c ****   }
 10737              		.loc 1 350 5 view .LVU4611
 350:Core/Src/SEGGER_RTT.c ****   }
 10738              		.loc 1 350 16 is_stmt 0 view .LVU4612
 10739 008e E672     		strb	r6, [r4, #11]
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 10740              		.loc 1 349 42 is_stmt 1 view .LVU4613
 10741              	.LVL1017:
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 10742              		.loc 1 349 17 view .LVU4614
 350:Core/Src/SEGGER_RTT.c ****   }
 10743              		.loc 1 350 5 view .LVU4615
 350:Core/Src/SEGGER_RTT.c ****   }
 10744              		.loc 1 350 16 is_stmt 0 view .LVU4616
 10745 0090 2673     		strb	r6, [r4, #12]
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 10746              		.loc 1 349 42 is_stmt 1 view .LVU4617
 10747              	.LVL1018:
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 10748              		.loc 1 349 17 view .LVU4618
 350:Core/Src/SEGGER_RTT.c ****   }
 10749              		.loc 1 350 5 view .LVU4619
 350:Core/Src/SEGGER_RTT.c ****   }
 10750              		.loc 1 350 16 is_stmt 0 view .LVU4620
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccs0vIiH.s 			page 291


 10751 0092 6673     		strb	r6, [r4, #13]
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 10752              		.loc 1 349 42 is_stmt 1 view .LVU4621
 10753              	.LVL1019:
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 10754              		.loc 1 349 17 view .LVU4622
 350:Core/Src/SEGGER_RTT.c ****   }
 10755              		.loc 1 350 5 view .LVU4623
 350:Core/Src/SEGGER_RTT.c ****   }
 10756              		.loc 1 350 16 is_stmt 0 view .LVU4624
 10757 0094 A673     		strb	r6, [r4, #14]
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 10758              		.loc 1 349 42 is_stmt 1 view .LVU4625
 10759              	.LVL1020:
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 10760              		.loc 1 349 17 view .LVU4626
 350:Core/Src/SEGGER_RTT.c ****   }
 10761              		.loc 1 350 5 view .LVU4627
 350:Core/Src/SEGGER_RTT.c ****   }
 10762              		.loc 1 350 16 is_stmt 0 view .LVU4628
 10763 0096 E673     		strb	r6, [r4, #15]
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 10764              		.loc 1 349 42 is_stmt 1 view .LVU4629
 10765              	.LVL1021:
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 10766              		.loc 1 349 17 view .LVU4630
 352:Core/Src/SEGGER_RTT.c **** }
 10767              		.loc 1 352 3 view .LVU4631
 10768              		.syntax unified
 10769              	@ 352 "Core/Src/SEGGER_RTT.c" 1
 10770 0098 BFF35F8F 		dmb
 10771              	
 10772              	@ 0 "" 2
 352:Core/Src/SEGGER_RTT.c **** }
 10773              		.loc 1 352 13 view .LVU4632
 353:Core/Src/SEGGER_RTT.c **** 
 10774              		.loc 1 353 1 is_stmt 0 view .LVU4633
 10775              		.thumb
 10776              		.syntax unified
 10777 009c B6E7     		b	.L404
 10778              	.LVL1022:
 10779              	.L406:
 353:Core/Src/SEGGER_RTT.c **** 
 10780              		.loc 1 353 1 view .LVU4634
 10781              	.LBE545:
 10782              	.LBE544:
 10783              	.LBE549:
1849:Core/Src/SEGGER_RTT.c ****   }
 10784              		.loc 1 1849 7 view .LVU4635
 10785 009e 4FF0FF30 		mov	r0, #-1
 10786              	.LVL1023:
1851:Core/Src/SEGGER_RTT.c **** }
 10787              		.loc 1 1851 3 is_stmt 1 view .LVU4636
 10788              		.loc 1 1852 1 is_stmt 0 view .LVU4637
 10789 00a2 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 10790              	.LVL1024:
 10791              	.L410:
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccs0vIiH.s 			page 292


 10792              		.loc 1 1852 1 view .LVU4638
 10793              		.align	2
 10794              	.L409:
 10795 00a4 00000000 		.word	.LANCHOR0
 10796 00a8 00000000 		.word	.LANCHOR1
 10797 00ac 00000000 		.word	.LC0
 10798 00b0 00000000 		.word	.LANCHOR2
 10799              		.cfi_endproc
 10800              	.LFE29:
 10802              		.section	.text.SEGGER_RTT_SetFlagsDownBuffer,"ax",%progbits
 10803              		.align	1
 10804              		.p2align 2,,3
 10805              		.global	SEGGER_RTT_SetFlagsDownBuffer
 10806              		.syntax unified
 10807              		.thumb
 10808              		.thumb_func
 10810              	SEGGER_RTT_SetFlagsDownBuffer:
 10811              	.LVL1025:
 10812              	.LFB30:
1853:Core/Src/SEGGER_RTT.c **** 
1854:Core/Src/SEGGER_RTT.c **** /*********************************************************************
1855:Core/Src/SEGGER_RTT.c **** *
1856:Core/Src/SEGGER_RTT.c **** *       SEGGER_RTT_SetFlagsDownBuffer
1857:Core/Src/SEGGER_RTT.c **** *
1858:Core/Src/SEGGER_RTT.c **** *  Function description
1859:Core/Src/SEGGER_RTT.c **** *    Run-time configuration of specific Down-buffer flags (T->H).
1860:Core/Src/SEGGER_RTT.c **** *    Buffer to be configured is specified by index.
1861:Core/Src/SEGGER_RTT.c **** *
1862:Core/Src/SEGGER_RTT.c **** *  Parameters
1863:Core/Src/SEGGER_RTT.c **** *    BufferIndex  Index of the buffer to renamed.
1864:Core/Src/SEGGER_RTT.c **** *    Flags        Flags to set for the buffer.
1865:Core/Src/SEGGER_RTT.c **** *                 Flags[31:24] are used for validity check and must be zero. Flags[23:2] are reserv
1866:Core/Src/SEGGER_RTT.c **** *
1867:Core/Src/SEGGER_RTT.c **** *  Return value
1868:Core/Src/SEGGER_RTT.c **** *    >= 0  O.K.
1869:Core/Src/SEGGER_RTT.c **** *     < 0  Error
1870:Core/Src/SEGGER_RTT.c **** */
1871:Core/Src/SEGGER_RTT.c **** int SEGGER_RTT_SetFlagsDownBuffer(unsigned BufferIndex, unsigned Flags) {
 10813              		.loc 1 1871 73 is_stmt 1 view -0
 10814              		.cfi_startproc
 10815              		@ args = 0, pretend = 0, frame = 0
 10816              		@ frame_needed = 0, uses_anonymous_args = 0
1872:Core/Src/SEGGER_RTT.c ****   int r;
 10817              		.loc 1 1872 3 view .LVU4640
1873:Core/Src/SEGGER_RTT.c ****   volatile SEGGER_RTT_CB* pRTTCB;
 10818              		.loc 1 1873 3 view .LVU4641
1874:Core/Src/SEGGER_RTT.c ****   volatile SEGGER_RTT_BUFFER_DOWN* pDown;
 10819              		.loc 1 1874 3 view .LVU4642
 10820              	.LBB554:
1875:Core/Src/SEGGER_RTT.c **** 
1876:Core/Src/SEGGER_RTT.c ****   INIT();
 10821              		.loc 1 1876 3 view .LVU4643
 10822              		.loc 1 1876 3 view .LVU4644
 10823              		.loc 1 1876 3 view .LVU4645
 10824              		.loc 1 1876 3 view .LVU4646
 10825              	.LBE554:
1871:Core/Src/SEGGER_RTT.c ****   int r;
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccs0vIiH.s 			page 293


 10826              		.loc 1 1871 73 is_stmt 0 view .LVU4647
 10827 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 10828              		.cfi_def_cfa_offset 24
 10829              		.cfi_offset 3, -24
 10830              		.cfi_offset 4, -20
 10831              		.cfi_offset 5, -16
 10832              		.cfi_offset 6, -12
 10833              		.cfi_offset 7, -8
 10834              		.cfi_offset 14, -4
 10835              	.LBB557:
 10836              		.loc 1 1876 3 view .LVU4648
 10837 0002 284C     		ldr	r4, .L417
 10838 0004 2378     		ldrb	r3, [r4]	@ zero_extendqisi2
 10839              	.LBE557:
1871:Core/Src/SEGGER_RTT.c ****   int r;
 10840              		.loc 1 1871 73 view .LVU4649
 10841 0006 0546     		mov	r5, r0
 10842 0008 0F46     		mov	r7, r1
 10843              	.LBB558:
 10844              		.loc 1 1876 3 view .LVU4650
 10845 000a 83B1     		cbz	r3, .L416
 10846              	.LVL1026:
 10847              	.L412:
 10848              		.loc 1 1876 3 is_stmt 1 discriminator 3 view .LVU4651
 10849              	.LBE558:
 10850              		.loc 1 1876 9 discriminator 3 view .LVU4652
1877:Core/Src/SEGGER_RTT.c ****   pRTTCB = (volatile SEGGER_RTT_CB*)((unsigned char*)&_SEGGER_RTT + SEGGER_RTT_UNCACHED_OFF);  // A
 10851              		.loc 1 1877 3 discriminator 3 view .LVU4653
1878:Core/Src/SEGGER_RTT.c ****   if (BufferIndex < SEGGER_RTT_MAX_NUM_DOWN_BUFFERS) {
 10852              		.loc 1 1878 3 discriminator 3 view .LVU4654
 10853              		.loc 1 1878 6 is_stmt 0 discriminator 3 view .LVU4655
 10854 000c 022D     		cmp	r5, #2
 10855 000e 46D8     		bhi	.L414
 10856              	.LBB559:
1879:Core/Src/SEGGER_RTT.c ****     SEGGER_RTT_LOCK();
 10857              		.loc 1 1879 5 is_stmt 1 view .LVU4656
 10858              		.loc 1 1879 5 view .LVU4657
 10859              		.syntax unified
 10860              	@ 1879 "Core/Src/SEGGER_RTT.c" 1
 10861 0010 EFF31183 		mrs   r3, basepri  
 10862 0014 4FF02001 		mov   r1, #32       
 10863 0018 81F31188 		msr   basepri, r1  
 10864              		
 10865              	@ 0 "" 2
 10866              	.LVL1027:
 10867              		.loc 1 1879 22 view .LVU4658
1880:Core/Src/SEGGER_RTT.c ****     pDown = &pRTTCB->aDown[BufferIndex];
 10868              		.loc 1 1880 5 view .LVU4659
1881:Core/Src/SEGGER_RTT.c ****     pDown->Flags = Flags;
 10869              		.loc 1 1881 5 view .LVU4660
 10870              		.loc 1 1881 18 is_stmt 0 view .LVU4661
 10871              		.thumb
 10872              		.syntax unified
 10873 001c 05EB4505 		add	r5, r5, r5, lsl #1
 10874              	.LVL1028:
 10875              		.loc 1 1881 18 view .LVU4662
 10876 0020 04EBC504 		add	r4, r4, r5, lsl #3
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccs0vIiH.s 			page 294


 10877 0024 6767     		str	r7, [r4, #116]
1882:Core/Src/SEGGER_RTT.c ****     SEGGER_RTT_UNLOCK();
 10878              		.loc 1 1882 5 is_stmt 1 view .LVU4663
 10879              		.syntax unified
 10880              	@ 1882 "Core/Src/SEGGER_RTT.c" 1
 10881 0026 83F31188 		msr   basepri, r3  
 10882              		
 10883              	@ 0 "" 2
 10884              		.thumb
 10885              		.syntax unified
 10886              	.LBE559:
 10887              		.loc 1 1882 24 view .LVU4664
1883:Core/Src/SEGGER_RTT.c ****     r =  0;
 10888              		.loc 1 1883 5 view .LVU4665
 10889              	.LVL1029:
 10890              		.loc 1 1883 7 is_stmt 0 view .LVU4666
 10891 002a 0020     		movs	r0, #0
1884:Core/Src/SEGGER_RTT.c ****   } else {
1885:Core/Src/SEGGER_RTT.c ****     r = -1;
1886:Core/Src/SEGGER_RTT.c ****   }
1887:Core/Src/SEGGER_RTT.c ****   return r;
1888:Core/Src/SEGGER_RTT.c **** }
 10892              		.loc 1 1888 1 view .LVU4667
 10893 002c F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 10894              	.LVL1030:
 10895              	.L416:
 10896              		.loc 1 1888 1 view .LVU4668
 10897 002e 03F0FF06 		and	r6, r3, #255
 10898              	.LBB560:
1876:Core/Src/SEGGER_RTT.c ****   pRTTCB = (volatile SEGGER_RTT_CB*)((unsigned char*)&_SEGGER_RTT + SEGGER_RTT_UNCACHED_OFF);  // A
 10899              		.loc 1 1876 3 is_stmt 1 view .LVU4669
 10900              	.LBB555:
 10901              	.LBI555:
 314:Core/Src/SEGGER_RTT.c ****   volatile SEGGER_RTT_CB* p;   // Volatile to make sure that compiler cannot change the order of ac
 10902              		.loc 1 314 13 view .LVU4670
 10903              	.LBB556:
 315:Core/Src/SEGGER_RTT.c ****   static const char _aInitStr[] = "\0\0\0\0\0\0TTR REGGES";  // Init complete ID string to make sur
 10904              		.loc 1 315 3 view .LVU4671
 316:Core/Src/SEGGER_RTT.c ****   unsigned i;
 10905              		.loc 1 316 3 view .LVU4672
 317:Core/Src/SEGGER_RTT.c ****   //
 10906              		.loc 1 317 3 view .LVU4673
 321:Core/Src/SEGGER_RTT.c ****   memset((SEGGER_RTT_CB*)p, 0, sizeof(_SEGGER_RTT));         // Make sure that the RTT CB is always
 10907              		.loc 1 321 3 view .LVU4674
 10908              	.LVL1031:
 322:Core/Src/SEGGER_RTT.c ****   p->MaxNumUpBuffers    = SEGGER_RTT_MAX_NUM_UP_BUFFERS;
 10909              		.loc 1 322 3 view .LVU4675
 10910 0032 3146     		mov	r1, r6
 10911              	.LVL1032:
 322:Core/Src/SEGGER_RTT.c ****   p->MaxNumUpBuffers    = SEGGER_RTT_MAX_NUM_UP_BUFFERS;
 10912              		.loc 1 322 3 is_stmt 0 view .LVU4676
 10913 0034 7822     		movs	r2, #120
 10914 0036 04F13000 		add	r0, r4, #48
 10915              	.LVL1033:
 322:Core/Src/SEGGER_RTT.c ****   p->MaxNumUpBuffers    = SEGGER_RTT_MAX_NUM_UP_BUFFERS;
 10916              		.loc 1 322 3 view .LVU4677
 10917 003a FFF7FEFF 		bl	memset
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccs0vIiH.s 			page 295


 10918              	.LVL1034:
 323:Core/Src/SEGGER_RTT.c ****   p->MaxNumDownBuffers  = SEGGER_RTT_MAX_NUM_DOWN_BUFFERS;
 10919              		.loc 1 323 3 is_stmt 1 view .LVU4678
 323:Core/Src/SEGGER_RTT.c ****   p->MaxNumDownBuffers  = SEGGER_RTT_MAX_NUM_DOWN_BUFFERS;
 10920              		.loc 1 323 25 is_stmt 0 view .LVU4679
 10921 003e 0323     		movs	r3, #3
 10922 0040 2361     		str	r3, [r4, #16]
 324:Core/Src/SEGGER_RTT.c ****   //
 10923              		.loc 1 324 3 is_stmt 1 view .LVU4680
 329:Core/Src/SEGGER_RTT.c ****   p->aUp[0].SizeOfBuffer  = BUFFER_SIZE_UP;
 10924              		.loc 1 329 27 is_stmt 0 view .LVU4681
 10925 0042 194A     		ldr	r2, .L417+4
 324:Core/Src/SEGGER_RTT.c ****   //
 10926              		.loc 1 324 25 view .LVU4682
 10927 0044 6361     		str	r3, [r4, #20]
 328:Core/Src/SEGGER_RTT.c ****   p->aUp[0].pBuffer       = _acUpBuffer;
 10928              		.loc 1 328 3 is_stmt 1 view .LVU4683
 330:Core/Src/SEGGER_RTT.c ****   p->aUp[0].RdOff         = 0u;
 10929              		.loc 1 330 27 is_stmt 0 view .LVU4684
 10930 0046 4FF48061 		mov	r1, #1024
 328:Core/Src/SEGGER_RTT.c ****   p->aUp[0].pBuffer       = _acUpBuffer;
 10931              		.loc 1 328 27 view .LVU4685
 10932 004a 184B     		ldr	r3, .L417+8
 10933 004c A361     		str	r3, [r4, #24]
 329:Core/Src/SEGGER_RTT.c ****   p->aUp[0].SizeOfBuffer  = BUFFER_SIZE_UP;
 10934              		.loc 1 329 3 is_stmt 1 view .LVU4686
 329:Core/Src/SEGGER_RTT.c ****   p->aUp[0].SizeOfBuffer  = BUFFER_SIZE_UP;
 10935              		.loc 1 329 27 is_stmt 0 view .LVU4687
 10936 004e E261     		str	r2, [r4, #28]
 330:Core/Src/SEGGER_RTT.c ****   p->aUp[0].RdOff         = 0u;
 10937              		.loc 1 330 3 is_stmt 1 view .LVU4688
 330:Core/Src/SEGGER_RTT.c ****   p->aUp[0].RdOff         = 0u;
 10938              		.loc 1 330 27 is_stmt 0 view .LVU4689
 10939 0050 2162     		str	r1, [r4, #32]
 331:Core/Src/SEGGER_RTT.c ****   p->aUp[0].WrOff         = 0u;
 10940              		.loc 1 331 3 is_stmt 1 view .LVU4690
 338:Core/Src/SEGGER_RTT.c ****   p->aDown[0].SizeOfBuffer  = BUFFER_SIZE_DOWN;
 10941              		.loc 1 338 29 is_stmt 0 view .LVU4691
 10942 0052 174A     		ldr	r2, .L417+12
 331:Core/Src/SEGGER_RTT.c ****   p->aUp[0].WrOff         = 0u;
 10943              		.loc 1 331 27 view .LVU4692
 10944 0054 A662     		str	r6, [r4, #40]
 332:Core/Src/SEGGER_RTT.c ****   p->aUp[0].Flags         = SEGGER_RTT_MODE_DEFAULT;
 10945              		.loc 1 332 3 is_stmt 1 view .LVU4693
 332:Core/Src/SEGGER_RTT.c ****   p->aUp[0].Flags         = SEGGER_RTT_MODE_DEFAULT;
 10946              		.loc 1 332 27 is_stmt 0 view .LVU4694
 10947 0056 6662     		str	r6, [r4, #36]
 333:Core/Src/SEGGER_RTT.c ****   //
 10948              		.loc 1 333 3 is_stmt 1 view .LVU4695
 333:Core/Src/SEGGER_RTT.c ****   //
 10949              		.loc 1 333 27 is_stmt 0 view .LVU4696
 10950 0058 E662     		str	r6, [r4, #44]
 337:Core/Src/SEGGER_RTT.c ****   p->aDown[0].pBuffer       = _acDownBuffer;
 10951              		.loc 1 337 3 is_stmt 1 view .LVU4697
 337:Core/Src/SEGGER_RTT.c ****   p->aDown[0].pBuffer       = _acDownBuffer;
 10952              		.loc 1 337 29 is_stmt 0 view .LVU4698
 10953 005a 2366     		str	r3, [r4, #96]
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccs0vIiH.s 			page 296


 338:Core/Src/SEGGER_RTT.c ****   p->aDown[0].SizeOfBuffer  = BUFFER_SIZE_DOWN;
 10954              		.loc 1 338 3 is_stmt 1 view .LVU4699
 339:Core/Src/SEGGER_RTT.c ****   p->aDown[0].RdOff         = 0u;
 10955              		.loc 1 339 29 is_stmt 0 view .LVU4700
 10956 005c 1023     		movs	r3, #16
 338:Core/Src/SEGGER_RTT.c ****   p->aDown[0].SizeOfBuffer  = BUFFER_SIZE_DOWN;
 10957              		.loc 1 338 29 view .LVU4701
 10958 005e 6266     		str	r2, [r4, #100]
 339:Core/Src/SEGGER_RTT.c ****   p->aDown[0].RdOff         = 0u;
 10959              		.loc 1 339 3 is_stmt 1 view .LVU4702
 339:Core/Src/SEGGER_RTT.c ****   p->aDown[0].RdOff         = 0u;
 10960              		.loc 1 339 29 is_stmt 0 view .LVU4703
 10961 0060 A366     		str	r3, [r4, #104]
 340:Core/Src/SEGGER_RTT.c ****   p->aDown[0].WrOff         = 0u;
 10962              		.loc 1 340 3 is_stmt 1 view .LVU4704
 340:Core/Src/SEGGER_RTT.c ****   p->aDown[0].WrOff         = 0u;
 10963              		.loc 1 340 29 is_stmt 0 view .LVU4705
 10964 0062 2667     		str	r6, [r4, #112]
 341:Core/Src/SEGGER_RTT.c ****   p->aDown[0].Flags         = SEGGER_RTT_MODE_DEFAULT;
 10965              		.loc 1 341 3 is_stmt 1 view .LVU4706
 341:Core/Src/SEGGER_RTT.c ****   p->aDown[0].Flags         = SEGGER_RTT_MODE_DEFAULT;
 10966              		.loc 1 341 29 is_stmt 0 view .LVU4707
 10967 0064 E666     		str	r6, [r4, #108]
 342:Core/Src/SEGGER_RTT.c ****   //
 10968              		.loc 1 342 3 is_stmt 1 view .LVU4708
 342:Core/Src/SEGGER_RTT.c ****   //
 10969              		.loc 1 342 29 is_stmt 0 view .LVU4709
 10970 0066 6667     		str	r6, [r4, #116]
 348:Core/Src/SEGGER_RTT.c ****   for (i = 0; i < sizeof(_aInitStr) - 1; ++i) {
 10971              		.loc 1 348 3 is_stmt 1 view .LVU4710
 10972              		.syntax unified
 10973              	@ 348 "Core/Src/SEGGER_RTT.c" 1
 10974 0068 BFF35F8F 		dmb
 10975              	
 10976              	@ 0 "" 2
 348:Core/Src/SEGGER_RTT.c ****   for (i = 0; i < sizeof(_aInitStr) - 1; ++i) {
 10977              		.loc 1 348 13 view .LVU4711
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 10978              		.loc 1 349 3 view .LVU4712
 10979              	.LVL1035:
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 10980              		.loc 1 349 17 view .LVU4713
 350:Core/Src/SEGGER_RTT.c ****   }
 10981              		.loc 1 350 5 view .LVU4714
 350:Core/Src/SEGGER_RTT.c ****   }
 10982              		.loc 1 350 16 is_stmt 0 view .LVU4715
 10983              		.thumb
 10984              		.syntax unified
 10985 006c 5323     		movs	r3, #83
 10986 006e 2370     		strb	r3, [r4]
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 10987              		.loc 1 349 42 is_stmt 1 view .LVU4716
 10988              	.LVL1036:
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 10989              		.loc 1 349 17 view .LVU4717
 350:Core/Src/SEGGER_RTT.c ****   }
 10990              		.loc 1 350 5 view .LVU4718
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccs0vIiH.s 			page 297


 350:Core/Src/SEGGER_RTT.c ****   }
 10991              		.loc 1 350 16 is_stmt 0 view .LVU4719
 10992 0070 4722     		movs	r2, #71
 10993 0072 4523     		movs	r3, #69
 10994 0074 6370     		strb	r3, [r4, #1]
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 10995              		.loc 1 349 42 is_stmt 1 view .LVU4720
 10996              	.LVL1037:
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 10997              		.loc 1 349 17 view .LVU4721
 350:Core/Src/SEGGER_RTT.c ****   }
 10998              		.loc 1 350 5 view .LVU4722
 350:Core/Src/SEGGER_RTT.c ****   }
 10999              		.loc 1 350 16 is_stmt 0 view .LVU4723
 11000 0076 2021     		movs	r1, #32
 11001 0078 A270     		strb	r2, [r4, #2]
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 11002              		.loc 1 349 42 is_stmt 1 view .LVU4724
 11003              	.LVL1038:
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 11004              		.loc 1 349 17 view .LVU4725
 350:Core/Src/SEGGER_RTT.c ****   }
 11005              		.loc 1 350 5 view .LVU4726
 350:Core/Src/SEGGER_RTT.c ****   }
 11006              		.loc 1 350 16 is_stmt 0 view .LVU4727
 11007 007a E270     		strb	r2, [r4, #3]
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 11008              		.loc 1 349 42 is_stmt 1 view .LVU4728
 11009              	.LVL1039:
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 11010              		.loc 1 349 17 view .LVU4729
 350:Core/Src/SEGGER_RTT.c ****   }
 11011              		.loc 1 350 5 view .LVU4730
 350:Core/Src/SEGGER_RTT.c ****   }
 11012              		.loc 1 350 16 is_stmt 0 view .LVU4731
 11013 007c 2371     		strb	r3, [r4, #4]
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 11014              		.loc 1 349 42 is_stmt 1 view .LVU4732
 11015              	.LVL1040:
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 11016              		.loc 1 349 17 view .LVU4733
 350:Core/Src/SEGGER_RTT.c ****   }
 11017              		.loc 1 350 5 view .LVU4734
 350:Core/Src/SEGGER_RTT.c ****   }
 11018              		.loc 1 350 16 is_stmt 0 view .LVU4735
 11019 007e 5222     		movs	r2, #82
 11020 0080 5423     		movs	r3, #84
 11021 0082 6271     		strb	r2, [r4, #5]
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 11022              		.loc 1 349 42 is_stmt 1 view .LVU4736
 11023              	.LVL1041:
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 11024              		.loc 1 349 17 view .LVU4737
 350:Core/Src/SEGGER_RTT.c ****   }
 11025              		.loc 1 350 5 view .LVU4738
 350:Core/Src/SEGGER_RTT.c ****   }
 11026              		.loc 1 350 16 is_stmt 0 view .LVU4739
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccs0vIiH.s 			page 298


 11027 0084 A171     		strb	r1, [r4, #6]
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 11028              		.loc 1 349 42 is_stmt 1 view .LVU4740
 11029              	.LVL1042:
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 11030              		.loc 1 349 17 view .LVU4741
 350:Core/Src/SEGGER_RTT.c ****   }
 11031              		.loc 1 350 5 view .LVU4742
 350:Core/Src/SEGGER_RTT.c ****   }
 11032              		.loc 1 350 16 is_stmt 0 view .LVU4743
 11033 0086 E271     		strb	r2, [r4, #7]
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 11034              		.loc 1 349 42 is_stmt 1 view .LVU4744
 11035              	.LVL1043:
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 11036              		.loc 1 349 17 view .LVU4745
 350:Core/Src/SEGGER_RTT.c ****   }
 11037              		.loc 1 350 5 view .LVU4746
 350:Core/Src/SEGGER_RTT.c ****   }
 11038              		.loc 1 350 16 is_stmt 0 view .LVU4747
 11039 0088 2372     		strb	r3, [r4, #8]
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 11040              		.loc 1 349 42 is_stmt 1 view .LVU4748
 11041              	.LVL1044:
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 11042              		.loc 1 349 17 view .LVU4749
 350:Core/Src/SEGGER_RTT.c ****   }
 11043              		.loc 1 350 5 view .LVU4750
 350:Core/Src/SEGGER_RTT.c ****   }
 11044              		.loc 1 350 16 is_stmt 0 view .LVU4751
 11045 008a 6372     		strb	r3, [r4, #9]
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 11046              		.loc 1 349 42 is_stmt 1 view .LVU4752
 11047              	.LVL1045:
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 11048              		.loc 1 349 17 view .LVU4753
 350:Core/Src/SEGGER_RTT.c ****   }
 11049              		.loc 1 350 5 view .LVU4754
 350:Core/Src/SEGGER_RTT.c ****   }
 11050              		.loc 1 350 16 is_stmt 0 view .LVU4755
 11051 008c A672     		strb	r6, [r4, #10]
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 11052              		.loc 1 349 42 is_stmt 1 view .LVU4756
 11053              	.LVL1046:
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 11054              		.loc 1 349 17 view .LVU4757
 350:Core/Src/SEGGER_RTT.c ****   }
 11055              		.loc 1 350 5 view .LVU4758
 350:Core/Src/SEGGER_RTT.c ****   }
 11056              		.loc 1 350 16 is_stmt 0 view .LVU4759
 11057 008e E672     		strb	r6, [r4, #11]
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 11058              		.loc 1 349 42 is_stmt 1 view .LVU4760
 11059              	.LVL1047:
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 11060              		.loc 1 349 17 view .LVU4761
 350:Core/Src/SEGGER_RTT.c ****   }
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccs0vIiH.s 			page 299


 11061              		.loc 1 350 5 view .LVU4762
 350:Core/Src/SEGGER_RTT.c ****   }
 11062              		.loc 1 350 16 is_stmt 0 view .LVU4763
 11063 0090 2673     		strb	r6, [r4, #12]
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 11064              		.loc 1 349 42 is_stmt 1 view .LVU4764
 11065              	.LVL1048:
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 11066              		.loc 1 349 17 view .LVU4765
 350:Core/Src/SEGGER_RTT.c ****   }
 11067              		.loc 1 350 5 view .LVU4766
 350:Core/Src/SEGGER_RTT.c ****   }
 11068              		.loc 1 350 16 is_stmt 0 view .LVU4767
 11069 0092 6673     		strb	r6, [r4, #13]
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 11070              		.loc 1 349 42 is_stmt 1 view .LVU4768
 11071              	.LVL1049:
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 11072              		.loc 1 349 17 view .LVU4769
 350:Core/Src/SEGGER_RTT.c ****   }
 11073              		.loc 1 350 5 view .LVU4770
 350:Core/Src/SEGGER_RTT.c ****   }
 11074              		.loc 1 350 16 is_stmt 0 view .LVU4771
 11075 0094 A673     		strb	r6, [r4, #14]
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 11076              		.loc 1 349 42 is_stmt 1 view .LVU4772
 11077              	.LVL1050:
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 11078              		.loc 1 349 17 view .LVU4773
 350:Core/Src/SEGGER_RTT.c ****   }
 11079              		.loc 1 350 5 view .LVU4774
 350:Core/Src/SEGGER_RTT.c ****   }
 11080              		.loc 1 350 16 is_stmt 0 view .LVU4775
 11081 0096 E673     		strb	r6, [r4, #15]
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 11082              		.loc 1 349 42 is_stmt 1 view .LVU4776
 11083              	.LVL1051:
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 11084              		.loc 1 349 17 view .LVU4777
 352:Core/Src/SEGGER_RTT.c **** }
 11085              		.loc 1 352 3 view .LVU4778
 11086              		.syntax unified
 11087              	@ 352 "Core/Src/SEGGER_RTT.c" 1
 11088 0098 BFF35F8F 		dmb
 11089              	
 11090              	@ 0 "" 2
 352:Core/Src/SEGGER_RTT.c **** }
 11091              		.loc 1 352 13 view .LVU4779
 353:Core/Src/SEGGER_RTT.c **** 
 11092              		.loc 1 353 1 is_stmt 0 view .LVU4780
 11093              		.thumb
 11094              		.syntax unified
 11095 009c B6E7     		b	.L412
 11096              	.LVL1052:
 11097              	.L414:
 353:Core/Src/SEGGER_RTT.c **** 
 11098              		.loc 1 353 1 view .LVU4781
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccs0vIiH.s 			page 300


 11099              	.LBE556:
 11100              	.LBE555:
 11101              	.LBE560:
1885:Core/Src/SEGGER_RTT.c ****   }
 11102              		.loc 1 1885 7 view .LVU4782
 11103 009e 4FF0FF30 		mov	r0, #-1
 11104              	.LVL1053:
1887:Core/Src/SEGGER_RTT.c **** }
 11105              		.loc 1 1887 3 is_stmt 1 view .LVU4783
 11106              		.loc 1 1888 1 is_stmt 0 view .LVU4784
 11107 00a2 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 11108              	.LVL1054:
 11109              	.L418:
 11110              		.loc 1 1888 1 view .LVU4785
 11111              		.align	2
 11112              	.L417:
 11113 00a4 00000000 		.word	.LANCHOR0
 11114 00a8 00000000 		.word	.LANCHOR1
 11115 00ac 00000000 		.word	.LC0
 11116 00b0 00000000 		.word	.LANCHOR2
 11117              		.cfi_endproc
 11118              	.LFE30:
 11120              		.section	.text.SEGGER_RTT_Init,"ax",%progbits
 11121              		.align	1
 11122              		.p2align 2,,3
 11123              		.global	SEGGER_RTT_Init
 11124              		.syntax unified
 11125              		.thumb
 11126              		.thumb_func
 11128              	SEGGER_RTT_Init:
 11129              	.LFB31:
1889:Core/Src/SEGGER_RTT.c **** 
1890:Core/Src/SEGGER_RTT.c **** /*********************************************************************
1891:Core/Src/SEGGER_RTT.c **** *
1892:Core/Src/SEGGER_RTT.c **** *       SEGGER_RTT_Init
1893:Core/Src/SEGGER_RTT.c **** *
1894:Core/Src/SEGGER_RTT.c **** *  Function description
1895:Core/Src/SEGGER_RTT.c **** *    Initializes the RTT Control Block.
1896:Core/Src/SEGGER_RTT.c **** *    Should be used in RAM targets, at start of the application.
1897:Core/Src/SEGGER_RTT.c **** *
1898:Core/Src/SEGGER_RTT.c **** */
1899:Core/Src/SEGGER_RTT.c **** void SEGGER_RTT_Init (void) {
 11130              		.loc 1 1899 29 is_stmt 1 view -0
 11131              		.cfi_startproc
 11132              		@ args = 0, pretend = 0, frame = 0
 11133              		@ frame_needed = 0, uses_anonymous_args = 0
1900:Core/Src/SEGGER_RTT.c ****   _DoInit();
 11134              		.loc 1 1900 3 view .LVU4787
 11135              	.LBB563:
 11136              	.LBI563:
 314:Core/Src/SEGGER_RTT.c ****   volatile SEGGER_RTT_CB* p;   // Volatile to make sure that compiler cannot change the order of ac
 11137              		.loc 1 314 13 view .LVU4788
 11138              	.LBB564:
 315:Core/Src/SEGGER_RTT.c ****   static const char _aInitStr[] = "\0\0\0\0\0\0TTR REGGES";  // Init complete ID string to make sur
 11139              		.loc 1 315 3 view .LVU4789
 316:Core/Src/SEGGER_RTT.c ****   unsigned i;
 11140              		.loc 1 316 3 view .LVU4790
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccs0vIiH.s 			page 301


 317:Core/Src/SEGGER_RTT.c ****   //
 11141              		.loc 1 317 3 view .LVU4791
 321:Core/Src/SEGGER_RTT.c ****   memset((SEGGER_RTT_CB*)p, 0, sizeof(_SEGGER_RTT));         // Make sure that the RTT CB is always
 11142              		.loc 1 321 3 view .LVU4792
 11143              	.LVL1055:
 322:Core/Src/SEGGER_RTT.c ****   p->MaxNumUpBuffers    = SEGGER_RTT_MAX_NUM_UP_BUFFERS;
 11144              		.loc 1 322 3 view .LVU4793
 11145              	.LBE564:
 11146              	.LBE563:
1899:Core/Src/SEGGER_RTT.c ****   _DoInit();
 11147              		.loc 1 1899 29 is_stmt 0 view .LVU4794
 11148 0000 10B5     		push	{r4, lr}
 11149              		.cfi_def_cfa_offset 8
 11150              		.cfi_offset 4, -8
 11151              		.cfi_offset 14, -4
 11152              	.LBB566:
 11153              	.LBB565:
 322:Core/Src/SEGGER_RTT.c ****   p->MaxNumUpBuffers    = SEGGER_RTT_MAX_NUM_UP_BUFFERS;
 11154              		.loc 1 322 3 view .LVU4795
 11155 0002 1E4C     		ldr	r4, .L421
 11156 0004 7822     		movs	r2, #120
 11157 0006 0021     		movs	r1, #0
 11158 0008 04F13000 		add	r0, r4, #48
 11159 000c FFF7FEFF 		bl	memset
 11160              	.LVL1056:
 323:Core/Src/SEGGER_RTT.c ****   p->MaxNumDownBuffers  = SEGGER_RTT_MAX_NUM_DOWN_BUFFERS;
 11161              		.loc 1 323 3 is_stmt 1 view .LVU4796
 323:Core/Src/SEGGER_RTT.c ****   p->MaxNumDownBuffers  = SEGGER_RTT_MAX_NUM_DOWN_BUFFERS;
 11162              		.loc 1 323 25 is_stmt 0 view .LVU4797
 11163 0010 0321     		movs	r1, #3
 11164 0012 2161     		str	r1, [r4, #16]
 324:Core/Src/SEGGER_RTT.c ****   //
 11165              		.loc 1 324 3 is_stmt 1 view .LVU4798
 328:Core/Src/SEGGER_RTT.c ****   p->aUp[0].pBuffer       = _acUpBuffer;
 11166              		.loc 1 328 27 is_stmt 0 view .LVU4799
 11167 0014 1A4A     		ldr	r2, .L421+4
 324:Core/Src/SEGGER_RTT.c ****   //
 11168              		.loc 1 324 25 view .LVU4800
 11169 0016 6161     		str	r1, [r4, #20]
 328:Core/Src/SEGGER_RTT.c ****   p->aUp[0].pBuffer       = _acUpBuffer;
 11170              		.loc 1 328 3 is_stmt 1 view .LVU4801
 329:Core/Src/SEGGER_RTT.c ****   p->aUp[0].SizeOfBuffer  = BUFFER_SIZE_UP;
 11171              		.loc 1 329 27 is_stmt 0 view .LVU4802
 11172 0018 1A48     		ldr	r0, .L421+8
 328:Core/Src/SEGGER_RTT.c ****   p->aUp[0].pBuffer       = _acUpBuffer;
 11173              		.loc 1 328 27 view .LVU4803
 11174 001a A261     		str	r2, [r4, #24]
 329:Core/Src/SEGGER_RTT.c ****   p->aUp[0].SizeOfBuffer  = BUFFER_SIZE_UP;
 11175              		.loc 1 329 3 is_stmt 1 view .LVU4804
 330:Core/Src/SEGGER_RTT.c ****   p->aUp[0].RdOff         = 0u;
 11176              		.loc 1 330 27 is_stmt 0 view .LVU4805
 11177 001c 4FF48061 		mov	r1, #1024
 329:Core/Src/SEGGER_RTT.c ****   p->aUp[0].SizeOfBuffer  = BUFFER_SIZE_UP;
 11178              		.loc 1 329 27 view .LVU4806
 11179 0020 E061     		str	r0, [r4, #28]
 330:Core/Src/SEGGER_RTT.c ****   p->aUp[0].RdOff         = 0u;
 11180              		.loc 1 330 3 is_stmt 1 view .LVU4807
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccs0vIiH.s 			page 302


 331:Core/Src/SEGGER_RTT.c ****   p->aUp[0].WrOff         = 0u;
 11181              		.loc 1 331 27 is_stmt 0 view .LVU4808
 11182 0022 0023     		movs	r3, #0
 330:Core/Src/SEGGER_RTT.c ****   p->aUp[0].RdOff         = 0u;
 11183              		.loc 1 330 27 view .LVU4809
 11184 0024 2162     		str	r1, [r4, #32]
 331:Core/Src/SEGGER_RTT.c ****   p->aUp[0].WrOff         = 0u;
 11185              		.loc 1 331 3 is_stmt 1 view .LVU4810
 338:Core/Src/SEGGER_RTT.c ****   p->aDown[0].SizeOfBuffer  = BUFFER_SIZE_DOWN;
 11186              		.loc 1 338 29 is_stmt 0 view .LVU4811
 11187 0026 1848     		ldr	r0, .L421+12
 331:Core/Src/SEGGER_RTT.c ****   p->aUp[0].WrOff         = 0u;
 11188              		.loc 1 331 27 view .LVU4812
 11189 0028 A362     		str	r3, [r4, #40]
 332:Core/Src/SEGGER_RTT.c ****   p->aUp[0].Flags         = SEGGER_RTT_MODE_DEFAULT;
 11190              		.loc 1 332 3 is_stmt 1 view .LVU4813
 339:Core/Src/SEGGER_RTT.c ****   p->aDown[0].RdOff         = 0u;
 11191              		.loc 1 339 29 is_stmt 0 view .LVU4814
 11192 002a 1021     		movs	r1, #16
 332:Core/Src/SEGGER_RTT.c ****   p->aUp[0].Flags         = SEGGER_RTT_MODE_DEFAULT;
 11193              		.loc 1 332 27 view .LVU4815
 11194 002c 6362     		str	r3, [r4, #36]
 333:Core/Src/SEGGER_RTT.c ****   //
 11195              		.loc 1 333 3 is_stmt 1 view .LVU4816
 333:Core/Src/SEGGER_RTT.c ****   //
 11196              		.loc 1 333 27 is_stmt 0 view .LVU4817
 11197 002e E362     		str	r3, [r4, #44]
 337:Core/Src/SEGGER_RTT.c ****   p->aDown[0].pBuffer       = _acDownBuffer;
 11198              		.loc 1 337 3 is_stmt 1 view .LVU4818
 337:Core/Src/SEGGER_RTT.c ****   p->aDown[0].pBuffer       = _acDownBuffer;
 11199              		.loc 1 337 29 is_stmt 0 view .LVU4819
 11200 0030 2266     		str	r2, [r4, #96]
 338:Core/Src/SEGGER_RTT.c ****   p->aDown[0].SizeOfBuffer  = BUFFER_SIZE_DOWN;
 11201              		.loc 1 338 3 is_stmt 1 view .LVU4820
 338:Core/Src/SEGGER_RTT.c ****   p->aDown[0].SizeOfBuffer  = BUFFER_SIZE_DOWN;
 11202              		.loc 1 338 29 is_stmt 0 view .LVU4821
 11203 0032 6066     		str	r0, [r4, #100]
 339:Core/Src/SEGGER_RTT.c ****   p->aDown[0].RdOff         = 0u;
 11204              		.loc 1 339 3 is_stmt 1 view .LVU4822
 339:Core/Src/SEGGER_RTT.c ****   p->aDown[0].RdOff         = 0u;
 11205              		.loc 1 339 29 is_stmt 0 view .LVU4823
 11206 0034 A166     		str	r1, [r4, #104]
 340:Core/Src/SEGGER_RTT.c ****   p->aDown[0].WrOff         = 0u;
 11207              		.loc 1 340 3 is_stmt 1 view .LVU4824
 340:Core/Src/SEGGER_RTT.c ****   p->aDown[0].WrOff         = 0u;
 11208              		.loc 1 340 29 is_stmt 0 view .LVU4825
 11209 0036 2367     		str	r3, [r4, #112]
 341:Core/Src/SEGGER_RTT.c ****   p->aDown[0].Flags         = SEGGER_RTT_MODE_DEFAULT;
 11210              		.loc 1 341 3 is_stmt 1 view .LVU4826
 341:Core/Src/SEGGER_RTT.c ****   p->aDown[0].Flags         = SEGGER_RTT_MODE_DEFAULT;
 11211              		.loc 1 341 29 is_stmt 0 view .LVU4827
 11212 0038 E366     		str	r3, [r4, #108]
 342:Core/Src/SEGGER_RTT.c ****   //
 11213              		.loc 1 342 3 is_stmt 1 view .LVU4828
 342:Core/Src/SEGGER_RTT.c ****   //
 11214              		.loc 1 342 29 is_stmt 0 view .LVU4829
 11215 003a 6367     		str	r3, [r4, #116]
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccs0vIiH.s 			page 303


 348:Core/Src/SEGGER_RTT.c ****   for (i = 0; i < sizeof(_aInitStr) - 1; ++i) {
 11216              		.loc 1 348 3 is_stmt 1 view .LVU4830
 11217              		.syntax unified
 11218              	@ 348 "Core/Src/SEGGER_RTT.c" 1
 11219 003c BFF35F8F 		dmb
 11220              	
 11221              	@ 0 "" 2
 348:Core/Src/SEGGER_RTT.c ****   for (i = 0; i < sizeof(_aInitStr) - 1; ++i) {
 11222              		.loc 1 348 13 view .LVU4831
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 11223              		.loc 1 349 3 view .LVU4832
 11224              	.LVL1057:
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 11225              		.loc 1 349 17 view .LVU4833
 350:Core/Src/SEGGER_RTT.c ****   }
 11226              		.loc 1 350 5 view .LVU4834
 350:Core/Src/SEGGER_RTT.c ****   }
 11227              		.loc 1 350 16 is_stmt 0 view .LVU4835
 11228              		.thumb
 11229              		.syntax unified
 11230 0040 4520     		movs	r0, #69
 11231 0042 4722     		movs	r2, #71
 11232 0044 4FF0530C 		mov	ip, #83
 11233 0048 84F800C0 		strb	ip, [r4]
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 11234              		.loc 1 349 42 is_stmt 1 view .LVU4836
 11235              	.LVL1058:
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 11236              		.loc 1 349 17 view .LVU4837
 350:Core/Src/SEGGER_RTT.c ****   }
 11237              		.loc 1 350 5 view .LVU4838
 350:Core/Src/SEGGER_RTT.c ****   }
 11238              		.loc 1 350 16 is_stmt 0 view .LVU4839
 11239 004c 5221     		movs	r1, #82
 11240 004e 6070     		strb	r0, [r4, #1]
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 11241              		.loc 1 349 42 is_stmt 1 view .LVU4840
 11242              	.LVL1059:
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 11243              		.loc 1 349 17 view .LVU4841
 350:Core/Src/SEGGER_RTT.c ****   }
 11244              		.loc 1 350 5 view .LVU4842
 350:Core/Src/SEGGER_RTT.c ****   }
 11245              		.loc 1 350 16 is_stmt 0 view .LVU4843
 11246 0050 4FF0200C 		mov	ip, #32
 11247 0054 A270     		strb	r2, [r4, #2]
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 11248              		.loc 1 349 42 is_stmt 1 view .LVU4844
 11249              	.LVL1060:
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 11250              		.loc 1 349 17 view .LVU4845
 350:Core/Src/SEGGER_RTT.c ****   }
 11251              		.loc 1 350 5 view .LVU4846
 350:Core/Src/SEGGER_RTT.c ****   }
 11252              		.loc 1 350 16 is_stmt 0 view .LVU4847
 11253 0056 E270     		strb	r2, [r4, #3]
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccs0vIiH.s 			page 304


 11254              		.loc 1 349 42 is_stmt 1 view .LVU4848
 11255              	.LVL1061:
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 11256              		.loc 1 349 17 view .LVU4849
 350:Core/Src/SEGGER_RTT.c ****   }
 11257              		.loc 1 350 5 view .LVU4850
 350:Core/Src/SEGGER_RTT.c ****   }
 11258              		.loc 1 350 16 is_stmt 0 view .LVU4851
 11259 0058 5422     		movs	r2, #84
 11260 005a 2071     		strb	r0, [r4, #4]
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 11261              		.loc 1 349 42 is_stmt 1 view .LVU4852
 11262              	.LVL1062:
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 11263              		.loc 1 349 17 view .LVU4853
 350:Core/Src/SEGGER_RTT.c ****   }
 11264              		.loc 1 350 5 view .LVU4854
 350:Core/Src/SEGGER_RTT.c ****   }
 11265              		.loc 1 350 16 is_stmt 0 view .LVU4855
 11266 005c 6171     		strb	r1, [r4, #5]
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 11267              		.loc 1 349 42 is_stmt 1 view .LVU4856
 11268              	.LVL1063:
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 11269              		.loc 1 349 17 view .LVU4857
 350:Core/Src/SEGGER_RTT.c ****   }
 11270              		.loc 1 350 5 view .LVU4858
 350:Core/Src/SEGGER_RTT.c ****   }
 11271              		.loc 1 350 16 is_stmt 0 view .LVU4859
 11272 005e 84F806C0 		strb	ip, [r4, #6]
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 11273              		.loc 1 349 42 is_stmt 1 view .LVU4860
 11274              	.LVL1064:
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 11275              		.loc 1 349 17 view .LVU4861
 350:Core/Src/SEGGER_RTT.c ****   }
 11276              		.loc 1 350 5 view .LVU4862
 350:Core/Src/SEGGER_RTT.c ****   }
 11277              		.loc 1 350 16 is_stmt 0 view .LVU4863
 11278 0062 E171     		strb	r1, [r4, #7]
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 11279              		.loc 1 349 42 is_stmt 1 view .LVU4864
 11280              	.LVL1065:
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 11281              		.loc 1 349 17 view .LVU4865
 350:Core/Src/SEGGER_RTT.c ****   }
 11282              		.loc 1 350 5 view .LVU4866
 350:Core/Src/SEGGER_RTT.c ****   }
 11283              		.loc 1 350 16 is_stmt 0 view .LVU4867
 11284 0064 2272     		strb	r2, [r4, #8]
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 11285              		.loc 1 349 42 is_stmt 1 view .LVU4868
 11286              	.LVL1066:
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 11287              		.loc 1 349 17 view .LVU4869
 350:Core/Src/SEGGER_RTT.c ****   }
 11288              		.loc 1 350 5 view .LVU4870
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccs0vIiH.s 			page 305


 350:Core/Src/SEGGER_RTT.c ****   }
 11289              		.loc 1 350 16 is_stmt 0 view .LVU4871
 11290 0066 6272     		strb	r2, [r4, #9]
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 11291              		.loc 1 349 42 is_stmt 1 view .LVU4872
 11292              	.LVL1067:
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 11293              		.loc 1 349 17 view .LVU4873
 350:Core/Src/SEGGER_RTT.c ****   }
 11294              		.loc 1 350 5 view .LVU4874
 350:Core/Src/SEGGER_RTT.c ****   }
 11295              		.loc 1 350 16 is_stmt 0 view .LVU4875
 11296 0068 A372     		strb	r3, [r4, #10]
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 11297              		.loc 1 349 42 is_stmt 1 view .LVU4876
 11298              	.LVL1068:
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 11299              		.loc 1 349 17 view .LVU4877
 350:Core/Src/SEGGER_RTT.c ****   }
 11300              		.loc 1 350 5 view .LVU4878
 350:Core/Src/SEGGER_RTT.c ****   }
 11301              		.loc 1 350 16 is_stmt 0 view .LVU4879
 11302 006a E372     		strb	r3, [r4, #11]
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 11303              		.loc 1 349 42 is_stmt 1 view .LVU4880
 11304              	.LVL1069:
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 11305              		.loc 1 349 17 view .LVU4881
 350:Core/Src/SEGGER_RTT.c ****   }
 11306              		.loc 1 350 5 view .LVU4882
 350:Core/Src/SEGGER_RTT.c ****   }
 11307              		.loc 1 350 16 is_stmt 0 view .LVU4883
 11308 006c 2373     		strb	r3, [r4, #12]
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 11309              		.loc 1 349 42 is_stmt 1 view .LVU4884
 11310              	.LVL1070:
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 11311              		.loc 1 349 17 view .LVU4885
 350:Core/Src/SEGGER_RTT.c ****   }
 11312              		.loc 1 350 5 view .LVU4886
 350:Core/Src/SEGGER_RTT.c ****   }
 11313              		.loc 1 350 16 is_stmt 0 view .LVU4887
 11314 006e 6373     		strb	r3, [r4, #13]
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 11315              		.loc 1 349 42 is_stmt 1 view .LVU4888
 11316              	.LVL1071:
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 11317              		.loc 1 349 17 view .LVU4889
 350:Core/Src/SEGGER_RTT.c ****   }
 11318              		.loc 1 350 5 view .LVU4890
 350:Core/Src/SEGGER_RTT.c ****   }
 11319              		.loc 1 350 16 is_stmt 0 view .LVU4891
 11320 0070 A373     		strb	r3, [r4, #14]
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 11321              		.loc 1 349 42 is_stmt 1 view .LVU4892
 11322              	.LVL1072:
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccs0vIiH.s 			page 306


 11323              		.loc 1 349 17 view .LVU4893
 350:Core/Src/SEGGER_RTT.c ****   }
 11324              		.loc 1 350 5 view .LVU4894
 350:Core/Src/SEGGER_RTT.c ****   }
 11325              		.loc 1 350 16 is_stmt 0 view .LVU4895
 11326 0072 E373     		strb	r3, [r4, #15]
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 11327              		.loc 1 349 42 is_stmt 1 view .LVU4896
 11328              	.LVL1073:
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 11329              		.loc 1 349 17 view .LVU4897
 352:Core/Src/SEGGER_RTT.c **** }
 11330              		.loc 1 352 3 view .LVU4898
 11331              		.syntax unified
 11332              	@ 352 "Core/Src/SEGGER_RTT.c" 1
 11333 0074 BFF35F8F 		dmb
 11334              	
 11335              	@ 0 "" 2
 352:Core/Src/SEGGER_RTT.c **** }
 11336              		.loc 1 352 13 view .LVU4899
 11337              	.LVL1074:
 352:Core/Src/SEGGER_RTT.c **** }
 11338              		.loc 1 352 13 is_stmt 0 view .LVU4900
 11339              		.thumb
 11340              		.syntax unified
 11341              	.LBE565:
 11342              	.LBE566:
1901:Core/Src/SEGGER_RTT.c **** }
 11343              		.loc 1 1901 1 view .LVU4901
 11344 0078 10BD     		pop	{r4, pc}
 11345              	.L422:
 11346 007a 00BF     		.align	2
 11347              	.L421:
 11348 007c 00000000 		.word	.LANCHOR0
 11349 0080 00000000 		.word	.LC0
 11350 0084 00000000 		.word	.LANCHOR1
 11351 0088 00000000 		.word	.LANCHOR2
 11352              		.cfi_endproc
 11353              	.LFE31:
 11355              		.section	.text.SEGGER_RTT_SetTerminal,"ax",%progbits
 11356              		.align	1
 11357              		.p2align 2,,3
 11358              		.global	SEGGER_RTT_SetTerminal
 11359              		.syntax unified
 11360              		.thumb
 11361              		.thumb_func
 11363              	SEGGER_RTT_SetTerminal:
 11364              	.LVL1075:
 11365              	.LFB32:
1902:Core/Src/SEGGER_RTT.c **** 
1903:Core/Src/SEGGER_RTT.c **** /*********************************************************************
1904:Core/Src/SEGGER_RTT.c **** *
1905:Core/Src/SEGGER_RTT.c **** *       SEGGER_RTT_SetTerminal
1906:Core/Src/SEGGER_RTT.c **** *
1907:Core/Src/SEGGER_RTT.c **** *  Function description
1908:Core/Src/SEGGER_RTT.c **** *    Sets the terminal to be used for output on channel 0.
1909:Core/Src/SEGGER_RTT.c **** *
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccs0vIiH.s 			page 307


1910:Core/Src/SEGGER_RTT.c **** *  Parameters
1911:Core/Src/SEGGER_RTT.c **** *    TerminalId  Index of the terminal.
1912:Core/Src/SEGGER_RTT.c **** *
1913:Core/Src/SEGGER_RTT.c **** *  Return value
1914:Core/Src/SEGGER_RTT.c **** *    >= 0  O.K.
1915:Core/Src/SEGGER_RTT.c **** *     < 0  Error (e.g. if RTT is configured for non-blocking mode and there was no space in the buf
1916:Core/Src/SEGGER_RTT.c **** *
1917:Core/Src/SEGGER_RTT.c **** *  Notes
1918:Core/Src/SEGGER_RTT.c **** *    (1) Buffer 0 is always reserved for terminal I/O, so we can use index 0 here, fixed
1919:Core/Src/SEGGER_RTT.c **** */
1920:Core/Src/SEGGER_RTT.c **** int SEGGER_RTT_SetTerminal (unsigned char TerminalId) {
 11366              		.loc 1 1920 55 is_stmt 1 view -0
 11367              		.cfi_startproc
 11368              		@ args = 0, pretend = 0, frame = 8
 11369              		@ frame_needed = 0, uses_anonymous_args = 0
1921:Core/Src/SEGGER_RTT.c ****   unsigned char         ac[2];
 11370              		.loc 1 1921 3 view .LVU4903
1922:Core/Src/SEGGER_RTT.c ****   SEGGER_RTT_BUFFER_UP* pRing;
 11371              		.loc 1 1922 3 view .LVU4904
1923:Core/Src/SEGGER_RTT.c ****   unsigned Avail;
 11372              		.loc 1 1923 3 view .LVU4905
1924:Core/Src/SEGGER_RTT.c ****   int r;
 11373              		.loc 1 1924 3 view .LVU4906
 11374              	.LBB577:
1925:Core/Src/SEGGER_RTT.c **** 
1926:Core/Src/SEGGER_RTT.c ****   INIT();
 11375              		.loc 1 1926 3 view .LVU4907
 11376              		.loc 1 1926 3 view .LVU4908
 11377              		.loc 1 1926 3 view .LVU4909
 11378              		.loc 1 1926 3 view .LVU4910
 11379              	.LBE577:
1920:Core/Src/SEGGER_RTT.c ****   unsigned char         ac[2];
 11380              		.loc 1 1920 55 is_stmt 0 view .LVU4911
 11381 0000 2DE9F047 		push	{r4, r5, r6, r7, r8, r9, r10, lr}
 11382              		.cfi_def_cfa_offset 32
 11383              		.cfi_offset 4, -32
 11384              		.cfi_offset 5, -28
 11385              		.cfi_offset 6, -24
 11386              		.cfi_offset 7, -20
 11387              		.cfi_offset 8, -16
 11388              		.cfi_offset 9, -12
 11389              		.cfi_offset 10, -8
 11390              		.cfi_offset 14, -4
 11391              	.LBB580:
 11392              		.loc 1 1926 3 view .LVU4912
 11393 0004 624C     		ldr	r4, .L447
 11394 0006 2378     		ldrb	r3, [r4]	@ zero_extendqisi2
 11395              	.LBE580:
1920:Core/Src/SEGGER_RTT.c ****   unsigned char         ac[2];
 11396              		.loc 1 1920 55 view .LVU4913
 11397 0008 82B0     		sub	sp, sp, #8
 11398              		.cfi_def_cfa_offset 40
1920:Core/Src/SEGGER_RTT.c ****   unsigned char         ac[2];
 11399              		.loc 1 1920 55 view .LVU4914
 11400 000a 0546     		mov	r5, r0
 11401              	.LBB581:
 11402              		.loc 1 1926 3 view .LVU4915
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccs0vIiH.s 			page 308


 11403 000c 002B     		cmp	r3, #0
 11404 000e 38D0     		beq	.L443
 11405              	.LVL1076:
 11406              	.L424:
 11407              		.loc 1 1926 3 is_stmt 1 discriminator 3 view .LVU4916
 11408              	.LBE581:
 11409              		.loc 1 1926 9 discriminator 3 view .LVU4917
1927:Core/Src/SEGGER_RTT.c ****   r = 0;
 11410              		.loc 1 1927 3 discriminator 3 view .LVU4918
1928:Core/Src/SEGGER_RTT.c ****   ac[0] = 0xFFu;
 11411              		.loc 1 1928 3 discriminator 3 view .LVU4919
 11412              		.loc 1 1928 9 is_stmt 0 discriminator 3 view .LVU4920
 11413 0010 FF23     		movs	r3, #255
1929:Core/Src/SEGGER_RTT.c ****   if (TerminalId < sizeof(_aTerminalId)) { // We only support a certain number of channels
 11414              		.loc 1 1929 6 discriminator 3 view .LVU4921
 11415 0012 0F2D     		cmp	r5, #15
1928:Core/Src/SEGGER_RTT.c ****   ac[0] = 0xFFu;
 11416              		.loc 1 1928 9 discriminator 3 view .LVU4922
 11417 0014 8DF80430 		strb	r3, [sp, #4]
 11418              		.loc 1 1929 3 is_stmt 1 discriminator 3 view .LVU4923
 11419              		.loc 1 1929 6 is_stmt 0 discriminator 3 view .LVU4924
 11420 0018 00F2B680 		bhi	.L436
1930:Core/Src/SEGGER_RTT.c ****     ac[1] = _aTerminalId[TerminalId];
 11421              		.loc 1 1930 5 is_stmt 1 view .LVU4925
 11422              		.loc 1 1930 25 is_stmt 0 view .LVU4926
 11423 001c 5D4B     		ldr	r3, .L447+4
 11424              		.loc 1 1930 11 view .LVU4927
 11425 001e 5B5D     		ldrb	r3, [r3, r5]	@ zero_extendqisi2
 11426 0020 8DF80530 		strb	r3, [sp, #5]
1931:Core/Src/SEGGER_RTT.c ****     pRing = (SEGGER_RTT_BUFFER_UP*)((char*)&_SEGGER_RTT.aUp[0] + SEGGER_RTT_UNCACHED_OFF);  // Acce
 11427              		.loc 1 1931 5 is_stmt 1 view .LVU4928
 11428              	.LVL1077:
 11429              	.LBB582:
1932:Core/Src/SEGGER_RTT.c ****     SEGGER_RTT_LOCK();                     // Lock to make sure that no other task is writing into 
 11430              		.loc 1 1932 5 view .LVU4929
 11431              		.loc 1 1932 5 view .LVU4930
 11432              		.syntax unified
 11433              	@ 1932 "Core/Src/SEGGER_RTT.c" 1
 11434 0024 EFF31187 		mrs   r7, basepri  
 11435 0028 4FF02001 		mov   r1, #32       
 11436 002c 81F31188 		msr   basepri, r1  
 11437              		
 11438              	@ 0 "" 2
 11439              	.LVL1078:
 11440              		.loc 1 1932 22 view .LVU4931
1933:Core/Src/SEGGER_RTT.c ****     if ((pRing->Flags & SEGGER_RTT_MODE_MASK) == SEGGER_RTT_MODE_BLOCK_IF_FIFO_FULL) {
 11441              		.loc 1 1933 5 view .LVU4932
 11442              		.loc 1 1933 23 is_stmt 0 view .LVU4933
 11443              		.thumb
 11444              		.syntax unified
 11445 0030 E06A     		ldr	r0, [r4, #44]
 11446 0032 00F00309 		and	r9, r0, #3
 11447              		.loc 1 1933 8 view .LVU4934
 11448 0036 B9F1020F 		cmp	r9, #2
 11449 003a 6ED0     		beq	.L444
1934:Core/Src/SEGGER_RTT.c ****       _ActiveTerminal = TerminalId;
1935:Core/Src/SEGGER_RTT.c ****       _WriteBlocking(pRing, (const char*)ac, 2u);
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccs0vIiH.s 			page 309


1936:Core/Src/SEGGER_RTT.c ****     } else {                                                                            // Skipping
1937:Core/Src/SEGGER_RTT.c ****       Avail = _GetAvailWriteSpace(pRing);
 11450              		.loc 1 1937 7 is_stmt 1 view .LVU4935
 11451              	.LVL1079:
 11452              	.LBB583:
 11453              	.LBI583:
 526:Core/Src/SEGGER_RTT.c ****   unsigned RdOff;
 11454              		.loc 1 526 17 view .LVU4936
 11455              	.LBB584:
 527:Core/Src/SEGGER_RTT.c ****   unsigned WrOff;
 11456              		.loc 1 527 3 view .LVU4937
 528:Core/Src/SEGGER_RTT.c ****   unsigned r;
 11457              		.loc 1 528 3 view .LVU4938
 529:Core/Src/SEGGER_RTT.c ****   //
 11458              		.loc 1 529 3 view .LVU4939
 534:Core/Src/SEGGER_RTT.c ****   WrOff = pRing->WrOff;
 11459              		.loc 1 534 3 view .LVU4940
 534:Core/Src/SEGGER_RTT.c ****   WrOff = pRing->WrOff;
 11460              		.loc 1 534 9 is_stmt 0 view .LVU4941
 11461 003c A36A     		ldr	r3, [r4, #40]
 11462              	.LVL1080:
 535:Core/Src/SEGGER_RTT.c ****   if (RdOff <= WrOff) {
 11463              		.loc 1 535 3 is_stmt 1 view .LVU4942
 535:Core/Src/SEGGER_RTT.c ****   if (RdOff <= WrOff) {
 11464              		.loc 1 535 9 is_stmt 0 view .LVU4943
 11465 003e 666A     		ldr	r6, [r4, #36]
 11466              	.LVL1081:
 536:Core/Src/SEGGER_RTT.c ****     r = pRing->SizeOfBuffer - 1u - WrOff + RdOff;
 11467              		.loc 1 536 3 is_stmt 1 view .LVU4944
 536:Core/Src/SEGGER_RTT.c ****     r = pRing->SizeOfBuffer - 1u - WrOff + RdOff;
 11468              		.loc 1 536 6 is_stmt 0 view .LVU4945
 11469 0040 B342     		cmp	r3, r6
 537:Core/Src/SEGGER_RTT.c ****   } else {
 11470              		.loc 1 537 5 is_stmt 1 view .LVU4946
 537:Core/Src/SEGGER_RTT.c ****   } else {
 11471              		.loc 1 537 7 is_stmt 0 view .LVU4947
 11472 0042 9CBF     		itt	ls
 11473 0044 226A     		ldrls	r2, [r4, #32]
 11474 0046 9B18     		addls	r3, r3, r2
 11475              	.LVL1082:
 539:Core/Src/SEGGER_RTT.c ****   }
 11476              		.loc 1 539 5 is_stmt 1 view .LVU4948
 539:Core/Src/SEGGER_RTT.c ****   }
 11477              		.loc 1 539 7 is_stmt 0 view .LVU4949
 11478 0048 013B     		subs	r3, r3, #1
 11479 004a 9B1B     		subs	r3, r3, r6
 11480              	.LVL1083:
 541:Core/Src/SEGGER_RTT.c **** }
 11481              		.loc 1 541 3 is_stmt 1 view .LVU4950
 541:Core/Src/SEGGER_RTT.c **** }
 11482              		.loc 1 541 3 is_stmt 0 view .LVU4951
 11483              	.LBE584:
 11484              	.LBE583:
1938:Core/Src/SEGGER_RTT.c ****       if (Avail >= 2) {
 11485              		.loc 1 1938 7 is_stmt 1 view .LVU4952
 11486              		.loc 1 1938 10 is_stmt 0 view .LVU4953
 11487 004c 012B     		cmp	r3, #1
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccs0vIiH.s 			page 310


 11488 004e 06D8     		bhi	.L445
1939:Core/Src/SEGGER_RTT.c ****         _ActiveTerminal = TerminalId;    // Only change active terminal in case of success
1940:Core/Src/SEGGER_RTT.c ****         _WriteNoCheck(pRing, (const char*)ac, 2u);
1941:Core/Src/SEGGER_RTT.c ****       } else {
1942:Core/Src/SEGGER_RTT.c ****         r = -1;
 11489              		.loc 1 1942 11 view .LVU4954
 11490 0050 4FF0FF30 		mov	r0, #-1
 11491              	.LVL1084:
 11492              	.L431:
1943:Core/Src/SEGGER_RTT.c ****       }
1944:Core/Src/SEGGER_RTT.c ****     }
1945:Core/Src/SEGGER_RTT.c ****     SEGGER_RTT_UNLOCK();
 11493              		.loc 1 1945 5 is_stmt 1 view .LVU4955
 11494              		.syntax unified
 11495              	@ 1945 "Core/Src/SEGGER_RTT.c" 1
 11496 0054 87F31188 		msr   basepri, r7  
 11497              		
 11498              	@ 0 "" 2
 11499              		.thumb
 11500              		.syntax unified
 11501              	.LBE582:
 11502              		.loc 1 1945 24 view .LVU4956
 11503              	.LVL1085:
 11504              	.L423:
1946:Core/Src/SEGGER_RTT.c ****   } else {
1947:Core/Src/SEGGER_RTT.c ****     r = -1;
1948:Core/Src/SEGGER_RTT.c ****   }
1949:Core/Src/SEGGER_RTT.c ****   return r;
1950:Core/Src/SEGGER_RTT.c **** }
 11505              		.loc 1 1950 1 is_stmt 0 view .LVU4957
 11506 0058 02B0     		add	sp, sp, #8
 11507              		.cfi_remember_state
 11508              		.cfi_def_cfa_offset 32
 11509              		@ sp needed
 11510 005a BDE8F087 		pop	{r4, r5, r6, r7, r8, r9, r10, pc}
 11511              	.LVL1086:
 11512              	.L445:
 11513              		.cfi_restore_state
 11514              	.LBB603:
1939:Core/Src/SEGGER_RTT.c ****         _WriteNoCheck(pRing, (const char*)ac, 2u);
 11515              		.loc 1 1939 9 is_stmt 1 view .LVU4958
1939:Core/Src/SEGGER_RTT.c ****         _WriteNoCheck(pRing, (const char*)ac, 2u);
 11516              		.loc 1 1939 25 is_stmt 0 view .LVU4959
 11517 005e 4E4B     		ldr	r3, .L447+8
 11518              	.LVL1087:
 11519              	.LBB587:
 11520              	.LBB588:
 443:Core/Src/SEGGER_RTT.c ****   if (Rem > NumBytes) {
 11521              		.loc 1 443 14 view .LVU4960
 11522 0060 D4F82080 		ldr	r8, [r4, #32]
 11523              	.LBE588:
 11524              	.LBE587:
1939:Core/Src/SEGGER_RTT.c ****         _WriteNoCheck(pRing, (const char*)ac, 2u);
 11525              		.loc 1 1939 25 view .LVU4961
 11526 0064 1D70     		strb	r5, [r3]
1940:Core/Src/SEGGER_RTT.c ****       } else {
 11527              		.loc 1 1940 9 is_stmt 1 view .LVU4962
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccs0vIiH.s 			page 311


 11528              	.LVL1088:
 11529              	.LBB593:
 11530              	.LBI587:
 436:Core/Src/SEGGER_RTT.c ****   unsigned NumBytesAtOnce;
 11531              		.loc 1 436 13 view .LVU4963
 11532              	.LBB589:
 437:Core/Src/SEGGER_RTT.c ****   unsigned WrOff;
 11533              		.loc 1 437 3 view .LVU4964
 438:Core/Src/SEGGER_RTT.c ****   unsigned Rem;
 11534              		.loc 1 438 3 view .LVU4965
 439:Core/Src/SEGGER_RTT.c ****   volatile char* pDst;
 11535              		.loc 1 439 3 view .LVU4966
 440:Core/Src/SEGGER_RTT.c **** 
 11536              		.loc 1 440 3 view .LVU4967
 442:Core/Src/SEGGER_RTT.c ****   Rem = pRing->SizeOfBuffer - WrOff;
 11537              		.loc 1 442 3 view .LVU4968
 443:Core/Src/SEGGER_RTT.c ****   if (Rem > NumBytes) {
 11538              		.loc 1 443 3 view .LVU4969
 443:Core/Src/SEGGER_RTT.c ****   if (Rem > NumBytes) {
 11539              		.loc 1 443 7 is_stmt 0 view .LVU4970
 11540 0066 A8EB0605 		sub	r5, r8, r6
 11541              	.LVL1089:
 444:Core/Src/SEGGER_RTT.c ****     //
 11542              		.loc 1 444 3 is_stmt 1 view .LVU4971
 444:Core/Src/SEGGER_RTT.c ****     //
 11543              		.loc 1 444 6 is_stmt 0 view .LVU4972
 11544 006a 022D     		cmp	r5, #2
 11545 006c 41D9     		bls	.L435
 448:Core/Src/SEGGER_RTT.c **** #if SEGGER_RTT_MEMCPY_USE_BYTELOOP
 11546              		.loc 1 448 5 is_stmt 1 view .LVU4973
 11547              	.LVL1090:
 457:Core/Src/SEGGER_RTT.c ****     RTT__DMB();                     // Force data write to be complete before writing the <WrOff>, 
 11548              		.loc 1 457 5 view .LVU4974
 11549 006e E369     		ldr	r3, [r4, #28]
 11550 0070 BDF80420 		ldrh	r2, [sp, #4]
 11551              	.LVL1091:
 457:Core/Src/SEGGER_RTT.c ****     RTT__DMB();                     // Force data write to be complete before writing the <WrOff>, 
 11552              		.loc 1 457 5 is_stmt 0 view .LVU4975
 11553 0074 9A53     		strh	r2, [r3, r6]	@ unaligned
 11554              	.LVL1092:
 458:Core/Src/SEGGER_RTT.c ****     pRing->WrOff = WrOff + NumBytes;
 11555              		.loc 1 458 5 is_stmt 1 view .LVU4976
 11556              		.syntax unified
 11557              	@ 458 "Core/Src/SEGGER_RTT.c" 1
 11558 0076 BFF35F8F 		dmb
 11559              	
 11560              	@ 0 "" 2
 458:Core/Src/SEGGER_RTT.c ****     pRing->WrOff = WrOff + NumBytes;
 11561              		.loc 1 458 15 view .LVU4977
 459:Core/Src/SEGGER_RTT.c **** #endif
 11562              		.loc 1 459 5 view .LVU4978
 459:Core/Src/SEGGER_RTT.c **** #endif
 11563              		.loc 1 459 26 is_stmt 0 view .LVU4979
 11564              		.thumb
 11565              		.syntax unified
 11566 007a 0236     		adds	r6, r6, #2
 11567              	.LVL1093:
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccs0vIiH.s 			page 312


 459:Core/Src/SEGGER_RTT.c **** #endif
 11568              		.loc 1 459 18 view .LVU4980
 11569 007c 6662     		str	r6, [r4, #36]
 11570              	.LVL1094:
 11571              	.L442:
 459:Core/Src/SEGGER_RTT.c **** #endif
 11572              		.loc 1 459 18 view .LVU4981
 11573              	.LBE589:
 11574              	.LBE593:
 11575              	.LBE603:
1927:Core/Src/SEGGER_RTT.c ****   ac[0] = 0xFFu;
 11576              		.loc 1 1927 5 view .LVU4982
 11577 007e 0020     		movs	r0, #0
 11578              	.LBB604:
 11579              	.LBB594:
 11580              	.LBB590:
 11581 0080 E8E7     		b	.L431
 11582              	.LVL1095:
 11583              	.L443:
1927:Core/Src/SEGGER_RTT.c ****   ac[0] = 0xFFu;
 11584              		.loc 1 1927 5 view .LVU4983
 11585 0082 03F0FF06 		and	r6, r3, #255
 11586              	.LBE590:
 11587              	.LBE594:
 11588              	.LBE604:
 11589              	.LBB605:
1926:Core/Src/SEGGER_RTT.c ****   r = 0;
 11590              		.loc 1 1926 3 is_stmt 1 view .LVU4984
 11591              	.LBB578:
 11592              	.LBI578:
 314:Core/Src/SEGGER_RTT.c ****   volatile SEGGER_RTT_CB* p;   // Volatile to make sure that compiler cannot change the order of ac
 11593              		.loc 1 314 13 view .LVU4985
 11594              	.LBB579:
 315:Core/Src/SEGGER_RTT.c ****   static const char _aInitStr[] = "\0\0\0\0\0\0TTR REGGES";  // Init complete ID string to make sur
 11595              		.loc 1 315 3 view .LVU4986
 316:Core/Src/SEGGER_RTT.c ****   unsigned i;
 11596              		.loc 1 316 3 view .LVU4987
 317:Core/Src/SEGGER_RTT.c ****   //
 11597              		.loc 1 317 3 view .LVU4988
 321:Core/Src/SEGGER_RTT.c ****   memset((SEGGER_RTT_CB*)p, 0, sizeof(_SEGGER_RTT));         // Make sure that the RTT CB is always
 11598              		.loc 1 321 3 view .LVU4989
 11599              	.LVL1096:
 322:Core/Src/SEGGER_RTT.c ****   p->MaxNumUpBuffers    = SEGGER_RTT_MAX_NUM_UP_BUFFERS;
 11600              		.loc 1 322 3 view .LVU4990
 11601 0086 7822     		movs	r2, #120
 11602 0088 3146     		mov	r1, r6
 11603 008a 04F13000 		add	r0, r4, #48
 11604              	.LVL1097:
 322:Core/Src/SEGGER_RTT.c ****   p->MaxNumUpBuffers    = SEGGER_RTT_MAX_NUM_UP_BUFFERS;
 11605              		.loc 1 322 3 is_stmt 0 view .LVU4991
 11606 008e FFF7FEFF 		bl	memset
 11607              	.LVL1098:
 323:Core/Src/SEGGER_RTT.c ****   p->MaxNumDownBuffers  = SEGGER_RTT_MAX_NUM_DOWN_BUFFERS;
 11608              		.loc 1 323 3 is_stmt 1 view .LVU4992
 323:Core/Src/SEGGER_RTT.c ****   p->MaxNumDownBuffers  = SEGGER_RTT_MAX_NUM_DOWN_BUFFERS;
 11609              		.loc 1 323 25 is_stmt 0 view .LVU4993
 11610 0092 0322     		movs	r2, #3
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccs0vIiH.s 			page 313


 11611 0094 2261     		str	r2, [r4, #16]
 324:Core/Src/SEGGER_RTT.c ****   //
 11612              		.loc 1 324 3 is_stmt 1 view .LVU4994
 328:Core/Src/SEGGER_RTT.c ****   p->aUp[0].pBuffer       = _acUpBuffer;
 11613              		.loc 1 328 27 is_stmt 0 view .LVU4995
 11614 0096 414B     		ldr	r3, .L447+12
 324:Core/Src/SEGGER_RTT.c ****   //
 11615              		.loc 1 324 25 view .LVU4996
 11616 0098 6261     		str	r2, [r4, #20]
 328:Core/Src/SEGGER_RTT.c ****   p->aUp[0].pBuffer       = _acUpBuffer;
 11617              		.loc 1 328 3 is_stmt 1 view .LVU4997
 329:Core/Src/SEGGER_RTT.c ****   p->aUp[0].SizeOfBuffer  = BUFFER_SIZE_UP;
 11618              		.loc 1 329 27 is_stmt 0 view .LVU4998
 11619 009a 414A     		ldr	r2, .L447+16
 328:Core/Src/SEGGER_RTT.c ****   p->aUp[0].pBuffer       = _acUpBuffer;
 11620              		.loc 1 328 27 view .LVU4999
 11621 009c A361     		str	r3, [r4, #24]
 329:Core/Src/SEGGER_RTT.c ****   p->aUp[0].SizeOfBuffer  = BUFFER_SIZE_UP;
 11622              		.loc 1 329 3 is_stmt 1 view .LVU5000
 329:Core/Src/SEGGER_RTT.c ****   p->aUp[0].SizeOfBuffer  = BUFFER_SIZE_UP;
 11623              		.loc 1 329 27 is_stmt 0 view .LVU5001
 11624 009e E261     		str	r2, [r4, #28]
 330:Core/Src/SEGGER_RTT.c ****   p->aUp[0].RdOff         = 0u;
 11625              		.loc 1 330 3 is_stmt 1 view .LVU5002
 330:Core/Src/SEGGER_RTT.c ****   p->aUp[0].RdOff         = 0u;
 11626              		.loc 1 330 27 is_stmt 0 view .LVU5003
 11627 00a0 4FF48062 		mov	r2, #1024
 11628 00a4 2262     		str	r2, [r4, #32]
 331:Core/Src/SEGGER_RTT.c ****   p->aUp[0].WrOff         = 0u;
 11629              		.loc 1 331 3 is_stmt 1 view .LVU5004
 331:Core/Src/SEGGER_RTT.c ****   p->aUp[0].WrOff         = 0u;
 11630              		.loc 1 331 27 is_stmt 0 view .LVU5005
 11631 00a6 A662     		str	r6, [r4, #40]
 332:Core/Src/SEGGER_RTT.c ****   p->aUp[0].Flags         = SEGGER_RTT_MODE_DEFAULT;
 11632              		.loc 1 332 3 is_stmt 1 view .LVU5006
 338:Core/Src/SEGGER_RTT.c ****   p->aDown[0].SizeOfBuffer  = BUFFER_SIZE_DOWN;
 11633              		.loc 1 338 29 is_stmt 0 view .LVU5007
 11634 00a8 3E4A     		ldr	r2, .L447+20
 332:Core/Src/SEGGER_RTT.c ****   p->aUp[0].Flags         = SEGGER_RTT_MODE_DEFAULT;
 11635              		.loc 1 332 27 view .LVU5008
 11636 00aa 6662     		str	r6, [r4, #36]
 333:Core/Src/SEGGER_RTT.c ****   //
 11637              		.loc 1 333 3 is_stmt 1 view .LVU5009
 333:Core/Src/SEGGER_RTT.c ****   //
 11638              		.loc 1 333 27 is_stmt 0 view .LVU5010
 11639 00ac E662     		str	r6, [r4, #44]
 337:Core/Src/SEGGER_RTT.c ****   p->aDown[0].pBuffer       = _acDownBuffer;
 11640              		.loc 1 337 3 is_stmt 1 view .LVU5011
 337:Core/Src/SEGGER_RTT.c ****   p->aDown[0].pBuffer       = _acDownBuffer;
 11641              		.loc 1 337 29 is_stmt 0 view .LVU5012
 11642 00ae 2366     		str	r3, [r4, #96]
 338:Core/Src/SEGGER_RTT.c ****   p->aDown[0].SizeOfBuffer  = BUFFER_SIZE_DOWN;
 11643              		.loc 1 338 3 is_stmt 1 view .LVU5013
 339:Core/Src/SEGGER_RTT.c ****   p->aDown[0].RdOff         = 0u;
 11644              		.loc 1 339 29 is_stmt 0 view .LVU5014
 11645 00b0 1023     		movs	r3, #16
 338:Core/Src/SEGGER_RTT.c ****   p->aDown[0].SizeOfBuffer  = BUFFER_SIZE_DOWN;
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccs0vIiH.s 			page 314


 11646              		.loc 1 338 29 view .LVU5015
 11647 00b2 6266     		str	r2, [r4, #100]
 339:Core/Src/SEGGER_RTT.c ****   p->aDown[0].RdOff         = 0u;
 11648              		.loc 1 339 3 is_stmt 1 view .LVU5016
 339:Core/Src/SEGGER_RTT.c ****   p->aDown[0].RdOff         = 0u;
 11649              		.loc 1 339 29 is_stmt 0 view .LVU5017
 11650 00b4 A366     		str	r3, [r4, #104]
 340:Core/Src/SEGGER_RTT.c ****   p->aDown[0].WrOff         = 0u;
 11651              		.loc 1 340 3 is_stmt 1 view .LVU5018
 340:Core/Src/SEGGER_RTT.c ****   p->aDown[0].WrOff         = 0u;
 11652              		.loc 1 340 29 is_stmt 0 view .LVU5019
 11653 00b6 2667     		str	r6, [r4, #112]
 341:Core/Src/SEGGER_RTT.c ****   p->aDown[0].Flags         = SEGGER_RTT_MODE_DEFAULT;
 11654              		.loc 1 341 3 is_stmt 1 view .LVU5020
 341:Core/Src/SEGGER_RTT.c ****   p->aDown[0].Flags         = SEGGER_RTT_MODE_DEFAULT;
 11655              		.loc 1 341 29 is_stmt 0 view .LVU5021
 11656 00b8 E666     		str	r6, [r4, #108]
 342:Core/Src/SEGGER_RTT.c ****   //
 11657              		.loc 1 342 3 is_stmt 1 view .LVU5022
 342:Core/Src/SEGGER_RTT.c ****   //
 11658              		.loc 1 342 29 is_stmt 0 view .LVU5023
 11659 00ba 6667     		str	r6, [r4, #116]
 348:Core/Src/SEGGER_RTT.c ****   for (i = 0; i < sizeof(_aInitStr) - 1; ++i) {
 11660              		.loc 1 348 3 is_stmt 1 view .LVU5024
 11661              		.syntax unified
 11662              	@ 348 "Core/Src/SEGGER_RTT.c" 1
 11663 00bc BFF35F8F 		dmb
 11664              	
 11665              	@ 0 "" 2
 348:Core/Src/SEGGER_RTT.c ****   for (i = 0; i < sizeof(_aInitStr) - 1; ++i) {
 11666              		.loc 1 348 13 view .LVU5025
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 11667              		.loc 1 349 3 view .LVU5026
 11668              	.LVL1099:
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 11669              		.loc 1 349 17 view .LVU5027
 350:Core/Src/SEGGER_RTT.c ****   }
 11670              		.loc 1 350 5 view .LVU5028
 350:Core/Src/SEGGER_RTT.c ****   }
 11671              		.loc 1 350 16 is_stmt 0 view .LVU5029
 11672              		.thumb
 11673              		.syntax unified
 11674 00c0 4523     		movs	r3, #69
 11675 00c2 4722     		movs	r2, #71
 11676 00c4 5321     		movs	r1, #83
 11677 00c6 2170     		strb	r1, [r4]
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 11678              		.loc 1 349 42 is_stmt 1 view .LVU5030
 11679              	.LVL1100:
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 11680              		.loc 1 349 17 view .LVU5031
 350:Core/Src/SEGGER_RTT.c ****   }
 11681              		.loc 1 350 5 view .LVU5032
 350:Core/Src/SEGGER_RTT.c ****   }
 11682              		.loc 1 350 16 is_stmt 0 view .LVU5033
 11683 00c8 6370     		strb	r3, [r4, #1]
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccs0vIiH.s 			page 315


 11684              		.loc 1 349 42 is_stmt 1 view .LVU5034
 11685              	.LVL1101:
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 11686              		.loc 1 349 17 view .LVU5035
 350:Core/Src/SEGGER_RTT.c ****   }
 11687              		.loc 1 350 5 view .LVU5036
 350:Core/Src/SEGGER_RTT.c ****   }
 11688              		.loc 1 350 16 is_stmt 0 view .LVU5037
 11689 00ca 2021     		movs	r1, #32
 11690 00cc A270     		strb	r2, [r4, #2]
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 11691              		.loc 1 349 42 is_stmt 1 view .LVU5038
 11692              	.LVL1102:
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 11693              		.loc 1 349 17 view .LVU5039
 350:Core/Src/SEGGER_RTT.c ****   }
 11694              		.loc 1 350 5 view .LVU5040
 350:Core/Src/SEGGER_RTT.c ****   }
 11695              		.loc 1 350 16 is_stmt 0 view .LVU5041
 11696 00ce E270     		strb	r2, [r4, #3]
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 11697              		.loc 1 349 42 is_stmt 1 view .LVU5042
 11698              	.LVL1103:
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 11699              		.loc 1 349 17 view .LVU5043
 350:Core/Src/SEGGER_RTT.c ****   }
 11700              		.loc 1 350 5 view .LVU5044
 350:Core/Src/SEGGER_RTT.c ****   }
 11701              		.loc 1 350 16 is_stmt 0 view .LVU5045
 11702 00d0 2371     		strb	r3, [r4, #4]
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 11703              		.loc 1 349 42 is_stmt 1 view .LVU5046
 11704              	.LVL1104:
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 11705              		.loc 1 349 17 view .LVU5047
 350:Core/Src/SEGGER_RTT.c ****   }
 11706              		.loc 1 350 5 view .LVU5048
 350:Core/Src/SEGGER_RTT.c ****   }
 11707              		.loc 1 350 16 is_stmt 0 view .LVU5049
 11708 00d2 5222     		movs	r2, #82
 11709 00d4 5423     		movs	r3, #84
 11710 00d6 6271     		strb	r2, [r4, #5]
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 11711              		.loc 1 349 42 is_stmt 1 view .LVU5050
 11712              	.LVL1105:
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 11713              		.loc 1 349 17 view .LVU5051
 350:Core/Src/SEGGER_RTT.c ****   }
 11714              		.loc 1 350 5 view .LVU5052
 350:Core/Src/SEGGER_RTT.c ****   }
 11715              		.loc 1 350 16 is_stmt 0 view .LVU5053
 11716 00d8 A171     		strb	r1, [r4, #6]
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 11717              		.loc 1 349 42 is_stmt 1 view .LVU5054
 11718              	.LVL1106:
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 11719              		.loc 1 349 17 view .LVU5055
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccs0vIiH.s 			page 316


 350:Core/Src/SEGGER_RTT.c ****   }
 11720              		.loc 1 350 5 view .LVU5056
 350:Core/Src/SEGGER_RTT.c ****   }
 11721              		.loc 1 350 16 is_stmt 0 view .LVU5057
 11722 00da E271     		strb	r2, [r4, #7]
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 11723              		.loc 1 349 42 is_stmt 1 view .LVU5058
 11724              	.LVL1107:
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 11725              		.loc 1 349 17 view .LVU5059
 350:Core/Src/SEGGER_RTT.c ****   }
 11726              		.loc 1 350 5 view .LVU5060
 350:Core/Src/SEGGER_RTT.c ****   }
 11727              		.loc 1 350 16 is_stmt 0 view .LVU5061
 11728 00dc 2372     		strb	r3, [r4, #8]
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 11729              		.loc 1 349 42 is_stmt 1 view .LVU5062
 11730              	.LVL1108:
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 11731              		.loc 1 349 17 view .LVU5063
 350:Core/Src/SEGGER_RTT.c ****   }
 11732              		.loc 1 350 5 view .LVU5064
 350:Core/Src/SEGGER_RTT.c ****   }
 11733              		.loc 1 350 16 is_stmt 0 view .LVU5065
 11734 00de 6372     		strb	r3, [r4, #9]
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 11735              		.loc 1 349 42 is_stmt 1 view .LVU5066
 11736              	.LVL1109:
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 11737              		.loc 1 349 17 view .LVU5067
 350:Core/Src/SEGGER_RTT.c ****   }
 11738              		.loc 1 350 5 view .LVU5068
 350:Core/Src/SEGGER_RTT.c ****   }
 11739              		.loc 1 350 16 is_stmt 0 view .LVU5069
 11740 00e0 A672     		strb	r6, [r4, #10]
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 11741              		.loc 1 349 42 is_stmt 1 view .LVU5070
 11742              	.LVL1110:
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 11743              		.loc 1 349 17 view .LVU5071
 350:Core/Src/SEGGER_RTT.c ****   }
 11744              		.loc 1 350 5 view .LVU5072
 350:Core/Src/SEGGER_RTT.c ****   }
 11745              		.loc 1 350 16 is_stmt 0 view .LVU5073
 11746 00e2 E672     		strb	r6, [r4, #11]
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 11747              		.loc 1 349 42 is_stmt 1 view .LVU5074
 11748              	.LVL1111:
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 11749              		.loc 1 349 17 view .LVU5075
 350:Core/Src/SEGGER_RTT.c ****   }
 11750              		.loc 1 350 5 view .LVU5076
 350:Core/Src/SEGGER_RTT.c ****   }
 11751              		.loc 1 350 16 is_stmt 0 view .LVU5077
 11752 00e4 2673     		strb	r6, [r4, #12]
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 11753              		.loc 1 349 42 is_stmt 1 view .LVU5078
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccs0vIiH.s 			page 317


 11754              	.LVL1112:
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 11755              		.loc 1 349 17 view .LVU5079
 350:Core/Src/SEGGER_RTT.c ****   }
 11756              		.loc 1 350 5 view .LVU5080
 350:Core/Src/SEGGER_RTT.c ****   }
 11757              		.loc 1 350 16 is_stmt 0 view .LVU5081
 11758 00e6 6673     		strb	r6, [r4, #13]
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 11759              		.loc 1 349 42 is_stmt 1 view .LVU5082
 11760              	.LVL1113:
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 11761              		.loc 1 349 17 view .LVU5083
 350:Core/Src/SEGGER_RTT.c ****   }
 11762              		.loc 1 350 5 view .LVU5084
 350:Core/Src/SEGGER_RTT.c ****   }
 11763              		.loc 1 350 16 is_stmt 0 view .LVU5085
 11764 00e8 A673     		strb	r6, [r4, #14]
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 11765              		.loc 1 349 42 is_stmt 1 view .LVU5086
 11766              	.LVL1114:
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 11767              		.loc 1 349 17 view .LVU5087
 350:Core/Src/SEGGER_RTT.c ****   }
 11768              		.loc 1 350 5 view .LVU5088
 350:Core/Src/SEGGER_RTT.c ****   }
 11769              		.loc 1 350 16 is_stmt 0 view .LVU5089
 11770 00ea E673     		strb	r6, [r4, #15]
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 11771              		.loc 1 349 42 is_stmt 1 view .LVU5090
 11772              	.LVL1115:
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 11773              		.loc 1 349 17 view .LVU5091
 352:Core/Src/SEGGER_RTT.c **** }
 11774              		.loc 1 352 3 view .LVU5092
 11775              		.syntax unified
 11776              	@ 352 "Core/Src/SEGGER_RTT.c" 1
 11777 00ec BFF35F8F 		dmb
 11778              	
 11779              	@ 0 "" 2
 352:Core/Src/SEGGER_RTT.c **** }
 11780              		.loc 1 352 13 view .LVU5093
 353:Core/Src/SEGGER_RTT.c **** 
 11781              		.loc 1 353 1 is_stmt 0 view .LVU5094
 11782              		.thumb
 11783              		.syntax unified
 11784 00f0 8EE7     		b	.L424
 11785              	.LVL1116:
 11786              	.L435:
 353:Core/Src/SEGGER_RTT.c **** 
 11787              		.loc 1 353 1 view .LVU5095
 11788              	.LBE579:
 11789              	.LBE578:
 11790              	.LBE605:
 11791              	.LBB606:
 11792              	.LBB595:
 11793              	.LBB591:
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccs0vIiH.s 			page 318


 479:Core/Src/SEGGER_RTT.c ****     pDst = (pRing->pBuffer + WrOff) + SEGGER_RTT_UNCACHED_OFF;
 11794              		.loc 1 479 5 is_stmt 1 view .LVU5096
 480:Core/Src/SEGGER_RTT.c ****     SEGGER_RTT_MEMCPY((void*)pDst, pData, NumBytesAtOnce);
 11795              		.loc 1 480 5 view .LVU5097
 481:Core/Src/SEGGER_RTT.c ****     NumBytesAtOnce = NumBytes - Rem;
 11796              		.loc 1 481 5 view .LVU5098
 480:Core/Src/SEGGER_RTT.c ****     SEGGER_RTT_MEMCPY((void*)pDst, pData, NumBytesAtOnce);
 11797              		.loc 1 480 10 is_stmt 0 view .LVU5099
 11798 00f2 E069     		ldr	r0, [r4, #28]
 481:Core/Src/SEGGER_RTT.c ****     NumBytesAtOnce = NumBytes - Rem;
 11799              		.loc 1 481 5 view .LVU5100
 11800 00f4 2A46     		mov	r2, r5
 11801              	.LVL1117:
 481:Core/Src/SEGGER_RTT.c ****     NumBytesAtOnce = NumBytes - Rem;
 11802              		.loc 1 481 5 view .LVU5101
 11803 00f6 01A9     		add	r1, sp, #4
 11804              	.LVL1118:
 481:Core/Src/SEGGER_RTT.c ****     NumBytesAtOnce = NumBytes - Rem;
 11805              		.loc 1 481 5 view .LVU5102
 11806 00f8 3044     		add	r0, r0, r6
 11807              	.LVL1119:
 482:Core/Src/SEGGER_RTT.c ****     pDst = pRing->pBuffer + SEGGER_RTT_UNCACHED_OFF;
 11808              		.loc 1 482 20 view .LVU5103
 11809 00fa 0236     		adds	r6, r6, #2
 11810              	.LVL1120:
 481:Core/Src/SEGGER_RTT.c ****     NumBytesAtOnce = NumBytes - Rem;
 11811              		.loc 1 481 5 view .LVU5104
 11812 00fc FFF7FEFF 		bl	memcpy
 11813              	.LVL1121:
 482:Core/Src/SEGGER_RTT.c ****     pDst = pRing->pBuffer + SEGGER_RTT_UNCACHED_OFF;
 11814              		.loc 1 482 5 is_stmt 1 view .LVU5105
 482:Core/Src/SEGGER_RTT.c ****     pDst = pRing->pBuffer + SEGGER_RTT_UNCACHED_OFF;
 11815              		.loc 1 482 20 is_stmt 0 view .LVU5106
 11816 0100 A6EB0806 		sub	r6, r6, r8
 11817              	.LVL1122:
 483:Core/Src/SEGGER_RTT.c ****     SEGGER_RTT_MEMCPY((void*)pDst, pData + Rem, NumBytesAtOnce);
 11818              		.loc 1 483 5 is_stmt 1 view .LVU5107
 484:Core/Src/SEGGER_RTT.c ****     RTT__DMB();                     // Force data write to be complete before writing the <WrOff>, 
 11819              		.loc 1 484 5 view .LVU5108
 11820 0104 01AB     		add	r3, sp, #4
 11821              	.LVL1123:
 484:Core/Src/SEGGER_RTT.c ****     RTT__DMB();                     // Force data write to be complete before writing the <WrOff>, 
 11822              		.loc 1 484 5 is_stmt 0 view .LVU5109
 11823 0106 E069     		ldr	r0, [r4, #28]
 11824 0108 5919     		adds	r1, r3, r5
 11825 010a 3246     		mov	r2, r6
 11826 010c FFF7FEFF 		bl	memcpy
 11827              	.LVL1124:
 485:Core/Src/SEGGER_RTT.c ****     pRing->WrOff = NumBytesAtOnce;
 11828              		.loc 1 485 5 is_stmt 1 view .LVU5110
 11829              		.syntax unified
 11830              	@ 485 "Core/Src/SEGGER_RTT.c" 1
 11831 0110 BFF35F8F 		dmb
 11832              	
 11833              	@ 0 "" 2
 485:Core/Src/SEGGER_RTT.c ****     pRing->WrOff = NumBytesAtOnce;
 11834              		.loc 1 485 15 view .LVU5111
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccs0vIiH.s 			page 319


 486:Core/Src/SEGGER_RTT.c **** #endif
 11835              		.loc 1 486 5 view .LVU5112
 11836              		.thumb
 11837              		.syntax unified
 11838              	.LBE591:
 11839              	.LBE595:
 11840              	.LBE606:
1927:Core/Src/SEGGER_RTT.c ****   ac[0] = 0xFFu;
 11841              		.loc 1 1927 5 is_stmt 0 view .LVU5113
 11842 0114 0020     		movs	r0, #0
 11843              	.LBB607:
 11844              	.LBB596:
 11845              	.LBB592:
 486:Core/Src/SEGGER_RTT.c **** #endif
 11846              		.loc 1 486 18 view .LVU5114
 11847 0116 6662     		str	r6, [r4, #36]
 11848 0118 9CE7     		b	.L431
 11849              	.LVL1125:
 11850              	.L444:
 486:Core/Src/SEGGER_RTT.c **** #endif
 11851              		.loc 1 486 18 view .LVU5115
 11852              	.LBE592:
 11853              	.LBE596:
1934:Core/Src/SEGGER_RTT.c ****       _WriteBlocking(pRing, (const char*)ac, 2u);
 11854              		.loc 1 1934 7 is_stmt 1 view .LVU5116
1934:Core/Src/SEGGER_RTT.c ****       _WriteBlocking(pRing, (const char*)ac, 2u);
 11855              		.loc 1 1934 23 is_stmt 0 view .LVU5117
 11856 011a 1F4B     		ldr	r3, .L447+8
 11857              	.LBB597:
 11858              	.LBB585:
 537:Core/Src/SEGGER_RTT.c ****   } else {
 11859              		.loc 1 537 14 view .LVU5118
 11860 011c D4E90816 		ldrd	r1, r6, [r4, #32]
 11861              	.LBE585:
 11862              	.LBE597:
1934:Core/Src/SEGGER_RTT.c ****       _WriteBlocking(pRing, (const char*)ac, 2u);
 11863              		.loc 1 1934 23 view .LVU5119
 11864 0120 1D70     		strb	r5, [r3]
1935:Core/Src/SEGGER_RTT.c ****     } else {                                                                            // Skipping
 11865              		.loc 1 1935 7 is_stmt 1 view .LVU5120
 11866              	.LVL1126:
 11867              	.LBB598:
 11868              	.LBI598:
 374:Core/Src/SEGGER_RTT.c ****   unsigned NumBytesToWrite;
 11869              		.loc 1 374 17 view .LVU5121
 11870              	.LBB599:
 375:Core/Src/SEGGER_RTT.c ****   unsigned NumBytesWritten;
 11871              		.loc 1 375 3 view .LVU5122
 376:Core/Src/SEGGER_RTT.c ****   unsigned RdOff;
 11872              		.loc 1 376 3 view .LVU5123
 377:Core/Src/SEGGER_RTT.c ****   unsigned WrOff;
 11873              		.loc 1 377 3 view .LVU5124
 378:Core/Src/SEGGER_RTT.c ****   volatile char* pDst;
 11874              		.loc 1 378 3 view .LVU5125
 379:Core/Src/SEGGER_RTT.c ****   //
 11875              		.loc 1 379 3 view .LVU5126
 383:Core/Src/SEGGER_RTT.c ****   WrOff = pRing->WrOff;
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccs0vIiH.s 			page 320


 11876              		.loc 1 383 3 view .LVU5127
 384:Core/Src/SEGGER_RTT.c ****   do {
 11877              		.loc 1 384 3 view .LVU5128
 11878              	.LBE599:
 11879              	.LBE598:
 11880              	.LBB601:
 11881              	.LBB586:
 537:Core/Src/SEGGER_RTT.c ****   } else {
 11882              		.loc 1 537 14 is_stmt 0 view .LVU5129
 11883 0122 0DF1040A 		add	r10, sp, #4
 11884              	.LVL1127:
 537:Core/Src/SEGGER_RTT.c ****   } else {
 11885              		.loc 1 537 14 view .LVU5130
 11886              	.LBE586:
 11887              	.LBE601:
 11888              	.LBB602:
 11889              	.LBB600:
 413:Core/Src/SEGGER_RTT.c ****   } while (NumBytes);
 11890              		.loc 1 413 18 view .LVU5131
 11891 0126 4FF00008 		mov	r8, #0
 11892              	.LVL1128:
 11893              	.L432:
 385:Core/Src/SEGGER_RTT.c ****     RdOff = pRing->RdOff;                         // May be changed by host (debug probe) in the me
 11894              		.loc 1 385 3 is_stmt 1 view .LVU5132
 386:Core/Src/SEGGER_RTT.c ****     if (RdOff > WrOff) {
 11895              		.loc 1 386 5 view .LVU5133
 388:Core/Src/SEGGER_RTT.c ****     } else {
 11896              		.loc 1 388 7 view .LVU5134
 390:Core/Src/SEGGER_RTT.c ****     }
 11897              		.loc 1 390 7 view .LVU5135
 386:Core/Src/SEGGER_RTT.c ****     if (RdOff > WrOff) {
 11898              		.loc 1 386 11 is_stmt 0 view .LVU5136
 11899 012a A36A     		ldr	r3, [r4, #40]
 11900              	.LVL1129:
 387:Core/Src/SEGGER_RTT.c ****       NumBytesToWrite = RdOff - WrOff - 1u;
 11901              		.loc 1 387 5 is_stmt 1 view .LVU5137
 394:Core/Src/SEGGER_RTT.c **** #if SEGGER_RTT_MEMCPY_USE_BYTELOOP
 11902              		.loc 1 394 10 is_stmt 0 view .LVU5138
 11903 012c E069     		ldr	r0, [r4, #28]
 387:Core/Src/SEGGER_RTT.c ****       NumBytesToWrite = RdOff - WrOff - 1u;
 11904              		.loc 1 387 8 view .LVU5139
 11905 012e B342     		cmp	r3, r6
 392:Core/Src/SEGGER_RTT.c ****     NumBytesToWrite = MIN(NumBytesToWrite, NumBytes);
 11906              		.loc 1 392 23 view .LVU5140
 11907 0130 A1EB0605 		sub	r5, r1, r6
 388:Core/Src/SEGGER_RTT.c ****     } else {
 11908              		.loc 1 388 23 view .LVU5141
 11909 0134 03F1FF32 		add	r2, r3, #-1
 390:Core/Src/SEGGER_RTT.c ****     }
 11910              		.loc 1 390 23 view .LVU5142
 11911 0138 9CBF     		itt	ls
 11912 013a 03F1FF32 		addls	r2, r3, #-1
 11913 013e 5218     		addls	r2, r2, r1
 393:Core/Src/SEGGER_RTT.c ****     pDst = (pRing->pBuffer + WrOff) + SEGGER_RTT_UNCACHED_OFF;
 11914              		.loc 1 393 21 view .LVU5143
 11915 0140 4D45     		cmp	r5, r9
 11916 0142 28BF     		it	cs
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccs0vIiH.s 			page 321


 11917 0144 4D46     		movcs	r5, r9
 390:Core/Src/SEGGER_RTT.c ****     }
 11918              		.loc 1 390 23 view .LVU5144
 11919 0146 921B     		subs	r2, r2, r6
 11920              	.LVL1130:
 392:Core/Src/SEGGER_RTT.c ****     NumBytesToWrite = MIN(NumBytesToWrite, NumBytes);
 11921              		.loc 1 392 5 is_stmt 1 view .LVU5145
 393:Core/Src/SEGGER_RTT.c ****     pDst = (pRing->pBuffer + WrOff) + SEGGER_RTT_UNCACHED_OFF;
 11922              		.loc 1 393 5 view .LVU5146
 393:Core/Src/SEGGER_RTT.c ****     pDst = (pRing->pBuffer + WrOff) + SEGGER_RTT_UNCACHED_OFF;
 11923              		.loc 1 393 21 is_stmt 0 view .LVU5147
 11924 0148 9542     		cmp	r5, r2
 11925 014a 28BF     		it	cs
 11926 014c 1546     		movcs	r5, r2
 11927              	.LVL1131:
 394:Core/Src/SEGGER_RTT.c **** #if SEGGER_RTT_MEMCPY_USE_BYTELOOP
 11928              		.loc 1 394 5 is_stmt 1 view .LVU5148
 403:Core/Src/SEGGER_RTT.c ****     NumBytesWritten += NumBytesToWrite;
 11929              		.loc 1 403 5 view .LVU5149
 11930 014e 5146     		mov	r1, r10
 11931 0150 3044     		add	r0, r0, r6
 11932              	.LVL1132:
 403:Core/Src/SEGGER_RTT.c ****     NumBytesWritten += NumBytesToWrite;
 11933              		.loc 1 403 5 is_stmt 0 view .LVU5150
 11934 0152 2A46     		mov	r2, r5
 11935 0154 FFF7FEFF 		bl	memcpy
 11936              	.LVL1133:
 404:Core/Src/SEGGER_RTT.c ****     pBuffer         += NumBytesToWrite;
 11937              		.loc 1 404 5 is_stmt 1 view .LVU5151
 405:Core/Src/SEGGER_RTT.c ****     NumBytes        -= NumBytesToWrite;
 11938              		.loc 1 405 5 view .LVU5152
 409:Core/Src/SEGGER_RTT.c ****       WrOff = 0u;
 11939              		.loc 1 409 23 is_stmt 0 view .LVU5153
 11940 0158 216A     		ldr	r1, [r4, #32]
 407:Core/Src/SEGGER_RTT.c **** #endif
 11941              		.loc 1 407 21 view .LVU5154
 11942 015a 2E44     		add	r6, r6, r5
 11943              	.LVL1134:
 412:Core/Src/SEGGER_RTT.c ****     pRing->WrOff = WrOff;
 11944              		.loc 1 412 5 is_stmt 1 view .LVU5155
 409:Core/Src/SEGGER_RTT.c ****       WrOff = 0u;
 11945              		.loc 1 409 8 is_stmt 0 view .LVU5156
 11946 015c 8E42     		cmp	r6, r1
 405:Core/Src/SEGGER_RTT.c ****     NumBytes        -= NumBytesToWrite;
 11947              		.loc 1 405 21 view .LVU5157
 11948 015e AA44     		add	r10, r10, r5
 11949              	.LVL1135:
 406:Core/Src/SEGGER_RTT.c ****     WrOff           += NumBytesToWrite;
 11950              		.loc 1 406 5 is_stmt 1 view .LVU5158
 406:Core/Src/SEGGER_RTT.c ****     WrOff           += NumBytesToWrite;
 11951              		.loc 1 406 21 is_stmt 0 view .LVU5159
 11952 0160 A9EB0509 		sub	r9, r9, r5
 11953              	.LVL1136:
 407:Core/Src/SEGGER_RTT.c **** #endif
 11954              		.loc 1 407 5 is_stmt 1 view .LVU5160
 409:Core/Src/SEGGER_RTT.c ****       WrOff = 0u;
 11955              		.loc 1 409 5 view .LVU5161
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccs0vIiH.s 			page 322


 409:Core/Src/SEGGER_RTT.c ****       WrOff = 0u;
 11956              		.loc 1 409 8 is_stmt 0 view .LVU5162
 11957 0164 06D0     		beq	.L446
 412:Core/Src/SEGGER_RTT.c ****     pRing->WrOff = WrOff;
 11958              		.loc 1 412 5 view .LVU5163
 11959              		.syntax unified
 11960              	@ 412 "Core/Src/SEGGER_RTT.c" 1
 11961 0166 BFF35F8F 		dmb
 11962              	
 11963              	@ 0 "" 2
 412:Core/Src/SEGGER_RTT.c ****     pRing->WrOff = WrOff;
 11964              		.loc 1 412 15 is_stmt 1 view .LVU5164
 413:Core/Src/SEGGER_RTT.c ****   } while (NumBytes);
 11965              		.loc 1 413 5 view .LVU5165
 413:Core/Src/SEGGER_RTT.c ****   } while (NumBytes);
 11966              		.loc 1 413 18 is_stmt 0 view .LVU5166
 11967              		.thumb
 11968              		.syntax unified
 11969 016a 6662     		str	r6, [r4, #36]
 414:Core/Src/SEGGER_RTT.c ****   return NumBytesWritten;
 11970              		.loc 1 414 12 is_stmt 1 view .LVU5167
 11971 016c B9F1000F 		cmp	r9, #0
 11972 0170 DBD1     		bne	.L432
 11973 0172 84E7     		b	.L442
 11974              	.L446:
 11975              	.LVL1137:
 412:Core/Src/SEGGER_RTT.c ****     pRing->WrOff = WrOff;
 11976              		.loc 1 412 5 view .LVU5168
 11977              		.syntax unified
 11978              	@ 412 "Core/Src/SEGGER_RTT.c" 1
 11979 0174 BFF35F8F 		dmb
 11980              	
 11981              	@ 0 "" 2
 412:Core/Src/SEGGER_RTT.c ****     pRing->WrOff = WrOff;
 11982              		.loc 1 412 15 view .LVU5169
 413:Core/Src/SEGGER_RTT.c ****   } while (NumBytes);
 11983              		.loc 1 413 5 view .LVU5170
 413:Core/Src/SEGGER_RTT.c ****   } while (NumBytes);
 11984              		.loc 1 413 18 is_stmt 0 view .LVU5171
 11985              		.thumb
 11986              		.syntax unified
 11987 0178 C4F82480 		str	r8, [r4, #36]
 414:Core/Src/SEGGER_RTT.c ****   return NumBytesWritten;
 11988              		.loc 1 414 12 is_stmt 1 view .LVU5172
 11989 017c B9F1000F 		cmp	r9, #0
 11990 0180 3FF47DAF 		beq	.L442
 410:Core/Src/SEGGER_RTT.c ****     }
 11991              		.loc 1 410 13 is_stmt 0 view .LVU5173
 11992 0184 0026     		movs	r6, #0
 11993 0186 D0E7     		b	.L432
 11994              	.LVL1138:
 11995              	.L436:
 410:Core/Src/SEGGER_RTT.c ****     }
 11996              		.loc 1 410 13 view .LVU5174
 11997              	.LBE600:
 11998              	.LBE602:
 11999              	.LBE607:
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccs0vIiH.s 			page 323


1947:Core/Src/SEGGER_RTT.c ****   }
 12000              		.loc 1 1947 7 view .LVU5175
 12001 0188 4FF0FF30 		mov	r0, #-1
 12002              	.LVL1139:
1949:Core/Src/SEGGER_RTT.c **** }
 12003              		.loc 1 1949 3 is_stmt 1 view .LVU5176
1949:Core/Src/SEGGER_RTT.c **** }
 12004              		.loc 1 1949 10 is_stmt 0 view .LVU5177
 12005 018c 64E7     		b	.L423
 12006              	.L448:
 12007 018e 00BF     		.align	2
 12008              	.L447:
 12009 0190 00000000 		.word	.LANCHOR0
 12010 0194 00000000 		.word	.LANCHOR3
 12011 0198 00000000 		.word	.LANCHOR4
 12012 019c 00000000 		.word	.LC0
 12013 01a0 00000000 		.word	.LANCHOR1
 12014 01a4 00000000 		.word	.LANCHOR2
 12015              		.cfi_endproc
 12016              	.LFE32:
 12018              		.section	.text.SEGGER_RTT_TerminalOut,"ax",%progbits
 12019              		.align	1
 12020              		.p2align 2,,3
 12021              		.global	SEGGER_RTT_TerminalOut
 12022              		.syntax unified
 12023              		.thumb
 12024              		.thumb_func
 12026              	SEGGER_RTT_TerminalOut:
 12027              	.LVL1140:
 12028              	.LFB33:
1951:Core/Src/SEGGER_RTT.c **** 
1952:Core/Src/SEGGER_RTT.c **** /*********************************************************************
1953:Core/Src/SEGGER_RTT.c **** *
1954:Core/Src/SEGGER_RTT.c **** *       SEGGER_RTT_TerminalOut
1955:Core/Src/SEGGER_RTT.c **** *
1956:Core/Src/SEGGER_RTT.c **** *  Function description
1957:Core/Src/SEGGER_RTT.c **** *    Writes a string to the given terminal
1958:Core/Src/SEGGER_RTT.c **** *     without changing the terminal for channel 0.
1959:Core/Src/SEGGER_RTT.c **** *
1960:Core/Src/SEGGER_RTT.c **** *  Parameters
1961:Core/Src/SEGGER_RTT.c **** *    TerminalId   Index of the terminal.
1962:Core/Src/SEGGER_RTT.c **** *    s            String to be printed on the terminal.
1963:Core/Src/SEGGER_RTT.c **** *
1964:Core/Src/SEGGER_RTT.c **** *  Return value
1965:Core/Src/SEGGER_RTT.c **** *    >= 0 - Number of bytes written.
1966:Core/Src/SEGGER_RTT.c **** *     < 0 - Error.
1967:Core/Src/SEGGER_RTT.c **** *
1968:Core/Src/SEGGER_RTT.c **** */
1969:Core/Src/SEGGER_RTT.c **** int SEGGER_RTT_TerminalOut (unsigned char TerminalId, const char* s) {
 12029              		.loc 1 1969 70 is_stmt 1 view -0
 12030              		.cfi_startproc
 12031              		@ args = 0, pretend = 0, frame = 24
 12032              		@ frame_needed = 0, uses_anonymous_args = 0
1970:Core/Src/SEGGER_RTT.c ****   int                   Status;
 12033              		.loc 1 1970 3 view .LVU5179
1971:Core/Src/SEGGER_RTT.c ****   unsigned              FragLen;
 12034              		.loc 1 1971 3 view .LVU5180
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccs0vIiH.s 			page 324


1972:Core/Src/SEGGER_RTT.c ****   unsigned              Avail;
 12035              		.loc 1 1972 3 view .LVU5181
1973:Core/Src/SEGGER_RTT.c ****   SEGGER_RTT_BUFFER_UP* pRing;
 12036              		.loc 1 1973 3 view .LVU5182
 12037              	.LBB644:
1974:Core/Src/SEGGER_RTT.c ****   //
1975:Core/Src/SEGGER_RTT.c ****   INIT();
 12038              		.loc 1 1975 3 view .LVU5183
 12039              		.loc 1 1975 3 view .LVU5184
 12040              		.loc 1 1975 3 view .LVU5185
 12041              		.loc 1 1975 3 view .LVU5186
 12042              	.LBE644:
1969:Core/Src/SEGGER_RTT.c ****   int                   Status;
 12043              		.loc 1 1969 70 is_stmt 0 view .LVU5187
 12044 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 12045              		.cfi_def_cfa_offset 36
 12046              		.cfi_offset 4, -36
 12047              		.cfi_offset 5, -32
 12048              		.cfi_offset 6, -28
 12049              		.cfi_offset 7, -24
 12050              		.cfi_offset 8, -20
 12051              		.cfi_offset 9, -16
 12052              		.cfi_offset 10, -12
 12053              		.cfi_offset 11, -8
 12054              		.cfi_offset 14, -4
 12055              	.LBB647:
 12056              		.loc 1 1975 3 view .LVU5188
 12057 0004 904D     		ldr	r5, .L573
 12058 0006 2B78     		ldrb	r3, [r5]	@ zero_extendqisi2
 12059              	.LBE647:
1969:Core/Src/SEGGER_RTT.c ****   int                   Status;
 12060              		.loc 1 1969 70 view .LVU5189
 12061 0008 87B0     		sub	sp, sp, #28
 12062              		.cfi_def_cfa_offset 64
1969:Core/Src/SEGGER_RTT.c ****   int                   Status;
 12063              		.loc 1 1969 70 view .LVU5190
 12064 000a 8146     		mov	r9, r0
 12065 000c 8846     		mov	r8, r1
 12066              	.LBB648:
 12067              		.loc 1 1975 3 view .LVU5191
 12068 000e 7BB3     		cbz	r3, .L555
 12069              	.LVL1141:
 12070              	.L450:
 12071              		.loc 1 1975 3 is_stmt 1 discriminator 3 view .LVU5192
 12072              	.LBE648:
 12073              		.loc 1 1975 9 discriminator 3 view .LVU5193
1976:Core/Src/SEGGER_RTT.c ****   //
1977:Core/Src/SEGGER_RTT.c ****   // Validate terminal ID.
1978:Core/Src/SEGGER_RTT.c ****   //
1979:Core/Src/SEGGER_RTT.c ****   if (TerminalId < (char)sizeof(_aTerminalId)) { // We only support a certain number of channels
 12074              		.loc 1 1979 3 discriminator 3 view .LVU5194
 12075              		.loc 1 1979 6 is_stmt 0 discriminator 3 view .LVU5195
 12076 0010 B9F10F0F 		cmp	r9, #15
 12077 0014 00F28582 		bhi	.L511
1980:Core/Src/SEGGER_RTT.c ****     //
1981:Core/Src/SEGGER_RTT.c ****     // Get "to-host" ring buffer.
1982:Core/Src/SEGGER_RTT.c ****     //
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccs0vIiH.s 			page 325


1983:Core/Src/SEGGER_RTT.c ****     pRing = (SEGGER_RTT_BUFFER_UP*)((char*)&_SEGGER_RTT.aUp[0] + SEGGER_RTT_UNCACHED_OFF);  // Acce
 12078              		.loc 1 1983 5 is_stmt 1 view .LVU5196
 12079              	.LVL1142:
1984:Core/Src/SEGGER_RTT.c ****     //
1985:Core/Src/SEGGER_RTT.c ****     // Need to be able to change terminal, write data, change back.
1986:Core/Src/SEGGER_RTT.c ****     // Compute the fixed and variable sizes.
1987:Core/Src/SEGGER_RTT.c ****     //
1988:Core/Src/SEGGER_RTT.c ****     FragLen = STRLEN(s);
 12080              		.loc 1 1988 5 view .LVU5197
 12081              		.loc 1 1988 15 is_stmt 0 view .LVU5198
 12082 0018 4046     		mov	r0, r8
 12083 001a FFF7FEFF 		bl	strlen
 12084              	.LVL1143:
 12085 001e 0746     		mov	r7, r0
 12086              	.LVL1144:
 12087              	.LBB649:
1989:Core/Src/SEGGER_RTT.c ****     //
1990:Core/Src/SEGGER_RTT.c ****     // How we output depends upon the mode...
1991:Core/Src/SEGGER_RTT.c ****     //
1992:Core/Src/SEGGER_RTT.c ****     SEGGER_RTT_LOCK();
 12088              		.loc 1 1992 5 is_stmt 1 view .LVU5199
 12089              		.loc 1 1992 5 view .LVU5200
 12090              		.syntax unified
 12091              	@ 1992 "Core/Src/SEGGER_RTT.c" 1
 12092 0020 EFF31183 		mrs   r3, basepri  
 12093 0024 4FF02001 		mov   r1, #32       
 12094 0028 81F31188 		msr   basepri, r1  
 12095              		
 12096              	@ 0 "" 2
 12097              		.thumb
 12098              		.syntax unified
 12099              	.LBB650:
 12100              	.LBB651:
 535:Core/Src/SEGGER_RTT.c ****   if (RdOff <= WrOff) {
 12101              		.loc 1 535 9 is_stmt 0 view .LVU5201
 12102 002c 6C6A     		ldr	r4, [r5, #36]
 12103              	.LBE651:
 12104              	.LBE650:
 12105              		.loc 1 1992 5 view .LVU5202
 12106 002e 0193     		str	r3, [sp, #4]
 12107              	.LVL1145:
 12108              		.loc 1 1992 22 is_stmt 1 view .LVU5203
1993:Core/Src/SEGGER_RTT.c ****     Avail = _GetAvailWriteSpace(pRing);
 12109              		.loc 1 1993 5 view .LVU5204
 12110              	.LBB660:
 12111              	.LBI650:
 526:Core/Src/SEGGER_RTT.c ****   unsigned RdOff;
 12112              		.loc 1 526 17 view .LVU5205
 12113              	.LBB652:
 527:Core/Src/SEGGER_RTT.c ****   unsigned WrOff;
 12114              		.loc 1 527 3 view .LVU5206
 528:Core/Src/SEGGER_RTT.c ****   unsigned r;
 12115              		.loc 1 528 3 view .LVU5207
 529:Core/Src/SEGGER_RTT.c ****   //
 12116              		.loc 1 529 3 view .LVU5208
 534:Core/Src/SEGGER_RTT.c ****   WrOff = pRing->WrOff;
 12117              		.loc 1 534 3 view .LVU5209
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccs0vIiH.s 			page 326


 534:Core/Src/SEGGER_RTT.c ****   WrOff = pRing->WrOff;
 12118              		.loc 1 534 9 is_stmt 0 view .LVU5210
 12119 0030 AB6A     		ldr	r3, [r5, #40]
 12120              	.LVL1146:
 535:Core/Src/SEGGER_RTT.c ****   if (RdOff <= WrOff) {
 12121              		.loc 1 535 3 is_stmt 1 view .LVU5211
 536:Core/Src/SEGGER_RTT.c ****     r = pRing->SizeOfBuffer - 1u - WrOff + RdOff;
 12122              		.loc 1 536 3 view .LVU5212
 12123              	.LBE652:
 12124              	.LBE660:
1994:Core/Src/SEGGER_RTT.c ****     switch (pRing->Flags & SEGGER_RTT_MODE_MASK) {
 12125              		.loc 1 1994 26 is_stmt 0 view .LVU5213
 12126 0032 EE6A     		ldr	r6, [r5, #44]
 12127              	.LBB661:
 12128              	.LBB653:
 536:Core/Src/SEGGER_RTT.c ****     r = pRing->SizeOfBuffer - 1u - WrOff + RdOff;
 12129              		.loc 1 536 6 view .LVU5214
 12130 0034 A342     		cmp	r3, r4
 537:Core/Src/SEGGER_RTT.c ****   } else {
 12131              		.loc 1 537 5 is_stmt 1 view .LVU5215
 537:Core/Src/SEGGER_RTT.c ****   } else {
 12132              		.loc 1 537 7 is_stmt 0 view .LVU5216
 12133 0036 98BF     		it	ls
 12134 0038 2A6A     		ldrls	r2, [r5, #32]
 12135              	.LBE653:
 12136              	.LBE661:
 12137              		.loc 1 1994 26 view .LVU5217
 12138 003a 06F00306 		and	r6, r6, #3
 12139              	.LBB662:
 12140              	.LBB654:
 537:Core/Src/SEGGER_RTT.c ****   } else {
 12141              		.loc 1 537 7 view .LVU5218
 12142 003e 9ABF     		itte	ls
 12143 0040 03EB020B 		addls	fp, r3, r2
 12144 0044 0BF1FF3B 		addls	fp, fp, #-1
 539:Core/Src/SEGGER_RTT.c ****   }
 12145              		.loc 1 539 5 is_stmt 1 view .LVU5219
 539:Core/Src/SEGGER_RTT.c ****   }
 12146              		.loc 1 539 7 is_stmt 0 view .LVU5220
 12147 0048 03F1FF3B 		addhi	fp, r3, #-1
 12148              	.LBE654:
 12149              	.LBE662:
 12150              		.loc 1 1994 5 view .LVU5221
 12151 004c 012E     		cmp	r6, #1
 12152              	.LBB663:
 12153              	.LBB655:
 539:Core/Src/SEGGER_RTT.c ****   }
 12154              		.loc 1 539 7 view .LVU5222
 12155 004e ABEB040B 		sub	fp, fp, r4
 12156              	.LVL1147:
 541:Core/Src/SEGGER_RTT.c **** }
 12157              		.loc 1 541 3 is_stmt 1 view .LVU5223
 541:Core/Src/SEGGER_RTT.c **** }
 12158              		.loc 1 541 3 is_stmt 0 view .LVU5224
 12159              	.LBE655:
 12160              	.LBE663:
 12161              		.loc 1 1994 5 is_stmt 1 view .LVU5225
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccs0vIiH.s 			page 327


 12162 0052 00F00581 		beq	.L454
 12163 0056 022E     		cmp	r6, #2
 12164 0058 48D0     		beq	.L455
 12165 005a 002E     		cmp	r6, #0
 12166 005c 40D0     		beq	.L556
 12167              	.L517:
1995:Core/Src/SEGGER_RTT.c ****     case SEGGER_RTT_MODE_NO_BLOCK_SKIP:
1996:Core/Src/SEGGER_RTT.c ****       //
1997:Core/Src/SEGGER_RTT.c ****       // If we are in skip mode and there is no space for the whole
1998:Core/Src/SEGGER_RTT.c ****       // of this output, don't bother switching terminals at all.
1999:Core/Src/SEGGER_RTT.c ****       //
2000:Core/Src/SEGGER_RTT.c ****       if (Avail < (FragLen + 4u)) {
2001:Core/Src/SEGGER_RTT.c ****         Status = 0;
2002:Core/Src/SEGGER_RTT.c ****       } else {
2003:Core/Src/SEGGER_RTT.c ****         _PostTerminalSwitch(pRing, TerminalId);
2004:Core/Src/SEGGER_RTT.c ****         Status = (int)_WriteBlocking(pRing, s, FragLen);
2005:Core/Src/SEGGER_RTT.c ****         _PostTerminalSwitch(pRing, _ActiveTerminal);
2006:Core/Src/SEGGER_RTT.c ****       }
2007:Core/Src/SEGGER_RTT.c ****       break;
2008:Core/Src/SEGGER_RTT.c ****     case SEGGER_RTT_MODE_NO_BLOCK_TRIM:
2009:Core/Src/SEGGER_RTT.c ****       //
2010:Core/Src/SEGGER_RTT.c ****       // If we are in trim mode and there is not enough space for everything,
2011:Core/Src/SEGGER_RTT.c ****       // trim the output but always include the terminal switch.  If no room
2012:Core/Src/SEGGER_RTT.c ****       // for terminal switch, skip that totally.
2013:Core/Src/SEGGER_RTT.c ****       //
2014:Core/Src/SEGGER_RTT.c ****       if (Avail < 4u) {
2015:Core/Src/SEGGER_RTT.c ****         Status = -1;
 12168              		.loc 1 2015 16 is_stmt 0 view .LVU5226
 12169 005e 4FF0FF37 		mov	r7, #-1
 12170              	.LVL1148:
 12171              	.L456:
2016:Core/Src/SEGGER_RTT.c ****       } else {
2017:Core/Src/SEGGER_RTT.c ****         _PostTerminalSwitch(pRing, TerminalId);
2018:Core/Src/SEGGER_RTT.c ****         Status = (int)_WriteBlocking(pRing, s, (FragLen < (Avail - 4u)) ? FragLen : (Avail - 4u));
2019:Core/Src/SEGGER_RTT.c ****         _PostTerminalSwitch(pRing, _ActiveTerminal);
2020:Core/Src/SEGGER_RTT.c ****       }
2021:Core/Src/SEGGER_RTT.c ****       break;
2022:Core/Src/SEGGER_RTT.c ****     case SEGGER_RTT_MODE_BLOCK_IF_FIFO_FULL:
2023:Core/Src/SEGGER_RTT.c ****       //
2024:Core/Src/SEGGER_RTT.c ****       // If we are in blocking mode, output everything.
2025:Core/Src/SEGGER_RTT.c ****       //
2026:Core/Src/SEGGER_RTT.c ****       _PostTerminalSwitch(pRing, TerminalId);
2027:Core/Src/SEGGER_RTT.c ****       Status = (int)_WriteBlocking(pRing, s, FragLen);
2028:Core/Src/SEGGER_RTT.c ****       _PostTerminalSwitch(pRing, _ActiveTerminal);
2029:Core/Src/SEGGER_RTT.c ****       break;
2030:Core/Src/SEGGER_RTT.c ****     default:
2031:Core/Src/SEGGER_RTT.c ****       Status = -1;
2032:Core/Src/SEGGER_RTT.c ****       break;
2033:Core/Src/SEGGER_RTT.c ****     }
2034:Core/Src/SEGGER_RTT.c ****     //
2035:Core/Src/SEGGER_RTT.c ****     // Finish up.
2036:Core/Src/SEGGER_RTT.c ****     //
2037:Core/Src/SEGGER_RTT.c ****     SEGGER_RTT_UNLOCK();
 12172              		.loc 1 2037 5 is_stmt 1 view .LVU5227
 12173 0062 019B     		ldr	r3, [sp, #4]
 12174              		.syntax unified
 12175              	@ 2037 "Core/Src/SEGGER_RTT.c" 1
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccs0vIiH.s 			page 328


 12176 0064 83F31188 		msr   basepri, r3  
 12177              		
 12178              	@ 0 "" 2
 12179              		.thumb
 12180              		.syntax unified
 12181              	.LBE649:
 12182              		.loc 1 2037 24 view .LVU5228
 12183              	.LVL1149:
 12184              	.L449:
2038:Core/Src/SEGGER_RTT.c ****   } else {
2039:Core/Src/SEGGER_RTT.c ****     Status = -1;
2040:Core/Src/SEGGER_RTT.c ****   }
2041:Core/Src/SEGGER_RTT.c ****   return Status;
2042:Core/Src/SEGGER_RTT.c **** }
 12185              		.loc 1 2042 1 is_stmt 0 view .LVU5229
 12186 0068 3846     		mov	r0, r7
 12187 006a 07B0     		add	sp, sp, #28
 12188              		.cfi_remember_state
 12189              		.cfi_def_cfa_offset 36
 12190              		@ sp needed
 12191 006c BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 12192              	.LVL1150:
 12193              	.L555:
 12194              		.cfi_restore_state
 12195              		.loc 1 2042 1 view .LVU5230
 12196 0070 03F0FF04 		and	r4, r3, #255
 12197              	.LBB776:
1975:Core/Src/SEGGER_RTT.c ****   //
 12198              		.loc 1 1975 3 is_stmt 1 view .LVU5231
 12199              	.LBB645:
 12200              	.LBI645:
 314:Core/Src/SEGGER_RTT.c ****   volatile SEGGER_RTT_CB* p;   // Volatile to make sure that compiler cannot change the order of ac
 12201              		.loc 1 314 13 view .LVU5232
 12202              	.LBB646:
 315:Core/Src/SEGGER_RTT.c ****   static const char _aInitStr[] = "\0\0\0\0\0\0TTR REGGES";  // Init complete ID string to make sur
 12203              		.loc 1 315 3 view .LVU5233
 316:Core/Src/SEGGER_RTT.c ****   unsigned i;
 12204              		.loc 1 316 3 view .LVU5234
 317:Core/Src/SEGGER_RTT.c ****   //
 12205              		.loc 1 317 3 view .LVU5235
 321:Core/Src/SEGGER_RTT.c ****   memset((SEGGER_RTT_CB*)p, 0, sizeof(_SEGGER_RTT));         // Make sure that the RTT CB is always
 12206              		.loc 1 321 3 view .LVU5236
 12207              	.LVL1151:
 322:Core/Src/SEGGER_RTT.c ****   p->MaxNumUpBuffers    = SEGGER_RTT_MAX_NUM_UP_BUFFERS;
 12208              		.loc 1 322 3 view .LVU5237
 12209 0074 2146     		mov	r1, r4
 12210              	.LVL1152:
 322:Core/Src/SEGGER_RTT.c ****   p->MaxNumUpBuffers    = SEGGER_RTT_MAX_NUM_UP_BUFFERS;
 12211              		.loc 1 322 3 is_stmt 0 view .LVU5238
 12212 0076 7822     		movs	r2, #120
 12213 0078 05F13000 		add	r0, r5, #48
 12214              	.LVL1153:
 322:Core/Src/SEGGER_RTT.c ****   p->MaxNumUpBuffers    = SEGGER_RTT_MAX_NUM_UP_BUFFERS;
 12215              		.loc 1 322 3 view .LVU5239
 12216 007c FFF7FEFF 		bl	memset
 12217              	.LVL1154:
 323:Core/Src/SEGGER_RTT.c ****   p->MaxNumDownBuffers  = SEGGER_RTT_MAX_NUM_DOWN_BUFFERS;
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccs0vIiH.s 			page 329


 12218              		.loc 1 323 3 is_stmt 1 view .LVU5240
 323:Core/Src/SEGGER_RTT.c ****   p->MaxNumDownBuffers  = SEGGER_RTT_MAX_NUM_DOWN_BUFFERS;
 12219              		.loc 1 323 25 is_stmt 0 view .LVU5241
 12220 0080 0323     		movs	r3, #3
 12221 0082 2B61     		str	r3, [r5, #16]
 324:Core/Src/SEGGER_RTT.c ****   //
 12222              		.loc 1 324 3 is_stmt 1 view .LVU5242
 329:Core/Src/SEGGER_RTT.c ****   p->aUp[0].SizeOfBuffer  = BUFFER_SIZE_UP;
 12223              		.loc 1 329 27 is_stmt 0 view .LVU5243
 12224 0084 714A     		ldr	r2, .L573+4
 324:Core/Src/SEGGER_RTT.c ****   //
 12225              		.loc 1 324 25 view .LVU5244
 12226 0086 6B61     		str	r3, [r5, #20]
 328:Core/Src/SEGGER_RTT.c ****   p->aUp[0].pBuffer       = _acUpBuffer;
 12227              		.loc 1 328 3 is_stmt 1 view .LVU5245
 330:Core/Src/SEGGER_RTT.c ****   p->aUp[0].RdOff         = 0u;
 12228              		.loc 1 330 27 is_stmt 0 view .LVU5246
 12229 0088 4FF48061 		mov	r1, #1024
 328:Core/Src/SEGGER_RTT.c ****   p->aUp[0].pBuffer       = _acUpBuffer;
 12230              		.loc 1 328 27 view .LVU5247
 12231 008c 704B     		ldr	r3, .L573+8
 12232 008e AB61     		str	r3, [r5, #24]
 329:Core/Src/SEGGER_RTT.c ****   p->aUp[0].SizeOfBuffer  = BUFFER_SIZE_UP;
 12233              		.loc 1 329 3 is_stmt 1 view .LVU5248
 329:Core/Src/SEGGER_RTT.c ****   p->aUp[0].SizeOfBuffer  = BUFFER_SIZE_UP;
 12234              		.loc 1 329 27 is_stmt 0 view .LVU5249
 12235 0090 EA61     		str	r2, [r5, #28]
 330:Core/Src/SEGGER_RTT.c ****   p->aUp[0].RdOff         = 0u;
 12236              		.loc 1 330 3 is_stmt 1 view .LVU5250
 330:Core/Src/SEGGER_RTT.c ****   p->aUp[0].RdOff         = 0u;
 12237              		.loc 1 330 27 is_stmt 0 view .LVU5251
 12238 0092 2962     		str	r1, [r5, #32]
 331:Core/Src/SEGGER_RTT.c ****   p->aUp[0].WrOff         = 0u;
 12239              		.loc 1 331 3 is_stmt 1 view .LVU5252
 338:Core/Src/SEGGER_RTT.c ****   p->aDown[0].SizeOfBuffer  = BUFFER_SIZE_DOWN;
 12240              		.loc 1 338 29 is_stmt 0 view .LVU5253
 12241 0094 6F4A     		ldr	r2, .L573+12
 331:Core/Src/SEGGER_RTT.c ****   p->aUp[0].WrOff         = 0u;
 12242              		.loc 1 331 27 view .LVU5254
 12243 0096 AC62     		str	r4, [r5, #40]
 332:Core/Src/SEGGER_RTT.c ****   p->aUp[0].Flags         = SEGGER_RTT_MODE_DEFAULT;
 12244              		.loc 1 332 3 is_stmt 1 view .LVU5255
 332:Core/Src/SEGGER_RTT.c ****   p->aUp[0].Flags         = SEGGER_RTT_MODE_DEFAULT;
 12245              		.loc 1 332 27 is_stmt 0 view .LVU5256
 12246 0098 6C62     		str	r4, [r5, #36]
 333:Core/Src/SEGGER_RTT.c ****   //
 12247              		.loc 1 333 3 is_stmt 1 view .LVU5257
 333:Core/Src/SEGGER_RTT.c ****   //
 12248              		.loc 1 333 27 is_stmt 0 view .LVU5258
 12249 009a EC62     		str	r4, [r5, #44]
 337:Core/Src/SEGGER_RTT.c ****   p->aDown[0].pBuffer       = _acDownBuffer;
 12250              		.loc 1 337 3 is_stmt 1 view .LVU5259
 337:Core/Src/SEGGER_RTT.c ****   p->aDown[0].pBuffer       = _acDownBuffer;
 12251              		.loc 1 337 29 is_stmt 0 view .LVU5260
 12252 009c 2B66     		str	r3, [r5, #96]
 338:Core/Src/SEGGER_RTT.c ****   p->aDown[0].SizeOfBuffer  = BUFFER_SIZE_DOWN;
 12253              		.loc 1 338 3 is_stmt 1 view .LVU5261
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccs0vIiH.s 			page 330


 339:Core/Src/SEGGER_RTT.c ****   p->aDown[0].RdOff         = 0u;
 12254              		.loc 1 339 29 is_stmt 0 view .LVU5262
 12255 009e 1023     		movs	r3, #16
 338:Core/Src/SEGGER_RTT.c ****   p->aDown[0].SizeOfBuffer  = BUFFER_SIZE_DOWN;
 12256              		.loc 1 338 29 view .LVU5263
 12257 00a0 6A66     		str	r2, [r5, #100]
 339:Core/Src/SEGGER_RTT.c ****   p->aDown[0].RdOff         = 0u;
 12258              		.loc 1 339 3 is_stmt 1 view .LVU5264
 339:Core/Src/SEGGER_RTT.c ****   p->aDown[0].RdOff         = 0u;
 12259              		.loc 1 339 29 is_stmt 0 view .LVU5265
 12260 00a2 AB66     		str	r3, [r5, #104]
 340:Core/Src/SEGGER_RTT.c ****   p->aDown[0].WrOff         = 0u;
 12261              		.loc 1 340 3 is_stmt 1 view .LVU5266
 340:Core/Src/SEGGER_RTT.c ****   p->aDown[0].WrOff         = 0u;
 12262              		.loc 1 340 29 is_stmt 0 view .LVU5267
 12263 00a4 2C67     		str	r4, [r5, #112]
 341:Core/Src/SEGGER_RTT.c ****   p->aDown[0].Flags         = SEGGER_RTT_MODE_DEFAULT;
 12264              		.loc 1 341 3 is_stmt 1 view .LVU5268
 341:Core/Src/SEGGER_RTT.c ****   p->aDown[0].Flags         = SEGGER_RTT_MODE_DEFAULT;
 12265              		.loc 1 341 29 is_stmt 0 view .LVU5269
 12266 00a6 EC66     		str	r4, [r5, #108]
 342:Core/Src/SEGGER_RTT.c ****   //
 12267              		.loc 1 342 3 is_stmt 1 view .LVU5270
 342:Core/Src/SEGGER_RTT.c ****   //
 12268              		.loc 1 342 29 is_stmt 0 view .LVU5271
 12269 00a8 6C67     		str	r4, [r5, #116]
 348:Core/Src/SEGGER_RTT.c ****   for (i = 0; i < sizeof(_aInitStr) - 1; ++i) {
 12270              		.loc 1 348 3 is_stmt 1 view .LVU5272
 12271              		.syntax unified
 12272              	@ 348 "Core/Src/SEGGER_RTT.c" 1
 12273 00aa BFF35F8F 		dmb
 12274              	
 12275              	@ 0 "" 2
 348:Core/Src/SEGGER_RTT.c ****   for (i = 0; i < sizeof(_aInitStr) - 1; ++i) {
 12276              		.loc 1 348 13 view .LVU5273
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 12277              		.loc 1 349 3 view .LVU5274
 12278              	.LVL1155:
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 12279              		.loc 1 349 17 view .LVU5275
 350:Core/Src/SEGGER_RTT.c ****   }
 12280              		.loc 1 350 5 view .LVU5276
 350:Core/Src/SEGGER_RTT.c ****   }
 12281              		.loc 1 350 16 is_stmt 0 view .LVU5277
 12282              		.thumb
 12283              		.syntax unified
 12284 00ae 5323     		movs	r3, #83
 12285 00b0 2B70     		strb	r3, [r5]
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 12286              		.loc 1 349 42 is_stmt 1 view .LVU5278
 12287              	.LVL1156:
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 12288              		.loc 1 349 17 view .LVU5279
 350:Core/Src/SEGGER_RTT.c ****   }
 12289              		.loc 1 350 5 view .LVU5280
 350:Core/Src/SEGGER_RTT.c ****   }
 12290              		.loc 1 350 16 is_stmt 0 view .LVU5281
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccs0vIiH.s 			page 331


 12291 00b2 4722     		movs	r2, #71
 12292 00b4 4523     		movs	r3, #69
 12293 00b6 6B70     		strb	r3, [r5, #1]
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 12294              		.loc 1 349 42 is_stmt 1 view .LVU5282
 12295              	.LVL1157:
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 12296              		.loc 1 349 17 view .LVU5283
 350:Core/Src/SEGGER_RTT.c ****   }
 12297              		.loc 1 350 5 view .LVU5284
 350:Core/Src/SEGGER_RTT.c ****   }
 12298              		.loc 1 350 16 is_stmt 0 view .LVU5285
 12299 00b8 2021     		movs	r1, #32
 12300 00ba AA70     		strb	r2, [r5, #2]
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 12301              		.loc 1 349 42 is_stmt 1 view .LVU5286
 12302              	.LVL1158:
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 12303              		.loc 1 349 17 view .LVU5287
 350:Core/Src/SEGGER_RTT.c ****   }
 12304              		.loc 1 350 5 view .LVU5288
 350:Core/Src/SEGGER_RTT.c ****   }
 12305              		.loc 1 350 16 is_stmt 0 view .LVU5289
 12306 00bc EA70     		strb	r2, [r5, #3]
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 12307              		.loc 1 349 42 is_stmt 1 view .LVU5290
 12308              	.LVL1159:
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 12309              		.loc 1 349 17 view .LVU5291
 350:Core/Src/SEGGER_RTT.c ****   }
 12310              		.loc 1 350 5 view .LVU5292
 350:Core/Src/SEGGER_RTT.c ****   }
 12311              		.loc 1 350 16 is_stmt 0 view .LVU5293
 12312 00be 2B71     		strb	r3, [r5, #4]
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 12313              		.loc 1 349 42 is_stmt 1 view .LVU5294
 12314              	.LVL1160:
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 12315              		.loc 1 349 17 view .LVU5295
 350:Core/Src/SEGGER_RTT.c ****   }
 12316              		.loc 1 350 5 view .LVU5296
 350:Core/Src/SEGGER_RTT.c ****   }
 12317              		.loc 1 350 16 is_stmt 0 view .LVU5297
 12318 00c0 5222     		movs	r2, #82
 12319 00c2 5423     		movs	r3, #84
 12320 00c4 6A71     		strb	r2, [r5, #5]
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 12321              		.loc 1 349 42 is_stmt 1 view .LVU5298
 12322              	.LVL1161:
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 12323              		.loc 1 349 17 view .LVU5299
 350:Core/Src/SEGGER_RTT.c ****   }
 12324              		.loc 1 350 5 view .LVU5300
 350:Core/Src/SEGGER_RTT.c ****   }
 12325              		.loc 1 350 16 is_stmt 0 view .LVU5301
 12326 00c6 A971     		strb	r1, [r5, #6]
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccs0vIiH.s 			page 332


 12327              		.loc 1 349 42 is_stmt 1 view .LVU5302
 12328              	.LVL1162:
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 12329              		.loc 1 349 17 view .LVU5303
 350:Core/Src/SEGGER_RTT.c ****   }
 12330              		.loc 1 350 5 view .LVU5304
 350:Core/Src/SEGGER_RTT.c ****   }
 12331              		.loc 1 350 16 is_stmt 0 view .LVU5305
 12332 00c8 EA71     		strb	r2, [r5, #7]
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 12333              		.loc 1 349 42 is_stmt 1 view .LVU5306
 12334              	.LVL1163:
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 12335              		.loc 1 349 17 view .LVU5307
 350:Core/Src/SEGGER_RTT.c ****   }
 12336              		.loc 1 350 5 view .LVU5308
 350:Core/Src/SEGGER_RTT.c ****   }
 12337              		.loc 1 350 16 is_stmt 0 view .LVU5309
 12338 00ca 2B72     		strb	r3, [r5, #8]
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 12339              		.loc 1 349 42 is_stmt 1 view .LVU5310
 12340              	.LVL1164:
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 12341              		.loc 1 349 17 view .LVU5311
 350:Core/Src/SEGGER_RTT.c ****   }
 12342              		.loc 1 350 5 view .LVU5312
 350:Core/Src/SEGGER_RTT.c ****   }
 12343              		.loc 1 350 16 is_stmt 0 view .LVU5313
 12344 00cc 6B72     		strb	r3, [r5, #9]
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 12345              		.loc 1 349 42 is_stmt 1 view .LVU5314
 12346              	.LVL1165:
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 12347              		.loc 1 349 17 view .LVU5315
 350:Core/Src/SEGGER_RTT.c ****   }
 12348              		.loc 1 350 5 view .LVU5316
 350:Core/Src/SEGGER_RTT.c ****   }
 12349              		.loc 1 350 16 is_stmt 0 view .LVU5317
 12350 00ce AC72     		strb	r4, [r5, #10]
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 12351              		.loc 1 349 42 is_stmt 1 view .LVU5318
 12352              	.LVL1166:
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 12353              		.loc 1 349 17 view .LVU5319
 350:Core/Src/SEGGER_RTT.c ****   }
 12354              		.loc 1 350 5 view .LVU5320
 350:Core/Src/SEGGER_RTT.c ****   }
 12355              		.loc 1 350 16 is_stmt 0 view .LVU5321
 12356 00d0 EC72     		strb	r4, [r5, #11]
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 12357              		.loc 1 349 42 is_stmt 1 view .LVU5322
 12358              	.LVL1167:
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 12359              		.loc 1 349 17 view .LVU5323
 350:Core/Src/SEGGER_RTT.c ****   }
 12360              		.loc 1 350 5 view .LVU5324
 350:Core/Src/SEGGER_RTT.c ****   }
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccs0vIiH.s 			page 333


 12361              		.loc 1 350 16 is_stmt 0 view .LVU5325
 12362 00d2 2C73     		strb	r4, [r5, #12]
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 12363              		.loc 1 349 42 is_stmt 1 view .LVU5326
 12364              	.LVL1168:
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 12365              		.loc 1 349 17 view .LVU5327
 350:Core/Src/SEGGER_RTT.c ****   }
 12366              		.loc 1 350 5 view .LVU5328
 350:Core/Src/SEGGER_RTT.c ****   }
 12367              		.loc 1 350 16 is_stmt 0 view .LVU5329
 12368 00d4 6C73     		strb	r4, [r5, #13]
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 12369              		.loc 1 349 42 is_stmt 1 view .LVU5330
 12370              	.LVL1169:
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 12371              		.loc 1 349 17 view .LVU5331
 350:Core/Src/SEGGER_RTT.c ****   }
 12372              		.loc 1 350 5 view .LVU5332
 350:Core/Src/SEGGER_RTT.c ****   }
 12373              		.loc 1 350 16 is_stmt 0 view .LVU5333
 12374 00d6 AC73     		strb	r4, [r5, #14]
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 12375              		.loc 1 349 42 is_stmt 1 view .LVU5334
 12376              	.LVL1170:
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 12377              		.loc 1 349 17 view .LVU5335
 350:Core/Src/SEGGER_RTT.c ****   }
 12378              		.loc 1 350 5 view .LVU5336
 350:Core/Src/SEGGER_RTT.c ****   }
 12379              		.loc 1 350 16 is_stmt 0 view .LVU5337
 12380 00d8 EC73     		strb	r4, [r5, #15]
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 12381              		.loc 1 349 42 is_stmt 1 view .LVU5338
 12382              	.LVL1171:
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 12383              		.loc 1 349 17 view .LVU5339
 352:Core/Src/SEGGER_RTT.c **** }
 12384              		.loc 1 352 3 view .LVU5340
 12385              		.syntax unified
 12386              	@ 352 "Core/Src/SEGGER_RTT.c" 1
 12387 00da BFF35F8F 		dmb
 12388              	
 12389              	@ 0 "" 2
 352:Core/Src/SEGGER_RTT.c **** }
 12390              		.loc 1 352 13 view .LVU5341
 353:Core/Src/SEGGER_RTT.c **** 
 12391              		.loc 1 353 1 is_stmt 0 view .LVU5342
 12392              		.thumb
 12393              		.syntax unified
 12394 00de 97E7     		b	.L450
 12395              	.LVL1172:
 12396              	.L556:
 353:Core/Src/SEGGER_RTT.c **** 
 12397              		.loc 1 353 1 view .LVU5343
 12398              	.LBE646:
 12399              	.LBE645:
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccs0vIiH.s 			page 334


 12400              	.LBE776:
 12401              	.LBB777:
2000:Core/Src/SEGGER_RTT.c ****         Status = 0;
 12402              		.loc 1 2000 7 is_stmt 1 view .LVU5344
2000:Core/Src/SEGGER_RTT.c ****         Status = 0;
 12403              		.loc 1 2000 28 is_stmt 0 view .LVU5345
 12404 00e0 031D     		adds	r3, r0, #4
2000:Core/Src/SEGGER_RTT.c ****         Status = 0;
 12405              		.loc 1 2000 10 view .LVU5346
 12406 00e2 5B45     		cmp	r3, fp
 12407 00e4 40F25781 		bls	.L557
2001:Core/Src/SEGGER_RTT.c ****       } else {
 12408              		.loc 1 2001 16 view .LVU5347
 12409 00e8 3746     		mov	r7, r6
 12410 00ea BAE7     		b	.L456
 12411              	.L455:
2026:Core/Src/SEGGER_RTT.c ****       Status = (int)_WriteBlocking(pRing, s, FragLen);
 12412              		.loc 1 2026 7 is_stmt 1 view .LVU5348
 12413              	.LVL1173:
 12414              	.LBB664:
 12415              	.LBI664:
 504:Core/Src/SEGGER_RTT.c ****   unsigned char ac[2];
 12416              		.loc 1 504 13 view .LVU5349
 12417              	.LBB665:
 505:Core/Src/SEGGER_RTT.c **** 
 12418              		.loc 1 505 3 view .LVU5350
 507:Core/Src/SEGGER_RTT.c ****   ac[1] = _aTerminalId[TerminalId];  // Caller made already sure that TerminalId does not exceed ou
 12419              		.loc 1 507 3 view .LVU5351
 508:Core/Src/SEGGER_RTT.c ****   _WriteBlocking(pRing, (const char*)ac, 2u);
 12420              		.loc 1 508 23 is_stmt 0 view .LVU5352
 12421 00ec 5A4B     		ldr	r3, .L573+16
 12422 00ee 0293     		str	r3, [sp, #8]
 508:Core/Src/SEGGER_RTT.c ****   _WriteBlocking(pRing, (const char*)ac, 2u);
 12423              		.loc 1 508 9 view .LVU5353
 12424 00f0 13F80930 		ldrb	r3, [r3, r9]	@ zero_extendqisi2
 12425 00f4 8DF81530 		strb	r3, [sp, #21]
 507:Core/Src/SEGGER_RTT.c ****   ac[1] = _aTerminalId[TerminalId];  // Caller made already sure that TerminalId does not exceed ou
 12426              		.loc 1 507 9 view .LVU5354
 12427 00f8 FF23     		movs	r3, #255
 12428 00fa 8DF81430 		strb	r3, [sp, #20]
 508:Core/Src/SEGGER_RTT.c ****   _WriteBlocking(pRing, (const char*)ac, 2u);
 12429              		.loc 1 508 3 is_stmt 1 view .LVU5355
 509:Core/Src/SEGGER_RTT.c **** }
 12430              		.loc 1 509 3 view .LVU5356
 12431              	.LVL1174:
 12432              	.LBB666:
 12433              	.LBI666:
 374:Core/Src/SEGGER_RTT.c ****   unsigned NumBytesToWrite;
 12434              		.loc 1 374 17 view .LVU5357
 12435              	.LBB667:
 375:Core/Src/SEGGER_RTT.c ****   unsigned NumBytesWritten;
 12436              		.loc 1 375 3 view .LVU5358
 376:Core/Src/SEGGER_RTT.c ****   unsigned RdOff;
 12437              		.loc 1 376 3 view .LVU5359
 377:Core/Src/SEGGER_RTT.c ****   unsigned WrOff;
 12438              		.loc 1 377 3 view .LVU5360
 378:Core/Src/SEGGER_RTT.c ****   volatile char* pDst;
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccs0vIiH.s 			page 335


 12439              		.loc 1 378 3 view .LVU5361
 379:Core/Src/SEGGER_RTT.c ****   //
 12440              		.loc 1 379 3 view .LVU5362
 383:Core/Src/SEGGER_RTT.c ****   WrOff = pRing->WrOff;
 12441              		.loc 1 383 3 view .LVU5363
 384:Core/Src/SEGGER_RTT.c ****   do {
 12442              		.loc 1 384 3 view .LVU5364
 384:Core/Src/SEGGER_RTT.c ****   do {
 12443              		.loc 1 384 3 is_stmt 0 view .LVU5365
 12444              	.LBE667:
 12445              	.LBE666:
 12446              	.LBE665:
 12447              	.LBE664:
 12448              	.LBB677:
 12449              	.LBB656:
 537:Core/Src/SEGGER_RTT.c ****   } else {
 12450              		.loc 1 537 14 view .LVU5366
 12451 00fe 286A     		ldr	r0, [r5, #32]
 12452              	.LVL1175:
 537:Core/Src/SEGGER_RTT.c ****   } else {
 12453              		.loc 1 537 14 view .LVU5367
 12454 0100 05AB     		add	r3, sp, #20
 12455              	.LVL1176:
 537:Core/Src/SEGGER_RTT.c ****   } else {
 12456              		.loc 1 537 14 view .LVU5368
 12457 0102 0393     		str	r3, [sp, #12]
 12458 0104 B346     		mov	fp, r6
 12459              	.LVL1177:
 537:Core/Src/SEGGER_RTT.c ****   } else {
 12460              		.loc 1 537 14 view .LVU5369
 12461 0106 9946     		mov	r9, r3
 12462              	.LVL1178:
 12463              	.L498:
 537:Core/Src/SEGGER_RTT.c ****   } else {
 12464              		.loc 1 537 14 view .LVU5370
 12465              	.LBE656:
 12466              	.LBE677:
 12467              	.LBB678:
 12468              	.LBB674:
 12469              	.LBB671:
 12470              	.LBB668:
 385:Core/Src/SEGGER_RTT.c ****     RdOff = pRing->RdOff;                         // May be changed by host (debug probe) in the me
 12471              		.loc 1 385 3 is_stmt 1 view .LVU5371
 386:Core/Src/SEGGER_RTT.c ****     if (RdOff > WrOff) {
 12472              		.loc 1 386 5 view .LVU5372
 388:Core/Src/SEGGER_RTT.c ****     } else {
 12473              		.loc 1 388 7 view .LVU5373
 390:Core/Src/SEGGER_RTT.c ****     }
 12474              		.loc 1 390 7 view .LVU5374
 386:Core/Src/SEGGER_RTT.c ****     if (RdOff > WrOff) {
 12475              		.loc 1 386 11 is_stmt 0 view .LVU5375
 12476 0108 AB6A     		ldr	r3, [r5, #40]
 12477              	.LVL1179:
 387:Core/Src/SEGGER_RTT.c ****       NumBytesToWrite = RdOff - WrOff - 1u;
 12478              		.loc 1 387 5 is_stmt 1 view .LVU5376
 387:Core/Src/SEGGER_RTT.c ****       NumBytesToWrite = RdOff - WrOff - 1u;
 12479              		.loc 1 387 8 is_stmt 0 view .LVU5377
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccs0vIiH.s 			page 336


 12480 010a A342     		cmp	r3, r4
 388:Core/Src/SEGGER_RTT.c ****     } else {
 12481              		.loc 1 388 23 view .LVU5378
 12482 010c 03F1FF32 		add	r2, r3, #-1
 390:Core/Src/SEGGER_RTT.c ****     }
 12483              		.loc 1 390 23 view .LVU5379
 12484 0110 98BF     		it	ls
 12485 0112 03F1FF33 		addls	r3, r3, #-1
 12486              	.LVL1180:
 392:Core/Src/SEGGER_RTT.c ****     NumBytesToWrite = MIN(NumBytesToWrite, NumBytes);
 12487              		.loc 1 392 23 view .LVU5380
 12488 0116 A0EB040A 		sub	r10, r0, r4
 390:Core/Src/SEGGER_RTT.c ****     }
 12489              		.loc 1 390 23 view .LVU5381
 12490 011a 96BF     		itet	ls
 12491 011c 1B18     		addls	r3, r3, r0
 388:Core/Src/SEGGER_RTT.c ****     } else {
 12492              		.loc 1 388 23 view .LVU5382
 12493 011e 131B     		subhi	r3, r2, r4
 390:Core/Src/SEGGER_RTT.c ****     }
 12494              		.loc 1 390 23 view .LVU5383
 12495 0120 1B1B     		subls	r3, r3, r4
 12496              	.LVL1181:
 392:Core/Src/SEGGER_RTT.c ****     NumBytesToWrite = MIN(NumBytesToWrite, NumBytes);
 12497              		.loc 1 392 5 is_stmt 1 view .LVU5384
 393:Core/Src/SEGGER_RTT.c ****     pDst = (pRing->pBuffer + WrOff) + SEGGER_RTT_UNCACHED_OFF;
 12498              		.loc 1 393 5 view .LVU5385
 393:Core/Src/SEGGER_RTT.c ****     pDst = (pRing->pBuffer + WrOff) + SEGGER_RTT_UNCACHED_OFF;
 12499              		.loc 1 393 21 is_stmt 0 view .LVU5386
 12500 0122 DA45     		cmp	r10, fp
 12501 0124 28BF     		it	cs
 12502 0126 DA46     		movcs	r10, fp
 12503              	.LVL1182:
 393:Core/Src/SEGGER_RTT.c ****     pDst = (pRing->pBuffer + WrOff) + SEGGER_RTT_UNCACHED_OFF;
 12504              		.loc 1 393 21 view .LVU5387
 12505 0128 9A45     		cmp	r10, r3
 394:Core/Src/SEGGER_RTT.c **** #if SEGGER_RTT_MEMCPY_USE_BYTELOOP
 12506              		.loc 1 394 10 view .LVU5388
 12507 012a E869     		ldr	r0, [r5, #28]
 12508              	.LVL1183:
 393:Core/Src/SEGGER_RTT.c ****     pDst = (pRing->pBuffer + WrOff) + SEGGER_RTT_UNCACHED_OFF;
 12509              		.loc 1 393 21 view .LVU5389
 12510 012c 28BF     		it	cs
 12511 012e 9A46     		movcs	r10, r3
 12512              	.LVL1184:
 394:Core/Src/SEGGER_RTT.c **** #if SEGGER_RTT_MEMCPY_USE_BYTELOOP
 12513              		.loc 1 394 5 is_stmt 1 view .LVU5390
 403:Core/Src/SEGGER_RTT.c ****     NumBytesWritten += NumBytesToWrite;
 12514              		.loc 1 403 5 view .LVU5391
 12515 0130 4946     		mov	r1, r9
 12516 0132 2044     		add	r0, r0, r4
 12517              	.LVL1185:
 403:Core/Src/SEGGER_RTT.c ****     NumBytesWritten += NumBytesToWrite;
 12518              		.loc 1 403 5 is_stmt 0 view .LVU5392
 12519 0134 5246     		mov	r2, r10
 12520 0136 FFF7FEFF 		bl	memcpy
 12521              	.LVL1186:
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccs0vIiH.s 			page 337


 404:Core/Src/SEGGER_RTT.c ****     pBuffer         += NumBytesToWrite;
 12522              		.loc 1 404 5 is_stmt 1 view .LVU5393
 405:Core/Src/SEGGER_RTT.c ****     NumBytes        -= NumBytesToWrite;
 12523              		.loc 1 405 5 view .LVU5394
 409:Core/Src/SEGGER_RTT.c ****       WrOff = 0u;
 12524              		.loc 1 409 23 is_stmt 0 view .LVU5395
 12525 013a 286A     		ldr	r0, [r5, #32]
 407:Core/Src/SEGGER_RTT.c **** #endif
 12526              		.loc 1 407 21 view .LVU5396
 12527 013c 5444     		add	r4, r4, r10
 12528              	.LVL1187:
 412:Core/Src/SEGGER_RTT.c ****     pRing->WrOff = WrOff;
 12529              		.loc 1 412 5 is_stmt 1 view .LVU5397
 409:Core/Src/SEGGER_RTT.c ****       WrOff = 0u;
 12530              		.loc 1 409 8 is_stmt 0 view .LVU5398
 12531 013e 8442     		cmp	r4, r0
 405:Core/Src/SEGGER_RTT.c ****     NumBytes        -= NumBytesToWrite;
 12532              		.loc 1 405 21 view .LVU5399
 12533 0140 D144     		add	r9, r9, r10
 12534              	.LVL1188:
 406:Core/Src/SEGGER_RTT.c ****     WrOff           += NumBytesToWrite;
 12535              		.loc 1 406 5 is_stmt 1 view .LVU5400
 406:Core/Src/SEGGER_RTT.c ****     WrOff           += NumBytesToWrite;
 12536              		.loc 1 406 21 is_stmt 0 view .LVU5401
 12537 0142 ABEB0A0B 		sub	fp, fp, r10
 12538              	.LVL1189:
 407:Core/Src/SEGGER_RTT.c **** #endif
 12539              		.loc 1 407 5 is_stmt 1 view .LVU5402
 409:Core/Src/SEGGER_RTT.c ****       WrOff = 0u;
 12540              		.loc 1 409 5 view .LVU5403
 409:Core/Src/SEGGER_RTT.c ****       WrOff = 0u;
 12541              		.loc 1 409 8 is_stmt 0 view .LVU5404
 12542 0146 6BD0     		beq	.L558
 412:Core/Src/SEGGER_RTT.c ****     pRing->WrOff = WrOff;
 12543              		.loc 1 412 5 view .LVU5405
 12544              		.syntax unified
 12545              	@ 412 "Core/Src/SEGGER_RTT.c" 1
 12546 0148 BFF35F8F 		dmb
 12547              	
 12548              	@ 0 "" 2
 412:Core/Src/SEGGER_RTT.c ****     pRing->WrOff = WrOff;
 12549              		.loc 1 412 15 is_stmt 1 view .LVU5406
 413:Core/Src/SEGGER_RTT.c ****   } while (NumBytes);
 12550              		.loc 1 413 5 view .LVU5407
 413:Core/Src/SEGGER_RTT.c ****   } while (NumBytes);
 12551              		.loc 1 413 18 is_stmt 0 view .LVU5408
 12552              		.thumb
 12553              		.syntax unified
 12554 014c 6C62     		str	r4, [r5, #36]
 414:Core/Src/SEGGER_RTT.c ****   return NumBytesWritten;
 12555              		.loc 1 414 12 is_stmt 1 view .LVU5409
 12556 014e BBF1000F 		cmp	fp, #0
 12557 0152 D9D1     		bne	.L498
 12558              	.LVL1190:
 12559              	.L497:
 415:Core/Src/SEGGER_RTT.c **** }
 12560              		.loc 1 415 3 view .LVU5410
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccs0vIiH.s 			page 338


 415:Core/Src/SEGGER_RTT.c **** }
 12561              		.loc 1 415 3 is_stmt 0 view .LVU5411
 12562              	.LBE668:
 12563              	.LBE671:
 12564              	.LBE674:
 12565              	.LBE678:
2027:Core/Src/SEGGER_RTT.c ****       _PostTerminalSwitch(pRing, _ActiveTerminal);
 12566              		.loc 1 2027 7 is_stmt 1 view .LVU5412
 12567              	.LBB679:
 12568              	.LBI679:
 374:Core/Src/SEGGER_RTT.c ****   unsigned NumBytesToWrite;
 12569              		.loc 1 374 17 view .LVU5413
 12570              	.LBB680:
 375:Core/Src/SEGGER_RTT.c ****   unsigned NumBytesWritten;
 12571              		.loc 1 375 3 view .LVU5414
 376:Core/Src/SEGGER_RTT.c ****   unsigned RdOff;
 12572              		.loc 1 376 3 view .LVU5415
 377:Core/Src/SEGGER_RTT.c ****   unsigned WrOff;
 12573              		.loc 1 377 3 view .LVU5416
 378:Core/Src/SEGGER_RTT.c ****   volatile char* pDst;
 12574              		.loc 1 378 3 view .LVU5417
 379:Core/Src/SEGGER_RTT.c ****   //
 12575              		.loc 1 379 3 view .LVU5418
 383:Core/Src/SEGGER_RTT.c ****   WrOff = pRing->WrOff;
 12576              		.loc 1 383 3 view .LVU5419
 384:Core/Src/SEGGER_RTT.c ****   do {
 12577              		.loc 1 384 3 view .LVU5420
 383:Core/Src/SEGGER_RTT.c ****   WrOff = pRing->WrOff;
 12578              		.loc 1 383 19 is_stmt 0 view .LVU5421
 12579 0154 4FF0000B 		mov	fp, #0
 413:Core/Src/SEGGER_RTT.c ****   } while (NumBytes);
 12580              		.loc 1 413 18 view .LVU5422
 12581 0158 DA46     		mov	r10, fp
 12582              	.LVL1191:
 12583              	.L504:
 385:Core/Src/SEGGER_RTT.c ****     RdOff = pRing->RdOff;                         // May be changed by host (debug probe) in the me
 12584              		.loc 1 385 3 is_stmt 1 view .LVU5423
 386:Core/Src/SEGGER_RTT.c ****     if (RdOff > WrOff) {
 12585              		.loc 1 386 5 view .LVU5424
 388:Core/Src/SEGGER_RTT.c ****     } else {
 12586              		.loc 1 388 7 view .LVU5425
 390:Core/Src/SEGGER_RTT.c ****     }
 12587              		.loc 1 390 7 view .LVU5426
 386:Core/Src/SEGGER_RTT.c ****     if (RdOff > WrOff) {
 12588              		.loc 1 386 11 is_stmt 0 view .LVU5427
 12589 015a AB6A     		ldr	r3, [r5, #40]
 12590              	.LVL1192:
 387:Core/Src/SEGGER_RTT.c ****       NumBytesToWrite = RdOff - WrOff - 1u;
 12591              		.loc 1 387 5 is_stmt 1 view .LVU5428
 387:Core/Src/SEGGER_RTT.c ****       NumBytesToWrite = RdOff - WrOff - 1u;
 12592              		.loc 1 387 8 is_stmt 0 view .LVU5429
 12593 015c A342     		cmp	r3, r4
 388:Core/Src/SEGGER_RTT.c ****     } else {
 12594              		.loc 1 388 23 view .LVU5430
 12595 015e 03F1FF32 		add	r2, r3, #-1
 390:Core/Src/SEGGER_RTT.c ****     }
 12596              		.loc 1 390 23 view .LVU5431
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccs0vIiH.s 			page 339


 12597 0162 98BF     		it	ls
 12598 0164 03F1FF33 		addls	r3, r3, #-1
 12599              	.LVL1193:
 392:Core/Src/SEGGER_RTT.c ****     NumBytesToWrite = MIN(NumBytesToWrite, NumBytes);
 12600              		.loc 1 392 23 view .LVU5432
 12601 0168 A0EB0409 		sub	r9, r0, r4
 390:Core/Src/SEGGER_RTT.c ****     }
 12602              		.loc 1 390 23 view .LVU5433
 12603 016c 96BF     		itet	ls
 12604 016e 1B18     		addls	r3, r3, r0
 388:Core/Src/SEGGER_RTT.c ****     } else {
 12605              		.loc 1 388 23 view .LVU5434
 12606 0170 131B     		subhi	r3, r2, r4
 390:Core/Src/SEGGER_RTT.c ****     }
 12607              		.loc 1 390 23 view .LVU5435
 12608 0172 1B1B     		subls	r3, r3, r4
 12609              	.LVL1194:
 392:Core/Src/SEGGER_RTT.c ****     NumBytesToWrite = MIN(NumBytesToWrite, NumBytes);
 12610              		.loc 1 392 5 is_stmt 1 view .LVU5436
 393:Core/Src/SEGGER_RTT.c ****     pDst = (pRing->pBuffer + WrOff) + SEGGER_RTT_UNCACHED_OFF;
 12611              		.loc 1 393 5 view .LVU5437
 393:Core/Src/SEGGER_RTT.c ****     pDst = (pRing->pBuffer + WrOff) + SEGGER_RTT_UNCACHED_OFF;
 12612              		.loc 1 393 21 is_stmt 0 view .LVU5438
 12613 0174 B945     		cmp	r9, r7
 12614 0176 28BF     		it	cs
 12615 0178 B946     		movcs	r9, r7
 12616              	.LVL1195:
 393:Core/Src/SEGGER_RTT.c ****     pDst = (pRing->pBuffer + WrOff) + SEGGER_RTT_UNCACHED_OFF;
 12617              		.loc 1 393 21 view .LVU5439
 12618 017a 9945     		cmp	r9, r3
 394:Core/Src/SEGGER_RTT.c **** #if SEGGER_RTT_MEMCPY_USE_BYTELOOP
 12619              		.loc 1 394 10 view .LVU5440
 12620 017c E869     		ldr	r0, [r5, #28]
 12621              	.LVL1196:
 393:Core/Src/SEGGER_RTT.c ****     pDst = (pRing->pBuffer + WrOff) + SEGGER_RTT_UNCACHED_OFF;
 12622              		.loc 1 393 21 view .LVU5441
 12623 017e 28BF     		it	cs
 12624 0180 9946     		movcs	r9, r3
 12625              	.LVL1197:
 394:Core/Src/SEGGER_RTT.c **** #if SEGGER_RTT_MEMCPY_USE_BYTELOOP
 12626              		.loc 1 394 5 is_stmt 1 view .LVU5442
 403:Core/Src/SEGGER_RTT.c ****     NumBytesWritten += NumBytesToWrite;
 12627              		.loc 1 403 5 view .LVU5443
 12628 0182 4146     		mov	r1, r8
 12629 0184 2044     		add	r0, r0, r4
 12630              	.LVL1198:
 403:Core/Src/SEGGER_RTT.c ****     NumBytesWritten += NumBytesToWrite;
 12631              		.loc 1 403 5 is_stmt 0 view .LVU5444
 12632 0186 4A46     		mov	r2, r9
 12633 0188 FFF7FEFF 		bl	memcpy
 12634              	.LVL1199:
 404:Core/Src/SEGGER_RTT.c ****     pBuffer         += NumBytesToWrite;
 12635              		.loc 1 404 5 is_stmt 1 view .LVU5445
 409:Core/Src/SEGGER_RTT.c ****       WrOff = 0u;
 12636              		.loc 1 409 23 is_stmt 0 view .LVU5446
 12637 018c 286A     		ldr	r0, [r5, #32]
 407:Core/Src/SEGGER_RTT.c **** #endif
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccs0vIiH.s 			page 340


 12638              		.loc 1 407 21 view .LVU5447
 12639 018e 4C44     		add	r4, r4, r9
 12640              	.LVL1200:
 412:Core/Src/SEGGER_RTT.c ****     pRing->WrOff = WrOff;
 12641              		.loc 1 412 5 is_stmt 1 view .LVU5448
 409:Core/Src/SEGGER_RTT.c ****       WrOff = 0u;
 12642              		.loc 1 409 8 is_stmt 0 view .LVU5449
 12643 0190 8442     		cmp	r4, r0
 404:Core/Src/SEGGER_RTT.c ****     pBuffer         += NumBytesToWrite;
 12644              		.loc 1 404 21 view .LVU5450
 12645 0192 CB44     		add	fp, fp, r9
 12646              	.LVL1201:
 405:Core/Src/SEGGER_RTT.c ****     NumBytes        -= NumBytesToWrite;
 12647              		.loc 1 405 5 is_stmt 1 view .LVU5451
 405:Core/Src/SEGGER_RTT.c ****     NumBytes        -= NumBytesToWrite;
 12648              		.loc 1 405 21 is_stmt 0 view .LVU5452
 12649 0194 C844     		add	r8, r8, r9
 12650              	.LVL1202:
 406:Core/Src/SEGGER_RTT.c ****     WrOff           += NumBytesToWrite;
 12651              		.loc 1 406 5 is_stmt 1 view .LVU5453
 406:Core/Src/SEGGER_RTT.c ****     WrOff           += NumBytesToWrite;
 12652              		.loc 1 406 21 is_stmt 0 view .LVU5454
 12653 0196 A7EB0907 		sub	r7, r7, r9
 12654              	.LVL1203:
 407:Core/Src/SEGGER_RTT.c **** #endif
 12655              		.loc 1 407 5 is_stmt 1 view .LVU5455
 409:Core/Src/SEGGER_RTT.c ****       WrOff = 0u;
 12656              		.loc 1 409 5 view .LVU5456
 409:Core/Src/SEGGER_RTT.c ****       WrOff = 0u;
 12657              		.loc 1 409 8 is_stmt 0 view .LVU5457
 12658 019a 38D0     		beq	.L559
 412:Core/Src/SEGGER_RTT.c ****     pRing->WrOff = WrOff;
 12659              		.loc 1 412 5 view .LVU5458
 12660              		.syntax unified
 12661              	@ 412 "Core/Src/SEGGER_RTT.c" 1
 12662 019c BFF35F8F 		dmb
 12663              	
 12664              	@ 0 "" 2
 412:Core/Src/SEGGER_RTT.c ****     pRing->WrOff = WrOff;
 12665              		.loc 1 412 15 is_stmt 1 view .LVU5459
 413:Core/Src/SEGGER_RTT.c ****   } while (NumBytes);
 12666              		.loc 1 413 5 view .LVU5460
 413:Core/Src/SEGGER_RTT.c ****   } while (NumBytes);
 12667              		.loc 1 413 18 is_stmt 0 view .LVU5461
 12668              		.thumb
 12669              		.syntax unified
 12670 01a0 6C62     		str	r4, [r5, #36]
 414:Core/Src/SEGGER_RTT.c ****   return NumBytesWritten;
 12671              		.loc 1 414 12 is_stmt 1 view .LVU5462
 12672 01a2 002F     		cmp	r7, #0
 12673 01a4 D9D1     		bne	.L504
 12674              	.LVL1204:
 12675              	.L503:
 415:Core/Src/SEGGER_RTT.c **** }
 12676              		.loc 1 415 3 view .LVU5463
 415:Core/Src/SEGGER_RTT.c **** }
 12677              		.loc 1 415 3 is_stmt 0 view .LVU5464
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccs0vIiH.s 			page 341


 12678              	.LBE680:
 12679              	.LBE679:
2028:Core/Src/SEGGER_RTT.c ****       break;
 12680              		.loc 1 2028 7 view .LVU5465
 12681 01a6 2D4B     		ldr	r3, .L573+20
 12682              	.LBB683:
 12683              	.LBB684:
 508:Core/Src/SEGGER_RTT.c ****   _WriteBlocking(pRing, (const char*)ac, 2u);
 12684              		.loc 1 508 9 view .LVU5466
 12685 01a8 029A     		ldr	r2, [sp, #8]
 12686              	.LBE684:
 12687              	.LBE683:
2028:Core/Src/SEGGER_RTT.c ****       break;
 12688              		.loc 1 2028 7 view .LVU5467
 12689 01aa 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 12690              	.LBB692:
 12691              	.LBB689:
 508:Core/Src/SEGGER_RTT.c ****   _WriteBlocking(pRing, (const char*)ac, 2u);
 12692              		.loc 1 508 9 view .LVU5468
 12693 01ac DDF80C90 		ldr	r9, [sp, #12]
 12694 01b0 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 12695 01b2 8DF81530 		strb	r3, [sp, #21]
 507:Core/Src/SEGGER_RTT.c ****   ac[1] = _aTerminalId[TerminalId];  // Caller made already sure that TerminalId does not exceed ou
 12696              		.loc 1 507 9 view .LVU5469
 12697 01b6 FF23     		movs	r3, #255
 12698              	.LBE689:
 12699              	.LBE692:
2027:Core/Src/SEGGER_RTT.c ****       _PostTerminalSwitch(pRing, _ActiveTerminal);
 12700              		.loc 1 2027 14 view .LVU5470
 12701 01b8 5F46     		mov	r7, fp
 12702              	.LVL1205:
2028:Core/Src/SEGGER_RTT.c ****       break;
 12703              		.loc 1 2028 7 is_stmt 1 view .LVU5471
 12704              	.LBB693:
 12705              	.LBI683:
 504:Core/Src/SEGGER_RTT.c ****   unsigned char ac[2];
 12706              		.loc 1 504 13 view .LVU5472
 12707              	.LBB690:
 505:Core/Src/SEGGER_RTT.c **** 
 12708              		.loc 1 505 3 view .LVU5473
 507:Core/Src/SEGGER_RTT.c ****   ac[1] = _aTerminalId[TerminalId];  // Caller made already sure that TerminalId does not exceed ou
 12709              		.loc 1 507 3 view .LVU5474
 507:Core/Src/SEGGER_RTT.c ****   ac[1] = _aTerminalId[TerminalId];  // Caller made already sure that TerminalId does not exceed ou
 12710              		.loc 1 507 9 is_stmt 0 view .LVU5475
 12711 01ba 8DF81430 		strb	r3, [sp, #20]
 508:Core/Src/SEGGER_RTT.c ****   _WriteBlocking(pRing, (const char*)ac, 2u);
 12712              		.loc 1 508 3 is_stmt 1 view .LVU5476
 509:Core/Src/SEGGER_RTT.c **** }
 12713              		.loc 1 509 3 view .LVU5477
 12714              	.LVL1206:
 12715              	.LBB685:
 12716              	.LBI685:
 374:Core/Src/SEGGER_RTT.c ****   unsigned NumBytesToWrite;
 12717              		.loc 1 374 17 view .LVU5478
 12718              	.LBB686:
 375:Core/Src/SEGGER_RTT.c ****   unsigned NumBytesWritten;
 12719              		.loc 1 375 3 view .LVU5479
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccs0vIiH.s 			page 342


 376:Core/Src/SEGGER_RTT.c ****   unsigned RdOff;
 12720              		.loc 1 376 3 view .LVU5480
 377:Core/Src/SEGGER_RTT.c ****   unsigned WrOff;
 12721              		.loc 1 377 3 view .LVU5481
 378:Core/Src/SEGGER_RTT.c ****   volatile char* pDst;
 12722              		.loc 1 378 3 view .LVU5482
 379:Core/Src/SEGGER_RTT.c ****   //
 12723              		.loc 1 379 3 view .LVU5483
 383:Core/Src/SEGGER_RTT.c ****   WrOff = pRing->WrOff;
 12724              		.loc 1 383 3 view .LVU5484
 384:Core/Src/SEGGER_RTT.c ****   do {
 12725              		.loc 1 384 3 view .LVU5485
 413:Core/Src/SEGGER_RTT.c ****   } while (NumBytes);
 12726              		.loc 1 413 18 is_stmt 0 view .LVU5486
 12727 01be 4FF00008 		mov	r8, #0
 12728              	.LVL1207:
 12729              	.L510:
 385:Core/Src/SEGGER_RTT.c ****     RdOff = pRing->RdOff;                         // May be changed by host (debug probe) in the me
 12730              		.loc 1 385 3 is_stmt 1 view .LVU5487
 386:Core/Src/SEGGER_RTT.c ****     if (RdOff > WrOff) {
 12731              		.loc 1 386 5 view .LVU5488
 388:Core/Src/SEGGER_RTT.c ****     } else {
 12732              		.loc 1 388 7 view .LVU5489
 390:Core/Src/SEGGER_RTT.c ****     }
 12733              		.loc 1 390 7 view .LVU5490
 386:Core/Src/SEGGER_RTT.c ****     if (RdOff > WrOff) {
 12734              		.loc 1 386 11 is_stmt 0 view .LVU5491
 12735 01c2 AB6A     		ldr	r3, [r5, #40]
 12736              	.LVL1208:
 387:Core/Src/SEGGER_RTT.c ****       NumBytesToWrite = RdOff - WrOff - 1u;
 12737              		.loc 1 387 5 is_stmt 1 view .LVU5492
 387:Core/Src/SEGGER_RTT.c ****       NumBytesToWrite = RdOff - WrOff - 1u;
 12738              		.loc 1 387 8 is_stmt 0 view .LVU5493
 12739 01c4 A342     		cmp	r3, r4
 388:Core/Src/SEGGER_RTT.c ****     } else {
 12740              		.loc 1 388 23 view .LVU5494
 12741 01c6 03F1FF32 		add	r2, r3, #-1
 390:Core/Src/SEGGER_RTT.c ****     }
 12742              		.loc 1 390 23 view .LVU5495
 12743 01ca 98BF     		it	ls
 12744 01cc 03F1FF33 		addls	r3, r3, #-1
 12745              	.LVL1209:
 392:Core/Src/SEGGER_RTT.c ****     NumBytesToWrite = MIN(NumBytesToWrite, NumBytes);
 12746              		.loc 1 392 23 view .LVU5496
 12747 01d0 A0EB040A 		sub	r10, r0, r4
 390:Core/Src/SEGGER_RTT.c ****     }
 12748              		.loc 1 390 23 view .LVU5497
 12749 01d4 96BF     		itet	ls
 12750 01d6 1B18     		addls	r3, r3, r0
 388:Core/Src/SEGGER_RTT.c ****     } else {
 12751              		.loc 1 388 23 view .LVU5498
 12752 01d8 131B     		subhi	r3, r2, r4
 390:Core/Src/SEGGER_RTT.c ****     }
 12753              		.loc 1 390 23 view .LVU5499
 12754 01da 1B1B     		subls	r3, r3, r4
 12755              	.LVL1210:
 392:Core/Src/SEGGER_RTT.c ****     NumBytesToWrite = MIN(NumBytesToWrite, NumBytes);
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccs0vIiH.s 			page 343


 12756              		.loc 1 392 5 is_stmt 1 view .LVU5500
 393:Core/Src/SEGGER_RTT.c ****     pDst = (pRing->pBuffer + WrOff) + SEGGER_RTT_UNCACHED_OFF;
 12757              		.loc 1 393 5 view .LVU5501
 393:Core/Src/SEGGER_RTT.c ****     pDst = (pRing->pBuffer + WrOff) + SEGGER_RTT_UNCACHED_OFF;
 12758              		.loc 1 393 21 is_stmt 0 view .LVU5502
 12759 01dc B245     		cmp	r10, r6
 12760 01de 28BF     		it	cs
 12761 01e0 B246     		movcs	r10, r6
 12762              	.LVL1211:
 393:Core/Src/SEGGER_RTT.c ****     pDst = (pRing->pBuffer + WrOff) + SEGGER_RTT_UNCACHED_OFF;
 12763              		.loc 1 393 21 view .LVU5503
 12764 01e2 9A45     		cmp	r10, r3
 394:Core/Src/SEGGER_RTT.c **** #if SEGGER_RTT_MEMCPY_USE_BYTELOOP
 12765              		.loc 1 394 10 view .LVU5504
 12766 01e4 E869     		ldr	r0, [r5, #28]
 12767              	.LVL1212:
 393:Core/Src/SEGGER_RTT.c ****     pDst = (pRing->pBuffer + WrOff) + SEGGER_RTT_UNCACHED_OFF;
 12768              		.loc 1 393 21 view .LVU5505
 12769 01e6 28BF     		it	cs
 12770 01e8 9A46     		movcs	r10, r3
 12771              	.LVL1213:
 394:Core/Src/SEGGER_RTT.c **** #if SEGGER_RTT_MEMCPY_USE_BYTELOOP
 12772              		.loc 1 394 5 is_stmt 1 view .LVU5506
 403:Core/Src/SEGGER_RTT.c ****     NumBytesWritten += NumBytesToWrite;
 12773              		.loc 1 403 5 view .LVU5507
 12774 01ea 4946     		mov	r1, r9
 12775 01ec 2044     		add	r0, r0, r4
 12776              	.LVL1214:
 403:Core/Src/SEGGER_RTT.c ****     NumBytesWritten += NumBytesToWrite;
 12777              		.loc 1 403 5 is_stmt 0 view .LVU5508
 12778 01ee 5246     		mov	r2, r10
 12779 01f0 FFF7FEFF 		bl	memcpy
 12780              	.LVL1215:
 404:Core/Src/SEGGER_RTT.c ****     pBuffer         += NumBytesToWrite;
 12781              		.loc 1 404 5 is_stmt 1 view .LVU5509
 405:Core/Src/SEGGER_RTT.c ****     NumBytes        -= NumBytesToWrite;
 12782              		.loc 1 405 5 view .LVU5510
 409:Core/Src/SEGGER_RTT.c ****       WrOff = 0u;
 12783              		.loc 1 409 23 is_stmt 0 view .LVU5511
 12784 01f4 286A     		ldr	r0, [r5, #32]
 407:Core/Src/SEGGER_RTT.c **** #endif
 12785              		.loc 1 407 21 view .LVU5512
 12786 01f6 5444     		add	r4, r4, r10
 12787              	.LVL1216:
 412:Core/Src/SEGGER_RTT.c ****     pRing->WrOff = WrOff;
 12788              		.loc 1 412 5 is_stmt 1 view .LVU5513
 409:Core/Src/SEGGER_RTT.c ****       WrOff = 0u;
 12789              		.loc 1 409 8 is_stmt 0 view .LVU5514
 12790 01f8 8442     		cmp	r4, r0
 405:Core/Src/SEGGER_RTT.c ****     NumBytes        -= NumBytesToWrite;
 12791              		.loc 1 405 21 view .LVU5515
 12792 01fa D144     		add	r9, r9, r10
 12793              	.LVL1217:
 406:Core/Src/SEGGER_RTT.c ****     WrOff           += NumBytesToWrite;
 12794              		.loc 1 406 5 is_stmt 1 view .LVU5516
 406:Core/Src/SEGGER_RTT.c ****     WrOff           += NumBytesToWrite;
 12795              		.loc 1 406 21 is_stmt 0 view .LVU5517
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccs0vIiH.s 			page 344


 12796 01fc A6EB0A06 		sub	r6, r6, r10
 12797              	.LVL1218:
 407:Core/Src/SEGGER_RTT.c **** #endif
 12798              		.loc 1 407 5 is_stmt 1 view .LVU5518
 409:Core/Src/SEGGER_RTT.c ****       WrOff = 0u;
 12799              		.loc 1 409 5 view .LVU5519
 409:Core/Src/SEGGER_RTT.c ****       WrOff = 0u;
 12800              		.loc 1 409 8 is_stmt 0 view .LVU5520
 12801 0200 18D0     		beq	.L560
 412:Core/Src/SEGGER_RTT.c ****     pRing->WrOff = WrOff;
 12802              		.loc 1 412 5 view .LVU5521
 12803              		.syntax unified
 12804              	@ 412 "Core/Src/SEGGER_RTT.c" 1
 12805 0202 BFF35F8F 		dmb
 12806              	
 12807              	@ 0 "" 2
 412:Core/Src/SEGGER_RTT.c ****     pRing->WrOff = WrOff;
 12808              		.loc 1 412 15 is_stmt 1 view .LVU5522
 413:Core/Src/SEGGER_RTT.c ****   } while (NumBytes);
 12809              		.loc 1 413 5 view .LVU5523
 413:Core/Src/SEGGER_RTT.c ****   } while (NumBytes);
 12810              		.loc 1 413 18 is_stmt 0 view .LVU5524
 12811              		.thumb
 12812              		.syntax unified
 12813 0206 6C62     		str	r4, [r5, #36]
 414:Core/Src/SEGGER_RTT.c ****   return NumBytesWritten;
 12814              		.loc 1 414 12 is_stmt 1 view .LVU5525
 12815 0208 002E     		cmp	r6, #0
 12816 020a DAD1     		bne	.L510
 12817 020c 29E7     		b	.L456
 12818              	.LVL1219:
 12819              	.L559:
 414:Core/Src/SEGGER_RTT.c ****   return NumBytesWritten;
 12820              		.loc 1 414 12 is_stmt 0 view .LVU5526
 12821              	.LBE686:
 12822              	.LBE685:
 12823              	.LBE690:
 12824              	.LBE693:
 12825              	.LBB694:
 12826              	.LBB681:
 412:Core/Src/SEGGER_RTT.c ****     pRing->WrOff = WrOff;
 12827              		.loc 1 412 5 is_stmt 1 view .LVU5527
 12828              		.syntax unified
 12829              	@ 412 "Core/Src/SEGGER_RTT.c" 1
 12830 020e BFF35F8F 		dmb
 12831              	
 12832              	@ 0 "" 2
 412:Core/Src/SEGGER_RTT.c ****     pRing->WrOff = WrOff;
 12833              		.loc 1 412 15 view .LVU5528
 413:Core/Src/SEGGER_RTT.c ****   } while (NumBytes);
 12834              		.loc 1 413 5 view .LVU5529
 413:Core/Src/SEGGER_RTT.c ****   } while (NumBytes);
 12835              		.loc 1 413 18 is_stmt 0 view .LVU5530
 12836              		.thumb
 12837              		.syntax unified
 12838 0212 C5F824A0 		str	r10, [r5, #36]
 414:Core/Src/SEGGER_RTT.c ****   return NumBytesWritten;
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccs0vIiH.s 			page 345


 12839              		.loc 1 414 12 is_stmt 1 view .LVU5531
 12840 0216 002F     		cmp	r7, #0
 12841 0218 00F07781 		beq	.L561
 410:Core/Src/SEGGER_RTT.c ****     }
 12842              		.loc 1 410 13 is_stmt 0 view .LVU5532
 12843 021c 0024     		movs	r4, #0
 12844 021e 9CE7     		b	.L504
 12845              	.LVL1220:
 12846              	.L558:
 410:Core/Src/SEGGER_RTT.c ****     }
 12847              		.loc 1 410 13 view .LVU5533
 12848              	.LBE681:
 12849              	.LBE694:
 12850              	.LBB695:
 12851              	.LBB675:
 12852              	.LBB672:
 12853              	.LBB669:
 412:Core/Src/SEGGER_RTT.c ****     pRing->WrOff = WrOff;
 12854              		.loc 1 412 5 is_stmt 1 view .LVU5534
 12855              		.syntax unified
 12856              	@ 412 "Core/Src/SEGGER_RTT.c" 1
 12857 0220 BFF35F8F 		dmb
 12858              	
 12859              	@ 0 "" 2
 412:Core/Src/SEGGER_RTT.c ****     pRing->WrOff = WrOff;
 12860              		.loc 1 412 15 view .LVU5535
 413:Core/Src/SEGGER_RTT.c ****   } while (NumBytes);
 12861              		.loc 1 413 5 view .LVU5536
 413:Core/Src/SEGGER_RTT.c ****   } while (NumBytes);
 12862              		.loc 1 413 18 is_stmt 0 view .LVU5537
 12863              		.thumb
 12864              		.syntax unified
 12865 0224 0023     		movs	r3, #0
 12866 0226 6B62     		str	r3, [r5, #36]
 414:Core/Src/SEGGER_RTT.c ****   return NumBytesWritten;
 12867              		.loc 1 414 12 is_stmt 1 view .LVU5538
 12868 0228 BBF1000F 		cmp	fp, #0
 12869 022c 00F06F81 		beq	.L562
 410:Core/Src/SEGGER_RTT.c ****     }
 12870              		.loc 1 410 13 is_stmt 0 view .LVU5539
 12871 0230 0024     		movs	r4, #0
 12872 0232 69E7     		b	.L498
 12873              	.LVL1221:
 12874              	.L560:
 410:Core/Src/SEGGER_RTT.c ****     }
 12875              		.loc 1 410 13 view .LVU5540
 12876              	.LBE669:
 12877              	.LBE672:
 12878              	.LBE675:
 12879              	.LBE695:
 12880              	.LBB696:
 12881              	.LBB691:
 12882              	.LBB688:
 12883              	.LBB687:
 412:Core/Src/SEGGER_RTT.c ****     pRing->WrOff = WrOff;
 12884              		.loc 1 412 5 is_stmt 1 view .LVU5541
 12885              		.syntax unified
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccs0vIiH.s 			page 346


 12886              	@ 412 "Core/Src/SEGGER_RTT.c" 1
 12887 0234 BFF35F8F 		dmb
 12888              	
 12889              	@ 0 "" 2
 412:Core/Src/SEGGER_RTT.c ****     pRing->WrOff = WrOff;
 12890              		.loc 1 412 15 view .LVU5542
 413:Core/Src/SEGGER_RTT.c ****   } while (NumBytes);
 12891              		.loc 1 413 5 view .LVU5543
 413:Core/Src/SEGGER_RTT.c ****   } while (NumBytes);
 12892              		.loc 1 413 18 is_stmt 0 view .LVU5544
 12893              		.thumb
 12894              		.syntax unified
 12895 0238 C5F82480 		str	r8, [r5, #36]
 414:Core/Src/SEGGER_RTT.c ****   return NumBytesWritten;
 12896              		.loc 1 414 12 is_stmt 1 view .LVU5545
 12897 023c 002E     		cmp	r6, #0
 12898 023e 3FF410AF 		beq	.L456
 410:Core/Src/SEGGER_RTT.c ****     }
 12899              		.loc 1 410 13 is_stmt 0 view .LVU5546
 12900 0242 0024     		movs	r4, #0
 12901 0244 BDE7     		b	.L510
 12902              	.L574:
 12903 0246 00BF     		.align	2
 12904              	.L573:
 12905 0248 00000000 		.word	.LANCHOR0
 12906 024c 00000000 		.word	.LANCHOR1
 12907 0250 00000000 		.word	.LC0
 12908 0254 00000000 		.word	.LANCHOR2
 12909 0258 00000000 		.word	.LANCHOR3
 12910 025c 00000000 		.word	.LANCHOR4
 12911              	.LVL1222:
 12912              	.L454:
 410:Core/Src/SEGGER_RTT.c ****     }
 12913              		.loc 1 410 13 view .LVU5547
 12914              	.LBE687:
 12915              	.LBE688:
 12916              	.LBE691:
 12917              	.LBE696:
2014:Core/Src/SEGGER_RTT.c ****         Status = -1;
 12918              		.loc 1 2014 7 is_stmt 1 view .LVU5548
2014:Core/Src/SEGGER_RTT.c ****         Status = -1;
 12919              		.loc 1 2014 10 is_stmt 0 view .LVU5549
 12920 0260 BBF1030F 		cmp	fp, #3
 12921 0264 7FF6FBAE 		bls	.L517
2017:Core/Src/SEGGER_RTT.c ****         Status = (int)_WriteBlocking(pRing, s, (FragLen < (Avail - 4u)) ? FragLen : (Avail - 4u));
 12922              		.loc 1 2017 9 is_stmt 1 view .LVU5550
 12923              	.LVL1223:
 12924              	.LBB697:
 12925              	.LBI697:
 504:Core/Src/SEGGER_RTT.c ****   unsigned char ac[2];
 12926              		.loc 1 504 13 view .LVU5551
 12927              	.LBB698:
 505:Core/Src/SEGGER_RTT.c **** 
 12928              		.loc 1 505 3 view .LVU5552
 507:Core/Src/SEGGER_RTT.c ****   ac[1] = _aTerminalId[TerminalId];  // Caller made already sure that TerminalId does not exceed ou
 12929              		.loc 1 507 3 view .LVU5553
 508:Core/Src/SEGGER_RTT.c ****   _WriteBlocking(pRing, (const char*)ac, 2u);
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccs0vIiH.s 			page 347


 12930              		.loc 1 508 23 is_stmt 0 view .LVU5554
 12931 0268 AF4B     		ldr	r3, .L575
 12932 026a 0293     		str	r3, [sp, #8]
 508:Core/Src/SEGGER_RTT.c ****   _WriteBlocking(pRing, (const char*)ac, 2u);
 12933              		.loc 1 508 9 view .LVU5555
 12934 026c 13F80930 		ldrb	r3, [r3, r9]	@ zero_extendqisi2
 12935 0270 8DF81530 		strb	r3, [sp, #21]
 507:Core/Src/SEGGER_RTT.c ****   ac[1] = _aTerminalId[TerminalId];  // Caller made already sure that TerminalId does not exceed ou
 12936              		.loc 1 507 9 view .LVU5556
 12937 0274 FF23     		movs	r3, #255
 12938 0276 8DF81430 		strb	r3, [sp, #20]
 508:Core/Src/SEGGER_RTT.c ****   _WriteBlocking(pRing, (const char*)ac, 2u);
 12939              		.loc 1 508 3 is_stmt 1 view .LVU5557
 509:Core/Src/SEGGER_RTT.c **** }
 12940              		.loc 1 509 3 view .LVU5558
 12941              	.LVL1224:
 12942              	.LBB699:
 12943              	.LBI699:
 374:Core/Src/SEGGER_RTT.c ****   unsigned NumBytesToWrite;
 12944              		.loc 1 374 17 view .LVU5559
 12945              	.LBB700:
 375:Core/Src/SEGGER_RTT.c ****   unsigned NumBytesWritten;
 12946              		.loc 1 375 3 view .LVU5560
 376:Core/Src/SEGGER_RTT.c ****   unsigned RdOff;
 12947              		.loc 1 376 3 view .LVU5561
 377:Core/Src/SEGGER_RTT.c ****   unsigned WrOff;
 12948              		.loc 1 377 3 view .LVU5562
 378:Core/Src/SEGGER_RTT.c ****   volatile char* pDst;
 12949              		.loc 1 378 3 view .LVU5563
 379:Core/Src/SEGGER_RTT.c ****   //
 12950              		.loc 1 379 3 view .LVU5564
 383:Core/Src/SEGGER_RTT.c ****   WrOff = pRing->WrOff;
 12951              		.loc 1 383 3 view .LVU5565
 384:Core/Src/SEGGER_RTT.c ****   do {
 12952              		.loc 1 384 3 view .LVU5566
 384:Core/Src/SEGGER_RTT.c ****   do {
 12953              		.loc 1 384 3 is_stmt 0 view .LVU5567
 12954              	.LBE700:
 12955              	.LBE699:
 12956              	.LBE698:
 12957              	.LBE697:
 12958              	.LBB710:
 12959              	.LBB657:
 537:Core/Src/SEGGER_RTT.c ****   } else {
 12960              		.loc 1 537 14 view .LVU5568
 12961 027a 296A     		ldr	r1, [r5, #32]
 12962 027c 05AB     		add	r3, sp, #20
 12963              	.LVL1225:
 537:Core/Src/SEGGER_RTT.c ****   } else {
 12964              		.loc 1 537 14 view .LVU5569
 12965 027e 0393     		str	r3, [sp, #12]
 12966 0280 0226     		movs	r6, #2
 12967 0282 9946     		mov	r9, r3
 12968              	.LVL1226:
 537:Core/Src/SEGGER_RTT.c ****   } else {
 12969              		.loc 1 537 14 view .LVU5570
 12970              	.LBE657:
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccs0vIiH.s 			page 348


 12971              	.LBE710:
 12972              	.LBB711:
 12973              	.LBB707:
 12974              	.LBB704:
 12975              	.LBB701:
 413:Core/Src/SEGGER_RTT.c ****   } while (NumBytes);
 12976              		.loc 1 413 18 view .LVU5571
 12977 0284 4FF0000A 		mov	r10, #0
 12978              	.LVL1227:
 12979              	.L480:
 385:Core/Src/SEGGER_RTT.c ****     RdOff = pRing->RdOff;                         // May be changed by host (debug probe) in the me
 12980              		.loc 1 385 3 is_stmt 1 view .LVU5572
 386:Core/Src/SEGGER_RTT.c ****     if (RdOff > WrOff) {
 12981              		.loc 1 386 5 view .LVU5573
 388:Core/Src/SEGGER_RTT.c ****     } else {
 12982              		.loc 1 388 7 view .LVU5574
 390:Core/Src/SEGGER_RTT.c ****     }
 12983              		.loc 1 390 7 view .LVU5575
 386:Core/Src/SEGGER_RTT.c ****     if (RdOff > WrOff) {
 12984              		.loc 1 386 11 is_stmt 0 view .LVU5576
 12985 0288 AB6A     		ldr	r3, [r5, #40]
 12986              	.LVL1228:
 387:Core/Src/SEGGER_RTT.c ****       NumBytesToWrite = RdOff - WrOff - 1u;
 12987              		.loc 1 387 5 is_stmt 1 view .LVU5577
 394:Core/Src/SEGGER_RTT.c **** #if SEGGER_RTT_MEMCPY_USE_BYTELOOP
 12988              		.loc 1 394 10 is_stmt 0 view .LVU5578
 12989 028a E869     		ldr	r0, [r5, #28]
 387:Core/Src/SEGGER_RTT.c ****       NumBytesToWrite = RdOff - WrOff - 1u;
 12990              		.loc 1 387 8 view .LVU5579
 12991 028c A342     		cmp	r3, r4
 388:Core/Src/SEGGER_RTT.c ****     } else {
 12992              		.loc 1 388 23 view .LVU5580
 12993 028e 03F1FF32 		add	r2, r3, #-1
 390:Core/Src/SEGGER_RTT.c ****     }
 12994              		.loc 1 390 23 view .LVU5581
 12995 0292 96BF     		itet	ls
 12996 0294 03F1FF33 		addls	r3, r3, #-1
 12997              	.LVL1229:
 388:Core/Src/SEGGER_RTT.c ****     } else {
 12998              		.loc 1 388 23 view .LVU5582
 12999 0298 131B     		subhi	r3, r2, r4
 390:Core/Src/SEGGER_RTT.c ****     }
 13000              		.loc 1 390 23 view .LVU5583
 13001 029a 5B18     		addls	r3, r3, r1
 392:Core/Src/SEGGER_RTT.c ****     NumBytesToWrite = MIN(NumBytesToWrite, NumBytes);
 13002              		.loc 1 392 23 view .LVU5584
 13003 029c A1EB0402 		sub	r2, r1, r4
 390:Core/Src/SEGGER_RTT.c ****     }
 13004              		.loc 1 390 23 view .LVU5585
 13005 02a0 98BF     		it	ls
 13006 02a2 1B1B     		subls	r3, r3, r4
 13007              	.LVL1230:
 392:Core/Src/SEGGER_RTT.c ****     NumBytesToWrite = MIN(NumBytesToWrite, NumBytes);
 13008              		.loc 1 392 5 is_stmt 1 view .LVU5586
 393:Core/Src/SEGGER_RTT.c ****     pDst = (pRing->pBuffer + WrOff) + SEGGER_RTT_UNCACHED_OFF;
 13009              		.loc 1 393 5 view .LVU5587
 393:Core/Src/SEGGER_RTT.c ****     pDst = (pRing->pBuffer + WrOff) + SEGGER_RTT_UNCACHED_OFF;
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccs0vIiH.s 			page 349


 13010              		.loc 1 393 21 is_stmt 0 view .LVU5588
 13011 02a4 B242     		cmp	r2, r6
 13012 02a6 28BF     		it	cs
 13013 02a8 3246     		movcs	r2, r6
 13014              	.LVL1231:
 393:Core/Src/SEGGER_RTT.c ****     pDst = (pRing->pBuffer + WrOff) + SEGGER_RTT_UNCACHED_OFF;
 13015              		.loc 1 393 21 view .LVU5589
 13016 02aa 9A42     		cmp	r2, r3
 13017 02ac 28BF     		it	cs
 13018 02ae 1A46     		movcs	r2, r3
 13019              	.LVL1232:
 394:Core/Src/SEGGER_RTT.c **** #if SEGGER_RTT_MEMCPY_USE_BYTELOOP
 13020              		.loc 1 394 5 is_stmt 1 view .LVU5590
 403:Core/Src/SEGGER_RTT.c ****     NumBytesWritten += NumBytesToWrite;
 13021              		.loc 1 403 5 view .LVU5591
 13022 02b0 4946     		mov	r1, r9
 13023 02b2 2044     		add	r0, r0, r4
 13024              	.LVL1233:
 406:Core/Src/SEGGER_RTT.c ****     WrOff           += NumBytesToWrite;
 13025              		.loc 1 406 21 is_stmt 0 view .LVU5592
 13026 02b4 B61A     		subs	r6, r6, r2
 13027              	.LVL1234:
 407:Core/Src/SEGGER_RTT.c **** #endif
 13028              		.loc 1 407 21 view .LVU5593
 13029 02b6 1444     		add	r4, r4, r2
 13030              	.LVL1235:
 405:Core/Src/SEGGER_RTT.c ****     NumBytes        -= NumBytesToWrite;
 13031              		.loc 1 405 21 view .LVU5594
 13032 02b8 9144     		add	r9, r9, r2
 13033              	.LVL1236:
 403:Core/Src/SEGGER_RTT.c ****     NumBytesWritten += NumBytesToWrite;
 13034              		.loc 1 403 5 view .LVU5595
 13035 02ba FFF7FEFF 		bl	memcpy
 13036              	.LVL1237:
 404:Core/Src/SEGGER_RTT.c ****     pBuffer         += NumBytesToWrite;
 13037              		.loc 1 404 5 is_stmt 1 view .LVU5596
 405:Core/Src/SEGGER_RTT.c ****     NumBytes        -= NumBytesToWrite;
 13038              		.loc 1 405 5 view .LVU5597
 406:Core/Src/SEGGER_RTT.c ****     WrOff           += NumBytesToWrite;
 13039              		.loc 1 406 5 view .LVU5598
 407:Core/Src/SEGGER_RTT.c **** #endif
 13040              		.loc 1 407 5 view .LVU5599
 409:Core/Src/SEGGER_RTT.c ****       WrOff = 0u;
 13041              		.loc 1 409 5 view .LVU5600
 412:Core/Src/SEGGER_RTT.c ****     pRing->WrOff = WrOff;
 13042              		.loc 1 412 5 view .LVU5601
 409:Core/Src/SEGGER_RTT.c ****       WrOff = 0u;
 13043              		.loc 1 409 23 is_stmt 0 view .LVU5602
 13044 02be 296A     		ldr	r1, [r5, #32]
 409:Core/Src/SEGGER_RTT.c ****       WrOff = 0u;
 13045              		.loc 1 409 8 view .LVU5603
 13046 02c0 8C42     		cmp	r4, r1
 13047 02c2 00F0FC80 		beq	.L563
 412:Core/Src/SEGGER_RTT.c ****     pRing->WrOff = WrOff;
 13048              		.loc 1 412 5 view .LVU5604
 13049              		.syntax unified
 13050              	@ 412 "Core/Src/SEGGER_RTT.c" 1
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccs0vIiH.s 			page 350


 13051 02c6 BFF35F8F 		dmb
 13052              	
 13053              	@ 0 "" 2
 412:Core/Src/SEGGER_RTT.c ****     pRing->WrOff = WrOff;
 13054              		.loc 1 412 15 is_stmt 1 view .LVU5605
 413:Core/Src/SEGGER_RTT.c ****   } while (NumBytes);
 13055              		.loc 1 413 5 view .LVU5606
 413:Core/Src/SEGGER_RTT.c ****   } while (NumBytes);
 13056              		.loc 1 413 18 is_stmt 0 view .LVU5607
 13057              		.thumb
 13058              		.syntax unified
 13059 02ca 6C62     		str	r4, [r5, #36]
 414:Core/Src/SEGGER_RTT.c ****   return NumBytesWritten;
 13060              		.loc 1 414 12 is_stmt 1 view .LVU5608
 13061 02cc 002E     		cmp	r6, #0
 13062 02ce DBD1     		bne	.L480
 13063              	.LVL1238:
 13064              	.L479:
 415:Core/Src/SEGGER_RTT.c **** }
 13065              		.loc 1 415 3 view .LVU5609
 415:Core/Src/SEGGER_RTT.c **** }
 13066              		.loc 1 415 3 is_stmt 0 view .LVU5610
 13067              	.LBE701:
 13068              	.LBE704:
 13069              	.LBE707:
 13070              	.LBE711:
2018:Core/Src/SEGGER_RTT.c ****         _PostTerminalSwitch(pRing, _ActiveTerminal);
 13071              		.loc 1 2018 9 is_stmt 1 view .LVU5611
2018:Core/Src/SEGGER_RTT.c ****         _PostTerminalSwitch(pRing, _ActiveTerminal);
 13072              		.loc 1 2018 66 is_stmt 0 view .LVU5612
 13073 02d0 ABF1040B 		sub	fp, fp, #4
 13074              	.LVL1239:
2018:Core/Src/SEGGER_RTT.c ****         _PostTerminalSwitch(pRing, _ActiveTerminal);
 13075              		.loc 1 2018 23 view .LVU5613
 13076 02d4 BB45     		cmp	fp, r7
 13077 02d6 28BF     		it	cs
 13078 02d8 BB46     		movcs	fp, r7
 13079              	.LVL1240:
 13080              	.LBB712:
 13081              	.LBI712:
 374:Core/Src/SEGGER_RTT.c ****   unsigned NumBytesToWrite;
 13082              		.loc 1 374 17 is_stmt 1 view .LVU5614
 13083              	.LBB713:
 375:Core/Src/SEGGER_RTT.c ****   unsigned NumBytesWritten;
 13084              		.loc 1 375 3 view .LVU5615
 376:Core/Src/SEGGER_RTT.c ****   unsigned RdOff;
 13085              		.loc 1 376 3 view .LVU5616
 377:Core/Src/SEGGER_RTT.c ****   unsigned WrOff;
 13086              		.loc 1 377 3 view .LVU5617
 378:Core/Src/SEGGER_RTT.c ****   volatile char* pDst;
 13087              		.loc 1 378 3 view .LVU5618
 379:Core/Src/SEGGER_RTT.c ****   //
 13088              		.loc 1 379 3 view .LVU5619
 383:Core/Src/SEGGER_RTT.c ****   WrOff = pRing->WrOff;
 13089              		.loc 1 383 3 view .LVU5620
 384:Core/Src/SEGGER_RTT.c ****   do {
 13090              		.loc 1 384 3 view .LVU5621
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccs0vIiH.s 			page 351


 383:Core/Src/SEGGER_RTT.c ****   WrOff = pRing->WrOff;
 13091              		.loc 1 383 19 is_stmt 0 view .LVU5622
 13092 02da 0027     		movs	r7, #0
 13093              	.LVL1241:
 413:Core/Src/SEGGER_RTT.c ****   } while (NumBytes);
 13094              		.loc 1 413 18 view .LVU5623
 13095 02dc 3E46     		mov	r6, r7
 13096              	.LVL1242:
 13097              	.L486:
 385:Core/Src/SEGGER_RTT.c ****     RdOff = pRing->RdOff;                         // May be changed by host (debug probe) in the me
 13098              		.loc 1 385 3 is_stmt 1 view .LVU5624
 386:Core/Src/SEGGER_RTT.c ****     if (RdOff > WrOff) {
 13099              		.loc 1 386 5 view .LVU5625
 388:Core/Src/SEGGER_RTT.c ****     } else {
 13100              		.loc 1 388 7 view .LVU5626
 390:Core/Src/SEGGER_RTT.c ****     }
 13101              		.loc 1 390 7 view .LVU5627
 386:Core/Src/SEGGER_RTT.c ****     if (RdOff > WrOff) {
 13102              		.loc 1 386 11 is_stmt 0 view .LVU5628
 13103 02de AB6A     		ldr	r3, [r5, #40]
 13104              	.LVL1243:
 387:Core/Src/SEGGER_RTT.c ****       NumBytesToWrite = RdOff - WrOff - 1u;
 13105              		.loc 1 387 5 is_stmt 1 view .LVU5629
 394:Core/Src/SEGGER_RTT.c **** #if SEGGER_RTT_MEMCPY_USE_BYTELOOP
 13106              		.loc 1 394 10 is_stmt 0 view .LVU5630
 13107 02e0 E869     		ldr	r0, [r5, #28]
 387:Core/Src/SEGGER_RTT.c ****       NumBytesToWrite = RdOff - WrOff - 1u;
 13108              		.loc 1 387 8 view .LVU5631
 13109 02e2 A342     		cmp	r3, r4
 388:Core/Src/SEGGER_RTT.c ****     } else {
 13110              		.loc 1 388 23 view .LVU5632
 13111 02e4 03F1FF32 		add	r2, r3, #-1
 390:Core/Src/SEGGER_RTT.c ****     }
 13112              		.loc 1 390 23 view .LVU5633
 13113 02e8 96BF     		itet	ls
 13114 02ea 03F1FF33 		addls	r3, r3, #-1
 13115              	.LVL1244:
 388:Core/Src/SEGGER_RTT.c ****     } else {
 13116              		.loc 1 388 23 view .LVU5634
 13117 02ee 131B     		subhi	r3, r2, r4
 390:Core/Src/SEGGER_RTT.c ****     }
 13118              		.loc 1 390 23 view .LVU5635
 13119 02f0 5B18     		addls	r3, r3, r1
 392:Core/Src/SEGGER_RTT.c ****     NumBytesToWrite = MIN(NumBytesToWrite, NumBytes);
 13120              		.loc 1 392 23 view .LVU5636
 13121 02f2 A1EB0402 		sub	r2, r1, r4
 390:Core/Src/SEGGER_RTT.c ****     }
 13122              		.loc 1 390 23 view .LVU5637
 13123 02f6 98BF     		it	ls
 13124 02f8 1B1B     		subls	r3, r3, r4
 13125              	.LVL1245:
 392:Core/Src/SEGGER_RTT.c ****     NumBytesToWrite = MIN(NumBytesToWrite, NumBytes);
 13126              		.loc 1 392 5 is_stmt 1 view .LVU5638
 393:Core/Src/SEGGER_RTT.c ****     pDst = (pRing->pBuffer + WrOff) + SEGGER_RTT_UNCACHED_OFF;
 13127              		.loc 1 393 5 view .LVU5639
 393:Core/Src/SEGGER_RTT.c ****     pDst = (pRing->pBuffer + WrOff) + SEGGER_RTT_UNCACHED_OFF;
 13128              		.loc 1 393 21 is_stmt 0 view .LVU5640
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccs0vIiH.s 			page 352


 13129 02fa 5A45     		cmp	r2, fp
 13130 02fc 28BF     		it	cs
 13131 02fe 5A46     		movcs	r2, fp
 13132              	.LVL1246:
 393:Core/Src/SEGGER_RTT.c ****     pDst = (pRing->pBuffer + WrOff) + SEGGER_RTT_UNCACHED_OFF;
 13133              		.loc 1 393 21 view .LVU5641
 13134 0300 9A42     		cmp	r2, r3
 13135 0302 28BF     		it	cs
 13136 0304 1A46     		movcs	r2, r3
 13137              	.LVL1247:
 394:Core/Src/SEGGER_RTT.c **** #if SEGGER_RTT_MEMCPY_USE_BYTELOOP
 13138              		.loc 1 394 5 is_stmt 1 view .LVU5642
 403:Core/Src/SEGGER_RTT.c ****     NumBytesWritten += NumBytesToWrite;
 13139              		.loc 1 403 5 view .LVU5643
 13140 0306 4146     		mov	r1, r8
 13141 0308 2044     		add	r0, r0, r4
 13142              	.LVL1248:
 404:Core/Src/SEGGER_RTT.c ****     pBuffer         += NumBytesToWrite;
 13143              		.loc 1 404 21 is_stmt 0 view .LVU5644
 13144 030a 1744     		add	r7, r7, r2
 407:Core/Src/SEGGER_RTT.c **** #endif
 13145              		.loc 1 407 21 view .LVU5645
 13146 030c 1444     		add	r4, r4, r2
 13147              	.LVL1249:
 406:Core/Src/SEGGER_RTT.c ****     WrOff           += NumBytesToWrite;
 13148              		.loc 1 406 21 view .LVU5646
 13149 030e ABEB020B 		sub	fp, fp, r2
 13150              	.LVL1250:
 405:Core/Src/SEGGER_RTT.c ****     NumBytes        -= NumBytesToWrite;
 13151              		.loc 1 405 21 view .LVU5647
 13152 0312 9044     		add	r8, r8, r2
 13153              	.LVL1251:
 403:Core/Src/SEGGER_RTT.c ****     NumBytesWritten += NumBytesToWrite;
 13154              		.loc 1 403 5 view .LVU5648
 13155 0314 FFF7FEFF 		bl	memcpy
 13156              	.LVL1252:
 404:Core/Src/SEGGER_RTT.c ****     pBuffer         += NumBytesToWrite;
 13157              		.loc 1 404 5 is_stmt 1 view .LVU5649
 405:Core/Src/SEGGER_RTT.c ****     NumBytes        -= NumBytesToWrite;
 13158              		.loc 1 405 5 view .LVU5650
 406:Core/Src/SEGGER_RTT.c ****     WrOff           += NumBytesToWrite;
 13159              		.loc 1 406 5 view .LVU5651
 407:Core/Src/SEGGER_RTT.c **** #endif
 13160              		.loc 1 407 5 view .LVU5652
 409:Core/Src/SEGGER_RTT.c ****       WrOff = 0u;
 13161              		.loc 1 409 5 view .LVU5653
 412:Core/Src/SEGGER_RTT.c ****     pRing->WrOff = WrOff;
 13162              		.loc 1 412 5 view .LVU5654
 409:Core/Src/SEGGER_RTT.c ****       WrOff = 0u;
 13163              		.loc 1 409 23 is_stmt 0 view .LVU5655
 13164 0318 296A     		ldr	r1, [r5, #32]
 409:Core/Src/SEGGER_RTT.c ****       WrOff = 0u;
 13165              		.loc 1 409 8 view .LVU5656
 13166 031a 8C42     		cmp	r4, r1
 13167 031c 00F0C780 		beq	.L564
 412:Core/Src/SEGGER_RTT.c ****     pRing->WrOff = WrOff;
 13168              		.loc 1 412 5 view .LVU5657
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccs0vIiH.s 			page 353


 13169              		.syntax unified
 13170              	@ 412 "Core/Src/SEGGER_RTT.c" 1
 13171 0320 BFF35F8F 		dmb
 13172              	
 13173              	@ 0 "" 2
 412:Core/Src/SEGGER_RTT.c ****     pRing->WrOff = WrOff;
 13174              		.loc 1 412 15 is_stmt 1 view .LVU5658
 413:Core/Src/SEGGER_RTT.c ****   } while (NumBytes);
 13175              		.loc 1 413 5 view .LVU5659
 413:Core/Src/SEGGER_RTT.c ****   } while (NumBytes);
 13176              		.loc 1 413 18 is_stmt 0 view .LVU5660
 13177              		.thumb
 13178              		.syntax unified
 13179 0324 6C62     		str	r4, [r5, #36]
 414:Core/Src/SEGGER_RTT.c ****   return NumBytesWritten;
 13180              		.loc 1 414 12 is_stmt 1 view .LVU5661
 13181 0326 BBF1000F 		cmp	fp, #0
 13182 032a D8D1     		bne	.L486
 13183              	.LVL1253:
 13184              	.L485:
 415:Core/Src/SEGGER_RTT.c **** }
 13185              		.loc 1 415 3 view .LVU5662
 415:Core/Src/SEGGER_RTT.c **** }
 13186              		.loc 1 415 3 is_stmt 0 view .LVU5663
 13187              	.LBE713:
 13188              	.LBE712:
2019:Core/Src/SEGGER_RTT.c ****       }
 13189              		.loc 1 2019 9 is_stmt 1 view .LVU5664
 13190 032c 7F4B     		ldr	r3, .L575+4
 13191              	.LBB716:
 13192              	.LBB717:
 508:Core/Src/SEGGER_RTT.c ****   _WriteBlocking(pRing, (const char*)ac, 2u);
 13193              		.loc 1 508 9 is_stmt 0 view .LVU5665
 13194 032e 029A     		ldr	r2, [sp, #8]
 13195              	.LBE717:
 13196              	.LBE716:
2019:Core/Src/SEGGER_RTT.c ****       }
 13197              		.loc 1 2019 9 view .LVU5666
 13198 0330 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 13199              	.LVL1254:
 13200              	.LBB726:
 13201              	.LBI716:
 504:Core/Src/SEGGER_RTT.c ****   unsigned char ac[2];
 13202              		.loc 1 504 13 is_stmt 1 view .LVU5667
 13203              	.LBB724:
 505:Core/Src/SEGGER_RTT.c **** 
 13204              		.loc 1 505 3 view .LVU5668
 507:Core/Src/SEGGER_RTT.c ****   ac[1] = _aTerminalId[TerminalId];  // Caller made already sure that TerminalId does not exceed ou
 13205              		.loc 1 507 3 view .LVU5669
 508:Core/Src/SEGGER_RTT.c ****   _WriteBlocking(pRing, (const char*)ac, 2u);
 13206              		.loc 1 508 9 is_stmt 0 view .LVU5670
 13207 0332 DDF80C90 		ldr	r9, [sp, #12]
 13208 0336 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 13209 0338 8DF81530 		strb	r3, [sp, #21]
 507:Core/Src/SEGGER_RTT.c ****   ac[1] = _aTerminalId[TerminalId];  // Caller made already sure that TerminalId does not exceed ou
 13210              		.loc 1 507 9 view .LVU5671
 13211 033c FF23     		movs	r3, #255
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccs0vIiH.s 			page 354


 13212 033e 8DF81430 		strb	r3, [sp, #20]
 508:Core/Src/SEGGER_RTT.c ****   _WriteBlocking(pRing, (const char*)ac, 2u);
 13213              		.loc 1 508 3 is_stmt 1 view .LVU5672
 509:Core/Src/SEGGER_RTT.c **** }
 13214              		.loc 1 509 3 view .LVU5673
 13215              	.LVL1255:
 13216              	.LBB718:
 13217              	.LBI718:
 374:Core/Src/SEGGER_RTT.c ****   unsigned NumBytesToWrite;
 13218              		.loc 1 374 17 view .LVU5674
 13219              	.LBB719:
 375:Core/Src/SEGGER_RTT.c ****   unsigned NumBytesWritten;
 13220              		.loc 1 375 3 view .LVU5675
 376:Core/Src/SEGGER_RTT.c ****   unsigned RdOff;
 13221              		.loc 1 376 3 view .LVU5676
 377:Core/Src/SEGGER_RTT.c ****   unsigned WrOff;
 13222              		.loc 1 377 3 view .LVU5677
 378:Core/Src/SEGGER_RTT.c ****   volatile char* pDst;
 13223              		.loc 1 378 3 view .LVU5678
 379:Core/Src/SEGGER_RTT.c ****   //
 13224              		.loc 1 379 3 view .LVU5679
 383:Core/Src/SEGGER_RTT.c ****   WrOff = pRing->WrOff;
 13225              		.loc 1 383 3 view .LVU5680
 384:Core/Src/SEGGER_RTT.c ****   do {
 13226              		.loc 1 384 3 view .LVU5681
 384:Core/Src/SEGGER_RTT.c ****   do {
 13227              		.loc 1 384 3 is_stmt 0 view .LVU5682
 13228              	.LBE719:
 13229              	.LBE718:
 508:Core/Src/SEGGER_RTT.c ****   _WriteBlocking(pRing, (const char*)ac, 2u);
 13230              		.loc 1 508 9 view .LVU5683
 13231 0342 4FF00208 		mov	r8, #2
 13232              	.LBB722:
 13233              	.LBB720:
 413:Core/Src/SEGGER_RTT.c ****   } while (NumBytes);
 13234              		.loc 1 413 18 view .LVU5684
 13235 0346 0026     		movs	r6, #0
 13236              	.LVL1256:
 13237              	.L492:
 385:Core/Src/SEGGER_RTT.c ****     RdOff = pRing->RdOff;                         // May be changed by host (debug probe) in the me
 13238              		.loc 1 385 3 is_stmt 1 view .LVU5685
 386:Core/Src/SEGGER_RTT.c ****     if (RdOff > WrOff) {
 13239              		.loc 1 386 5 view .LVU5686
 388:Core/Src/SEGGER_RTT.c ****     } else {
 13240              		.loc 1 388 7 view .LVU5687
 390:Core/Src/SEGGER_RTT.c ****     }
 13241              		.loc 1 390 7 view .LVU5688
 386:Core/Src/SEGGER_RTT.c ****     if (RdOff > WrOff) {
 13242              		.loc 1 386 11 is_stmt 0 view .LVU5689
 13243 0348 AB6A     		ldr	r3, [r5, #40]
 13244              	.LVL1257:
 387:Core/Src/SEGGER_RTT.c ****       NumBytesToWrite = RdOff - WrOff - 1u;
 13245              		.loc 1 387 5 is_stmt 1 view .LVU5690
 394:Core/Src/SEGGER_RTT.c **** #if SEGGER_RTT_MEMCPY_USE_BYTELOOP
 13246              		.loc 1 394 10 is_stmt 0 view .LVU5691
 13247 034a E869     		ldr	r0, [r5, #28]
 387:Core/Src/SEGGER_RTT.c ****       NumBytesToWrite = RdOff - WrOff - 1u;
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccs0vIiH.s 			page 355


 13248              		.loc 1 387 8 view .LVU5692
 13249 034c A342     		cmp	r3, r4
 388:Core/Src/SEGGER_RTT.c ****     } else {
 13250              		.loc 1 388 23 view .LVU5693
 13251 034e 03F1FF32 		add	r2, r3, #-1
 390:Core/Src/SEGGER_RTT.c ****     }
 13252              		.loc 1 390 23 view .LVU5694
 13253 0352 96BF     		itet	ls
 13254 0354 03F1FF33 		addls	r3, r3, #-1
 13255              	.LVL1258:
 388:Core/Src/SEGGER_RTT.c ****     } else {
 13256              		.loc 1 388 23 view .LVU5695
 13257 0358 131B     		subhi	r3, r2, r4
 390:Core/Src/SEGGER_RTT.c ****     }
 13258              		.loc 1 390 23 view .LVU5696
 13259 035a 5B18     		addls	r3, r3, r1
 392:Core/Src/SEGGER_RTT.c ****     NumBytesToWrite = MIN(NumBytesToWrite, NumBytes);
 13260              		.loc 1 392 23 view .LVU5697
 13261 035c A1EB0402 		sub	r2, r1, r4
 390:Core/Src/SEGGER_RTT.c ****     }
 13262              		.loc 1 390 23 view .LVU5698
 13263 0360 98BF     		it	ls
 13264 0362 1B1B     		subls	r3, r3, r4
 13265              	.LVL1259:
 392:Core/Src/SEGGER_RTT.c ****     NumBytesToWrite = MIN(NumBytesToWrite, NumBytes);
 13266              		.loc 1 392 5 is_stmt 1 view .LVU5699
 393:Core/Src/SEGGER_RTT.c ****     pDst = (pRing->pBuffer + WrOff) + SEGGER_RTT_UNCACHED_OFF;
 13267              		.loc 1 393 5 view .LVU5700
 393:Core/Src/SEGGER_RTT.c ****     pDst = (pRing->pBuffer + WrOff) + SEGGER_RTT_UNCACHED_OFF;
 13268              		.loc 1 393 21 is_stmt 0 view .LVU5701
 13269 0364 4245     		cmp	r2, r8
 13270 0366 28BF     		it	cs
 13271 0368 4246     		movcs	r2, r8
 13272              	.LVL1260:
 393:Core/Src/SEGGER_RTT.c ****     pDst = (pRing->pBuffer + WrOff) + SEGGER_RTT_UNCACHED_OFF;
 13273              		.loc 1 393 21 view .LVU5702
 13274 036a 9A42     		cmp	r2, r3
 13275 036c 28BF     		it	cs
 13276 036e 1A46     		movcs	r2, r3
 13277              	.LVL1261:
 394:Core/Src/SEGGER_RTT.c **** #if SEGGER_RTT_MEMCPY_USE_BYTELOOP
 13278              		.loc 1 394 5 is_stmt 1 view .LVU5703
 403:Core/Src/SEGGER_RTT.c ****     NumBytesWritten += NumBytesToWrite;
 13279              		.loc 1 403 5 view .LVU5704
 13280 0370 4946     		mov	r1, r9
 13281 0372 2044     		add	r0, r0, r4
 13282              	.LVL1262:
 406:Core/Src/SEGGER_RTT.c ****     WrOff           += NumBytesToWrite;
 13283              		.loc 1 406 21 is_stmt 0 view .LVU5705
 13284 0374 A8EB0208 		sub	r8, r8, r2
 13285              	.LVL1263:
 407:Core/Src/SEGGER_RTT.c **** #endif
 13286              		.loc 1 407 21 view .LVU5706
 13287 0378 1444     		add	r4, r4, r2
 13288              	.LVL1264:
 405:Core/Src/SEGGER_RTT.c ****     NumBytes        -= NumBytesToWrite;
 13289              		.loc 1 405 21 view .LVU5707
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccs0vIiH.s 			page 356


 13290 037a 9144     		add	r9, r9, r2
 13291              	.LVL1265:
 403:Core/Src/SEGGER_RTT.c ****     NumBytesWritten += NumBytesToWrite;
 13292              		.loc 1 403 5 view .LVU5708
 13293 037c FFF7FEFF 		bl	memcpy
 13294              	.LVL1266:
 404:Core/Src/SEGGER_RTT.c ****     pBuffer         += NumBytesToWrite;
 13295              		.loc 1 404 5 is_stmt 1 view .LVU5709
 405:Core/Src/SEGGER_RTT.c ****     NumBytes        -= NumBytesToWrite;
 13296              		.loc 1 405 5 view .LVU5710
 406:Core/Src/SEGGER_RTT.c ****     WrOff           += NumBytesToWrite;
 13297              		.loc 1 406 5 view .LVU5711
 407:Core/Src/SEGGER_RTT.c **** #endif
 13298              		.loc 1 407 5 view .LVU5712
 409:Core/Src/SEGGER_RTT.c ****       WrOff = 0u;
 13299              		.loc 1 409 5 view .LVU5713
 412:Core/Src/SEGGER_RTT.c ****     pRing->WrOff = WrOff;
 13300              		.loc 1 412 5 view .LVU5714
 409:Core/Src/SEGGER_RTT.c ****       WrOff = 0u;
 13301              		.loc 1 409 23 is_stmt 0 view .LVU5715
 13302 0380 296A     		ldr	r1, [r5, #32]
 409:Core/Src/SEGGER_RTT.c ****       WrOff = 0u;
 13303              		.loc 1 409 8 view .LVU5716
 13304 0382 8C42     		cmp	r4, r1
 13305 0384 00F0B880 		beq	.L565
 412:Core/Src/SEGGER_RTT.c ****     pRing->WrOff = WrOff;
 13306              		.loc 1 412 5 view .LVU5717
 13307              		.syntax unified
 13308              	@ 412 "Core/Src/SEGGER_RTT.c" 1
 13309 0388 BFF35F8F 		dmb
 13310              	
 13311              	@ 0 "" 2
 412:Core/Src/SEGGER_RTT.c ****     pRing->WrOff = WrOff;
 13312              		.loc 1 412 15 is_stmt 1 view .LVU5718
 413:Core/Src/SEGGER_RTT.c ****   } while (NumBytes);
 13313              		.loc 1 413 5 view .LVU5719
 413:Core/Src/SEGGER_RTT.c ****   } while (NumBytes);
 13314              		.loc 1 413 18 is_stmt 0 view .LVU5720
 13315              		.thumb
 13316              		.syntax unified
 13317 038c 6C62     		str	r4, [r5, #36]
 414:Core/Src/SEGGER_RTT.c ****   return NumBytesWritten;
 13318              		.loc 1 414 12 is_stmt 1 view .LVU5721
 13319 038e B8F1000F 		cmp	r8, #0
 13320 0392 D9D1     		bne	.L492
 13321 0394 65E6     		b	.L456
 13322              	.LVL1267:
 13323              	.L557:
 414:Core/Src/SEGGER_RTT.c ****   return NumBytesWritten;
 13324              		.loc 1 414 12 is_stmt 0 view .LVU5722
 13325              	.LBE720:
 13326              	.LBE722:
 13327              	.LBE724:
 13328              	.LBE726:
2003:Core/Src/SEGGER_RTT.c ****         Status = (int)_WriteBlocking(pRing, s, FragLen);
 13329              		.loc 1 2003 9 is_stmt 1 view .LVU5723
 13330              	.LBB727:
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccs0vIiH.s 			page 357


 13331              	.LBI727:
 504:Core/Src/SEGGER_RTT.c ****   unsigned char ac[2];
 13332              		.loc 1 504 13 view .LVU5724
 13333              	.LBB728:
 505:Core/Src/SEGGER_RTT.c **** 
 13334              		.loc 1 505 3 view .LVU5725
 507:Core/Src/SEGGER_RTT.c ****   ac[1] = _aTerminalId[TerminalId];  // Caller made already sure that TerminalId does not exceed ou
 13335              		.loc 1 507 3 view .LVU5726
 508:Core/Src/SEGGER_RTT.c ****   _WriteBlocking(pRing, (const char*)ac, 2u);
 13336              		.loc 1 508 23 is_stmt 0 view .LVU5727
 13337 0396 644B     		ldr	r3, .L575
 13338 0398 0293     		str	r3, [sp, #8]
 508:Core/Src/SEGGER_RTT.c ****   _WriteBlocking(pRing, (const char*)ac, 2u);
 13339              		.loc 1 508 9 view .LVU5728
 13340 039a 13F80930 		ldrb	r3, [r3, r9]	@ zero_extendqisi2
 13341 039e 8DF81530 		strb	r3, [sp, #21]
 507:Core/Src/SEGGER_RTT.c ****   ac[1] = _aTerminalId[TerminalId];  // Caller made already sure that TerminalId does not exceed ou
 13342              		.loc 1 507 9 view .LVU5729
 13343 03a2 FF23     		movs	r3, #255
 13344 03a4 8DF81430 		strb	r3, [sp, #20]
 508:Core/Src/SEGGER_RTT.c ****   _WriteBlocking(pRing, (const char*)ac, 2u);
 13345              		.loc 1 508 3 is_stmt 1 view .LVU5730
 509:Core/Src/SEGGER_RTT.c **** }
 13346              		.loc 1 509 3 view .LVU5731
 13347              	.LVL1268:
 13348              	.LBB729:
 13349              	.LBI729:
 374:Core/Src/SEGGER_RTT.c ****   unsigned NumBytesToWrite;
 13350              		.loc 1 374 17 view .LVU5732
 13351              	.LBB730:
 375:Core/Src/SEGGER_RTT.c ****   unsigned NumBytesWritten;
 13352              		.loc 1 375 3 view .LVU5733
 376:Core/Src/SEGGER_RTT.c ****   unsigned RdOff;
 13353              		.loc 1 376 3 view .LVU5734
 377:Core/Src/SEGGER_RTT.c ****   unsigned WrOff;
 13354              		.loc 1 377 3 view .LVU5735
 378:Core/Src/SEGGER_RTT.c ****   volatile char* pDst;
 13355              		.loc 1 378 3 view .LVU5736
 379:Core/Src/SEGGER_RTT.c ****   //
 13356              		.loc 1 379 3 view .LVU5737
 383:Core/Src/SEGGER_RTT.c ****   WrOff = pRing->WrOff;
 13357              		.loc 1 383 3 view .LVU5738
 384:Core/Src/SEGGER_RTT.c ****   do {
 13358              		.loc 1 384 3 view .LVU5739
 384:Core/Src/SEGGER_RTT.c ****   do {
 13359              		.loc 1 384 3 is_stmt 0 view .LVU5740
 13360              	.LBE730:
 13361              	.LBE729:
 13362              	.LBE728:
 13363              	.LBE727:
 13364              	.LBB743:
 13365              	.LBB658:
 537:Core/Src/SEGGER_RTT.c ****   } else {
 13366              		.loc 1 537 14 view .LVU5741
 13367 03a8 05AB     		add	r3, sp, #20
 13368              	.LVL1269:
 537:Core/Src/SEGGER_RTT.c ****   } else {
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccs0vIiH.s 			page 358


 13369              		.loc 1 537 14 view .LVU5742
 13370 03aa 1A46     		mov	r2, r3
 13371 03ac 0393     		str	r3, [sp, #12]
 13372 03ae 2B6A     		ldr	r3, [r5, #32]
 13373              	.LVL1270:
 537:Core/Src/SEGGER_RTT.c ****   } else {
 13374              		.loc 1 537 14 view .LVU5743
 13375              	.LBE658:
 13376              	.LBE743:
 13377              	.LBB744:
 13378              	.LBB739:
 13379              	.LBB735:
 13380              	.LBB731:
 413:Core/Src/SEGGER_RTT.c ****   } while (NumBytes);
 13381              		.loc 1 413 18 view .LVU5744
 13382 03b0 B246     		mov	r10, r6
 13383              	.LBE731:
 13384              	.LBE735:
 13385              	.LBE739:
 13386              	.LBE744:
 13387              	.LBB745:
 13388              	.LBB659:
 537:Core/Src/SEGGER_RTT.c ****   } else {
 13389              		.loc 1 537 14 view .LVU5745
 13390 03b2 9346     		mov	fp, r2
 13391              	.LVL1271:
 537:Core/Src/SEGGER_RTT.c ****   } else {
 13392              		.loc 1 537 14 view .LVU5746
 13393 03b4 0226     		movs	r6, #2
 13394              	.LVL1272:
 13395              	.L462:
 537:Core/Src/SEGGER_RTT.c ****   } else {
 13396              		.loc 1 537 14 view .LVU5747
 13397              	.LBE659:
 13398              	.LBE745:
 13399              	.LBB746:
 13400              	.LBB740:
 13401              	.LBB736:
 13402              	.LBB732:
 385:Core/Src/SEGGER_RTT.c ****     RdOff = pRing->RdOff;                         // May be changed by host (debug probe) in the me
 13403              		.loc 1 385 3 is_stmt 1 view .LVU5748
 386:Core/Src/SEGGER_RTT.c ****     if (RdOff > WrOff) {
 13404              		.loc 1 386 5 view .LVU5749
 388:Core/Src/SEGGER_RTT.c ****     } else {
 13405              		.loc 1 388 7 view .LVU5750
 390:Core/Src/SEGGER_RTT.c ****     }
 13406              		.loc 1 390 7 view .LVU5751
 386:Core/Src/SEGGER_RTT.c ****     if (RdOff > WrOff) {
 13407              		.loc 1 386 11 is_stmt 0 view .LVU5752
 13408 03b6 AA6A     		ldr	r2, [r5, #40]
 13409              	.LVL1273:
 387:Core/Src/SEGGER_RTT.c ****       NumBytesToWrite = RdOff - WrOff - 1u;
 13410              		.loc 1 387 5 is_stmt 1 view .LVU5753
 394:Core/Src/SEGGER_RTT.c **** #if SEGGER_RTT_MEMCPY_USE_BYTELOOP
 13411              		.loc 1 394 10 is_stmt 0 view .LVU5754
 13412 03b8 E869     		ldr	r0, [r5, #28]
 387:Core/Src/SEGGER_RTT.c ****       NumBytesToWrite = RdOff - WrOff - 1u;
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccs0vIiH.s 			page 359


 13413              		.loc 1 387 8 view .LVU5755
 13414 03ba A242     		cmp	r2, r4
 388:Core/Src/SEGGER_RTT.c ****     } else {
 13415              		.loc 1 388 23 view .LVU5756
 13416 03bc 02F1FF31 		add	r1, r2, #-1
 390:Core/Src/SEGGER_RTT.c ****     }
 13417              		.loc 1 390 23 view .LVU5757
 13418 03c0 98BF     		it	ls
 13419 03c2 02F1FF31 		addls	r1, r2, #-1
 392:Core/Src/SEGGER_RTT.c ****     NumBytesToWrite = MIN(NumBytesToWrite, NumBytes);
 13420              		.loc 1 392 23 view .LVU5758
 13421 03c6 A3EB0402 		sub	r2, r3, r4
 13422              	.LVL1274:
 390:Core/Src/SEGGER_RTT.c ****     }
 13423              		.loc 1 390 23 view .LVU5759
 13424 03ca 98BF     		it	ls
 13425 03cc C918     		addls	r1, r1, r3
 393:Core/Src/SEGGER_RTT.c ****     pDst = (pRing->pBuffer + WrOff) + SEGGER_RTT_UNCACHED_OFF;
 13426              		.loc 1 393 21 view .LVU5760
 13427 03ce B242     		cmp	r2, r6
 13428 03d0 28BF     		it	cs
 13429 03d2 3246     		movcs	r2, r6
 390:Core/Src/SEGGER_RTT.c ****     }
 13430              		.loc 1 390 23 view .LVU5761
 13431 03d4 091B     		subs	r1, r1, r4
 13432              	.LVL1275:
 392:Core/Src/SEGGER_RTT.c ****     NumBytesToWrite = MIN(NumBytesToWrite, NumBytes);
 13433              		.loc 1 392 5 is_stmt 1 view .LVU5762
 393:Core/Src/SEGGER_RTT.c ****     pDst = (pRing->pBuffer + WrOff) + SEGGER_RTT_UNCACHED_OFF;
 13434              		.loc 1 393 5 view .LVU5763
 393:Core/Src/SEGGER_RTT.c ****     pDst = (pRing->pBuffer + WrOff) + SEGGER_RTT_UNCACHED_OFF;
 13435              		.loc 1 393 21 is_stmt 0 view .LVU5764
 13436 03d6 8A42     		cmp	r2, r1
 13437 03d8 28BF     		it	cs
 13438 03da 0A46     		movcs	r2, r1
 13439              	.LVL1276:
 394:Core/Src/SEGGER_RTT.c **** #if SEGGER_RTT_MEMCPY_USE_BYTELOOP
 13440              		.loc 1 394 5 is_stmt 1 view .LVU5765
 403:Core/Src/SEGGER_RTT.c ****     NumBytesWritten += NumBytesToWrite;
 13441              		.loc 1 403 5 view .LVU5766
 13442 03dc 2044     		add	r0, r0, r4
 13443              	.LVL1277:
 403:Core/Src/SEGGER_RTT.c ****     NumBytesWritten += NumBytesToWrite;
 13444              		.loc 1 403 5 is_stmt 0 view .LVU5767
 13445 03de 5946     		mov	r1, fp
 407:Core/Src/SEGGER_RTT.c **** #endif
 13446              		.loc 1 407 21 view .LVU5768
 13447 03e0 1444     		add	r4, r4, r2
 13448              	.LVL1278:
 406:Core/Src/SEGGER_RTT.c ****     WrOff           += NumBytesToWrite;
 13449              		.loc 1 406 21 view .LVU5769
 13450 03e2 B61A     		subs	r6, r6, r2
 13451              	.LVL1279:
 405:Core/Src/SEGGER_RTT.c ****     NumBytes        -= NumBytesToWrite;
 13452              		.loc 1 405 21 view .LVU5770
 13453 03e4 9344     		add	fp, fp, r2
 13454              	.LVL1280:
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccs0vIiH.s 			page 360


 403:Core/Src/SEGGER_RTT.c ****     NumBytesWritten += NumBytesToWrite;
 13455              		.loc 1 403 5 view .LVU5771
 13456 03e6 FFF7FEFF 		bl	memcpy
 13457              	.LVL1281:
 404:Core/Src/SEGGER_RTT.c ****     pBuffer         += NumBytesToWrite;
 13458              		.loc 1 404 5 is_stmt 1 view .LVU5772
 405:Core/Src/SEGGER_RTT.c ****     NumBytes        -= NumBytesToWrite;
 13459              		.loc 1 405 5 view .LVU5773
 406:Core/Src/SEGGER_RTT.c ****     WrOff           += NumBytesToWrite;
 13460              		.loc 1 406 5 view .LVU5774
 407:Core/Src/SEGGER_RTT.c **** #endif
 13461              		.loc 1 407 5 view .LVU5775
 409:Core/Src/SEGGER_RTT.c ****       WrOff = 0u;
 13462              		.loc 1 409 5 view .LVU5776
 412:Core/Src/SEGGER_RTT.c ****     pRing->WrOff = WrOff;
 13463              		.loc 1 412 5 view .LVU5777
 409:Core/Src/SEGGER_RTT.c ****       WrOff = 0u;
 13464              		.loc 1 409 23 is_stmt 0 view .LVU5778
 13465 03ea 2B6A     		ldr	r3, [r5, #32]
 409:Core/Src/SEGGER_RTT.c ****       WrOff = 0u;
 13466              		.loc 1 409 8 view .LVU5779
 13467 03ec 9C42     		cmp	r4, r3
 13468 03ee 76D0     		beq	.L566
 412:Core/Src/SEGGER_RTT.c ****     pRing->WrOff = WrOff;
 13469              		.loc 1 412 5 view .LVU5780
 13470              		.syntax unified
 13471              	@ 412 "Core/Src/SEGGER_RTT.c" 1
 13472 03f0 BFF35F8F 		dmb
 13473              	
 13474              	@ 0 "" 2
 412:Core/Src/SEGGER_RTT.c ****     pRing->WrOff = WrOff;
 13475              		.loc 1 412 15 is_stmt 1 view .LVU5781
 413:Core/Src/SEGGER_RTT.c ****   } while (NumBytes);
 13476              		.loc 1 413 5 view .LVU5782
 413:Core/Src/SEGGER_RTT.c ****   } while (NumBytes);
 13477              		.loc 1 413 18 is_stmt 0 view .LVU5783
 13478              		.thumb
 13479              		.syntax unified
 13480 03f4 6C62     		str	r4, [r5, #36]
 414:Core/Src/SEGGER_RTT.c ****   return NumBytesWritten;
 13481              		.loc 1 414 12 is_stmt 1 view .LVU5784
 13482 03f6 002E     		cmp	r6, #0
 13483 03f8 DDD1     		bne	.L462
 13484              	.LVL1282:
 13485              	.L461:
 415:Core/Src/SEGGER_RTT.c **** }
 13486              		.loc 1 415 3 view .LVU5785
 415:Core/Src/SEGGER_RTT.c **** }
 13487              		.loc 1 415 3 is_stmt 0 view .LVU5786
 13488              	.LBE732:
 13489              	.LBE736:
 13490              	.LBE740:
 13491              	.LBE746:
2004:Core/Src/SEGGER_RTT.c ****         _PostTerminalSwitch(pRing, _ActiveTerminal);
 13492              		.loc 1 2004 9 is_stmt 1 view .LVU5787
 13493              	.LBB747:
 13494              	.LBI747:
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccs0vIiH.s 			page 361


 374:Core/Src/SEGGER_RTT.c ****   unsigned NumBytesToWrite;
 13495              		.loc 1 374 17 view .LVU5788
 13496              	.LBB748:
 375:Core/Src/SEGGER_RTT.c ****   unsigned NumBytesWritten;
 13497              		.loc 1 375 3 view .LVU5789
 376:Core/Src/SEGGER_RTT.c ****   unsigned RdOff;
 13498              		.loc 1 376 3 view .LVU5790
 377:Core/Src/SEGGER_RTT.c ****   unsigned WrOff;
 13499              		.loc 1 377 3 view .LVU5791
 378:Core/Src/SEGGER_RTT.c ****   volatile char* pDst;
 13500              		.loc 1 378 3 view .LVU5792
 379:Core/Src/SEGGER_RTT.c ****   //
 13501              		.loc 1 379 3 view .LVU5793
 383:Core/Src/SEGGER_RTT.c ****   WrOff = pRing->WrOff;
 13502              		.loc 1 383 3 view .LVU5794
 384:Core/Src/SEGGER_RTT.c ****   do {
 13503              		.loc 1 384 3 view .LVU5795
 383:Core/Src/SEGGER_RTT.c ****   WrOff = pRing->WrOff;
 13504              		.loc 1 383 19 is_stmt 0 view .LVU5796
 13505 03fa 4FF0000B 		mov	fp, #0
 413:Core/Src/SEGGER_RTT.c ****   } while (NumBytes);
 13506              		.loc 1 413 18 view .LVU5797
 13507 03fe 5E46     		mov	r6, fp
 13508              	.LVL1283:
 13509              	.L468:
 385:Core/Src/SEGGER_RTT.c ****     RdOff = pRing->RdOff;                         // May be changed by host (debug probe) in the me
 13510              		.loc 1 385 3 is_stmt 1 view .LVU5798
 386:Core/Src/SEGGER_RTT.c ****     if (RdOff > WrOff) {
 13511              		.loc 1 386 5 view .LVU5799
 388:Core/Src/SEGGER_RTT.c ****     } else {
 13512              		.loc 1 388 7 view .LVU5800
 390:Core/Src/SEGGER_RTT.c ****     }
 13513              		.loc 1 390 7 view .LVU5801
 386:Core/Src/SEGGER_RTT.c ****     if (RdOff > WrOff) {
 13514              		.loc 1 386 11 is_stmt 0 view .LVU5802
 13515 0400 AA6A     		ldr	r2, [r5, #40]
 13516              	.LVL1284:
 387:Core/Src/SEGGER_RTT.c ****       NumBytesToWrite = RdOff - WrOff - 1u;
 13517              		.loc 1 387 5 is_stmt 1 view .LVU5803
 394:Core/Src/SEGGER_RTT.c **** #if SEGGER_RTT_MEMCPY_USE_BYTELOOP
 13518              		.loc 1 394 10 is_stmt 0 view .LVU5804
 13519 0402 E869     		ldr	r0, [r5, #28]
 387:Core/Src/SEGGER_RTT.c ****       NumBytesToWrite = RdOff - WrOff - 1u;
 13520              		.loc 1 387 8 view .LVU5805
 13521 0404 A242     		cmp	r2, r4
 388:Core/Src/SEGGER_RTT.c ****     } else {
 13522              		.loc 1 388 23 view .LVU5806
 13523 0406 02F1FF31 		add	r1, r2, #-1
 390:Core/Src/SEGGER_RTT.c ****     }
 13524              		.loc 1 390 23 view .LVU5807
 13525 040a 98BF     		it	ls
 13526 040c 02F1FF31 		addls	r1, r2, #-1
 392:Core/Src/SEGGER_RTT.c ****     NumBytesToWrite = MIN(NumBytesToWrite, NumBytes);
 13527              		.loc 1 392 23 view .LVU5808
 13528 0410 A3EB0402 		sub	r2, r3, r4
 13529              	.LVL1285:
 390:Core/Src/SEGGER_RTT.c ****     }
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccs0vIiH.s 			page 362


 13530              		.loc 1 390 23 view .LVU5809
 13531 0414 98BF     		it	ls
 13532 0416 C918     		addls	r1, r1, r3
 393:Core/Src/SEGGER_RTT.c ****     pDst = (pRing->pBuffer + WrOff) + SEGGER_RTT_UNCACHED_OFF;
 13533              		.loc 1 393 21 view .LVU5810
 13534 0418 BA42     		cmp	r2, r7
 13535 041a 28BF     		it	cs
 13536 041c 3A46     		movcs	r2, r7
 390:Core/Src/SEGGER_RTT.c ****     }
 13537              		.loc 1 390 23 view .LVU5811
 13538 041e 091B     		subs	r1, r1, r4
 13539              	.LVL1286:
 392:Core/Src/SEGGER_RTT.c ****     NumBytesToWrite = MIN(NumBytesToWrite, NumBytes);
 13540              		.loc 1 392 5 is_stmt 1 view .LVU5812
 393:Core/Src/SEGGER_RTT.c ****     pDst = (pRing->pBuffer + WrOff) + SEGGER_RTT_UNCACHED_OFF;
 13541              		.loc 1 393 5 view .LVU5813
 393:Core/Src/SEGGER_RTT.c ****     pDst = (pRing->pBuffer + WrOff) + SEGGER_RTT_UNCACHED_OFF;
 13542              		.loc 1 393 21 is_stmt 0 view .LVU5814
 13543 0420 8A42     		cmp	r2, r1
 13544 0422 28BF     		it	cs
 13545 0424 0A46     		movcs	r2, r1
 13546              	.LVL1287:
 394:Core/Src/SEGGER_RTT.c **** #if SEGGER_RTT_MEMCPY_USE_BYTELOOP
 13547              		.loc 1 394 5 is_stmt 1 view .LVU5815
 403:Core/Src/SEGGER_RTT.c ****     NumBytesWritten += NumBytesToWrite;
 13548              		.loc 1 403 5 view .LVU5816
 13549 0426 2044     		add	r0, r0, r4
 13550              	.LVL1288:
 403:Core/Src/SEGGER_RTT.c ****     NumBytesWritten += NumBytesToWrite;
 13551              		.loc 1 403 5 is_stmt 0 view .LVU5817
 13552 0428 4146     		mov	r1, r8
 407:Core/Src/SEGGER_RTT.c **** #endif
 13553              		.loc 1 407 21 view .LVU5818
 13554 042a 1444     		add	r4, r4, r2
 13555              	.LVL1289:
 404:Core/Src/SEGGER_RTT.c ****     pBuffer         += NumBytesToWrite;
 13556              		.loc 1 404 21 view .LVU5819
 13557 042c 9344     		add	fp, fp, r2
 406:Core/Src/SEGGER_RTT.c ****     WrOff           += NumBytesToWrite;
 13558              		.loc 1 406 21 view .LVU5820
 13559 042e BF1A     		subs	r7, r7, r2
 13560              	.LVL1290:
 405:Core/Src/SEGGER_RTT.c ****     NumBytes        -= NumBytesToWrite;
 13561              		.loc 1 405 21 view .LVU5821
 13562 0430 9044     		add	r8, r8, r2
 13563              	.LVL1291:
 403:Core/Src/SEGGER_RTT.c ****     NumBytesWritten += NumBytesToWrite;
 13564              		.loc 1 403 5 view .LVU5822
 13565 0432 FFF7FEFF 		bl	memcpy
 13566              	.LVL1292:
 404:Core/Src/SEGGER_RTT.c ****     pBuffer         += NumBytesToWrite;
 13567              		.loc 1 404 5 is_stmt 1 view .LVU5823
 405:Core/Src/SEGGER_RTT.c ****     NumBytes        -= NumBytesToWrite;
 13568              		.loc 1 405 5 view .LVU5824
 406:Core/Src/SEGGER_RTT.c ****     WrOff           += NumBytesToWrite;
 13569              		.loc 1 406 5 view .LVU5825
 407:Core/Src/SEGGER_RTT.c **** #endif
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccs0vIiH.s 			page 363


 13570              		.loc 1 407 5 view .LVU5826
 409:Core/Src/SEGGER_RTT.c ****       WrOff = 0u;
 13571              		.loc 1 409 5 view .LVU5827
 412:Core/Src/SEGGER_RTT.c ****     pRing->WrOff = WrOff;
 13572              		.loc 1 412 5 view .LVU5828
 409:Core/Src/SEGGER_RTT.c ****       WrOff = 0u;
 13573              		.loc 1 409 23 is_stmt 0 view .LVU5829
 13574 0436 2B6A     		ldr	r3, [r5, #32]
 409:Core/Src/SEGGER_RTT.c ****       WrOff = 0u;
 13575              		.loc 1 409 8 view .LVU5830
 13576 0438 9C42     		cmp	r4, r3
 13577 043a 57D0     		beq	.L567
 412:Core/Src/SEGGER_RTT.c ****     pRing->WrOff = WrOff;
 13578              		.loc 1 412 5 view .LVU5831
 13579              		.syntax unified
 13580              	@ 412 "Core/Src/SEGGER_RTT.c" 1
 13581 043c BFF35F8F 		dmb
 13582              	
 13583              	@ 0 "" 2
 412:Core/Src/SEGGER_RTT.c ****     pRing->WrOff = WrOff;
 13584              		.loc 1 412 15 is_stmt 1 view .LVU5832
 413:Core/Src/SEGGER_RTT.c ****   } while (NumBytes);
 13585              		.loc 1 413 5 view .LVU5833
 413:Core/Src/SEGGER_RTT.c ****   } while (NumBytes);
 13586              		.loc 1 413 18 is_stmt 0 view .LVU5834
 13587              		.thumb
 13588              		.syntax unified
 13589 0440 6C62     		str	r4, [r5, #36]
 414:Core/Src/SEGGER_RTT.c ****   return NumBytesWritten;
 13590              		.loc 1 414 12 is_stmt 1 view .LVU5835
 13591 0442 002F     		cmp	r7, #0
 13592 0444 DCD1     		bne	.L468
 13593              	.LVL1293:
 13594              	.L467:
 415:Core/Src/SEGGER_RTT.c **** }
 13595              		.loc 1 415 3 view .LVU5836
 415:Core/Src/SEGGER_RTT.c **** }
 13596              		.loc 1 415 3 is_stmt 0 view .LVU5837
 13597              	.LBE748:
 13598              	.LBE747:
2005:Core/Src/SEGGER_RTT.c ****       }
 13599              		.loc 1 2005 9 view .LVU5838
 13600 0446 394A     		ldr	r2, .L575+4
 13601              	.LBB751:
 13602              	.LBB752:
 508:Core/Src/SEGGER_RTT.c ****   _WriteBlocking(pRing, (const char*)ac, 2u);
 13603              		.loc 1 508 9 view .LVU5839
 13604 0448 0299     		ldr	r1, [sp, #8]
 13605              	.LBE752:
 13606              	.LBE751:
2005:Core/Src/SEGGER_RTT.c ****       }
 13607              		.loc 1 2005 9 view .LVU5840
 13608 044a 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 13609              	.LBB762:
 13610              	.LBB759:
 508:Core/Src/SEGGER_RTT.c ****   _WriteBlocking(pRing, (const char*)ac, 2u);
 13611              		.loc 1 508 9 view .LVU5841
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccs0vIiH.s 			page 364


 13612 044c DDF80C90 		ldr	r9, [sp, #12]
 13613 0450 8A5C     		ldrb	r2, [r1, r2]	@ zero_extendqisi2
 13614 0452 8DF81520 		strb	r2, [sp, #21]
 507:Core/Src/SEGGER_RTT.c ****   ac[1] = _aTerminalId[TerminalId];  // Caller made already sure that TerminalId does not exceed ou
 13615              		.loc 1 507 9 view .LVU5842
 13616 0456 FF22     		movs	r2, #255
 13617              	.LBE759:
 13618              	.LBE762:
2004:Core/Src/SEGGER_RTT.c ****         _PostTerminalSwitch(pRing, _ActiveTerminal);
 13619              		.loc 1 2004 16 view .LVU5843
 13620 0458 5F46     		mov	r7, fp
2005:Core/Src/SEGGER_RTT.c ****       }
 13621              		.loc 1 2005 9 is_stmt 1 view .LVU5844
 13622              	.LVL1294:
 13623              	.LBB763:
 13624              	.LBI751:
 504:Core/Src/SEGGER_RTT.c ****   unsigned char ac[2];
 13625              		.loc 1 504 13 view .LVU5845
 13626              	.LBB760:
 505:Core/Src/SEGGER_RTT.c **** 
 13627              		.loc 1 505 3 view .LVU5846
 507:Core/Src/SEGGER_RTT.c ****   ac[1] = _aTerminalId[TerminalId];  // Caller made already sure that TerminalId does not exceed ou
 13628              		.loc 1 507 3 view .LVU5847
 507:Core/Src/SEGGER_RTT.c ****   ac[1] = _aTerminalId[TerminalId];  // Caller made already sure that TerminalId does not exceed ou
 13629              		.loc 1 507 9 is_stmt 0 view .LVU5848
 13630 045a 8DF81420 		strb	r2, [sp, #20]
 508:Core/Src/SEGGER_RTT.c ****   _WriteBlocking(pRing, (const char*)ac, 2u);
 13631              		.loc 1 508 3 is_stmt 1 view .LVU5849
 509:Core/Src/SEGGER_RTT.c **** }
 13632              		.loc 1 509 3 view .LVU5850
 13633              	.LVL1295:
 13634              	.LBB753:
 13635              	.LBI753:
 374:Core/Src/SEGGER_RTT.c ****   unsigned NumBytesToWrite;
 13636              		.loc 1 374 17 view .LVU5851
 13637              	.LBB754:
 375:Core/Src/SEGGER_RTT.c ****   unsigned NumBytesWritten;
 13638              		.loc 1 375 3 view .LVU5852
 376:Core/Src/SEGGER_RTT.c ****   unsigned RdOff;
 13639              		.loc 1 376 3 view .LVU5853
 377:Core/Src/SEGGER_RTT.c ****   unsigned WrOff;
 13640              		.loc 1 377 3 view .LVU5854
 378:Core/Src/SEGGER_RTT.c ****   volatile char* pDst;
 13641              		.loc 1 378 3 view .LVU5855
 379:Core/Src/SEGGER_RTT.c ****   //
 13642              		.loc 1 379 3 view .LVU5856
 383:Core/Src/SEGGER_RTT.c ****   WrOff = pRing->WrOff;
 13643              		.loc 1 383 3 view .LVU5857
 384:Core/Src/SEGGER_RTT.c ****   do {
 13644              		.loc 1 384 3 view .LVU5858
 384:Core/Src/SEGGER_RTT.c ****   do {
 13645              		.loc 1 384 3 is_stmt 0 view .LVU5859
 13646              	.LBE754:
 13647              	.LBE753:
 508:Core/Src/SEGGER_RTT.c ****   _WriteBlocking(pRing, (const char*)ac, 2u);
 13648              		.loc 1 508 9 view .LVU5860
 13649 045e 4FF00208 		mov	r8, #2
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccs0vIiH.s 			page 365


 13650              	.LBB757:
 13651              	.LBB755:
 413:Core/Src/SEGGER_RTT.c ****   } while (NumBytes);
 13652              		.loc 1 413 18 view .LVU5861
 13653 0462 0026     		movs	r6, #0
 13654              	.LVL1296:
 13655              	.L474:
 385:Core/Src/SEGGER_RTT.c ****     RdOff = pRing->RdOff;                         // May be changed by host (debug probe) in the me
 13656              		.loc 1 385 3 is_stmt 1 view .LVU5862
 386:Core/Src/SEGGER_RTT.c ****     if (RdOff > WrOff) {
 13657              		.loc 1 386 5 view .LVU5863
 388:Core/Src/SEGGER_RTT.c ****     } else {
 13658              		.loc 1 388 7 view .LVU5864
 390:Core/Src/SEGGER_RTT.c ****     }
 13659              		.loc 1 390 7 view .LVU5865
 386:Core/Src/SEGGER_RTT.c ****     if (RdOff > WrOff) {
 13660              		.loc 1 386 11 is_stmt 0 view .LVU5866
 13661 0464 AA6A     		ldr	r2, [r5, #40]
 13662              	.LVL1297:
 387:Core/Src/SEGGER_RTT.c ****       NumBytesToWrite = RdOff - WrOff - 1u;
 13663              		.loc 1 387 5 is_stmt 1 view .LVU5867
 394:Core/Src/SEGGER_RTT.c **** #if SEGGER_RTT_MEMCPY_USE_BYTELOOP
 13664              		.loc 1 394 10 is_stmt 0 view .LVU5868
 13665 0466 E869     		ldr	r0, [r5, #28]
 387:Core/Src/SEGGER_RTT.c ****       NumBytesToWrite = RdOff - WrOff - 1u;
 13666              		.loc 1 387 8 view .LVU5869
 13667 0468 A242     		cmp	r2, r4
 388:Core/Src/SEGGER_RTT.c ****     } else {
 13668              		.loc 1 388 23 view .LVU5870
 13669 046a 02F1FF31 		add	r1, r2, #-1
 390:Core/Src/SEGGER_RTT.c ****     }
 13670              		.loc 1 390 23 view .LVU5871
 13671 046e 98BF     		it	ls
 13672 0470 02F1FF31 		addls	r1, r2, #-1
 392:Core/Src/SEGGER_RTT.c ****     NumBytesToWrite = MIN(NumBytesToWrite, NumBytes);
 13673              		.loc 1 392 23 view .LVU5872
 13674 0474 A3EB0402 		sub	r2, r3, r4
 13675              	.LVL1298:
 390:Core/Src/SEGGER_RTT.c ****     }
 13676              		.loc 1 390 23 view .LVU5873
 13677 0478 98BF     		it	ls
 13678 047a C918     		addls	r1, r1, r3
 393:Core/Src/SEGGER_RTT.c ****     pDst = (pRing->pBuffer + WrOff) + SEGGER_RTT_UNCACHED_OFF;
 13679              		.loc 1 393 21 view .LVU5874
 13680 047c 4245     		cmp	r2, r8
 13681 047e 28BF     		it	cs
 13682 0480 4246     		movcs	r2, r8
 390:Core/Src/SEGGER_RTT.c ****     }
 13683              		.loc 1 390 23 view .LVU5875
 13684 0482 091B     		subs	r1, r1, r4
 13685              	.LVL1299:
 392:Core/Src/SEGGER_RTT.c ****     NumBytesToWrite = MIN(NumBytesToWrite, NumBytes);
 13686              		.loc 1 392 5 is_stmt 1 view .LVU5876
 393:Core/Src/SEGGER_RTT.c ****     pDst = (pRing->pBuffer + WrOff) + SEGGER_RTT_UNCACHED_OFF;
 13687              		.loc 1 393 5 view .LVU5877
 393:Core/Src/SEGGER_RTT.c ****     pDst = (pRing->pBuffer + WrOff) + SEGGER_RTT_UNCACHED_OFF;
 13688              		.loc 1 393 21 is_stmt 0 view .LVU5878
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccs0vIiH.s 			page 366


 13689 0484 8A42     		cmp	r2, r1
 13690 0486 28BF     		it	cs
 13691 0488 0A46     		movcs	r2, r1
 13692              	.LVL1300:
 394:Core/Src/SEGGER_RTT.c **** #if SEGGER_RTT_MEMCPY_USE_BYTELOOP
 13693              		.loc 1 394 5 is_stmt 1 view .LVU5879
 403:Core/Src/SEGGER_RTT.c ****     NumBytesWritten += NumBytesToWrite;
 13694              		.loc 1 403 5 view .LVU5880
 13695 048a 2044     		add	r0, r0, r4
 13696              	.LVL1301:
 403:Core/Src/SEGGER_RTT.c ****     NumBytesWritten += NumBytesToWrite;
 13697              		.loc 1 403 5 is_stmt 0 view .LVU5881
 13698 048c 4946     		mov	r1, r9
 407:Core/Src/SEGGER_RTT.c **** #endif
 13699              		.loc 1 407 21 view .LVU5882
 13700 048e 1444     		add	r4, r4, r2
 13701              	.LVL1302:
 406:Core/Src/SEGGER_RTT.c ****     WrOff           += NumBytesToWrite;
 13702              		.loc 1 406 21 view .LVU5883
 13703 0490 A8EB0208 		sub	r8, r8, r2
 13704              	.LVL1303:
 405:Core/Src/SEGGER_RTT.c ****     NumBytes        -= NumBytesToWrite;
 13705              		.loc 1 405 21 view .LVU5884
 13706 0494 9144     		add	r9, r9, r2
 13707              	.LVL1304:
 403:Core/Src/SEGGER_RTT.c ****     NumBytesWritten += NumBytesToWrite;
 13708              		.loc 1 403 5 view .LVU5885
 13709 0496 FFF7FEFF 		bl	memcpy
 13710              	.LVL1305:
 404:Core/Src/SEGGER_RTT.c ****     pBuffer         += NumBytesToWrite;
 13711              		.loc 1 404 5 is_stmt 1 view .LVU5886
 405:Core/Src/SEGGER_RTT.c ****     NumBytes        -= NumBytesToWrite;
 13712              		.loc 1 405 5 view .LVU5887
 406:Core/Src/SEGGER_RTT.c ****     WrOff           += NumBytesToWrite;
 13713              		.loc 1 406 5 view .LVU5888
 407:Core/Src/SEGGER_RTT.c **** #endif
 13714              		.loc 1 407 5 view .LVU5889
 409:Core/Src/SEGGER_RTT.c ****       WrOff = 0u;
 13715              		.loc 1 409 5 view .LVU5890
 412:Core/Src/SEGGER_RTT.c ****     pRing->WrOff = WrOff;
 13716              		.loc 1 412 5 view .LVU5891
 409:Core/Src/SEGGER_RTT.c ****       WrOff = 0u;
 13717              		.loc 1 409 23 is_stmt 0 view .LVU5892
 13718 049a 2B6A     		ldr	r3, [r5, #32]
 409:Core/Src/SEGGER_RTT.c ****       WrOff = 0u;
 13719              		.loc 1 409 8 view .LVU5893
 13720 049c 9C42     		cmp	r4, r3
 13721 049e 15D0     		beq	.L568
 412:Core/Src/SEGGER_RTT.c ****     pRing->WrOff = WrOff;
 13722              		.loc 1 412 5 view .LVU5894
 13723              		.syntax unified
 13724              	@ 412 "Core/Src/SEGGER_RTT.c" 1
 13725 04a0 BFF35F8F 		dmb
 13726              	
 13727              	@ 0 "" 2
 412:Core/Src/SEGGER_RTT.c ****     pRing->WrOff = WrOff;
 13728              		.loc 1 412 15 is_stmt 1 view .LVU5895
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccs0vIiH.s 			page 367


 413:Core/Src/SEGGER_RTT.c ****   } while (NumBytes);
 13729              		.loc 1 413 5 view .LVU5896
 413:Core/Src/SEGGER_RTT.c ****   } while (NumBytes);
 13730              		.loc 1 413 18 is_stmt 0 view .LVU5897
 13731              		.thumb
 13732              		.syntax unified
 13733 04a4 6C62     		str	r4, [r5, #36]
 414:Core/Src/SEGGER_RTT.c ****   return NumBytesWritten;
 13734              		.loc 1 414 12 is_stmt 1 view .LVU5898
 13735 04a6 B8F1000F 		cmp	r8, #0
 13736 04aa DBD1     		bne	.L474
 13737 04ac D9E5     		b	.L456
 13738              	.LVL1306:
 13739              	.L564:
 414:Core/Src/SEGGER_RTT.c ****   return NumBytesWritten;
 13740              		.loc 1 414 12 is_stmt 0 view .LVU5899
 13741              	.LBE755:
 13742              	.LBE757:
 13743              	.LBE760:
 13744              	.LBE763:
 13745              	.LBB764:
 13746              	.LBB714:
 412:Core/Src/SEGGER_RTT.c ****     pRing->WrOff = WrOff;
 13747              		.loc 1 412 5 is_stmt 1 view .LVU5900
 13748              		.syntax unified
 13749              	@ 412 "Core/Src/SEGGER_RTT.c" 1
 13750 04ae BFF35F8F 		dmb
 13751              	
 13752              	@ 0 "" 2
 412:Core/Src/SEGGER_RTT.c ****     pRing->WrOff = WrOff;
 13753              		.loc 1 412 15 view .LVU5901
 413:Core/Src/SEGGER_RTT.c ****   } while (NumBytes);
 13754              		.loc 1 413 5 view .LVU5902
 413:Core/Src/SEGGER_RTT.c ****   } while (NumBytes);
 13755              		.loc 1 413 18 is_stmt 0 view .LVU5903
 13756              		.thumb
 13757              		.syntax unified
 13758 04b2 6E62     		str	r6, [r5, #36]
 414:Core/Src/SEGGER_RTT.c ****   return NumBytesWritten;
 13759              		.loc 1 414 12 is_stmt 1 view .LVU5904
 13760 04b4 BBF1000F 		cmp	fp, #0
 13761 04b8 2BD0     		beq	.L569
 410:Core/Src/SEGGER_RTT.c ****     }
 13762              		.loc 1 410 13 is_stmt 0 view .LVU5905
 13763 04ba 0024     		movs	r4, #0
 13764 04bc 0FE7     		b	.L486
 13765              	.LVL1307:
 13766              	.L563:
 410:Core/Src/SEGGER_RTT.c ****     }
 13767              		.loc 1 410 13 view .LVU5906
 13768              	.LBE714:
 13769              	.LBE764:
 13770              	.LBB765:
 13771              	.LBB708:
 13772              	.LBB705:
 13773              	.LBB702:
 412:Core/Src/SEGGER_RTT.c ****     pRing->WrOff = WrOff;
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccs0vIiH.s 			page 368


 13774              		.loc 1 412 5 is_stmt 1 view .LVU5907
 13775              		.syntax unified
 13776              	@ 412 "Core/Src/SEGGER_RTT.c" 1
 13777 04be BFF35F8F 		dmb
 13778              	
 13779              	@ 0 "" 2
 412:Core/Src/SEGGER_RTT.c ****     pRing->WrOff = WrOff;
 13780              		.loc 1 412 15 view .LVU5908
 413:Core/Src/SEGGER_RTT.c ****   } while (NumBytes);
 13781              		.loc 1 413 5 view .LVU5909
 413:Core/Src/SEGGER_RTT.c ****   } while (NumBytes);
 13782              		.loc 1 413 18 is_stmt 0 view .LVU5910
 13783              		.thumb
 13784              		.syntax unified
 13785 04c2 C5F824A0 		str	r10, [r5, #36]
 414:Core/Src/SEGGER_RTT.c ****   return NumBytesWritten;
 13786              		.loc 1 414 12 is_stmt 1 view .LVU5911
 13787 04c6 56B3     		cbz	r6, .L570
 410:Core/Src/SEGGER_RTT.c ****     }
 13788              		.loc 1 410 13 is_stmt 0 view .LVU5912
 13789 04c8 0024     		movs	r4, #0
 13790 04ca DDE6     		b	.L480
 13791              	.LVL1308:
 13792              	.L568:
 410:Core/Src/SEGGER_RTT.c ****     }
 13793              		.loc 1 410 13 view .LVU5913
 13794              	.LBE702:
 13795              	.LBE705:
 13796              	.LBE708:
 13797              	.LBE765:
 13798              	.LBB766:
 13799              	.LBB761:
 13800              	.LBB758:
 13801              	.LBB756:
 412:Core/Src/SEGGER_RTT.c ****     pRing->WrOff = WrOff;
 13802              		.loc 1 412 5 is_stmt 1 view .LVU5914
 13803              		.syntax unified
 13804              	@ 412 "Core/Src/SEGGER_RTT.c" 1
 13805 04cc BFF35F8F 		dmb
 13806              	
 13807              	@ 0 "" 2
 412:Core/Src/SEGGER_RTT.c ****     pRing->WrOff = WrOff;
 13808              		.loc 1 412 15 view .LVU5915
 413:Core/Src/SEGGER_RTT.c ****   } while (NumBytes);
 13809              		.loc 1 413 5 view .LVU5916
 413:Core/Src/SEGGER_RTT.c ****   } while (NumBytes);
 13810              		.loc 1 413 18 is_stmt 0 view .LVU5917
 13811              		.thumb
 13812              		.syntax unified
 13813 04d0 6E62     		str	r6, [r5, #36]
 414:Core/Src/SEGGER_RTT.c ****   return NumBytesWritten;
 13814              		.loc 1 414 12 is_stmt 1 view .LVU5918
 13815 04d2 B8F1000F 		cmp	r8, #0
 13816 04d6 3FF4C4AD 		beq	.L456
 410:Core/Src/SEGGER_RTT.c ****     }
 13817              		.loc 1 410 13 is_stmt 0 view .LVU5919
 13818 04da 0024     		movs	r4, #0
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccs0vIiH.s 			page 369


 13819 04dc C2E7     		b	.L474
 13820              	.LVL1309:
 13821              	.L566:
 410:Core/Src/SEGGER_RTT.c ****     }
 13822              		.loc 1 410 13 view .LVU5920
 13823              	.LBE756:
 13824              	.LBE758:
 13825              	.LBE761:
 13826              	.LBE766:
 13827              	.LBB767:
 13828              	.LBB741:
 13829              	.LBB737:
 13830              	.LBB733:
 412:Core/Src/SEGGER_RTT.c ****     pRing->WrOff = WrOff;
 13831              		.loc 1 412 5 is_stmt 1 view .LVU5921
 13832              		.syntax unified
 13833              	@ 412 "Core/Src/SEGGER_RTT.c" 1
 13834 04de BFF35F8F 		dmb
 13835              	
 13836              	@ 0 "" 2
 412:Core/Src/SEGGER_RTT.c ****     pRing->WrOff = WrOff;
 13837              		.loc 1 412 15 view .LVU5922
 413:Core/Src/SEGGER_RTT.c ****   } while (NumBytes);
 13838              		.loc 1 413 5 view .LVU5923
 413:Core/Src/SEGGER_RTT.c ****   } while (NumBytes);
 13839              		.loc 1 413 18 is_stmt 0 view .LVU5924
 13840              		.thumb
 13841              		.syntax unified
 13842 04e2 C5F824A0 		str	r10, [r5, #36]
 414:Core/Src/SEGGER_RTT.c ****   return NumBytesWritten;
 13843              		.loc 1 414 12 is_stmt 1 view .LVU5925
 13844 04e6 C6B1     		cbz	r6, .L571
 410:Core/Src/SEGGER_RTT.c ****     }
 13845              		.loc 1 410 13 is_stmt 0 view .LVU5926
 13846 04e8 0024     		movs	r4, #0
 13847 04ea 64E7     		b	.L462
 13848              	.LVL1310:
 13849              	.L567:
 410:Core/Src/SEGGER_RTT.c ****     }
 13850              		.loc 1 410 13 view .LVU5927
 13851              	.LBE733:
 13852              	.LBE737:
 13853              	.LBE741:
 13854              	.LBE767:
 13855              	.LBB768:
 13856              	.LBB749:
 412:Core/Src/SEGGER_RTT.c ****     pRing->WrOff = WrOff;
 13857              		.loc 1 412 5 is_stmt 1 view .LVU5928
 13858              		.syntax unified
 13859              	@ 412 "Core/Src/SEGGER_RTT.c" 1
 13860 04ec BFF35F8F 		dmb
 13861              	
 13862              	@ 0 "" 2
 412:Core/Src/SEGGER_RTT.c ****     pRing->WrOff = WrOff;
 13863              		.loc 1 412 15 view .LVU5929
 413:Core/Src/SEGGER_RTT.c ****   } while (NumBytes);
 13864              		.loc 1 413 5 view .LVU5930
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccs0vIiH.s 			page 370


 413:Core/Src/SEGGER_RTT.c ****   } while (NumBytes);
 13865              		.loc 1 413 18 is_stmt 0 view .LVU5931
 13866              		.thumb
 13867              		.syntax unified
 13868 04f0 6E62     		str	r6, [r5, #36]
 414:Core/Src/SEGGER_RTT.c ****   return NumBytesWritten;
 13869              		.loc 1 414 12 is_stmt 1 view .LVU5932
 13870 04f2 87B1     		cbz	r7, .L572
 410:Core/Src/SEGGER_RTT.c ****     }
 13871              		.loc 1 410 13 is_stmt 0 view .LVU5933
 13872 04f4 0024     		movs	r4, #0
 13873 04f6 83E7     		b	.L468
 13874              	.LVL1311:
 13875              	.L565:
 410:Core/Src/SEGGER_RTT.c ****     }
 13876              		.loc 1 410 13 view .LVU5934
 13877              	.LBE749:
 13878              	.LBE768:
 13879              	.LBB769:
 13880              	.LBB725:
 13881              	.LBB723:
 13882              	.LBB721:
 412:Core/Src/SEGGER_RTT.c ****     pRing->WrOff = WrOff;
 13883              		.loc 1 412 5 is_stmt 1 view .LVU5935
 13884              		.syntax unified
 13885              	@ 412 "Core/Src/SEGGER_RTT.c" 1
 13886 04f8 BFF35F8F 		dmb
 13887              	
 13888              	@ 0 "" 2
 412:Core/Src/SEGGER_RTT.c ****     pRing->WrOff = WrOff;
 13889              		.loc 1 412 15 view .LVU5936
 413:Core/Src/SEGGER_RTT.c ****   } while (NumBytes);
 13890              		.loc 1 413 5 view .LVU5937
 413:Core/Src/SEGGER_RTT.c ****   } while (NumBytes);
 13891              		.loc 1 413 18 is_stmt 0 view .LVU5938
 13892              		.thumb
 13893              		.syntax unified
 13894 04fc 6E62     		str	r6, [r5, #36]
 414:Core/Src/SEGGER_RTT.c ****   return NumBytesWritten;
 13895              		.loc 1 414 12 is_stmt 1 view .LVU5939
 13896 04fe B8F1000F 		cmp	r8, #0
 13897 0502 3FF4AEAD 		beq	.L456
 410:Core/Src/SEGGER_RTT.c ****     }
 13898              		.loc 1 410 13 is_stmt 0 view .LVU5940
 13899 0506 0024     		movs	r4, #0
 13900 0508 1EE7     		b	.L492
 13901              	.LVL1312:
 13902              	.L561:
 410:Core/Src/SEGGER_RTT.c ****     }
 13903              		.loc 1 410 13 view .LVU5941
 13904              	.LBE721:
 13905              	.LBE723:
 13906              	.LBE725:
 13907              	.LBE769:
 13908              	.LBB770:
 13909              	.LBB682:
 13910 050a 3C46     		mov	r4, r7
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccs0vIiH.s 			page 371


 13911 050c 4BE6     		b	.L503
 13912              	.LVL1313:
 13913              	.L562:
 410:Core/Src/SEGGER_RTT.c ****     }
 13914              		.loc 1 410 13 view .LVU5942
 13915              	.LBE682:
 13916              	.LBE770:
 13917              	.LBB771:
 13918              	.LBB676:
 13919              	.LBB673:
 13920              	.LBB670:
 13921 050e 5C46     		mov	r4, fp
 13922 0510 20E6     		b	.L497
 13923              	.LVL1314:
 13924              	.L569:
 410:Core/Src/SEGGER_RTT.c ****     }
 13925              		.loc 1 410 13 view .LVU5943
 13926              	.LBE670:
 13927              	.LBE673:
 13928              	.LBE676:
 13929              	.LBE771:
 13930              	.LBB772:
 13931              	.LBB715:
 13932 0512 5C46     		mov	r4, fp
 13933 0514 0AE7     		b	.L485
 13934              	.LVL1315:
 13935              	.L572:
 410:Core/Src/SEGGER_RTT.c ****     }
 13936              		.loc 1 410 13 view .LVU5944
 13937              	.LBE715:
 13938              	.LBE772:
 13939              	.LBB773:
 13940              	.LBB750:
 13941 0516 3C46     		mov	r4, r7
 13942 0518 95E7     		b	.L467
 13943              	.LVL1316:
 13944              	.L571:
 410:Core/Src/SEGGER_RTT.c ****     }
 13945              		.loc 1 410 13 view .LVU5945
 13946              	.LBE750:
 13947              	.LBE773:
 13948              	.LBB774:
 13949              	.LBB742:
 13950              	.LBB738:
 13951              	.LBB734:
 13952 051a 3446     		mov	r4, r6
 13953 051c 6DE7     		b	.L461
 13954              	.LVL1317:
 13955              	.L570:
 410:Core/Src/SEGGER_RTT.c ****     }
 13956              		.loc 1 410 13 view .LVU5946
 13957              	.LBE734:
 13958              	.LBE738:
 13959              	.LBE742:
 13960              	.LBE774:
 13961              	.LBB775:
 13962              	.LBB709:
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccs0vIiH.s 			page 372


 13963              	.LBB706:
 13964              	.LBB703:
 13965 051e 3446     		mov	r4, r6
 13966 0520 D6E6     		b	.L479
 13967              	.LVL1318:
 13968              	.L511:
 410:Core/Src/SEGGER_RTT.c ****     }
 13969              		.loc 1 410 13 view .LVU5947
 13970              	.LBE703:
 13971              	.LBE706:
 13972              	.LBE709:
 13973              	.LBE775:
 13974              	.LBE777:
2039:Core/Src/SEGGER_RTT.c ****   }
 13975              		.loc 1 2039 12 view .LVU5948
 13976 0522 4FF0FF37 		mov	r7, #-1
 13977              	.LVL1319:
2041:Core/Src/SEGGER_RTT.c **** }
 13978              		.loc 1 2041 3 is_stmt 1 view .LVU5949
2041:Core/Src/SEGGER_RTT.c **** }
 13979              		.loc 1 2041 10 is_stmt 0 view .LVU5950
 13980 0526 9FE5     		b	.L449
 13981              	.L576:
 13982              		.align	2
 13983              	.L575:
 13984 0528 00000000 		.word	.LANCHOR3
 13985 052c 00000000 		.word	.LANCHOR4
 13986              		.cfi_endproc
 13987              	.LFE33:
 13989              		.section	.text.SEGGER_RTT_GetAvailWriteSpace,"ax",%progbits
 13990              		.align	1
 13991              		.p2align 2,,3
 13992              		.global	SEGGER_RTT_GetAvailWriteSpace
 13993              		.syntax unified
 13994              		.thumb
 13995              		.thumb_func
 13997              	SEGGER_RTT_GetAvailWriteSpace:
 13998              	.LVL1320:
 13999              	.LFB34:
2043:Core/Src/SEGGER_RTT.c **** 
2044:Core/Src/SEGGER_RTT.c **** /*********************************************************************
2045:Core/Src/SEGGER_RTT.c **** *
2046:Core/Src/SEGGER_RTT.c **** *       SEGGER_RTT_GetAvailWriteSpace
2047:Core/Src/SEGGER_RTT.c **** *
2048:Core/Src/SEGGER_RTT.c **** *  Function description
2049:Core/Src/SEGGER_RTT.c **** *    Returns the number of bytes available in the ring buffer.
2050:Core/Src/SEGGER_RTT.c **** *
2051:Core/Src/SEGGER_RTT.c **** *  Parameters
2052:Core/Src/SEGGER_RTT.c **** *    BufferIndex  Index of the up buffer.
2053:Core/Src/SEGGER_RTT.c **** *
2054:Core/Src/SEGGER_RTT.c **** *  Return value
2055:Core/Src/SEGGER_RTT.c **** *    Number of bytes that are free in the selected up buffer.
2056:Core/Src/SEGGER_RTT.c **** */
2057:Core/Src/SEGGER_RTT.c **** unsigned SEGGER_RTT_GetAvailWriteSpace (unsigned BufferIndex) {
 14000              		.loc 1 2057 63 is_stmt 1 view -0
 14001              		.cfi_startproc
 14002              		@ args = 0, pretend = 0, frame = 0
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccs0vIiH.s 			page 373


 14003              		@ frame_needed = 0, uses_anonymous_args = 0
 14004              		@ link register save eliminated.
2058:Core/Src/SEGGER_RTT.c ****   SEGGER_RTT_BUFFER_UP* pRing;
 14005              		.loc 1 2058 3 view .LVU5952
2059:Core/Src/SEGGER_RTT.c **** 
2060:Core/Src/SEGGER_RTT.c ****   pRing = (SEGGER_RTT_BUFFER_UP*)((char*)&_SEGGER_RTT.aUp[BufferIndex] + SEGGER_RTT_UNCACHED_OFF); 
 14006              		.loc 1 2060 3 view .LVU5953
 14007              	.LBB778:
 14008              	.LBB779:
 534:Core/Src/SEGGER_RTT.c ****   WrOff = pRing->WrOff;
 14009              		.loc 1 534 9 is_stmt 0 view .LVU5954
 14010 0000 064A     		ldr	r2, .L580
 14011              	.LVL1321:
 534:Core/Src/SEGGER_RTT.c ****   WrOff = pRing->WrOff;
 14012              		.loc 1 534 9 view .LVU5955
 14013              	.LBE779:
 14014              	.LBE778:
2061:Core/Src/SEGGER_RTT.c ****   return _GetAvailWriteSpace(pRing);
 14015              		.loc 1 2061 3 is_stmt 1 view .LVU5956
 14016              	.LBB781:
 14017              	.LBI778:
 526:Core/Src/SEGGER_RTT.c ****   unsigned RdOff;
 14018              		.loc 1 526 17 view .LVU5957
 14019              	.LBB780:
 527:Core/Src/SEGGER_RTT.c ****   unsigned WrOff;
 14020              		.loc 1 527 3 view .LVU5958
 528:Core/Src/SEGGER_RTT.c ****   unsigned r;
 14021              		.loc 1 528 3 view .LVU5959
 529:Core/Src/SEGGER_RTT.c ****   //
 14022              		.loc 1 529 3 view .LVU5960
 534:Core/Src/SEGGER_RTT.c ****   WrOff = pRing->WrOff;
 14023              		.loc 1 534 3 view .LVU5961
 534:Core/Src/SEGGER_RTT.c ****   WrOff = pRing->WrOff;
 14024              		.loc 1 534 9 is_stmt 0 view .LVU5962
 14025 0002 00EB4000 		add	r0, r0, r0, lsl #1
 14026              	.LVL1322:
 534:Core/Src/SEGGER_RTT.c ****   WrOff = pRing->WrOff;
 14027              		.loc 1 534 9 view .LVU5963
 14028 0006 02EBC002 		add	r2, r2, r0, lsl #3
 14029 000a 936A     		ldr	r3, [r2, #40]
 14030              	.LVL1323:
 535:Core/Src/SEGGER_RTT.c ****   if (RdOff <= WrOff) {
 14031              		.loc 1 535 3 is_stmt 1 view .LVU5964
 535:Core/Src/SEGGER_RTT.c ****   if (RdOff <= WrOff) {
 14032              		.loc 1 535 9 is_stmt 0 view .LVU5965
 14033 000c 506A     		ldr	r0, [r2, #36]
 14034              	.LVL1324:
 536:Core/Src/SEGGER_RTT.c ****     r = pRing->SizeOfBuffer - 1u - WrOff + RdOff;
 14035              		.loc 1 536 3 is_stmt 1 view .LVU5966
 536:Core/Src/SEGGER_RTT.c ****     r = pRing->SizeOfBuffer - 1u - WrOff + RdOff;
 14036              		.loc 1 536 6 is_stmt 0 view .LVU5967
 14037 000e 8342     		cmp	r3, r0
 537:Core/Src/SEGGER_RTT.c ****   } else {
 14038              		.loc 1 537 5 is_stmt 1 view .LVU5968
 537:Core/Src/SEGGER_RTT.c ****   } else {
 14039              		.loc 1 537 7 is_stmt 0 view .LVU5969
 14040 0010 9CBF     		itt	ls
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccs0vIiH.s 			page 374


 14041 0012 126A     		ldrls	r2, [r2, #32]
 14042 0014 9B18     		addls	r3, r3, r2
 14043              	.LVL1325:
 539:Core/Src/SEGGER_RTT.c ****   }
 14044              		.loc 1 539 5 is_stmt 1 view .LVU5970
 539:Core/Src/SEGGER_RTT.c ****   }
 14045              		.loc 1 539 7 is_stmt 0 view .LVU5971
 14046 0016 013B     		subs	r3, r3, #1
 14047 0018 181A     		subs	r0, r3, r0
 14048              	.LVL1326:
 541:Core/Src/SEGGER_RTT.c **** }
 14049              		.loc 1 541 3 is_stmt 1 view .LVU5972
 541:Core/Src/SEGGER_RTT.c **** }
 14050              		.loc 1 541 3 is_stmt 0 view .LVU5973
 14051              	.LBE780:
 14052              	.LBE781:
2062:Core/Src/SEGGER_RTT.c **** }
 14053              		.loc 1 2062 1 view .LVU5974
 14054 001a 7047     		bx	lr
 14055              	.L581:
 14056              		.align	2
 14057              	.L580:
 14058 001c 00000000 		.word	.LANCHOR0
 14059              		.cfi_endproc
 14060              	.LFE34:
 14062              		.section	.text.SEGGER_RTT_GetBytesInBuffer,"ax",%progbits
 14063              		.align	1
 14064              		.p2align 2,,3
 14065              		.global	SEGGER_RTT_GetBytesInBuffer
 14066              		.syntax unified
 14067              		.thumb
 14068              		.thumb_func
 14070              	SEGGER_RTT_GetBytesInBuffer:
 14071              	.LVL1327:
 14072              	.LFB35:
2063:Core/Src/SEGGER_RTT.c **** 
2064:Core/Src/SEGGER_RTT.c **** 
2065:Core/Src/SEGGER_RTT.c **** /*********************************************************************
2066:Core/Src/SEGGER_RTT.c **** *
2067:Core/Src/SEGGER_RTT.c **** *       SEGGER_RTT_GetBytesInBuffer()
2068:Core/Src/SEGGER_RTT.c **** *
2069:Core/Src/SEGGER_RTT.c **** *  Function description
2070:Core/Src/SEGGER_RTT.c **** *    Returns the number of bytes currently used in the up buffer.
2071:Core/Src/SEGGER_RTT.c **** *
2072:Core/Src/SEGGER_RTT.c **** *  Parameters
2073:Core/Src/SEGGER_RTT.c **** *    BufferIndex  Index of the up buffer.
2074:Core/Src/SEGGER_RTT.c **** *
2075:Core/Src/SEGGER_RTT.c **** *  Return value
2076:Core/Src/SEGGER_RTT.c **** *    Number of bytes that are used in the buffer.
2077:Core/Src/SEGGER_RTT.c **** */
2078:Core/Src/SEGGER_RTT.c **** unsigned SEGGER_RTT_GetBytesInBuffer(unsigned BufferIndex) {
 14073              		.loc 1 2078 60 is_stmt 1 view -0
 14074              		.cfi_startproc
 14075              		@ args = 0, pretend = 0, frame = 0
 14076              		@ frame_needed = 0, uses_anonymous_args = 0
 14077              		@ link register save eliminated.
2079:Core/Src/SEGGER_RTT.c ****   unsigned RdOff;
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccs0vIiH.s 			page 375


 14078              		.loc 1 2079 3 view .LVU5976
2080:Core/Src/SEGGER_RTT.c ****   unsigned WrOff;
 14079              		.loc 1 2080 3 view .LVU5977
2081:Core/Src/SEGGER_RTT.c ****   unsigned r;
 14080              		.loc 1 2081 3 view .LVU5978
2082:Core/Src/SEGGER_RTT.c ****   volatile SEGGER_RTT_CB* pRTTCB;
 14081              		.loc 1 2082 3 view .LVU5979
2083:Core/Src/SEGGER_RTT.c ****   //
2084:Core/Src/SEGGER_RTT.c ****   // Avoid warnings regarding volatile access order.  It's not a problem
2085:Core/Src/SEGGER_RTT.c ****   // in this case, but dampen compiler enthusiasm.
2086:Core/Src/SEGGER_RTT.c ****   //
2087:Core/Src/SEGGER_RTT.c ****   pRTTCB = (volatile SEGGER_RTT_CB*)((unsigned char*)&_SEGGER_RTT + SEGGER_RTT_UNCACHED_OFF);  // A
 14082              		.loc 1 2087 3 view .LVU5980
2088:Core/Src/SEGGER_RTT.c ****   RdOff = pRTTCB->aUp[BufferIndex].RdOff;
 14083              		.loc 1 2088 3 view .LVU5981
 14084              		.loc 1 2088 9 is_stmt 0 view .LVU5982
 14085 0000 064B     		ldr	r3, .L585
 14086 0002 00EB4000 		add	r0, r0, r0, lsl #1
 14087              	.LVL1328:
 14088              		.loc 1 2088 9 view .LVU5983
 14089 0006 03EBC003 		add	r3, r3, r0, lsl #3
 14090 000a 9A6A     		ldr	r2, [r3, #40]
 14091              	.LVL1329:
2089:Core/Src/SEGGER_RTT.c ****   WrOff = pRTTCB->aUp[BufferIndex].WrOff;
 14092              		.loc 1 2089 3 is_stmt 1 view .LVU5984
 14093              		.loc 1 2089 9 is_stmt 0 view .LVU5985
 14094 000c 586A     		ldr	r0, [r3, #36]
 14095              	.LVL1330:
2090:Core/Src/SEGGER_RTT.c ****   if (RdOff <= WrOff) {
 14096              		.loc 1 2090 3 is_stmt 1 view .LVU5986
 14097              		.loc 1 2090 6 is_stmt 0 view .LVU5987
 14098 000e 8242     		cmp	r2, r0
2091:Core/Src/SEGGER_RTT.c ****     r = WrOff - RdOff;
 14099              		.loc 1 2091 5 is_stmt 1 view .LVU5988
2092:Core/Src/SEGGER_RTT.c ****   } else {
2093:Core/Src/SEGGER_RTT.c ****     r = pRTTCB->aUp[BufferIndex].SizeOfBuffer - (WrOff - RdOff);
 14100              		.loc 1 2093 33 is_stmt 0 view .LVU5989
 14101 0010 85BF     		ittet	hi
 14102 0012 1B6A     		ldrhi	r3, [r3, #32]
 14103              		.loc 1 2093 7 view .LVU5990
 14104 0014 9B18     		addhi	r3, r3, r2
2091:Core/Src/SEGGER_RTT.c ****     r = WrOff - RdOff;
 14105              		.loc 1 2091 7 view .LVU5991
 14106 0016 801A     		subls	r0, r0, r2
 14107              	.LVL1331:
 14108              		.loc 1 2093 5 is_stmt 1 view .LVU5992
 14109              		.loc 1 2093 7 is_stmt 0 view .LVU5993
 14110 0018 181A     		subhi	r0, r3, r0
 14111              	.LVL1332:
2094:Core/Src/SEGGER_RTT.c ****   }
2095:Core/Src/SEGGER_RTT.c ****   return r;
 14112              		.loc 1 2095 3 is_stmt 1 view .LVU5994
2096:Core/Src/SEGGER_RTT.c **** }
 14113              		.loc 1 2096 1 is_stmt 0 view .LVU5995
 14114 001a 7047     		bx	lr
 14115              	.L586:
 14116              		.align	2
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccs0vIiH.s 			page 376


 14117              	.L585:
 14118 001c 00000000 		.word	.LANCHOR0
 14119              		.cfi_endproc
 14120              	.LFE35:
 14122              		.global	_SEGGER_RTT
 14123              		.section	.bss._ActiveTerminal,"aw",%nobits
 14124              		.set	.LANCHOR4,. + 0
 14127              	_ActiveTerminal:
 14128 0000 00       		.space	1
 14129              		.section	.bss._SEGGER_RTT,"aw",%nobits
 14130              		.align	2
 14131              		.set	.LANCHOR0,. + 0
 14134              	_SEGGER_RTT:
 14135 0000 00000000 		.space	168
 14135      00000000 
 14135      00000000 
 14135      00000000 
 14135      00000000 
 14136              		.section	.bss._acDownBuffer,"aw",%nobits
 14137              		.align	2
 14138              		.set	.LANCHOR2,. + 0
 14141              	_acDownBuffer:
 14142 0000 00000000 		.space	16
 14142      00000000 
 14142      00000000 
 14142      00000000 
 14143              		.section	.bss._acUpBuffer,"aw",%nobits
 14144              		.align	2
 14145              		.set	.LANCHOR1,. + 0
 14148              	_acUpBuffer:
 14149 0000 00000000 		.space	1024
 14149      00000000 
 14149      00000000 
 14149      00000000 
 14149      00000000 
 14150              		.section	.rodata._aTerminalId,"a"
 14151              		.align	2
 14152              		.set	.LANCHOR3,. + 0
 14155              	_aTerminalId:
 14156 0000 30313233 		.ascii	"0123456789ABCDEF"
 14156      34353637 
 14156      38394142 
 14156      43444546 
 14157              		.text
 14158              	.Letext0:
 14159              		.file 2 "Core/Inc/SEGGER_RTT.h"
 14160              		.file 3 "/Users/johannes/Library/Application Support/Code/User/globalStorage/bmd.stm32-for-vscode/
 14161              		.file 4 "/Users/johannes/Library/Application Support/Code/User/globalStorage/bmd.stm32-for-vscode/
 14162              		.file 5 "<built-in>"
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccs0vIiH.s 			page 377


DEFINED SYMBOLS
                            *ABS*:0000000000000000 SEGGER_RTT.c
/var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccs0vIiH.s:18     .rodata.SEGGER_RTT_ReadUpBufferNoLock.str1.4:0000000000000000 $d
/var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccs0vIiH.s:22     .text.SEGGER_RTT_ReadUpBufferNoLock:0000000000000000 $t
/var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccs0vIiH.s:29     .text.SEGGER_RTT_ReadUpBufferNoLock:0000000000000000 SEGGER_RTT_ReadUpBufferNoLock
/var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccs0vIiH.s:465    .text.SEGGER_RTT_ReadUpBufferNoLock:0000000000000138 $d
/var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccs0vIiH.s:476    .text.SEGGER_RTT_ReadNoLock:0000000000000000 $t
/var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccs0vIiH.s:483    .text.SEGGER_RTT_ReadNoLock:0000000000000000 SEGGER_RTT_ReadNoLock
/var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccs0vIiH.s:907    .text.SEGGER_RTT_ReadNoLock:0000000000000124 $d
/var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccs0vIiH.s:918    .text.SEGGER_RTT_ReadUpBuffer:0000000000000000 $t
/var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccs0vIiH.s:925    .text.SEGGER_RTT_ReadUpBuffer:0000000000000000 SEGGER_RTT_ReadUpBuffer
/var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccs0vIiH.s:1393   .text.SEGGER_RTT_ReadUpBuffer:0000000000000150 $d
/var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccs0vIiH.s:1407   .text.SEGGER_RTT_Read:0000000000000000 $t
/var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccs0vIiH.s:1414   .text.SEGGER_RTT_Read:0000000000000000 SEGGER_RTT_Read
/var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccs0vIiH.s:1869   .text.SEGGER_RTT_Read:0000000000000134 $d
/var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccs0vIiH.s:1883   .text.SEGGER_RTT_WriteWithOverwriteNoLock:0000000000000000 $t
/var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccs0vIiH.s:1890   .text.SEGGER_RTT_WriteWithOverwriteNoLock:0000000000000000 SEGGER_RTT_WriteWithOverwriteNoLock
/var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccs0vIiH.s:2118   .text.SEGGER_RTT_WriteWithOverwriteNoLock:00000000000000d8 $d
/var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccs0vIiH.s:2123   .text.SEGGER_RTT_WriteDownBufferNoLock:0000000000000000 $t
/var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccs0vIiH.s:2130   .text.SEGGER_RTT_WriteDownBufferNoLock:0000000000000000 SEGGER_RTT_WriteDownBufferNoLock
/var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccs0vIiH.s:2639   .text.SEGGER_RTT_WriteDownBufferNoLock:000000000000014c $d
/var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccs0vIiH.s:2646   .text.SEGGER_RTT_WriteNoLock:0000000000000000 $t
/var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccs0vIiH.s:2653   .text.SEGGER_RTT_WriteNoLock:0000000000000000 SEGGER_RTT_WriteNoLock
/var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccs0vIiH.s:3254   .text.SEGGER_RTT_WriteNoLock:00000000000001c4 $d
/var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccs0vIiH.s:3261   .text.SEGGER_RTT_WriteDownBuffer:0000000000000000 $t
/var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccs0vIiH.s:3268   .text.SEGGER_RTT_WriteDownBuffer:0000000000000000 SEGGER_RTT_WriteDownBuffer
/var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccs0vIiH.s:4108   .text.SEGGER_RTT_WriteDownBuffer:00000000000001f4 $d
/var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccs0vIiH.s:4121   .text.SEGGER_RTT_Write:0000000000000000 $t
/var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccs0vIiH.s:4128   .text.SEGGER_RTT_Write:0000000000000000 SEGGER_RTT_Write
/var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccs0vIiH.s:4978   .text.SEGGER_RTT_Write:0000000000000268 $d
/var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccs0vIiH.s:4991   .text.SEGGER_RTT_WriteString:0000000000000000 $t
/var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccs0vIiH.s:4998   .text.SEGGER_RTT_WriteString:0000000000000000 SEGGER_RTT_WriteString
/var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccs0vIiH.s:5871   .text.SEGGER_RTT_WriteString:0000000000000270 $d
/var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccs0vIiH.s:5886   .text.SEGGER_RTT_PutCharSkipNoLock:0000000000000000 $t
/var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccs0vIiH.s:5893   .text.SEGGER_RTT_PutCharSkipNoLock:0000000000000000 SEGGER_RTT_PutCharSkipNoLock
/var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccs0vIiH.s:5998   .text.SEGGER_RTT_PutCharSkipNoLock:0000000000000040 $d
/var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccs0vIiH.s:6003   .text.SEGGER_RTT_PutCharSkip:0000000000000000 $t
/var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccs0vIiH.s:6010   .text.SEGGER_RTT_PutCharSkip:0000000000000000 SEGGER_RTT_PutCharSkip
/var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccs0vIiH.s:6358   .text.SEGGER_RTT_PutCharSkip:00000000000000d0 $d
/var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccs0vIiH.s:6369   .text.SEGGER_RTT_PutChar:0000000000000000 $t
/var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccs0vIiH.s:6376   .text.SEGGER_RTT_PutChar:0000000000000000 SEGGER_RTT_PutChar
/var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccs0vIiH.s:6751   .text.SEGGER_RTT_PutChar:00000000000000e8 $d
/var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccs0vIiH.s:6762   .text.SEGGER_RTT_GetKey:0000000000000000 $t
/var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccs0vIiH.s:6769   .text.SEGGER_RTT_GetKey:0000000000000000 SEGGER_RTT_GetKey
/var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccs0vIiH.s:7293   .text.SEGGER_RTT_GetKey:000000000000011c $d
/var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccs0vIiH.s:7306   .text.SEGGER_RTT_WaitKey:0000000000000000 $t
/var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccs0vIiH.s:7313   .text.SEGGER_RTT_WaitKey:0000000000000000 SEGGER_RTT_WaitKey
/var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccs0vIiH.s:7898   .text.SEGGER_RTT_WaitKey:0000000000000128 $d
/var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccs0vIiH.s:7913   .text.SEGGER_RTT_HasKey:0000000000000000 $t
/var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccs0vIiH.s:7920   .text.SEGGER_RTT_HasKey:0000000000000000 SEGGER_RTT_HasKey
/var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccs0vIiH.s:8191   .text.SEGGER_RTT_HasKey:000000000000008c $d
/var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccs0vIiH.s:8199   .text.SEGGER_RTT_HasData:0000000000000000 $t
/var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccs0vIiH.s:8206   .text.SEGGER_RTT_HasData:0000000000000000 SEGGER_RTT_HasData
/var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccs0vIiH.s:8237   .text.SEGGER_RTT_HasData:0000000000000014 $d
/var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccs0vIiH.s:8242   .text.SEGGER_RTT_HasDataUp:0000000000000000 $t
/var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccs0vIiH.s:8249   .text.SEGGER_RTT_HasDataUp:0000000000000000 SEGGER_RTT_HasDataUp
/var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccs0vIiH.s:8278   .text.SEGGER_RTT_HasDataUp:0000000000000014 $d
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccs0vIiH.s 			page 378


/var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccs0vIiH.s:8283   .text.SEGGER_RTT_AllocDownBuffer:0000000000000000 $t
/var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccs0vIiH.s:8290   .text.SEGGER_RTT_AllocDownBuffer:0000000000000000 SEGGER_RTT_AllocDownBuffer
/var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccs0vIiH.s:8685   .text.SEGGER_RTT_AllocDownBuffer:00000000000000f0 $d
/var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccs0vIiH.s:8694   .text.SEGGER_RTT_AllocUpBuffer:0000000000000000 $t
/var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccs0vIiH.s:8701   .text.SEGGER_RTT_AllocUpBuffer:0000000000000000 SEGGER_RTT_AllocUpBuffer
/var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccs0vIiH.s:9103   .text.SEGGER_RTT_AllocUpBuffer:0000000000000114 $d
/var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccs0vIiH.s:9112   .text.SEGGER_RTT_ConfigUpBuffer:0000000000000000 $t
/var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccs0vIiH.s:9119   .text.SEGGER_RTT_ConfigUpBuffer:0000000000000000 SEGGER_RTT_ConfigUpBuffer
/var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccs0vIiH.s:9472   .text.SEGGER_RTT_ConfigUpBuffer:00000000000000dc $d
/var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccs0vIiH.s:9480   .text.SEGGER_RTT_ConfigDownBuffer:0000000000000000 $t
/var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccs0vIiH.s:9487   .text.SEGGER_RTT_ConfigDownBuffer:0000000000000000 SEGGER_RTT_ConfigDownBuffer
/var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccs0vIiH.s:9838   .text.SEGGER_RTT_ConfigDownBuffer:00000000000000d4 $d
/var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccs0vIiH.s:9846   .text.SEGGER_RTT_SetNameUpBuffer:0000000000000000 $t
/var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccs0vIiH.s:9853   .text.SEGGER_RTT_SetNameUpBuffer:0000000000000000 SEGGER_RTT_SetNameUpBuffer
/var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccs0vIiH.s:10159  .text.SEGGER_RTT_SetNameUpBuffer:00000000000000a4 $d
/var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccs0vIiH.s:10167  .text.SEGGER_RTT_SetNameDownBuffer:0000000000000000 $t
/var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccs0vIiH.s:10174  .text.SEGGER_RTT_SetNameDownBuffer:0000000000000000 SEGGER_RTT_SetNameDownBuffer
/var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccs0vIiH.s:10477  .text.SEGGER_RTT_SetNameDownBuffer:00000000000000a4 $d
/var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccs0vIiH.s:10485  .text.SEGGER_RTT_SetFlagsUpBuffer:0000000000000000 $t
/var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccs0vIiH.s:10492  .text.SEGGER_RTT_SetFlagsUpBuffer:0000000000000000 SEGGER_RTT_SetFlagsUpBuffer
/var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccs0vIiH.s:10795  .text.SEGGER_RTT_SetFlagsUpBuffer:00000000000000a4 $d
/var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccs0vIiH.s:10803  .text.SEGGER_RTT_SetFlagsDownBuffer:0000000000000000 $t
/var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccs0vIiH.s:10810  .text.SEGGER_RTT_SetFlagsDownBuffer:0000000000000000 SEGGER_RTT_SetFlagsDownBuffer
/var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccs0vIiH.s:11113  .text.SEGGER_RTT_SetFlagsDownBuffer:00000000000000a4 $d
/var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccs0vIiH.s:11121  .text.SEGGER_RTT_Init:0000000000000000 $t
/var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccs0vIiH.s:11128  .text.SEGGER_RTT_Init:0000000000000000 SEGGER_RTT_Init
/var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccs0vIiH.s:11348  .text.SEGGER_RTT_Init:000000000000007c $d
/var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccs0vIiH.s:11356  .text.SEGGER_RTT_SetTerminal:0000000000000000 $t
/var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccs0vIiH.s:11363  .text.SEGGER_RTT_SetTerminal:0000000000000000 SEGGER_RTT_SetTerminal
/var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccs0vIiH.s:12009  .text.SEGGER_RTT_SetTerminal:0000000000000190 $d
/var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccs0vIiH.s:12019  .text.SEGGER_RTT_TerminalOut:0000000000000000 $t
/var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccs0vIiH.s:12026  .text.SEGGER_RTT_TerminalOut:0000000000000000 SEGGER_RTT_TerminalOut
/var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccs0vIiH.s:12905  .text.SEGGER_RTT_TerminalOut:0000000000000248 $d
/var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccs0vIiH.s:12920  .text.SEGGER_RTT_TerminalOut:0000000000000260 $t
/var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccs0vIiH.s:13984  .text.SEGGER_RTT_TerminalOut:0000000000000528 $d
/var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccs0vIiH.s:13990  .text.SEGGER_RTT_GetAvailWriteSpace:0000000000000000 $t
/var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccs0vIiH.s:13997  .text.SEGGER_RTT_GetAvailWriteSpace:0000000000000000 SEGGER_RTT_GetAvailWriteSpace
/var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccs0vIiH.s:14058  .text.SEGGER_RTT_GetAvailWriteSpace:000000000000001c $d
/var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccs0vIiH.s:14063  .text.SEGGER_RTT_GetBytesInBuffer:0000000000000000 $t
/var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccs0vIiH.s:14070  .text.SEGGER_RTT_GetBytesInBuffer:0000000000000000 SEGGER_RTT_GetBytesInBuffer
/var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccs0vIiH.s:14118  .text.SEGGER_RTT_GetBytesInBuffer:000000000000001c $d
/var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccs0vIiH.s:14134  .bss._SEGGER_RTT:0000000000000000 _SEGGER_RTT
/var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccs0vIiH.s:14127  .bss._ActiveTerminal:0000000000000000 _ActiveTerminal
/var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccs0vIiH.s:14128  .bss._ActiveTerminal:0000000000000000 $d
/var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccs0vIiH.s:14130  .bss._SEGGER_RTT:0000000000000000 $d
/var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccs0vIiH.s:14137  .bss._acDownBuffer:0000000000000000 $d
/var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccs0vIiH.s:14141  .bss._acDownBuffer:0000000000000000 _acDownBuffer
/var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccs0vIiH.s:14144  .bss._acUpBuffer:0000000000000000 $d
/var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccs0vIiH.s:14148  .bss._acUpBuffer:0000000000000000 _acUpBuffer
/var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccs0vIiH.s:14151  .rodata._aTerminalId:0000000000000000 $d
/var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccs0vIiH.s:14155  .rodata._aTerminalId:0000000000000000 _aTerminalId

UNDEFINED SYMBOLS
memcpy
memset
strlen
