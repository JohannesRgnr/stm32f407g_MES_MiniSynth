ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccSC4OZm.s 			page 1


   1              		.cpu cortex-m4
   2              		.arch armv7e-m
   3              		.fpu fpv4-sp-d16
   4              		.eabi_attribute 27, 1
   5              		.eabi_attribute 28, 1
   6              		.eabi_attribute 20, 1
   7              		.eabi_attribute 21, 1
   8              		.eabi_attribute 23, 3
   9              		.eabi_attribute 24, 1
  10              		.eabi_attribute 25, 1
  11              		.eabi_attribute 26, 1
  12              		.eabi_attribute 30, 2
  13              		.eabi_attribute 34, 1
  14              		.eabi_attribute 18, 4
  15              		.file	"SEGGER_RTT.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.rodata.SEGGER_RTT_ReadUpBufferNoLock.str1.4,"aMS",%progbits,1
  20              		.align	2
  21              	.LC0:
  22 0000 5465726D 		.ascii	"Terminal\000"
  22      696E616C 
  22      00
  23              		.section	.text.SEGGER_RTT_ReadUpBufferNoLock,"ax",%progbits
  24              		.align	1
  25              		.p2align 2,,3
  26              		.global	SEGGER_RTT_ReadUpBufferNoLock
  27              		.syntax unified
  28              		.thumb
  29              		.thumb_func
  31              	SEGGER_RTT_ReadUpBufferNoLock:
  32              	.LVL0:
  33              	.LFB5:
  34              		.file 1 "Core/Src/SEGGER_RTT.c"
   1:Core/Src/SEGGER_RTT.c **** /*********************************************************************
   2:Core/Src/SEGGER_RTT.c **** *                    SEGGER Microcontroller GmbH                     *
   3:Core/Src/SEGGER_RTT.c **** *                        The Embedded Experts                        *
   4:Core/Src/SEGGER_RTT.c **** **********************************************************************
   5:Core/Src/SEGGER_RTT.c **** *                                                                    *
   6:Core/Src/SEGGER_RTT.c **** *            (c) 1995 - 2019 SEGGER Microcontroller GmbH             *
   7:Core/Src/SEGGER_RTT.c **** *                                                                    *
   8:Core/Src/SEGGER_RTT.c **** *       www.segger.com     Support: support@segger.com               *
   9:Core/Src/SEGGER_RTT.c **** *                                                                    *
  10:Core/Src/SEGGER_RTT.c **** **********************************************************************
  11:Core/Src/SEGGER_RTT.c **** *                                                                    *
  12:Core/Src/SEGGER_RTT.c **** *       SEGGER RTT * Real Time Transfer for embedded targets         *
  13:Core/Src/SEGGER_RTT.c **** *                                                                    *
  14:Core/Src/SEGGER_RTT.c **** **********************************************************************
  15:Core/Src/SEGGER_RTT.c **** *                                                                    *
  16:Core/Src/SEGGER_RTT.c **** * All rights reserved.                                               *
  17:Core/Src/SEGGER_RTT.c **** *                                                                    *
  18:Core/Src/SEGGER_RTT.c **** * SEGGER strongly recommends to not make any changes                 *
  19:Core/Src/SEGGER_RTT.c **** * to or modify the source code of this software in order to stay     *
  20:Core/Src/SEGGER_RTT.c **** * compatible with the RTT protocol and J-Link.                       *
  21:Core/Src/SEGGER_RTT.c **** *                                                                    *
  22:Core/Src/SEGGER_RTT.c **** * Redistribution and use in source and binary forms, with or         *
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccSC4OZm.s 			page 2


  23:Core/Src/SEGGER_RTT.c **** * without modification, are permitted provided that the following    *
  24:Core/Src/SEGGER_RTT.c **** * condition is met:                                                  *
  25:Core/Src/SEGGER_RTT.c **** *                                                                    *
  26:Core/Src/SEGGER_RTT.c **** * o Redistributions of source code must retain the above copyright   *
  27:Core/Src/SEGGER_RTT.c **** *   notice, this condition and the following disclaimer.             *
  28:Core/Src/SEGGER_RTT.c **** *                                                                    *
  29:Core/Src/SEGGER_RTT.c **** * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND             *
  30:Core/Src/SEGGER_RTT.c **** * CONTRIBUTORS "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,        *
  31:Core/Src/SEGGER_RTT.c **** * INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF           *
  32:Core/Src/SEGGER_RTT.c **** * MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE           *
  33:Core/Src/SEGGER_RTT.c **** * DISCLAIMED. IN NO EVENT SHALL SEGGER Microcontroller BE LIABLE FOR *
  34:Core/Src/SEGGER_RTT.c **** * ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR           *
  35:Core/Src/SEGGER_RTT.c **** * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT  *
  36:Core/Src/SEGGER_RTT.c **** * OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS;    *
  37:Core/Src/SEGGER_RTT.c **** * OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF      *
  38:Core/Src/SEGGER_RTT.c **** * LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT          *
  39:Core/Src/SEGGER_RTT.c **** * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE  *
  40:Core/Src/SEGGER_RTT.c **** * USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH   *
  41:Core/Src/SEGGER_RTT.c **** * DAMAGE.                                                            *
  42:Core/Src/SEGGER_RTT.c **** *                                                                    *
  43:Core/Src/SEGGER_RTT.c **** **********************************************************************
  44:Core/Src/SEGGER_RTT.c **** ---------------------------END-OF-HEADER------------------------------
  45:Core/Src/SEGGER_RTT.c **** File    : SEGGER_RTT.c
  46:Core/Src/SEGGER_RTT.c **** Purpose : Implementation of SEGGER real-time transfer (RTT) which
  47:Core/Src/SEGGER_RTT.c ****           allows real-time communication on targets which support
  48:Core/Src/SEGGER_RTT.c ****           debugger memory accesses while the CPU is running.
  49:Core/Src/SEGGER_RTT.c **** Revision: $Rev: 26642 $
  50:Core/Src/SEGGER_RTT.c **** 
  51:Core/Src/SEGGER_RTT.c **** Additional information:
  52:Core/Src/SEGGER_RTT.c ****           Type "int" is assumed to be 32-bits in size
  53:Core/Src/SEGGER_RTT.c ****           H->T    Host to target communication
  54:Core/Src/SEGGER_RTT.c ****           T->H    Target to host communication
  55:Core/Src/SEGGER_RTT.c **** 
  56:Core/Src/SEGGER_RTT.c ****           RTT channel 0 is always present and reserved for Terminal usage.
  57:Core/Src/SEGGER_RTT.c ****           Name is fixed to "Terminal"
  58:Core/Src/SEGGER_RTT.c **** 
  59:Core/Src/SEGGER_RTT.c ****           Effective buffer size: SizeOfBuffer - 1
  60:Core/Src/SEGGER_RTT.c **** 
  61:Core/Src/SEGGER_RTT.c ****           WrOff == RdOff:       Buffer is empty
  62:Core/Src/SEGGER_RTT.c ****           WrOff == (RdOff - 1): Buffer is full
  63:Core/Src/SEGGER_RTT.c ****           WrOff >  RdOff:       Free space includes wrap-around
  64:Core/Src/SEGGER_RTT.c ****           WrOff <  RdOff:       Used space includes wrap-around
  65:Core/Src/SEGGER_RTT.c ****           (WrOff == (SizeOfBuffer - 1)) && (RdOff == 0):  
  66:Core/Src/SEGGER_RTT.c ****                                 Buffer full and wrap-around after next byte
  67:Core/Src/SEGGER_RTT.c **** 
  68:Core/Src/SEGGER_RTT.c **** 
  69:Core/Src/SEGGER_RTT.c **** ----------------------------------------------------------------------
  70:Core/Src/SEGGER_RTT.c **** */
  71:Core/Src/SEGGER_RTT.c **** 
  72:Core/Src/SEGGER_RTT.c **** #include "SEGGER_RTT.h"
  73:Core/Src/SEGGER_RTT.c **** 
  74:Core/Src/SEGGER_RTT.c **** #include <string.h>                 // for memcpy
  75:Core/Src/SEGGER_RTT.c **** 
  76:Core/Src/SEGGER_RTT.c **** /*********************************************************************
  77:Core/Src/SEGGER_RTT.c **** *
  78:Core/Src/SEGGER_RTT.c **** *       Configuration, default values
  79:Core/Src/SEGGER_RTT.c **** *
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccSC4OZm.s 			page 3


  80:Core/Src/SEGGER_RTT.c **** **********************************************************************
  81:Core/Src/SEGGER_RTT.c **** */
  82:Core/Src/SEGGER_RTT.c **** 
  83:Core/Src/SEGGER_RTT.c **** #if SEGGER_RTT_CPU_CACHE_LINE_SIZE
  84:Core/Src/SEGGER_RTT.c ****   #ifdef SEGGER_RTT_CB_ALIGN
  85:Core/Src/SEGGER_RTT.c ****     #error "Custom SEGGER_RTT_CB_ALIGN() is not supported for SEGGER_RTT_CPU_CACHE_LINE_SIZE != 0"
  86:Core/Src/SEGGER_RTT.c ****   #endif
  87:Core/Src/SEGGER_RTT.c ****   #ifdef SEGGER_RTT_BUFFER_ALIGN
  88:Core/Src/SEGGER_RTT.c ****     #error "Custom SEGGER_RTT_BUFFER_ALIGN() is not supported for SEGGER_RTT_CPU_CACHE_LINE_SIZE !=
  89:Core/Src/SEGGER_RTT.c ****   #endif
  90:Core/Src/SEGGER_RTT.c ****   #ifdef SEGGER_RTT_PUT_CB_SECTION
  91:Core/Src/SEGGER_RTT.c ****     #error "Custom SEGGER_RTT_PUT_CB_SECTION() is not supported for SEGGER_RTT_CPU_CACHE_LINE_SIZE 
  92:Core/Src/SEGGER_RTT.c ****   #endif
  93:Core/Src/SEGGER_RTT.c ****   #ifdef SEGGER_RTT_PUT_BUFFER_SECTION
  94:Core/Src/SEGGER_RTT.c ****     #error "Custom SEGGER_RTT_PUT_BUFFER_SECTION() is not supported for SEGGER_RTT_CPU_CACHE_LINE_S
  95:Core/Src/SEGGER_RTT.c ****   #endif
  96:Core/Src/SEGGER_RTT.c ****   #ifdef SEGGER_RTT_BUFFER_ALIGNMENT
  97:Core/Src/SEGGER_RTT.c ****     #error "Custom SEGGER_RTT_BUFFER_ALIGNMENT is not supported for SEGGER_RTT_CPU_CACHE_LINE_SIZE 
  98:Core/Src/SEGGER_RTT.c ****   #endif
  99:Core/Src/SEGGER_RTT.c ****   #ifdef SEGGER_RTT_ALIGNMENT
 100:Core/Src/SEGGER_RTT.c ****     #error "Custom SEGGER_RTT_ALIGNMENT is not supported for SEGGER_RTT_CPU_CACHE_LINE_SIZE != 0"
 101:Core/Src/SEGGER_RTT.c ****   #endif
 102:Core/Src/SEGGER_RTT.c **** #endif
 103:Core/Src/SEGGER_RTT.c **** 
 104:Core/Src/SEGGER_RTT.c **** #ifndef   BUFFER_SIZE_UP
 105:Core/Src/SEGGER_RTT.c ****   #define BUFFER_SIZE_UP                                  1024  // Size of the buffer for terminal 
 106:Core/Src/SEGGER_RTT.c **** #endif
 107:Core/Src/SEGGER_RTT.c **** 
 108:Core/Src/SEGGER_RTT.c **** #ifndef   BUFFER_SIZE_DOWN
 109:Core/Src/SEGGER_RTT.c ****   #define BUFFER_SIZE_DOWN                                16    // Size of the buffer for terminal 
 110:Core/Src/SEGGER_RTT.c **** #endif
 111:Core/Src/SEGGER_RTT.c **** 
 112:Core/Src/SEGGER_RTT.c **** #ifndef   SEGGER_RTT_MAX_NUM_UP_BUFFERS
 113:Core/Src/SEGGER_RTT.c ****   #define SEGGER_RTT_MAX_NUM_UP_BUFFERS                    2    // Number of up-buffers (T->H) avai
 114:Core/Src/SEGGER_RTT.c **** #endif
 115:Core/Src/SEGGER_RTT.c **** 
 116:Core/Src/SEGGER_RTT.c **** #ifndef   SEGGER_RTT_MAX_NUM_DOWN_BUFFERS
 117:Core/Src/SEGGER_RTT.c ****   #define SEGGER_RTT_MAX_NUM_DOWN_BUFFERS                  2    // Number of down-buffers (H->T) av
 118:Core/Src/SEGGER_RTT.c **** #endif
 119:Core/Src/SEGGER_RTT.c **** 
 120:Core/Src/SEGGER_RTT.c **** #ifndef SEGGER_RTT_BUFFER_SECTION
 121:Core/Src/SEGGER_RTT.c ****   #if defined(SEGGER_RTT_SECTION)
 122:Core/Src/SEGGER_RTT.c ****     #define SEGGER_RTT_BUFFER_SECTION SEGGER_RTT_SECTION
 123:Core/Src/SEGGER_RTT.c ****   #endif
 124:Core/Src/SEGGER_RTT.c **** #endif
 125:Core/Src/SEGGER_RTT.c **** 
 126:Core/Src/SEGGER_RTT.c **** #ifndef   SEGGER_RTT_ALIGNMENT
 127:Core/Src/SEGGER_RTT.c ****   #define SEGGER_RTT_ALIGNMENT                            SEGGER_RTT_CPU_CACHE_LINE_SIZE
 128:Core/Src/SEGGER_RTT.c **** #endif
 129:Core/Src/SEGGER_RTT.c **** 
 130:Core/Src/SEGGER_RTT.c **** #ifndef   SEGGER_RTT_BUFFER_ALIGNMENT
 131:Core/Src/SEGGER_RTT.c ****   #define SEGGER_RTT_BUFFER_ALIGNMENT                     SEGGER_RTT_CPU_CACHE_LINE_SIZE
 132:Core/Src/SEGGER_RTT.c **** #endif
 133:Core/Src/SEGGER_RTT.c **** 
 134:Core/Src/SEGGER_RTT.c **** #ifndef   SEGGER_RTT_MODE_DEFAULT
 135:Core/Src/SEGGER_RTT.c ****   #define SEGGER_RTT_MODE_DEFAULT                         SEGGER_RTT_MODE_NO_BLOCK_SKIP
 136:Core/Src/SEGGER_RTT.c **** #endif
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccSC4OZm.s 			page 4


 137:Core/Src/SEGGER_RTT.c **** 
 138:Core/Src/SEGGER_RTT.c **** #ifndef   SEGGER_RTT_LOCK
 139:Core/Src/SEGGER_RTT.c ****   #define SEGGER_RTT_LOCK()
 140:Core/Src/SEGGER_RTT.c **** #endif
 141:Core/Src/SEGGER_RTT.c **** 
 142:Core/Src/SEGGER_RTT.c **** #ifndef   SEGGER_RTT_UNLOCK
 143:Core/Src/SEGGER_RTT.c ****   #define SEGGER_RTT_UNLOCK()
 144:Core/Src/SEGGER_RTT.c **** #endif
 145:Core/Src/SEGGER_RTT.c **** 
 146:Core/Src/SEGGER_RTT.c **** #ifndef   STRLEN
 147:Core/Src/SEGGER_RTT.c ****   #define STRLEN(a)                                       strlen((a))
 148:Core/Src/SEGGER_RTT.c **** #endif
 149:Core/Src/SEGGER_RTT.c **** 
 150:Core/Src/SEGGER_RTT.c **** #ifndef   STRCPY
 151:Core/Src/SEGGER_RTT.c ****   #define STRCPY(pDest, pSrc)                             strcpy((pDest), (pSrc))
 152:Core/Src/SEGGER_RTT.c **** #endif
 153:Core/Src/SEGGER_RTT.c **** 
 154:Core/Src/SEGGER_RTT.c **** #ifndef   SEGGER_RTT_MEMCPY_USE_BYTELOOP
 155:Core/Src/SEGGER_RTT.c ****   #define SEGGER_RTT_MEMCPY_USE_BYTELOOP                  0
 156:Core/Src/SEGGER_RTT.c **** #endif
 157:Core/Src/SEGGER_RTT.c **** 
 158:Core/Src/SEGGER_RTT.c **** #ifndef   SEGGER_RTT_MEMCPY
 159:Core/Src/SEGGER_RTT.c ****   #ifdef  MEMCPY
 160:Core/Src/SEGGER_RTT.c ****     #define SEGGER_RTT_MEMCPY(pDest, pSrc, NumBytes)      MEMCPY((pDest), (pSrc), (NumBytes))
 161:Core/Src/SEGGER_RTT.c ****   #else
 162:Core/Src/SEGGER_RTT.c ****     #define SEGGER_RTT_MEMCPY(pDest, pSrc, NumBytes)      memcpy((pDest), (pSrc), (NumBytes))
 163:Core/Src/SEGGER_RTT.c ****   #endif
 164:Core/Src/SEGGER_RTT.c **** #endif
 165:Core/Src/SEGGER_RTT.c **** 
 166:Core/Src/SEGGER_RTT.c **** #ifndef   MIN
 167:Core/Src/SEGGER_RTT.c ****   #define MIN(a, b)         (((a) < (b)) ? (a) : (b))
 168:Core/Src/SEGGER_RTT.c **** #endif
 169:Core/Src/SEGGER_RTT.c **** 
 170:Core/Src/SEGGER_RTT.c **** #ifndef   MAX
 171:Core/Src/SEGGER_RTT.c ****   #define MAX(a, b)         (((a) > (b)) ? (a) : (b))
 172:Core/Src/SEGGER_RTT.c **** #endif
 173:Core/Src/SEGGER_RTT.c **** //
 174:Core/Src/SEGGER_RTT.c **** // For some environments, NULL may not be defined until certain headers are included
 175:Core/Src/SEGGER_RTT.c **** //
 176:Core/Src/SEGGER_RTT.c **** #ifndef NULL
 177:Core/Src/SEGGER_RTT.c ****   #define NULL 0
 178:Core/Src/SEGGER_RTT.c **** #endif
 179:Core/Src/SEGGER_RTT.c **** 
 180:Core/Src/SEGGER_RTT.c **** /*********************************************************************
 181:Core/Src/SEGGER_RTT.c **** *
 182:Core/Src/SEGGER_RTT.c **** *       Defines, fixed
 183:Core/Src/SEGGER_RTT.c **** *
 184:Core/Src/SEGGER_RTT.c **** **********************************************************************
 185:Core/Src/SEGGER_RTT.c **** */
 186:Core/Src/SEGGER_RTT.c **** #if (defined __ICCARM__) || (defined __ICCRX__)
 187:Core/Src/SEGGER_RTT.c ****   #define RTT_PRAGMA(P) _Pragma(#P)
 188:Core/Src/SEGGER_RTT.c **** #endif
 189:Core/Src/SEGGER_RTT.c **** 
 190:Core/Src/SEGGER_RTT.c **** #if SEGGER_RTT_ALIGNMENT || SEGGER_RTT_BUFFER_ALIGNMENT
 191:Core/Src/SEGGER_RTT.c ****   #if ((defined __GNUC__) || (defined __clang__))
 192:Core/Src/SEGGER_RTT.c ****     #define SEGGER_RTT_ALIGN(Var, Alignment) Var __attribute__ ((aligned (Alignment)))
 193:Core/Src/SEGGER_RTT.c ****   #elif (defined __ICCARM__) || (defined __ICCRX__)
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccSC4OZm.s 			page 5


 194:Core/Src/SEGGER_RTT.c ****     #define PRAGMA(A) _Pragma(#A)
 195:Core/Src/SEGGER_RTT.c **** #define SEGGER_RTT_ALIGN(Var, Alignment) RTT_PRAGMA(data_alignment=Alignment) \
 196:Core/Src/SEGGER_RTT.c ****                                   Var
 197:Core/Src/SEGGER_RTT.c ****   #elif (defined __CC_ARM)
 198:Core/Src/SEGGER_RTT.c ****     #define SEGGER_RTT_ALIGN(Var, Alignment) Var __attribute__ ((aligned (Alignment)))
 199:Core/Src/SEGGER_RTT.c ****   #else
 200:Core/Src/SEGGER_RTT.c ****     #error "Alignment not supported for this compiler."
 201:Core/Src/SEGGER_RTT.c ****   #endif
 202:Core/Src/SEGGER_RTT.c **** #else
 203:Core/Src/SEGGER_RTT.c ****   #define SEGGER_RTT_ALIGN(Var, Alignment) Var
 204:Core/Src/SEGGER_RTT.c **** #endif
 205:Core/Src/SEGGER_RTT.c **** 
 206:Core/Src/SEGGER_RTT.c **** #if defined(SEGGER_RTT_SECTION) || defined (SEGGER_RTT_BUFFER_SECTION)
 207:Core/Src/SEGGER_RTT.c ****   #if ((defined __GNUC__) || (defined __clang__))
 208:Core/Src/SEGGER_RTT.c ****     #define SEGGER_RTT_PUT_SECTION(Var, Section) __attribute__ ((section (Section))) Var
 209:Core/Src/SEGGER_RTT.c ****   #elif (defined __ICCARM__) || (defined __ICCRX__)
 210:Core/Src/SEGGER_RTT.c **** #define SEGGER_RTT_PUT_SECTION(Var, Section) RTT_PRAGMA(location=Section) \
 211:Core/Src/SEGGER_RTT.c ****                                         Var
 212:Core/Src/SEGGER_RTT.c ****   #elif (defined __CC_ARM)
 213:Core/Src/SEGGER_RTT.c ****     #define SEGGER_RTT_PUT_SECTION(Var, Section) __attribute__ ((section (Section), zero_init))  Va
 214:Core/Src/SEGGER_RTT.c ****   #else
 215:Core/Src/SEGGER_RTT.c ****     #error "Section placement not supported for this compiler."
 216:Core/Src/SEGGER_RTT.c ****   #endif
 217:Core/Src/SEGGER_RTT.c **** #else
 218:Core/Src/SEGGER_RTT.c ****   #define SEGGER_RTT_PUT_SECTION(Var, Section) Var
 219:Core/Src/SEGGER_RTT.c **** #endif
 220:Core/Src/SEGGER_RTT.c **** 
 221:Core/Src/SEGGER_RTT.c **** #if SEGGER_RTT_ALIGNMENT
 222:Core/Src/SEGGER_RTT.c ****   #define SEGGER_RTT_CB_ALIGN(Var)  SEGGER_RTT_ALIGN(Var, SEGGER_RTT_ALIGNMENT)
 223:Core/Src/SEGGER_RTT.c **** #else
 224:Core/Src/SEGGER_RTT.c ****   #define SEGGER_RTT_CB_ALIGN(Var)  Var
 225:Core/Src/SEGGER_RTT.c **** #endif
 226:Core/Src/SEGGER_RTT.c **** 
 227:Core/Src/SEGGER_RTT.c **** #if SEGGER_RTT_BUFFER_ALIGNMENT
 228:Core/Src/SEGGER_RTT.c ****   #define SEGGER_RTT_BUFFER_ALIGN(Var)  SEGGER_RTT_ALIGN(Var, SEGGER_RTT_BUFFER_ALIGNMENT)
 229:Core/Src/SEGGER_RTT.c **** #else
 230:Core/Src/SEGGER_RTT.c ****   #define SEGGER_RTT_BUFFER_ALIGN(Var)  Var
 231:Core/Src/SEGGER_RTT.c **** #endif
 232:Core/Src/SEGGER_RTT.c **** 
 233:Core/Src/SEGGER_RTT.c **** 
 234:Core/Src/SEGGER_RTT.c **** #if defined(SEGGER_RTT_SECTION)
 235:Core/Src/SEGGER_RTT.c ****   #define SEGGER_RTT_PUT_CB_SECTION(Var) SEGGER_RTT_PUT_SECTION(Var, SEGGER_RTT_SECTION)
 236:Core/Src/SEGGER_RTT.c **** #else
 237:Core/Src/SEGGER_RTT.c ****   #define SEGGER_RTT_PUT_CB_SECTION(Var) Var
 238:Core/Src/SEGGER_RTT.c **** #endif
 239:Core/Src/SEGGER_RTT.c **** 
 240:Core/Src/SEGGER_RTT.c **** #if defined(SEGGER_RTT_BUFFER_SECTION)
 241:Core/Src/SEGGER_RTT.c ****   #define SEGGER_RTT_PUT_BUFFER_SECTION(Var) SEGGER_RTT_PUT_SECTION(Var, SEGGER_RTT_BUFFER_SECTION)
 242:Core/Src/SEGGER_RTT.c **** #else
 243:Core/Src/SEGGER_RTT.c ****   #define SEGGER_RTT_PUT_BUFFER_SECTION(Var) Var
 244:Core/Src/SEGGER_RTT.c **** #endif
 245:Core/Src/SEGGER_RTT.c **** 
 246:Core/Src/SEGGER_RTT.c **** /*********************************************************************
 247:Core/Src/SEGGER_RTT.c **** *
 248:Core/Src/SEGGER_RTT.c **** *       Static const data
 249:Core/Src/SEGGER_RTT.c **** *
 250:Core/Src/SEGGER_RTT.c **** **********************************************************************
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccSC4OZm.s 			page 6


 251:Core/Src/SEGGER_RTT.c **** */
 252:Core/Src/SEGGER_RTT.c **** 
 253:Core/Src/SEGGER_RTT.c **** static unsigned char _aTerminalId[16] = { '0', '1', '2', '3', '4', '5', '6', '7', '8', '9', 'A', 'B
 254:Core/Src/SEGGER_RTT.c **** 
 255:Core/Src/SEGGER_RTT.c **** /*********************************************************************
 256:Core/Src/SEGGER_RTT.c **** *
 257:Core/Src/SEGGER_RTT.c **** *       Static data
 258:Core/Src/SEGGER_RTT.c **** *
 259:Core/Src/SEGGER_RTT.c **** **********************************************************************
 260:Core/Src/SEGGER_RTT.c **** */
 261:Core/Src/SEGGER_RTT.c **** 
 262:Core/Src/SEGGER_RTT.c **** //
 263:Core/Src/SEGGER_RTT.c **** // RTT Control Block and allocate buffers for channel 0
 264:Core/Src/SEGGER_RTT.c **** //
 265:Core/Src/SEGGER_RTT.c **** #if SEGGER_RTT_CPU_CACHE_LINE_SIZE
 266:Core/Src/SEGGER_RTT.c ****   #if ((defined __GNUC__) || (defined __clang__))
 267:Core/Src/SEGGER_RTT.c ****     SEGGER_RTT_CB _SEGGER_RTT                                                             __attribu
 268:Core/Src/SEGGER_RTT.c ****     static char   _acUpBuffer  [SEGGER_RTT__ROUND_UP_2_CACHE_LINE_SIZE(BUFFER_SIZE_UP)]   __attribu
 269:Core/Src/SEGGER_RTT.c ****     static char   _acDownBuffer[SEGGER_RTT__ROUND_UP_2_CACHE_LINE_SIZE(BUFFER_SIZE_DOWN)] __attribu
 270:Core/Src/SEGGER_RTT.c ****   #elif (defined __ICCARM__)
 271:Core/Src/SEGGER_RTT.c ****     #pragma data_alignment=SEGGER_RTT_CPU_CACHE_LINE_SIZE
 272:Core/Src/SEGGER_RTT.c ****     SEGGER_RTT_CB _SEGGER_RTT;
 273:Core/Src/SEGGER_RTT.c ****     #pragma data_alignment=SEGGER_RTT_CPU_CACHE_LINE_SIZE
 274:Core/Src/SEGGER_RTT.c ****     static char   _acUpBuffer  [SEGGER_RTT__ROUND_UP_2_CACHE_LINE_SIZE(BUFFER_SIZE_UP)];
 275:Core/Src/SEGGER_RTT.c ****     #pragma data_alignment=SEGGER_RTT_CPU_CACHE_LINE_SIZE
 276:Core/Src/SEGGER_RTT.c ****     static char   _acDownBuffer[SEGGER_RTT__ROUND_UP_2_CACHE_LINE_SIZE(BUFFER_SIZE_DOWN)];
 277:Core/Src/SEGGER_RTT.c ****   #else
 278:Core/Src/SEGGER_RTT.c ****     #error "Don't know how to place _SEGGER_RTT, _acUpBuffer, _acDownBuffer cache-line aligned"
 279:Core/Src/SEGGER_RTT.c ****   #endif
 280:Core/Src/SEGGER_RTT.c **** #else
 281:Core/Src/SEGGER_RTT.c ****   SEGGER_RTT_PUT_CB_SECTION(SEGGER_RTT_CB_ALIGN(SEGGER_RTT_CB _SEGGER_RTT));
 282:Core/Src/SEGGER_RTT.c ****   SEGGER_RTT_PUT_BUFFER_SECTION(SEGGER_RTT_BUFFER_ALIGN(static char _acUpBuffer  [BUFFER_SIZE_UP]))
 283:Core/Src/SEGGER_RTT.c ****   SEGGER_RTT_PUT_BUFFER_SECTION(SEGGER_RTT_BUFFER_ALIGN(static char _acDownBuffer[BUFFER_SIZE_DOWN]
 284:Core/Src/SEGGER_RTT.c **** #endif
 285:Core/Src/SEGGER_RTT.c **** 
 286:Core/Src/SEGGER_RTT.c **** static unsigned char _ActiveTerminal;
 287:Core/Src/SEGGER_RTT.c **** 
 288:Core/Src/SEGGER_RTT.c **** /*********************************************************************
 289:Core/Src/SEGGER_RTT.c **** *
 290:Core/Src/SEGGER_RTT.c **** *       Static functions
 291:Core/Src/SEGGER_RTT.c **** *
 292:Core/Src/SEGGER_RTT.c **** **********************************************************************
 293:Core/Src/SEGGER_RTT.c **** */
 294:Core/Src/SEGGER_RTT.c **** 
 295:Core/Src/SEGGER_RTT.c **** /*********************************************************************
 296:Core/Src/SEGGER_RTT.c **** *
 297:Core/Src/SEGGER_RTT.c **** *       _DoInit()
 298:Core/Src/SEGGER_RTT.c **** *
 299:Core/Src/SEGGER_RTT.c **** *  Function description
 300:Core/Src/SEGGER_RTT.c **** *    Initializes the control block an buffers.
 301:Core/Src/SEGGER_RTT.c **** *    May only be called via INIT() to avoid overriding settings.
 302:Core/Src/SEGGER_RTT.c **** *
 303:Core/Src/SEGGER_RTT.c **** */
 304:Core/Src/SEGGER_RTT.c **** #define INIT()  {                                                                                  
 305:Core/Src/SEGGER_RTT.c ****                   volatile SEGGER_RTT_CB* pRTTCBInit;                                              
 306:Core/Src/SEGGER_RTT.c ****                   pRTTCBInit = (volatile SEGGER_RTT_CB*)((char*)&_SEGGER_RTT + SEGGER_RTT_UNCACHED_
 307:Core/Src/SEGGER_RTT.c ****                   do {                                                                             
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccSC4OZm.s 			page 7


 308:Core/Src/SEGGER_RTT.c ****                     if (pRTTCBInit->acID[0] == '\0') {                                             
 309:Core/Src/SEGGER_RTT.c ****                       _DoInit();                                                                   
 310:Core/Src/SEGGER_RTT.c ****                     }                                                                              
 311:Core/Src/SEGGER_RTT.c ****                   } while (0);                                                                     
 312:Core/Src/SEGGER_RTT.c ****                 }
 313:Core/Src/SEGGER_RTT.c **** 
 314:Core/Src/SEGGER_RTT.c **** static void _DoInit(void) {
 315:Core/Src/SEGGER_RTT.c ****   volatile SEGGER_RTT_CB* p;   // Volatile to make sure that compiler cannot change the order of ac
 316:Core/Src/SEGGER_RTT.c ****   static const char _aInitStr[] = "\0\0\0\0\0\0TTR REGGES";  // Init complete ID string to make sur
 317:Core/Src/SEGGER_RTT.c ****   unsigned i;
 318:Core/Src/SEGGER_RTT.c ****   //
 319:Core/Src/SEGGER_RTT.c ****   // Initialize control block
 320:Core/Src/SEGGER_RTT.c ****   //
 321:Core/Src/SEGGER_RTT.c ****   p                     = (volatile SEGGER_RTT_CB*)((char*)&_SEGGER_RTT + SEGGER_RTT_UNCACHED_OFF);
 322:Core/Src/SEGGER_RTT.c ****   memset((SEGGER_RTT_CB*)p, 0, sizeof(_SEGGER_RTT));         // Make sure that the RTT CB is always
 323:Core/Src/SEGGER_RTT.c ****   p->MaxNumUpBuffers    = SEGGER_RTT_MAX_NUM_UP_BUFFERS;
 324:Core/Src/SEGGER_RTT.c ****   p->MaxNumDownBuffers  = SEGGER_RTT_MAX_NUM_DOWN_BUFFERS;
 325:Core/Src/SEGGER_RTT.c ****   //
 326:Core/Src/SEGGER_RTT.c ****   // Initialize up buffer 0
 327:Core/Src/SEGGER_RTT.c ****   //
 328:Core/Src/SEGGER_RTT.c ****   p->aUp[0].sName         = "Terminal";
 329:Core/Src/SEGGER_RTT.c ****   p->aUp[0].pBuffer       = _acUpBuffer;
 330:Core/Src/SEGGER_RTT.c ****   p->aUp[0].SizeOfBuffer  = BUFFER_SIZE_UP;
 331:Core/Src/SEGGER_RTT.c ****   p->aUp[0].RdOff         = 0u;
 332:Core/Src/SEGGER_RTT.c ****   p->aUp[0].WrOff         = 0u;
 333:Core/Src/SEGGER_RTT.c ****   p->aUp[0].Flags         = SEGGER_RTT_MODE_DEFAULT;
 334:Core/Src/SEGGER_RTT.c ****   //
 335:Core/Src/SEGGER_RTT.c ****   // Initialize down buffer 0
 336:Core/Src/SEGGER_RTT.c ****   //
 337:Core/Src/SEGGER_RTT.c ****   p->aDown[0].sName         = "Terminal";
 338:Core/Src/SEGGER_RTT.c ****   p->aDown[0].pBuffer       = _acDownBuffer;
 339:Core/Src/SEGGER_RTT.c ****   p->aDown[0].SizeOfBuffer  = BUFFER_SIZE_DOWN;
 340:Core/Src/SEGGER_RTT.c ****   p->aDown[0].RdOff         = 0u;
 341:Core/Src/SEGGER_RTT.c ****   p->aDown[0].WrOff         = 0u;
 342:Core/Src/SEGGER_RTT.c ****   p->aDown[0].Flags         = SEGGER_RTT_MODE_DEFAULT;
 343:Core/Src/SEGGER_RTT.c ****   //
 344:Core/Src/SEGGER_RTT.c ****   // Finish initialization of the control block.
 345:Core/Src/SEGGER_RTT.c ****   // Copy Id string backwards to make sure that "SEGGER RTT" is not found in initializer memory (us
 346:Core/Src/SEGGER_RTT.c ****   // as this would cause J-Link to "find" the control block at a wrong address.
 347:Core/Src/SEGGER_RTT.c ****   //
 348:Core/Src/SEGGER_RTT.c ****   RTT__DMB();                       // Force order of memory accesses for cores that may perform ou
 349:Core/Src/SEGGER_RTT.c ****   for (i = 0; i < sizeof(_aInitStr) - 1; ++i) {
 350:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 351:Core/Src/SEGGER_RTT.c ****   }
 352:Core/Src/SEGGER_RTT.c ****   RTT__DMB();                       // Force order of memory accesses for cores that may perform ou
 353:Core/Src/SEGGER_RTT.c **** }
 354:Core/Src/SEGGER_RTT.c **** 
 355:Core/Src/SEGGER_RTT.c **** /*********************************************************************
 356:Core/Src/SEGGER_RTT.c **** *
 357:Core/Src/SEGGER_RTT.c **** *       _WriteBlocking()
 358:Core/Src/SEGGER_RTT.c **** *
 359:Core/Src/SEGGER_RTT.c **** *  Function description
 360:Core/Src/SEGGER_RTT.c **** *    Stores a specified number of characters in SEGGER RTT ring buffer
 361:Core/Src/SEGGER_RTT.c **** *    and updates the associated write pointer which is periodically
 362:Core/Src/SEGGER_RTT.c **** *    read by the host.
 363:Core/Src/SEGGER_RTT.c **** *    The caller is responsible for managing the write chunk sizes as
 364:Core/Src/SEGGER_RTT.c **** *    _WriteBlocking() will block until all data has been posted successfully.
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccSC4OZm.s 			page 8


 365:Core/Src/SEGGER_RTT.c **** *
 366:Core/Src/SEGGER_RTT.c **** *  Parameters
 367:Core/Src/SEGGER_RTT.c **** *    pRing        Ring buffer to post to.
 368:Core/Src/SEGGER_RTT.c **** *    pBuffer      Pointer to character array. Does not need to point to a \0 terminated string.
 369:Core/Src/SEGGER_RTT.c **** *    NumBytes     Number of bytes to be stored in the SEGGER RTT control block.
 370:Core/Src/SEGGER_RTT.c **** *
 371:Core/Src/SEGGER_RTT.c **** *  Return value
 372:Core/Src/SEGGER_RTT.c **** *    >= 0 - Number of bytes written into buffer.
 373:Core/Src/SEGGER_RTT.c **** */
 374:Core/Src/SEGGER_RTT.c **** static unsigned _WriteBlocking(SEGGER_RTT_BUFFER_UP* pRing, const char* pBuffer, unsigned NumBytes)
 375:Core/Src/SEGGER_RTT.c ****   unsigned NumBytesToWrite;
 376:Core/Src/SEGGER_RTT.c ****   unsigned NumBytesWritten;
 377:Core/Src/SEGGER_RTT.c ****   unsigned RdOff;
 378:Core/Src/SEGGER_RTT.c ****   unsigned WrOff;
 379:Core/Src/SEGGER_RTT.c ****   volatile char* pDst;
 380:Core/Src/SEGGER_RTT.c ****   //
 381:Core/Src/SEGGER_RTT.c ****   // Write data to buffer and handle wrap-around if necessary
 382:Core/Src/SEGGER_RTT.c ****   //
 383:Core/Src/SEGGER_RTT.c ****   NumBytesWritten = 0u;
 384:Core/Src/SEGGER_RTT.c ****   WrOff = pRing->WrOff;
 385:Core/Src/SEGGER_RTT.c ****   do {
 386:Core/Src/SEGGER_RTT.c ****     RdOff = pRing->RdOff;                         // May be changed by host (debug probe) in the me
 387:Core/Src/SEGGER_RTT.c ****     if (RdOff > WrOff) {
 388:Core/Src/SEGGER_RTT.c ****       NumBytesToWrite = RdOff - WrOff - 1u;
 389:Core/Src/SEGGER_RTT.c ****     } else {
 390:Core/Src/SEGGER_RTT.c ****       NumBytesToWrite = pRing->SizeOfBuffer - (WrOff - RdOff + 1u);
 391:Core/Src/SEGGER_RTT.c ****     }
 392:Core/Src/SEGGER_RTT.c ****     NumBytesToWrite = MIN(NumBytesToWrite, (pRing->SizeOfBuffer - WrOff));      // Number of bytes 
 393:Core/Src/SEGGER_RTT.c ****     NumBytesToWrite = MIN(NumBytesToWrite, NumBytes);
 394:Core/Src/SEGGER_RTT.c ****     pDst = (pRing->pBuffer + WrOff) + SEGGER_RTT_UNCACHED_OFF;
 395:Core/Src/SEGGER_RTT.c **** #if SEGGER_RTT_MEMCPY_USE_BYTELOOP
 396:Core/Src/SEGGER_RTT.c ****     NumBytesWritten += NumBytesToWrite;
 397:Core/Src/SEGGER_RTT.c ****     NumBytes        -= NumBytesToWrite;
 398:Core/Src/SEGGER_RTT.c ****     WrOff           += NumBytesToWrite;
 399:Core/Src/SEGGER_RTT.c ****     while (NumBytesToWrite--) {
 400:Core/Src/SEGGER_RTT.c ****       *pDst++ = *pBuffer++;
 401:Core/Src/SEGGER_RTT.c ****     };
 402:Core/Src/SEGGER_RTT.c **** #else
 403:Core/Src/SEGGER_RTT.c ****     SEGGER_RTT_MEMCPY((void*)pDst, pBuffer, NumBytesToWrite);
 404:Core/Src/SEGGER_RTT.c ****     NumBytesWritten += NumBytesToWrite;
 405:Core/Src/SEGGER_RTT.c ****     pBuffer         += NumBytesToWrite;
 406:Core/Src/SEGGER_RTT.c ****     NumBytes        -= NumBytesToWrite;
 407:Core/Src/SEGGER_RTT.c ****     WrOff           += NumBytesToWrite;
 408:Core/Src/SEGGER_RTT.c **** #endif
 409:Core/Src/SEGGER_RTT.c ****     if (WrOff == pRing->SizeOfBuffer) {
 410:Core/Src/SEGGER_RTT.c ****       WrOff = 0u;
 411:Core/Src/SEGGER_RTT.c ****     }
 412:Core/Src/SEGGER_RTT.c ****     RTT__DMB();                     // Force data write to be complete before writing the <WrOff>, 
 413:Core/Src/SEGGER_RTT.c ****     pRing->WrOff = WrOff;
 414:Core/Src/SEGGER_RTT.c ****   } while (NumBytes);
 415:Core/Src/SEGGER_RTT.c ****   return NumBytesWritten;
 416:Core/Src/SEGGER_RTT.c **** }
 417:Core/Src/SEGGER_RTT.c **** 
 418:Core/Src/SEGGER_RTT.c **** /*********************************************************************
 419:Core/Src/SEGGER_RTT.c **** *
 420:Core/Src/SEGGER_RTT.c **** *       _WriteNoCheck()
 421:Core/Src/SEGGER_RTT.c **** *
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccSC4OZm.s 			page 9


 422:Core/Src/SEGGER_RTT.c **** *  Function description
 423:Core/Src/SEGGER_RTT.c **** *    Stores a specified number of characters in SEGGER RTT ring buffer
 424:Core/Src/SEGGER_RTT.c **** *    and updates the associated write pointer which is periodically
 425:Core/Src/SEGGER_RTT.c **** *    read by the host.
 426:Core/Src/SEGGER_RTT.c **** *    It is callers responsibility to make sure data actually fits in buffer.
 427:Core/Src/SEGGER_RTT.c **** *
 428:Core/Src/SEGGER_RTT.c **** *  Parameters
 429:Core/Src/SEGGER_RTT.c **** *    pRing        Ring buffer to post to.
 430:Core/Src/SEGGER_RTT.c **** *    pBuffer      Pointer to character array. Does not need to point to a \0 terminated string.
 431:Core/Src/SEGGER_RTT.c **** *    NumBytes     Number of bytes to be stored in the SEGGER RTT control block.
 432:Core/Src/SEGGER_RTT.c **** *
 433:Core/Src/SEGGER_RTT.c **** *  Notes
 434:Core/Src/SEGGER_RTT.c **** *    (1) If there might not be enough space in the "Up"-buffer, call _WriteBlocking
 435:Core/Src/SEGGER_RTT.c **** */
 436:Core/Src/SEGGER_RTT.c **** static void _WriteNoCheck(SEGGER_RTT_BUFFER_UP* pRing, const char* pData, unsigned NumBytes) {
 437:Core/Src/SEGGER_RTT.c ****   unsigned NumBytesAtOnce;
 438:Core/Src/SEGGER_RTT.c ****   unsigned WrOff;
 439:Core/Src/SEGGER_RTT.c ****   unsigned Rem;
 440:Core/Src/SEGGER_RTT.c ****   volatile char* pDst;
 441:Core/Src/SEGGER_RTT.c **** 
 442:Core/Src/SEGGER_RTT.c ****   WrOff = pRing->WrOff;
 443:Core/Src/SEGGER_RTT.c ****   Rem = pRing->SizeOfBuffer - WrOff;
 444:Core/Src/SEGGER_RTT.c ****   if (Rem > NumBytes) {
 445:Core/Src/SEGGER_RTT.c ****     //
 446:Core/Src/SEGGER_RTT.c ****     // All data fits before wrap around
 447:Core/Src/SEGGER_RTT.c ****     //
 448:Core/Src/SEGGER_RTT.c ****     pDst = (pRing->pBuffer + WrOff) + SEGGER_RTT_UNCACHED_OFF;
 449:Core/Src/SEGGER_RTT.c **** #if SEGGER_RTT_MEMCPY_USE_BYTELOOP
 450:Core/Src/SEGGER_RTT.c ****     WrOff += NumBytes;
 451:Core/Src/SEGGER_RTT.c ****     while (NumBytes--) {
 452:Core/Src/SEGGER_RTT.c ****       *pDst++ = *pData++;
 453:Core/Src/SEGGER_RTT.c ****     };
 454:Core/Src/SEGGER_RTT.c ****     RTT__DMB();                     // Force data write to be complete before writing the <WrOff>, 
 455:Core/Src/SEGGER_RTT.c ****     pRing->WrOff = WrOff;
 456:Core/Src/SEGGER_RTT.c **** #else
 457:Core/Src/SEGGER_RTT.c ****     SEGGER_RTT_MEMCPY((void*)pDst, pData, NumBytes);
 458:Core/Src/SEGGER_RTT.c ****     RTT__DMB();                     // Force data write to be complete before writing the <WrOff>, 
 459:Core/Src/SEGGER_RTT.c ****     pRing->WrOff = WrOff + NumBytes;
 460:Core/Src/SEGGER_RTT.c **** #endif
 461:Core/Src/SEGGER_RTT.c ****   } else {
 462:Core/Src/SEGGER_RTT.c ****     //
 463:Core/Src/SEGGER_RTT.c ****     // We reach the end of the buffer, so need to wrap around
 464:Core/Src/SEGGER_RTT.c ****     //
 465:Core/Src/SEGGER_RTT.c **** #if SEGGER_RTT_MEMCPY_USE_BYTELOOP
 466:Core/Src/SEGGER_RTT.c ****     pDst = (pRing->pBuffer + WrOff) + SEGGER_RTT_UNCACHED_OFF;
 467:Core/Src/SEGGER_RTT.c ****     NumBytesAtOnce = Rem;
 468:Core/Src/SEGGER_RTT.c ****     while (NumBytesAtOnce--) {
 469:Core/Src/SEGGER_RTT.c ****       *pDst++ = *pData++;
 470:Core/Src/SEGGER_RTT.c ****     };
 471:Core/Src/SEGGER_RTT.c ****     pDst = pRing->pBuffer + SEGGER_RTT_UNCACHED_OFF;
 472:Core/Src/SEGGER_RTT.c ****     NumBytesAtOnce = NumBytes - Rem;
 473:Core/Src/SEGGER_RTT.c ****     while (NumBytesAtOnce--) {
 474:Core/Src/SEGGER_RTT.c ****       *pDst++ = *pData++;
 475:Core/Src/SEGGER_RTT.c ****     };
 476:Core/Src/SEGGER_RTT.c ****     RTT__DMB();                     // Force data write to be complete before writing the <WrOff>, 
 477:Core/Src/SEGGER_RTT.c ****     pRing->WrOff = NumBytes - Rem;
 478:Core/Src/SEGGER_RTT.c **** #else
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccSC4OZm.s 			page 10


 479:Core/Src/SEGGER_RTT.c ****     NumBytesAtOnce = Rem;
 480:Core/Src/SEGGER_RTT.c ****     pDst = (pRing->pBuffer + WrOff) + SEGGER_RTT_UNCACHED_OFF;
 481:Core/Src/SEGGER_RTT.c ****     SEGGER_RTT_MEMCPY((void*)pDst, pData, NumBytesAtOnce);
 482:Core/Src/SEGGER_RTT.c ****     NumBytesAtOnce = NumBytes - Rem;
 483:Core/Src/SEGGER_RTT.c ****     pDst = pRing->pBuffer + SEGGER_RTT_UNCACHED_OFF;
 484:Core/Src/SEGGER_RTT.c ****     SEGGER_RTT_MEMCPY((void*)pDst, pData + Rem, NumBytesAtOnce);
 485:Core/Src/SEGGER_RTT.c ****     RTT__DMB();                     // Force data write to be complete before writing the <WrOff>, 
 486:Core/Src/SEGGER_RTT.c ****     pRing->WrOff = NumBytesAtOnce;
 487:Core/Src/SEGGER_RTT.c **** #endif
 488:Core/Src/SEGGER_RTT.c ****   }
 489:Core/Src/SEGGER_RTT.c **** }
 490:Core/Src/SEGGER_RTT.c **** 
 491:Core/Src/SEGGER_RTT.c **** /*********************************************************************
 492:Core/Src/SEGGER_RTT.c **** *
 493:Core/Src/SEGGER_RTT.c **** *       _PostTerminalSwitch()
 494:Core/Src/SEGGER_RTT.c **** *
 495:Core/Src/SEGGER_RTT.c **** *  Function description
 496:Core/Src/SEGGER_RTT.c **** *    Switch terminal to the given terminal ID.  It is the caller's
 497:Core/Src/SEGGER_RTT.c **** *    responsibility to ensure the terminal ID is correct and there is
 498:Core/Src/SEGGER_RTT.c **** *    enough space in the buffer for this to complete successfully.
 499:Core/Src/SEGGER_RTT.c **** *
 500:Core/Src/SEGGER_RTT.c **** *  Parameters
 501:Core/Src/SEGGER_RTT.c **** *    pRing        Ring buffer to post to.
 502:Core/Src/SEGGER_RTT.c **** *    TerminalId   Terminal ID to switch to.
 503:Core/Src/SEGGER_RTT.c **** */
 504:Core/Src/SEGGER_RTT.c **** static void _PostTerminalSwitch(SEGGER_RTT_BUFFER_UP* pRing, unsigned char TerminalId) {
 505:Core/Src/SEGGER_RTT.c ****   unsigned char ac[2];
 506:Core/Src/SEGGER_RTT.c **** 
 507:Core/Src/SEGGER_RTT.c ****   ac[0] = 0xFFu;
 508:Core/Src/SEGGER_RTT.c ****   ac[1] = _aTerminalId[TerminalId];  // Caller made already sure that TerminalId does not exceed ou
 509:Core/Src/SEGGER_RTT.c ****   _WriteBlocking(pRing, (const char*)ac, 2u);
 510:Core/Src/SEGGER_RTT.c **** }
 511:Core/Src/SEGGER_RTT.c **** 
 512:Core/Src/SEGGER_RTT.c **** /*********************************************************************
 513:Core/Src/SEGGER_RTT.c **** *
 514:Core/Src/SEGGER_RTT.c **** *       _GetAvailWriteSpace()
 515:Core/Src/SEGGER_RTT.c **** *
 516:Core/Src/SEGGER_RTT.c **** *  Function description
 517:Core/Src/SEGGER_RTT.c **** *    Returns the number of bytes that can be written to the ring
 518:Core/Src/SEGGER_RTT.c **** *    buffer without blocking.
 519:Core/Src/SEGGER_RTT.c **** *
 520:Core/Src/SEGGER_RTT.c **** *  Parameters
 521:Core/Src/SEGGER_RTT.c **** *    pRing        Ring buffer to check.
 522:Core/Src/SEGGER_RTT.c **** *
 523:Core/Src/SEGGER_RTT.c **** *  Return value
 524:Core/Src/SEGGER_RTT.c **** *    Number of bytes that are free in the buffer.
 525:Core/Src/SEGGER_RTT.c **** */
 526:Core/Src/SEGGER_RTT.c **** static unsigned _GetAvailWriteSpace(SEGGER_RTT_BUFFER_UP* pRing) {
 527:Core/Src/SEGGER_RTT.c ****   unsigned RdOff;
 528:Core/Src/SEGGER_RTT.c ****   unsigned WrOff;
 529:Core/Src/SEGGER_RTT.c ****   unsigned r;
 530:Core/Src/SEGGER_RTT.c ****   //
 531:Core/Src/SEGGER_RTT.c ****   // Avoid warnings regarding volatile access order.  It's not a problem
 532:Core/Src/SEGGER_RTT.c ****   // in this case, but dampen compiler enthusiasm.
 533:Core/Src/SEGGER_RTT.c ****   //
 534:Core/Src/SEGGER_RTT.c ****   RdOff = pRing->RdOff;
 535:Core/Src/SEGGER_RTT.c ****   WrOff = pRing->WrOff;
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccSC4OZm.s 			page 11


 536:Core/Src/SEGGER_RTT.c ****   if (RdOff <= WrOff) {
 537:Core/Src/SEGGER_RTT.c ****     r = pRing->SizeOfBuffer - 1u - WrOff + RdOff;
 538:Core/Src/SEGGER_RTT.c ****   } else {
 539:Core/Src/SEGGER_RTT.c ****     r = RdOff - WrOff - 1u;
 540:Core/Src/SEGGER_RTT.c ****   }
 541:Core/Src/SEGGER_RTT.c ****   return r;
 542:Core/Src/SEGGER_RTT.c **** }
 543:Core/Src/SEGGER_RTT.c **** 
 544:Core/Src/SEGGER_RTT.c **** /*********************************************************************
 545:Core/Src/SEGGER_RTT.c **** *
 546:Core/Src/SEGGER_RTT.c **** *       Public code
 547:Core/Src/SEGGER_RTT.c **** *
 548:Core/Src/SEGGER_RTT.c **** **********************************************************************
 549:Core/Src/SEGGER_RTT.c **** */
 550:Core/Src/SEGGER_RTT.c **** 
 551:Core/Src/SEGGER_RTT.c **** /*********************************************************************
 552:Core/Src/SEGGER_RTT.c **** *
 553:Core/Src/SEGGER_RTT.c **** *       SEGGER_RTT_ReadUpBufferNoLock()
 554:Core/Src/SEGGER_RTT.c **** *
 555:Core/Src/SEGGER_RTT.c **** *  Function description
 556:Core/Src/SEGGER_RTT.c **** *    Reads characters from SEGGER real-time-terminal control block
 557:Core/Src/SEGGER_RTT.c **** *    which have been previously stored by the application.
 558:Core/Src/SEGGER_RTT.c **** *    Do not lock against interrupts and multiple access.
 559:Core/Src/SEGGER_RTT.c **** *    Used to do the same operation that J-Link does, to transfer 
 560:Core/Src/SEGGER_RTT.c **** *    RTT data via other channels, such as TCP/IP or UART.
 561:Core/Src/SEGGER_RTT.c **** *
 562:Core/Src/SEGGER_RTT.c **** *  Parameters
 563:Core/Src/SEGGER_RTT.c **** *    BufferIndex  Index of Up-buffer to be used.
 564:Core/Src/SEGGER_RTT.c **** *    pBuffer      Pointer to buffer provided by target application, to copy characters from RTT-up-
 565:Core/Src/SEGGER_RTT.c **** *    BufferSize   Size of the target application buffer.
 566:Core/Src/SEGGER_RTT.c **** *
 567:Core/Src/SEGGER_RTT.c **** *  Return value
 568:Core/Src/SEGGER_RTT.c **** *    Number of bytes that have been read.
 569:Core/Src/SEGGER_RTT.c **** *
 570:Core/Src/SEGGER_RTT.c **** *  Additional information
 571:Core/Src/SEGGER_RTT.c **** *    This function must not be called when J-Link might also do RTT.
 572:Core/Src/SEGGER_RTT.c **** */
 573:Core/Src/SEGGER_RTT.c **** unsigned SEGGER_RTT_ReadUpBufferNoLock(unsigned BufferIndex, void* pData, unsigned BufferSize) {
  35              		.loc 1 573 96 view -0
  36              		.cfi_startproc
  37              		@ args = 0, pretend = 0, frame = 8
  38              		@ frame_needed = 0, uses_anonymous_args = 0
  39              		.loc 1 573 96 is_stmt 0 view .LVU1
  40 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
  41              		.cfi_def_cfa_offset 36
  42              		.cfi_offset 4, -36
  43              		.cfi_offset 5, -32
  44              		.cfi_offset 6, -28
  45              		.cfi_offset 7, -24
  46              		.cfi_offset 8, -20
  47              		.cfi_offset 9, -16
  48              		.cfi_offset 10, -12
  49              		.cfi_offset 11, -8
  50              		.cfi_offset 14, -4
  51              	.LBB39:
 574:Core/Src/SEGGER_RTT.c ****   unsigned                NumBytesRem;
 575:Core/Src/SEGGER_RTT.c ****   unsigned                NumBytesRead;
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccSC4OZm.s 			page 12


 576:Core/Src/SEGGER_RTT.c ****   unsigned                RdOff;
 577:Core/Src/SEGGER_RTT.c ****   unsigned                WrOff;
 578:Core/Src/SEGGER_RTT.c ****   unsigned char*          pBuffer;
 579:Core/Src/SEGGER_RTT.c ****   SEGGER_RTT_BUFFER_UP*   pRing;
 580:Core/Src/SEGGER_RTT.c ****   volatile char*          pSrc;
 581:Core/Src/SEGGER_RTT.c **** 
 582:Core/Src/SEGGER_RTT.c ****   INIT();
  52              		.loc 1 582 3 view .LVU2
  53 0004 4C4C     		ldr	r4, .L20
  54 0006 2378     		ldrb	r3, [r4]	@ zero_extendqisi2
  55              	.LBE39:
 573:Core/Src/SEGGER_RTT.c ****   unsigned                NumBytesRem;
  56              		.loc 1 573 96 view .LVU3
  57 0008 83B0     		sub	sp, sp, #12
  58              		.cfi_def_cfa_offset 48
 573:Core/Src/SEGGER_RTT.c ****   unsigned                NumBytesRem;
  59              		.loc 1 573 96 view .LVU4
  60 000a 0546     		mov	r5, r0
 574:Core/Src/SEGGER_RTT.c ****   unsigned                NumBytesRem;
  61              		.loc 1 574 3 is_stmt 1 view .LVU5
 575:Core/Src/SEGGER_RTT.c ****   unsigned                RdOff;
  62              		.loc 1 575 3 view .LVU6
 576:Core/Src/SEGGER_RTT.c ****   unsigned                WrOff;
  63              		.loc 1 576 3 view .LVU7
 577:Core/Src/SEGGER_RTT.c ****   unsigned char*          pBuffer;
  64              		.loc 1 577 3 view .LVU8
 578:Core/Src/SEGGER_RTT.c ****   SEGGER_RTT_BUFFER_UP*   pRing;
  65              		.loc 1 578 3 view .LVU9
 579:Core/Src/SEGGER_RTT.c ****   volatile char*          pSrc;
  66              		.loc 1 579 3 view .LVU10
 580:Core/Src/SEGGER_RTT.c **** 
  67              		.loc 1 580 3 view .LVU11
  68              	.LBB42:
  69              		.loc 1 582 3 view .LVU12
  70              		.loc 1 582 3 view .LVU13
  71              	.LVL1:
  72              		.loc 1 582 3 view .LVU14
  73              		.loc 1 582 3 view .LVU15
  74              	.LBE42:
 573:Core/Src/SEGGER_RTT.c ****   unsigned                NumBytesRem;
  75              		.loc 1 573 96 is_stmt 0 view .LVU16
  76 000c 8A46     		mov	r10, r1
  77 000e 1746     		mov	r7, r2
  78              	.LBB43:
  79              		.loc 1 582 3 view .LVU17
  80 0010 002B     		cmp	r3, #0
  81 0012 56D0     		beq	.L18
  82              	.LVL2:
  83              	.L2:
  84              		.loc 1 582 3 is_stmt 1 discriminator 3 view .LVU18
  85              	.LBE43:
  86              		.loc 1 582 9 discriminator 3 view .LVU19
 583:Core/Src/SEGGER_RTT.c ****   pRing = (SEGGER_RTT_BUFFER_UP*)((char*)&_SEGGER_RTT.aUp[BufferIndex] + SEGGER_RTT_UNCACHED_OFF); 
  87              		.loc 1 583 3 discriminator 3 view .LVU20
 584:Core/Src/SEGGER_RTT.c ****   pBuffer = (unsigned char*)pData;
  88              		.loc 1 584 3 discriminator 3 view .LVU21
 585:Core/Src/SEGGER_RTT.c ****   RdOff = pRing->RdOff;
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccSC4OZm.s 			page 13


  89              		.loc 1 585 3 discriminator 3 view .LVU22
  90              		.loc 1 585 9 is_stmt 0 discriminator 3 view .LVU23
  91 0014 05EB4508 		add	r8, r5, r5, lsl #1
  92 0018 04EBC808 		add	r8, r4, r8, lsl #3
  93 001c 4FEA450B 		lsl	fp, r5, #1
  94 0020 D8F82860 		ldr	r6, [r8, #40]
  95              	.LVL3:
 586:Core/Src/SEGGER_RTT.c ****   WrOff = pRing->WrOff;
  96              		.loc 1 586 3 is_stmt 1 discriminator 3 view .LVU24
  97              		.loc 1 586 9 is_stmt 0 discriminator 3 view .LVU25
  98 0024 D8F82490 		ldr	r9, [r8, #36]
  99              	.LVL4:
 587:Core/Src/SEGGER_RTT.c ****   NumBytesRead = 0u;
 100              		.loc 1 587 3 is_stmt 1 discriminator 3 view .LVU26
 588:Core/Src/SEGGER_RTT.c ****   //
 589:Core/Src/SEGGER_RTT.c ****   // Read from current read position to wrap-around of buffer, first
 590:Core/Src/SEGGER_RTT.c ****   //
 591:Core/Src/SEGGER_RTT.c ****   if (RdOff > WrOff) {
 101              		.loc 1 591 3 discriminator 3 view .LVU27
 102              		.loc 1 591 6 is_stmt 0 discriminator 3 view .LVU28
 103 0028 4E45     		cmp	r6, r9
 104 002a 22D8     		bhi	.L19
 592:Core/Src/SEGGER_RTT.c ****     NumBytesRem = pRing->SizeOfBuffer - RdOff;
 593:Core/Src/SEGGER_RTT.c ****     NumBytesRem = MIN(NumBytesRem, BufferSize);
 594:Core/Src/SEGGER_RTT.c ****     pSrc = (pRing->pBuffer + RdOff) + SEGGER_RTT_UNCACHED_OFF;
 595:Core/Src/SEGGER_RTT.c **** #if SEGGER_RTT_MEMCPY_USE_BYTELOOP
 596:Core/Src/SEGGER_RTT.c ****     NumBytesRead += NumBytesRem;
 597:Core/Src/SEGGER_RTT.c ****     BufferSize   -= NumBytesRem;
 598:Core/Src/SEGGER_RTT.c ****     RdOff        += NumBytesRem;
 599:Core/Src/SEGGER_RTT.c ****     while (NumBytesRem--) {
 600:Core/Src/SEGGER_RTT.c ****       *pBuffer++ = *pSrc++;
 601:Core/Src/SEGGER_RTT.c ****     };
 602:Core/Src/SEGGER_RTT.c **** #else
 603:Core/Src/SEGGER_RTT.c ****     SEGGER_RTT_MEMCPY(pBuffer, (void*)pSrc, NumBytesRem);
 604:Core/Src/SEGGER_RTT.c ****     NumBytesRead += NumBytesRem;
 605:Core/Src/SEGGER_RTT.c ****     pBuffer      += NumBytesRem;
 606:Core/Src/SEGGER_RTT.c ****     BufferSize   -= NumBytesRem;
 607:Core/Src/SEGGER_RTT.c ****     RdOff        += NumBytesRem;
 608:Core/Src/SEGGER_RTT.c **** #endif
 609:Core/Src/SEGGER_RTT.c ****     //
 610:Core/Src/SEGGER_RTT.c ****     // Handle wrap-around of buffer
 611:Core/Src/SEGGER_RTT.c ****     //
 612:Core/Src/SEGGER_RTT.c ****     if (RdOff == pRing->SizeOfBuffer) {
 613:Core/Src/SEGGER_RTT.c ****       RdOff = 0u;
 614:Core/Src/SEGGER_RTT.c ****     }
 615:Core/Src/SEGGER_RTT.c ****   }
 616:Core/Src/SEGGER_RTT.c ****   //
 617:Core/Src/SEGGER_RTT.c ****   // Read remaining items of buffer
 618:Core/Src/SEGGER_RTT.c ****   //
 619:Core/Src/SEGGER_RTT.c ****   NumBytesRem = WrOff - RdOff;
 105              		.loc 1 619 3 is_stmt 1 view .LVU29
 106              		.loc 1 619 15 is_stmt 0 view .LVU30
 107 002c A9EB0609 		sub	r9, r9, r6
 108              	.LVL5:
 620:Core/Src/SEGGER_RTT.c ****   NumBytesRem = MIN(NumBytesRem, BufferSize);
 109              		.loc 1 620 3 is_stmt 1 view .LVU31
 110              		.loc 1 620 15 is_stmt 0 view .LVU32
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccSC4OZm.s 			page 14


 111 0030 4F45     		cmp	r7, r9
 112 0032 3A46     		mov	r2, r7
 113 0034 28BF     		it	cs
 114 0036 4A46     		movcs	r2, r9
 115              	.LVL6:
 621:Core/Src/SEGGER_RTT.c ****   if (NumBytesRem > 0u) {
 116              		.loc 1 621 3 is_stmt 1 view .LVU33
 117              		.loc 1 621 6 is_stmt 0 view .LVU34
 118 0038 1AB9     		cbnz	r2, .L9
 119              	.LVL7:
 120              	.L1:
 622:Core/Src/SEGGER_RTT.c ****     pSrc = (pRing->pBuffer + RdOff) + SEGGER_RTT_UNCACHED_OFF;
 623:Core/Src/SEGGER_RTT.c **** #if SEGGER_RTT_MEMCPY_USE_BYTELOOP
 624:Core/Src/SEGGER_RTT.c ****     NumBytesRead += NumBytesRem;
 625:Core/Src/SEGGER_RTT.c ****     BufferSize   -= NumBytesRem;
 626:Core/Src/SEGGER_RTT.c ****     RdOff        += NumBytesRem;
 627:Core/Src/SEGGER_RTT.c ****     while (NumBytesRem--) {
 628:Core/Src/SEGGER_RTT.c ****       *pBuffer++ = *pSrc++;
 629:Core/Src/SEGGER_RTT.c ****     };
 630:Core/Src/SEGGER_RTT.c **** #else
 631:Core/Src/SEGGER_RTT.c ****     SEGGER_RTT_MEMCPY(pBuffer, (void*)pSrc, NumBytesRem);
 632:Core/Src/SEGGER_RTT.c ****     NumBytesRead += NumBytesRem;
 633:Core/Src/SEGGER_RTT.c ****     pBuffer      += NumBytesRem;
 634:Core/Src/SEGGER_RTT.c ****     BufferSize   -= NumBytesRem;
 635:Core/Src/SEGGER_RTT.c ****     RdOff        += NumBytesRem;
 636:Core/Src/SEGGER_RTT.c **** #endif
 637:Core/Src/SEGGER_RTT.c ****   }
 638:Core/Src/SEGGER_RTT.c ****   //
 639:Core/Src/SEGGER_RTT.c ****   // Update read offset of buffer
 640:Core/Src/SEGGER_RTT.c ****   //
 641:Core/Src/SEGGER_RTT.c ****   if (NumBytesRead) {
 642:Core/Src/SEGGER_RTT.c ****     pRing->RdOff = RdOff;
 643:Core/Src/SEGGER_RTT.c ****   }
 644:Core/Src/SEGGER_RTT.c ****   //
 645:Core/Src/SEGGER_RTT.c ****   return NumBytesRead;
 646:Core/Src/SEGGER_RTT.c **** }
 121              		.loc 1 646 1 view .LVU35
 122 003a 1046     		mov	r0, r2
 123 003c 03B0     		add	sp, sp, #12
 124              		.cfi_remember_state
 125              		.cfi_def_cfa_offset 36
 126              		@ sp needed
 127 003e BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 128              	.LVL8:
 129              	.L9:
 130              		.cfi_restore_state
 621:Core/Src/SEGGER_RTT.c ****   if (NumBytesRem > 0u) {
 131              		.loc 1 621 6 view .LVU36
 132 0042 9046     		mov	r8, r2
 133              	.LVL9:
 621:Core/Src/SEGGER_RTT.c ****   if (NumBytesRem > 0u) {
 134              		.loc 1 621 6 view .LVU37
 135 0044 6B1C     		adds	r3, r5, #1
 136              	.LVL10:
 137              	.L7:
 622:Core/Src/SEGGER_RTT.c ****     pSrc = (pRing->pBuffer + RdOff) + SEGGER_RTT_UNCACHED_OFF;
 138              		.loc 1 622 5 is_stmt 1 view .LVU38
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccSC4OZm.s 			page 15


 631:Core/Src/SEGGER_RTT.c ****     NumBytesRead += NumBytesRem;
 139              		.loc 1 631 5 view .LVU39
 622:Core/Src/SEGGER_RTT.c ****     pSrc = (pRing->pBuffer + RdOff) + SEGGER_RTT_UNCACHED_OFF;
 140              		.loc 1 622 18 is_stmt 0 view .LVU40
 141 0046 03EB4303 		add	r3, r3, r3, lsl #1
 142 004a 04EBC303 		add	r3, r4, r3, lsl #3
 631:Core/Src/SEGGER_RTT.c ****     NumBytesRead += NumBytesRem;
 143              		.loc 1 631 5 view .LVU41
 144 004e 5046     		mov	r0, r10
 622:Core/Src/SEGGER_RTT.c ****     pSrc = (pRing->pBuffer + RdOff) + SEGGER_RTT_UNCACHED_OFF;
 145              		.loc 1 622 10 view .LVU42
 146 0050 5968     		ldr	r1, [r3, #4]
 631:Core/Src/SEGGER_RTT.c ****     NumBytesRead += NumBytesRem;
 147              		.loc 1 631 5 view .LVU43
 148 0052 3144     		add	r1, r1, r6
 635:Core/Src/SEGGER_RTT.c **** #endif
 149              		.loc 1 635 18 view .LVU44
 150 0054 1644     		add	r6, r6, r2
 151              	.LVL11:
 631:Core/Src/SEGGER_RTT.c ****     NumBytesRead += NumBytesRem;
 152              		.loc 1 631 5 view .LVU45
 153 0056 FFF7FEFF 		bl	memcpy
 154              	.LVL12:
 632:Core/Src/SEGGER_RTT.c ****     pBuffer      += NumBytesRem;
 155              		.loc 1 632 5 is_stmt 1 view .LVU46
 633:Core/Src/SEGGER_RTT.c ****     BufferSize   -= NumBytesRem;
 156              		.loc 1 633 5 view .LVU47
 634:Core/Src/SEGGER_RTT.c ****     RdOff        += NumBytesRem;
 157              		.loc 1 634 5 view .LVU48
 635:Core/Src/SEGGER_RTT.c **** #endif
 158              		.loc 1 635 5 view .LVU49
 632:Core/Src/SEGGER_RTT.c ****     pBuffer      += NumBytesRem;
 159              		.loc 1 632 18 is_stmt 0 view .LVU50
 160 005a 4246     		mov	r2, r8
 161              	.L5:
 162              	.LVL13:
 641:Core/Src/SEGGER_RTT.c ****     pRing->RdOff = RdOff;
 163              		.loc 1 641 3 is_stmt 1 view .LVU51
 641:Core/Src/SEGGER_RTT.c ****     pRing->RdOff = RdOff;
 164              		.loc 1 641 6 is_stmt 0 view .LVU52
 165 005c 002A     		cmp	r2, #0
 166 005e ECD0     		beq	.L1
 642:Core/Src/SEGGER_RTT.c ****   }
 167              		.loc 1 642 5 is_stmt 1 view .LVU53
 642:Core/Src/SEGGER_RTT.c ****   }
 168              		.loc 1 642 18 is_stmt 0 view .LVU54
 169 0060 AB44     		add	fp, fp, r5
 170 0062 04EBCB0B 		add	fp, r4, fp, lsl #3
 171              		.loc 1 646 1 view .LVU55
 172 0066 1046     		mov	r0, r2
 642:Core/Src/SEGGER_RTT.c ****   }
 173              		.loc 1 642 18 view .LVU56
 174 0068 CBF82860 		str	r6, [fp, #40]
 175              	.LVL14:
 645:Core/Src/SEGGER_RTT.c **** }
 176              		.loc 1 645 3 is_stmt 1 view .LVU57
 177              		.loc 1 646 1 is_stmt 0 view .LVU58
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccSC4OZm.s 			page 16


 178 006c 03B0     		add	sp, sp, #12
 179              		.cfi_remember_state
 180              		.cfi_def_cfa_offset 36
 181              		@ sp needed
 182 006e BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 183              	.LVL15:
 184              	.L19:
 185              		.cfi_restore_state
 592:Core/Src/SEGGER_RTT.c ****     NumBytesRem = MIN(NumBytesRem, BufferSize);
 186              		.loc 1 592 5 is_stmt 1 view .LVU59
 594:Core/Src/SEGGER_RTT.c **** #if SEGGER_RTT_MEMCPY_USE_BYTELOOP
 187              		.loc 1 594 18 is_stmt 0 view .LVU60
 188 0072 6B1C     		adds	r3, r5, #1
 189 0074 03EB4302 		add	r2, r3, r3, lsl #1
 190 0078 04EBC202 		add	r2, r4, r2, lsl #3
 603:Core/Src/SEGGER_RTT.c ****     NumBytesRead += NumBytesRem;
 191              		.loc 1 603 5 view .LVU61
 192 007c 5046     		mov	r0, r10
 594:Core/Src/SEGGER_RTT.c **** #if SEGGER_RTT_MEMCPY_USE_BYTELOOP
 193              		.loc 1 594 10 view .LVU62
 194 007e 5168     		ldr	r1, [r2, #4]
 592:Core/Src/SEGGER_RTT.c ****     NumBytesRem = MIN(NumBytesRem, BufferSize);
 195              		.loc 1 592 17 view .LVU63
 196 0080 D8F82020 		ldr	r2, [r8, #32]
 594:Core/Src/SEGGER_RTT.c **** #if SEGGER_RTT_MEMCPY_USE_BYTELOOP
 197              		.loc 1 594 18 view .LVU64
 198 0084 0193     		str	r3, [sp, #4]
 592:Core/Src/SEGGER_RTT.c ****     NumBytesRem = MIN(NumBytesRem, BufferSize);
 199              		.loc 1 592 17 view .LVU65
 200 0086 921B     		subs	r2, r2, r6
 201              	.LVL16:
 593:Core/Src/SEGGER_RTT.c ****     pSrc = (pRing->pBuffer + RdOff) + SEGGER_RTT_UNCACHED_OFF;
 202              		.loc 1 593 5 is_stmt 1 view .LVU66
 593:Core/Src/SEGGER_RTT.c ****     pSrc = (pRing->pBuffer + RdOff) + SEGGER_RTT_UNCACHED_OFF;
 203              		.loc 1 593 17 is_stmt 0 view .LVU67
 204 0088 BA42     		cmp	r2, r7
 205 008a 28BF     		it	cs
 206 008c 3A46     		movcs	r2, r7
 207              	.LVL17:
 594:Core/Src/SEGGER_RTT.c **** #if SEGGER_RTT_MEMCPY_USE_BYTELOOP
 208              		.loc 1 594 5 is_stmt 1 view .LVU68
 603:Core/Src/SEGGER_RTT.c ****     NumBytesRead += NumBytesRem;
 209              		.loc 1 603 5 view .LVU69
 210 008e 3144     		add	r1, r1, r6
 211 0090 0092     		str	r2, [sp]
 607:Core/Src/SEGGER_RTT.c **** #endif
 212              		.loc 1 607 18 is_stmt 0 view .LVU70
 213 0092 1644     		add	r6, r6, r2
 214              	.LVL18:
 603:Core/Src/SEGGER_RTT.c ****     NumBytesRead += NumBytesRem;
 215              		.loc 1 603 5 view .LVU71
 216 0094 FFF7FEFF 		bl	memcpy
 217              	.LVL19:
 604:Core/Src/SEGGER_RTT.c ****     pBuffer      += NumBytesRem;
 218              		.loc 1 604 5 is_stmt 1 view .LVU72
 605:Core/Src/SEGGER_RTT.c ****     BufferSize   -= NumBytesRem;
 219              		.loc 1 605 5 view .LVU73
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccSC4OZm.s 			page 17


 606:Core/Src/SEGGER_RTT.c ****     RdOff        += NumBytesRem;
 220              		.loc 1 606 5 view .LVU74
 612:Core/Src/SEGGER_RTT.c ****       RdOff = 0u;
 221              		.loc 1 612 8 is_stmt 0 view .LVU75
 222 0098 D8F82010 		ldr	r1, [r8, #32]
 606:Core/Src/SEGGER_RTT.c ****     RdOff        += NumBytesRem;
 223              		.loc 1 606 18 view .LVU76
 224 009c 009A     		ldr	r2, [sp]
 612:Core/Src/SEGGER_RTT.c ****       RdOff = 0u;
 225              		.loc 1 612 8 view .LVU77
 226 009e 019B     		ldr	r3, [sp, #4]
 227 00a0 B142     		cmp	r1, r6
 606:Core/Src/SEGGER_RTT.c ****     RdOff        += NumBytesRem;
 228              		.loc 1 606 18 view .LVU78
 229 00a2 A7EB0207 		sub	r7, r7, r2
 230              	.LVL20:
 607:Core/Src/SEGGER_RTT.c **** #endif
 231              		.loc 1 607 5 is_stmt 1 view .LVU79
 612:Core/Src/SEGGER_RTT.c ****       RdOff = 0u;
 232              		.loc 1 612 5 view .LVU80
 619:Core/Src/SEGGER_RTT.c ****   NumBytesRem = MIN(NumBytesRem, BufferSize);
 233              		.loc 1 619 15 is_stmt 0 view .LVU81
 234 00a6 14BF     		ite	ne
 235 00a8 A9EB0609 		subne	r9, r9, r6
 236              	.LVL21:
 613:Core/Src/SEGGER_RTT.c ****     }
 237              		.loc 1 613 13 view .LVU82
 238 00ac 0026     		moveq	r6, #0
 239              	.LVL22:
 619:Core/Src/SEGGER_RTT.c ****   NumBytesRem = MIN(NumBytesRem, BufferSize);
 240              		.loc 1 619 3 is_stmt 1 view .LVU83
 620:Core/Src/SEGGER_RTT.c ****   if (NumBytesRem > 0u) {
 241              		.loc 1 620 3 view .LVU84
 620:Core/Src/SEGGER_RTT.c ****   if (NumBytesRem > 0u) {
 242              		.loc 1 620 15 is_stmt 0 view .LVU85
 243 00ae 4F45     		cmp	r7, r9
 244 00b0 28BF     		it	cs
 245 00b2 4F46     		movcs	r7, r9
 246              	.LVL23:
 621:Core/Src/SEGGER_RTT.c ****     pSrc = (pRing->pBuffer + RdOff) + SEGGER_RTT_UNCACHED_OFF;
 247              		.loc 1 621 3 is_stmt 1 view .LVU86
 621:Core/Src/SEGGER_RTT.c ****     pSrc = (pRing->pBuffer + RdOff) + SEGGER_RTT_UNCACHED_OFF;
 248              		.loc 1 621 6 is_stmt 0 view .LVU87
 249 00b4 002F     		cmp	r7, #0
 250 00b6 D1D0     		beq	.L5
 251              	.LVL24:
 605:Core/Src/SEGGER_RTT.c ****     BufferSize   -= NumBytesRem;
 252              		.loc 1 605 18 view .LVU88
 253 00b8 9244     		add	r10, r10, r2
 254              	.LVL25:
 632:Core/Src/SEGGER_RTT.c ****     pBuffer      += NumBytesRem;
 255              		.loc 1 632 18 view .LVU89
 256 00ba 02EB0708 		add	r8, r2, r7
 257 00be 3A46     		mov	r2, r7
 258 00c0 C1E7     		b	.L7
 259              	.LVL26:
 260              	.L18:
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccSC4OZm.s 			page 18


 632:Core/Src/SEGGER_RTT.c ****     pBuffer      += NumBytesRem;
 261              		.loc 1 632 18 view .LVU90
 262 00c2 03F0FF06 		and	r6, r3, #255
 263              	.LBB44:
 582:Core/Src/SEGGER_RTT.c ****   pRing = (SEGGER_RTT_BUFFER_UP*)((char*)&_SEGGER_RTT.aUp[BufferIndex] + SEGGER_RTT_UNCACHED_OFF); 
 264              		.loc 1 582 3 is_stmt 1 view .LVU91
 265              	.LBB40:
 266              	.LBI40:
 314:Core/Src/SEGGER_RTT.c ****   volatile SEGGER_RTT_CB* p;   // Volatile to make sure that compiler cannot change the order of ac
 267              		.loc 1 314 13 view .LVU92
 268              	.LBB41:
 315:Core/Src/SEGGER_RTT.c ****   static const char _aInitStr[] = "\0\0\0\0\0\0TTR REGGES";  // Init complete ID string to make sur
 269              		.loc 1 315 3 view .LVU93
 316:Core/Src/SEGGER_RTT.c ****   unsigned i;
 270              		.loc 1 316 3 view .LVU94
 317:Core/Src/SEGGER_RTT.c ****   //
 271              		.loc 1 317 3 view .LVU95
 321:Core/Src/SEGGER_RTT.c ****   memset((SEGGER_RTT_CB*)p, 0, sizeof(_SEGGER_RTT));         // Make sure that the RTT CB is always
 272              		.loc 1 321 3 view .LVU96
 273              	.LVL27:
 322:Core/Src/SEGGER_RTT.c ****   p->MaxNumUpBuffers    = SEGGER_RTT_MAX_NUM_UP_BUFFERS;
 274              		.loc 1 322 3 view .LVU97
 275 00c6 3146     		mov	r1, r6
 276              	.LVL28:
 322:Core/Src/SEGGER_RTT.c ****   p->MaxNumUpBuffers    = SEGGER_RTT_MAX_NUM_UP_BUFFERS;
 277              		.loc 1 322 3 is_stmt 0 view .LVU98
 278 00c8 7822     		movs	r2, #120
 279              	.LVL29:
 322:Core/Src/SEGGER_RTT.c ****   p->MaxNumUpBuffers    = SEGGER_RTT_MAX_NUM_UP_BUFFERS;
 280              		.loc 1 322 3 view .LVU99
 281 00ca 04F13000 		add	r0, r4, #48
 282              	.LVL30:
 322:Core/Src/SEGGER_RTT.c ****   p->MaxNumUpBuffers    = SEGGER_RTT_MAX_NUM_UP_BUFFERS;
 283              		.loc 1 322 3 view .LVU100
 284 00ce FFF7FEFF 		bl	memset
 285              	.LVL31:
 323:Core/Src/SEGGER_RTT.c ****   p->MaxNumDownBuffers  = SEGGER_RTT_MAX_NUM_DOWN_BUFFERS;
 286              		.loc 1 323 3 is_stmt 1 view .LVU101
 323:Core/Src/SEGGER_RTT.c ****   p->MaxNumDownBuffers  = SEGGER_RTT_MAX_NUM_DOWN_BUFFERS;
 287              		.loc 1 323 25 is_stmt 0 view .LVU102
 288 00d2 0322     		movs	r2, #3
 289 00d4 2261     		str	r2, [r4, #16]
 324:Core/Src/SEGGER_RTT.c ****   //
 290              		.loc 1 324 3 is_stmt 1 view .LVU103
 328:Core/Src/SEGGER_RTT.c ****   p->aUp[0].pBuffer       = _acUpBuffer;
 291              		.loc 1 328 27 is_stmt 0 view .LVU104
 292 00d6 194B     		ldr	r3, .L20+4
 324:Core/Src/SEGGER_RTT.c ****   //
 293              		.loc 1 324 25 view .LVU105
 294 00d8 6261     		str	r2, [r4, #20]
 328:Core/Src/SEGGER_RTT.c ****   p->aUp[0].pBuffer       = _acUpBuffer;
 295              		.loc 1 328 3 is_stmt 1 view .LVU106
 330:Core/Src/SEGGER_RTT.c ****   p->aUp[0].RdOff         = 0u;
 296              		.loc 1 330 27 is_stmt 0 view .LVU107
 297 00da 4FF48061 		mov	r1, #1024
 329:Core/Src/SEGGER_RTT.c ****   p->aUp[0].SizeOfBuffer  = BUFFER_SIZE_UP;
 298              		.loc 1 329 27 view .LVU108
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccSC4OZm.s 			page 19


 299 00de 184A     		ldr	r2, .L20+8
 328:Core/Src/SEGGER_RTT.c ****   p->aUp[0].pBuffer       = _acUpBuffer;
 300              		.loc 1 328 27 view .LVU109
 301 00e0 A361     		str	r3, [r4, #24]
 329:Core/Src/SEGGER_RTT.c ****   p->aUp[0].SizeOfBuffer  = BUFFER_SIZE_UP;
 302              		.loc 1 329 3 is_stmt 1 view .LVU110
 329:Core/Src/SEGGER_RTT.c ****   p->aUp[0].SizeOfBuffer  = BUFFER_SIZE_UP;
 303              		.loc 1 329 27 is_stmt 0 view .LVU111
 304 00e2 E261     		str	r2, [r4, #28]
 330:Core/Src/SEGGER_RTT.c ****   p->aUp[0].RdOff         = 0u;
 305              		.loc 1 330 3 is_stmt 1 view .LVU112
 330:Core/Src/SEGGER_RTT.c ****   p->aUp[0].RdOff         = 0u;
 306              		.loc 1 330 27 is_stmt 0 view .LVU113
 307 00e4 2162     		str	r1, [r4, #32]
 331:Core/Src/SEGGER_RTT.c ****   p->aUp[0].WrOff         = 0u;
 308              		.loc 1 331 3 is_stmt 1 view .LVU114
 338:Core/Src/SEGGER_RTT.c ****   p->aDown[0].SizeOfBuffer  = BUFFER_SIZE_DOWN;
 309              		.loc 1 338 29 is_stmt 0 view .LVU115
 310 00e6 174A     		ldr	r2, .L20+12
 331:Core/Src/SEGGER_RTT.c ****   p->aUp[0].WrOff         = 0u;
 311              		.loc 1 331 27 view .LVU116
 312 00e8 A662     		str	r6, [r4, #40]
 332:Core/Src/SEGGER_RTT.c ****   p->aUp[0].Flags         = SEGGER_RTT_MODE_DEFAULT;
 313              		.loc 1 332 3 is_stmt 1 view .LVU117
 332:Core/Src/SEGGER_RTT.c ****   p->aUp[0].Flags         = SEGGER_RTT_MODE_DEFAULT;
 314              		.loc 1 332 27 is_stmt 0 view .LVU118
 315 00ea 6662     		str	r6, [r4, #36]
 333:Core/Src/SEGGER_RTT.c ****   //
 316              		.loc 1 333 3 is_stmt 1 view .LVU119
 333:Core/Src/SEGGER_RTT.c ****   //
 317              		.loc 1 333 27 is_stmt 0 view .LVU120
 318 00ec E662     		str	r6, [r4, #44]
 337:Core/Src/SEGGER_RTT.c ****   p->aDown[0].pBuffer       = _acDownBuffer;
 319              		.loc 1 337 3 is_stmt 1 view .LVU121
 337:Core/Src/SEGGER_RTT.c ****   p->aDown[0].pBuffer       = _acDownBuffer;
 320              		.loc 1 337 29 is_stmt 0 view .LVU122
 321 00ee 2366     		str	r3, [r4, #96]
 338:Core/Src/SEGGER_RTT.c ****   p->aDown[0].SizeOfBuffer  = BUFFER_SIZE_DOWN;
 322              		.loc 1 338 3 is_stmt 1 view .LVU123
 339:Core/Src/SEGGER_RTT.c ****   p->aDown[0].RdOff         = 0u;
 323              		.loc 1 339 29 is_stmt 0 view .LVU124
 324 00f0 1023     		movs	r3, #16
 338:Core/Src/SEGGER_RTT.c ****   p->aDown[0].SizeOfBuffer  = BUFFER_SIZE_DOWN;
 325              		.loc 1 338 29 view .LVU125
 326 00f2 6266     		str	r2, [r4, #100]
 339:Core/Src/SEGGER_RTT.c ****   p->aDown[0].RdOff         = 0u;
 327              		.loc 1 339 3 is_stmt 1 view .LVU126
 339:Core/Src/SEGGER_RTT.c ****   p->aDown[0].RdOff         = 0u;
 328              		.loc 1 339 29 is_stmt 0 view .LVU127
 329 00f4 A366     		str	r3, [r4, #104]
 340:Core/Src/SEGGER_RTT.c ****   p->aDown[0].WrOff         = 0u;
 330              		.loc 1 340 3 is_stmt 1 view .LVU128
 340:Core/Src/SEGGER_RTT.c ****   p->aDown[0].WrOff         = 0u;
 331              		.loc 1 340 29 is_stmt 0 view .LVU129
 332 00f6 2667     		str	r6, [r4, #112]
 341:Core/Src/SEGGER_RTT.c ****   p->aDown[0].Flags         = SEGGER_RTT_MODE_DEFAULT;
 333              		.loc 1 341 3 is_stmt 1 view .LVU130
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccSC4OZm.s 			page 20


 341:Core/Src/SEGGER_RTT.c ****   p->aDown[0].Flags         = SEGGER_RTT_MODE_DEFAULT;
 334              		.loc 1 341 29 is_stmt 0 view .LVU131
 335 00f8 E666     		str	r6, [r4, #108]
 342:Core/Src/SEGGER_RTT.c ****   //
 336              		.loc 1 342 3 is_stmt 1 view .LVU132
 342:Core/Src/SEGGER_RTT.c ****   //
 337              		.loc 1 342 29 is_stmt 0 view .LVU133
 338 00fa 6667     		str	r6, [r4, #116]
 348:Core/Src/SEGGER_RTT.c ****   for (i = 0; i < sizeof(_aInitStr) - 1; ++i) {
 339              		.loc 1 348 3 is_stmt 1 view .LVU134
 340              		.syntax unified
 341              	@ 348 "Core/Src/SEGGER_RTT.c" 1
 342 00fc BFF35F8F 		dmb
 343              	
 344              	@ 0 "" 2
 348:Core/Src/SEGGER_RTT.c ****   for (i = 0; i < sizeof(_aInitStr) - 1; ++i) {
 345              		.loc 1 348 13 view .LVU135
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 346              		.loc 1 349 3 view .LVU136
 347              	.LVL32:
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 348              		.loc 1 349 17 view .LVU137
 350:Core/Src/SEGGER_RTT.c ****   }
 349              		.loc 1 350 5 view .LVU138
 350:Core/Src/SEGGER_RTT.c ****   }
 350              		.loc 1 350 16 is_stmt 0 view .LVU139
 351              		.thumb
 352              		.syntax unified
 353 0100 4521     		movs	r1, #69
 354 0102 4720     		movs	r0, #71
 355 0104 4FF0530C 		mov	ip, #83
 356 0108 84F800C0 		strb	ip, [r4]
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 357              		.loc 1 349 42 is_stmt 1 view .LVU140
 358              	.LVL33:
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 359              		.loc 1 349 17 view .LVU141
 350:Core/Src/SEGGER_RTT.c ****   }
 360              		.loc 1 350 5 view .LVU142
 350:Core/Src/SEGGER_RTT.c ****   }
 361              		.loc 1 350 16 is_stmt 0 view .LVU143
 362 010c 5222     		movs	r2, #82
 363 010e 6170     		strb	r1, [r4, #1]
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 364              		.loc 1 349 42 is_stmt 1 view .LVU144
 365              	.LVL34:
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 366              		.loc 1 349 17 view .LVU145
 350:Core/Src/SEGGER_RTT.c ****   }
 367              		.loc 1 350 5 view .LVU146
 350:Core/Src/SEGGER_RTT.c ****   }
 368              		.loc 1 350 16 is_stmt 0 view .LVU147
 369 0110 5423     		movs	r3, #84
 370 0112 A070     		strb	r0, [r4, #2]
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 371              		.loc 1 349 42 is_stmt 1 view .LVU148
 372              	.LVL35:
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccSC4OZm.s 			page 21


 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 373              		.loc 1 349 17 view .LVU149
 350:Core/Src/SEGGER_RTT.c ****   }
 374              		.loc 1 350 5 view .LVU150
 350:Core/Src/SEGGER_RTT.c ****   }
 375              		.loc 1 350 16 is_stmt 0 view .LVU151
 376 0114 E070     		strb	r0, [r4, #3]
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 377              		.loc 1 349 42 is_stmt 1 view .LVU152
 378              	.LVL36:
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 379              		.loc 1 349 17 view .LVU153
 350:Core/Src/SEGGER_RTT.c ****   }
 380              		.loc 1 350 5 view .LVU154
 350:Core/Src/SEGGER_RTT.c ****   }
 381              		.loc 1 350 16 is_stmt 0 view .LVU155
 382 0116 2171     		strb	r1, [r4, #4]
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 383              		.loc 1 349 42 is_stmt 1 view .LVU156
 384              	.LVL37:
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 385              		.loc 1 349 17 view .LVU157
 350:Core/Src/SEGGER_RTT.c ****   }
 386              		.loc 1 350 5 view .LVU158
 350:Core/Src/SEGGER_RTT.c ****   }
 387              		.loc 1 350 16 is_stmt 0 view .LVU159
 388 0118 2021     		movs	r1, #32
 389 011a 6271     		strb	r2, [r4, #5]
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 390              		.loc 1 349 42 is_stmt 1 view .LVU160
 391              	.LVL38:
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 392              		.loc 1 349 17 view .LVU161
 350:Core/Src/SEGGER_RTT.c ****   }
 393              		.loc 1 350 5 view .LVU162
 350:Core/Src/SEGGER_RTT.c ****   }
 394              		.loc 1 350 16 is_stmt 0 view .LVU163
 395 011c A171     		strb	r1, [r4, #6]
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 396              		.loc 1 349 42 is_stmt 1 view .LVU164
 397              	.LVL39:
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 398              		.loc 1 349 17 view .LVU165
 350:Core/Src/SEGGER_RTT.c ****   }
 399              		.loc 1 350 5 view .LVU166
 350:Core/Src/SEGGER_RTT.c ****   }
 400              		.loc 1 350 16 is_stmt 0 view .LVU167
 401 011e E271     		strb	r2, [r4, #7]
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 402              		.loc 1 349 42 is_stmt 1 view .LVU168
 403              	.LVL40:
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 404              		.loc 1 349 17 view .LVU169
 350:Core/Src/SEGGER_RTT.c ****   }
 405              		.loc 1 350 5 view .LVU170
 350:Core/Src/SEGGER_RTT.c ****   }
 406              		.loc 1 350 16 is_stmt 0 view .LVU171
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccSC4OZm.s 			page 22


 407 0120 2372     		strb	r3, [r4, #8]
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 408              		.loc 1 349 42 is_stmt 1 view .LVU172
 409              	.LVL41:
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 410              		.loc 1 349 17 view .LVU173
 350:Core/Src/SEGGER_RTT.c ****   }
 411              		.loc 1 350 5 view .LVU174
 350:Core/Src/SEGGER_RTT.c ****   }
 412              		.loc 1 350 16 is_stmt 0 view .LVU175
 413 0122 6372     		strb	r3, [r4, #9]
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 414              		.loc 1 349 42 is_stmt 1 view .LVU176
 415              	.LVL42:
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 416              		.loc 1 349 17 view .LVU177
 350:Core/Src/SEGGER_RTT.c ****   }
 417              		.loc 1 350 5 view .LVU178
 350:Core/Src/SEGGER_RTT.c ****   }
 418              		.loc 1 350 16 is_stmt 0 view .LVU179
 419 0124 A672     		strb	r6, [r4, #10]
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 420              		.loc 1 349 42 is_stmt 1 view .LVU180
 421              	.LVL43:
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 422              		.loc 1 349 17 view .LVU181
 350:Core/Src/SEGGER_RTT.c ****   }
 423              		.loc 1 350 5 view .LVU182
 350:Core/Src/SEGGER_RTT.c ****   }
 424              		.loc 1 350 16 is_stmt 0 view .LVU183
 425 0126 E672     		strb	r6, [r4, #11]
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 426              		.loc 1 349 42 is_stmt 1 view .LVU184
 427              	.LVL44:
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 428              		.loc 1 349 17 view .LVU185
 350:Core/Src/SEGGER_RTT.c ****   }
 429              		.loc 1 350 5 view .LVU186
 350:Core/Src/SEGGER_RTT.c ****   }
 430              		.loc 1 350 16 is_stmt 0 view .LVU187
 431 0128 2673     		strb	r6, [r4, #12]
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 432              		.loc 1 349 42 is_stmt 1 view .LVU188
 433              	.LVL45:
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 434              		.loc 1 349 17 view .LVU189
 350:Core/Src/SEGGER_RTT.c ****   }
 435              		.loc 1 350 5 view .LVU190
 350:Core/Src/SEGGER_RTT.c ****   }
 436              		.loc 1 350 16 is_stmt 0 view .LVU191
 437 012a 6673     		strb	r6, [r4, #13]
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 438              		.loc 1 349 42 is_stmt 1 view .LVU192
 439              	.LVL46:
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 440              		.loc 1 349 17 view .LVU193
 350:Core/Src/SEGGER_RTT.c ****   }
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccSC4OZm.s 			page 23


 441              		.loc 1 350 5 view .LVU194
 350:Core/Src/SEGGER_RTT.c ****   }
 442              		.loc 1 350 16 is_stmt 0 view .LVU195
 443 012c A673     		strb	r6, [r4, #14]
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 444              		.loc 1 349 42 is_stmt 1 view .LVU196
 445              	.LVL47:
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 446              		.loc 1 349 17 view .LVU197
 350:Core/Src/SEGGER_RTT.c ****   }
 447              		.loc 1 350 5 view .LVU198
 350:Core/Src/SEGGER_RTT.c ****   }
 448              		.loc 1 350 16 is_stmt 0 view .LVU199
 449 012e E673     		strb	r6, [r4, #15]
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 450              		.loc 1 349 42 is_stmt 1 view .LVU200
 451              	.LVL48:
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 452              		.loc 1 349 17 view .LVU201
 352:Core/Src/SEGGER_RTT.c **** }
 453              		.loc 1 352 3 view .LVU202
 454              		.syntax unified
 455              	@ 352 "Core/Src/SEGGER_RTT.c" 1
 456 0130 BFF35F8F 		dmb
 457              	
 458              	@ 0 "" 2
 352:Core/Src/SEGGER_RTT.c **** }
 459              		.loc 1 352 13 view .LVU203
 353:Core/Src/SEGGER_RTT.c **** 
 460              		.loc 1 353 1 is_stmt 0 view .LVU204
 461              		.thumb
 462              		.syntax unified
 463 0134 6EE7     		b	.L2
 464              	.L21:
 465 0136 00BF     		.align	2
 466              	.L20:
 467 0138 00000000 		.word	.LANCHOR0
 468 013c 00000000 		.word	.LC0
 469 0140 00000000 		.word	.LANCHOR1
 470 0144 00000000 		.word	.LANCHOR2
 471              	.LBE41:
 472              	.LBE40:
 473              	.LBE44:
 474              		.cfi_endproc
 475              	.LFE5:
 477              		.section	.text.SEGGER_RTT_ReadNoLock,"ax",%progbits
 478              		.align	1
 479              		.p2align 2,,3
 480              		.global	SEGGER_RTT_ReadNoLock
 481              		.syntax unified
 482              		.thumb
 483              		.thumb_func
 485              	SEGGER_RTT_ReadNoLock:
 486              	.LVL49:
 487              	.LFB6:
 647:Core/Src/SEGGER_RTT.c **** 
 648:Core/Src/SEGGER_RTT.c **** /*********************************************************************
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccSC4OZm.s 			page 24


 649:Core/Src/SEGGER_RTT.c **** *
 650:Core/Src/SEGGER_RTT.c **** *       SEGGER_RTT_ReadNoLock()
 651:Core/Src/SEGGER_RTT.c **** *
 652:Core/Src/SEGGER_RTT.c **** *  Function description
 653:Core/Src/SEGGER_RTT.c **** *    Reads characters from SEGGER real-time-terminal control block
 654:Core/Src/SEGGER_RTT.c **** *    which have been previously stored by the host.
 655:Core/Src/SEGGER_RTT.c **** *    Do not lock against interrupts and multiple access.
 656:Core/Src/SEGGER_RTT.c **** *
 657:Core/Src/SEGGER_RTT.c **** *  Parameters
 658:Core/Src/SEGGER_RTT.c **** *    BufferIndex  Index of Down-buffer to be used (e.g. 0 for "Terminal").
 659:Core/Src/SEGGER_RTT.c **** *    pBuffer      Pointer to buffer provided by target application, to copy characters from RTT-dow
 660:Core/Src/SEGGER_RTT.c **** *    BufferSize   Size of the target application buffer.
 661:Core/Src/SEGGER_RTT.c **** *
 662:Core/Src/SEGGER_RTT.c **** *  Return value
 663:Core/Src/SEGGER_RTT.c **** *    Number of bytes that have been read.
 664:Core/Src/SEGGER_RTT.c **** */
 665:Core/Src/SEGGER_RTT.c **** unsigned SEGGER_RTT_ReadNoLock(unsigned BufferIndex, void* pData, unsigned BufferSize) {
 488              		.loc 1 665 88 is_stmt 1 view -0
 489              		.cfi_startproc
 490              		@ args = 0, pretend = 0, frame = 8
 491              		@ frame_needed = 0, uses_anonymous_args = 0
 492              		.loc 1 665 88 is_stmt 0 view .LVU206
 493 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 494              		.cfi_def_cfa_offset 36
 495              		.cfi_offset 4, -36
 496              		.cfi_offset 5, -32
 497              		.cfi_offset 6, -28
 498              		.cfi_offset 7, -24
 499              		.cfi_offset 8, -20
 500              		.cfi_offset 9, -16
 501              		.cfi_offset 10, -12
 502              		.cfi_offset 11, -8
 503              		.cfi_offset 14, -4
 504              	.LBB49:
 666:Core/Src/SEGGER_RTT.c ****   unsigned                NumBytesRem;
 667:Core/Src/SEGGER_RTT.c ****   unsigned                NumBytesRead;
 668:Core/Src/SEGGER_RTT.c ****   unsigned                RdOff;
 669:Core/Src/SEGGER_RTT.c ****   unsigned                WrOff;
 670:Core/Src/SEGGER_RTT.c ****   unsigned char*          pBuffer;
 671:Core/Src/SEGGER_RTT.c ****   SEGGER_RTT_BUFFER_DOWN* pRing;
 672:Core/Src/SEGGER_RTT.c ****   volatile char*          pSrc;
 673:Core/Src/SEGGER_RTT.c ****   //
 674:Core/Src/SEGGER_RTT.c ****   INIT();
 505              		.loc 1 674 3 view .LVU207
 506 0004 474C     		ldr	r4, .L40
 507 0006 2378     		ldrb	r3, [r4]	@ zero_extendqisi2
 508              	.LBE49:
 665:Core/Src/SEGGER_RTT.c ****   unsigned                NumBytesRem;
 509              		.loc 1 665 88 view .LVU208
 510 0008 83B0     		sub	sp, sp, #12
 511              		.cfi_def_cfa_offset 48
 665:Core/Src/SEGGER_RTT.c ****   unsigned                NumBytesRem;
 512              		.loc 1 665 88 view .LVU209
 513 000a 0646     		mov	r6, r0
 666:Core/Src/SEGGER_RTT.c ****   unsigned                NumBytesRem;
 514              		.loc 1 666 3 is_stmt 1 view .LVU210
 667:Core/Src/SEGGER_RTT.c ****   unsigned                RdOff;
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccSC4OZm.s 			page 25


 515              		.loc 1 667 3 view .LVU211
 668:Core/Src/SEGGER_RTT.c ****   unsigned                WrOff;
 516              		.loc 1 668 3 view .LVU212
 669:Core/Src/SEGGER_RTT.c ****   unsigned char*          pBuffer;
 517              		.loc 1 669 3 view .LVU213
 670:Core/Src/SEGGER_RTT.c ****   SEGGER_RTT_BUFFER_DOWN* pRing;
 518              		.loc 1 670 3 view .LVU214
 671:Core/Src/SEGGER_RTT.c ****   volatile char*          pSrc;
 519              		.loc 1 671 3 view .LVU215
 672:Core/Src/SEGGER_RTT.c ****   //
 520              		.loc 1 672 3 view .LVU216
 521              	.LBB52:
 522              		.loc 1 674 3 view .LVU217
 523              		.loc 1 674 3 view .LVU218
 524              	.LVL50:
 525              		.loc 1 674 3 view .LVU219
 526              		.loc 1 674 3 view .LVU220
 527              	.LBE52:
 665:Core/Src/SEGGER_RTT.c ****   unsigned                NumBytesRem;
 528              		.loc 1 665 88 is_stmt 0 view .LVU221
 529 000c 8A46     		mov	r10, r1
 530 000e 9146     		mov	r9, r2
 531              	.LBB53:
 532              		.loc 1 674 3 view .LVU222
 533 0010 002B     		cmp	r3, #0
 534 0012 4FD0     		beq	.L38
 535              	.LVL51:
 536              	.L23:
 537              		.loc 1 674 3 is_stmt 1 discriminator 3 view .LVU223
 538              	.LBE53:
 539              		.loc 1 674 9 discriminator 3 view .LVU224
 675:Core/Src/SEGGER_RTT.c ****   pRing = (SEGGER_RTT_BUFFER_DOWN*)((char*)&_SEGGER_RTT.aDown[BufferIndex] + SEGGER_RTT_UNCACHED_OF
 540              		.loc 1 675 3 discriminator 3 view .LVU225
 676:Core/Src/SEGGER_RTT.c ****   pBuffer = (unsigned char*)pData;
 541              		.loc 1 676 3 discriminator 3 view .LVU226
 677:Core/Src/SEGGER_RTT.c ****   RdOff = pRing->RdOff;
 542              		.loc 1 677 3 discriminator 3 view .LVU227
 543              		.loc 1 677 9 is_stmt 0 discriminator 3 view .LVU228
 544 0014 06EB4608 		add	r8, r6, r6, lsl #1
 545 0018 04EBC808 		add	r8, r4, r8, lsl #3
 546 001c 4FEA460B 		lsl	fp, r6, #1
 678:Core/Src/SEGGER_RTT.c ****   WrOff = pRing->WrOff;
 547              		.loc 1 678 9 discriminator 3 view .LVU229
 548 0020 D8F86C30 		ldr	r3, [r8, #108]
 677:Core/Src/SEGGER_RTT.c ****   RdOff = pRing->RdOff;
 549              		.loc 1 677 9 discriminator 3 view .LVU230
 550 0024 D8F87070 		ldr	r7, [r8, #112]
 551              	.LVL52:
 552              		.loc 1 678 3 is_stmt 1 discriminator 3 view .LVU231
 679:Core/Src/SEGGER_RTT.c ****   NumBytesRead = 0u;
 553              		.loc 1 679 3 discriminator 3 view .LVU232
 680:Core/Src/SEGGER_RTT.c ****   //
 681:Core/Src/SEGGER_RTT.c ****   // Read from current read position to wrap-around of buffer, first
 682:Core/Src/SEGGER_RTT.c ****   //
 683:Core/Src/SEGGER_RTT.c ****   if (RdOff > WrOff) {
 554              		.loc 1 683 3 discriminator 3 view .LVU233
 555              		.loc 1 683 6 is_stmt 0 discriminator 3 view .LVU234
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccSC4OZm.s 			page 26


 556 0028 9F42     		cmp	r7, r3
 557 002a 21D8     		bhi	.L39
 684:Core/Src/SEGGER_RTT.c ****     NumBytesRem = pRing->SizeOfBuffer - RdOff;
 685:Core/Src/SEGGER_RTT.c ****     NumBytesRem = MIN(NumBytesRem, BufferSize);
 686:Core/Src/SEGGER_RTT.c ****     pSrc = (pRing->pBuffer + RdOff) + SEGGER_RTT_UNCACHED_OFF;
 687:Core/Src/SEGGER_RTT.c **** #if SEGGER_RTT_MEMCPY_USE_BYTELOOP
 688:Core/Src/SEGGER_RTT.c ****     NumBytesRead += NumBytesRem;
 689:Core/Src/SEGGER_RTT.c ****     BufferSize   -= NumBytesRem;
 690:Core/Src/SEGGER_RTT.c ****     RdOff        += NumBytesRem;
 691:Core/Src/SEGGER_RTT.c ****     while (NumBytesRem--) {
 692:Core/Src/SEGGER_RTT.c ****       *pBuffer++ = *pSrc++;
 693:Core/Src/SEGGER_RTT.c ****     };
 694:Core/Src/SEGGER_RTT.c **** #else
 695:Core/Src/SEGGER_RTT.c ****     SEGGER_RTT_MEMCPY(pBuffer, (void*)pSrc, NumBytesRem);
 696:Core/Src/SEGGER_RTT.c ****     NumBytesRead += NumBytesRem;
 697:Core/Src/SEGGER_RTT.c ****     pBuffer      += NumBytesRem;
 698:Core/Src/SEGGER_RTT.c ****     BufferSize   -= NumBytesRem;
 699:Core/Src/SEGGER_RTT.c ****     RdOff        += NumBytesRem;
 700:Core/Src/SEGGER_RTT.c **** #endif
 701:Core/Src/SEGGER_RTT.c ****     //
 702:Core/Src/SEGGER_RTT.c ****     // Handle wrap-around of buffer
 703:Core/Src/SEGGER_RTT.c ****     //
 704:Core/Src/SEGGER_RTT.c ****     if (RdOff == pRing->SizeOfBuffer) {
 705:Core/Src/SEGGER_RTT.c ****       RdOff = 0u;
 706:Core/Src/SEGGER_RTT.c ****     }
 707:Core/Src/SEGGER_RTT.c ****   }
 708:Core/Src/SEGGER_RTT.c ****   //
 709:Core/Src/SEGGER_RTT.c ****   // Read remaining items of buffer
 710:Core/Src/SEGGER_RTT.c ****   //
 711:Core/Src/SEGGER_RTT.c ****   NumBytesRem = WrOff - RdOff;
 558              		.loc 1 711 3 is_stmt 1 view .LVU235
 559              		.loc 1 711 15 is_stmt 0 view .LVU236
 560 002c DB1B     		subs	r3, r3, r7
 561              	.LVL53:
 712:Core/Src/SEGGER_RTT.c ****   NumBytesRem = MIN(NumBytesRem, BufferSize);
 562              		.loc 1 712 3 is_stmt 1 view .LVU237
 563              		.loc 1 712 15 is_stmt 0 view .LVU238
 564 002e 9945     		cmp	r9, r3
 565 0030 4D46     		mov	r5, r9
 566 0032 28BF     		it	cs
 567 0034 1D46     		movcs	r5, r3
 568              	.LVL54:
 713:Core/Src/SEGGER_RTT.c ****   if (NumBytesRem > 0u) {
 569              		.loc 1 713 3 is_stmt 1 view .LVU239
 570              		.loc 1 713 6 is_stmt 0 view .LVU240
 571 0036 1DB9     		cbnz	r5, .L30
 572              	.LVL55:
 573              	.L22:
 714:Core/Src/SEGGER_RTT.c ****     pSrc = (pRing->pBuffer + RdOff) + SEGGER_RTT_UNCACHED_OFF;
 715:Core/Src/SEGGER_RTT.c **** #if SEGGER_RTT_MEMCPY_USE_BYTELOOP
 716:Core/Src/SEGGER_RTT.c ****     NumBytesRead += NumBytesRem;
 717:Core/Src/SEGGER_RTT.c ****     BufferSize   -= NumBytesRem;
 718:Core/Src/SEGGER_RTT.c ****     RdOff        += NumBytesRem;
 719:Core/Src/SEGGER_RTT.c ****     while (NumBytesRem--) {
 720:Core/Src/SEGGER_RTT.c ****       *pBuffer++ = *pSrc++;
 721:Core/Src/SEGGER_RTT.c ****     };
 722:Core/Src/SEGGER_RTT.c **** #else
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccSC4OZm.s 			page 27


 723:Core/Src/SEGGER_RTT.c ****     SEGGER_RTT_MEMCPY(pBuffer, (void*)pSrc, NumBytesRem);
 724:Core/Src/SEGGER_RTT.c ****     NumBytesRead += NumBytesRem;
 725:Core/Src/SEGGER_RTT.c ****     pBuffer      += NumBytesRem;
 726:Core/Src/SEGGER_RTT.c ****     BufferSize   -= NumBytesRem;
 727:Core/Src/SEGGER_RTT.c ****     RdOff        += NumBytesRem;
 728:Core/Src/SEGGER_RTT.c **** #endif
 729:Core/Src/SEGGER_RTT.c ****   }
 730:Core/Src/SEGGER_RTT.c ****   if (NumBytesRead) {
 731:Core/Src/SEGGER_RTT.c ****     pRing->RdOff = RdOff;
 732:Core/Src/SEGGER_RTT.c ****   }
 733:Core/Src/SEGGER_RTT.c ****   //
 734:Core/Src/SEGGER_RTT.c ****   return NumBytesRead;
 735:Core/Src/SEGGER_RTT.c **** }
 574              		.loc 1 735 1 view .LVU241
 575 0038 2846     		mov	r0, r5
 576 003a 03B0     		add	sp, sp, #12
 577              		.cfi_remember_state
 578              		.cfi_def_cfa_offset 36
 579              		@ sp needed
 580 003c BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 581              	.LVL56:
 582              	.L30:
 583              		.cfi_restore_state
 713:Core/Src/SEGGER_RTT.c ****   if (NumBytesRem > 0u) {
 584              		.loc 1 713 6 view .LVU242
 585 0040 A846     		mov	r8, r5
 586              	.LVL57:
 587              	.L28:
 714:Core/Src/SEGGER_RTT.c ****     pSrc = (pRing->pBuffer + RdOff) + SEGGER_RTT_UNCACHED_OFF;
 588              		.loc 1 714 5 is_stmt 1 view .LVU243
 723:Core/Src/SEGGER_RTT.c ****     NumBytesRead += NumBytesRem;
 589              		.loc 1 723 5 view .LVU244
 714:Core/Src/SEGGER_RTT.c ****     pSrc = (pRing->pBuffer + RdOff) + SEGGER_RTT_UNCACHED_OFF;
 590              		.loc 1 714 18 is_stmt 0 view .LVU245
 591 0042 0BEB0603 		add	r3, fp, r6
 592 0046 04EBC303 		add	r3, r4, r3, lsl #3
 723:Core/Src/SEGGER_RTT.c ****     NumBytesRead += NumBytesRem;
 593              		.loc 1 723 5 view .LVU246
 594 004a 2A46     		mov	r2, r5
 714:Core/Src/SEGGER_RTT.c ****     pSrc = (pRing->pBuffer + RdOff) + SEGGER_RTT_UNCACHED_OFF;
 595              		.loc 1 714 10 view .LVU247
 596 004c 596E     		ldr	r1, [r3, #100]
 723:Core/Src/SEGGER_RTT.c ****     NumBytesRead += NumBytesRem;
 597              		.loc 1 723 5 view .LVU248
 598 004e 5046     		mov	r0, r10
 599 0050 3944     		add	r1, r1, r7
 600 0052 FFF7FEFF 		bl	memcpy
 601              	.LVL58:
 727:Core/Src/SEGGER_RTT.c **** #endif
 602              		.loc 1 727 18 view .LVU249
 603 0056 2F44     		add	r7, r7, r5
 604              	.LVL59:
 724:Core/Src/SEGGER_RTT.c ****     pBuffer      += NumBytesRem;
 605              		.loc 1 724 5 is_stmt 1 view .LVU250
 725:Core/Src/SEGGER_RTT.c ****     BufferSize   -= NumBytesRem;
 606              		.loc 1 725 5 view .LVU251
 726:Core/Src/SEGGER_RTT.c ****     RdOff        += NumBytesRem;
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccSC4OZm.s 			page 28


 607              		.loc 1 726 5 view .LVU252
 727:Core/Src/SEGGER_RTT.c **** #endif
 608              		.loc 1 727 5 view .LVU253
 724:Core/Src/SEGGER_RTT.c ****     pBuffer      += NumBytesRem;
 609              		.loc 1 724 18 is_stmt 0 view .LVU254
 610 0058 4546     		mov	r5, r8
 611              	.LVL60:
 612              	.L26:
 730:Core/Src/SEGGER_RTT.c ****     pRing->RdOff = RdOff;
 613              		.loc 1 730 3 is_stmt 1 view .LVU255
 730:Core/Src/SEGGER_RTT.c ****     pRing->RdOff = RdOff;
 614              		.loc 1 730 6 is_stmt 0 view .LVU256
 615 005a 002D     		cmp	r5, #0
 616 005c ECD0     		beq	.L22
 731:Core/Src/SEGGER_RTT.c ****   }
 617              		.loc 1 731 5 is_stmt 1 view .LVU257
 731:Core/Src/SEGGER_RTT.c ****   }
 618              		.loc 1 731 18 is_stmt 0 view .LVU258
 619 005e B344     		add	fp, fp, r6
 620 0060 04EBCB0B 		add	fp, r4, fp, lsl #3
 621              		.loc 1 735 1 view .LVU259
 622 0064 2846     		mov	r0, r5
 731:Core/Src/SEGGER_RTT.c ****   }
 623              		.loc 1 731 18 view .LVU260
 624 0066 CBF87070 		str	r7, [fp, #112]
 625              	.LVL61:
 734:Core/Src/SEGGER_RTT.c **** }
 626              		.loc 1 734 3 is_stmt 1 view .LVU261
 627              		.loc 1 735 1 is_stmt 0 view .LVU262
 628 006a 03B0     		add	sp, sp, #12
 629              		.cfi_remember_state
 630              		.cfi_def_cfa_offset 36
 631              		@ sp needed
 632 006c BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 633              	.LVL62:
 634              	.L39:
 635              		.cfi_restore_state
 684:Core/Src/SEGGER_RTT.c ****     NumBytesRem = MIN(NumBytesRem, BufferSize);
 636              		.loc 1 684 5 is_stmt 1 view .LVU263
 684:Core/Src/SEGGER_RTT.c ****     NumBytesRem = MIN(NumBytesRem, BufferSize);
 637              		.loc 1 684 17 is_stmt 0 view .LVU264
 638 0070 D8F86850 		ldr	r5, [r8, #104]
 686:Core/Src/SEGGER_RTT.c **** #if SEGGER_RTT_MEMCPY_USE_BYTELOOP
 639              		.loc 1 686 10 view .LVU265
 640 0074 D8F86410 		ldr	r1, [r8, #100]
 641 0078 0193     		str	r3, [sp, #4]
 684:Core/Src/SEGGER_RTT.c ****     NumBytesRem = MIN(NumBytesRem, BufferSize);
 642              		.loc 1 684 17 view .LVU266
 643 007a ED1B     		subs	r5, r5, r7
 644              	.LVL63:
 685:Core/Src/SEGGER_RTT.c ****     pSrc = (pRing->pBuffer + RdOff) + SEGGER_RTT_UNCACHED_OFF;
 645              		.loc 1 685 5 is_stmt 1 view .LVU267
 685:Core/Src/SEGGER_RTT.c ****     pSrc = (pRing->pBuffer + RdOff) + SEGGER_RTT_UNCACHED_OFF;
 646              		.loc 1 685 17 is_stmt 0 view .LVU268
 647 007c 4D45     		cmp	r5, r9
 648 007e 28BF     		it	cs
 649 0080 4D46     		movcs	r5, r9
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccSC4OZm.s 			page 29


 650              	.LVL64:
 686:Core/Src/SEGGER_RTT.c **** #if SEGGER_RTT_MEMCPY_USE_BYTELOOP
 651              		.loc 1 686 5 is_stmt 1 view .LVU269
 695:Core/Src/SEGGER_RTT.c ****     NumBytesRead += NumBytesRem;
 652              		.loc 1 695 5 view .LVU270
 653 0082 3944     		add	r1, r1, r7
 654 0084 2A46     		mov	r2, r5
 655 0086 5046     		mov	r0, r10
 656 0088 FFF7FEFF 		bl	memcpy
 657              	.LVL65:
 696:Core/Src/SEGGER_RTT.c ****     pBuffer      += NumBytesRem;
 658              		.loc 1 696 5 view .LVU271
 697:Core/Src/SEGGER_RTT.c ****     BufferSize   -= NumBytesRem;
 659              		.loc 1 697 5 view .LVU272
 698:Core/Src/SEGGER_RTT.c ****     RdOff        += NumBytesRem;
 660              		.loc 1 698 5 view .LVU273
 704:Core/Src/SEGGER_RTT.c ****       RdOff = 0u;
 661              		.loc 1 704 8 is_stmt 0 view .LVU274
 662 008c D8F86820 		ldr	r2, [r8, #104]
 663 0090 019B     		ldr	r3, [sp, #4]
 699:Core/Src/SEGGER_RTT.c **** #endif
 664              		.loc 1 699 18 view .LVU275
 665 0092 2F44     		add	r7, r7, r5
 666              	.LVL66:
 704:Core/Src/SEGGER_RTT.c ****       RdOff = 0u;
 667              		.loc 1 704 8 view .LVU276
 668 0094 BA42     		cmp	r2, r7
 698:Core/Src/SEGGER_RTT.c ****     RdOff        += NumBytesRem;
 669              		.loc 1 698 18 view .LVU277
 670 0096 A9EB0509 		sub	r9, r9, r5
 671              	.LVL67:
 699:Core/Src/SEGGER_RTT.c **** #endif
 672              		.loc 1 699 5 is_stmt 1 view .LVU278
 704:Core/Src/SEGGER_RTT.c ****       RdOff = 0u;
 673              		.loc 1 704 5 view .LVU279
 711:Core/Src/SEGGER_RTT.c ****   NumBytesRem = MIN(NumBytesRem, BufferSize);
 674              		.loc 1 711 15 is_stmt 0 view .LVU280
 675 009a 14BF     		ite	ne
 676 009c DB1B     		subne	r3, r3, r7
 705:Core/Src/SEGGER_RTT.c ****     }
 677              		.loc 1 705 13 view .LVU281
 678 009e 0027     		moveq	r7, #0
 679              	.LVL68:
 711:Core/Src/SEGGER_RTT.c ****   NumBytesRem = MIN(NumBytesRem, BufferSize);
 680              		.loc 1 711 3 is_stmt 1 view .LVU282
 712:Core/Src/SEGGER_RTT.c ****   if (NumBytesRem > 0u) {
 681              		.loc 1 712 3 view .LVU283
 712:Core/Src/SEGGER_RTT.c ****   if (NumBytesRem > 0u) {
 682              		.loc 1 712 15 is_stmt 0 view .LVU284
 683 00a0 4B45     		cmp	r3, r9
 684 00a2 28BF     		it	cs
 685 00a4 4B46     		movcs	r3, r9
 686              	.LVL69:
 713:Core/Src/SEGGER_RTT.c ****     pSrc = (pRing->pBuffer + RdOff) + SEGGER_RTT_UNCACHED_OFF;
 687              		.loc 1 713 3 is_stmt 1 view .LVU285
 713:Core/Src/SEGGER_RTT.c ****     pSrc = (pRing->pBuffer + RdOff) + SEGGER_RTT_UNCACHED_OFF;
 688              		.loc 1 713 6 is_stmt 0 view .LVU286
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccSC4OZm.s 			page 30


 689 00a6 002B     		cmp	r3, #0
 690 00a8 D7D0     		beq	.L26
 691              	.LVL70:
 697:Core/Src/SEGGER_RTT.c ****     BufferSize   -= NumBytesRem;
 692              		.loc 1 697 18 view .LVU287
 693 00aa AA44     		add	r10, r10, r5
 694              	.LVL71:
 724:Core/Src/SEGGER_RTT.c ****     pBuffer      += NumBytesRem;
 695              		.loc 1 724 18 view .LVU288
 696 00ac 05EB0308 		add	r8, r5, r3
 697 00b0 1D46     		mov	r5, r3
 698              	.LVL72:
 724:Core/Src/SEGGER_RTT.c ****     pBuffer      += NumBytesRem;
 699              		.loc 1 724 18 view .LVU289
 700 00b2 C6E7     		b	.L28
 701              	.LVL73:
 702              	.L38:
 724:Core/Src/SEGGER_RTT.c ****     pBuffer      += NumBytesRem;
 703              		.loc 1 724 18 view .LVU290
 704 00b4 03F0FF05 		and	r5, r3, #255
 705              	.LBB54:
 674:Core/Src/SEGGER_RTT.c ****   pRing = (SEGGER_RTT_BUFFER_DOWN*)((char*)&_SEGGER_RTT.aDown[BufferIndex] + SEGGER_RTT_UNCACHED_OF
 706              		.loc 1 674 3 is_stmt 1 view .LVU291
 707              	.LBB50:
 708              	.LBI50:
 314:Core/Src/SEGGER_RTT.c ****   volatile SEGGER_RTT_CB* p;   // Volatile to make sure that compiler cannot change the order of ac
 709              		.loc 1 314 13 view .LVU292
 710              	.LBB51:
 315:Core/Src/SEGGER_RTT.c ****   static const char _aInitStr[] = "\0\0\0\0\0\0TTR REGGES";  // Init complete ID string to make sur
 711              		.loc 1 315 3 view .LVU293
 316:Core/Src/SEGGER_RTT.c ****   unsigned i;
 712              		.loc 1 316 3 view .LVU294
 317:Core/Src/SEGGER_RTT.c ****   //
 713              		.loc 1 317 3 view .LVU295
 321:Core/Src/SEGGER_RTT.c ****   memset((SEGGER_RTT_CB*)p, 0, sizeof(_SEGGER_RTT));         // Make sure that the RTT CB is always
 714              		.loc 1 321 3 view .LVU296
 715              	.LVL74:
 322:Core/Src/SEGGER_RTT.c ****   p->MaxNumUpBuffers    = SEGGER_RTT_MAX_NUM_UP_BUFFERS;
 716              		.loc 1 322 3 view .LVU297
 717 00b8 2946     		mov	r1, r5
 718              	.LVL75:
 322:Core/Src/SEGGER_RTT.c ****   p->MaxNumUpBuffers    = SEGGER_RTT_MAX_NUM_UP_BUFFERS;
 719              		.loc 1 322 3 is_stmt 0 view .LVU298
 720 00ba 7822     		movs	r2, #120
 721              	.LVL76:
 322:Core/Src/SEGGER_RTT.c ****   p->MaxNumUpBuffers    = SEGGER_RTT_MAX_NUM_UP_BUFFERS;
 722              		.loc 1 322 3 view .LVU299
 723 00bc 04F13000 		add	r0, r4, #48
 724              	.LVL77:
 322:Core/Src/SEGGER_RTT.c ****   p->MaxNumUpBuffers    = SEGGER_RTT_MAX_NUM_UP_BUFFERS;
 725              		.loc 1 322 3 view .LVU300
 726 00c0 FFF7FEFF 		bl	memset
 727              	.LVL78:
 323:Core/Src/SEGGER_RTT.c ****   p->MaxNumDownBuffers  = SEGGER_RTT_MAX_NUM_DOWN_BUFFERS;
 728              		.loc 1 323 3 is_stmt 1 view .LVU301
 323:Core/Src/SEGGER_RTT.c ****   p->MaxNumDownBuffers  = SEGGER_RTT_MAX_NUM_DOWN_BUFFERS;
 729              		.loc 1 323 25 is_stmt 0 view .LVU302
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccSC4OZm.s 			page 31


 730 00c4 0322     		movs	r2, #3
 731 00c6 2261     		str	r2, [r4, #16]
 324:Core/Src/SEGGER_RTT.c ****   //
 732              		.loc 1 324 3 is_stmt 1 view .LVU303
 328:Core/Src/SEGGER_RTT.c ****   p->aUp[0].pBuffer       = _acUpBuffer;
 733              		.loc 1 328 27 is_stmt 0 view .LVU304
 734 00c8 174B     		ldr	r3, .L40+4
 324:Core/Src/SEGGER_RTT.c ****   //
 735              		.loc 1 324 25 view .LVU305
 736 00ca 6261     		str	r2, [r4, #20]
 328:Core/Src/SEGGER_RTT.c ****   p->aUp[0].pBuffer       = _acUpBuffer;
 737              		.loc 1 328 3 is_stmt 1 view .LVU306
 330:Core/Src/SEGGER_RTT.c ****   p->aUp[0].RdOff         = 0u;
 738              		.loc 1 330 27 is_stmt 0 view .LVU307
 739 00cc 4FF48061 		mov	r1, #1024
 329:Core/Src/SEGGER_RTT.c ****   p->aUp[0].SizeOfBuffer  = BUFFER_SIZE_UP;
 740              		.loc 1 329 27 view .LVU308
 741 00d0 164A     		ldr	r2, .L40+8
 328:Core/Src/SEGGER_RTT.c ****   p->aUp[0].pBuffer       = _acUpBuffer;
 742              		.loc 1 328 27 view .LVU309
 743 00d2 A361     		str	r3, [r4, #24]
 329:Core/Src/SEGGER_RTT.c ****   p->aUp[0].SizeOfBuffer  = BUFFER_SIZE_UP;
 744              		.loc 1 329 3 is_stmt 1 view .LVU310
 329:Core/Src/SEGGER_RTT.c ****   p->aUp[0].SizeOfBuffer  = BUFFER_SIZE_UP;
 745              		.loc 1 329 27 is_stmt 0 view .LVU311
 746 00d4 E261     		str	r2, [r4, #28]
 330:Core/Src/SEGGER_RTT.c ****   p->aUp[0].RdOff         = 0u;
 747              		.loc 1 330 3 is_stmt 1 view .LVU312
 330:Core/Src/SEGGER_RTT.c ****   p->aUp[0].RdOff         = 0u;
 748              		.loc 1 330 27 is_stmt 0 view .LVU313
 749 00d6 2162     		str	r1, [r4, #32]
 331:Core/Src/SEGGER_RTT.c ****   p->aUp[0].WrOff         = 0u;
 750              		.loc 1 331 3 is_stmt 1 view .LVU314
 338:Core/Src/SEGGER_RTT.c ****   p->aDown[0].SizeOfBuffer  = BUFFER_SIZE_DOWN;
 751              		.loc 1 338 29 is_stmt 0 view .LVU315
 752 00d8 154A     		ldr	r2, .L40+12
 331:Core/Src/SEGGER_RTT.c ****   p->aUp[0].WrOff         = 0u;
 753              		.loc 1 331 27 view .LVU316
 754 00da A562     		str	r5, [r4, #40]
 332:Core/Src/SEGGER_RTT.c ****   p->aUp[0].Flags         = SEGGER_RTT_MODE_DEFAULT;
 755              		.loc 1 332 3 is_stmt 1 view .LVU317
 332:Core/Src/SEGGER_RTT.c ****   p->aUp[0].Flags         = SEGGER_RTT_MODE_DEFAULT;
 756              		.loc 1 332 27 is_stmt 0 view .LVU318
 757 00dc 6562     		str	r5, [r4, #36]
 333:Core/Src/SEGGER_RTT.c ****   //
 758              		.loc 1 333 3 is_stmt 1 view .LVU319
 333:Core/Src/SEGGER_RTT.c ****   //
 759              		.loc 1 333 27 is_stmt 0 view .LVU320
 760 00de E562     		str	r5, [r4, #44]
 337:Core/Src/SEGGER_RTT.c ****   p->aDown[0].pBuffer       = _acDownBuffer;
 761              		.loc 1 337 3 is_stmt 1 view .LVU321
 337:Core/Src/SEGGER_RTT.c ****   p->aDown[0].pBuffer       = _acDownBuffer;
 762              		.loc 1 337 29 is_stmt 0 view .LVU322
 763 00e0 2366     		str	r3, [r4, #96]
 338:Core/Src/SEGGER_RTT.c ****   p->aDown[0].SizeOfBuffer  = BUFFER_SIZE_DOWN;
 764              		.loc 1 338 3 is_stmt 1 view .LVU323
 339:Core/Src/SEGGER_RTT.c ****   p->aDown[0].RdOff         = 0u;
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccSC4OZm.s 			page 32


 765              		.loc 1 339 29 is_stmt 0 view .LVU324
 766 00e2 1023     		movs	r3, #16
 338:Core/Src/SEGGER_RTT.c ****   p->aDown[0].SizeOfBuffer  = BUFFER_SIZE_DOWN;
 767              		.loc 1 338 29 view .LVU325
 768 00e4 6266     		str	r2, [r4, #100]
 339:Core/Src/SEGGER_RTT.c ****   p->aDown[0].RdOff         = 0u;
 769              		.loc 1 339 3 is_stmt 1 view .LVU326
 339:Core/Src/SEGGER_RTT.c ****   p->aDown[0].RdOff         = 0u;
 770              		.loc 1 339 29 is_stmt 0 view .LVU327
 771 00e6 A366     		str	r3, [r4, #104]
 340:Core/Src/SEGGER_RTT.c ****   p->aDown[0].WrOff         = 0u;
 772              		.loc 1 340 3 is_stmt 1 view .LVU328
 340:Core/Src/SEGGER_RTT.c ****   p->aDown[0].WrOff         = 0u;
 773              		.loc 1 340 29 is_stmt 0 view .LVU329
 774 00e8 2567     		str	r5, [r4, #112]
 341:Core/Src/SEGGER_RTT.c ****   p->aDown[0].Flags         = SEGGER_RTT_MODE_DEFAULT;
 775              		.loc 1 341 3 is_stmt 1 view .LVU330
 341:Core/Src/SEGGER_RTT.c ****   p->aDown[0].Flags         = SEGGER_RTT_MODE_DEFAULT;
 776              		.loc 1 341 29 is_stmt 0 view .LVU331
 777 00ea E566     		str	r5, [r4, #108]
 342:Core/Src/SEGGER_RTT.c ****   //
 778              		.loc 1 342 3 is_stmt 1 view .LVU332
 342:Core/Src/SEGGER_RTT.c ****   //
 779              		.loc 1 342 29 is_stmt 0 view .LVU333
 780 00ec 6567     		str	r5, [r4, #116]
 348:Core/Src/SEGGER_RTT.c ****   for (i = 0; i < sizeof(_aInitStr) - 1; ++i) {
 781              		.loc 1 348 3 is_stmt 1 view .LVU334
 782              		.syntax unified
 783              	@ 348 "Core/Src/SEGGER_RTT.c" 1
 784 00ee BFF35F8F 		dmb
 785              	
 786              	@ 0 "" 2
 348:Core/Src/SEGGER_RTT.c ****   for (i = 0; i < sizeof(_aInitStr) - 1; ++i) {
 787              		.loc 1 348 13 view .LVU335
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 788              		.loc 1 349 3 view .LVU336
 789              	.LVL79:
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 790              		.loc 1 349 17 view .LVU337
 350:Core/Src/SEGGER_RTT.c ****   }
 791              		.loc 1 350 5 view .LVU338
 350:Core/Src/SEGGER_RTT.c ****   }
 792              		.loc 1 350 16 is_stmt 0 view .LVU339
 793              		.thumb
 794              		.syntax unified
 795 00f2 4521     		movs	r1, #69
 796 00f4 4720     		movs	r0, #71
 797 00f6 5327     		movs	r7, #83
 798 00f8 2770     		strb	r7, [r4]
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 799              		.loc 1 349 42 is_stmt 1 view .LVU340
 800              	.LVL80:
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 801              		.loc 1 349 17 view .LVU341
 350:Core/Src/SEGGER_RTT.c ****   }
 802              		.loc 1 350 5 view .LVU342
 350:Core/Src/SEGGER_RTT.c ****   }
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccSC4OZm.s 			page 33


 803              		.loc 1 350 16 is_stmt 0 view .LVU343
 804 00fa 5222     		movs	r2, #82
 805 00fc 6170     		strb	r1, [r4, #1]
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 806              		.loc 1 349 42 is_stmt 1 view .LVU344
 807              	.LVL81:
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 808              		.loc 1 349 17 view .LVU345
 350:Core/Src/SEGGER_RTT.c ****   }
 809              		.loc 1 350 5 view .LVU346
 350:Core/Src/SEGGER_RTT.c ****   }
 810              		.loc 1 350 16 is_stmt 0 view .LVU347
 811 00fe 5423     		movs	r3, #84
 812 0100 A070     		strb	r0, [r4, #2]
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 813              		.loc 1 349 42 is_stmt 1 view .LVU348
 814              	.LVL82:
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 815              		.loc 1 349 17 view .LVU349
 350:Core/Src/SEGGER_RTT.c ****   }
 816              		.loc 1 350 5 view .LVU350
 350:Core/Src/SEGGER_RTT.c ****   }
 817              		.loc 1 350 16 is_stmt 0 view .LVU351
 818 0102 E070     		strb	r0, [r4, #3]
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 819              		.loc 1 349 42 is_stmt 1 view .LVU352
 820              	.LVL83:
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 821              		.loc 1 349 17 view .LVU353
 350:Core/Src/SEGGER_RTT.c ****   }
 822              		.loc 1 350 5 view .LVU354
 350:Core/Src/SEGGER_RTT.c ****   }
 823              		.loc 1 350 16 is_stmt 0 view .LVU355
 824 0104 2171     		strb	r1, [r4, #4]
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 825              		.loc 1 349 42 is_stmt 1 view .LVU356
 826              	.LVL84:
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 827              		.loc 1 349 17 view .LVU357
 350:Core/Src/SEGGER_RTT.c ****   }
 828              		.loc 1 350 5 view .LVU358
 350:Core/Src/SEGGER_RTT.c ****   }
 829              		.loc 1 350 16 is_stmt 0 view .LVU359
 830 0106 2021     		movs	r1, #32
 831 0108 6271     		strb	r2, [r4, #5]
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 832              		.loc 1 349 42 is_stmt 1 view .LVU360
 833              	.LVL85:
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 834              		.loc 1 349 17 view .LVU361
 350:Core/Src/SEGGER_RTT.c ****   }
 835              		.loc 1 350 5 view .LVU362
 350:Core/Src/SEGGER_RTT.c ****   }
 836              		.loc 1 350 16 is_stmt 0 view .LVU363
 837 010a A171     		strb	r1, [r4, #6]
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 838              		.loc 1 349 42 is_stmt 1 view .LVU364
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccSC4OZm.s 			page 34


 839              	.LVL86:
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 840              		.loc 1 349 17 view .LVU365
 350:Core/Src/SEGGER_RTT.c ****   }
 841              		.loc 1 350 5 view .LVU366
 350:Core/Src/SEGGER_RTT.c ****   }
 842              		.loc 1 350 16 is_stmt 0 view .LVU367
 843 010c E271     		strb	r2, [r4, #7]
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 844              		.loc 1 349 42 is_stmt 1 view .LVU368
 845              	.LVL87:
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 846              		.loc 1 349 17 view .LVU369
 350:Core/Src/SEGGER_RTT.c ****   }
 847              		.loc 1 350 5 view .LVU370
 350:Core/Src/SEGGER_RTT.c ****   }
 848              		.loc 1 350 16 is_stmt 0 view .LVU371
 849 010e 2372     		strb	r3, [r4, #8]
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 850              		.loc 1 349 42 is_stmt 1 view .LVU372
 851              	.LVL88:
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 852              		.loc 1 349 17 view .LVU373
 350:Core/Src/SEGGER_RTT.c ****   }
 853              		.loc 1 350 5 view .LVU374
 350:Core/Src/SEGGER_RTT.c ****   }
 854              		.loc 1 350 16 is_stmt 0 view .LVU375
 855 0110 6372     		strb	r3, [r4, #9]
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 856              		.loc 1 349 42 is_stmt 1 view .LVU376
 857              	.LVL89:
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 858              		.loc 1 349 17 view .LVU377
 350:Core/Src/SEGGER_RTT.c ****   }
 859              		.loc 1 350 5 view .LVU378
 350:Core/Src/SEGGER_RTT.c ****   }
 860              		.loc 1 350 16 is_stmt 0 view .LVU379
 861 0112 A572     		strb	r5, [r4, #10]
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 862              		.loc 1 349 42 is_stmt 1 view .LVU380
 863              	.LVL90:
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 864              		.loc 1 349 17 view .LVU381
 350:Core/Src/SEGGER_RTT.c ****   }
 865              		.loc 1 350 5 view .LVU382
 350:Core/Src/SEGGER_RTT.c ****   }
 866              		.loc 1 350 16 is_stmt 0 view .LVU383
 867 0114 E572     		strb	r5, [r4, #11]
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 868              		.loc 1 349 42 is_stmt 1 view .LVU384
 869              	.LVL91:
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 870              		.loc 1 349 17 view .LVU385
 350:Core/Src/SEGGER_RTT.c ****   }
 871              		.loc 1 350 5 view .LVU386
 350:Core/Src/SEGGER_RTT.c ****   }
 872              		.loc 1 350 16 is_stmt 0 view .LVU387
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccSC4OZm.s 			page 35


 873 0116 2573     		strb	r5, [r4, #12]
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 874              		.loc 1 349 42 is_stmt 1 view .LVU388
 875              	.LVL92:
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 876              		.loc 1 349 17 view .LVU389
 350:Core/Src/SEGGER_RTT.c ****   }
 877              		.loc 1 350 5 view .LVU390
 350:Core/Src/SEGGER_RTT.c ****   }
 878              		.loc 1 350 16 is_stmt 0 view .LVU391
 879 0118 6573     		strb	r5, [r4, #13]
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 880              		.loc 1 349 42 is_stmt 1 view .LVU392
 881              	.LVL93:
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 882              		.loc 1 349 17 view .LVU393
 350:Core/Src/SEGGER_RTT.c ****   }
 883              		.loc 1 350 5 view .LVU394
 350:Core/Src/SEGGER_RTT.c ****   }
 884              		.loc 1 350 16 is_stmt 0 view .LVU395
 885 011a A573     		strb	r5, [r4, #14]
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 886              		.loc 1 349 42 is_stmt 1 view .LVU396
 887              	.LVL94:
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 888              		.loc 1 349 17 view .LVU397
 350:Core/Src/SEGGER_RTT.c ****   }
 889              		.loc 1 350 5 view .LVU398
 350:Core/Src/SEGGER_RTT.c ****   }
 890              		.loc 1 350 16 is_stmt 0 view .LVU399
 891 011c E573     		strb	r5, [r4, #15]
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 892              		.loc 1 349 42 is_stmt 1 view .LVU400
 893              	.LVL95:
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 894              		.loc 1 349 17 view .LVU401
 352:Core/Src/SEGGER_RTT.c **** }
 895              		.loc 1 352 3 view .LVU402
 896              		.syntax unified
 897              	@ 352 "Core/Src/SEGGER_RTT.c" 1
 898 011e BFF35F8F 		dmb
 899              	
 900              	@ 0 "" 2
 352:Core/Src/SEGGER_RTT.c **** }
 901              		.loc 1 352 13 view .LVU403
 353:Core/Src/SEGGER_RTT.c **** 
 902              		.loc 1 353 1 is_stmt 0 view .LVU404
 903              		.thumb
 904              		.syntax unified
 905 0122 77E7     		b	.L23
 906              	.L41:
 907              		.align	2
 908              	.L40:
 909 0124 00000000 		.word	.LANCHOR0
 910 0128 00000000 		.word	.LC0
 911 012c 00000000 		.word	.LANCHOR1
 912 0130 00000000 		.word	.LANCHOR2
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccSC4OZm.s 			page 36


 913              	.LBE51:
 914              	.LBE50:
 915              	.LBE54:
 916              		.cfi_endproc
 917              	.LFE6:
 919              		.section	.text.SEGGER_RTT_ReadUpBuffer,"ax",%progbits
 920              		.align	1
 921              		.p2align 2,,3
 922              		.global	SEGGER_RTT_ReadUpBuffer
 923              		.syntax unified
 924              		.thumb
 925              		.thumb_func
 927              	SEGGER_RTT_ReadUpBuffer:
 928              	.LVL96:
 929              	.LFB7:
 736:Core/Src/SEGGER_RTT.c **** 
 737:Core/Src/SEGGER_RTT.c **** /*********************************************************************
 738:Core/Src/SEGGER_RTT.c **** *
 739:Core/Src/SEGGER_RTT.c **** *       SEGGER_RTT_ReadUpBuffer
 740:Core/Src/SEGGER_RTT.c **** *
 741:Core/Src/SEGGER_RTT.c **** *  Function description
 742:Core/Src/SEGGER_RTT.c **** *    Reads characters from SEGGER real-time-terminal control block
 743:Core/Src/SEGGER_RTT.c **** *    which have been previously stored by the application.
 744:Core/Src/SEGGER_RTT.c **** *    Used to do the same operation that J-Link does, to transfer 
 745:Core/Src/SEGGER_RTT.c **** *    RTT data via other channels, such as TCP/IP or UART.
 746:Core/Src/SEGGER_RTT.c **** *
 747:Core/Src/SEGGER_RTT.c **** *  Parameters
 748:Core/Src/SEGGER_RTT.c **** *    BufferIndex  Index of Up-buffer to be used.
 749:Core/Src/SEGGER_RTT.c **** *    pBuffer      Pointer to buffer provided by target application, to copy characters from RTT-up-
 750:Core/Src/SEGGER_RTT.c **** *    BufferSize   Size of the target application buffer.
 751:Core/Src/SEGGER_RTT.c **** *
 752:Core/Src/SEGGER_RTT.c **** *  Return value
 753:Core/Src/SEGGER_RTT.c **** *    Number of bytes that have been read.
 754:Core/Src/SEGGER_RTT.c **** *
 755:Core/Src/SEGGER_RTT.c **** *  Additional information
 756:Core/Src/SEGGER_RTT.c **** *    This function must not be called when J-Link might also do RTT.
 757:Core/Src/SEGGER_RTT.c **** *    This function locks against all other RTT operations. I.e. during
 758:Core/Src/SEGGER_RTT.c **** *    the read operation, writing is also locked.
 759:Core/Src/SEGGER_RTT.c **** *    If only one consumer reads from the up buffer, 
 760:Core/Src/SEGGER_RTT.c **** *    call sEGGER_RTT_ReadUpBufferNoLock() instead.
 761:Core/Src/SEGGER_RTT.c **** */
 762:Core/Src/SEGGER_RTT.c **** unsigned SEGGER_RTT_ReadUpBuffer(unsigned BufferIndex, void* pBuffer, unsigned BufferSize) {
 930              		.loc 1 762 92 is_stmt 1 view -0
 931              		.cfi_startproc
 932              		@ args = 0, pretend = 0, frame = 16
 933              		@ frame_needed = 0, uses_anonymous_args = 0
 934              		.loc 1 762 92 is_stmt 0 view .LVU406
 935 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 936              		.cfi_def_cfa_offset 36
 937              		.cfi_offset 4, -36
 938              		.cfi_offset 5, -32
 939              		.cfi_offset 6, -28
 940              		.cfi_offset 7, -24
 941              		.cfi_offset 8, -20
 942              		.cfi_offset 9, -16
 943              		.cfi_offset 10, -12
 944              		.cfi_offset 11, -8
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccSC4OZm.s 			page 37


 945              		.cfi_offset 14, -4
 946 0004 0546     		mov	r5, r0
 763:Core/Src/SEGGER_RTT.c ****   unsigned NumBytesRead;
 947              		.loc 1 763 3 is_stmt 1 view .LVU407
 948              	.LBB61:
 764:Core/Src/SEGGER_RTT.c **** 
 765:Core/Src/SEGGER_RTT.c ****   SEGGER_RTT_LOCK();
 949              		.loc 1 765 3 view .LVU408
 950              		.loc 1 765 3 view .LVU409
 951              	.LBE61:
 762:Core/Src/SEGGER_RTT.c ****   unsigned NumBytesRead;
 952              		.loc 1 762 92 is_stmt 0 view .LVU410
 953 0006 85B0     		sub	sp, sp, #20
 954              		.cfi_def_cfa_offset 56
 762:Core/Src/SEGGER_RTT.c ****   unsigned NumBytesRead;
 955              		.loc 1 762 92 view .LVU411
 956 0008 8A46     		mov	r10, r1
 957 000a 1746     		mov	r7, r2
 958              	.LBB73:
 959              		.loc 1 765 3 view .LVU412
 960              		.syntax unified
 961              	@ 765 "Core/Src/SEGGER_RTT.c" 1
 962 000c EFF31183 		mrs   r3, basepri  
 963 0010 4FF02001 		mov   r1, #32       
 964 0014 81F31188 		msr   basepri, r1  
 965              		
 966              	@ 0 "" 2
 967              	.LVL97:
 968              		.thumb
 969              		.syntax unified
 970              	.LBB62:
 971              	.LBB63:
 972              	.LBB64:
 582:Core/Src/SEGGER_RTT.c ****   pRing = (SEGGER_RTT_BUFFER_UP*)((char*)&_SEGGER_RTT.aUp[BufferIndex] + SEGGER_RTT_UNCACHED_OFF); 
 973              		.loc 1 582 3 view .LVU413
 974 0018 4D4C     		ldr	r4, .L61
 975              	.LBE64:
 976              	.LBE63:
 977              	.LBE62:
 978              		.loc 1 765 3 view .LVU414
 979 001a 0193     		str	r3, [sp, #4]
 980              	.LVL98:
 981              		.loc 1 765 20 is_stmt 1 view .LVU415
 766:Core/Src/SEGGER_RTT.c ****   //
 767:Core/Src/SEGGER_RTT.c ****   // Call the non-locking read function
 768:Core/Src/SEGGER_RTT.c ****   //
 769:Core/Src/SEGGER_RTT.c ****   NumBytesRead = SEGGER_RTT_ReadUpBufferNoLock(BufferIndex, pBuffer, BufferSize);
 982              		.loc 1 769 3 view .LVU416
 983              	.LBB71:
 984              	.LBI62:
 573:Core/Src/SEGGER_RTT.c ****   unsigned                NumBytesRem;
 985              		.loc 1 573 10 view .LVU417
 986              	.LBB69:
 574:Core/Src/SEGGER_RTT.c ****   unsigned                NumBytesRead;
 987              		.loc 1 574 3 view .LVU418
 575:Core/Src/SEGGER_RTT.c ****   unsigned                RdOff;
 988              		.loc 1 575 3 view .LVU419
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccSC4OZm.s 			page 38


 576:Core/Src/SEGGER_RTT.c ****   unsigned                WrOff;
 989              		.loc 1 576 3 view .LVU420
 577:Core/Src/SEGGER_RTT.c ****   unsigned char*          pBuffer;
 990              		.loc 1 577 3 view .LVU421
 578:Core/Src/SEGGER_RTT.c ****   SEGGER_RTT_BUFFER_UP*   pRing;
 991              		.loc 1 578 3 view .LVU422
 579:Core/Src/SEGGER_RTT.c ****   volatile char*          pSrc;
 992              		.loc 1 579 3 view .LVU423
 580:Core/Src/SEGGER_RTT.c **** 
 993              		.loc 1 580 3 view .LVU424
 994              	.LBB67:
 582:Core/Src/SEGGER_RTT.c ****   pRing = (SEGGER_RTT_BUFFER_UP*)((char*)&_SEGGER_RTT.aUp[BufferIndex] + SEGGER_RTT_UNCACHED_OFF); 
 995              		.loc 1 582 3 view .LVU425
 582:Core/Src/SEGGER_RTT.c ****   pRing = (SEGGER_RTT_BUFFER_UP*)((char*)&_SEGGER_RTT.aUp[BufferIndex] + SEGGER_RTT_UNCACHED_OFF); 
 996              		.loc 1 582 3 view .LVU426
 582:Core/Src/SEGGER_RTT.c ****   pRing = (SEGGER_RTT_BUFFER_UP*)((char*)&_SEGGER_RTT.aUp[BufferIndex] + SEGGER_RTT_UNCACHED_OFF); 
 997              		.loc 1 582 3 view .LVU427
 582:Core/Src/SEGGER_RTT.c ****   pRing = (SEGGER_RTT_BUFFER_UP*)((char*)&_SEGGER_RTT.aUp[BufferIndex] + SEGGER_RTT_UNCACHED_OFF); 
 998              		.loc 1 582 3 view .LVU428
 999 001c 2278     		ldrb	r2, [r4]	@ zero_extendqisi2
 1000              	.LVL99:
 582:Core/Src/SEGGER_RTT.c ****   pRing = (SEGGER_RTT_BUFFER_UP*)((char*)&_SEGGER_RTT.aUp[BufferIndex] + SEGGER_RTT_UNCACHED_OFF); 
 1001              		.loc 1 582 3 is_stmt 0 view .LVU429
 1002 001e 002A     		cmp	r2, #0
 1003 0020 59D0     		beq	.L59
 1004              	.LVL100:
 1005              	.L43:
 582:Core/Src/SEGGER_RTT.c ****   pRing = (SEGGER_RTT_BUFFER_UP*)((char*)&_SEGGER_RTT.aUp[BufferIndex] + SEGGER_RTT_UNCACHED_OFF); 
 1006              		.loc 1 582 3 is_stmt 1 view .LVU430
 1007              	.LBE67:
 582:Core/Src/SEGGER_RTT.c ****   pRing = (SEGGER_RTT_BUFFER_UP*)((char*)&_SEGGER_RTT.aUp[BufferIndex] + SEGGER_RTT_UNCACHED_OFF); 
 1008              		.loc 1 582 9 view .LVU431
 583:Core/Src/SEGGER_RTT.c ****   pBuffer = (unsigned char*)pData;
 1009              		.loc 1 583 3 view .LVU432
 584:Core/Src/SEGGER_RTT.c ****   RdOff = pRing->RdOff;
 1010              		.loc 1 584 3 view .LVU433
 585:Core/Src/SEGGER_RTT.c ****   WrOff = pRing->WrOff;
 1011              		.loc 1 585 3 view .LVU434
 585:Core/Src/SEGGER_RTT.c ****   WrOff = pRing->WrOff;
 1012              		.loc 1 585 9 is_stmt 0 view .LVU435
 1013 0022 05EB4508 		add	r8, r5, r5, lsl #1
 1014 0026 04EBC808 		add	r8, r4, r8, lsl #3
 1015 002a 6B00     		lsls	r3, r5, #1
 1016 002c D8F82860 		ldr	r6, [r8, #40]
 1017              	.LVL101:
 586:Core/Src/SEGGER_RTT.c ****   NumBytesRead = 0u;
 1018              		.loc 1 586 3 is_stmt 1 view .LVU436
 586:Core/Src/SEGGER_RTT.c ****   NumBytesRead = 0u;
 1019              		.loc 1 586 9 is_stmt 0 view .LVU437
 1020 0030 D8F82490 		ldr	r9, [r8, #36]
 1021              	.LVL102:
 587:Core/Src/SEGGER_RTT.c ****   //
 1022              		.loc 1 587 3 is_stmt 1 view .LVU438
 591:Core/Src/SEGGER_RTT.c ****     NumBytesRem = pRing->SizeOfBuffer - RdOff;
 1023              		.loc 1 591 3 view .LVU439
 591:Core/Src/SEGGER_RTT.c ****     NumBytesRem = pRing->SizeOfBuffer - RdOff;
 1024              		.loc 1 591 6 is_stmt 0 view .LVU440
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccSC4OZm.s 			page 39


 1025 0034 4E45     		cmp	r6, r9
 1026 0036 25D8     		bhi	.L60
 619:Core/Src/SEGGER_RTT.c ****   NumBytesRem = MIN(NumBytesRem, BufferSize);
 1027              		.loc 1 619 3 is_stmt 1 view .LVU441
 619:Core/Src/SEGGER_RTT.c ****   NumBytesRem = MIN(NumBytesRem, BufferSize);
 1028              		.loc 1 619 15 is_stmt 0 view .LVU442
 1029 0038 A9EB0609 		sub	r9, r9, r6
 1030              	.LVL103:
 620:Core/Src/SEGGER_RTT.c ****   if (NumBytesRem > 0u) {
 1031              		.loc 1 620 3 is_stmt 1 view .LVU443
 620:Core/Src/SEGGER_RTT.c ****   if (NumBytesRem > 0u) {
 1032              		.loc 1 620 15 is_stmt 0 view .LVU444
 1033 003c 4F45     		cmp	r7, r9
 1034 003e 3A46     		mov	r2, r7
 1035 0040 28BF     		it	cs
 1036 0042 4A46     		movcs	r2, r9
 1037              	.LVL104:
 621:Core/Src/SEGGER_RTT.c ****     pSrc = (pRing->pBuffer + RdOff) + SEGGER_RTT_UNCACHED_OFF;
 1038              		.loc 1 621 3 is_stmt 1 view .LVU445
 621:Core/Src/SEGGER_RTT.c ****     pSrc = (pRing->pBuffer + RdOff) + SEGGER_RTT_UNCACHED_OFF;
 1039              		.loc 1 621 6 is_stmt 0 view .LVU446
 1040 0044 32B9     		cbnz	r2, .L50
 1041              	.LVL105:
 1042              	.L47:
 645:Core/Src/SEGGER_RTT.c **** }
 1043              		.loc 1 645 3 is_stmt 1 view .LVU447
 645:Core/Src/SEGGER_RTT.c **** }
 1044              		.loc 1 645 3 is_stmt 0 view .LVU448
 1045              	.LBE69:
 1046              	.LBE71:
 770:Core/Src/SEGGER_RTT.c ****   //
 771:Core/Src/SEGGER_RTT.c ****   // Finish up.
 772:Core/Src/SEGGER_RTT.c ****   //
 773:Core/Src/SEGGER_RTT.c ****   SEGGER_RTT_UNLOCK();
 1047              		.loc 1 773 3 is_stmt 1 view .LVU449
 1048 0046 019B     		ldr	r3, [sp, #4]
 1049              		.syntax unified
 1050              	@ 773 "Core/Src/SEGGER_RTT.c" 1
 1051 0048 83F31188 		msr   basepri, r3  
 1052              		
 1053              	@ 0 "" 2
 1054              		.thumb
 1055              		.syntax unified
 1056              	.LBE73:
 1057              		.loc 1 773 22 view .LVU450
 774:Core/Src/SEGGER_RTT.c ****   //
 775:Core/Src/SEGGER_RTT.c ****   return NumBytesRead;
 1058              		.loc 1 775 3 view .LVU451
 776:Core/Src/SEGGER_RTT.c **** }
 1059              		.loc 1 776 1 is_stmt 0 view .LVU452
 1060 004c 1046     		mov	r0, r2
 1061 004e 05B0     		add	sp, sp, #20
 1062              		.cfi_remember_state
 1063              		.cfi_def_cfa_offset 36
 1064              		@ sp needed
 1065 0050 BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 1066              	.LVL106:
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccSC4OZm.s 			page 40


 1067              	.L50:
 1068              		.cfi_restore_state
 1069              	.LBB74:
 1070              	.LBB72:
 1071              	.LBB70:
 621:Core/Src/SEGGER_RTT.c ****     pSrc = (pRing->pBuffer + RdOff) + SEGGER_RTT_UNCACHED_OFF;
 1072              		.loc 1 621 6 view .LVU453
 1073 0054 9046     		mov	r8, r2
 1074              	.LVL107:
 621:Core/Src/SEGGER_RTT.c ****     pSrc = (pRing->pBuffer + RdOff) + SEGGER_RTT_UNCACHED_OFF;
 1075              		.loc 1 621 6 view .LVU454
 1076 0056 05F1010B 		add	fp, r5, #1
 1077              	.LVL108:
 1078              	.L48:
 622:Core/Src/SEGGER_RTT.c **** #if SEGGER_RTT_MEMCPY_USE_BYTELOOP
 1079              		.loc 1 622 5 is_stmt 1 view .LVU455
 631:Core/Src/SEGGER_RTT.c ****     NumBytesRead += NumBytesRem;
 1080              		.loc 1 631 5 view .LVU456
 622:Core/Src/SEGGER_RTT.c **** #if SEGGER_RTT_MEMCPY_USE_BYTELOOP
 1081              		.loc 1 622 18 is_stmt 0 view .LVU457
 1082 005a 0BEB4B0B 		add	fp, fp, fp, lsl #1
 1083 005e 04EBCB0B 		add	fp, r4, fp, lsl #3
 631:Core/Src/SEGGER_RTT.c ****     NumBytesRead += NumBytesRem;
 1084              		.loc 1 631 5 view .LVU458
 1085 0062 5046     		mov	r0, r10
 622:Core/Src/SEGGER_RTT.c **** #if SEGGER_RTT_MEMCPY_USE_BYTELOOP
 1086              		.loc 1 622 10 view .LVU459
 1087 0064 DBF80410 		ldr	r1, [fp, #4]
 1088 0068 0293     		str	r3, [sp, #8]
 631:Core/Src/SEGGER_RTT.c ****     NumBytesRead += NumBytesRem;
 1089              		.loc 1 631 5 view .LVU460
 1090 006a 3144     		add	r1, r1, r6
 635:Core/Src/SEGGER_RTT.c **** #endif
 1091              		.loc 1 635 18 view .LVU461
 1092 006c 1644     		add	r6, r6, r2
 1093              	.LVL109:
 631:Core/Src/SEGGER_RTT.c ****     NumBytesRead += NumBytesRem;
 1094              		.loc 1 631 5 view .LVU462
 1095 006e FFF7FEFF 		bl	memcpy
 1096              	.LVL110:
 632:Core/Src/SEGGER_RTT.c ****     pBuffer      += NumBytesRem;
 1097              		.loc 1 632 5 is_stmt 1 view .LVU463
 633:Core/Src/SEGGER_RTT.c ****     BufferSize   -= NumBytesRem;
 1098              		.loc 1 633 5 view .LVU464
 634:Core/Src/SEGGER_RTT.c ****     RdOff        += NumBytesRem;
 1099              		.loc 1 634 5 view .LVU465
 635:Core/Src/SEGGER_RTT.c **** #endif
 1100              		.loc 1 635 5 view .LVU466
 632:Core/Src/SEGGER_RTT.c ****     pBuffer      += NumBytesRem;
 1101              		.loc 1 632 18 is_stmt 0 view .LVU467
 1102 0072 029B     		ldr	r3, [sp, #8]
 1103 0074 4246     		mov	r2, r8
 1104              	.L46:
 1105              	.LVL111:
 641:Core/Src/SEGGER_RTT.c ****     pRing->RdOff = RdOff;
 1106              		.loc 1 641 3 is_stmt 1 view .LVU468
 641:Core/Src/SEGGER_RTT.c ****     pRing->RdOff = RdOff;
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccSC4OZm.s 			page 41


 1107              		.loc 1 641 6 is_stmt 0 view .LVU469
 1108 0076 002A     		cmp	r2, #0
 1109 0078 E5D0     		beq	.L47
 642:Core/Src/SEGGER_RTT.c ****   }
 1110              		.loc 1 642 5 is_stmt 1 view .LVU470
 642:Core/Src/SEGGER_RTT.c ****   }
 1111              		.loc 1 642 18 is_stmt 0 view .LVU471
 1112 007a 1D44     		add	r5, r5, r3
 1113              	.LVL112:
 642:Core/Src/SEGGER_RTT.c ****   }
 1114              		.loc 1 642 18 view .LVU472
 1115 007c 04EBC505 		add	r5, r4, r5, lsl #3
 1116 0080 AE62     		str	r6, [r5, #40]
 1117 0082 E0E7     		b	.L47
 1118              	.LVL113:
 1119              	.L60:
 592:Core/Src/SEGGER_RTT.c ****     NumBytesRem = MIN(NumBytesRem, BufferSize);
 1120              		.loc 1 592 5 is_stmt 1 view .LVU473
 594:Core/Src/SEGGER_RTT.c **** #if SEGGER_RTT_MEMCPY_USE_BYTELOOP
 1121              		.loc 1 594 18 is_stmt 0 view .LVU474
 1122 0084 05F1010B 		add	fp, r5, #1
 1123 0088 0BEB4B02 		add	r2, fp, fp, lsl #1
 1124 008c 04EBC202 		add	r2, r4, r2, lsl #3
 603:Core/Src/SEGGER_RTT.c ****     NumBytesRead += NumBytesRem;
 1125              		.loc 1 603 5 view .LVU475
 1126 0090 5046     		mov	r0, r10
 594:Core/Src/SEGGER_RTT.c **** #if SEGGER_RTT_MEMCPY_USE_BYTELOOP
 1127              		.loc 1 594 10 view .LVU476
 1128 0092 5168     		ldr	r1, [r2, #4]
 592:Core/Src/SEGGER_RTT.c ****     NumBytesRem = MIN(NumBytesRem, BufferSize);
 1129              		.loc 1 592 17 view .LVU477
 1130 0094 D8F82020 		ldr	r2, [r8, #32]
 1131 0098 0393     		str	r3, [sp, #12]
 1132 009a 921B     		subs	r2, r2, r6
 1133              	.LVL114:
 593:Core/Src/SEGGER_RTT.c ****     pSrc = (pRing->pBuffer + RdOff) + SEGGER_RTT_UNCACHED_OFF;
 1134              		.loc 1 593 5 is_stmt 1 view .LVU478
 593:Core/Src/SEGGER_RTT.c ****     pSrc = (pRing->pBuffer + RdOff) + SEGGER_RTT_UNCACHED_OFF;
 1135              		.loc 1 593 17 is_stmt 0 view .LVU479
 1136 009c BA42     		cmp	r2, r7
 1137 009e 28BF     		it	cs
 1138 00a0 3A46     		movcs	r2, r7
 1139              	.LVL115:
 594:Core/Src/SEGGER_RTT.c **** #if SEGGER_RTT_MEMCPY_USE_BYTELOOP
 1140              		.loc 1 594 5 is_stmt 1 view .LVU480
 603:Core/Src/SEGGER_RTT.c ****     NumBytesRead += NumBytesRem;
 1141              		.loc 1 603 5 view .LVU481
 1142 00a2 3144     		add	r1, r1, r6
 1143 00a4 0292     		str	r2, [sp, #8]
 607:Core/Src/SEGGER_RTT.c **** #endif
 1144              		.loc 1 607 18 is_stmt 0 view .LVU482
 1145 00a6 1644     		add	r6, r6, r2
 1146              	.LVL116:
 603:Core/Src/SEGGER_RTT.c ****     NumBytesRead += NumBytesRem;
 1147              		.loc 1 603 5 view .LVU483
 1148 00a8 FFF7FEFF 		bl	memcpy
 1149              	.LVL117:
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccSC4OZm.s 			page 42


 604:Core/Src/SEGGER_RTT.c ****     pBuffer      += NumBytesRem;
 1150              		.loc 1 604 5 is_stmt 1 view .LVU484
 605:Core/Src/SEGGER_RTT.c ****     BufferSize   -= NumBytesRem;
 1151              		.loc 1 605 5 view .LVU485
 606:Core/Src/SEGGER_RTT.c ****     RdOff        += NumBytesRem;
 1152              		.loc 1 606 5 view .LVU486
 612:Core/Src/SEGGER_RTT.c ****       RdOff = 0u;
 1153              		.loc 1 612 8 is_stmt 0 view .LVU487
 1154 00ac D8F82010 		ldr	r1, [r8, #32]
 606:Core/Src/SEGGER_RTT.c ****     RdOff        += NumBytesRem;
 1155              		.loc 1 606 18 view .LVU488
 1156 00b0 029A     		ldr	r2, [sp, #8]
 612:Core/Src/SEGGER_RTT.c ****       RdOff = 0u;
 1157              		.loc 1 612 8 view .LVU489
 1158 00b2 039B     		ldr	r3, [sp, #12]
 1159 00b4 8E42     		cmp	r6, r1
 606:Core/Src/SEGGER_RTT.c ****     RdOff        += NumBytesRem;
 1160              		.loc 1 606 18 view .LVU490
 1161 00b6 A7EB0207 		sub	r7, r7, r2
 1162              	.LVL118:
 607:Core/Src/SEGGER_RTT.c **** #endif
 1163              		.loc 1 607 5 is_stmt 1 view .LVU491
 612:Core/Src/SEGGER_RTT.c ****       RdOff = 0u;
 1164              		.loc 1 612 5 view .LVU492
 619:Core/Src/SEGGER_RTT.c ****   NumBytesRem = MIN(NumBytesRem, BufferSize);
 1165              		.loc 1 619 15 is_stmt 0 view .LVU493
 1166 00ba 14BF     		ite	ne
 1167 00bc A9EB0609 		subne	r9, r9, r6
 1168              	.LVL119:
 613:Core/Src/SEGGER_RTT.c ****     }
 1169              		.loc 1 613 13 view .LVU494
 1170 00c0 0026     		moveq	r6, #0
 1171              	.LVL120:
 619:Core/Src/SEGGER_RTT.c ****   NumBytesRem = MIN(NumBytesRem, BufferSize);
 1172              		.loc 1 619 3 is_stmt 1 view .LVU495
 620:Core/Src/SEGGER_RTT.c ****   if (NumBytesRem > 0u) {
 1173              		.loc 1 620 3 view .LVU496
 620:Core/Src/SEGGER_RTT.c ****   if (NumBytesRem > 0u) {
 1174              		.loc 1 620 15 is_stmt 0 view .LVU497
 1175 00c2 4F45     		cmp	r7, r9
 1176 00c4 28BF     		it	cs
 1177 00c6 4F46     		movcs	r7, r9
 1178              	.LVL121:
 621:Core/Src/SEGGER_RTT.c ****     pSrc = (pRing->pBuffer + RdOff) + SEGGER_RTT_UNCACHED_OFF;
 1179              		.loc 1 621 3 is_stmt 1 view .LVU498
 621:Core/Src/SEGGER_RTT.c ****     pSrc = (pRing->pBuffer + RdOff) + SEGGER_RTT_UNCACHED_OFF;
 1180              		.loc 1 621 6 is_stmt 0 view .LVU499
 1181 00c8 002F     		cmp	r7, #0
 1182 00ca D4D0     		beq	.L46
 1183              	.LVL122:
 605:Core/Src/SEGGER_RTT.c ****     BufferSize   -= NumBytesRem;
 1184              		.loc 1 605 18 view .LVU500
 1185 00cc 9244     		add	r10, r10, r2
 1186              	.LVL123:
 632:Core/Src/SEGGER_RTT.c ****     pBuffer      += NumBytesRem;
 1187              		.loc 1 632 18 view .LVU501
 1188 00ce 02EB0708 		add	r8, r2, r7
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccSC4OZm.s 			page 43


 1189 00d2 3A46     		mov	r2, r7
 1190 00d4 C1E7     		b	.L48
 1191              	.LVL124:
 1192              	.L59:
 632:Core/Src/SEGGER_RTT.c ****     pBuffer      += NumBytesRem;
 1193              		.loc 1 632 18 view .LVU502
 1194 00d6 02F0FF06 		and	r6, r2, #255
 1195              	.LBB68:
 582:Core/Src/SEGGER_RTT.c ****   pRing = (SEGGER_RTT_BUFFER_UP*)((char*)&_SEGGER_RTT.aUp[BufferIndex] + SEGGER_RTT_UNCACHED_OFF); 
 1196              		.loc 1 582 3 is_stmt 1 view .LVU503
 1197              	.LBB65:
 1198              	.LBI65:
 314:Core/Src/SEGGER_RTT.c ****   volatile SEGGER_RTT_CB* p;   // Volatile to make sure that compiler cannot change the order of ac
 1199              		.loc 1 314 13 view .LVU504
 1200              	.LBB66:
 315:Core/Src/SEGGER_RTT.c ****   static const char _aInitStr[] = "\0\0\0\0\0\0TTR REGGES";  // Init complete ID string to make sur
 1201              		.loc 1 315 3 view .LVU505
 316:Core/Src/SEGGER_RTT.c ****   unsigned i;
 1202              		.loc 1 316 3 view .LVU506
 317:Core/Src/SEGGER_RTT.c ****   //
 1203              		.loc 1 317 3 view .LVU507
 321:Core/Src/SEGGER_RTT.c ****   memset((SEGGER_RTT_CB*)p, 0, sizeof(_SEGGER_RTT));         // Make sure that the RTT CB is always
 1204              		.loc 1 321 3 view .LVU508
 1205              	.LVL125:
 322:Core/Src/SEGGER_RTT.c ****   p->MaxNumUpBuffers    = SEGGER_RTT_MAX_NUM_UP_BUFFERS;
 1206              		.loc 1 322 3 view .LVU509
 1207 00da 3146     		mov	r1, r6
 1208 00dc 7822     		movs	r2, #120
 1209 00de 04F13000 		add	r0, r4, #48
 1210              	.LVL126:
 322:Core/Src/SEGGER_RTT.c ****   p->MaxNumUpBuffers    = SEGGER_RTT_MAX_NUM_UP_BUFFERS;
 1211              		.loc 1 322 3 is_stmt 0 view .LVU510
 1212 00e2 FFF7FEFF 		bl	memset
 1213              	.LVL127:
 323:Core/Src/SEGGER_RTT.c ****   p->MaxNumDownBuffers  = SEGGER_RTT_MAX_NUM_DOWN_BUFFERS;
 1214              		.loc 1 323 3 is_stmt 1 view .LVU511
 323:Core/Src/SEGGER_RTT.c ****   p->MaxNumDownBuffers  = SEGGER_RTT_MAX_NUM_DOWN_BUFFERS;
 1215              		.loc 1 323 25 is_stmt 0 view .LVU512
 1216 00e6 0321     		movs	r1, #3
 1217 00e8 2161     		str	r1, [r4, #16]
 324:Core/Src/SEGGER_RTT.c ****   //
 1218              		.loc 1 324 3 is_stmt 1 view .LVU513
 328:Core/Src/SEGGER_RTT.c ****   p->aUp[0].pBuffer       = _acUpBuffer;
 1219              		.loc 1 328 27 is_stmt 0 view .LVU514
 1220 00ea 1A4A     		ldr	r2, .L61+4
 324:Core/Src/SEGGER_RTT.c ****   //
 1221              		.loc 1 324 25 view .LVU515
 1222 00ec 6161     		str	r1, [r4, #20]
 328:Core/Src/SEGGER_RTT.c ****   p->aUp[0].pBuffer       = _acUpBuffer;
 1223              		.loc 1 328 3 is_stmt 1 view .LVU516
 330:Core/Src/SEGGER_RTT.c ****   p->aUp[0].RdOff         = 0u;
 1224              		.loc 1 330 27 is_stmt 0 view .LVU517
 1225 00ee 4FF48060 		mov	r0, #1024
 329:Core/Src/SEGGER_RTT.c ****   p->aUp[0].SizeOfBuffer  = BUFFER_SIZE_UP;
 1226              		.loc 1 329 27 view .LVU518
 1227 00f2 1949     		ldr	r1, .L61+8
 328:Core/Src/SEGGER_RTT.c ****   p->aUp[0].pBuffer       = _acUpBuffer;
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccSC4OZm.s 			page 44


 1228              		.loc 1 328 27 view .LVU519
 1229 00f4 A261     		str	r2, [r4, #24]
 329:Core/Src/SEGGER_RTT.c ****   p->aUp[0].SizeOfBuffer  = BUFFER_SIZE_UP;
 1230              		.loc 1 329 3 is_stmt 1 view .LVU520
 329:Core/Src/SEGGER_RTT.c ****   p->aUp[0].SizeOfBuffer  = BUFFER_SIZE_UP;
 1231              		.loc 1 329 27 is_stmt 0 view .LVU521
 1232 00f6 E161     		str	r1, [r4, #28]
 330:Core/Src/SEGGER_RTT.c ****   p->aUp[0].RdOff         = 0u;
 1233              		.loc 1 330 3 is_stmt 1 view .LVU522
 330:Core/Src/SEGGER_RTT.c ****   p->aUp[0].RdOff         = 0u;
 1234              		.loc 1 330 27 is_stmt 0 view .LVU523
 1235 00f8 2062     		str	r0, [r4, #32]
 331:Core/Src/SEGGER_RTT.c ****   p->aUp[0].WrOff         = 0u;
 1236              		.loc 1 331 3 is_stmt 1 view .LVU524
 338:Core/Src/SEGGER_RTT.c ****   p->aDown[0].SizeOfBuffer  = BUFFER_SIZE_DOWN;
 1237              		.loc 1 338 29 is_stmt 0 view .LVU525
 1238 00fa 1849     		ldr	r1, .L61+12
 331:Core/Src/SEGGER_RTT.c ****   p->aUp[0].WrOff         = 0u;
 1239              		.loc 1 331 27 view .LVU526
 1240 00fc A662     		str	r6, [r4, #40]
 332:Core/Src/SEGGER_RTT.c ****   p->aUp[0].Flags         = SEGGER_RTT_MODE_DEFAULT;
 1241              		.loc 1 332 3 is_stmt 1 view .LVU527
 332:Core/Src/SEGGER_RTT.c ****   p->aUp[0].Flags         = SEGGER_RTT_MODE_DEFAULT;
 1242              		.loc 1 332 27 is_stmt 0 view .LVU528
 1243 00fe 6662     		str	r6, [r4, #36]
 333:Core/Src/SEGGER_RTT.c ****   //
 1244              		.loc 1 333 3 is_stmt 1 view .LVU529
 333:Core/Src/SEGGER_RTT.c ****   //
 1245              		.loc 1 333 27 is_stmt 0 view .LVU530
 1246 0100 E662     		str	r6, [r4, #44]
 337:Core/Src/SEGGER_RTT.c ****   p->aDown[0].pBuffer       = _acDownBuffer;
 1247              		.loc 1 337 3 is_stmt 1 view .LVU531
 337:Core/Src/SEGGER_RTT.c ****   p->aDown[0].pBuffer       = _acDownBuffer;
 1248              		.loc 1 337 29 is_stmt 0 view .LVU532
 1249 0102 2266     		str	r2, [r4, #96]
 338:Core/Src/SEGGER_RTT.c ****   p->aDown[0].SizeOfBuffer  = BUFFER_SIZE_DOWN;
 1250              		.loc 1 338 3 is_stmt 1 view .LVU533
 339:Core/Src/SEGGER_RTT.c ****   p->aDown[0].RdOff         = 0u;
 1251              		.loc 1 339 29 is_stmt 0 view .LVU534
 1252 0104 1022     		movs	r2, #16
 338:Core/Src/SEGGER_RTT.c ****   p->aDown[0].SizeOfBuffer  = BUFFER_SIZE_DOWN;
 1253              		.loc 1 338 29 view .LVU535
 1254 0106 6166     		str	r1, [r4, #100]
 339:Core/Src/SEGGER_RTT.c ****   p->aDown[0].RdOff         = 0u;
 1255              		.loc 1 339 3 is_stmt 1 view .LVU536
 339:Core/Src/SEGGER_RTT.c ****   p->aDown[0].RdOff         = 0u;
 1256              		.loc 1 339 29 is_stmt 0 view .LVU537
 1257 0108 A266     		str	r2, [r4, #104]
 340:Core/Src/SEGGER_RTT.c ****   p->aDown[0].WrOff         = 0u;
 1258              		.loc 1 340 3 is_stmt 1 view .LVU538
 340:Core/Src/SEGGER_RTT.c ****   p->aDown[0].WrOff         = 0u;
 1259              		.loc 1 340 29 is_stmt 0 view .LVU539
 1260 010a 2667     		str	r6, [r4, #112]
 341:Core/Src/SEGGER_RTT.c ****   p->aDown[0].Flags         = SEGGER_RTT_MODE_DEFAULT;
 1261              		.loc 1 341 3 is_stmt 1 view .LVU540
 341:Core/Src/SEGGER_RTT.c ****   p->aDown[0].Flags         = SEGGER_RTT_MODE_DEFAULT;
 1262              		.loc 1 341 29 is_stmt 0 view .LVU541
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccSC4OZm.s 			page 45


 1263 010c E666     		str	r6, [r4, #108]
 342:Core/Src/SEGGER_RTT.c ****   //
 1264              		.loc 1 342 3 is_stmt 1 view .LVU542
 342:Core/Src/SEGGER_RTT.c ****   //
 1265              		.loc 1 342 29 is_stmt 0 view .LVU543
 1266 010e 6667     		str	r6, [r4, #116]
 348:Core/Src/SEGGER_RTT.c ****   for (i = 0; i < sizeof(_aInitStr) - 1; ++i) {
 1267              		.loc 1 348 3 is_stmt 1 view .LVU544
 1268              		.syntax unified
 1269              	@ 348 "Core/Src/SEGGER_RTT.c" 1
 1270 0110 BFF35F8F 		dmb
 1271              	
 1272              	@ 0 "" 2
 348:Core/Src/SEGGER_RTT.c ****   for (i = 0; i < sizeof(_aInitStr) - 1; ++i) {
 1273              		.loc 1 348 13 view .LVU545
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 1274              		.loc 1 349 3 view .LVU546
 1275              	.LVL128:
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 1276              		.loc 1 349 17 view .LVU547
 350:Core/Src/SEGGER_RTT.c ****   }
 1277              		.loc 1 350 5 view .LVU548
 350:Core/Src/SEGGER_RTT.c ****   }
 1278              		.loc 1 350 16 is_stmt 0 view .LVU549
 1279              		.thumb
 1280              		.syntax unified
 1281 0114 4520     		movs	r0, #69
 1282 0116 4FF0470C 		mov	ip, #71
 1283 011a 4FF0530E 		mov	lr, #83
 1284 011e 84F800E0 		strb	lr, [r4]
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 1285              		.loc 1 349 42 is_stmt 1 view .LVU550
 1286              	.LVL129:
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 1287              		.loc 1 349 17 view .LVU551
 350:Core/Src/SEGGER_RTT.c ****   }
 1288              		.loc 1 350 5 view .LVU552
 350:Core/Src/SEGGER_RTT.c ****   }
 1289              		.loc 1 350 16 is_stmt 0 view .LVU553
 1290 0122 5221     		movs	r1, #82
 1291 0124 6070     		strb	r0, [r4, #1]
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 1292              		.loc 1 349 42 is_stmt 1 view .LVU554
 1293              	.LVL130:
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 1294              		.loc 1 349 17 view .LVU555
 350:Core/Src/SEGGER_RTT.c ****   }
 1295              		.loc 1 350 5 view .LVU556
 350:Core/Src/SEGGER_RTT.c ****   }
 1296              		.loc 1 350 16 is_stmt 0 view .LVU557
 1297 0126 5422     		movs	r2, #84
 1298 0128 84F802C0 		strb	ip, [r4, #2]
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 1299              		.loc 1 349 42 is_stmt 1 view .LVU558
 1300              	.LVL131:
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 1301              		.loc 1 349 17 view .LVU559
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccSC4OZm.s 			page 46


 350:Core/Src/SEGGER_RTT.c ****   }
 1302              		.loc 1 350 5 view .LVU560
 350:Core/Src/SEGGER_RTT.c ****   }
 1303              		.loc 1 350 16 is_stmt 0 view .LVU561
 1304 012c 84F803C0 		strb	ip, [r4, #3]
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 1305              		.loc 1 349 42 is_stmt 1 view .LVU562
 1306              	.LVL132:
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 1307              		.loc 1 349 17 view .LVU563
 350:Core/Src/SEGGER_RTT.c ****   }
 1308              		.loc 1 350 5 view .LVU564
 350:Core/Src/SEGGER_RTT.c ****   }
 1309              		.loc 1 350 16 is_stmt 0 view .LVU565
 1310 0130 2071     		strb	r0, [r4, #4]
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 1311              		.loc 1 349 42 is_stmt 1 view .LVU566
 1312              	.LVL133:
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 1313              		.loc 1 349 17 view .LVU567
 350:Core/Src/SEGGER_RTT.c ****   }
 1314              		.loc 1 350 5 view .LVU568
 350:Core/Src/SEGGER_RTT.c ****   }
 1315              		.loc 1 350 16 is_stmt 0 view .LVU569
 1316 0132 2020     		movs	r0, #32
 1317 0134 6171     		strb	r1, [r4, #5]
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 1318              		.loc 1 349 42 is_stmt 1 view .LVU570
 1319              	.LVL134:
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 1320              		.loc 1 349 17 view .LVU571
 350:Core/Src/SEGGER_RTT.c ****   }
 1321              		.loc 1 350 5 view .LVU572
 350:Core/Src/SEGGER_RTT.c ****   }
 1322              		.loc 1 350 16 is_stmt 0 view .LVU573
 1323 0136 A071     		strb	r0, [r4, #6]
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 1324              		.loc 1 349 42 is_stmt 1 view .LVU574
 1325              	.LVL135:
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 1326              		.loc 1 349 17 view .LVU575
 350:Core/Src/SEGGER_RTT.c ****   }
 1327              		.loc 1 350 5 view .LVU576
 350:Core/Src/SEGGER_RTT.c ****   }
 1328              		.loc 1 350 16 is_stmt 0 view .LVU577
 1329 0138 E171     		strb	r1, [r4, #7]
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 1330              		.loc 1 349 42 is_stmt 1 view .LVU578
 1331              	.LVL136:
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 1332              		.loc 1 349 17 view .LVU579
 350:Core/Src/SEGGER_RTT.c ****   }
 1333              		.loc 1 350 5 view .LVU580
 350:Core/Src/SEGGER_RTT.c ****   }
 1334              		.loc 1 350 16 is_stmt 0 view .LVU581
 1335 013a 2272     		strb	r2, [r4, #8]
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccSC4OZm.s 			page 47


 1336              		.loc 1 349 42 is_stmt 1 view .LVU582
 1337              	.LVL137:
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 1338              		.loc 1 349 17 view .LVU583
 350:Core/Src/SEGGER_RTT.c ****   }
 1339              		.loc 1 350 5 view .LVU584
 350:Core/Src/SEGGER_RTT.c ****   }
 1340              		.loc 1 350 16 is_stmt 0 view .LVU585
 1341 013c 6272     		strb	r2, [r4, #9]
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 1342              		.loc 1 349 42 is_stmt 1 view .LVU586
 1343              	.LVL138:
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 1344              		.loc 1 349 17 view .LVU587
 350:Core/Src/SEGGER_RTT.c ****   }
 1345              		.loc 1 350 5 view .LVU588
 350:Core/Src/SEGGER_RTT.c ****   }
 1346              		.loc 1 350 16 is_stmt 0 view .LVU589
 1347 013e A672     		strb	r6, [r4, #10]
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 1348              		.loc 1 349 42 is_stmt 1 view .LVU590
 1349              	.LVL139:
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 1350              		.loc 1 349 17 view .LVU591
 350:Core/Src/SEGGER_RTT.c ****   }
 1351              		.loc 1 350 5 view .LVU592
 350:Core/Src/SEGGER_RTT.c ****   }
 1352              		.loc 1 350 16 is_stmt 0 view .LVU593
 1353 0140 E672     		strb	r6, [r4, #11]
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 1354              		.loc 1 349 42 is_stmt 1 view .LVU594
 1355              	.LVL140:
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 1356              		.loc 1 349 17 view .LVU595
 350:Core/Src/SEGGER_RTT.c ****   }
 1357              		.loc 1 350 5 view .LVU596
 350:Core/Src/SEGGER_RTT.c ****   }
 1358              		.loc 1 350 16 is_stmt 0 view .LVU597
 1359 0142 2673     		strb	r6, [r4, #12]
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 1360              		.loc 1 349 42 is_stmt 1 view .LVU598
 1361              	.LVL141:
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 1362              		.loc 1 349 17 view .LVU599
 350:Core/Src/SEGGER_RTT.c ****   }
 1363              		.loc 1 350 5 view .LVU600
 350:Core/Src/SEGGER_RTT.c ****   }
 1364              		.loc 1 350 16 is_stmt 0 view .LVU601
 1365 0144 6673     		strb	r6, [r4, #13]
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 1366              		.loc 1 349 42 is_stmt 1 view .LVU602
 1367              	.LVL142:
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 1368              		.loc 1 349 17 view .LVU603
 350:Core/Src/SEGGER_RTT.c ****   }
 1369              		.loc 1 350 5 view .LVU604
 350:Core/Src/SEGGER_RTT.c ****   }
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccSC4OZm.s 			page 48


 1370              		.loc 1 350 16 is_stmt 0 view .LVU605
 1371 0146 A673     		strb	r6, [r4, #14]
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 1372              		.loc 1 349 42 is_stmt 1 view .LVU606
 1373              	.LVL143:
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 1374              		.loc 1 349 17 view .LVU607
 350:Core/Src/SEGGER_RTT.c ****   }
 1375              		.loc 1 350 5 view .LVU608
 350:Core/Src/SEGGER_RTT.c ****   }
 1376              		.loc 1 350 16 is_stmt 0 view .LVU609
 1377 0148 E673     		strb	r6, [r4, #15]
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 1378              		.loc 1 349 42 is_stmt 1 view .LVU610
 1379              	.LVL144:
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 1380              		.loc 1 349 17 view .LVU611
 352:Core/Src/SEGGER_RTT.c **** }
 1381              		.loc 1 352 3 view .LVU612
 1382              		.syntax unified
 1383              	@ 352 "Core/Src/SEGGER_RTT.c" 1
 1384 014a BFF35F8F 		dmb
 1385              	
 1386              	@ 0 "" 2
 352:Core/Src/SEGGER_RTT.c **** }
 1387              		.loc 1 352 13 view .LVU613
 353:Core/Src/SEGGER_RTT.c **** 
 1388              		.loc 1 353 1 is_stmt 0 view .LVU614
 1389              		.thumb
 1390              		.syntax unified
 1391 014e 68E7     		b	.L43
 1392              	.L62:
 1393              		.align	2
 1394              	.L61:
 1395 0150 00000000 		.word	.LANCHOR0
 1396 0154 00000000 		.word	.LC0
 1397 0158 00000000 		.word	.LANCHOR1
 1398 015c 00000000 		.word	.LANCHOR2
 1399              	.LBE66:
 1400              	.LBE65:
 1401              	.LBE68:
 1402              	.LBE70:
 1403              	.LBE72:
 1404              	.LBE74:
 1405              		.cfi_endproc
 1406              	.LFE7:
 1408              		.section	.text.SEGGER_RTT_Read,"ax",%progbits
 1409              		.align	1
 1410              		.p2align 2,,3
 1411              		.global	SEGGER_RTT_Read
 1412              		.syntax unified
 1413              		.thumb
 1414              		.thumb_func
 1416              	SEGGER_RTT_Read:
 1417              	.LVL145:
 1418              	.LFB8:
 777:Core/Src/SEGGER_RTT.c **** 
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccSC4OZm.s 			page 49


 778:Core/Src/SEGGER_RTT.c **** /*********************************************************************
 779:Core/Src/SEGGER_RTT.c **** *
 780:Core/Src/SEGGER_RTT.c **** *       SEGGER_RTT_Read
 781:Core/Src/SEGGER_RTT.c **** *
 782:Core/Src/SEGGER_RTT.c **** *  Function description
 783:Core/Src/SEGGER_RTT.c **** *    Reads characters from SEGGER real-time-terminal control block
 784:Core/Src/SEGGER_RTT.c **** *    which have been previously stored by the host.
 785:Core/Src/SEGGER_RTT.c **** *
 786:Core/Src/SEGGER_RTT.c **** *  Parameters
 787:Core/Src/SEGGER_RTT.c **** *    BufferIndex  Index of Down-buffer to be used (e.g. 0 for "Terminal").
 788:Core/Src/SEGGER_RTT.c **** *    pBuffer      Pointer to buffer provided by target application, to copy characters from RTT-dow
 789:Core/Src/SEGGER_RTT.c **** *    BufferSize   Size of the target application buffer.
 790:Core/Src/SEGGER_RTT.c **** *
 791:Core/Src/SEGGER_RTT.c **** *  Return value
 792:Core/Src/SEGGER_RTT.c **** *    Number of bytes that have been read.
 793:Core/Src/SEGGER_RTT.c **** */
 794:Core/Src/SEGGER_RTT.c **** unsigned SEGGER_RTT_Read(unsigned BufferIndex, void* pBuffer, unsigned BufferSize) {
 1419              		.loc 1 794 84 is_stmt 1 view -0
 1420              		.cfi_startproc
 1421              		@ args = 0, pretend = 0, frame = 8
 1422              		@ frame_needed = 0, uses_anonymous_args = 0
 1423              		.loc 1 794 84 is_stmt 0 view .LVU616
 1424 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 1425              		.cfi_def_cfa_offset 36
 1426              		.cfi_offset 4, -36
 1427              		.cfi_offset 5, -32
 1428              		.cfi_offset 6, -28
 1429              		.cfi_offset 7, -24
 1430              		.cfi_offset 8, -20
 1431              		.cfi_offset 9, -16
 1432              		.cfi_offset 10, -12
 1433              		.cfi_offset 11, -8
 1434              		.cfi_offset 14, -4
 1435 0004 0546     		mov	r5, r0
 795:Core/Src/SEGGER_RTT.c ****   unsigned NumBytesRead;
 1436              		.loc 1 795 3 is_stmt 1 view .LVU617
 1437              	.LBB81:
 796:Core/Src/SEGGER_RTT.c **** 
 797:Core/Src/SEGGER_RTT.c ****   SEGGER_RTT_LOCK();
 1438              		.loc 1 797 3 view .LVU618
 1439              		.loc 1 797 3 view .LVU619
 1440              	.LBE81:
 794:Core/Src/SEGGER_RTT.c ****   unsigned NumBytesRead;
 1441              		.loc 1 794 84 is_stmt 0 view .LVU620
 1442 0006 83B0     		sub	sp, sp, #12
 1443              		.cfi_def_cfa_offset 48
 794:Core/Src/SEGGER_RTT.c ****   unsigned NumBytesRead;
 1444              		.loc 1 794 84 view .LVU621
 1445 0008 8A46     		mov	r10, r1
 1446 000a 9046     		mov	r8, r2
 1447              	.LBB92:
 1448              		.loc 1 797 3 view .LVU622
 1449              		.syntax unified
 1450              	@ 797 "Core/Src/SEGGER_RTT.c" 1
 1451 000c EFF31183 		mrs   r3, basepri  
 1452 0010 4FF02001 		mov   r1, #32       
 1453 0014 81F31188 		msr   basepri, r1  
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccSC4OZm.s 			page 50


 1454              		
 1455              	@ 0 "" 2
 1456              	.LVL146:
 1457              		.loc 1 797 20 is_stmt 1 view .LVU623
 798:Core/Src/SEGGER_RTT.c ****   //
 799:Core/Src/SEGGER_RTT.c ****   // Call the non-locking read function
 800:Core/Src/SEGGER_RTT.c ****   //
 801:Core/Src/SEGGER_RTT.c ****   NumBytesRead = SEGGER_RTT_ReadNoLock(BufferIndex, pBuffer, BufferSize);
 1458              		.loc 1 801 3 view .LVU624
 1459              		.thumb
 1460              		.syntax unified
 1461              	.LBB82:
 1462              	.LBI82:
 665:Core/Src/SEGGER_RTT.c ****   unsigned                NumBytesRem;
 1463              		.loc 1 665 10 view .LVU625
 1464              	.LBB83:
 666:Core/Src/SEGGER_RTT.c ****   unsigned                NumBytesRead;
 1465              		.loc 1 666 3 view .LVU626
 667:Core/Src/SEGGER_RTT.c ****   unsigned                RdOff;
 1466              		.loc 1 667 3 view .LVU627
 668:Core/Src/SEGGER_RTT.c ****   unsigned                WrOff;
 1467              		.loc 1 668 3 view .LVU628
 669:Core/Src/SEGGER_RTT.c ****   unsigned char*          pBuffer;
 1468              		.loc 1 669 3 view .LVU629
 670:Core/Src/SEGGER_RTT.c ****   SEGGER_RTT_BUFFER_DOWN* pRing;
 1469              		.loc 1 670 3 view .LVU630
 671:Core/Src/SEGGER_RTT.c ****   volatile char*          pSrc;
 1470              		.loc 1 671 3 view .LVU631
 672:Core/Src/SEGGER_RTT.c ****   //
 1471              		.loc 1 672 3 view .LVU632
 1472              	.LBB84:
 674:Core/Src/SEGGER_RTT.c ****   pRing = (SEGGER_RTT_BUFFER_DOWN*)((char*)&_SEGGER_RTT.aDown[BufferIndex] + SEGGER_RTT_UNCACHED_OF
 1473              		.loc 1 674 3 view .LVU633
 674:Core/Src/SEGGER_RTT.c ****   pRing = (SEGGER_RTT_BUFFER_DOWN*)((char*)&_SEGGER_RTT.aDown[BufferIndex] + SEGGER_RTT_UNCACHED_OF
 1474              		.loc 1 674 3 view .LVU634
 674:Core/Src/SEGGER_RTT.c ****   pRing = (SEGGER_RTT_BUFFER_DOWN*)((char*)&_SEGGER_RTT.aDown[BufferIndex] + SEGGER_RTT_UNCACHED_OF
 1475              		.loc 1 674 3 view .LVU635
 674:Core/Src/SEGGER_RTT.c ****   pRing = (SEGGER_RTT_BUFFER_DOWN*)((char*)&_SEGGER_RTT.aDown[BufferIndex] + SEGGER_RTT_UNCACHED_OF
 1476              		.loc 1 674 3 view .LVU636
 1477 0018 464C     		ldr	r4, .L82
 1478 001a 2278     		ldrb	r2, [r4]	@ zero_extendqisi2
 1479              	.LVL147:
 674:Core/Src/SEGGER_RTT.c ****   pRing = (SEGGER_RTT_BUFFER_DOWN*)((char*)&_SEGGER_RTT.aDown[BufferIndex] + SEGGER_RTT_UNCACHED_OF
 1480              		.loc 1 674 3 is_stmt 0 view .LVU637
 1481 001c 002A     		cmp	r2, #0
 1482 001e 4DD0     		beq	.L80
 1483              	.LVL148:
 1484              	.L64:
 674:Core/Src/SEGGER_RTT.c ****   pRing = (SEGGER_RTT_BUFFER_DOWN*)((char*)&_SEGGER_RTT.aDown[BufferIndex] + SEGGER_RTT_UNCACHED_OF
 1485              		.loc 1 674 3 is_stmt 1 view .LVU638
 1486              	.LBE84:
 674:Core/Src/SEGGER_RTT.c ****   pRing = (SEGGER_RTT_BUFFER_DOWN*)((char*)&_SEGGER_RTT.aDown[BufferIndex] + SEGGER_RTT_UNCACHED_OF
 1487              		.loc 1 674 9 view .LVU639
 675:Core/Src/SEGGER_RTT.c ****   pBuffer = (unsigned char*)pData;
 1488              		.loc 1 675 3 view .LVU640
 676:Core/Src/SEGGER_RTT.c ****   RdOff = pRing->RdOff;
 1489              		.loc 1 676 3 view .LVU641
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccSC4OZm.s 			page 51


 677:Core/Src/SEGGER_RTT.c ****   WrOff = pRing->WrOff;
 1490              		.loc 1 677 3 view .LVU642
 677:Core/Src/SEGGER_RTT.c ****   WrOff = pRing->WrOff;
 1491              		.loc 1 677 9 is_stmt 0 view .LVU643
 1492 0020 05EB4507 		add	r7, r5, r5, lsl #1
 1493 0024 04EBC707 		add	r7, r4, r7, lsl #3
 1494 0028 4FEA450B 		lsl	fp, r5, #1
 678:Core/Src/SEGGER_RTT.c ****   NumBytesRead = 0u;
 1495              		.loc 1 678 9 view .LVU644
 1496 002c D7F86C90 		ldr	r9, [r7, #108]
 677:Core/Src/SEGGER_RTT.c ****   WrOff = pRing->WrOff;
 1497              		.loc 1 677 9 view .LVU645
 1498 0030 3E6F     		ldr	r6, [r7, #112]
 1499              	.LVL149:
 678:Core/Src/SEGGER_RTT.c ****   NumBytesRead = 0u;
 1500              		.loc 1 678 3 is_stmt 1 view .LVU646
 679:Core/Src/SEGGER_RTT.c ****   //
 1501              		.loc 1 679 3 view .LVU647
 683:Core/Src/SEGGER_RTT.c ****     NumBytesRem = pRing->SizeOfBuffer - RdOff;
 1502              		.loc 1 683 3 view .LVU648
 683:Core/Src/SEGGER_RTT.c ****     NumBytesRem = pRing->SizeOfBuffer - RdOff;
 1503              		.loc 1 683 6 is_stmt 0 view .LVU649
 1504 0032 4E45     		cmp	r6, r9
 1505 0034 22D8     		bhi	.L81
 711:Core/Src/SEGGER_RTT.c ****   NumBytesRem = MIN(NumBytesRem, BufferSize);
 1506              		.loc 1 711 3 is_stmt 1 view .LVU650
 711:Core/Src/SEGGER_RTT.c ****   NumBytesRem = MIN(NumBytesRem, BufferSize);
 1507              		.loc 1 711 15 is_stmt 0 view .LVU651
 1508 0036 A9EB0609 		sub	r9, r9, r6
 1509              	.LVL150:
 712:Core/Src/SEGGER_RTT.c ****   if (NumBytesRem > 0u) {
 1510              		.loc 1 712 3 is_stmt 1 view .LVU652
 712:Core/Src/SEGGER_RTT.c ****   if (NumBytesRem > 0u) {
 1511              		.loc 1 712 15 is_stmt 0 view .LVU653
 1512 003a C845     		cmp	r8, r9
 1513 003c 4246     		mov	r2, r8
 1514 003e 28BF     		it	cs
 1515 0040 4A46     		movcs	r2, r9
 1516              	.LVL151:
 713:Core/Src/SEGGER_RTT.c ****     pSrc = (pRing->pBuffer + RdOff) + SEGGER_RTT_UNCACHED_OFF;
 1517              		.loc 1 713 3 is_stmt 1 view .LVU654
 713:Core/Src/SEGGER_RTT.c ****     pSrc = (pRing->pBuffer + RdOff) + SEGGER_RTT_UNCACHED_OFF;
 1518              		.loc 1 713 6 is_stmt 0 view .LVU655
 1519 0042 2AB9     		cbnz	r2, .L71
 1520              	.LVL152:
 1521              	.L68:
 734:Core/Src/SEGGER_RTT.c **** }
 1522              		.loc 1 734 3 is_stmt 1 view .LVU656
 734:Core/Src/SEGGER_RTT.c **** }
 1523              		.loc 1 734 3 is_stmt 0 view .LVU657
 1524              	.LBE83:
 1525              	.LBE82:
 802:Core/Src/SEGGER_RTT.c ****   //
 803:Core/Src/SEGGER_RTT.c ****   // Finish up.
 804:Core/Src/SEGGER_RTT.c ****   //
 805:Core/Src/SEGGER_RTT.c ****   SEGGER_RTT_UNLOCK();
 1526              		.loc 1 805 3 is_stmt 1 view .LVU658
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccSC4OZm.s 			page 52


 1527              		.syntax unified
 1528              	@ 805 "Core/Src/SEGGER_RTT.c" 1
 1529 0044 83F31188 		msr   basepri, r3  
 1530              		
 1531              	@ 0 "" 2
 1532              		.thumb
 1533              		.syntax unified
 1534              	.LBE92:
 1535              		.loc 1 805 22 view .LVU659
 806:Core/Src/SEGGER_RTT.c ****   //
 807:Core/Src/SEGGER_RTT.c ****   return NumBytesRead;
 1536              		.loc 1 807 3 view .LVU660
 808:Core/Src/SEGGER_RTT.c **** }
 1537              		.loc 1 808 1 is_stmt 0 view .LVU661
 1538 0048 1046     		mov	r0, r2
 1539 004a 03B0     		add	sp, sp, #12
 1540              		.cfi_remember_state
 1541              		.cfi_def_cfa_offset 36
 1542              		@ sp needed
 1543 004c BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 1544              	.LVL153:
 1545              	.L71:
 1546              		.cfi_restore_state
 1547              	.LBB93:
 1548              	.LBB91:
 1549              	.LBB90:
 713:Core/Src/SEGGER_RTT.c ****     pSrc = (pRing->pBuffer + RdOff) + SEGGER_RTT_UNCACHED_OFF;
 1550              		.loc 1 713 6 view .LVU662
 1551 0050 1746     		mov	r7, r2
 1552              	.LVL154:
 1553              	.L69:
 714:Core/Src/SEGGER_RTT.c **** #if SEGGER_RTT_MEMCPY_USE_BYTELOOP
 1554              		.loc 1 714 5 is_stmt 1 view .LVU663
 723:Core/Src/SEGGER_RTT.c ****     NumBytesRead += NumBytesRem;
 1555              		.loc 1 723 5 view .LVU664
 714:Core/Src/SEGGER_RTT.c **** #if SEGGER_RTT_MEMCPY_USE_BYTELOOP
 1556              		.loc 1 714 18 is_stmt 0 view .LVU665
 1557 0052 0BEB0501 		add	r1, fp, r5
 1558 0056 04EBC101 		add	r1, r4, r1, lsl #3
 723:Core/Src/SEGGER_RTT.c ****     NumBytesRead += NumBytesRem;
 1559              		.loc 1 723 5 view .LVU666
 1560 005a 5046     		mov	r0, r10
 714:Core/Src/SEGGER_RTT.c **** #if SEGGER_RTT_MEMCPY_USE_BYTELOOP
 1561              		.loc 1 714 10 view .LVU667
 1562 005c 496E     		ldr	r1, [r1, #100]
 1563 005e 0093     		str	r3, [sp]
 723:Core/Src/SEGGER_RTT.c ****     NumBytesRead += NumBytesRem;
 1564              		.loc 1 723 5 view .LVU668
 1565 0060 3144     		add	r1, r1, r6
 727:Core/Src/SEGGER_RTT.c **** #endif
 1566              		.loc 1 727 18 view .LVU669
 1567 0062 1644     		add	r6, r6, r2
 1568              	.LVL155:
 723:Core/Src/SEGGER_RTT.c ****     NumBytesRead += NumBytesRem;
 1569              		.loc 1 723 5 view .LVU670
 1570 0064 FFF7FEFF 		bl	memcpy
 1571              	.LVL156:
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccSC4OZm.s 			page 53


 724:Core/Src/SEGGER_RTT.c ****     pBuffer      += NumBytesRem;
 1572              		.loc 1 724 5 is_stmt 1 view .LVU671
 725:Core/Src/SEGGER_RTT.c ****     BufferSize   -= NumBytesRem;
 1573              		.loc 1 725 5 view .LVU672
 726:Core/Src/SEGGER_RTT.c ****     RdOff        += NumBytesRem;
 1574              		.loc 1 726 5 view .LVU673
 727:Core/Src/SEGGER_RTT.c **** #endif
 1575              		.loc 1 727 5 view .LVU674
 724:Core/Src/SEGGER_RTT.c ****     pBuffer      += NumBytesRem;
 1576              		.loc 1 724 18 is_stmt 0 view .LVU675
 1577 0068 009B     		ldr	r3, [sp]
 1578 006a 3A46     		mov	r2, r7
 1579              	.L67:
 1580              	.LVL157:
 730:Core/Src/SEGGER_RTT.c ****     pRing->RdOff = RdOff;
 1581              		.loc 1 730 3 is_stmt 1 view .LVU676
 730:Core/Src/SEGGER_RTT.c ****     pRing->RdOff = RdOff;
 1582              		.loc 1 730 6 is_stmt 0 view .LVU677
 1583 006c 002A     		cmp	r2, #0
 1584 006e E9D0     		beq	.L68
 731:Core/Src/SEGGER_RTT.c ****   }
 1585              		.loc 1 731 5 is_stmt 1 view .LVU678
 731:Core/Src/SEGGER_RTT.c ****   }
 1586              		.loc 1 731 18 is_stmt 0 view .LVU679
 1587 0070 AB44     		add	fp, fp, r5
 1588 0072 04EBCB0B 		add	fp, r4, fp, lsl #3
 1589 0076 CBF87060 		str	r6, [fp, #112]
 1590 007a E3E7     		b	.L68
 1591              	.LVL158:
 1592              	.L81:
 684:Core/Src/SEGGER_RTT.c ****     NumBytesRem = MIN(NumBytesRem, BufferSize);
 1593              		.loc 1 684 5 is_stmt 1 view .LVU680
 684:Core/Src/SEGGER_RTT.c ****     NumBytesRem = MIN(NumBytesRem, BufferSize);
 1594              		.loc 1 684 17 is_stmt 0 view .LVU681
 1595 007c BA6E     		ldr	r2, [r7, #104]
 686:Core/Src/SEGGER_RTT.c **** #if SEGGER_RTT_MEMCPY_USE_BYTELOOP
 1596              		.loc 1 686 10 view .LVU682
 1597 007e 796E     		ldr	r1, [r7, #100]
 1598 0080 0193     		str	r3, [sp, #4]
 684:Core/Src/SEGGER_RTT.c ****     NumBytesRem = MIN(NumBytesRem, BufferSize);
 1599              		.loc 1 684 17 view .LVU683
 1600 0082 921B     		subs	r2, r2, r6
 1601              	.LVL159:
 685:Core/Src/SEGGER_RTT.c ****     pSrc = (pRing->pBuffer + RdOff) + SEGGER_RTT_UNCACHED_OFF;
 1602              		.loc 1 685 5 is_stmt 1 view .LVU684
 685:Core/Src/SEGGER_RTT.c ****     pSrc = (pRing->pBuffer + RdOff) + SEGGER_RTT_UNCACHED_OFF;
 1603              		.loc 1 685 17 is_stmt 0 view .LVU685
 1604 0084 4245     		cmp	r2, r8
 1605 0086 28BF     		it	cs
 1606 0088 4246     		movcs	r2, r8
 1607              	.LVL160:
 686:Core/Src/SEGGER_RTT.c **** #if SEGGER_RTT_MEMCPY_USE_BYTELOOP
 1608              		.loc 1 686 5 is_stmt 1 view .LVU686
 695:Core/Src/SEGGER_RTT.c ****     NumBytesRead += NumBytesRem;
 1609              		.loc 1 695 5 view .LVU687
 1610 008a 3144     		add	r1, r1, r6
 1611 008c 5046     		mov	r0, r10
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccSC4OZm.s 			page 54


 699:Core/Src/SEGGER_RTT.c **** #endif
 1612              		.loc 1 699 18 is_stmt 0 view .LVU688
 1613 008e 1644     		add	r6, r6, r2
 1614              	.LVL161:
 695:Core/Src/SEGGER_RTT.c ****     NumBytesRead += NumBytesRem;
 1615              		.loc 1 695 5 view .LVU689
 1616 0090 0092     		str	r2, [sp]
 1617 0092 FFF7FEFF 		bl	memcpy
 1618              	.LVL162:
 696:Core/Src/SEGGER_RTT.c ****     pBuffer      += NumBytesRem;
 1619              		.loc 1 696 5 is_stmt 1 view .LVU690
 697:Core/Src/SEGGER_RTT.c ****     BufferSize   -= NumBytesRem;
 1620              		.loc 1 697 5 view .LVU691
 698:Core/Src/SEGGER_RTT.c ****     RdOff        += NumBytesRem;
 1621              		.loc 1 698 5 view .LVU692
 704:Core/Src/SEGGER_RTT.c ****       RdOff = 0u;
 1622              		.loc 1 704 8 is_stmt 0 view .LVU693
 1623 0096 B86E     		ldr	r0, [r7, #104]
 698:Core/Src/SEGGER_RTT.c ****     RdOff        += NumBytesRem;
 1624              		.loc 1 698 18 view .LVU694
 1625 0098 009A     		ldr	r2, [sp]
 704:Core/Src/SEGGER_RTT.c ****       RdOff = 0u;
 1626              		.loc 1 704 8 view .LVU695
 1627 009a 019B     		ldr	r3, [sp, #4]
 1628 009c 8642     		cmp	r6, r0
 698:Core/Src/SEGGER_RTT.c ****     RdOff        += NumBytesRem;
 1629              		.loc 1 698 18 view .LVU696
 1630 009e A8EB0201 		sub	r1, r8, r2
 1631              	.LVL163:
 699:Core/Src/SEGGER_RTT.c **** #endif
 1632              		.loc 1 699 5 is_stmt 1 view .LVU697
 704:Core/Src/SEGGER_RTT.c ****       RdOff = 0u;
 1633              		.loc 1 704 5 view .LVU698
 711:Core/Src/SEGGER_RTT.c ****   NumBytesRem = MIN(NumBytesRem, BufferSize);
 1634              		.loc 1 711 15 is_stmt 0 view .LVU699
 1635 00a2 14BF     		ite	ne
 1636 00a4 A9EB0609 		subne	r9, r9, r6
 1637              	.LVL164:
 705:Core/Src/SEGGER_RTT.c ****     }
 1638              		.loc 1 705 13 view .LVU700
 1639 00a8 0026     		moveq	r6, #0
 1640              	.LVL165:
 711:Core/Src/SEGGER_RTT.c ****   NumBytesRem = MIN(NumBytesRem, BufferSize);
 1641              		.loc 1 711 3 is_stmt 1 view .LVU701
 712:Core/Src/SEGGER_RTT.c ****   if (NumBytesRem > 0u) {
 1642              		.loc 1 712 3 view .LVU702
 712:Core/Src/SEGGER_RTT.c ****   if (NumBytesRem > 0u) {
 1643              		.loc 1 712 15 is_stmt 0 view .LVU703
 1644 00aa 4945     		cmp	r1, r9
 1645 00ac 28BF     		it	cs
 1646 00ae 4946     		movcs	r1, r9
 1647              	.LVL166:
 713:Core/Src/SEGGER_RTT.c ****     pSrc = (pRing->pBuffer + RdOff) + SEGGER_RTT_UNCACHED_OFF;
 1648              		.loc 1 713 3 is_stmt 1 view .LVU704
 713:Core/Src/SEGGER_RTT.c ****     pSrc = (pRing->pBuffer + RdOff) + SEGGER_RTT_UNCACHED_OFF;
 1649              		.loc 1 713 6 is_stmt 0 view .LVU705
 1650 00b0 0029     		cmp	r1, #0
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccSC4OZm.s 			page 55


 1651 00b2 DBD0     		beq	.L67
 1652              	.LVL167:
 697:Core/Src/SEGGER_RTT.c ****     BufferSize   -= NumBytesRem;
 1653              		.loc 1 697 18 view .LVU706
 1654 00b4 9244     		add	r10, r10, r2
 1655              	.LVL168:
 724:Core/Src/SEGGER_RTT.c ****     pBuffer      += NumBytesRem;
 1656              		.loc 1 724 18 view .LVU707
 1657 00b6 5718     		adds	r7, r2, r1
 1658 00b8 0A46     		mov	r2, r1
 1659 00ba CAE7     		b	.L69
 1660              	.LVL169:
 1661              	.L80:
 724:Core/Src/SEGGER_RTT.c ****     pBuffer      += NumBytesRem;
 1662              		.loc 1 724 18 view .LVU708
 1663 00bc 02F0FF06 		and	r6, r2, #255
 1664              	.LBB89:
 1665              	.LBB85:
 1666              	.LBB86:
 322:Core/Src/SEGGER_RTT.c ****   p->MaxNumUpBuffers    = SEGGER_RTT_MAX_NUM_UP_BUFFERS;
 1667              		.loc 1 322 3 view .LVU709
 1668 00c0 3146     		mov	r1, r6
 1669 00c2 7822     		movs	r2, #120
 1670 00c4 04F13000 		add	r0, r4, #48
 1671              	.LVL170:
 322:Core/Src/SEGGER_RTT.c ****   p->MaxNumUpBuffers    = SEGGER_RTT_MAX_NUM_UP_BUFFERS;
 1672              		.loc 1 322 3 view .LVU710
 1673 00c8 0093     		str	r3, [sp]
 1674              	.LBE86:
 1675              	.LBE85:
 674:Core/Src/SEGGER_RTT.c ****   pRing = (SEGGER_RTT_BUFFER_DOWN*)((char*)&_SEGGER_RTT.aDown[BufferIndex] + SEGGER_RTT_UNCACHED_OF
 1676              		.loc 1 674 3 is_stmt 1 view .LVU711
 1677              	.LBB88:
 1678              	.LBI85:
 314:Core/Src/SEGGER_RTT.c ****   volatile SEGGER_RTT_CB* p;   // Volatile to make sure that compiler cannot change the order of ac
 1679              		.loc 1 314 13 view .LVU712
 1680              	.LBB87:
 315:Core/Src/SEGGER_RTT.c ****   static const char _aInitStr[] = "\0\0\0\0\0\0TTR REGGES";  // Init complete ID string to make sur
 1681              		.loc 1 315 3 view .LVU713
 316:Core/Src/SEGGER_RTT.c ****   unsigned i;
 1682              		.loc 1 316 3 view .LVU714
 317:Core/Src/SEGGER_RTT.c ****   //
 1683              		.loc 1 317 3 view .LVU715
 321:Core/Src/SEGGER_RTT.c ****   memset((SEGGER_RTT_CB*)p, 0, sizeof(_SEGGER_RTT));         // Make sure that the RTT CB is always
 1684              		.loc 1 321 3 view .LVU716
 1685              	.LVL171:
 322:Core/Src/SEGGER_RTT.c ****   p->MaxNumUpBuffers    = SEGGER_RTT_MAX_NUM_UP_BUFFERS;
 1686              		.loc 1 322 3 view .LVU717
 1687 00ca FFF7FEFF 		bl	memset
 1688              	.LVL172:
 323:Core/Src/SEGGER_RTT.c ****   p->MaxNumDownBuffers  = SEGGER_RTT_MAX_NUM_DOWN_BUFFERS;
 1689              		.loc 1 323 3 view .LVU718
 323:Core/Src/SEGGER_RTT.c ****   p->MaxNumDownBuffers  = SEGGER_RTT_MAX_NUM_DOWN_BUFFERS;
 1690              		.loc 1 323 25 is_stmt 0 view .LVU719
 1691 00ce 0321     		movs	r1, #3
 1692 00d0 2161     		str	r1, [r4, #16]
 324:Core/Src/SEGGER_RTT.c ****   //
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccSC4OZm.s 			page 56


 1693              		.loc 1 324 3 is_stmt 1 view .LVU720
 328:Core/Src/SEGGER_RTT.c ****   p->aUp[0].pBuffer       = _acUpBuffer;
 1694              		.loc 1 328 27 is_stmt 0 view .LVU721
 1695 00d2 194A     		ldr	r2, .L82+4
 324:Core/Src/SEGGER_RTT.c ****   //
 1696              		.loc 1 324 25 view .LVU722
 1697 00d4 6161     		str	r1, [r4, #20]
 328:Core/Src/SEGGER_RTT.c ****   p->aUp[0].pBuffer       = _acUpBuffer;
 1698              		.loc 1 328 3 is_stmt 1 view .LVU723
 330:Core/Src/SEGGER_RTT.c ****   p->aUp[0].RdOff         = 0u;
 1699              		.loc 1 330 27 is_stmt 0 view .LVU724
 1700 00d6 4FF48060 		mov	r0, #1024
 329:Core/Src/SEGGER_RTT.c ****   p->aUp[0].SizeOfBuffer  = BUFFER_SIZE_UP;
 1701              		.loc 1 329 27 view .LVU725
 1702 00da 1849     		ldr	r1, .L82+8
 328:Core/Src/SEGGER_RTT.c ****   p->aUp[0].pBuffer       = _acUpBuffer;
 1703              		.loc 1 328 27 view .LVU726
 1704 00dc A261     		str	r2, [r4, #24]
 329:Core/Src/SEGGER_RTT.c ****   p->aUp[0].SizeOfBuffer  = BUFFER_SIZE_UP;
 1705              		.loc 1 329 3 is_stmt 1 view .LVU727
 329:Core/Src/SEGGER_RTT.c ****   p->aUp[0].SizeOfBuffer  = BUFFER_SIZE_UP;
 1706              		.loc 1 329 27 is_stmt 0 view .LVU728
 1707 00de E161     		str	r1, [r4, #28]
 330:Core/Src/SEGGER_RTT.c ****   p->aUp[0].RdOff         = 0u;
 1708              		.loc 1 330 3 is_stmt 1 view .LVU729
 330:Core/Src/SEGGER_RTT.c ****   p->aUp[0].RdOff         = 0u;
 1709              		.loc 1 330 27 is_stmt 0 view .LVU730
 1710 00e0 2062     		str	r0, [r4, #32]
 331:Core/Src/SEGGER_RTT.c ****   p->aUp[0].WrOff         = 0u;
 1711              		.loc 1 331 3 is_stmt 1 view .LVU731
 338:Core/Src/SEGGER_RTT.c ****   p->aDown[0].SizeOfBuffer  = BUFFER_SIZE_DOWN;
 1712              		.loc 1 338 29 is_stmt 0 view .LVU732
 1713 00e2 1749     		ldr	r1, .L82+12
 331:Core/Src/SEGGER_RTT.c ****   p->aUp[0].WrOff         = 0u;
 1714              		.loc 1 331 27 view .LVU733
 1715 00e4 A662     		str	r6, [r4, #40]
 332:Core/Src/SEGGER_RTT.c ****   p->aUp[0].Flags         = SEGGER_RTT_MODE_DEFAULT;
 1716              		.loc 1 332 3 is_stmt 1 view .LVU734
 332:Core/Src/SEGGER_RTT.c ****   p->aUp[0].Flags         = SEGGER_RTT_MODE_DEFAULT;
 1717              		.loc 1 332 27 is_stmt 0 view .LVU735
 1718 00e6 6662     		str	r6, [r4, #36]
 333:Core/Src/SEGGER_RTT.c ****   //
 1719              		.loc 1 333 3 is_stmt 1 view .LVU736
 333:Core/Src/SEGGER_RTT.c ****   //
 1720              		.loc 1 333 27 is_stmt 0 view .LVU737
 1721 00e8 E662     		str	r6, [r4, #44]
 337:Core/Src/SEGGER_RTT.c ****   p->aDown[0].pBuffer       = _acDownBuffer;
 1722              		.loc 1 337 3 is_stmt 1 view .LVU738
 337:Core/Src/SEGGER_RTT.c ****   p->aDown[0].pBuffer       = _acDownBuffer;
 1723              		.loc 1 337 29 is_stmt 0 view .LVU739
 1724 00ea 2266     		str	r2, [r4, #96]
 338:Core/Src/SEGGER_RTT.c ****   p->aDown[0].SizeOfBuffer  = BUFFER_SIZE_DOWN;
 1725              		.loc 1 338 3 is_stmt 1 view .LVU740
 339:Core/Src/SEGGER_RTT.c ****   p->aDown[0].RdOff         = 0u;
 1726              		.loc 1 339 29 is_stmt 0 view .LVU741
 1727 00ec 1022     		movs	r2, #16
 338:Core/Src/SEGGER_RTT.c ****   p->aDown[0].SizeOfBuffer  = BUFFER_SIZE_DOWN;
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccSC4OZm.s 			page 57


 1728              		.loc 1 338 29 view .LVU742
 1729 00ee 6166     		str	r1, [r4, #100]
 339:Core/Src/SEGGER_RTT.c ****   p->aDown[0].RdOff         = 0u;
 1730              		.loc 1 339 3 is_stmt 1 view .LVU743
 339:Core/Src/SEGGER_RTT.c ****   p->aDown[0].RdOff         = 0u;
 1731              		.loc 1 339 29 is_stmt 0 view .LVU744
 1732 00f0 A266     		str	r2, [r4, #104]
 340:Core/Src/SEGGER_RTT.c ****   p->aDown[0].WrOff         = 0u;
 1733              		.loc 1 340 3 is_stmt 1 view .LVU745
 340:Core/Src/SEGGER_RTT.c ****   p->aDown[0].WrOff         = 0u;
 1734              		.loc 1 340 29 is_stmt 0 view .LVU746
 1735 00f2 2667     		str	r6, [r4, #112]
 341:Core/Src/SEGGER_RTT.c ****   p->aDown[0].Flags         = SEGGER_RTT_MODE_DEFAULT;
 1736              		.loc 1 341 3 is_stmt 1 view .LVU747
 341:Core/Src/SEGGER_RTT.c ****   p->aDown[0].Flags         = SEGGER_RTT_MODE_DEFAULT;
 1737              		.loc 1 341 29 is_stmt 0 view .LVU748
 1738 00f4 E666     		str	r6, [r4, #108]
 342:Core/Src/SEGGER_RTT.c ****   //
 1739              		.loc 1 342 3 is_stmt 1 view .LVU749
 342:Core/Src/SEGGER_RTT.c ****   //
 1740              		.loc 1 342 29 is_stmt 0 view .LVU750
 1741 00f6 6667     		str	r6, [r4, #116]
 348:Core/Src/SEGGER_RTT.c ****   for (i = 0; i < sizeof(_aInitStr) - 1; ++i) {
 1742              		.loc 1 348 3 is_stmt 1 view .LVU751
 1743              		.syntax unified
 1744              	@ 348 "Core/Src/SEGGER_RTT.c" 1
 1745 00f8 BFF35F8F 		dmb
 1746              	
 1747              	@ 0 "" 2
 348:Core/Src/SEGGER_RTT.c ****   for (i = 0; i < sizeof(_aInitStr) - 1; ++i) {
 1748              		.loc 1 348 13 view .LVU752
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 1749              		.loc 1 349 3 view .LVU753
 1750              	.LVL173:
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 1751              		.loc 1 349 17 view .LVU754
 350:Core/Src/SEGGER_RTT.c ****   }
 1752              		.loc 1 350 5 view .LVU755
 350:Core/Src/SEGGER_RTT.c ****   }
 1753              		.loc 1 350 16 is_stmt 0 view .LVU756
 1754              		.thumb
 1755              		.syntax unified
 1756 00fc 4520     		movs	r0, #69
 1757 00fe 4727     		movs	r7, #71
 1758 0100 4FF0530C 		mov	ip, #83
 1759 0104 84F800C0 		strb	ip, [r4]
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 1760              		.loc 1 349 42 is_stmt 1 view .LVU757
 1761              	.LVL174:
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 1762              		.loc 1 349 17 view .LVU758
 350:Core/Src/SEGGER_RTT.c ****   }
 1763              		.loc 1 350 5 view .LVU759
 350:Core/Src/SEGGER_RTT.c ****   }
 1764              		.loc 1 350 16 is_stmt 0 view .LVU760
 1765 0108 5221     		movs	r1, #82
 1766 010a 6070     		strb	r0, [r4, #1]
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccSC4OZm.s 			page 58


 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 1767              		.loc 1 349 42 is_stmt 1 view .LVU761
 1768              	.LVL175:
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 1769              		.loc 1 349 17 view .LVU762
 350:Core/Src/SEGGER_RTT.c ****   }
 1770              		.loc 1 350 5 view .LVU763
 350:Core/Src/SEGGER_RTT.c ****   }
 1771              		.loc 1 350 16 is_stmt 0 view .LVU764
 1772 010c 5422     		movs	r2, #84
 1773 010e A770     		strb	r7, [r4, #2]
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 1774              		.loc 1 349 42 is_stmt 1 view .LVU765
 1775              	.LVL176:
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 1776              		.loc 1 349 17 view .LVU766
 350:Core/Src/SEGGER_RTT.c ****   }
 1777              		.loc 1 350 5 view .LVU767
 350:Core/Src/SEGGER_RTT.c ****   }
 1778              		.loc 1 350 16 is_stmt 0 view .LVU768
 1779 0110 E770     		strb	r7, [r4, #3]
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 1780              		.loc 1 349 42 is_stmt 1 view .LVU769
 1781              	.LVL177:
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 1782              		.loc 1 349 17 view .LVU770
 350:Core/Src/SEGGER_RTT.c ****   }
 1783              		.loc 1 350 5 view .LVU771
 350:Core/Src/SEGGER_RTT.c ****   }
 1784              		.loc 1 350 16 is_stmt 0 view .LVU772
 1785 0112 2071     		strb	r0, [r4, #4]
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 1786              		.loc 1 349 42 is_stmt 1 view .LVU773
 1787              	.LVL178:
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 1788              		.loc 1 349 17 view .LVU774
 350:Core/Src/SEGGER_RTT.c ****   }
 1789              		.loc 1 350 5 view .LVU775
 350:Core/Src/SEGGER_RTT.c ****   }
 1790              		.loc 1 350 16 is_stmt 0 view .LVU776
 1791 0114 2020     		movs	r0, #32
 1792 0116 6171     		strb	r1, [r4, #5]
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 1793              		.loc 1 349 42 is_stmt 1 view .LVU777
 1794              	.LVL179:
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 1795              		.loc 1 349 17 view .LVU778
 350:Core/Src/SEGGER_RTT.c ****   }
 1796              		.loc 1 350 5 view .LVU779
 350:Core/Src/SEGGER_RTT.c ****   }
 1797              		.loc 1 350 16 is_stmt 0 view .LVU780
 1798 0118 A071     		strb	r0, [r4, #6]
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 1799              		.loc 1 349 42 is_stmt 1 view .LVU781
 1800              	.LVL180:
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 1801              		.loc 1 349 17 view .LVU782
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccSC4OZm.s 			page 59


 350:Core/Src/SEGGER_RTT.c ****   }
 1802              		.loc 1 350 5 view .LVU783
 350:Core/Src/SEGGER_RTT.c ****   }
 1803              		.loc 1 350 16 is_stmt 0 view .LVU784
 1804 011a E171     		strb	r1, [r4, #7]
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 1805              		.loc 1 349 42 is_stmt 1 view .LVU785
 1806              	.LVL181:
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 1807              		.loc 1 349 17 view .LVU786
 350:Core/Src/SEGGER_RTT.c ****   }
 1808              		.loc 1 350 5 view .LVU787
 350:Core/Src/SEGGER_RTT.c ****   }
 1809              		.loc 1 350 16 is_stmt 0 view .LVU788
 1810 011c 2272     		strb	r2, [r4, #8]
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 1811              		.loc 1 349 42 is_stmt 1 view .LVU789
 1812              	.LVL182:
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 1813              		.loc 1 349 17 view .LVU790
 350:Core/Src/SEGGER_RTT.c ****   }
 1814              		.loc 1 350 5 view .LVU791
 350:Core/Src/SEGGER_RTT.c ****   }
 1815              		.loc 1 350 16 is_stmt 0 view .LVU792
 1816 011e 6272     		strb	r2, [r4, #9]
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 1817              		.loc 1 349 42 is_stmt 1 view .LVU793
 1818              	.LVL183:
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 1819              		.loc 1 349 17 view .LVU794
 350:Core/Src/SEGGER_RTT.c ****   }
 1820              		.loc 1 350 5 view .LVU795
 350:Core/Src/SEGGER_RTT.c ****   }
 1821              		.loc 1 350 16 is_stmt 0 view .LVU796
 1822 0120 A672     		strb	r6, [r4, #10]
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 1823              		.loc 1 349 42 is_stmt 1 view .LVU797
 1824              	.LVL184:
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 1825              		.loc 1 349 17 view .LVU798
 350:Core/Src/SEGGER_RTT.c ****   }
 1826              		.loc 1 350 5 view .LVU799
 350:Core/Src/SEGGER_RTT.c ****   }
 1827              		.loc 1 350 16 is_stmt 0 view .LVU800
 1828 0122 E672     		strb	r6, [r4, #11]
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 1829              		.loc 1 349 42 is_stmt 1 view .LVU801
 1830              	.LVL185:
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 1831              		.loc 1 349 17 view .LVU802
 350:Core/Src/SEGGER_RTT.c ****   }
 1832              		.loc 1 350 5 view .LVU803
 350:Core/Src/SEGGER_RTT.c ****   }
 1833              		.loc 1 350 16 is_stmt 0 view .LVU804
 1834 0124 2673     		strb	r6, [r4, #12]
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 1835              		.loc 1 349 42 is_stmt 1 view .LVU805
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccSC4OZm.s 			page 60


 1836              	.LVL186:
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 1837              		.loc 1 349 17 view .LVU806
 350:Core/Src/SEGGER_RTT.c ****   }
 1838              		.loc 1 350 5 view .LVU807
 350:Core/Src/SEGGER_RTT.c ****   }
 1839              		.loc 1 350 16 is_stmt 0 view .LVU808
 1840 0126 6673     		strb	r6, [r4, #13]
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 1841              		.loc 1 349 42 is_stmt 1 view .LVU809
 1842              	.LVL187:
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 1843              		.loc 1 349 17 view .LVU810
 350:Core/Src/SEGGER_RTT.c ****   }
 1844              		.loc 1 350 5 view .LVU811
 350:Core/Src/SEGGER_RTT.c ****   }
 1845              		.loc 1 350 16 is_stmt 0 view .LVU812
 1846 0128 A673     		strb	r6, [r4, #14]
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 1847              		.loc 1 349 42 is_stmt 1 view .LVU813
 1848              	.LVL188:
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 1849              		.loc 1 349 17 view .LVU814
 350:Core/Src/SEGGER_RTT.c ****   }
 1850              		.loc 1 350 5 view .LVU815
 350:Core/Src/SEGGER_RTT.c ****   }
 1851              		.loc 1 350 16 is_stmt 0 view .LVU816
 1852 012a E673     		strb	r6, [r4, #15]
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 1853              		.loc 1 349 42 is_stmt 1 view .LVU817
 1854              	.LVL189:
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 1855              		.loc 1 349 17 view .LVU818
 352:Core/Src/SEGGER_RTT.c **** }
 1856              		.loc 1 352 3 view .LVU819
 1857              		.syntax unified
 1858              	@ 352 "Core/Src/SEGGER_RTT.c" 1
 1859 012c BFF35F8F 		dmb
 1860              	
 1861              	@ 0 "" 2
 1862              		.thumb
 1863              		.syntax unified
 1864 0130 009B     		ldr	r3, [sp]
 352:Core/Src/SEGGER_RTT.c **** }
 1865              		.loc 1 352 13 view .LVU820
 353:Core/Src/SEGGER_RTT.c **** 
 1866              		.loc 1 353 1 is_stmt 0 view .LVU821
 1867 0132 75E7     		b	.L64
 1868              	.L83:
 1869              		.align	2
 1870              	.L82:
 1871 0134 00000000 		.word	.LANCHOR0
 1872 0138 00000000 		.word	.LC0
 1873 013c 00000000 		.word	.LANCHOR1
 1874 0140 00000000 		.word	.LANCHOR2
 1875              	.LBE87:
 1876              	.LBE88:
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccSC4OZm.s 			page 61


 1877              	.LBE89:
 1878              	.LBE90:
 1879              	.LBE91:
 1880              	.LBE93:
 1881              		.cfi_endproc
 1882              	.LFE8:
 1884              		.section	.text.SEGGER_RTT_WriteWithOverwriteNoLock,"ax",%progbits
 1885              		.align	1
 1886              		.p2align 2,,3
 1887              		.global	SEGGER_RTT_WriteWithOverwriteNoLock
 1888              		.syntax unified
 1889              		.thumb
 1890              		.thumb_func
 1892              	SEGGER_RTT_WriteWithOverwriteNoLock:
 1893              	.LVL190:
 1894              	.LFB9:
 809:Core/Src/SEGGER_RTT.c **** 
 810:Core/Src/SEGGER_RTT.c **** /*********************************************************************
 811:Core/Src/SEGGER_RTT.c **** *
 812:Core/Src/SEGGER_RTT.c **** *       SEGGER_RTT_WriteWithOverwriteNoLock
 813:Core/Src/SEGGER_RTT.c **** *
 814:Core/Src/SEGGER_RTT.c **** *  Function description
 815:Core/Src/SEGGER_RTT.c **** *    Stores a specified number of characters in SEGGER RTT
 816:Core/Src/SEGGER_RTT.c **** *    control block.
 817:Core/Src/SEGGER_RTT.c **** *    SEGGER_RTT_WriteWithOverwriteNoLock does not lock the application 
 818:Core/Src/SEGGER_RTT.c **** *    and overwrites data if the data does not fit into the buffer.
 819:Core/Src/SEGGER_RTT.c **** *
 820:Core/Src/SEGGER_RTT.c **** *  Parameters
 821:Core/Src/SEGGER_RTT.c **** *    BufferIndex  Index of "Up"-buffer to be used (e.g. 0 for "Terminal").
 822:Core/Src/SEGGER_RTT.c **** *    pBuffer      Pointer to character array. Does not need to point to a \0 terminated string.
 823:Core/Src/SEGGER_RTT.c **** *    NumBytes     Number of bytes to be stored in the SEGGER RTT control block.
 824:Core/Src/SEGGER_RTT.c **** *
 825:Core/Src/SEGGER_RTT.c **** *  Notes
 826:Core/Src/SEGGER_RTT.c **** *    (1) If there is not enough space in the "Up"-buffer, data is overwritten.
 827:Core/Src/SEGGER_RTT.c **** *    (2) For performance reasons this function does not call Init()
 828:Core/Src/SEGGER_RTT.c **** *        and may only be called after RTT has been initialized.
 829:Core/Src/SEGGER_RTT.c **** *        Either by calling SEGGER_RTT_Init() or calling another RTT API function first.
 830:Core/Src/SEGGER_RTT.c **** *    (3) Do not use SEGGER_RTT_WriteWithOverwriteNoLock if a J-Link 
 831:Core/Src/SEGGER_RTT.c **** *        connection reads RTT data.
 832:Core/Src/SEGGER_RTT.c **** */
 833:Core/Src/SEGGER_RTT.c **** void SEGGER_RTT_WriteWithOverwriteNoLock(unsigned BufferIndex, const void* pBuffer, unsigned NumByt
 1895              		.loc 1 833 104 is_stmt 1 view -0
 1896              		.cfi_startproc
 1897              		@ args = 0, pretend = 0, frame = 0
 1898              		@ frame_needed = 0, uses_anonymous_args = 0
 834:Core/Src/SEGGER_RTT.c ****   const char*           pData;
 1899              		.loc 1 834 3 view .LVU823
 835:Core/Src/SEGGER_RTT.c ****   SEGGER_RTT_BUFFER_UP* pRing;
 1900              		.loc 1 835 3 view .LVU824
 836:Core/Src/SEGGER_RTT.c ****   unsigned              Avail;
 1901              		.loc 1 836 3 view .LVU825
 837:Core/Src/SEGGER_RTT.c ****   volatile char*        pDst;
 1902              		.loc 1 837 3 view .LVU826
 838:Core/Src/SEGGER_RTT.c ****   //
 839:Core/Src/SEGGER_RTT.c ****   // Get "to-host" ring buffer and copy some elements into local variables.
 840:Core/Src/SEGGER_RTT.c ****   //
 841:Core/Src/SEGGER_RTT.c ****   pData = (const char *)pBuffer;
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccSC4OZm.s 			page 62


 1903              		.loc 1 841 3 view .LVU827
 833:Core/Src/SEGGER_RTT.c ****   const char*           pData;
 1904              		.loc 1 833 104 is_stmt 0 view .LVU828
 1905 0000 2DE9F84F 		push	{r3, r4, r5, r6, r7, r8, r9, r10, fp, lr}
 1906              		.cfi_def_cfa_offset 40
 1907              		.cfi_offset 3, -40
 1908              		.cfi_offset 4, -36
 1909              		.cfi_offset 5, -32
 1910              		.cfi_offset 6, -28
 1911              		.cfi_offset 7, -24
 1912              		.cfi_offset 8, -20
 1913              		.cfi_offset 9, -16
 1914              		.cfi_offset 10, -12
 1915              		.cfi_offset 11, -8
 1916              		.cfi_offset 14, -4
 842:Core/Src/SEGGER_RTT.c ****   pRing = (SEGGER_RTT_BUFFER_UP*)((char*)&_SEGGER_RTT.aUp[BufferIndex] + SEGGER_RTT_UNCACHED_OFF); 
 843:Core/Src/SEGGER_RTT.c ****   //
 844:Core/Src/SEGGER_RTT.c ****   // Check if we will overwrite data and need to adjust the RdOff.
 845:Core/Src/SEGGER_RTT.c ****   //
 846:Core/Src/SEGGER_RTT.c ****   if (pRing->WrOff == pRing->RdOff) {
 1917              		.loc 1 846 12 view .LVU829
 1918 0004 DFF8D0B0 		ldr	fp, .L97
 1919 0008 00EB4003 		add	r3, r0, r0, lsl #1
 1920 000c 0BEBC303 		add	r3, fp, r3, lsl #3
 833:Core/Src/SEGGER_RTT.c ****   const char*           pData;
 1921              		.loc 1 833 104 view .LVU830
 1922 0010 0746     		mov	r7, r0
 1923 0012 1546     		mov	r5, r2
 1924              		.loc 1 846 12 view .LVU831
 1925 0014 4FEA4008 		lsl	r8, r0, #1
 1926              		.loc 1 846 28 view .LVU832
 1927 0018 9A6A     		ldr	r2, [r3, #40]
 1928              	.LVL191:
 1929              		.loc 1 846 12 view .LVU833
 1930 001a 586A     		ldr	r0, [r3, #36]
 1931              	.LVL192:
 1932              		.loc 1 846 6 view .LVU834
 1933 001c 9042     		cmp	r0, r2
 833:Core/Src/SEGGER_RTT.c ****   const char*           pData;
 1934              		.loc 1 833 104 view .LVU835
 1935 001e 0E46     		mov	r6, r1
 1936              	.LVL193:
 842:Core/Src/SEGGER_RTT.c ****   pRing = (SEGGER_RTT_BUFFER_UP*)((char*)&_SEGGER_RTT.aUp[BufferIndex] + SEGGER_RTT_UNCACHED_OFF); 
 1937              		.loc 1 842 3 is_stmt 1 view .LVU836
 1938              		.loc 1 846 3 view .LVU837
 1939              		.loc 1 846 6 is_stmt 0 view .LVU838
 1940 0020 56D0     		beq	.L96
 847:Core/Src/SEGGER_RTT.c ****     Avail = pRing->SizeOfBuffer - 1u;
 848:Core/Src/SEGGER_RTT.c ****   } else if ( pRing->WrOff < pRing->RdOff) {
 1941              		.loc 1 848 10 is_stmt 1 view .LVU839
 1942              		.loc 1 848 35 is_stmt 0 view .LVU840
 1943 0022 9A6A     		ldr	r2, [r3, #40]
 1944              		.loc 1 848 13 view .LVU841
 1945 0024 9042     		cmp	r0, r2
 849:Core/Src/SEGGER_RTT.c ****     Avail = pRing->RdOff - pRing->WrOff - 1u;
 1946              		.loc 1 849 5 is_stmt 1 view .LVU842
 850:Core/Src/SEGGER_RTT.c ****   } else {
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccSC4OZm.s 			page 63


 851:Core/Src/SEGGER_RTT.c ****     Avail = pRing->RdOff - pRing->WrOff - 1u + pRing->SizeOfBuffer;
 1947              		.loc 1 851 18 is_stmt 0 view .LVU843
 1948 0026 25BF     		ittet	cs
 1949 0028 9A6A     		ldrcs	r2, [r3, #40]
 1950              		.loc 1 851 11 view .LVU844
 1951 002a 1B6A     		ldrcs	r3, [r3, #32]
 849:Core/Src/SEGGER_RTT.c ****     Avail = pRing->RdOff - pRing->WrOff - 1u;
 1952              		.loc 1 849 18 view .LVU845
 1953 002c 9B6A     		ldrcc	r3, [r3, #40]
 1954              		.loc 1 851 5 is_stmt 1 view .LVU846
 1955              		.loc 1 851 11 is_stmt 0 view .LVU847
 1956 002e 9B18     		addcs	r3, r3, r2
 1957 0030 013B     		subs	r3, r3, #1
 1958 0032 1B1A     		subs	r3, r3, r0
 1959              	.LVL194:
 1960              	.L86:
 852:Core/Src/SEGGER_RTT.c ****   }
 853:Core/Src/SEGGER_RTT.c ****   if (NumBytes > Avail) {
 1961              		.loc 1 853 3 is_stmt 1 view .LVU848
 1962              		.loc 1 853 6 is_stmt 0 view .LVU849
 1963 0034 AB42     		cmp	r3, r5
 1964 0036 11D2     		bcs	.L88
 854:Core/Src/SEGGER_RTT.c ****     pRing->RdOff += (NumBytes - Avail);
 1965              		.loc 1 854 5 is_stmt 1 view .LVU850
 1966              		.loc 1 854 18 is_stmt 0 view .LVU851
 1967 0038 08EB0702 		add	r2, r8, r7
 1968 003c 0BEBC202 		add	r2, fp, r2, lsl #3
 1969 0040 916A     		ldr	r1, [r2, #40]
 1970              	.LVL195:
 1971              		.loc 1 854 18 view .LVU852
 1972 0042 2944     		add	r1, r1, r5
 1973 0044 CB1A     		subs	r3, r1, r3
 1974              	.LVL196:
 1975              		.loc 1 854 18 view .LVU853
 1976 0046 9362     		str	r3, [r2, #40]
 855:Core/Src/SEGGER_RTT.c ****     while (pRing->RdOff >= pRing->SizeOfBuffer) {
 1977              		.loc 1 855 5 is_stmt 1 view .LVU854
 1978              		.loc 1 855 25 view .LVU855
 1979              		.loc 1 855 17 is_stmt 0 view .LVU856
 1980 0048 936A     		ldr	r3, [r2, #40]
 1981              		.loc 1 855 33 view .LVU857
 1982 004a 116A     		ldr	r1, [r2, #32]
 1983              		.loc 1 855 25 view .LVU858
 1984 004c 8B42     		cmp	r3, r1
 1985 004e 05D3     		bcc	.L88
 1986              	.L89:
 856:Core/Src/SEGGER_RTT.c ****       pRing->RdOff -= pRing->SizeOfBuffer;
 1987              		.loc 1 856 7 is_stmt 1 view .LVU859
 1988              		.loc 1 856 20 is_stmt 0 view .LVU860
 1989 0050 936A     		ldr	r3, [r2, #40]
 1990 0052 5B1A     		subs	r3, r3, r1
 1991 0054 9362     		str	r3, [r2, #40]
 855:Core/Src/SEGGER_RTT.c ****     while (pRing->RdOff >= pRing->SizeOfBuffer) {
 1992              		.loc 1 855 25 is_stmt 1 view .LVU861
 855:Core/Src/SEGGER_RTT.c ****     while (pRing->RdOff >= pRing->SizeOfBuffer) {
 1993              		.loc 1 855 17 is_stmt 0 view .LVU862
 1994 0056 936A     		ldr	r3, [r2, #40]
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccSC4OZm.s 			page 64


 855:Core/Src/SEGGER_RTT.c ****     while (pRing->RdOff >= pRing->SizeOfBuffer) {
 1995              		.loc 1 855 25 view .LVU863
 1996 0058 8B42     		cmp	r3, r1
 1997 005a F9D2     		bcs	.L89
 1998              	.L88:
 857:Core/Src/SEGGER_RTT.c ****     }
 858:Core/Src/SEGGER_RTT.c ****   }
 859:Core/Src/SEGGER_RTT.c ****   //
 860:Core/Src/SEGGER_RTT.c ****   // Write all data, no need to check the RdOff, but possibly handle multiple wrap-arounds
 861:Core/Src/SEGGER_RTT.c ****   //
 862:Core/Src/SEGGER_RTT.c ****   Avail = pRing->SizeOfBuffer - pRing->WrOff;
 1999              		.loc 1 862 3 is_stmt 1 view .LVU864
 2000              		.loc 1 862 16 is_stmt 0 view .LVU865
 2001 005c 08EB0703 		add	r3, r8, r7
 2002 0060 0BEBC303 		add	r3, fp, r3, lsl #3
 2003 0064 07F1010A 		add	r10, r7, #1
 2004              		.loc 1 862 9 view .LVU866
 2005 0068 1C6A     		ldr	r4, [r3, #32]
 863:Core/Src/SEGGER_RTT.c ****   do {
 864:Core/Src/SEGGER_RTT.c ****     if (Avail > NumBytes) {
 865:Core/Src/SEGGER_RTT.c ****       //
 866:Core/Src/SEGGER_RTT.c ****       // Last round
 867:Core/Src/SEGGER_RTT.c ****       //
 868:Core/Src/SEGGER_RTT.c ****       pDst = (pRing->pBuffer + pRing->WrOff) + SEGGER_RTT_UNCACHED_OFF;
 869:Core/Src/SEGGER_RTT.c **** #if SEGGER_RTT_MEMCPY_USE_BYTELOOP
 870:Core/Src/SEGGER_RTT.c ****       Avail = NumBytes;
 871:Core/Src/SEGGER_RTT.c ****       while (NumBytes--) {
 872:Core/Src/SEGGER_RTT.c ****         *pDst++ = *pData++;
 873:Core/Src/SEGGER_RTT.c ****       };
 874:Core/Src/SEGGER_RTT.c ****       RTT__DMB();                     // Force data write to be complete before writing the <WrOff>
 875:Core/Src/SEGGER_RTT.c ****       pRing->WrOff += Avail;
 876:Core/Src/SEGGER_RTT.c **** #else
 877:Core/Src/SEGGER_RTT.c ****       SEGGER_RTT_MEMCPY((void*)pDst, pData, NumBytes);
 878:Core/Src/SEGGER_RTT.c ****       RTT__DMB();                     // Force data write to be complete before writing the <WrOff>
 879:Core/Src/SEGGER_RTT.c ****       pRing->WrOff += NumBytes;
 880:Core/Src/SEGGER_RTT.c **** #endif
 881:Core/Src/SEGGER_RTT.c ****       break;
 882:Core/Src/SEGGER_RTT.c ****     } else {
 883:Core/Src/SEGGER_RTT.c ****       //
 884:Core/Src/SEGGER_RTT.c ****       //  Wrap-around necessary, write until wrap-around and reset WrOff
 885:Core/Src/SEGGER_RTT.c ****       //
 886:Core/Src/SEGGER_RTT.c ****       pDst = (pRing->pBuffer + pRing->WrOff) + SEGGER_RTT_UNCACHED_OFF;
 2006              		.loc 1 886 20 view .LVU867
 2007 006a 0AEB4A09 		add	r9, r10, r10, lsl #1
 862:Core/Src/SEGGER_RTT.c ****   do {
 2008              		.loc 1 862 9 view .LVU868
 2009 006e 241A     		subs	r4, r4, r0
 2010              	.LVL197:
 2011              		.loc 1 886 20 view .LVU869
 2012 0070 4FEAC909 		lsl	r9, r9, #3
 2013 0074 10E0     		b	.L92
 2014              	.LVL198:
 2015              	.L90:
 2016              		.loc 1 886 12 view .LVU870
 2017 0076 5B68     		ldr	r3, [r3, #4]
 887:Core/Src/SEGGER_RTT.c **** #if SEGGER_RTT_MEMCPY_USE_BYTELOOP
 888:Core/Src/SEGGER_RTT.c ****       NumBytes -= Avail;
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccSC4OZm.s 			page 65


 889:Core/Src/SEGGER_RTT.c ****       while (Avail--) {
 890:Core/Src/SEGGER_RTT.c ****         *pDst++ = *pData++;
 891:Core/Src/SEGGER_RTT.c ****       };
 892:Core/Src/SEGGER_RTT.c ****       RTT__DMB();                     // Force data write to be complete before writing the <WrOff>
 893:Core/Src/SEGGER_RTT.c ****       pRing->WrOff = 0;
 894:Core/Src/SEGGER_RTT.c **** #else
 895:Core/Src/SEGGER_RTT.c ****       SEGGER_RTT_MEMCPY((void*)pDst, pData, Avail);
 2018              		.loc 1 895 7 view .LVU871
 2019 0078 1844     		add	r0, r0, r3
 2020              	.LVL199:
 2021              		.loc 1 895 7 view .LVU872
 2022 007a FFF7FEFF 		bl	memcpy
 2023              	.LVL200:
 896:Core/Src/SEGGER_RTT.c ****       pData += Avail;
 2024              		.loc 1 896 7 is_stmt 1 view .LVU873
 2025              		.loc 1 896 13 is_stmt 0 view .LVU874
 2026 007e 2644     		add	r6, r6, r4
 2027              	.LVL201:
 897:Core/Src/SEGGER_RTT.c ****       RTT__DMB();                     // Force data write to be complete before writing the <WrOff>
 2028              		.loc 1 897 7 is_stmt 1 view .LVU875
 2029              		.syntax unified
 2030              	@ 897 "Core/Src/SEGGER_RTT.c" 1
 2031 0080 BFF35F8F 		dmb
 2032              	
 2033              	@ 0 "" 2
 2034              		.loc 1 897 17 view .LVU876
 898:Core/Src/SEGGER_RTT.c ****       pRing->WrOff = 0;
 2035              		.loc 1 898 7 view .LVU877
 2036              		.loc 1 898 20 is_stmt 0 view .LVU878
 2037              		.thumb
 2038              		.syntax unified
 2039 0084 08EB0703 		add	r3, r8, r7
 2040 0088 0BEBC303 		add	r3, fp, r3, lsl #3
 2041 008c 0020     		movs	r0, #0
 899:Core/Src/SEGGER_RTT.c ****       NumBytes -= Avail;
 900:Core/Src/SEGGER_RTT.c **** #endif
 901:Core/Src/SEGGER_RTT.c ****       Avail = (pRing->SizeOfBuffer - 1);
 2042              		.loc 1 901 13 view .LVU879
 2043 008e 1A6A     		ldr	r2, [r3, #32]
 898:Core/Src/SEGGER_RTT.c ****       pRing->WrOff = 0;
 2044              		.loc 1 898 20 view .LVU880
 2045 0090 5862     		str	r0, [r3, #36]
 899:Core/Src/SEGGER_RTT.c ****       NumBytes -= Avail;
 2046              		.loc 1 899 7 is_stmt 1 view .LVU881
 899:Core/Src/SEGGER_RTT.c ****       NumBytes -= Avail;
 2047              		.loc 1 899 16 is_stmt 0 view .LVU882
 2048 0092 2D1B     		subs	r5, r5, r4
 2049              	.LVL202:
 2050              		.loc 1 901 7 is_stmt 1 view .LVU883
 2051              		.loc 1 901 13 is_stmt 0 view .LVU884
 2052 0094 541E     		subs	r4, r2, #1
 2053              	.LVL203:
 902:Core/Src/SEGGER_RTT.c ****     }
 903:Core/Src/SEGGER_RTT.c ****   } while (NumBytes);
 2054              		.loc 1 903 12 is_stmt 1 view .LVU885
 2055 0096 CDB1     		cbz	r5, .L84
 2056              	.L92:
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccSC4OZm.s 			page 66


 863:Core/Src/SEGGER_RTT.c ****     if (Avail > NumBytes) {
 2057              		.loc 1 863 3 view .LVU886
 864:Core/Src/SEGGER_RTT.c ****       //
 2058              		.loc 1 864 5 view .LVU887
 886:Core/Src/SEGGER_RTT.c **** #if SEGGER_RTT_MEMCPY_USE_BYTELOOP
 2059              		.loc 1 886 7 view .LVU888
 2060              	.LVL204:
 895:Core/Src/SEGGER_RTT.c ****       pData += Avail;
 2061              		.loc 1 895 7 view .LVU889
 864:Core/Src/SEGGER_RTT.c ****       //
 2062              		.loc 1 864 8 is_stmt 0 view .LVU890
 2063 0098 A542     		cmp	r5, r4
 886:Core/Src/SEGGER_RTT.c **** #if SEGGER_RTT_MEMCPY_USE_BYTELOOP
 2064              		.loc 1 886 20 view .LVU891
 2065 009a 0BEB0903 		add	r3, fp, r9
 895:Core/Src/SEGGER_RTT.c ****       pData += Avail;
 2066              		.loc 1 895 7 view .LVU892
 2067 009e 3146     		mov	r1, r6
 2068 00a0 2246     		mov	r2, r4
 864:Core/Src/SEGGER_RTT.c ****       //
 2069              		.loc 1 864 8 view .LVU893
 2070 00a2 E8D2     		bcs	.L90
 2071              	.LVL205:
 868:Core/Src/SEGGER_RTT.c **** #if SEGGER_RTT_MEMCPY_USE_BYTELOOP
 2072              		.loc 1 868 7 is_stmt 1 view .LVU894
 877:Core/Src/SEGGER_RTT.c ****       RTT__DMB();                     // Force data write to be complete before writing the <WrOff>
 2073              		.loc 1 877 7 view .LVU895
 868:Core/Src/SEGGER_RTT.c **** #if SEGGER_RTT_MEMCPY_USE_BYTELOOP
 2074              		.loc 1 868 20 is_stmt 0 view .LVU896
 2075 00a4 0AEB4A0A 		add	r10, r10, r10, lsl #1
 2076 00a8 0BEBCA0A 		add	r10, fp, r10, lsl #3
 877:Core/Src/SEGGER_RTT.c ****       RTT__DMB();                     // Force data write to be complete before writing the <WrOff>
 2077              		.loc 1 877 7 view .LVU897
 2078 00ac 2A46     		mov	r2, r5
 2079              	.LVL206:
 868:Core/Src/SEGGER_RTT.c **** #if SEGGER_RTT_MEMCPY_USE_BYTELOOP
 2080              		.loc 1 868 12 view .LVU898
 2081 00ae DAF80430 		ldr	r3, [r10, #4]
 877:Core/Src/SEGGER_RTT.c ****       RTT__DMB();                     // Force data write to be complete before writing the <WrOff>
 2082              		.loc 1 877 7 view .LVU899
 2083 00b2 1844     		add	r0, r0, r3
 2084              	.LVL207:
 877:Core/Src/SEGGER_RTT.c ****       RTT__DMB();                     // Force data write to be complete before writing the <WrOff>
 2085              		.loc 1 877 7 view .LVU900
 2086 00b4 FFF7FEFF 		bl	memcpy
 2087              	.LVL208:
 878:Core/Src/SEGGER_RTT.c ****       pRing->WrOff += NumBytes;
 2088              		.loc 1 878 7 is_stmt 1 view .LVU901
 2089              		.syntax unified
 2090              	@ 878 "Core/Src/SEGGER_RTT.c" 1
 2091 00b8 BFF35F8F 		dmb
 2092              	
 2093              	@ 0 "" 2
 878:Core/Src/SEGGER_RTT.c ****       pRing->WrOff += NumBytes;
 2094              		.loc 1 878 17 view .LVU902
 879:Core/Src/SEGGER_RTT.c **** #endif
 2095              		.loc 1 879 7 view .LVU903
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccSC4OZm.s 			page 67


 879:Core/Src/SEGGER_RTT.c **** #endif
 2096              		.loc 1 879 20 is_stmt 0 view .LVU904
 2097              		.thumb
 2098              		.syntax unified
 2099 00bc B844     		add	r8, r8, r7
 2100 00be 0BEBC80B 		add	fp, fp, r8, lsl #3
 2101 00c2 DBF82430 		ldr	r3, [fp, #36]
 2102 00c6 2B44     		add	r3, r3, r5
 2103 00c8 CBF82430 		str	r3, [fp, #36]
 881:Core/Src/SEGGER_RTT.c ****     } else {
 2104              		.loc 1 881 7 is_stmt 1 view .LVU905
 2105              	.L84:
 904:Core/Src/SEGGER_RTT.c **** }
 2106              		.loc 1 904 1 is_stmt 0 view .LVU906
 2107 00cc BDE8F88F 		pop	{r3, r4, r5, r6, r7, r8, r9, r10, fp, pc}
 2108              	.LVL209:
 2109              	.L96:
 847:Core/Src/SEGGER_RTT.c ****   } else if ( pRing->WrOff < pRing->RdOff) {
 2110              		.loc 1 847 5 is_stmt 1 view .LVU907
 847:Core/Src/SEGGER_RTT.c ****   } else if ( pRing->WrOff < pRing->RdOff) {
 2111              		.loc 1 847 11 is_stmt 0 view .LVU908
 2112 00d0 1B6A     		ldr	r3, [r3, #32]
 2113 00d2 013B     		subs	r3, r3, #1
 2114              	.LVL210:
 847:Core/Src/SEGGER_RTT.c ****   } else if ( pRing->WrOff < pRing->RdOff) {
 2115              		.loc 1 847 11 view .LVU909
 2116 00d4 AEE7     		b	.L86
 2117              	.L98:
 2118 00d6 00BF     		.align	2
 2119              	.L97:
 2120 00d8 00000000 		.word	.LANCHOR0
 2121              		.cfi_endproc
 2122              	.LFE9:
 2124              		.section	.text.SEGGER_RTT_WriteDownBufferNoLock,"ax",%progbits
 2125              		.align	1
 2126              		.p2align 2,,3
 2127              		.global	SEGGER_RTT_WriteDownBufferNoLock
 2128              		.syntax unified
 2129              		.thumb
 2130              		.thumb_func
 2132              	SEGGER_RTT_WriteDownBufferNoLock:
 2133              	.LVL211:
 2134              	.LFB10:
 905:Core/Src/SEGGER_RTT.c **** 
 906:Core/Src/SEGGER_RTT.c **** /*********************************************************************
 907:Core/Src/SEGGER_RTT.c **** *
 908:Core/Src/SEGGER_RTT.c **** *       SEGGER_RTT_WriteSkipNoLock
 909:Core/Src/SEGGER_RTT.c **** *
 910:Core/Src/SEGGER_RTT.c **** *  Function description
 911:Core/Src/SEGGER_RTT.c **** *    Stores a specified number of characters in SEGGER RTT
 912:Core/Src/SEGGER_RTT.c **** *    control block which is then read by the host.
 913:Core/Src/SEGGER_RTT.c **** *    SEGGER_RTT_WriteSkipNoLock does not lock the application and
 914:Core/Src/SEGGER_RTT.c **** *    skips all data, if the data does not fit into the buffer.
 915:Core/Src/SEGGER_RTT.c **** *
 916:Core/Src/SEGGER_RTT.c **** *  Parameters
 917:Core/Src/SEGGER_RTT.c **** *    BufferIndex  Index of "Up"-buffer to be used (e.g. 0 for "Terminal").
 918:Core/Src/SEGGER_RTT.c **** *    pBuffer      Pointer to character array. Does not need to point to a \0 terminated string.
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccSC4OZm.s 			page 68


 919:Core/Src/SEGGER_RTT.c **** *    NumBytes     Number of bytes to be stored in the SEGGER RTT control block.
 920:Core/Src/SEGGER_RTT.c **** *                 MUST be > 0!!!
 921:Core/Src/SEGGER_RTT.c **** *                 This is done for performance reasons, so no initial check has do be done.
 922:Core/Src/SEGGER_RTT.c **** *
 923:Core/Src/SEGGER_RTT.c **** *  Return value
 924:Core/Src/SEGGER_RTT.c **** *    1: Data has been copied
 925:Core/Src/SEGGER_RTT.c **** *    0: No space, data has not been copied
 926:Core/Src/SEGGER_RTT.c **** *
 927:Core/Src/SEGGER_RTT.c **** *  Notes
 928:Core/Src/SEGGER_RTT.c **** *    (1) If there is not enough space in the "Up"-buffer, all data is dropped.
 929:Core/Src/SEGGER_RTT.c **** *    (2) For performance reasons this function does not call Init()
 930:Core/Src/SEGGER_RTT.c **** *        and may only be called after RTT has been initialized.
 931:Core/Src/SEGGER_RTT.c **** *        Either by calling SEGGER_RTT_Init() or calling another RTT API function first.
 932:Core/Src/SEGGER_RTT.c **** */
 933:Core/Src/SEGGER_RTT.c **** #if (RTT_USE_ASM == 0)
 934:Core/Src/SEGGER_RTT.c **** unsigned SEGGER_RTT_WriteSkipNoLock(unsigned BufferIndex, const void* pBuffer, unsigned NumBytes) {
 935:Core/Src/SEGGER_RTT.c ****   const char*           pData;
 936:Core/Src/SEGGER_RTT.c ****   SEGGER_RTT_BUFFER_UP* pRing;
 937:Core/Src/SEGGER_RTT.c ****   unsigned              Avail;
 938:Core/Src/SEGGER_RTT.c ****   unsigned              RdOff;
 939:Core/Src/SEGGER_RTT.c ****   unsigned              WrOff;
 940:Core/Src/SEGGER_RTT.c ****   unsigned              Rem;
 941:Core/Src/SEGGER_RTT.c ****   volatile char*        pDst;
 942:Core/Src/SEGGER_RTT.c ****   //
 943:Core/Src/SEGGER_RTT.c ****   // Cases:
 944:Core/Src/SEGGER_RTT.c ****   //   1) RdOff <= WrOff => Space until wrap-around is sufficient
 945:Core/Src/SEGGER_RTT.c ****   //   2) RdOff <= WrOff => Space after wrap-around needed (copy in 2 chunks)
 946:Core/Src/SEGGER_RTT.c ****   //   3) RdOff <  WrOff => No space in buf
 947:Core/Src/SEGGER_RTT.c ****   //   4) RdOff >  WrOff => Space is sufficient
 948:Core/Src/SEGGER_RTT.c ****   //   5) RdOff >  WrOff => No space in buf
 949:Core/Src/SEGGER_RTT.c ****   //
 950:Core/Src/SEGGER_RTT.c ****   // 1) is the most common case for large buffers and assuming that J-Link reads the data fast enou
 951:Core/Src/SEGGER_RTT.c ****   //
 952:Core/Src/SEGGER_RTT.c ****   pData = (const char *)pBuffer;
 953:Core/Src/SEGGER_RTT.c ****   pRing = (SEGGER_RTT_BUFFER_UP*)((char*)&_SEGGER_RTT.aUp[BufferIndex] + SEGGER_RTT_UNCACHED_OFF); 
 954:Core/Src/SEGGER_RTT.c ****   RdOff = pRing->RdOff;
 955:Core/Src/SEGGER_RTT.c ****   WrOff = pRing->WrOff;
 956:Core/Src/SEGGER_RTT.c ****   if (RdOff <= WrOff) {                                 // Case 1), 2) or 3)
 957:Core/Src/SEGGER_RTT.c ****     Avail = pRing->SizeOfBuffer - WrOff - 1u;           // Space until wrap-around (assume 1 byte n
 958:Core/Src/SEGGER_RTT.c ****     if (Avail >= NumBytes) {                            // Case 1)?
 959:Core/Src/SEGGER_RTT.c **** CopyStraight:
 960:Core/Src/SEGGER_RTT.c ****       pDst = (pRing->pBuffer + WrOff) + SEGGER_RTT_UNCACHED_OFF;
 961:Core/Src/SEGGER_RTT.c ****       memcpy((void*)pDst, pData, NumBytes);
 962:Core/Src/SEGGER_RTT.c ****       RTT__DMB();                     // Force data write to be complete before writing the <WrOff>
 963:Core/Src/SEGGER_RTT.c ****       pRing->WrOff = WrOff + NumBytes;
 964:Core/Src/SEGGER_RTT.c ****       return 1;
 965:Core/Src/SEGGER_RTT.c ****     }
 966:Core/Src/SEGGER_RTT.c ****     Avail += RdOff;                                     // Space incl. wrap-around
 967:Core/Src/SEGGER_RTT.c ****     if (Avail >= NumBytes) {                            // Case 2? => If not, we have case 3) (does
 968:Core/Src/SEGGER_RTT.c ****       Rem = pRing->SizeOfBuffer - WrOff;                // Space until end of buffer
 969:Core/Src/SEGGER_RTT.c ****       pDst = (pRing->pBuffer + WrOff) + SEGGER_RTT_UNCACHED_OFF;
 970:Core/Src/SEGGER_RTT.c ****       memcpy((void*)pDst, pData, Rem);                  // Copy 1st chunk
 971:Core/Src/SEGGER_RTT.c ****       NumBytes -= Rem;
 972:Core/Src/SEGGER_RTT.c ****       //
 973:Core/Src/SEGGER_RTT.c ****       // Special case: First check that assumed RdOff == 0 calculated that last element before wrap
 974:Core/Src/SEGGER_RTT.c ****       // But 2nd check (considering space until wrap-around and until RdOff) revealed that RdOff is
 975:Core/Src/SEGGER_RTT.c ****       // In this case, we may use a copy straight until buffer end anyway without needing to copy 2
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccSC4OZm.s 			page 69


 976:Core/Src/SEGGER_RTT.c ****       // Therefore, check if 2nd memcpy is necessary at all
 977:Core/Src/SEGGER_RTT.c ****       //
 978:Core/Src/SEGGER_RTT.c ****       if (NumBytes) {
 979:Core/Src/SEGGER_RTT.c ****         pDst = pRing->pBuffer + SEGGER_RTT_UNCACHED_OFF;
 980:Core/Src/SEGGER_RTT.c ****         memcpy((void*)pDst, pData + Rem, NumBytes);
 981:Core/Src/SEGGER_RTT.c ****       }
 982:Core/Src/SEGGER_RTT.c ****       RTT__DMB();                     // Force data write to be complete before writing the <WrOff>
 983:Core/Src/SEGGER_RTT.c ****       pRing->WrOff = NumBytes;
 984:Core/Src/SEGGER_RTT.c ****       return 1;
 985:Core/Src/SEGGER_RTT.c ****     }
 986:Core/Src/SEGGER_RTT.c ****   } else {                                             // Potential case 4)
 987:Core/Src/SEGGER_RTT.c ****     Avail = RdOff - WrOff - 1u;
 988:Core/Src/SEGGER_RTT.c ****     if (Avail >= NumBytes) {                           // Case 4)? => If not, we have case 5) (does
 989:Core/Src/SEGGER_RTT.c ****       goto CopyStraight;
 990:Core/Src/SEGGER_RTT.c ****     }
 991:Core/Src/SEGGER_RTT.c ****   }
 992:Core/Src/SEGGER_RTT.c ****   return 0;     // No space in buffer
 993:Core/Src/SEGGER_RTT.c **** }
 994:Core/Src/SEGGER_RTT.c **** #endif
 995:Core/Src/SEGGER_RTT.c **** 
 996:Core/Src/SEGGER_RTT.c **** /*********************************************************************
 997:Core/Src/SEGGER_RTT.c **** *
 998:Core/Src/SEGGER_RTT.c **** *       SEGGER_RTT_WriteDownBufferNoLock
 999:Core/Src/SEGGER_RTT.c **** *
1000:Core/Src/SEGGER_RTT.c **** *  Function description
1001:Core/Src/SEGGER_RTT.c **** *    Stores a specified number of characters in SEGGER RTT
1002:Core/Src/SEGGER_RTT.c **** *    control block inside a <Down> buffer.
1003:Core/Src/SEGGER_RTT.c **** *    SEGGER_RTT_WriteDownBufferNoLock does not lock the application.
1004:Core/Src/SEGGER_RTT.c **** *    Used to do the same operation that J-Link does, to transfer 
1005:Core/Src/SEGGER_RTT.c **** *    RTT data from other channels, such as TCP/IP or UART.
1006:Core/Src/SEGGER_RTT.c **** *
1007:Core/Src/SEGGER_RTT.c **** *  Parameters
1008:Core/Src/SEGGER_RTT.c **** *    BufferIndex  Index of "Down"-buffer to be used.
1009:Core/Src/SEGGER_RTT.c **** *    pBuffer      Pointer to character array. Does not need to point to a \0 terminated string.
1010:Core/Src/SEGGER_RTT.c **** *    NumBytes     Number of bytes to be stored in the SEGGER RTT control block.
1011:Core/Src/SEGGER_RTT.c **** *
1012:Core/Src/SEGGER_RTT.c **** *  Return value
1013:Core/Src/SEGGER_RTT.c **** *    Number of bytes which have been stored in the "Down"-buffer.
1014:Core/Src/SEGGER_RTT.c **** *
1015:Core/Src/SEGGER_RTT.c **** *  Notes
1016:Core/Src/SEGGER_RTT.c **** *    (1) Data is stored according to buffer flags.
1017:Core/Src/SEGGER_RTT.c **** *    (2) For performance reasons this function does not call Init()
1018:Core/Src/SEGGER_RTT.c **** *        and may only be called after RTT has been initialized.
1019:Core/Src/SEGGER_RTT.c **** *        Either by calling SEGGER_RTT_Init() or calling another RTT API function first.
1020:Core/Src/SEGGER_RTT.c **** *
1021:Core/Src/SEGGER_RTT.c **** *  Additional information
1022:Core/Src/SEGGER_RTT.c **** *    This function must not be called when J-Link might also do RTT.
1023:Core/Src/SEGGER_RTT.c **** */
1024:Core/Src/SEGGER_RTT.c **** unsigned SEGGER_RTT_WriteDownBufferNoLock(unsigned BufferIndex, const void* pBuffer, unsigned NumBy
 2135              		.loc 1 1024 105 is_stmt 1 view -0
 2136              		.cfi_startproc
 2137              		@ args = 0, pretend = 0, frame = 0
 2138              		@ frame_needed = 0, uses_anonymous_args = 0
1025:Core/Src/SEGGER_RTT.c ****   unsigned                Status;
 2139              		.loc 1 1025 3 view .LVU911
1026:Core/Src/SEGGER_RTT.c ****   unsigned                Avail;
 2140              		.loc 1 1026 3 view .LVU912
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccSC4OZm.s 			page 70


1027:Core/Src/SEGGER_RTT.c ****   const char*             pData;
 2141              		.loc 1 1027 3 view .LVU913
1028:Core/Src/SEGGER_RTT.c ****   SEGGER_RTT_BUFFER_UP*   pRing;
 2142              		.loc 1 1028 3 view .LVU914
1029:Core/Src/SEGGER_RTT.c ****   //
1030:Core/Src/SEGGER_RTT.c ****   // Get "to-target" ring buffer.
1031:Core/Src/SEGGER_RTT.c ****   // It is save to cast that to a "to-host" buffer. Up and Down buffer differ in volatility of offs
1032:Core/Src/SEGGER_RTT.c ****   //
1033:Core/Src/SEGGER_RTT.c ****   pData = (const char *)pBuffer;
 2143              		.loc 1 1033 3 view .LVU915
1024:Core/Src/SEGGER_RTT.c ****   unsigned                Status;
 2144              		.loc 1 1024 105 is_stmt 0 view .LVU916
 2145 0000 2DE9F047 		push	{r4, r5, r6, r7, r8, r9, r10, lr}
 2146              		.cfi_def_cfa_offset 32
 2147              		.cfi_offset 4, -32
 2148              		.cfi_offset 5, -28
 2149              		.cfi_offset 6, -24
 2150              		.cfi_offset 7, -20
 2151              		.cfi_offset 8, -16
 2152              		.cfi_offset 9, -12
 2153              		.cfi_offset 10, -8
 2154              		.cfi_offset 14, -4
1034:Core/Src/SEGGER_RTT.c ****   pRing = (SEGGER_RTT_BUFFER_UP*)((char*)&_SEGGER_RTT.aDown[BufferIndex] + SEGGER_RTT_UNCACHED_OFF)
 2155              		.loc 1 1034 9 view .LVU917
 2156 0004 514E     		ldr	r6, .L123
 2157 0006 00EB4000 		add	r0, r0, r0, lsl #1
 2158              	.LVL212:
 2159              		.loc 1 1034 9 view .LVU918
 2160 000a 06EBC006 		add	r6, r6, r0, lsl #3
 2161 000e 6036     		adds	r6, r6, #96
1035:Core/Src/SEGGER_RTT.c ****   //
1036:Core/Src/SEGGER_RTT.c ****   // How we output depends upon the mode...
1037:Core/Src/SEGGER_RTT.c ****   //
1038:Core/Src/SEGGER_RTT.c ****   switch (pRing->Flags) {
 2162              		.loc 1 1038 16 view .LVU919
 2163 0010 7769     		ldr	r7, [r6, #20]
 2164              		.loc 1 1038 3 view .LVU920
 2165 0012 012F     		cmp	r7, #1
1024:Core/Src/SEGGER_RTT.c ****   unsigned                Status;
 2166              		.loc 1 1024 105 view .LVU921
 2167 0014 8A46     		mov	r10, r1
 2168              	.LVL213:
1034:Core/Src/SEGGER_RTT.c ****   pRing = (SEGGER_RTT_BUFFER_UP*)((char*)&_SEGGER_RTT.aDown[BufferIndex] + SEGGER_RTT_UNCACHED_OFF)
 2169              		.loc 1 1034 3 is_stmt 1 view .LVU922
 2170              		.loc 1 1038 3 view .LVU923
1024:Core/Src/SEGGER_RTT.c ****   unsigned                Status;
 2171              		.loc 1 1024 105 is_stmt 0 view .LVU924
 2172 0016 9146     		mov	r9, r2
 2173              		.loc 1 1038 3 view .LVU925
 2174 0018 06D0     		beq	.L100
 2175 001a 022F     		cmp	r7, #2
 2176 001c 38D0     		beq	.L101
 2177 001e F7B1     		cbz	r7, .L120
 2178 0020 0027     		movs	r7, #0
 2179              	.LVL214:
1039:Core/Src/SEGGER_RTT.c ****   case SEGGER_RTT_MODE_NO_BLOCK_SKIP:
1040:Core/Src/SEGGER_RTT.c ****     //
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccSC4OZm.s 			page 71


1041:Core/Src/SEGGER_RTT.c ****     // If we are in skip mode and there is no space for the whole
1042:Core/Src/SEGGER_RTT.c ****     // of this output, don't bother.
1043:Core/Src/SEGGER_RTT.c ****     //
1044:Core/Src/SEGGER_RTT.c ****     Avail = _GetAvailWriteSpace(pRing);
1045:Core/Src/SEGGER_RTT.c ****     if (Avail < NumBytes) {
1046:Core/Src/SEGGER_RTT.c ****       Status = 0u;
1047:Core/Src/SEGGER_RTT.c ****     } else {
1048:Core/Src/SEGGER_RTT.c ****       Status = NumBytes;
1049:Core/Src/SEGGER_RTT.c ****       _WriteNoCheck(pRing, pData, NumBytes);
1050:Core/Src/SEGGER_RTT.c ****     }
1051:Core/Src/SEGGER_RTT.c ****     break;
1052:Core/Src/SEGGER_RTT.c ****   case SEGGER_RTT_MODE_NO_BLOCK_TRIM:
1053:Core/Src/SEGGER_RTT.c ****     //
1054:Core/Src/SEGGER_RTT.c ****     // If we are in trim mode, trim to what we can output without blocking.
1055:Core/Src/SEGGER_RTT.c ****     //
1056:Core/Src/SEGGER_RTT.c ****     Avail = _GetAvailWriteSpace(pRing);
1057:Core/Src/SEGGER_RTT.c ****     Status = Avail < NumBytes ? Avail : NumBytes;
1058:Core/Src/SEGGER_RTT.c ****     _WriteNoCheck(pRing, pData, Status);
1059:Core/Src/SEGGER_RTT.c ****     break;
1060:Core/Src/SEGGER_RTT.c ****   case SEGGER_RTT_MODE_BLOCK_IF_FIFO_FULL:
1061:Core/Src/SEGGER_RTT.c ****     //
1062:Core/Src/SEGGER_RTT.c ****     // If we are in blocking mode, output everything.
1063:Core/Src/SEGGER_RTT.c ****     //
1064:Core/Src/SEGGER_RTT.c ****     Status = _WriteBlocking(pRing, pData, NumBytes);
1065:Core/Src/SEGGER_RTT.c ****     break;
1066:Core/Src/SEGGER_RTT.c ****   default:
1067:Core/Src/SEGGER_RTT.c ****     Status = 0u;
1068:Core/Src/SEGGER_RTT.c ****     break;
1069:Core/Src/SEGGER_RTT.c ****   }
1070:Core/Src/SEGGER_RTT.c ****   //
1071:Core/Src/SEGGER_RTT.c ****   // Finish up.
1072:Core/Src/SEGGER_RTT.c ****   //
1073:Core/Src/SEGGER_RTT.c ****   return Status;
 2180              		.loc 1 1073 3 is_stmt 1 view .LVU926
 2181              	.L99:
1074:Core/Src/SEGGER_RTT.c **** }
 2182              		.loc 1 1074 1 is_stmt 0 view .LVU927
 2183 0022 3846     		mov	r0, r7
 2184 0024 BDE8F087 		pop	{r4, r5, r6, r7, r8, r9, r10, pc}
 2185              	.LVL215:
 2186              	.L100:
1056:Core/Src/SEGGER_RTT.c ****     Status = Avail < NumBytes ? Avail : NumBytes;
 2187              		.loc 1 1056 5 is_stmt 1 view .LVU928
 2188              	.LBB108:
 2189              	.LBI108:
 526:Core/Src/SEGGER_RTT.c ****   unsigned RdOff;
 2190              		.loc 1 526 17 view .LVU929
 2191              	.LBB109:
 527:Core/Src/SEGGER_RTT.c ****   unsigned WrOff;
 2192              		.loc 1 527 3 view .LVU930
 528:Core/Src/SEGGER_RTT.c ****   unsigned r;
 2193              		.loc 1 528 3 view .LVU931
 529:Core/Src/SEGGER_RTT.c ****   //
 2194              		.loc 1 529 3 view .LVU932
 534:Core/Src/SEGGER_RTT.c ****   WrOff = pRing->WrOff;
 2195              		.loc 1 534 3 view .LVU933
 534:Core/Src/SEGGER_RTT.c ****   WrOff = pRing->WrOff;
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccSC4OZm.s 			page 72


 2196              		.loc 1 534 9 is_stmt 0 view .LVU934
 2197 0028 3769     		ldr	r7, [r6, #16]
 2198              	.LVL216:
 535:Core/Src/SEGGER_RTT.c ****   if (RdOff <= WrOff) {
 2199              		.loc 1 535 3 is_stmt 1 view .LVU935
 535:Core/Src/SEGGER_RTT.c ****   if (RdOff <= WrOff) {
 2200              		.loc 1 535 9 is_stmt 0 view .LVU936
 2201 002a F468     		ldr	r4, [r6, #12]
 2202              	.LVL217:
 536:Core/Src/SEGGER_RTT.c ****     r = pRing->SizeOfBuffer - 1u - WrOff + RdOff;
 2203              		.loc 1 536 3 is_stmt 1 view .LVU937
 536:Core/Src/SEGGER_RTT.c ****     r = pRing->SizeOfBuffer - 1u - WrOff + RdOff;
 2204              		.loc 1 536 6 is_stmt 0 view .LVU938
 2205 002c A742     		cmp	r7, r4
 2206 002e 64D9     		bls	.L121
 539:Core/Src/SEGGER_RTT.c ****   }
 2207              		.loc 1 539 5 is_stmt 1 view .LVU939
 539:Core/Src/SEGGER_RTT.c ****   }
 2208              		.loc 1 539 7 is_stmt 0 view .LVU940
 2209 0030 013F     		subs	r7, r7, #1
 2210              	.LVL218:
 539:Core/Src/SEGGER_RTT.c ****   }
 2211              		.loc 1 539 7 view .LVU941
 2212              	.LBE109:
 2213              	.LBE108:
 2214              	.LBB112:
 2215              	.LBB113:
 537:Core/Src/SEGGER_RTT.c ****   } else {
 2216              		.loc 1 537 14 view .LVU942
 2217 0032 B568     		ldr	r5, [r6, #8]
 2218              	.LBE113:
 2219              	.LBE112:
 2220              	.LBB116:
 2221              	.LBB110:
 539:Core/Src/SEGGER_RTT.c ****   }
 2222              		.loc 1 539 7 view .LVU943
 2223 0034 3F1B     		subs	r7, r7, r4
 2224              	.LVL219:
 2225              	.L107:
 541:Core/Src/SEGGER_RTT.c **** }
 2226              		.loc 1 541 3 is_stmt 1 view .LVU944
 541:Core/Src/SEGGER_RTT.c **** }
 2227              		.loc 1 541 3 is_stmt 0 view .LVU945
 2228              	.LBE110:
 2229              	.LBE116:
1057:Core/Src/SEGGER_RTT.c ****     _WriteNoCheck(pRing, pData, Status);
 2230              		.loc 1 1057 5 is_stmt 1 view .LVU946
1057:Core/Src/SEGGER_RTT.c ****     _WriteNoCheck(pRing, pData, Status);
 2231              		.loc 1 1057 12 is_stmt 0 view .LVU947
 2232 0036 4F45     		cmp	r7, r9
 2233 0038 28BF     		it	cs
 2234 003a 4F46     		movcs	r7, r9
 2235              	.LVL220:
1058:Core/Src/SEGGER_RTT.c ****     break;
 2236              		.loc 1 1058 5 is_stmt 1 view .LVU948
 2237              	.LBB117:
 2238              	.LBI117:
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccSC4OZm.s 			page 73


 436:Core/Src/SEGGER_RTT.c ****   unsigned NumBytesAtOnce;
 2239              		.loc 1 436 13 view .LVU949
 2240              	.LBB118:
 437:Core/Src/SEGGER_RTT.c ****   unsigned WrOff;
 2241              		.loc 1 437 3 view .LVU950
 438:Core/Src/SEGGER_RTT.c ****   unsigned Rem;
 2242              		.loc 1 438 3 view .LVU951
 439:Core/Src/SEGGER_RTT.c ****   volatile char* pDst;
 2243              		.loc 1 439 3 view .LVU952
 440:Core/Src/SEGGER_RTT.c **** 
 2244              		.loc 1 440 3 view .LVU953
 442:Core/Src/SEGGER_RTT.c ****   Rem = pRing->SizeOfBuffer - WrOff;
 2245              		.loc 1 442 3 view .LVU954
 443:Core/Src/SEGGER_RTT.c ****   if (Rem > NumBytes) {
 2246              		.loc 1 443 3 view .LVU955
 443:Core/Src/SEGGER_RTT.c ****   if (Rem > NumBytes) {
 2247              		.loc 1 443 7 is_stmt 0 view .LVU956
 2248 003c A5EB0408 		sub	r8, r5, r4
 2249              	.LVL221:
 444:Core/Src/SEGGER_RTT.c ****     //
 2250              		.loc 1 444 3 is_stmt 1 view .LVU957
 444:Core/Src/SEGGER_RTT.c ****     //
 2251              		.loc 1 444 6 is_stmt 0 view .LVU958
 2252 0040 4745     		cmp	r7, r8
 448:Core/Src/SEGGER_RTT.c **** #if SEGGER_RTT_MEMCPY_USE_BYTELOOP
 2253              		.loc 1 448 10 view .LVU959
 2254 0042 7068     		ldr	r0, [r6, #4]
 444:Core/Src/SEGGER_RTT.c ****     //
 2255              		.loc 1 444 6 view .LVU960
 2256 0044 5ED2     		bcs	.L108
 448:Core/Src/SEGGER_RTT.c **** #if SEGGER_RTT_MEMCPY_USE_BYTELOOP
 2257              		.loc 1 448 5 is_stmt 1 view .LVU961
 2258              	.LVL222:
 457:Core/Src/SEGGER_RTT.c ****     RTT__DMB();                     // Force data write to be complete before writing the <WrOff>, 
 2259              		.loc 1 457 5 view .LVU962
 2260 0046 5146     		mov	r1, r10
 2261              	.LVL223:
 457:Core/Src/SEGGER_RTT.c ****     RTT__DMB();                     // Force data write to be complete before writing the <WrOff>, 
 2262              		.loc 1 457 5 is_stmt 0 view .LVU963
 2263 0048 2044     		add	r0, r0, r4
 2264              	.LVL224:
 457:Core/Src/SEGGER_RTT.c ****     RTT__DMB();                     // Force data write to be complete before writing the <WrOff>, 
 2265              		.loc 1 457 5 view .LVU964
 2266 004a 3A46     		mov	r2, r7
 2267              	.LVL225:
 457:Core/Src/SEGGER_RTT.c ****     RTT__DMB();                     // Force data write to be complete before writing the <WrOff>, 
 2268              		.loc 1 457 5 view .LVU965
 2269 004c FFF7FEFF 		bl	memcpy
 2270              	.LVL226:
 458:Core/Src/SEGGER_RTT.c ****     pRing->WrOff = WrOff + NumBytes;
 2271              		.loc 1 458 5 is_stmt 1 view .LVU966
 2272              		.syntax unified
 2273              	@ 458 "Core/Src/SEGGER_RTT.c" 1
 2274 0050 BFF35F8F 		dmb
 2275              	
 2276              	@ 0 "" 2
 458:Core/Src/SEGGER_RTT.c ****     pRing->WrOff = WrOff + NumBytes;
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccSC4OZm.s 			page 74


 2277              		.loc 1 458 15 view .LVU967
 459:Core/Src/SEGGER_RTT.c **** #endif
 2278              		.loc 1 459 5 view .LVU968
 459:Core/Src/SEGGER_RTT.c **** #endif
 2279              		.loc 1 459 26 is_stmt 0 view .LVU969
 2280              		.thumb
 2281              		.syntax unified
 2282 0054 3C44     		add	r4, r4, r7
 2283              	.LVL227:
 459:Core/Src/SEGGER_RTT.c **** #endif
 2284              		.loc 1 459 18 view .LVU970
 2285 0056 F460     		str	r4, [r6, #12]
 2286              	.LBE118:
 2287              	.LBE117:
 2288              		.loc 1 1074 1 view .LVU971
 2289 0058 3846     		mov	r0, r7
 2290 005a BDE8F087 		pop	{r4, r5, r6, r7, r8, r9, r10, pc}
 2291              	.LVL228:
 2292              	.L120:
1044:Core/Src/SEGGER_RTT.c ****     if (Avail < NumBytes) {
 2293              		.loc 1 1044 5 is_stmt 1 view .LVU972
 2294              	.LBB120:
 2295              	.LBI112:
 526:Core/Src/SEGGER_RTT.c ****   unsigned RdOff;
 2296              		.loc 1 526 17 view .LVU973
 2297              	.LBB114:
 527:Core/Src/SEGGER_RTT.c ****   unsigned WrOff;
 2298              		.loc 1 527 3 view .LVU974
 528:Core/Src/SEGGER_RTT.c ****   unsigned r;
 2299              		.loc 1 528 3 view .LVU975
 529:Core/Src/SEGGER_RTT.c ****   //
 2300              		.loc 1 529 3 view .LVU976
 534:Core/Src/SEGGER_RTT.c ****   WrOff = pRing->WrOff;
 2301              		.loc 1 534 3 view .LVU977
 534:Core/Src/SEGGER_RTT.c ****   WrOff = pRing->WrOff;
 2302              		.loc 1 534 9 is_stmt 0 view .LVU978
 2303 005e 3369     		ldr	r3, [r6, #16]
 2304              	.LVL229:
 535:Core/Src/SEGGER_RTT.c ****   if (RdOff <= WrOff) {
 2305              		.loc 1 535 3 is_stmt 1 view .LVU979
 535:Core/Src/SEGGER_RTT.c ****   if (RdOff <= WrOff) {
 2306              		.loc 1 535 9 is_stmt 0 view .LVU980
 2307 0060 F468     		ldr	r4, [r6, #12]
 2308              	.LVL230:
 536:Core/Src/SEGGER_RTT.c ****     r = pRing->SizeOfBuffer - 1u - WrOff + RdOff;
 2309              		.loc 1 536 3 is_stmt 1 view .LVU981
 536:Core/Src/SEGGER_RTT.c ****     r = pRing->SizeOfBuffer - 1u - WrOff + RdOff;
 2310              		.loc 1 536 6 is_stmt 0 view .LVU982
 2311 0062 A342     		cmp	r3, r4
 537:Core/Src/SEGGER_RTT.c ****   } else {
 2312              		.loc 1 537 5 is_stmt 1 view .LVU983
 537:Core/Src/SEGGER_RTT.c ****   } else {
 2313              		.loc 1 537 7 is_stmt 0 view .LVU984
 2314 0064 9CBF     		itt	ls
 2315 0066 B268     		ldrls	r2, [r6, #8]
 2316              	.LVL231:
 537:Core/Src/SEGGER_RTT.c ****   } else {
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccSC4OZm.s 			page 75


 2317              		.loc 1 537 7 view .LVU985
 2318 0068 9B18     		addls	r3, r3, r2
 2319              	.LVL232:
 539:Core/Src/SEGGER_RTT.c ****   }
 2320              		.loc 1 539 5 is_stmt 1 view .LVU986
 539:Core/Src/SEGGER_RTT.c ****   }
 2321              		.loc 1 539 7 is_stmt 0 view .LVU987
 2322 006a 013B     		subs	r3, r3, #1
 2323 006c 1B1B     		subs	r3, r3, r4
 2324              	.LVL233:
 541:Core/Src/SEGGER_RTT.c **** }
 2325              		.loc 1 541 3 is_stmt 1 view .LVU988
 541:Core/Src/SEGGER_RTT.c **** }
 2326              		.loc 1 541 3 is_stmt 0 view .LVU989
 2327              	.LBE114:
 2328              	.LBE120:
1045:Core/Src/SEGGER_RTT.c ****       Status = 0u;
 2329              		.loc 1 1045 5 is_stmt 1 view .LVU990
1045:Core/Src/SEGGER_RTT.c ****       Status = 0u;
 2330              		.loc 1 1045 8 is_stmt 0 view .LVU991
 2331 006e 9945     		cmp	r9, r3
 2332 0070 D7D8     		bhi	.L99
1048:Core/Src/SEGGER_RTT.c ****       _WriteNoCheck(pRing, pData, NumBytes);
 2333              		.loc 1 1048 7 is_stmt 1 view .LVU992
 2334              	.LVL234:
1049:Core/Src/SEGGER_RTT.c ****     }
 2335              		.loc 1 1049 7 view .LVU993
 2336              	.LBB121:
 2337              	.LBI121:
 436:Core/Src/SEGGER_RTT.c ****   unsigned NumBytesAtOnce;
 2338              		.loc 1 436 13 view .LVU994
 2339              	.LBB122:
 437:Core/Src/SEGGER_RTT.c ****   unsigned WrOff;
 2340              		.loc 1 437 3 view .LVU995
 438:Core/Src/SEGGER_RTT.c ****   unsigned Rem;
 2341              		.loc 1 438 3 view .LVU996
 439:Core/Src/SEGGER_RTT.c ****   volatile char* pDst;
 2342              		.loc 1 439 3 view .LVU997
 440:Core/Src/SEGGER_RTT.c **** 
 2343              		.loc 1 440 3 view .LVU998
 442:Core/Src/SEGGER_RTT.c ****   Rem = pRing->SizeOfBuffer - WrOff;
 2344              		.loc 1 442 3 view .LVU999
 443:Core/Src/SEGGER_RTT.c ****   if (Rem > NumBytes) {
 2345              		.loc 1 443 3 view .LVU1000
 443:Core/Src/SEGGER_RTT.c ****   if (Rem > NumBytes) {
 2346              		.loc 1 443 14 is_stmt 0 view .LVU1001
 2347 0072 B768     		ldr	r7, [r6, #8]
 448:Core/Src/SEGGER_RTT.c **** #if SEGGER_RTT_MEMCPY_USE_BYTELOOP
 2348              		.loc 1 448 10 view .LVU1002
 2349 0074 7068     		ldr	r0, [r6, #4]
 443:Core/Src/SEGGER_RTT.c ****   if (Rem > NumBytes) {
 2350              		.loc 1 443 7 view .LVU1003
 2351 0076 3D1B     		subs	r5, r7, r4
 2352              	.LVL235:
 444:Core/Src/SEGGER_RTT.c ****     //
 2353              		.loc 1 444 3 is_stmt 1 view .LVU1004
 444:Core/Src/SEGGER_RTT.c ****     //
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccSC4OZm.s 			page 76


 2354              		.loc 1 444 6 is_stmt 0 view .LVU1005
 2355 0078 A945     		cmp	r9, r5
 2356 007a 56D2     		bcs	.L105
 448:Core/Src/SEGGER_RTT.c **** #if SEGGER_RTT_MEMCPY_USE_BYTELOOP
 2357              		.loc 1 448 5 is_stmt 1 view .LVU1006
 2358              	.LVL236:
 457:Core/Src/SEGGER_RTT.c ****     RTT__DMB();                     // Force data write to be complete before writing the <WrOff>, 
 2359              		.loc 1 457 5 view .LVU1007
 2360 007c 2044     		add	r0, r0, r4
 2361              	.LVL237:
 457:Core/Src/SEGGER_RTT.c ****     RTT__DMB();                     // Force data write to be complete before writing the <WrOff>, 
 2362              		.loc 1 457 5 is_stmt 0 view .LVU1008
 2363 007e 4A46     		mov	r2, r9
 2364 0080 FFF7FEFF 		bl	memcpy
 2365              	.LVL238:
 458:Core/Src/SEGGER_RTT.c ****     pRing->WrOff = WrOff + NumBytes;
 2366              		.loc 1 458 5 is_stmt 1 view .LVU1009
 2367              		.syntax unified
 2368              	@ 458 "Core/Src/SEGGER_RTT.c" 1
 2369 0084 BFF35F8F 		dmb
 2370              	
 2371              	@ 0 "" 2
 458:Core/Src/SEGGER_RTT.c ****     pRing->WrOff = WrOff + NumBytes;
 2372              		.loc 1 458 15 view .LVU1010
 459:Core/Src/SEGGER_RTT.c **** #endif
 2373              		.loc 1 459 5 view .LVU1011
 459:Core/Src/SEGGER_RTT.c **** #endif
 2374              		.loc 1 459 26 is_stmt 0 view .LVU1012
 2375              		.thumb
 2376              		.syntax unified
 2377 0088 4C44     		add	r4, r4, r9
 2378              	.LVL239:
 459:Core/Src/SEGGER_RTT.c **** #endif
 2379              		.loc 1 459 18 view .LVU1013
 2380 008a F460     		str	r4, [r6, #12]
 2381 008c 4F46     		mov	r7, r9
 2382 008e C8E7     		b	.L99
 2383              	.LVL240:
 2384              	.L101:
 459:Core/Src/SEGGER_RTT.c **** #endif
 2385              		.loc 1 459 18 view .LVU1014
 2386              	.LBE122:
 2387              	.LBE121:
1064:Core/Src/SEGGER_RTT.c ****     break;
 2388              		.loc 1 1064 5 is_stmt 1 view .LVU1015
 2389              	.LBB124:
 2390              	.LBI124:
 374:Core/Src/SEGGER_RTT.c ****   unsigned NumBytesToWrite;
 2391              		.loc 1 374 17 view .LVU1016
 2392              	.LBB125:
 375:Core/Src/SEGGER_RTT.c ****   unsigned NumBytesWritten;
 2393              		.loc 1 375 3 view .LVU1017
 376:Core/Src/SEGGER_RTT.c ****   unsigned RdOff;
 2394              		.loc 1 376 3 view .LVU1018
 377:Core/Src/SEGGER_RTT.c ****   unsigned WrOff;
 2395              		.loc 1 377 3 view .LVU1019
 378:Core/Src/SEGGER_RTT.c ****   volatile char* pDst;
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccSC4OZm.s 			page 77


 2396              		.loc 1 378 3 view .LVU1020
 379:Core/Src/SEGGER_RTT.c ****   //
 2397              		.loc 1 379 3 view .LVU1021
 383:Core/Src/SEGGER_RTT.c ****   WrOff = pRing->WrOff;
 2398              		.loc 1 383 3 view .LVU1022
 384:Core/Src/SEGGER_RTT.c ****   do {
 2399              		.loc 1 384 3 view .LVU1023
 2400              	.LBE125:
 2401              	.LBE124:
 2402              	.LBB127:
 2403              	.LBB115:
 537:Core/Src/SEGGER_RTT.c ****   } else {
 2404              		.loc 1 537 14 is_stmt 0 view .LVU1024
 2405 0090 D6E90225 		ldrd	r2, r5, [r6, #8]
 2406              	.LVL241:
 537:Core/Src/SEGGER_RTT.c ****   } else {
 2407              		.loc 1 537 14 view .LVU1025
 2408              	.LBE115:
 2409              	.LBE127:
 2410              	.LBB128:
 2411              	.LBB126:
 383:Core/Src/SEGGER_RTT.c ****   WrOff = pRing->WrOff;
 2412              		.loc 1 383 19 view .LVU1026
 2413 0094 0027     		movs	r7, #0
 413:Core/Src/SEGGER_RTT.c ****   } while (NumBytes);
 2414              		.loc 1 413 18 view .LVU1027
 2415 0096 B846     		mov	r8, r7
 2416              	.LVL242:
 2417              	.L113:
 385:Core/Src/SEGGER_RTT.c ****     RdOff = pRing->RdOff;                         // May be changed by host (debug probe) in the me
 2418              		.loc 1 385 3 is_stmt 1 view .LVU1028
 386:Core/Src/SEGGER_RTT.c ****     if (RdOff > WrOff) {
 2419              		.loc 1 386 5 view .LVU1029
 388:Core/Src/SEGGER_RTT.c ****     } else {
 2420              		.loc 1 388 7 view .LVU1030
 390:Core/Src/SEGGER_RTT.c ****     }
 2421              		.loc 1 390 7 view .LVU1031
 386:Core/Src/SEGGER_RTT.c ****     if (RdOff > WrOff) {
 2422              		.loc 1 386 11 is_stmt 0 view .LVU1032
 2423 0098 3369     		ldr	r3, [r6, #16]
 2424              	.LVL243:
 387:Core/Src/SEGGER_RTT.c ****       NumBytesToWrite = RdOff - WrOff - 1u;
 2425              		.loc 1 387 5 is_stmt 1 view .LVU1033
 394:Core/Src/SEGGER_RTT.c **** #if SEGGER_RTT_MEMCPY_USE_BYTELOOP
 2426              		.loc 1 394 10 is_stmt 0 view .LVU1034
 2427 009a 7068     		ldr	r0, [r6, #4]
 387:Core/Src/SEGGER_RTT.c ****       NumBytesToWrite = RdOff - WrOff - 1u;
 2428              		.loc 1 387 8 view .LVU1035
 2429 009c AB42     		cmp	r3, r5
 388:Core/Src/SEGGER_RTT.c ****     } else {
 2430              		.loc 1 388 23 view .LVU1036
 2431 009e 03F1FF31 		add	r1, r3, #-1
 390:Core/Src/SEGGER_RTT.c ****     }
 2432              		.loc 1 390 23 view .LVU1037
 2433 00a2 98BF     		it	ls
 2434 00a4 03F1FF33 		addls	r3, r3, #-1
 2435              	.LVL244:
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccSC4OZm.s 			page 78


 392:Core/Src/SEGGER_RTT.c ****     NumBytesToWrite = MIN(NumBytesToWrite, NumBytes);
 2436              		.loc 1 392 23 view .LVU1038
 2437 00a8 A2EB0504 		sub	r4, r2, r5
 390:Core/Src/SEGGER_RTT.c ****     }
 2438              		.loc 1 390 23 view .LVU1039
 2439 00ac 96BF     		itet	ls
 2440 00ae 9B18     		addls	r3, r3, r2
 388:Core/Src/SEGGER_RTT.c ****     } else {
 2441              		.loc 1 388 23 view .LVU1040
 2442 00b0 4B1B     		subhi	r3, r1, r5
 390:Core/Src/SEGGER_RTT.c ****     }
 2443              		.loc 1 390 23 view .LVU1041
 2444 00b2 5B1B     		subls	r3, r3, r5
 2445              	.LVL245:
 392:Core/Src/SEGGER_RTT.c ****     NumBytesToWrite = MIN(NumBytesToWrite, NumBytes);
 2446              		.loc 1 392 5 is_stmt 1 view .LVU1042
 393:Core/Src/SEGGER_RTT.c ****     pDst = (pRing->pBuffer + WrOff) + SEGGER_RTT_UNCACHED_OFF;
 2447              		.loc 1 393 5 view .LVU1043
 393:Core/Src/SEGGER_RTT.c ****     pDst = (pRing->pBuffer + WrOff) + SEGGER_RTT_UNCACHED_OFF;
 2448              		.loc 1 393 21 is_stmt 0 view .LVU1044
 2449 00b4 4C45     		cmp	r4, r9
 2450 00b6 28BF     		it	cs
 2451 00b8 4C46     		movcs	r4, r9
 2452              	.LVL246:
 393:Core/Src/SEGGER_RTT.c ****     pDst = (pRing->pBuffer + WrOff) + SEGGER_RTT_UNCACHED_OFF;
 2453              		.loc 1 393 21 view .LVU1045
 2454 00ba 9C42     		cmp	r4, r3
 2455 00bc 28BF     		it	cs
 2456 00be 1C46     		movcs	r4, r3
 2457              	.LVL247:
 394:Core/Src/SEGGER_RTT.c **** #if SEGGER_RTT_MEMCPY_USE_BYTELOOP
 2458              		.loc 1 394 5 is_stmt 1 view .LVU1046
 403:Core/Src/SEGGER_RTT.c ****     NumBytesWritten += NumBytesToWrite;
 2459              		.loc 1 403 5 view .LVU1047
 2460 00c0 5146     		mov	r1, r10
 2461              	.LVL248:
 403:Core/Src/SEGGER_RTT.c ****     NumBytesWritten += NumBytesToWrite;
 2462              		.loc 1 403 5 is_stmt 0 view .LVU1048
 2463 00c2 2844     		add	r0, r0, r5
 2464              	.LVL249:
 403:Core/Src/SEGGER_RTT.c ****     NumBytesWritten += NumBytesToWrite;
 2465              		.loc 1 403 5 view .LVU1049
 2466 00c4 2246     		mov	r2, r4
 2467 00c6 FFF7FEFF 		bl	memcpy
 2468              	.LVL250:
 404:Core/Src/SEGGER_RTT.c ****     pBuffer         += NumBytesToWrite;
 2469              		.loc 1 404 5 is_stmt 1 view .LVU1050
 409:Core/Src/SEGGER_RTT.c ****       WrOff = 0u;
 2470              		.loc 1 409 23 is_stmt 0 view .LVU1051
 2471 00ca B268     		ldr	r2, [r6, #8]
 407:Core/Src/SEGGER_RTT.c **** #endif
 2472              		.loc 1 407 21 view .LVU1052
 2473 00cc 2544     		add	r5, r5, r4
 2474              	.LVL251:
 412:Core/Src/SEGGER_RTT.c ****     pRing->WrOff = WrOff;
 2475              		.loc 1 412 5 is_stmt 1 view .LVU1053
 409:Core/Src/SEGGER_RTT.c ****       WrOff = 0u;
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccSC4OZm.s 			page 79


 2476              		.loc 1 409 8 is_stmt 0 view .LVU1054
 2477 00ce 9542     		cmp	r5, r2
 404:Core/Src/SEGGER_RTT.c ****     pBuffer         += NumBytesToWrite;
 2478              		.loc 1 404 21 view .LVU1055
 2479 00d0 2744     		add	r7, r7, r4
 2480              	.LVL252:
 405:Core/Src/SEGGER_RTT.c ****     NumBytes        -= NumBytesToWrite;
 2481              		.loc 1 405 5 is_stmt 1 view .LVU1056
 405:Core/Src/SEGGER_RTT.c ****     NumBytes        -= NumBytesToWrite;
 2482              		.loc 1 405 21 is_stmt 0 view .LVU1057
 2483 00d2 A244     		add	r10, r10, r4
 2484              	.LVL253:
 406:Core/Src/SEGGER_RTT.c ****     WrOff           += NumBytesToWrite;
 2485              		.loc 1 406 5 is_stmt 1 view .LVU1058
 406:Core/Src/SEGGER_RTT.c ****     WrOff           += NumBytesToWrite;
 2486              		.loc 1 406 21 is_stmt 0 view .LVU1059
 2487 00d4 A9EB0409 		sub	r9, r9, r4
 2488              	.LVL254:
 407:Core/Src/SEGGER_RTT.c **** #endif
 2489              		.loc 1 407 5 is_stmt 1 view .LVU1060
 409:Core/Src/SEGGER_RTT.c ****       WrOff = 0u;
 2490              		.loc 1 409 5 view .LVU1061
 409:Core/Src/SEGGER_RTT.c ****       WrOff = 0u;
 2491              		.loc 1 409 8 is_stmt 0 view .LVU1062
 2492 00d8 06D0     		beq	.L122
 412:Core/Src/SEGGER_RTT.c ****     pRing->WrOff = WrOff;
 2493              		.loc 1 412 5 view .LVU1063
 2494              		.syntax unified
 2495              	@ 412 "Core/Src/SEGGER_RTT.c" 1
 2496 00da BFF35F8F 		dmb
 2497              	
 2498              	@ 0 "" 2
 412:Core/Src/SEGGER_RTT.c ****     pRing->WrOff = WrOff;
 2499              		.loc 1 412 15 is_stmt 1 view .LVU1064
 413:Core/Src/SEGGER_RTT.c ****   } while (NumBytes);
 2500              		.loc 1 413 5 view .LVU1065
 413:Core/Src/SEGGER_RTT.c ****   } while (NumBytes);
 2501              		.loc 1 413 18 is_stmt 0 view .LVU1066
 2502              		.thumb
 2503              		.syntax unified
 2504 00de F560     		str	r5, [r6, #12]
 414:Core/Src/SEGGER_RTT.c ****   return NumBytesWritten;
 2505              		.loc 1 414 12 is_stmt 1 view .LVU1067
 2506 00e0 B9F1000F 		cmp	r9, #0
 2507 00e4 D8D1     		bne	.L113
 2508 00e6 9CE7     		b	.L99
 2509              	.L122:
 2510              	.LVL255:
 412:Core/Src/SEGGER_RTT.c ****     pRing->WrOff = WrOff;
 2511              		.loc 1 412 5 view .LVU1068
 2512              		.syntax unified
 2513              	@ 412 "Core/Src/SEGGER_RTT.c" 1
 2514 00e8 BFF35F8F 		dmb
 2515              	
 2516              	@ 0 "" 2
 412:Core/Src/SEGGER_RTT.c ****     pRing->WrOff = WrOff;
 2517              		.loc 1 412 15 view .LVU1069
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccSC4OZm.s 			page 80


 413:Core/Src/SEGGER_RTT.c ****   } while (NumBytes);
 2518              		.loc 1 413 5 view .LVU1070
 413:Core/Src/SEGGER_RTT.c ****   } while (NumBytes);
 2519              		.loc 1 413 18 is_stmt 0 view .LVU1071
 2520              		.thumb
 2521              		.syntax unified
 2522 00ec C6F80C80 		str	r8, [r6, #12]
 414:Core/Src/SEGGER_RTT.c ****   return NumBytesWritten;
 2523              		.loc 1 414 12 is_stmt 1 view .LVU1072
 2524 00f0 B9F1000F 		cmp	r9, #0
 2525 00f4 95D0     		beq	.L99
 410:Core/Src/SEGGER_RTT.c ****     }
 2526              		.loc 1 410 13 is_stmt 0 view .LVU1073
 2527 00f6 0025     		movs	r5, #0
 2528 00f8 CEE7     		b	.L113
 2529              	.LVL256:
 2530              	.L121:
 410:Core/Src/SEGGER_RTT.c ****     }
 2531              		.loc 1 410 13 view .LVU1074
 2532              	.LBE126:
 2533              	.LBE128:
 2534              	.LBB129:
 2535              	.LBB111:
 537:Core/Src/SEGGER_RTT.c ****   } else {
 2536              		.loc 1 537 5 is_stmt 1 view .LVU1075
 537:Core/Src/SEGGER_RTT.c ****   } else {
 2537              		.loc 1 537 14 is_stmt 0 view .LVU1076
 2538 00fa B568     		ldr	r5, [r6, #8]
 537:Core/Src/SEGGER_RTT.c ****   } else {
 2539              		.loc 1 537 7 view .LVU1077
 2540 00fc 2F44     		add	r7, r7, r5
 2541              	.LVL257:
 537:Core/Src/SEGGER_RTT.c ****   } else {
 2542              		.loc 1 537 7 view .LVU1078
 2543 00fe 013F     		subs	r7, r7, #1
 2544 0100 3F1B     		subs	r7, r7, r4
 2545              	.LVL258:
 537:Core/Src/SEGGER_RTT.c ****   } else {
 2546              		.loc 1 537 7 view .LVU1079
 2547 0102 98E7     		b	.L107
 2548              	.LVL259:
 2549              	.L108:
 537:Core/Src/SEGGER_RTT.c ****   } else {
 2550              		.loc 1 537 7 view .LVU1080
 2551              	.LBE111:
 2552              	.LBE129:
 2553              	.LBB130:
 2554              	.LBB119:
 479:Core/Src/SEGGER_RTT.c ****     pDst = (pRing->pBuffer + WrOff) + SEGGER_RTT_UNCACHED_OFF;
 2555              		.loc 1 479 5 is_stmt 1 view .LVU1081
 480:Core/Src/SEGGER_RTT.c ****     SEGGER_RTT_MEMCPY((void*)pDst, pData, NumBytesAtOnce);
 2556              		.loc 1 480 5 view .LVU1082
 481:Core/Src/SEGGER_RTT.c ****     NumBytesAtOnce = NumBytes - Rem;
 2557              		.loc 1 481 5 view .LVU1083
 482:Core/Src/SEGGER_RTT.c ****     pDst = pRing->pBuffer + SEGGER_RTT_UNCACHED_OFF;
 2558              		.loc 1 482 20 is_stmt 0 view .LVU1084
 2559 0104 7D1B     		subs	r5, r7, r5
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccSC4OZm.s 			page 81


 481:Core/Src/SEGGER_RTT.c ****     NumBytesAtOnce = NumBytes - Rem;
 2560              		.loc 1 481 5 view .LVU1085
 2561 0106 4246     		mov	r2, r8
 2562              	.LVL260:
 481:Core/Src/SEGGER_RTT.c ****     NumBytesAtOnce = NumBytes - Rem;
 2563              		.loc 1 481 5 view .LVU1086
 2564 0108 5146     		mov	r1, r10
 2565              	.LVL261:
 481:Core/Src/SEGGER_RTT.c ****     NumBytesAtOnce = NumBytes - Rem;
 2566              		.loc 1 481 5 view .LVU1087
 2567 010a 2044     		add	r0, r0, r4
 482:Core/Src/SEGGER_RTT.c ****     pDst = pRing->pBuffer + SEGGER_RTT_UNCACHED_OFF;
 2568              		.loc 1 482 20 view .LVU1088
 2569 010c 2544     		add	r5, r5, r4
 481:Core/Src/SEGGER_RTT.c ****     NumBytesAtOnce = NumBytes - Rem;
 2570              		.loc 1 481 5 view .LVU1089
 2571 010e FFF7FEFF 		bl	memcpy
 2572              	.LVL262:
 482:Core/Src/SEGGER_RTT.c ****     pDst = pRing->pBuffer + SEGGER_RTT_UNCACHED_OFF;
 2573              		.loc 1 482 5 is_stmt 1 view .LVU1090
 483:Core/Src/SEGGER_RTT.c ****     SEGGER_RTT_MEMCPY((void*)pDst, pData + Rem, NumBytesAtOnce);
 2574              		.loc 1 483 5 view .LVU1091
 484:Core/Src/SEGGER_RTT.c ****     RTT__DMB();                     // Force data write to be complete before writing the <WrOff>, 
 2575              		.loc 1 484 5 view .LVU1092
 2576 0112 7068     		ldr	r0, [r6, #4]
 2577 0114 0AEB0801 		add	r1, r10, r8
 2578 0118 2A46     		mov	r2, r5
 2579 011a FFF7FEFF 		bl	memcpy
 2580              	.LVL263:
 485:Core/Src/SEGGER_RTT.c ****     pRing->WrOff = NumBytesAtOnce;
 2581              		.loc 1 485 5 view .LVU1093
 2582              		.syntax unified
 2583              	@ 485 "Core/Src/SEGGER_RTT.c" 1
 2584 011e BFF35F8F 		dmb
 2585              	
 2586              	@ 0 "" 2
 485:Core/Src/SEGGER_RTT.c ****     pRing->WrOff = NumBytesAtOnce;
 2587              		.loc 1 485 15 view .LVU1094
 486:Core/Src/SEGGER_RTT.c **** #endif
 2588              		.loc 1 486 5 view .LVU1095
 486:Core/Src/SEGGER_RTT.c **** #endif
 2589              		.loc 1 486 18 is_stmt 0 view .LVU1096
 2590              		.thumb
 2591              		.syntax unified
 2592 0122 F560     		str	r5, [r6, #12]
 2593              	.LBE119:
 2594              	.LBE130:
 2595              		.loc 1 1074 1 view .LVU1097
 2596 0124 3846     		mov	r0, r7
 2597 0126 BDE8F087 		pop	{r4, r5, r6, r7, r8, r9, r10, pc}
 2598              	.LVL264:
 2599              	.L105:
 2600              	.LBB131:
 2601              	.LBB123:
 479:Core/Src/SEGGER_RTT.c ****     pDst = (pRing->pBuffer + WrOff) + SEGGER_RTT_UNCACHED_OFF;
 2602              		.loc 1 479 5 is_stmt 1 view .LVU1098
 480:Core/Src/SEGGER_RTT.c ****     SEGGER_RTT_MEMCPY((void*)pDst, pData, NumBytesAtOnce);
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccSC4OZm.s 			page 82


 2603              		.loc 1 480 5 view .LVU1099
 481:Core/Src/SEGGER_RTT.c ****     NumBytesAtOnce = NumBytes - Rem;
 2604              		.loc 1 481 5 view .LVU1100
 2605 012a 2044     		add	r0, r0, r4
 482:Core/Src/SEGGER_RTT.c ****     pDst = pRing->pBuffer + SEGGER_RTT_UNCACHED_OFF;
 2606              		.loc 1 482 20 is_stmt 0 view .LVU1101
 2607 012c 4C44     		add	r4, r4, r9
 2608              	.LVL265:
 481:Core/Src/SEGGER_RTT.c ****     NumBytesAtOnce = NumBytes - Rem;
 2609              		.loc 1 481 5 view .LVU1102
 2610 012e 2A46     		mov	r2, r5
 482:Core/Src/SEGGER_RTT.c ****     pDst = pRing->pBuffer + SEGGER_RTT_UNCACHED_OFF;
 2611              		.loc 1 482 20 view .LVU1103
 2612 0130 E41B     		subs	r4, r4, r7
 481:Core/Src/SEGGER_RTT.c ****     NumBytesAtOnce = NumBytes - Rem;
 2613              		.loc 1 481 5 view .LVU1104
 2614 0132 FFF7FEFF 		bl	memcpy
 2615              	.LVL266:
 482:Core/Src/SEGGER_RTT.c ****     pDst = pRing->pBuffer + SEGGER_RTT_UNCACHED_OFF;
 2616              		.loc 1 482 5 is_stmt 1 view .LVU1105
 483:Core/Src/SEGGER_RTT.c ****     SEGGER_RTT_MEMCPY((void*)pDst, pData + Rem, NumBytesAtOnce);
 2617              		.loc 1 483 5 view .LVU1106
 484:Core/Src/SEGGER_RTT.c ****     RTT__DMB();                     // Force data write to be complete before writing the <WrOff>, 
 2618              		.loc 1 484 5 view .LVU1107
 2619 0136 7068     		ldr	r0, [r6, #4]
 2620 0138 0AEB0501 		add	r1, r10, r5
 2621 013c 2246     		mov	r2, r4
 2622 013e FFF7FEFF 		bl	memcpy
 2623              	.LVL267:
 485:Core/Src/SEGGER_RTT.c ****     pRing->WrOff = NumBytesAtOnce;
 2624              		.loc 1 485 5 view .LVU1108
 2625              		.syntax unified
 2626              	@ 485 "Core/Src/SEGGER_RTT.c" 1
 2627 0142 BFF35F8F 		dmb
 2628              	
 2629              	@ 0 "" 2
 485:Core/Src/SEGGER_RTT.c ****     pRing->WrOff = NumBytesAtOnce;
 2630              		.loc 1 485 15 view .LVU1109
 486:Core/Src/SEGGER_RTT.c **** #endif
 2631              		.loc 1 486 5 view .LVU1110
 486:Core/Src/SEGGER_RTT.c **** #endif
 2632              		.loc 1 486 18 is_stmt 0 view .LVU1111
 2633              		.thumb
 2634              		.syntax unified
 2635 0146 F460     		str	r4, [r6, #12]
 2636 0148 4F46     		mov	r7, r9
 2637 014a 6AE7     		b	.L99
 2638              	.L124:
 2639              		.align	2
 2640              	.L123:
 2641 014c 00000000 		.word	.LANCHOR0
 2642              	.LBE123:
 2643              	.LBE131:
 2644              		.cfi_endproc
 2645              	.LFE10:
 2647              		.section	.text.SEGGER_RTT_WriteNoLock,"ax",%progbits
 2648              		.align	1
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccSC4OZm.s 			page 83


 2649              		.p2align 2,,3
 2650              		.global	SEGGER_RTT_WriteNoLock
 2651              		.syntax unified
 2652              		.thumb
 2653              		.thumb_func
 2655              	SEGGER_RTT_WriteNoLock:
 2656              	.LVL268:
 2657              	.LFB11:
1075:Core/Src/SEGGER_RTT.c **** 
1076:Core/Src/SEGGER_RTT.c **** /*********************************************************************
1077:Core/Src/SEGGER_RTT.c **** *
1078:Core/Src/SEGGER_RTT.c **** *       SEGGER_RTT_WriteNoLock
1079:Core/Src/SEGGER_RTT.c **** *
1080:Core/Src/SEGGER_RTT.c **** *  Function description
1081:Core/Src/SEGGER_RTT.c **** *    Stores a specified number of characters in SEGGER RTT
1082:Core/Src/SEGGER_RTT.c **** *    control block which is then read by the host.
1083:Core/Src/SEGGER_RTT.c **** *    SEGGER_RTT_WriteNoLock does not lock the application.
1084:Core/Src/SEGGER_RTT.c **** *
1085:Core/Src/SEGGER_RTT.c **** *  Parameters
1086:Core/Src/SEGGER_RTT.c **** *    BufferIndex  Index of "Up"-buffer to be used (e.g. 0 for "Terminal").
1087:Core/Src/SEGGER_RTT.c **** *    pBuffer      Pointer to character array. Does not need to point to a \0 terminated string.
1088:Core/Src/SEGGER_RTT.c **** *    NumBytes     Number of bytes to be stored in the SEGGER RTT control block.
1089:Core/Src/SEGGER_RTT.c **** *
1090:Core/Src/SEGGER_RTT.c **** *  Return value
1091:Core/Src/SEGGER_RTT.c **** *    Number of bytes which have been stored in the "Up"-buffer.
1092:Core/Src/SEGGER_RTT.c **** *
1093:Core/Src/SEGGER_RTT.c **** *  Notes
1094:Core/Src/SEGGER_RTT.c **** *    (1) Data is stored according to buffer flags.
1095:Core/Src/SEGGER_RTT.c **** *    (2) For performance reasons this function does not call Init()
1096:Core/Src/SEGGER_RTT.c **** *        and may only be called after RTT has been initialized.
1097:Core/Src/SEGGER_RTT.c **** *        Either by calling SEGGER_RTT_Init() or calling another RTT API function first.
1098:Core/Src/SEGGER_RTT.c **** */
1099:Core/Src/SEGGER_RTT.c **** unsigned SEGGER_RTT_WriteNoLock(unsigned BufferIndex, const void* pBuffer, unsigned NumBytes) {
 2658              		.loc 1 1099 95 is_stmt 1 view -0
 2659              		.cfi_startproc
 2660              		@ args = 0, pretend = 0, frame = 8
 2661              		@ frame_needed = 0, uses_anonymous_args = 0
1100:Core/Src/SEGGER_RTT.c ****   unsigned              Status;
 2662              		.loc 1 1100 3 view .LVU1113
1101:Core/Src/SEGGER_RTT.c ****   unsigned              Avail;
 2663              		.loc 1 1101 3 view .LVU1114
1102:Core/Src/SEGGER_RTT.c ****   const char*           pData;
 2664              		.loc 1 1102 3 view .LVU1115
1103:Core/Src/SEGGER_RTT.c ****   SEGGER_RTT_BUFFER_UP* pRing;
 2665              		.loc 1 1103 3 view .LVU1116
1104:Core/Src/SEGGER_RTT.c ****   //
1105:Core/Src/SEGGER_RTT.c ****   // Get "to-host" ring buffer.
1106:Core/Src/SEGGER_RTT.c ****   //
1107:Core/Src/SEGGER_RTT.c ****   pData = (const char *)pBuffer;
 2666              		.loc 1 1107 3 view .LVU1117
1099:Core/Src/SEGGER_RTT.c ****   unsigned              Status;
 2667              		.loc 1 1099 95 is_stmt 0 view .LVU1118
 2668 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 2669              		.cfi_def_cfa_offset 36
 2670              		.cfi_offset 4, -36
 2671              		.cfi_offset 5, -32
 2672              		.cfi_offset 6, -28
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccSC4OZm.s 			page 84


 2673              		.cfi_offset 7, -24
 2674              		.cfi_offset 8, -20
 2675              		.cfi_offset 9, -16
 2676              		.cfi_offset 10, -12
 2677              		.cfi_offset 11, -8
 2678              		.cfi_offset 14, -4
1108:Core/Src/SEGGER_RTT.c ****   pRing = (SEGGER_RTT_BUFFER_UP*)((char*)&_SEGGER_RTT.aUp[BufferIndex] + SEGGER_RTT_UNCACHED_OFF); 
1109:Core/Src/SEGGER_RTT.c ****   //
1110:Core/Src/SEGGER_RTT.c ****   // How we output depends upon the mode...
1111:Core/Src/SEGGER_RTT.c ****   //
1112:Core/Src/SEGGER_RTT.c ****   switch (pRing->Flags) {
 2679              		.loc 1 1112 16 view .LVU1119
 2680 0004 DFF8BC91 		ldr	r9, .L152
 2681 0008 00EB4006 		add	r6, r0, r0, lsl #1
 2682 000c 09EBC606 		add	r6, r9, r6, lsl #3
1099:Core/Src/SEGGER_RTT.c ****   unsigned              Status;
 2683              		.loc 1 1099 95 view .LVU1120
 2684 0010 83B0     		sub	sp, sp, #12
 2685              		.cfi_def_cfa_offset 48
 2686              		.loc 1 1112 16 view .LVU1121
 2687 0012 F76A     		ldr	r7, [r6, #44]
 2688              		.loc 1 1112 3 view .LVU1122
 2689 0014 012F     		cmp	r7, #1
1099:Core/Src/SEGGER_RTT.c ****   unsigned              Status;
 2690              		.loc 1 1099 95 view .LVU1123
 2691 0016 8046     		mov	r8, r0
 2692 0018 8B46     		mov	fp, r1
 2693              	.LVL269:
1108:Core/Src/SEGGER_RTT.c ****   pRing = (SEGGER_RTT_BUFFER_UP*)((char*)&_SEGGER_RTT.aUp[BufferIndex] + SEGGER_RTT_UNCACHED_OFF); 
 2694              		.loc 1 1108 3 is_stmt 1 view .LVU1124
 2695              		.loc 1 1112 3 view .LVU1125
1099:Core/Src/SEGGER_RTT.c ****   unsigned              Status;
 2696              		.loc 1 1099 95 is_stmt 0 view .LVU1126
 2697 001a 9246     		mov	r10, r2
 2698              		.loc 1 1112 16 view .LVU1127
 2699 001c 4FEA4004 		lsl	r4, r0, #1
 2700              		.loc 1 1112 3 view .LVU1128
 2701 0020 07D0     		beq	.L126
 2702 0022 022F     		cmp	r7, #2
 2703 0024 4FD0     		beq	.L127
 2704 0026 5FB3     		cbz	r7, .L147
 2705 0028 0027     		movs	r7, #0
 2706              	.LVL270:
1113:Core/Src/SEGGER_RTT.c ****   case SEGGER_RTT_MODE_NO_BLOCK_SKIP:
1114:Core/Src/SEGGER_RTT.c ****     //
1115:Core/Src/SEGGER_RTT.c ****     // If we are in skip mode and there is no space for the whole
1116:Core/Src/SEGGER_RTT.c ****     // of this output, don't bother.
1117:Core/Src/SEGGER_RTT.c ****     //
1118:Core/Src/SEGGER_RTT.c ****     Avail = _GetAvailWriteSpace(pRing);
1119:Core/Src/SEGGER_RTT.c ****     if (Avail < NumBytes) {
1120:Core/Src/SEGGER_RTT.c ****       Status = 0u;
1121:Core/Src/SEGGER_RTT.c ****     } else {
1122:Core/Src/SEGGER_RTT.c ****       Status = NumBytes;
1123:Core/Src/SEGGER_RTT.c ****       _WriteNoCheck(pRing, pData, NumBytes);
1124:Core/Src/SEGGER_RTT.c ****     }
1125:Core/Src/SEGGER_RTT.c ****     break;
1126:Core/Src/SEGGER_RTT.c ****   case SEGGER_RTT_MODE_NO_BLOCK_TRIM:
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccSC4OZm.s 			page 85


1127:Core/Src/SEGGER_RTT.c ****     //
1128:Core/Src/SEGGER_RTT.c ****     // If we are in trim mode, trim to what we can output without blocking.
1129:Core/Src/SEGGER_RTT.c ****     //
1130:Core/Src/SEGGER_RTT.c ****     Avail = _GetAvailWriteSpace(pRing);
1131:Core/Src/SEGGER_RTT.c ****     Status = Avail < NumBytes ? Avail : NumBytes;
1132:Core/Src/SEGGER_RTT.c ****     _WriteNoCheck(pRing, pData, Status);
1133:Core/Src/SEGGER_RTT.c ****     break;
1134:Core/Src/SEGGER_RTT.c ****   case SEGGER_RTT_MODE_BLOCK_IF_FIFO_FULL:
1135:Core/Src/SEGGER_RTT.c ****     //
1136:Core/Src/SEGGER_RTT.c ****     // If we are in blocking mode, output everything.
1137:Core/Src/SEGGER_RTT.c ****     //
1138:Core/Src/SEGGER_RTT.c ****     Status = _WriteBlocking(pRing, pData, NumBytes);
1139:Core/Src/SEGGER_RTT.c ****     break;
1140:Core/Src/SEGGER_RTT.c ****   default:
1141:Core/Src/SEGGER_RTT.c ****     Status = 0u;
1142:Core/Src/SEGGER_RTT.c ****     break;
1143:Core/Src/SEGGER_RTT.c ****   }
1144:Core/Src/SEGGER_RTT.c ****   //
1145:Core/Src/SEGGER_RTT.c ****   // Finish up.
1146:Core/Src/SEGGER_RTT.c ****   //
1147:Core/Src/SEGGER_RTT.c ****   return Status;
 2707              		.loc 1 1147 3 is_stmt 1 view .LVU1129
 2708              	.L125:
1148:Core/Src/SEGGER_RTT.c **** }
 2709              		.loc 1 1148 1 is_stmt 0 view .LVU1130
 2710 002a 3846     		mov	r0, r7
 2711 002c 03B0     		add	sp, sp, #12
 2712              		.cfi_remember_state
 2713              		.cfi_def_cfa_offset 36
 2714              		@ sp needed
 2715 002e BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 2716              	.LVL271:
 2717              	.L126:
 2718              		.cfi_restore_state
1130:Core/Src/SEGGER_RTT.c ****     Status = Avail < NumBytes ? Avail : NumBytes;
 2719              		.loc 1 1130 5 is_stmt 1 view .LVU1131
 2720              	.LBB146:
 2721              	.LBI146:
 526:Core/Src/SEGGER_RTT.c ****   unsigned RdOff;
 2722              		.loc 1 526 17 view .LVU1132
 2723              	.LBB147:
 527:Core/Src/SEGGER_RTT.c ****   unsigned WrOff;
 2724              		.loc 1 527 3 view .LVU1133
 528:Core/Src/SEGGER_RTT.c ****   unsigned r;
 2725              		.loc 1 528 3 view .LVU1134
 529:Core/Src/SEGGER_RTT.c ****   //
 2726              		.loc 1 529 3 view .LVU1135
 534:Core/Src/SEGGER_RTT.c ****   WrOff = pRing->WrOff;
 2727              		.loc 1 534 3 view .LVU1136
 534:Core/Src/SEGGER_RTT.c ****   WrOff = pRing->WrOff;
 2728              		.loc 1 534 9 is_stmt 0 view .LVU1137
 2729 0032 B76A     		ldr	r7, [r6, #40]
 2730              	.LVL272:
 535:Core/Src/SEGGER_RTT.c ****   if (RdOff <= WrOff) {
 2731              		.loc 1 535 3 is_stmt 1 view .LVU1138
 535:Core/Src/SEGGER_RTT.c ****   if (RdOff <= WrOff) {
 2732              		.loc 1 535 9 is_stmt 0 view .LVU1139
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccSC4OZm.s 			page 86


 2733 0034 756A     		ldr	r5, [r6, #36]
 2734              	.LVL273:
 536:Core/Src/SEGGER_RTT.c ****     r = pRing->SizeOfBuffer - 1u - WrOff + RdOff;
 2735              		.loc 1 536 3 is_stmt 1 view .LVU1140
 536:Core/Src/SEGGER_RTT.c ****     r = pRing->SizeOfBuffer - 1u - WrOff + RdOff;
 2736              		.loc 1 536 6 is_stmt 0 view .LVU1141
 2737 0036 AF42     		cmp	r7, r5
 2738 0038 40F28480 		bls	.L148
 539:Core/Src/SEGGER_RTT.c ****   }
 2739              		.loc 1 539 5 is_stmt 1 view .LVU1142
 539:Core/Src/SEGGER_RTT.c ****   }
 2740              		.loc 1 539 7 is_stmt 0 view .LVU1143
 2741 003c 013F     		subs	r7, r7, #1
 2742              	.LVL274:
 539:Core/Src/SEGGER_RTT.c ****   }
 2743              		.loc 1 539 7 view .LVU1144
 2744 003e 7F1B     		subs	r7, r7, r5
 2745              	.LVL275:
 541:Core/Src/SEGGER_RTT.c **** }
 2746              		.loc 1 541 3 is_stmt 1 view .LVU1145
 541:Core/Src/SEGGER_RTT.c **** }
 2747              		.loc 1 541 3 is_stmt 0 view .LVU1146
 2748              	.LBE147:
 2749              	.LBE146:
1131:Core/Src/SEGGER_RTT.c ****     _WriteNoCheck(pRing, pData, Status);
 2750              		.loc 1 1131 5 is_stmt 1 view .LVU1147
 2751              	.LBB149:
 2752              	.LBB150:
 537:Core/Src/SEGGER_RTT.c ****   } else {
 2753              		.loc 1 537 14 is_stmt 0 view .LVU1148
 2754 0040 366A     		ldr	r6, [r6, #32]
 2755              	.LBE150:
 2756              	.LBE149:
1131:Core/Src/SEGGER_RTT.c ****     _WriteNoCheck(pRing, pData, Status);
 2757              		.loc 1 1131 12 view .LVU1149
 2758 0042 5745     		cmp	r7, r10
 2759 0044 28BF     		it	cs
 2760 0046 5746     		movcs	r7, r10
 2761              	.LVL276:
1132:Core/Src/SEGGER_RTT.c ****     break;
 2762              		.loc 1 1132 5 is_stmt 1 view .LVU1150
 2763              	.LBB152:
 2764              	.LBI152:
 436:Core/Src/SEGGER_RTT.c ****   unsigned NumBytesAtOnce;
 2765              		.loc 1 436 13 view .LVU1151
 2766              	.LBB153:
 437:Core/Src/SEGGER_RTT.c ****   unsigned WrOff;
 2767              		.loc 1 437 3 view .LVU1152
 438:Core/Src/SEGGER_RTT.c ****   unsigned Rem;
 2768              		.loc 1 438 3 view .LVU1153
 439:Core/Src/SEGGER_RTT.c ****   volatile char* pDst;
 2769              		.loc 1 439 3 view .LVU1154
 440:Core/Src/SEGGER_RTT.c **** 
 2770              		.loc 1 440 3 view .LVU1155
 442:Core/Src/SEGGER_RTT.c ****   Rem = pRing->SizeOfBuffer - WrOff;
 2771              		.loc 1 442 3 view .LVU1156
 443:Core/Src/SEGGER_RTT.c ****   if (Rem > NumBytes) {
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccSC4OZm.s 			page 87


 2772              		.loc 1 443 3 view .LVU1157
 443:Core/Src/SEGGER_RTT.c ****   if (Rem > NumBytes) {
 2773              		.loc 1 443 7 is_stmt 0 view .LVU1158
 2774 0048 721B     		subs	r2, r6, r5
 2775              	.LVL277:
 444:Core/Src/SEGGER_RTT.c ****     //
 2776              		.loc 1 444 3 is_stmt 1 view .LVU1159
 444:Core/Src/SEGGER_RTT.c ****     //
 2777              		.loc 1 444 6 is_stmt 0 view .LVU1160
 2778 004a 9742     		cmp	r7, r2
 2779 004c 80F08580 		bcs	.L134
 2780              	.L151:
 448:Core/Src/SEGGER_RTT.c **** #if SEGGER_RTT_MEMCPY_USE_BYTELOOP
 2781              		.loc 1 448 5 is_stmt 1 view .LVU1161
 2782              	.LVL278:
 457:Core/Src/SEGGER_RTT.c ****     RTT__DMB();                     // Force data write to be complete before writing the <WrOff>, 
 2783              		.loc 1 457 5 view .LVU1162
 448:Core/Src/SEGGER_RTT.c **** #if SEGGER_RTT_MEMCPY_USE_BYTELOOP
 2784              		.loc 1 448 18 is_stmt 0 view .LVU1163
 2785 0050 08F10103 		add	r3, r8, #1
 2786 0054 03EB4303 		add	r3, r3, r3, lsl #1
 2787 0058 09EBC303 		add	r3, r9, r3, lsl #3
 457:Core/Src/SEGGER_RTT.c ****     RTT__DMB();                     // Force data write to be complete before writing the <WrOff>, 
 2788              		.loc 1 457 5 view .LVU1164
 2789 005c 5946     		mov	r1, fp
 2790              	.LVL279:
 448:Core/Src/SEGGER_RTT.c **** #if SEGGER_RTT_MEMCPY_USE_BYTELOOP
 2791              		.loc 1 448 10 view .LVU1165
 2792 005e 5868     		ldr	r0, [r3, #4]
 2793              	.LVL280:
 457:Core/Src/SEGGER_RTT.c ****     RTT__DMB();                     // Force data write to be complete before writing the <WrOff>, 
 2794              		.loc 1 457 5 view .LVU1166
 2795 0060 3A46     		mov	r2, r7
 2796              	.LVL281:
 457:Core/Src/SEGGER_RTT.c ****     RTT__DMB();                     // Force data write to be complete before writing the <WrOff>, 
 2797              		.loc 1 457 5 view .LVU1167
 2798 0062 2844     		add	r0, r0, r5
 2799 0064 FFF7FEFF 		bl	memcpy
 2800              	.LVL282:
 458:Core/Src/SEGGER_RTT.c ****     pRing->WrOff = WrOff + NumBytes;
 2801              		.loc 1 458 5 is_stmt 1 view .LVU1168
 2802              		.syntax unified
 2803              	@ 458 "Core/Src/SEGGER_RTT.c" 1
 2804 0068 BFF35F8F 		dmb
 2805              	
 2806              	@ 0 "" 2
 458:Core/Src/SEGGER_RTT.c ****     pRing->WrOff = WrOff + NumBytes;
 2807              		.loc 1 458 15 view .LVU1169
 459:Core/Src/SEGGER_RTT.c **** #endif
 2808              		.loc 1 459 5 view .LVU1170
 459:Core/Src/SEGGER_RTT.c **** #endif
 2809              		.loc 1 459 18 is_stmt 0 view .LVU1171
 2810              		.thumb
 2811              		.syntax unified
 2812 006c A044     		add	r8, r8, r4
 2813              	.LVL283:
 459:Core/Src/SEGGER_RTT.c **** #endif
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccSC4OZm.s 			page 88


 2814              		.loc 1 459 18 view .LVU1172
 2815 006e 09EBC808 		add	r8, r9, r8, lsl #3
 459:Core/Src/SEGGER_RTT.c **** #endif
 2816              		.loc 1 459 26 view .LVU1173
 2817 0072 3D44     		add	r5, r5, r7
 2818              	.LVL284:
 459:Core/Src/SEGGER_RTT.c **** #endif
 2819              		.loc 1 459 26 view .LVU1174
 2820              	.LBE153:
 2821              	.LBE152:
 2822              		.loc 1 1148 1 view .LVU1175
 2823 0074 3846     		mov	r0, r7
 2824              	.LBB157:
 2825              	.LBB154:
 459:Core/Src/SEGGER_RTT.c **** #endif
 2826              		.loc 1 459 18 view .LVU1176
 2827 0076 C8F82450 		str	r5, [r8, #36]
 2828              	.LBE154:
 2829              	.LBE157:
 2830              		.loc 1 1148 1 view .LVU1177
 2831 007a 03B0     		add	sp, sp, #12
 2832              		.cfi_remember_state
 2833              		.cfi_def_cfa_offset 36
 2834              		@ sp needed
 2835 007c BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 2836              	.LVL285:
 2837              	.L147:
 2838              		.cfi_restore_state
1118:Core/Src/SEGGER_RTT.c ****     if (Avail < NumBytes) {
 2839              		.loc 1 1118 5 is_stmt 1 view .LVU1178
 2840              	.LBB158:
 2841              	.LBI149:
 526:Core/Src/SEGGER_RTT.c ****   unsigned RdOff;
 2842              		.loc 1 526 17 view .LVU1179
 2843              	.LBB151:
 527:Core/Src/SEGGER_RTT.c ****   unsigned WrOff;
 2844              		.loc 1 527 3 view .LVU1180
 528:Core/Src/SEGGER_RTT.c ****   unsigned r;
 2845              		.loc 1 528 3 view .LVU1181
 529:Core/Src/SEGGER_RTT.c ****   //
 2846              		.loc 1 529 3 view .LVU1182
 534:Core/Src/SEGGER_RTT.c ****   WrOff = pRing->WrOff;
 2847              		.loc 1 534 3 view .LVU1183
 534:Core/Src/SEGGER_RTT.c ****   WrOff = pRing->WrOff;
 2848              		.loc 1 534 9 is_stmt 0 view .LVU1184
 2849 0080 B36A     		ldr	r3, [r6, #40]
 2850              	.LVL286:
 535:Core/Src/SEGGER_RTT.c ****   if (RdOff <= WrOff) {
 2851              		.loc 1 535 3 is_stmt 1 view .LVU1185
 535:Core/Src/SEGGER_RTT.c ****   if (RdOff <= WrOff) {
 2852              		.loc 1 535 9 is_stmt 0 view .LVU1186
 2853 0082 756A     		ldr	r5, [r6, #36]
 2854              	.LVL287:
 536:Core/Src/SEGGER_RTT.c ****     r = pRing->SizeOfBuffer - 1u - WrOff + RdOff;
 2855              		.loc 1 536 3 is_stmt 1 view .LVU1187
 536:Core/Src/SEGGER_RTT.c ****     r = pRing->SizeOfBuffer - 1u - WrOff + RdOff;
 2856              		.loc 1 536 6 is_stmt 0 view .LVU1188
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccSC4OZm.s 			page 89


 2857 0084 AB42     		cmp	r3, r5
 537:Core/Src/SEGGER_RTT.c ****   } else {
 2858              		.loc 1 537 5 is_stmt 1 view .LVU1189
 537:Core/Src/SEGGER_RTT.c ****   } else {
 2859              		.loc 1 537 7 is_stmt 0 view .LVU1190
 2860 0086 9CBF     		itt	ls
 2861 0088 326A     		ldrls	r2, [r6, #32]
 2862              	.LVL288:
 537:Core/Src/SEGGER_RTT.c ****   } else {
 2863              		.loc 1 537 7 view .LVU1191
 2864 008a 9B18     		addls	r3, r3, r2
 2865              	.LVL289:
 539:Core/Src/SEGGER_RTT.c ****   }
 2866              		.loc 1 539 5 is_stmt 1 view .LVU1192
 539:Core/Src/SEGGER_RTT.c ****   }
 2867              		.loc 1 539 7 is_stmt 0 view .LVU1193
 2868 008c 013B     		subs	r3, r3, #1
 2869 008e 5B1B     		subs	r3, r3, r5
 2870              	.LVL290:
 541:Core/Src/SEGGER_RTT.c **** }
 2871              		.loc 1 541 3 is_stmt 1 view .LVU1194
 541:Core/Src/SEGGER_RTT.c **** }
 2872              		.loc 1 541 3 is_stmt 0 view .LVU1195
 2873              	.LBE151:
 2874              	.LBE158:
1119:Core/Src/SEGGER_RTT.c ****       Status = 0u;
 2875              		.loc 1 1119 5 is_stmt 1 view .LVU1196
1119:Core/Src/SEGGER_RTT.c ****       Status = 0u;
 2876              		.loc 1 1119 8 is_stmt 0 view .LVU1197
 2877 0090 9A45     		cmp	r10, r3
 2878 0092 CAD8     		bhi	.L125
1122:Core/Src/SEGGER_RTT.c ****       _WriteNoCheck(pRing, pData, NumBytes);
 2879              		.loc 1 1122 7 is_stmt 1 view .LVU1198
 2880              	.LVL291:
1123:Core/Src/SEGGER_RTT.c ****     }
 2881              		.loc 1 1123 7 view .LVU1199
 2882              	.LBB159:
 2883              	.LBI159:
 436:Core/Src/SEGGER_RTT.c ****   unsigned NumBytesAtOnce;
 2884              		.loc 1 436 13 view .LVU1200
 2885              	.LBB160:
 437:Core/Src/SEGGER_RTT.c ****   unsigned WrOff;
 2886              		.loc 1 437 3 view .LVU1201
 438:Core/Src/SEGGER_RTT.c ****   unsigned Rem;
 2887              		.loc 1 438 3 view .LVU1202
 439:Core/Src/SEGGER_RTT.c ****   volatile char* pDst;
 2888              		.loc 1 439 3 view .LVU1203
 440:Core/Src/SEGGER_RTT.c **** 
 2889              		.loc 1 440 3 view .LVU1204
 442:Core/Src/SEGGER_RTT.c ****   Rem = pRing->SizeOfBuffer - WrOff;
 2890              		.loc 1 442 3 view .LVU1205
 443:Core/Src/SEGGER_RTT.c ****   if (Rem > NumBytes) {
 2891              		.loc 1 443 3 view .LVU1206
 443:Core/Src/SEGGER_RTT.c ****   if (Rem > NumBytes) {
 2892              		.loc 1 443 14 is_stmt 0 view .LVU1207
 2893 0094 0444     		add	r4, r4, r0
 2894 0096 09EBC404 		add	r4, r9, r4, lsl #3
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccSC4OZm.s 			page 90


 448:Core/Src/SEGGER_RTT.c **** #if SEGGER_RTT_MEMCPY_USE_BYTELOOP
 2895              		.loc 1 448 18 view .LVU1208
 2896 009a 00F10108 		add	r8, r0, #1
 443:Core/Src/SEGGER_RTT.c ****   if (Rem > NumBytes) {
 2897              		.loc 1 443 14 view .LVU1209
 2898 009e 276A     		ldr	r7, [r4, #32]
 443:Core/Src/SEGGER_RTT.c ****   if (Rem > NumBytes) {
 2899              		.loc 1 443 7 view .LVU1210
 2900 00a0 7E1B     		subs	r6, r7, r5
 2901              	.LVL292:
 444:Core/Src/SEGGER_RTT.c ****     //
 2902              		.loc 1 444 3 is_stmt 1 view .LVU1211
 448:Core/Src/SEGGER_RTT.c **** #if SEGGER_RTT_MEMCPY_USE_BYTELOOP
 2903              		.loc 1 448 18 is_stmt 0 view .LVU1212
 2904 00a2 08EB4808 		add	r8, r8, r8, lsl #1
 444:Core/Src/SEGGER_RTT.c ****     //
 2905              		.loc 1 444 6 view .LVU1213
 2906 00a6 B245     		cmp	r10, r6
 448:Core/Src/SEGGER_RTT.c **** #if SEGGER_RTT_MEMCPY_USE_BYTELOOP
 2907              		.loc 1 448 18 view .LVU1214
 2908 00a8 09EBC808 		add	r8, r9, r8, lsl #3
 444:Core/Src/SEGGER_RTT.c ****     //
 2909              		.loc 1 444 6 view .LVU1215
 2910 00ac 76D2     		bcs	.L131
 448:Core/Src/SEGGER_RTT.c **** #if SEGGER_RTT_MEMCPY_USE_BYTELOOP
 2911              		.loc 1 448 5 is_stmt 1 view .LVU1216
 2912              	.LVL293:
 457:Core/Src/SEGGER_RTT.c ****     RTT__DMB();                     // Force data write to be complete before writing the <WrOff>, 
 2913              		.loc 1 457 5 view .LVU1217
 448:Core/Src/SEGGER_RTT.c **** #if SEGGER_RTT_MEMCPY_USE_BYTELOOP
 2914              		.loc 1 448 10 is_stmt 0 view .LVU1218
 2915 00ae D8F80400 		ldr	r0, [r8, #4]
 2916              	.LVL294:
 457:Core/Src/SEGGER_RTT.c ****     RTT__DMB();                     // Force data write to be complete before writing the <WrOff>, 
 2917              		.loc 1 457 5 view .LVU1219
 2918 00b2 5246     		mov	r2, r10
 2919 00b4 2844     		add	r0, r0, r5
 2920 00b6 FFF7FEFF 		bl	memcpy
 2921              	.LVL295:
 458:Core/Src/SEGGER_RTT.c ****     pRing->WrOff = WrOff + NumBytes;
 2922              		.loc 1 458 5 is_stmt 1 view .LVU1220
 2923              		.syntax unified
 2924              	@ 458 "Core/Src/SEGGER_RTT.c" 1
 2925 00ba BFF35F8F 		dmb
 2926              	
 2927              	@ 0 "" 2
 458:Core/Src/SEGGER_RTT.c ****     pRing->WrOff = WrOff + NumBytes;
 2928              		.loc 1 458 15 view .LVU1221
 459:Core/Src/SEGGER_RTT.c **** #endif
 2929              		.loc 1 459 5 view .LVU1222
 459:Core/Src/SEGGER_RTT.c **** #endif
 2930              		.loc 1 459 26 is_stmt 0 view .LVU1223
 2931              		.thumb
 2932              		.syntax unified
 2933 00be 5544     		add	r5, r5, r10
 2934              	.LVL296:
 459:Core/Src/SEGGER_RTT.c **** #endif
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccSC4OZm.s 			page 91


 2935              		.loc 1 459 18 view .LVU1224
 2936 00c0 6562     		str	r5, [r4, #36]
 2937 00c2 5746     		mov	r7, r10
 2938 00c4 B1E7     		b	.L125
 2939              	.LVL297:
 2940              	.L127:
 459:Core/Src/SEGGER_RTT.c **** #endif
 2941              		.loc 1 459 18 view .LVU1225
 2942              	.LBE160:
 2943              	.LBE159:
1138:Core/Src/SEGGER_RTT.c ****     break;
 2944              		.loc 1 1138 5 is_stmt 1 view .LVU1226
 2945              	.LBB162:
 2946              	.LBI162:
 374:Core/Src/SEGGER_RTT.c ****   unsigned NumBytesToWrite;
 2947              		.loc 1 374 17 view .LVU1227
 2948              	.LBB163:
 375:Core/Src/SEGGER_RTT.c ****   unsigned NumBytesWritten;
 2949              		.loc 1 375 3 view .LVU1228
 376:Core/Src/SEGGER_RTT.c ****   unsigned RdOff;
 2950              		.loc 1 376 3 view .LVU1229
 377:Core/Src/SEGGER_RTT.c ****   unsigned WrOff;
 2951              		.loc 1 377 3 view .LVU1230
 378:Core/Src/SEGGER_RTT.c ****   volatile char* pDst;
 2952              		.loc 1 378 3 view .LVU1231
 379:Core/Src/SEGGER_RTT.c ****   //
 2953              		.loc 1 379 3 view .LVU1232
 383:Core/Src/SEGGER_RTT.c ****   WrOff = pRing->WrOff;
 2954              		.loc 1 383 3 view .LVU1233
 384:Core/Src/SEGGER_RTT.c ****   do {
 2955              		.loc 1 384 3 view .LVU1234
 2956 00c6 00F10108 		add	r8, r0, #1
 394:Core/Src/SEGGER_RTT.c **** #if SEGGER_RTT_MEMCPY_USE_BYTELOOP
 2957              		.loc 1 394 18 is_stmt 0 view .LVU1235
 2958 00ca 08EB4808 		add	r8, r8, r8, lsl #1
 384:Core/Src/SEGGER_RTT.c ****   do {
 2959              		.loc 1 384 9 view .LVU1236
 2960 00ce 756A     		ldr	r5, [r6, #36]
 2961              	.LVL298:
 394:Core/Src/SEGGER_RTT.c **** #if SEGGER_RTT_MEMCPY_USE_BYTELOOP
 2962              		.loc 1 394 18 view .LVU1237
 2963 00d0 4FEAC808 		lsl	r8, r8, #3
 383:Core/Src/SEGGER_RTT.c ****   WrOff = pRing->WrOff;
 2964              		.loc 1 383 19 view .LVU1238
 2965 00d4 0027     		movs	r7, #0
 2966              	.LVL299:
 2967              	.L139:
 385:Core/Src/SEGGER_RTT.c ****     RdOff = pRing->RdOff;                         // May be changed by host (debug probe) in the me
 2968              		.loc 1 385 3 is_stmt 1 view .LVU1239
 386:Core/Src/SEGGER_RTT.c ****     if (RdOff > WrOff) {
 2969              		.loc 1 386 5 view .LVU1240
 388:Core/Src/SEGGER_RTT.c ****     } else {
 2970              		.loc 1 388 7 view .LVU1241
 390:Core/Src/SEGGER_RTT.c ****     }
 2971              		.loc 1 390 7 view .LVU1242
 386:Core/Src/SEGGER_RTT.c ****     if (RdOff > WrOff) {
 2972              		.loc 1 386 11 is_stmt 0 view .LVU1243
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccSC4OZm.s 			page 92


 2973 00d6 B36A     		ldr	r3, [r6, #40]
 2974              	.LVL300:
 387:Core/Src/SEGGER_RTT.c ****       NumBytesToWrite = RdOff - WrOff - 1u;
 2975              		.loc 1 387 5 is_stmt 1 view .LVU1244
 387:Core/Src/SEGGER_RTT.c ****       NumBytesToWrite = RdOff - WrOff - 1u;
 2976              		.loc 1 387 8 is_stmt 0 view .LVU1245
 2977 00d8 AB42     		cmp	r3, r5
 388:Core/Src/SEGGER_RTT.c ****     } else {
 2978              		.loc 1 388 23 view .LVU1246
 2979 00da 03F1FF32 		add	r2, r3, #-1
 387:Core/Src/SEGGER_RTT.c ****       NumBytesToWrite = RdOff - WrOff - 1u;
 2980              		.loc 1 387 8 view .LVU1247
 2981 00de 24D9     		bls	.L135
 2982              	.L150:
 390:Core/Src/SEGGER_RTT.c ****     }
 2983              		.loc 1 390 30 view .LVU1248
 2984 00e0 346A     		ldr	r4, [r6, #32]
 388:Core/Src/SEGGER_RTT.c ****     } else {
 2985              		.loc 1 388 23 view .LVU1249
 2986 00e2 531B     		subs	r3, r2, r5
 2987              	.LVL301:
 2988              	.L136:
 392:Core/Src/SEGGER_RTT.c ****     NumBytesToWrite = MIN(NumBytesToWrite, NumBytes);
 2989              		.loc 1 392 5 is_stmt 1 view .LVU1250
 2990 00e4 5345     		cmp	r3, r10
 394:Core/Src/SEGGER_RTT.c **** #if SEGGER_RTT_MEMCPY_USE_BYTELOOP
 2991              		.loc 1 394 18 is_stmt 0 view .LVU1251
 2992 00e6 09EB0802 		add	r2, r9, r8
 392:Core/Src/SEGGER_RTT.c ****     NumBytesToWrite = MIN(NumBytesToWrite, NumBytes);
 2993              		.loc 1 392 23 view .LVU1252
 2994 00ea A4EB0504 		sub	r4, r4, r5
 2995 00ee 28BF     		it	cs
 2996 00f0 5346     		movcs	r3, r10
 393:Core/Src/SEGGER_RTT.c ****     pDst = (pRing->pBuffer + WrOff) + SEGGER_RTT_UNCACHED_OFF;
 2997              		.loc 1 393 5 is_stmt 1 view .LVU1253
 393:Core/Src/SEGGER_RTT.c ****     pDst = (pRing->pBuffer + WrOff) + SEGGER_RTT_UNCACHED_OFF;
 2998              		.loc 1 393 21 is_stmt 0 view .LVU1254
 2999 00f2 9C42     		cmp	r4, r3
 394:Core/Src/SEGGER_RTT.c **** #if SEGGER_RTT_MEMCPY_USE_BYTELOOP
 3000              		.loc 1 394 10 view .LVU1255
 3001 00f4 5068     		ldr	r0, [r2, #4]
 393:Core/Src/SEGGER_RTT.c ****     pDst = (pRing->pBuffer + WrOff) + SEGGER_RTT_UNCACHED_OFF;
 3002              		.loc 1 393 21 view .LVU1256
 3003 00f6 28BF     		it	cs
 3004 00f8 1C46     		movcs	r4, r3
 3005              	.LVL302:
 394:Core/Src/SEGGER_RTT.c **** #if SEGGER_RTT_MEMCPY_USE_BYTELOOP
 3006              		.loc 1 394 5 is_stmt 1 view .LVU1257
 403:Core/Src/SEGGER_RTT.c ****     NumBytesWritten += NumBytesToWrite;
 3007              		.loc 1 403 5 view .LVU1258
 3008 00fa 2844     		add	r0, r0, r5
 3009 00fc 5946     		mov	r1, fp
 3010 00fe 2246     		mov	r2, r4
 3011 0100 FFF7FEFF 		bl	memcpy
 3012              	.LVL303:
 404:Core/Src/SEGGER_RTT.c ****     pBuffer         += NumBytesToWrite;
 3013              		.loc 1 404 5 view .LVU1259
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccSC4OZm.s 			page 93


 409:Core/Src/SEGGER_RTT.c ****       WrOff = 0u;
 3014              		.loc 1 409 8 is_stmt 0 view .LVU1260
 3015 0104 336A     		ldr	r3, [r6, #32]
 407:Core/Src/SEGGER_RTT.c **** #endif
 3016              		.loc 1 407 21 view .LVU1261
 3017 0106 2544     		add	r5, r5, r4
 3018              	.LVL304:
 412:Core/Src/SEGGER_RTT.c ****     pRing->WrOff = WrOff;
 3019              		.loc 1 412 5 is_stmt 1 view .LVU1262
 409:Core/Src/SEGGER_RTT.c ****       WrOff = 0u;
 3020              		.loc 1 409 8 is_stmt 0 view .LVU1263
 3021 0108 9D42     		cmp	r5, r3
 404:Core/Src/SEGGER_RTT.c ****     pBuffer         += NumBytesToWrite;
 3022              		.loc 1 404 21 view .LVU1264
 3023 010a 2744     		add	r7, r7, r4
 3024              	.LVL305:
 405:Core/Src/SEGGER_RTT.c ****     NumBytes        -= NumBytesToWrite;
 3025              		.loc 1 405 5 is_stmt 1 view .LVU1265
 405:Core/Src/SEGGER_RTT.c ****     NumBytes        -= NumBytesToWrite;
 3026              		.loc 1 405 21 is_stmt 0 view .LVU1266
 3027 010c A344     		add	fp, fp, r4
 3028              	.LVL306:
 406:Core/Src/SEGGER_RTT.c ****     WrOff           += NumBytesToWrite;
 3029              		.loc 1 406 5 is_stmt 1 view .LVU1267
 406:Core/Src/SEGGER_RTT.c ****     WrOff           += NumBytesToWrite;
 3030              		.loc 1 406 21 is_stmt 0 view .LVU1268
 3031 010e AAEB040A 		sub	r10, r10, r4
 3032              	.LVL307:
 407:Core/Src/SEGGER_RTT.c **** #endif
 3033              		.loc 1 407 5 is_stmt 1 view .LVU1269
 409:Core/Src/SEGGER_RTT.c ****       WrOff = 0u;
 3034              		.loc 1 409 5 view .LVU1270
 409:Core/Src/SEGGER_RTT.c ****       WrOff = 0u;
 3035              		.loc 1 409 8 is_stmt 0 view .LVU1271
 3036 0112 0FD0     		beq	.L149
 412:Core/Src/SEGGER_RTT.c ****     pRing->WrOff = WrOff;
 3037              		.loc 1 412 5 view .LVU1272
 3038              		.syntax unified
 3039              	@ 412 "Core/Src/SEGGER_RTT.c" 1
 3040 0114 BFF35F8F 		dmb
 3041              	
 3042              	@ 0 "" 2
 412:Core/Src/SEGGER_RTT.c ****     pRing->WrOff = WrOff;
 3043              		.loc 1 412 15 is_stmt 1 view .LVU1273
 413:Core/Src/SEGGER_RTT.c ****   } while (NumBytes);
 3044              		.loc 1 413 5 view .LVU1274
 413:Core/Src/SEGGER_RTT.c ****   } while (NumBytes);
 3045              		.loc 1 413 18 is_stmt 0 view .LVU1275
 3046              		.thumb
 3047              		.syntax unified
 3048 0118 7562     		str	r5, [r6, #36]
 414:Core/Src/SEGGER_RTT.c ****   return NumBytesWritten;
 3049              		.loc 1 414 12 is_stmt 1 view .LVU1276
 3050 011a BAF1000F 		cmp	r10, #0
 3051 011e 84D0     		beq	.L125
 385:Core/Src/SEGGER_RTT.c ****     RdOff = pRing->RdOff;                         // May be changed by host (debug probe) in the me
 3052              		.loc 1 385 3 view .LVU1277
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccSC4OZm.s 			page 94


 386:Core/Src/SEGGER_RTT.c ****     if (RdOff > WrOff) {
 3053              		.loc 1 386 5 view .LVU1278
 388:Core/Src/SEGGER_RTT.c ****     } else {
 3054              		.loc 1 388 7 view .LVU1279
 390:Core/Src/SEGGER_RTT.c ****     }
 3055              		.loc 1 390 7 view .LVU1280
 386:Core/Src/SEGGER_RTT.c ****     if (RdOff > WrOff) {
 3056              		.loc 1 386 11 is_stmt 0 view .LVU1281
 3057 0120 B36A     		ldr	r3, [r6, #40]
 3058              	.LVL308:
 387:Core/Src/SEGGER_RTT.c ****       NumBytesToWrite = RdOff - WrOff - 1u;
 3059              		.loc 1 387 5 is_stmt 1 view .LVU1282
 387:Core/Src/SEGGER_RTT.c ****       NumBytesToWrite = RdOff - WrOff - 1u;
 3060              		.loc 1 387 8 is_stmt 0 view .LVU1283
 3061 0122 AB42     		cmp	r3, r5
 388:Core/Src/SEGGER_RTT.c ****     } else {
 3062              		.loc 1 388 23 view .LVU1284
 3063 0124 03F1FF32 		add	r2, r3, #-1
 387:Core/Src/SEGGER_RTT.c ****       NumBytesToWrite = RdOff - WrOff - 1u;
 3064              		.loc 1 387 8 view .LVU1285
 3065 0128 DAD8     		bhi	.L150
 3066              	.LVL309:
 3067              	.L135:
 390:Core/Src/SEGGER_RTT.c ****     }
 3068              		.loc 1 390 30 view .LVU1286
 3069 012a 346A     		ldr	r4, [r6, #32]
 390:Core/Src/SEGGER_RTT.c ****     }
 3070              		.loc 1 390 23 view .LVU1287
 3071 012c 2344     		add	r3, r3, r4
 3072              	.LVL310:
 390:Core/Src/SEGGER_RTT.c ****     }
 3073              		.loc 1 390 23 view .LVU1288
 3074 012e 013B     		subs	r3, r3, #1
 3075 0130 5B1B     		subs	r3, r3, r5
 3076              	.LVL311:
 390:Core/Src/SEGGER_RTT.c ****     }
 3077              		.loc 1 390 23 view .LVU1289
 3078 0132 D7E7     		b	.L136
 3079              	.LVL312:
 3080              	.L149:
 412:Core/Src/SEGGER_RTT.c ****     pRing->WrOff = WrOff;
 3081              		.loc 1 412 5 is_stmt 1 view .LVU1290
 3082              		.syntax unified
 3083              	@ 412 "Core/Src/SEGGER_RTT.c" 1
 3084 0134 BFF35F8F 		dmb
 3085              	
 3086              	@ 0 "" 2
 412:Core/Src/SEGGER_RTT.c ****     pRing->WrOff = WrOff;
 3087              		.loc 1 412 15 view .LVU1291
 413:Core/Src/SEGGER_RTT.c ****   } while (NumBytes);
 3088              		.loc 1 413 5 view .LVU1292
 413:Core/Src/SEGGER_RTT.c ****   } while (NumBytes);
 3089              		.loc 1 413 18 is_stmt 0 view .LVU1293
 3090              		.thumb
 3091              		.syntax unified
 3092 0138 0025     		movs	r5, #0
 3093 013a 7562     		str	r5, [r6, #36]
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccSC4OZm.s 			page 95


 414:Core/Src/SEGGER_RTT.c ****   return NumBytesWritten;
 3094              		.loc 1 414 12 is_stmt 1 view .LVU1294
 3095 013c BAF1000F 		cmp	r10, #0
 3096 0140 C9D1     		bne	.L139
 3097 0142 72E7     		b	.L125
 3098              	.LVL313:
 3099              	.L148:
 414:Core/Src/SEGGER_RTT.c ****   return NumBytesWritten;
 3100              		.loc 1 414 12 is_stmt 0 view .LVU1295
 3101              	.LBE163:
 3102              	.LBE162:
 3103              	.LBB164:
 3104              	.LBB148:
 537:Core/Src/SEGGER_RTT.c ****   } else {
 3105              		.loc 1 537 5 is_stmt 1 view .LVU1296
 537:Core/Src/SEGGER_RTT.c ****   } else {
 3106              		.loc 1 537 14 is_stmt 0 view .LVU1297
 3107 0144 366A     		ldr	r6, [r6, #32]
 537:Core/Src/SEGGER_RTT.c ****   } else {
 3108              		.loc 1 537 7 view .LVU1298
 3109 0146 3744     		add	r7, r7, r6
 3110              	.LVL314:
 537:Core/Src/SEGGER_RTT.c ****   } else {
 3111              		.loc 1 537 7 view .LVU1299
 3112 0148 013F     		subs	r7, r7, #1
 3113 014a 7F1B     		subs	r7, r7, r5
 3114              	.LVL315:
 541:Core/Src/SEGGER_RTT.c **** }
 3115              		.loc 1 541 3 is_stmt 1 view .LVU1300
 541:Core/Src/SEGGER_RTT.c **** }
 3116              		.loc 1 541 3 is_stmt 0 view .LVU1301
 3117              	.LBE148:
 3118              	.LBE164:
1131:Core/Src/SEGGER_RTT.c ****     _WriteNoCheck(pRing, pData, Status);
 3119              		.loc 1 1131 5 is_stmt 1 view .LVU1302
1131:Core/Src/SEGGER_RTT.c ****     _WriteNoCheck(pRing, pData, Status);
 3120              		.loc 1 1131 12 is_stmt 0 view .LVU1303
 3121 014c 5745     		cmp	r7, r10
 3122 014e 28BF     		it	cs
 3123 0150 5746     		movcs	r7, r10
 3124              	.LVL316:
1132:Core/Src/SEGGER_RTT.c ****     break;
 3125              		.loc 1 1132 5 is_stmt 1 view .LVU1304
 3126              	.LBB165:
 436:Core/Src/SEGGER_RTT.c ****   unsigned NumBytesAtOnce;
 3127              		.loc 1 436 13 view .LVU1305
 3128              	.LBB155:
 437:Core/Src/SEGGER_RTT.c ****   unsigned WrOff;
 3129              		.loc 1 437 3 view .LVU1306
 438:Core/Src/SEGGER_RTT.c ****   unsigned Rem;
 3130              		.loc 1 438 3 view .LVU1307
 439:Core/Src/SEGGER_RTT.c ****   volatile char* pDst;
 3131              		.loc 1 439 3 view .LVU1308
 440:Core/Src/SEGGER_RTT.c **** 
 3132              		.loc 1 440 3 view .LVU1309
 442:Core/Src/SEGGER_RTT.c ****   Rem = pRing->SizeOfBuffer - WrOff;
 3133              		.loc 1 442 3 view .LVU1310
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccSC4OZm.s 			page 96


 443:Core/Src/SEGGER_RTT.c ****   if (Rem > NumBytes) {
 3134              		.loc 1 443 3 view .LVU1311
 443:Core/Src/SEGGER_RTT.c ****   if (Rem > NumBytes) {
 3135              		.loc 1 443 7 is_stmt 0 view .LVU1312
 3136 0152 721B     		subs	r2, r6, r5
 3137              	.LVL317:
 444:Core/Src/SEGGER_RTT.c ****     //
 3138              		.loc 1 444 3 is_stmt 1 view .LVU1313
 444:Core/Src/SEGGER_RTT.c ****     //
 3139              		.loc 1 444 6 is_stmt 0 view .LVU1314
 3140 0154 9742     		cmp	r7, r2
 3141 0156 FFF47BAF 		bcc	.L151
 3142              	.L134:
 479:Core/Src/SEGGER_RTT.c ****     pDst = (pRing->pBuffer + WrOff) + SEGGER_RTT_UNCACHED_OFF;
 3143              		.loc 1 479 5 is_stmt 1 view .LVU1315
 3144              	.LVL318:
 480:Core/Src/SEGGER_RTT.c ****     SEGGER_RTT_MEMCPY((void*)pDst, pData, NumBytesAtOnce);
 3145              		.loc 1 480 5 view .LVU1316
 481:Core/Src/SEGGER_RTT.c ****     NumBytesAtOnce = NumBytes - Rem;
 3146              		.loc 1 481 5 view .LVU1317
 480:Core/Src/SEGGER_RTT.c ****     SEGGER_RTT_MEMCPY((void*)pDst, pData, NumBytesAtOnce);
 3147              		.loc 1 480 18 is_stmt 0 view .LVU1318
 3148 015a 08F1010A 		add	r10, r8, #1
 3149              	.LVL319:
 480:Core/Src/SEGGER_RTT.c ****     SEGGER_RTT_MEMCPY((void*)pDst, pData, NumBytesAtOnce);
 3150              		.loc 1 480 18 view .LVU1319
 3151 015e 0AEB4A0A 		add	r10, r10, r10, lsl #1
 3152 0162 09EBCA0A 		add	r10, r9, r10, lsl #3
 481:Core/Src/SEGGER_RTT.c ****     NumBytesAtOnce = NumBytes - Rem;
 3153              		.loc 1 481 5 view .LVU1320
 3154 0166 5946     		mov	r1, fp
 3155              	.LVL320:
 480:Core/Src/SEGGER_RTT.c ****     SEGGER_RTT_MEMCPY((void*)pDst, pData, NumBytesAtOnce);
 3156              		.loc 1 480 10 view .LVU1321
 3157 0168 DAF80400 		ldr	r0, [r10, #4]
 3158              	.LVL321:
 481:Core/Src/SEGGER_RTT.c ****     NumBytesAtOnce = NumBytes - Rem;
 3159              		.loc 1 481 5 view .LVU1322
 3160 016c 0192     		str	r2, [sp, #4]
 3161 016e 2844     		add	r0, r0, r5
 3162 0170 FFF7FEFF 		bl	memcpy
 3163              	.LVL322:
 482:Core/Src/SEGGER_RTT.c ****     pDst = pRing->pBuffer + SEGGER_RTT_UNCACHED_OFF;
 3164              		.loc 1 482 5 is_stmt 1 view .LVU1323
 482:Core/Src/SEGGER_RTT.c ****     pDst = pRing->pBuffer + SEGGER_RTT_UNCACHED_OFF;
 3165              		.loc 1 482 20 is_stmt 0 view .LVU1324
 3166 0174 BE1B     		subs	r6, r7, r6
 484:Core/Src/SEGGER_RTT.c ****     RTT__DMB();                     // Force data write to be complete before writing the <WrOff>, 
 3167              		.loc 1 484 5 view .LVU1325
 3168 0176 019A     		ldr	r2, [sp, #4]
 3169 0178 DAF80400 		ldr	r0, [r10, #4]
 482:Core/Src/SEGGER_RTT.c ****     pDst = pRing->pBuffer + SEGGER_RTT_UNCACHED_OFF;
 3170              		.loc 1 482 20 view .LVU1326
 3171 017c 2E44     		add	r6, r6, r5
 3172              	.LVL323:
 483:Core/Src/SEGGER_RTT.c ****     SEGGER_RTT_MEMCPY((void*)pDst, pData + Rem, NumBytesAtOnce);
 3173              		.loc 1 483 5 is_stmt 1 view .LVU1327
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccSC4OZm.s 			page 97


 484:Core/Src/SEGGER_RTT.c ****     RTT__DMB();                     // Force data write to be complete before writing the <WrOff>, 
 3174              		.loc 1 484 5 view .LVU1328
 3175 017e 0BEB0201 		add	r1, fp, r2
 3176 0182 3246     		mov	r2, r6
 3177 0184 FFF7FEFF 		bl	memcpy
 3178              	.LVL324:
 485:Core/Src/SEGGER_RTT.c ****     pRing->WrOff = NumBytesAtOnce;
 3179              		.loc 1 485 5 view .LVU1329
 3180              		.syntax unified
 3181              	@ 485 "Core/Src/SEGGER_RTT.c" 1
 3182 0188 BFF35F8F 		dmb
 3183              	
 3184              	@ 0 "" 2
 485:Core/Src/SEGGER_RTT.c ****     pRing->WrOff = NumBytesAtOnce;
 3185              		.loc 1 485 15 view .LVU1330
 486:Core/Src/SEGGER_RTT.c **** #endif
 3186              		.loc 1 486 5 view .LVU1331
 486:Core/Src/SEGGER_RTT.c **** #endif
 3187              		.loc 1 486 18 is_stmt 0 view .LVU1332
 3188              		.thumb
 3189              		.syntax unified
 3190 018c 4444     		add	r4, r4, r8
 3191 018e 09EBC404 		add	r4, r9, r4, lsl #3
 3192              	.LBE155:
 3193              	.LBE165:
 3194              		.loc 1 1148 1 view .LVU1333
 3195 0192 3846     		mov	r0, r7
 3196              	.LBB166:
 3197              	.LBB156:
 486:Core/Src/SEGGER_RTT.c **** #endif
 3198              		.loc 1 486 18 view .LVU1334
 3199 0194 6662     		str	r6, [r4, #36]
 3200              	.LBE156:
 3201              	.LBE166:
 3202              		.loc 1 1148 1 view .LVU1335
 3203 0196 03B0     		add	sp, sp, #12
 3204              		.cfi_remember_state
 3205              		.cfi_def_cfa_offset 36
 3206              		@ sp needed
 3207 0198 BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 3208              	.LVL325:
 3209              	.L131:
 3210              		.cfi_restore_state
 3211              	.LBB167:
 3212              	.LBB161:
 479:Core/Src/SEGGER_RTT.c ****     pDst = (pRing->pBuffer + WrOff) + SEGGER_RTT_UNCACHED_OFF;
 3213              		.loc 1 479 5 is_stmt 1 view .LVU1336
 480:Core/Src/SEGGER_RTT.c ****     SEGGER_RTT_MEMCPY((void*)pDst, pData, NumBytesAtOnce);
 3214              		.loc 1 480 5 view .LVU1337
 481:Core/Src/SEGGER_RTT.c ****     NumBytesAtOnce = NumBytes - Rem;
 3215              		.loc 1 481 5 view .LVU1338
 480:Core/Src/SEGGER_RTT.c ****     SEGGER_RTT_MEMCPY((void*)pDst, pData, NumBytesAtOnce);
 3216              		.loc 1 480 10 is_stmt 0 view .LVU1339
 3217 019c D8F80400 		ldr	r0, [r8, #4]
 3218              	.LVL326:
 481:Core/Src/SEGGER_RTT.c ****     NumBytesAtOnce = NumBytes - Rem;
 3219              		.loc 1 481 5 view .LVU1340
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccSC4OZm.s 			page 98


 3220 01a0 2844     		add	r0, r0, r5
 482:Core/Src/SEGGER_RTT.c ****     pDst = pRing->pBuffer + SEGGER_RTT_UNCACHED_OFF;
 3221              		.loc 1 482 20 view .LVU1341
 3222 01a2 5544     		add	r5, r5, r10
 3223              	.LVL327:
 481:Core/Src/SEGGER_RTT.c ****     NumBytesAtOnce = NumBytes - Rem;
 3224              		.loc 1 481 5 view .LVU1342
 3225 01a4 3246     		mov	r2, r6
 482:Core/Src/SEGGER_RTT.c ****     pDst = pRing->pBuffer + SEGGER_RTT_UNCACHED_OFF;
 3226              		.loc 1 482 20 view .LVU1343
 3227 01a6 ED1B     		subs	r5, r5, r7
 481:Core/Src/SEGGER_RTT.c ****     NumBytesAtOnce = NumBytes - Rem;
 3228              		.loc 1 481 5 view .LVU1344
 3229 01a8 FFF7FEFF 		bl	memcpy
 3230              	.LVL328:
 482:Core/Src/SEGGER_RTT.c ****     pDst = pRing->pBuffer + SEGGER_RTT_UNCACHED_OFF;
 3231              		.loc 1 482 5 is_stmt 1 view .LVU1345
 483:Core/Src/SEGGER_RTT.c ****     SEGGER_RTT_MEMCPY((void*)pDst, pData + Rem, NumBytesAtOnce);
 3232              		.loc 1 483 5 view .LVU1346
 484:Core/Src/SEGGER_RTT.c ****     RTT__DMB();                     // Force data write to be complete before writing the <WrOff>, 
 3233              		.loc 1 484 5 view .LVU1347
 3234 01ac D8F80400 		ldr	r0, [r8, #4]
 3235 01b0 0BEB0601 		add	r1, fp, r6
 3236 01b4 2A46     		mov	r2, r5
 3237 01b6 FFF7FEFF 		bl	memcpy
 3238              	.LVL329:
 485:Core/Src/SEGGER_RTT.c ****     pRing->WrOff = NumBytesAtOnce;
 3239              		.loc 1 485 5 view .LVU1348
 3240              		.syntax unified
 3241              	@ 485 "Core/Src/SEGGER_RTT.c" 1
 3242 01ba BFF35F8F 		dmb
 3243              	
 3244              	@ 0 "" 2
 485:Core/Src/SEGGER_RTT.c ****     pRing->WrOff = NumBytesAtOnce;
 3245              		.loc 1 485 15 view .LVU1349
 486:Core/Src/SEGGER_RTT.c **** #endif
 3246              		.loc 1 486 5 view .LVU1350
 486:Core/Src/SEGGER_RTT.c **** #endif
 3247              		.loc 1 486 18 is_stmt 0 view .LVU1351
 3248              		.thumb
 3249              		.syntax unified
 3250 01be 6562     		str	r5, [r4, #36]
 3251 01c0 5746     		mov	r7, r10
 3252 01c2 32E7     		b	.L125
 3253              	.L153:
 3254              		.align	2
 3255              	.L152:
 3256 01c4 00000000 		.word	.LANCHOR0
 3257              	.LBE161:
 3258              	.LBE167:
 3259              		.cfi_endproc
 3260              	.LFE11:
 3262              		.section	.text.SEGGER_RTT_WriteDownBuffer,"ax",%progbits
 3263              		.align	1
 3264              		.p2align 2,,3
 3265              		.global	SEGGER_RTT_WriteDownBuffer
 3266              		.syntax unified
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccSC4OZm.s 			page 99


 3267              		.thumb
 3268              		.thumb_func
 3270              	SEGGER_RTT_WriteDownBuffer:
 3271              	.LVL330:
 3272              	.LFB12:
1149:Core/Src/SEGGER_RTT.c **** 
1150:Core/Src/SEGGER_RTT.c **** /*********************************************************************
1151:Core/Src/SEGGER_RTT.c **** *
1152:Core/Src/SEGGER_RTT.c **** *       SEGGER_RTT_WriteDownBuffer
1153:Core/Src/SEGGER_RTT.c **** *
1154:Core/Src/SEGGER_RTT.c **** *  Function description
1155:Core/Src/SEGGER_RTT.c **** *    Stores a specified number of characters in SEGGER RTT control block in a <Down> buffer.
1156:Core/Src/SEGGER_RTT.c **** *
1157:Core/Src/SEGGER_RTT.c **** *  Parameters
1158:Core/Src/SEGGER_RTT.c **** *    BufferIndex  Index of "Up"-buffer to be used (e.g. 0 for "Terminal").
1159:Core/Src/SEGGER_RTT.c **** *    pBuffer      Pointer to character array. Does not need to point to a \0 terminated string.
1160:Core/Src/SEGGER_RTT.c **** *    NumBytes     Number of bytes to be stored in the SEGGER RTT control block.
1161:Core/Src/SEGGER_RTT.c **** *
1162:Core/Src/SEGGER_RTT.c **** *  Return value
1163:Core/Src/SEGGER_RTT.c **** *    Number of bytes which have been stored in the "Down"-buffer.
1164:Core/Src/SEGGER_RTT.c **** *
1165:Core/Src/SEGGER_RTT.c **** *  Notes
1166:Core/Src/SEGGER_RTT.c **** *    (1) Data is stored according to buffer flags.
1167:Core/Src/SEGGER_RTT.c **** *
1168:Core/Src/SEGGER_RTT.c **** *  Additional information
1169:Core/Src/SEGGER_RTT.c **** *    This function must not be called when J-Link might also do RTT.
1170:Core/Src/SEGGER_RTT.c **** *    This function locks against all other RTT operations. I.e. during
1171:Core/Src/SEGGER_RTT.c **** *    the write operation, writing from the application is also locked.
1172:Core/Src/SEGGER_RTT.c **** *    If only one consumer writes to the down buffer, 
1173:Core/Src/SEGGER_RTT.c **** *    call SEGGER_RTT_WriteDownBufferNoLock() instead.
1174:Core/Src/SEGGER_RTT.c **** */
1175:Core/Src/SEGGER_RTT.c **** unsigned SEGGER_RTT_WriteDownBuffer(unsigned BufferIndex, const void* pBuffer, unsigned NumBytes) {
 3273              		.loc 1 1175 99 is_stmt 1 view -0
 3274              		.cfi_startproc
 3275              		@ args = 0, pretend = 0, frame = 0
 3276              		@ frame_needed = 0, uses_anonymous_args = 0
1176:Core/Src/SEGGER_RTT.c ****   unsigned Status;
 3277              		.loc 1 1176 3 view .LVU1353
 3278              	.LBB184:
1177:Core/Src/SEGGER_RTT.c **** 
1178:Core/Src/SEGGER_RTT.c ****   INIT();
 3279              		.loc 1 1178 3 view .LVU1354
 3280              		.loc 1 1178 3 view .LVU1355
 3281              		.loc 1 1178 3 view .LVU1356
 3282              		.loc 1 1178 3 view .LVU1357
 3283              	.LBE184:
1175:Core/Src/SEGGER_RTT.c ****   unsigned Status;
 3284              		.loc 1 1175 99 is_stmt 0 view .LVU1358
 3285 0000 2DE9F84F 		push	{r3, r4, r5, r6, r7, r8, r9, r10, fp, lr}
 3286              		.cfi_def_cfa_offset 40
 3287              		.cfi_offset 3, -40
 3288              		.cfi_offset 4, -36
 3289              		.cfi_offset 5, -32
 3290              		.cfi_offset 6, -28
 3291              		.cfi_offset 7, -24
 3292              		.cfi_offset 8, -20
 3293              		.cfi_offset 9, -16
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccSC4OZm.s 			page 100


 3294              		.cfi_offset 10, -12
 3295              		.cfi_offset 11, -8
 3296              		.cfi_offset 14, -4
 3297              	.LBB187:
 3298              		.loc 1 1178 3 view .LVU1359
 3299 0004 7B4C     		ldr	r4, .L181
 3300 0006 2378     		ldrb	r3, [r4]	@ zero_extendqisi2
 3301              	.LBE187:
1175:Core/Src/SEGGER_RTT.c ****   unsigned Status;
 3302              		.loc 1 1175 99 view .LVU1360
 3303 0008 0546     		mov	r5, r0
 3304 000a 8946     		mov	r9, r1
 3305 000c 9046     		mov	r8, r2
 3306              	.LBB188:
 3307              		.loc 1 1178 3 view .LVU1361
 3308 000e C3B1     		cbz	r3, .L176
 3309              	.LVL331:
 3310              	.L155:
 3311              		.loc 1 1178 3 is_stmt 1 discriminator 3 view .LVU1362
 3312              	.LBE188:
 3313              		.loc 1 1178 9 discriminator 3 view .LVU1363
 3314              	.LBB189:
1179:Core/Src/SEGGER_RTT.c ****   SEGGER_RTT_LOCK();
 3315              		.loc 1 1179 3 discriminator 3 view .LVU1364
 3316              		.loc 1 1179 3 discriminator 3 view .LVU1365
 3317              		.syntax unified
 3318              	@ 1179 "Core/Src/SEGGER_RTT.c" 1
 3319 0010 EFF3118A 		mrs   r10, basepri  
 3320 0014 4FF02001 		mov   r1, #32       
 3321 0018 81F31188 		msr   basepri, r1  
 3322              		
 3323              	@ 0 "" 2
 3324              	.LVL332:
 3325              		.loc 1 1179 20 discriminator 3 view .LVU1366
1180:Core/Src/SEGGER_RTT.c ****   Status = SEGGER_RTT_WriteDownBufferNoLock(BufferIndex, pBuffer, NumBytes);  // Call the non-locki
 3326              		.loc 1 1180 3 discriminator 3 view .LVU1367
 3327              		.thumb
 3328              		.syntax unified
 3329              	.LBB190:
 3330              	.LBI190:
1024:Core/Src/SEGGER_RTT.c ****   unsigned                Status;
 3331              		.loc 1 1024 10 discriminator 3 view .LVU1368
 3332              	.LBB191:
1025:Core/Src/SEGGER_RTT.c ****   unsigned                Avail;
 3333              		.loc 1 1025 3 discriminator 3 view .LVU1369
1026:Core/Src/SEGGER_RTT.c ****   const char*             pData;
 3334              		.loc 1 1026 3 discriminator 3 view .LVU1370
1027:Core/Src/SEGGER_RTT.c ****   SEGGER_RTT_BUFFER_UP*   pRing;
 3335              		.loc 1 1027 3 discriminator 3 view .LVU1371
1028:Core/Src/SEGGER_RTT.c ****   //
 3336              		.loc 1 1028 3 discriminator 3 view .LVU1372
1033:Core/Src/SEGGER_RTT.c ****   pRing = (SEGGER_RTT_BUFFER_UP*)((char*)&_SEGGER_RTT.aDown[BufferIndex] + SEGGER_RTT_UNCACHED_OFF)
 3337              		.loc 1 1033 3 discriminator 3 view .LVU1373
1034:Core/Src/SEGGER_RTT.c ****   //
 3338              		.loc 1 1034 3 discriminator 3 view .LVU1374
1034:Core/Src/SEGGER_RTT.c ****   //
 3339              		.loc 1 1034 9 is_stmt 0 discriminator 3 view .LVU1375
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccSC4OZm.s 			page 101


 3340 001c 05EB4505 		add	r5, r5, r5, lsl #1
 3341              	.LVL333:
1034:Core/Src/SEGGER_RTT.c ****   //
 3342              		.loc 1 1034 9 discriminator 3 view .LVU1376
 3343 0020 04EBC504 		add	r4, r4, r5, lsl #3
 3344 0024 6034     		adds	r4, r4, #96
 3345              	.LVL334:
1038:Core/Src/SEGGER_RTT.c ****   case SEGGER_RTT_MODE_NO_BLOCK_SKIP:
 3346              		.loc 1 1038 3 is_stmt 1 discriminator 3 view .LVU1377
1038:Core/Src/SEGGER_RTT.c ****   case SEGGER_RTT_MODE_NO_BLOCK_SKIP:
 3347              		.loc 1 1038 16 is_stmt 0 discriminator 3 view .LVU1378
 3348 0026 6769     		ldr	r7, [r4, #20]
1038:Core/Src/SEGGER_RTT.c ****   case SEGGER_RTT_MODE_NO_BLOCK_SKIP:
 3349              		.loc 1 1038 3 discriminator 3 view .LVU1379
 3350 0028 012F     		cmp	r7, #1
 3351 002a 00F09280 		beq	.L156
1038:Core/Src/SEGGER_RTT.c ****   case SEGGER_RTT_MODE_NO_BLOCK_SKIP:
 3352              		.loc 1 1038 3 view .LVU1380
 3353 002e 022F     		cmp	r7, #2
 3354 0030 59D0     		beq	.L157
 3355 0032 002F     		cmp	r7, #0
 3356 0034 3DD0     		beq	.L177
 3357 0036 0027     		movs	r7, #0
 3358              	.LVL335:
 3359              	.L158:
1073:Core/Src/SEGGER_RTT.c **** }
 3360              		.loc 1 1073 3 is_stmt 1 view .LVU1381
1073:Core/Src/SEGGER_RTT.c **** }
 3361              		.loc 1 1073 3 is_stmt 0 view .LVU1382
 3362              	.LBE191:
 3363              	.LBE190:
1181:Core/Src/SEGGER_RTT.c ****   SEGGER_RTT_UNLOCK();
 3364              		.loc 1 1181 3 is_stmt 1 view .LVU1383
 3365              		.syntax unified
 3366              	@ 1181 "Core/Src/SEGGER_RTT.c" 1
 3367 0038 8AF31188 		msr   basepri, r10  
 3368              		
 3369              	@ 0 "" 2
 3370              		.thumb
 3371              		.syntax unified
 3372              	.LBE189:
 3373              		.loc 1 1181 22 view .LVU1384
1182:Core/Src/SEGGER_RTT.c ****   return Status;
 3374              		.loc 1 1182 3 view .LVU1385
1183:Core/Src/SEGGER_RTT.c **** }
 3375              		.loc 1 1183 1 is_stmt 0 view .LVU1386
 3376 003c 3846     		mov	r0, r7
 3377 003e BDE8F88F 		pop	{r3, r4, r5, r6, r7, r8, r9, r10, fp, pc}
 3378              	.LVL336:
 3379              	.L176:
 3380              		.loc 1 1183 1 view .LVU1387
 3381 0042 03F0FF06 		and	r6, r3, #255
 3382              	.LBB222:
1178:Core/Src/SEGGER_RTT.c ****   SEGGER_RTT_LOCK();
 3383              		.loc 1 1178 3 is_stmt 1 view .LVU1388
 3384              	.LBB185:
 3385              	.LBI185:
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccSC4OZm.s 			page 102


 314:Core/Src/SEGGER_RTT.c ****   volatile SEGGER_RTT_CB* p;   // Volatile to make sure that compiler cannot change the order of ac
 3386              		.loc 1 314 13 view .LVU1389
 3387              	.LBB186:
 315:Core/Src/SEGGER_RTT.c ****   static const char _aInitStr[] = "\0\0\0\0\0\0TTR REGGES";  // Init complete ID string to make sur
 3388              		.loc 1 315 3 view .LVU1390
 316:Core/Src/SEGGER_RTT.c ****   unsigned i;
 3389              		.loc 1 316 3 view .LVU1391
 317:Core/Src/SEGGER_RTT.c ****   //
 3390              		.loc 1 317 3 view .LVU1392
 321:Core/Src/SEGGER_RTT.c ****   memset((SEGGER_RTT_CB*)p, 0, sizeof(_SEGGER_RTT));         // Make sure that the RTT CB is always
 3391              		.loc 1 321 3 view .LVU1393
 3392              	.LVL337:
 322:Core/Src/SEGGER_RTT.c ****   p->MaxNumUpBuffers    = SEGGER_RTT_MAX_NUM_UP_BUFFERS;
 3393              		.loc 1 322 3 view .LVU1394
 3394 0046 3146     		mov	r1, r6
 3395              	.LVL338:
 322:Core/Src/SEGGER_RTT.c ****   p->MaxNumUpBuffers    = SEGGER_RTT_MAX_NUM_UP_BUFFERS;
 3396              		.loc 1 322 3 is_stmt 0 view .LVU1395
 3397 0048 7822     		movs	r2, #120
 3398              	.LVL339:
 322:Core/Src/SEGGER_RTT.c ****   p->MaxNumUpBuffers    = SEGGER_RTT_MAX_NUM_UP_BUFFERS;
 3399              		.loc 1 322 3 view .LVU1396
 3400 004a 04F13000 		add	r0, r4, #48
 3401              	.LVL340:
 322:Core/Src/SEGGER_RTT.c ****   p->MaxNumUpBuffers    = SEGGER_RTT_MAX_NUM_UP_BUFFERS;
 3402              		.loc 1 322 3 view .LVU1397
 3403 004e FFF7FEFF 		bl	memset
 3404              	.LVL341:
 323:Core/Src/SEGGER_RTT.c ****   p->MaxNumDownBuffers  = SEGGER_RTT_MAX_NUM_DOWN_BUFFERS;
 3405              		.loc 1 323 3 is_stmt 1 view .LVU1398
 323:Core/Src/SEGGER_RTT.c ****   p->MaxNumDownBuffers  = SEGGER_RTT_MAX_NUM_DOWN_BUFFERS;
 3406              		.loc 1 323 25 is_stmt 0 view .LVU1399
 3407 0052 0322     		movs	r2, #3
 3408 0054 2261     		str	r2, [r4, #16]
 324:Core/Src/SEGGER_RTT.c ****   //
 3409              		.loc 1 324 3 is_stmt 1 view .LVU1400
 328:Core/Src/SEGGER_RTT.c ****   p->aUp[0].pBuffer       = _acUpBuffer;
 3410              		.loc 1 328 27 is_stmt 0 view .LVU1401
 3411 0056 684B     		ldr	r3, .L181+4
 324:Core/Src/SEGGER_RTT.c ****   //
 3412              		.loc 1 324 25 view .LVU1402
 3413 0058 6261     		str	r2, [r4, #20]
 328:Core/Src/SEGGER_RTT.c ****   p->aUp[0].pBuffer       = _acUpBuffer;
 3414              		.loc 1 328 3 is_stmt 1 view .LVU1403
 330:Core/Src/SEGGER_RTT.c ****   p->aUp[0].RdOff         = 0u;
 3415              		.loc 1 330 27 is_stmt 0 view .LVU1404
 3416 005a 4FF48061 		mov	r1, #1024
 329:Core/Src/SEGGER_RTT.c ****   p->aUp[0].SizeOfBuffer  = BUFFER_SIZE_UP;
 3417              		.loc 1 329 27 view .LVU1405
 3418 005e 674A     		ldr	r2, .L181+8
 328:Core/Src/SEGGER_RTT.c ****   p->aUp[0].pBuffer       = _acUpBuffer;
 3419              		.loc 1 328 27 view .LVU1406
 3420 0060 A361     		str	r3, [r4, #24]
 329:Core/Src/SEGGER_RTT.c ****   p->aUp[0].SizeOfBuffer  = BUFFER_SIZE_UP;
 3421              		.loc 1 329 3 is_stmt 1 view .LVU1407
 329:Core/Src/SEGGER_RTT.c ****   p->aUp[0].SizeOfBuffer  = BUFFER_SIZE_UP;
 3422              		.loc 1 329 27 is_stmt 0 view .LVU1408
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccSC4OZm.s 			page 103


 3423 0062 E261     		str	r2, [r4, #28]
 330:Core/Src/SEGGER_RTT.c ****   p->aUp[0].RdOff         = 0u;
 3424              		.loc 1 330 3 is_stmt 1 view .LVU1409
 330:Core/Src/SEGGER_RTT.c ****   p->aUp[0].RdOff         = 0u;
 3425              		.loc 1 330 27 is_stmt 0 view .LVU1410
 3426 0064 2162     		str	r1, [r4, #32]
 331:Core/Src/SEGGER_RTT.c ****   p->aUp[0].WrOff         = 0u;
 3427              		.loc 1 331 3 is_stmt 1 view .LVU1411
 338:Core/Src/SEGGER_RTT.c ****   p->aDown[0].SizeOfBuffer  = BUFFER_SIZE_DOWN;
 3428              		.loc 1 338 29 is_stmt 0 view .LVU1412
 3429 0066 664A     		ldr	r2, .L181+12
 331:Core/Src/SEGGER_RTT.c ****   p->aUp[0].WrOff         = 0u;
 3430              		.loc 1 331 27 view .LVU1413
 3431 0068 A662     		str	r6, [r4, #40]
 332:Core/Src/SEGGER_RTT.c ****   p->aUp[0].Flags         = SEGGER_RTT_MODE_DEFAULT;
 3432              		.loc 1 332 3 is_stmt 1 view .LVU1414
 332:Core/Src/SEGGER_RTT.c ****   p->aUp[0].Flags         = SEGGER_RTT_MODE_DEFAULT;
 3433              		.loc 1 332 27 is_stmt 0 view .LVU1415
 3434 006a 6662     		str	r6, [r4, #36]
 333:Core/Src/SEGGER_RTT.c ****   //
 3435              		.loc 1 333 3 is_stmt 1 view .LVU1416
 333:Core/Src/SEGGER_RTT.c ****   //
 3436              		.loc 1 333 27 is_stmt 0 view .LVU1417
 3437 006c E662     		str	r6, [r4, #44]
 337:Core/Src/SEGGER_RTT.c ****   p->aDown[0].pBuffer       = _acDownBuffer;
 3438              		.loc 1 337 3 is_stmt 1 view .LVU1418
 337:Core/Src/SEGGER_RTT.c ****   p->aDown[0].pBuffer       = _acDownBuffer;
 3439              		.loc 1 337 29 is_stmt 0 view .LVU1419
 3440 006e 2366     		str	r3, [r4, #96]
 338:Core/Src/SEGGER_RTT.c ****   p->aDown[0].SizeOfBuffer  = BUFFER_SIZE_DOWN;
 3441              		.loc 1 338 3 is_stmt 1 view .LVU1420
 339:Core/Src/SEGGER_RTT.c ****   p->aDown[0].RdOff         = 0u;
 3442              		.loc 1 339 29 is_stmt 0 view .LVU1421
 3443 0070 1023     		movs	r3, #16
 338:Core/Src/SEGGER_RTT.c ****   p->aDown[0].SizeOfBuffer  = BUFFER_SIZE_DOWN;
 3444              		.loc 1 338 29 view .LVU1422
 3445 0072 6266     		str	r2, [r4, #100]
 339:Core/Src/SEGGER_RTT.c ****   p->aDown[0].RdOff         = 0u;
 3446              		.loc 1 339 3 is_stmt 1 view .LVU1423
 339:Core/Src/SEGGER_RTT.c ****   p->aDown[0].RdOff         = 0u;
 3447              		.loc 1 339 29 is_stmt 0 view .LVU1424
 3448 0074 A366     		str	r3, [r4, #104]
 340:Core/Src/SEGGER_RTT.c ****   p->aDown[0].WrOff         = 0u;
 3449              		.loc 1 340 3 is_stmt 1 view .LVU1425
 340:Core/Src/SEGGER_RTT.c ****   p->aDown[0].WrOff         = 0u;
 3450              		.loc 1 340 29 is_stmt 0 view .LVU1426
 3451 0076 2667     		str	r6, [r4, #112]
 341:Core/Src/SEGGER_RTT.c ****   p->aDown[0].Flags         = SEGGER_RTT_MODE_DEFAULT;
 3452              		.loc 1 341 3 is_stmt 1 view .LVU1427
 341:Core/Src/SEGGER_RTT.c ****   p->aDown[0].Flags         = SEGGER_RTT_MODE_DEFAULT;
 3453              		.loc 1 341 29 is_stmt 0 view .LVU1428
 3454 0078 E666     		str	r6, [r4, #108]
 342:Core/Src/SEGGER_RTT.c ****   //
 3455              		.loc 1 342 3 is_stmt 1 view .LVU1429
 342:Core/Src/SEGGER_RTT.c ****   //
 3456              		.loc 1 342 29 is_stmt 0 view .LVU1430
 3457 007a 6667     		str	r6, [r4, #116]
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccSC4OZm.s 			page 104


 348:Core/Src/SEGGER_RTT.c ****   for (i = 0; i < sizeof(_aInitStr) - 1; ++i) {
 3458              		.loc 1 348 3 is_stmt 1 view .LVU1431
 3459              		.syntax unified
 3460              	@ 348 "Core/Src/SEGGER_RTT.c" 1
 3461 007c BFF35F8F 		dmb
 3462              	
 3463              	@ 0 "" 2
 348:Core/Src/SEGGER_RTT.c ****   for (i = 0; i < sizeof(_aInitStr) - 1; ++i) {
 3464              		.loc 1 348 13 view .LVU1432
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 3465              		.loc 1 349 3 view .LVU1433
 3466              	.LVL342:
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 3467              		.loc 1 349 17 view .LVU1434
 350:Core/Src/SEGGER_RTT.c ****   }
 3468              		.loc 1 350 5 view .LVU1435
 350:Core/Src/SEGGER_RTT.c ****   }
 3469              		.loc 1 350 16 is_stmt 0 view .LVU1436
 3470              		.thumb
 3471              		.syntax unified
 3472 0080 4521     		movs	r1, #69
 3473 0082 4720     		movs	r0, #71
 3474 0084 5327     		movs	r7, #83
 3475 0086 2770     		strb	r7, [r4]
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 3476              		.loc 1 349 42 is_stmt 1 view .LVU1437
 3477              	.LVL343:
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 3478              		.loc 1 349 17 view .LVU1438
 350:Core/Src/SEGGER_RTT.c ****   }
 3479              		.loc 1 350 5 view .LVU1439
 350:Core/Src/SEGGER_RTT.c ****   }
 3480              		.loc 1 350 16 is_stmt 0 view .LVU1440
 3481 0088 5222     		movs	r2, #82
 3482 008a 6170     		strb	r1, [r4, #1]
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 3483              		.loc 1 349 42 is_stmt 1 view .LVU1441
 3484              	.LVL344:
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 3485              		.loc 1 349 17 view .LVU1442
 350:Core/Src/SEGGER_RTT.c ****   }
 3486              		.loc 1 350 5 view .LVU1443
 350:Core/Src/SEGGER_RTT.c ****   }
 3487              		.loc 1 350 16 is_stmt 0 view .LVU1444
 3488 008c 5423     		movs	r3, #84
 3489 008e A070     		strb	r0, [r4, #2]
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 3490              		.loc 1 349 42 is_stmt 1 view .LVU1445
 3491              	.LVL345:
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 3492              		.loc 1 349 17 view .LVU1446
 350:Core/Src/SEGGER_RTT.c ****   }
 3493              		.loc 1 350 5 view .LVU1447
 350:Core/Src/SEGGER_RTT.c ****   }
 3494              		.loc 1 350 16 is_stmt 0 view .LVU1448
 3495 0090 E070     		strb	r0, [r4, #3]
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccSC4OZm.s 			page 105


 3496              		.loc 1 349 42 is_stmt 1 view .LVU1449
 3497              	.LVL346:
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 3498              		.loc 1 349 17 view .LVU1450
 350:Core/Src/SEGGER_RTT.c ****   }
 3499              		.loc 1 350 5 view .LVU1451
 350:Core/Src/SEGGER_RTT.c ****   }
 3500              		.loc 1 350 16 is_stmt 0 view .LVU1452
 3501 0092 2171     		strb	r1, [r4, #4]
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 3502              		.loc 1 349 42 is_stmt 1 view .LVU1453
 3503              	.LVL347:
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 3504              		.loc 1 349 17 view .LVU1454
 350:Core/Src/SEGGER_RTT.c ****   }
 3505              		.loc 1 350 5 view .LVU1455
 350:Core/Src/SEGGER_RTT.c ****   }
 3506              		.loc 1 350 16 is_stmt 0 view .LVU1456
 3507 0094 2021     		movs	r1, #32
 3508 0096 6271     		strb	r2, [r4, #5]
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 3509              		.loc 1 349 42 is_stmt 1 view .LVU1457
 3510              	.LVL348:
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 3511              		.loc 1 349 17 view .LVU1458
 350:Core/Src/SEGGER_RTT.c ****   }
 3512              		.loc 1 350 5 view .LVU1459
 350:Core/Src/SEGGER_RTT.c ****   }
 3513              		.loc 1 350 16 is_stmt 0 view .LVU1460
 3514 0098 A171     		strb	r1, [r4, #6]
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 3515              		.loc 1 349 42 is_stmt 1 view .LVU1461
 3516              	.LVL349:
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 3517              		.loc 1 349 17 view .LVU1462
 350:Core/Src/SEGGER_RTT.c ****   }
 3518              		.loc 1 350 5 view .LVU1463
 350:Core/Src/SEGGER_RTT.c ****   }
 3519              		.loc 1 350 16 is_stmt 0 view .LVU1464
 3520 009a E271     		strb	r2, [r4, #7]
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 3521              		.loc 1 349 42 is_stmt 1 view .LVU1465
 3522              	.LVL350:
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 3523              		.loc 1 349 17 view .LVU1466
 350:Core/Src/SEGGER_RTT.c ****   }
 3524              		.loc 1 350 5 view .LVU1467
 350:Core/Src/SEGGER_RTT.c ****   }
 3525              		.loc 1 350 16 is_stmt 0 view .LVU1468
 3526 009c 2372     		strb	r3, [r4, #8]
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 3527              		.loc 1 349 42 is_stmt 1 view .LVU1469
 3528              	.LVL351:
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 3529              		.loc 1 349 17 view .LVU1470
 350:Core/Src/SEGGER_RTT.c ****   }
 3530              		.loc 1 350 5 view .LVU1471
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccSC4OZm.s 			page 106


 350:Core/Src/SEGGER_RTT.c ****   }
 3531              		.loc 1 350 16 is_stmt 0 view .LVU1472
 3532 009e 6372     		strb	r3, [r4, #9]
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 3533              		.loc 1 349 42 is_stmt 1 view .LVU1473
 3534              	.LVL352:
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 3535              		.loc 1 349 17 view .LVU1474
 350:Core/Src/SEGGER_RTT.c ****   }
 3536              		.loc 1 350 5 view .LVU1475
 350:Core/Src/SEGGER_RTT.c ****   }
 3537              		.loc 1 350 16 is_stmt 0 view .LVU1476
 3538 00a0 A672     		strb	r6, [r4, #10]
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 3539              		.loc 1 349 42 is_stmt 1 view .LVU1477
 3540              	.LVL353:
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 3541              		.loc 1 349 17 view .LVU1478
 350:Core/Src/SEGGER_RTT.c ****   }
 3542              		.loc 1 350 5 view .LVU1479
 350:Core/Src/SEGGER_RTT.c ****   }
 3543              		.loc 1 350 16 is_stmt 0 view .LVU1480
 3544 00a2 E672     		strb	r6, [r4, #11]
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 3545              		.loc 1 349 42 is_stmt 1 view .LVU1481
 3546              	.LVL354:
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 3547              		.loc 1 349 17 view .LVU1482
 350:Core/Src/SEGGER_RTT.c ****   }
 3548              		.loc 1 350 5 view .LVU1483
 350:Core/Src/SEGGER_RTT.c ****   }
 3549              		.loc 1 350 16 is_stmt 0 view .LVU1484
 3550 00a4 2673     		strb	r6, [r4, #12]
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 3551              		.loc 1 349 42 is_stmt 1 view .LVU1485
 3552              	.LVL355:
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 3553              		.loc 1 349 17 view .LVU1486
 350:Core/Src/SEGGER_RTT.c ****   }
 3554              		.loc 1 350 5 view .LVU1487
 350:Core/Src/SEGGER_RTT.c ****   }
 3555              		.loc 1 350 16 is_stmt 0 view .LVU1488
 3556 00a6 6673     		strb	r6, [r4, #13]
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 3557              		.loc 1 349 42 is_stmt 1 view .LVU1489
 3558              	.LVL356:
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 3559              		.loc 1 349 17 view .LVU1490
 350:Core/Src/SEGGER_RTT.c ****   }
 3560              		.loc 1 350 5 view .LVU1491
 350:Core/Src/SEGGER_RTT.c ****   }
 3561              		.loc 1 350 16 is_stmt 0 view .LVU1492
 3562 00a8 A673     		strb	r6, [r4, #14]
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 3563              		.loc 1 349 42 is_stmt 1 view .LVU1493
 3564              	.LVL357:
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccSC4OZm.s 			page 107


 3565              		.loc 1 349 17 view .LVU1494
 350:Core/Src/SEGGER_RTT.c ****   }
 3566              		.loc 1 350 5 view .LVU1495
 350:Core/Src/SEGGER_RTT.c ****   }
 3567              		.loc 1 350 16 is_stmt 0 view .LVU1496
 3568 00aa E673     		strb	r6, [r4, #15]
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 3569              		.loc 1 349 42 is_stmt 1 view .LVU1497
 3570              	.LVL358:
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 3571              		.loc 1 349 17 view .LVU1498
 352:Core/Src/SEGGER_RTT.c **** }
 3572              		.loc 1 352 3 view .LVU1499
 3573              		.syntax unified
 3574              	@ 352 "Core/Src/SEGGER_RTT.c" 1
 3575 00ac BFF35F8F 		dmb
 3576              	
 3577              	@ 0 "" 2
 352:Core/Src/SEGGER_RTT.c **** }
 3578              		.loc 1 352 13 view .LVU1500
 353:Core/Src/SEGGER_RTT.c **** 
 3579              		.loc 1 353 1 is_stmt 0 view .LVU1501
 3580              		.thumb
 3581              		.syntax unified
 3582 00b0 AEE7     		b	.L155
 3583              	.LVL359:
 3584              	.L177:
 353:Core/Src/SEGGER_RTT.c **** 
 3585              		.loc 1 353 1 view .LVU1502
 3586              	.LBE186:
 3587              	.LBE185:
 3588              	.LBE222:
 3589              	.LBB223:
 3590              	.LBB219:
 3591              	.LBB216:
1044:Core/Src/SEGGER_RTT.c ****     if (Avail < NumBytes) {
 3592              		.loc 1 1044 5 is_stmt 1 view .LVU1503
 3593              	.LBB192:
 3594              	.LBI192:
 526:Core/Src/SEGGER_RTT.c ****   unsigned RdOff;
 3595              		.loc 1 526 17 view .LVU1504
 3596              	.LBB193:
 527:Core/Src/SEGGER_RTT.c ****   unsigned WrOff;
 3597              		.loc 1 527 3 view .LVU1505
 528:Core/Src/SEGGER_RTT.c ****   unsigned r;
 3598              		.loc 1 528 3 view .LVU1506
 529:Core/Src/SEGGER_RTT.c ****   //
 3599              		.loc 1 529 3 view .LVU1507
 534:Core/Src/SEGGER_RTT.c ****   WrOff = pRing->WrOff;
 3600              		.loc 1 534 3 view .LVU1508
 534:Core/Src/SEGGER_RTT.c ****   WrOff = pRing->WrOff;
 3601              		.loc 1 534 9 is_stmt 0 view .LVU1509
 3602 00b2 2369     		ldr	r3, [r4, #16]
 3603              	.LVL360:
 535:Core/Src/SEGGER_RTT.c ****   if (RdOff <= WrOff) {
 3604              		.loc 1 535 3 is_stmt 1 view .LVU1510
 535:Core/Src/SEGGER_RTT.c ****   if (RdOff <= WrOff) {
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccSC4OZm.s 			page 108


 3605              		.loc 1 535 9 is_stmt 0 view .LVU1511
 3606 00b4 E568     		ldr	r5, [r4, #12]
 3607              	.LVL361:
 536:Core/Src/SEGGER_RTT.c ****     r = pRing->SizeOfBuffer - 1u - WrOff + RdOff;
 3608              		.loc 1 536 3 is_stmt 1 view .LVU1512
 536:Core/Src/SEGGER_RTT.c ****     r = pRing->SizeOfBuffer - 1u - WrOff + RdOff;
 3609              		.loc 1 536 6 is_stmt 0 view .LVU1513
 3610 00b6 AB42     		cmp	r3, r5
 537:Core/Src/SEGGER_RTT.c ****   } else {
 3611              		.loc 1 537 5 is_stmt 1 view .LVU1514
 537:Core/Src/SEGGER_RTT.c ****   } else {
 3612              		.loc 1 537 7 is_stmt 0 view .LVU1515
 3613 00b8 9CBF     		itt	ls
 3614 00ba A268     		ldrls	r2, [r4, #8]
 3615 00bc 9B18     		addls	r3, r3, r2
 3616              	.LVL362:
 539:Core/Src/SEGGER_RTT.c ****   }
 3617              		.loc 1 539 5 is_stmt 1 view .LVU1516
 539:Core/Src/SEGGER_RTT.c ****   }
 3618              		.loc 1 539 7 is_stmt 0 view .LVU1517
 3619 00be 013B     		subs	r3, r3, #1
 3620 00c0 5B1B     		subs	r3, r3, r5
 3621              	.LVL363:
 541:Core/Src/SEGGER_RTT.c **** }
 3622              		.loc 1 541 3 is_stmt 1 view .LVU1518
 541:Core/Src/SEGGER_RTT.c **** }
 3623              		.loc 1 541 3 is_stmt 0 view .LVU1519
 3624              	.LBE193:
 3625              	.LBE192:
1045:Core/Src/SEGGER_RTT.c ****       Status = 0u;
 3626              		.loc 1 1045 5 is_stmt 1 view .LVU1520
1045:Core/Src/SEGGER_RTT.c ****       Status = 0u;
 3627              		.loc 1 1045 8 is_stmt 0 view .LVU1521
 3628 00c2 9845     		cmp	r8, r3
 3629 00c4 B8D8     		bhi	.L158
1048:Core/Src/SEGGER_RTT.c ****       _WriteNoCheck(pRing, pData, NumBytes);
 3630              		.loc 1 1048 7 is_stmt 1 view .LVU1522
 3631              	.LVL364:
1049:Core/Src/SEGGER_RTT.c ****     }
 3632              		.loc 1 1049 7 view .LVU1523
 3633              	.LBB196:
 3634              	.LBI196:
 436:Core/Src/SEGGER_RTT.c ****   unsigned NumBytesAtOnce;
 3635              		.loc 1 436 13 view .LVU1524
 3636              	.LBB197:
 437:Core/Src/SEGGER_RTT.c ****   unsigned WrOff;
 3637              		.loc 1 437 3 view .LVU1525
 438:Core/Src/SEGGER_RTT.c ****   unsigned Rem;
 3638              		.loc 1 438 3 view .LVU1526
 439:Core/Src/SEGGER_RTT.c ****   volatile char* pDst;
 3639              		.loc 1 439 3 view .LVU1527
 440:Core/Src/SEGGER_RTT.c **** 
 3640              		.loc 1 440 3 view .LVU1528
 442:Core/Src/SEGGER_RTT.c ****   Rem = pRing->SizeOfBuffer - WrOff;
 3641              		.loc 1 442 3 view .LVU1529
 443:Core/Src/SEGGER_RTT.c ****   if (Rem > NumBytes) {
 3642              		.loc 1 443 3 view .LVU1530
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccSC4OZm.s 			page 109


 443:Core/Src/SEGGER_RTT.c ****   if (Rem > NumBytes) {
 3643              		.loc 1 443 14 is_stmt 0 view .LVU1531
 3644 00c6 A768     		ldr	r7, [r4, #8]
 443:Core/Src/SEGGER_RTT.c ****   if (Rem > NumBytes) {
 3645              		.loc 1 443 7 view .LVU1532
 3646 00c8 7E1B     		subs	r6, r7, r5
 3647              	.LVL365:
 444:Core/Src/SEGGER_RTT.c ****     //
 3648              		.loc 1 444 3 is_stmt 1 view .LVU1533
 444:Core/Src/SEGGER_RTT.c ****     //
 3649              		.loc 1 444 6 is_stmt 0 view .LVU1534
 3650 00ca B045     		cmp	r8, r6
 3651 00cc 7FD2     		bcs	.L161
 448:Core/Src/SEGGER_RTT.c **** #if SEGGER_RTT_MEMCPY_USE_BYTELOOP
 3652              		.loc 1 448 5 is_stmt 1 view .LVU1535
 3653              	.LVL366:
 457:Core/Src/SEGGER_RTT.c ****     RTT__DMB();                     // Force data write to be complete before writing the <WrOff>, 
 3654              		.loc 1 457 5 view .LVU1536
 448:Core/Src/SEGGER_RTT.c **** #if SEGGER_RTT_MEMCPY_USE_BYTELOOP
 3655              		.loc 1 448 10 is_stmt 0 view .LVU1537
 3656 00ce 6068     		ldr	r0, [r4, #4]
 457:Core/Src/SEGGER_RTT.c ****     RTT__DMB();                     // Force data write to be complete before writing the <WrOff>, 
 3657              		.loc 1 457 5 view .LVU1538
 3658 00d0 4946     		mov	r1, r9
 3659 00d2 2844     		add	r0, r0, r5
 3660              	.LVL367:
 457:Core/Src/SEGGER_RTT.c ****     RTT__DMB();                     // Force data write to be complete before writing the <WrOff>, 
 3661              		.loc 1 457 5 view .LVU1539
 3662 00d4 4246     		mov	r2, r8
 3663 00d6 FFF7FEFF 		bl	memcpy
 3664              	.LVL368:
 458:Core/Src/SEGGER_RTT.c ****     pRing->WrOff = WrOff + NumBytes;
 3665              		.loc 1 458 5 is_stmt 1 view .LVU1540
 3666              		.syntax unified
 3667              	@ 458 "Core/Src/SEGGER_RTT.c" 1
 3668 00da BFF35F8F 		dmb
 3669              	
 3670              	@ 0 "" 2
 458:Core/Src/SEGGER_RTT.c ****     pRing->WrOff = WrOff + NumBytes;
 3671              		.loc 1 458 15 view .LVU1541
 459:Core/Src/SEGGER_RTT.c **** #endif
 3672              		.loc 1 459 5 view .LVU1542
 459:Core/Src/SEGGER_RTT.c **** #endif
 3673              		.loc 1 459 26 is_stmt 0 view .LVU1543
 3674              		.thumb
 3675              		.syntax unified
 3676 00de 4544     		add	r5, r5, r8
 3677              	.LVL369:
 459:Core/Src/SEGGER_RTT.c **** #endif
 3678              		.loc 1 459 18 view .LVU1544
 3679 00e0 E560     		str	r5, [r4, #12]
 3680 00e2 4746     		mov	r7, r8
 3681 00e4 A8E7     		b	.L158
 3682              	.LVL370:
 3683              	.L157:
 459:Core/Src/SEGGER_RTT.c **** #endif
 3684              		.loc 1 459 18 view .LVU1545
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccSC4OZm.s 			page 110


 3685              	.LBE197:
 3686              	.LBE196:
1064:Core/Src/SEGGER_RTT.c ****     break;
 3687              		.loc 1 1064 5 is_stmt 1 view .LVU1546
 3688              	.LBB199:
 3689              	.LBI199:
 374:Core/Src/SEGGER_RTT.c ****   unsigned NumBytesToWrite;
 3690              		.loc 1 374 17 view .LVU1547
 3691              	.LBB200:
 375:Core/Src/SEGGER_RTT.c ****   unsigned NumBytesWritten;
 3692              		.loc 1 375 3 view .LVU1548
 376:Core/Src/SEGGER_RTT.c ****   unsigned RdOff;
 3693              		.loc 1 376 3 view .LVU1549
 377:Core/Src/SEGGER_RTT.c ****   unsigned WrOff;
 3694              		.loc 1 377 3 view .LVU1550
 378:Core/Src/SEGGER_RTT.c ****   volatile char* pDst;
 3695              		.loc 1 378 3 view .LVU1551
 379:Core/Src/SEGGER_RTT.c ****   //
 3696              		.loc 1 379 3 view .LVU1552
 383:Core/Src/SEGGER_RTT.c ****   WrOff = pRing->WrOff;
 3697              		.loc 1 383 3 view .LVU1553
 384:Core/Src/SEGGER_RTT.c ****   do {
 3698              		.loc 1 384 3 view .LVU1554
 383:Core/Src/SEGGER_RTT.c ****   WrOff = pRing->WrOff;
 3699              		.loc 1 383 19 is_stmt 0 view .LVU1555
 3700 00e6 0027     		movs	r7, #0
 384:Core/Src/SEGGER_RTT.c ****   do {
 3701              		.loc 1 384 9 view .LVU1556
 3702 00e8 E668     		ldr	r6, [r4, #12]
 3703              	.LVL371:
 384:Core/Src/SEGGER_RTT.c ****   do {
 3704              		.loc 1 384 9 view .LVU1557
 3705              	.LBE200:
 3706              	.LBE199:
 3707              	.LBB202:
 3708              	.LBB194:
 537:Core/Src/SEGGER_RTT.c ****   } else {
 3709              		.loc 1 537 14 view .LVU1558
 3710 00ea A268     		ldr	r2, [r4, #8]
 3711              	.LBE194:
 3712              	.LBE202:
 3713              	.LBB203:
 3714              	.LBB201:
 413:Core/Src/SEGGER_RTT.c ****   } while (NumBytes);
 3715              		.loc 1 413 18 view .LVU1559
 3716 00ec BB46     		mov	fp, r7
 3717              	.LVL372:
 3718              	.L169:
 385:Core/Src/SEGGER_RTT.c ****     RdOff = pRing->RdOff;                         // May be changed by host (debug probe) in the me
 3719              		.loc 1 385 3 is_stmt 1 view .LVU1560
 386:Core/Src/SEGGER_RTT.c ****     if (RdOff > WrOff) {
 3720              		.loc 1 386 5 view .LVU1561
 388:Core/Src/SEGGER_RTT.c ****     } else {
 3721              		.loc 1 388 7 view .LVU1562
 390:Core/Src/SEGGER_RTT.c ****     }
 3722              		.loc 1 390 7 view .LVU1563
 386:Core/Src/SEGGER_RTT.c ****     if (RdOff > WrOff) {
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccSC4OZm.s 			page 111


 3723              		.loc 1 386 11 is_stmt 0 view .LVU1564
 3724 00ee 2369     		ldr	r3, [r4, #16]
 3725              	.LVL373:
 387:Core/Src/SEGGER_RTT.c ****       NumBytesToWrite = RdOff - WrOff - 1u;
 3726              		.loc 1 387 5 is_stmt 1 view .LVU1565
 394:Core/Src/SEGGER_RTT.c **** #if SEGGER_RTT_MEMCPY_USE_BYTELOOP
 3727              		.loc 1 394 10 is_stmt 0 view .LVU1566
 3728 00f0 6068     		ldr	r0, [r4, #4]
 387:Core/Src/SEGGER_RTT.c ****       NumBytesToWrite = RdOff - WrOff - 1u;
 3729              		.loc 1 387 8 view .LVU1567
 3730 00f2 B342     		cmp	r3, r6
 388:Core/Src/SEGGER_RTT.c ****     } else {
 3731              		.loc 1 388 23 view .LVU1568
 3732 00f4 03F1FF31 		add	r1, r3, #-1
 390:Core/Src/SEGGER_RTT.c ****     }
 3733              		.loc 1 390 23 view .LVU1569
 3734 00f8 98BF     		it	ls
 3735 00fa 03F1FF33 		addls	r3, r3, #-1
 3736              	.LVL374:
 392:Core/Src/SEGGER_RTT.c ****     NumBytesToWrite = MIN(NumBytesToWrite, NumBytes);
 3737              		.loc 1 392 23 view .LVU1570
 3738 00fe A2EB0605 		sub	r5, r2, r6
 390:Core/Src/SEGGER_RTT.c ****     }
 3739              		.loc 1 390 23 view .LVU1571
 3740 0102 96BF     		itet	ls
 3741 0104 9B18     		addls	r3, r3, r2
 388:Core/Src/SEGGER_RTT.c ****     } else {
 3742              		.loc 1 388 23 view .LVU1572
 3743 0106 8B1B     		subhi	r3, r1, r6
 390:Core/Src/SEGGER_RTT.c ****     }
 3744              		.loc 1 390 23 view .LVU1573
 3745 0108 9B1B     		subls	r3, r3, r6
 3746              	.LVL375:
 392:Core/Src/SEGGER_RTT.c ****     NumBytesToWrite = MIN(NumBytesToWrite, NumBytes);
 3747              		.loc 1 392 5 is_stmt 1 view .LVU1574
 393:Core/Src/SEGGER_RTT.c ****     pDst = (pRing->pBuffer + WrOff) + SEGGER_RTT_UNCACHED_OFF;
 3748              		.loc 1 393 5 view .LVU1575
 393:Core/Src/SEGGER_RTT.c ****     pDst = (pRing->pBuffer + WrOff) + SEGGER_RTT_UNCACHED_OFF;
 3749              		.loc 1 393 21 is_stmt 0 view .LVU1576
 3750 010a 4545     		cmp	r5, r8
 3751 010c 28BF     		it	cs
 3752 010e 4546     		movcs	r5, r8
 3753              	.LVL376:
 393:Core/Src/SEGGER_RTT.c ****     pDst = (pRing->pBuffer + WrOff) + SEGGER_RTT_UNCACHED_OFF;
 3754              		.loc 1 393 21 view .LVU1577
 3755 0110 9D42     		cmp	r5, r3
 3756 0112 28BF     		it	cs
 3757 0114 1D46     		movcs	r5, r3
 3758              	.LVL377:
 394:Core/Src/SEGGER_RTT.c **** #if SEGGER_RTT_MEMCPY_USE_BYTELOOP
 3759              		.loc 1 394 5 is_stmt 1 view .LVU1578
 403:Core/Src/SEGGER_RTT.c ****     NumBytesWritten += NumBytesToWrite;
 3760              		.loc 1 403 5 view .LVU1579
 3761 0116 4946     		mov	r1, r9
 3762              	.LVL378:
 403:Core/Src/SEGGER_RTT.c ****     NumBytesWritten += NumBytesToWrite;
 3763              		.loc 1 403 5 is_stmt 0 view .LVU1580
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccSC4OZm.s 			page 112


 3764 0118 3044     		add	r0, r0, r6
 3765              	.LVL379:
 403:Core/Src/SEGGER_RTT.c ****     NumBytesWritten += NumBytesToWrite;
 3766              		.loc 1 403 5 view .LVU1581
 3767 011a 2A46     		mov	r2, r5
 3768 011c FFF7FEFF 		bl	memcpy
 3769              	.LVL380:
 404:Core/Src/SEGGER_RTT.c ****     pBuffer         += NumBytesToWrite;
 3770              		.loc 1 404 5 is_stmt 1 view .LVU1582
 409:Core/Src/SEGGER_RTT.c ****       WrOff = 0u;
 3771              		.loc 1 409 23 is_stmt 0 view .LVU1583
 3772 0120 A268     		ldr	r2, [r4, #8]
 407:Core/Src/SEGGER_RTT.c **** #endif
 3773              		.loc 1 407 21 view .LVU1584
 3774 0122 2E44     		add	r6, r6, r5
 3775              	.LVL381:
 412:Core/Src/SEGGER_RTT.c ****     pRing->WrOff = WrOff;
 3776              		.loc 1 412 5 is_stmt 1 view .LVU1585
 409:Core/Src/SEGGER_RTT.c ****       WrOff = 0u;
 3777              		.loc 1 409 8 is_stmt 0 view .LVU1586
 3778 0124 9642     		cmp	r6, r2
 404:Core/Src/SEGGER_RTT.c ****     pBuffer         += NumBytesToWrite;
 3779              		.loc 1 404 21 view .LVU1587
 3780 0126 2F44     		add	r7, r7, r5
 3781              	.LVL382:
 405:Core/Src/SEGGER_RTT.c ****     NumBytes        -= NumBytesToWrite;
 3782              		.loc 1 405 5 is_stmt 1 view .LVU1588
 405:Core/Src/SEGGER_RTT.c ****     NumBytes        -= NumBytesToWrite;
 3783              		.loc 1 405 21 is_stmt 0 view .LVU1589
 3784 0128 A944     		add	r9, r9, r5
 3785              	.LVL383:
 406:Core/Src/SEGGER_RTT.c ****     WrOff           += NumBytesToWrite;
 3786              		.loc 1 406 5 is_stmt 1 view .LVU1590
 406:Core/Src/SEGGER_RTT.c ****     WrOff           += NumBytesToWrite;
 3787              		.loc 1 406 21 is_stmt 0 view .LVU1591
 3788 012a A8EB0508 		sub	r8, r8, r5
 3789              	.LVL384:
 407:Core/Src/SEGGER_RTT.c **** #endif
 3790              		.loc 1 407 5 is_stmt 1 view .LVU1592
 409:Core/Src/SEGGER_RTT.c ****       WrOff = 0u;
 3791              		.loc 1 409 5 view .LVU1593
 409:Core/Src/SEGGER_RTT.c ****       WrOff = 0u;
 3792              		.loc 1 409 8 is_stmt 0 view .LVU1594
 3793 012e 06D0     		beq	.L178
 412:Core/Src/SEGGER_RTT.c ****     pRing->WrOff = WrOff;
 3794              		.loc 1 412 5 view .LVU1595
 3795              		.syntax unified
 3796              	@ 412 "Core/Src/SEGGER_RTT.c" 1
 3797 0130 BFF35F8F 		dmb
 3798              	
 3799              	@ 0 "" 2
 412:Core/Src/SEGGER_RTT.c ****     pRing->WrOff = WrOff;
 3800              		.loc 1 412 15 is_stmt 1 view .LVU1596
 413:Core/Src/SEGGER_RTT.c ****   } while (NumBytes);
 3801              		.loc 1 413 5 view .LVU1597
 413:Core/Src/SEGGER_RTT.c ****   } while (NumBytes);
 3802              		.loc 1 413 18 is_stmt 0 view .LVU1598
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccSC4OZm.s 			page 113


 3803              		.thumb
 3804              		.syntax unified
 3805 0134 E660     		str	r6, [r4, #12]
 414:Core/Src/SEGGER_RTT.c ****   return NumBytesWritten;
 3806              		.loc 1 414 12 is_stmt 1 view .LVU1599
 3807 0136 B8F1000F 		cmp	r8, #0
 3808 013a D8D1     		bne	.L169
 3809 013c 7CE7     		b	.L158
 3810              	.L178:
 3811              	.LVL385:
 412:Core/Src/SEGGER_RTT.c ****     pRing->WrOff = WrOff;
 3812              		.loc 1 412 5 view .LVU1600
 3813              		.syntax unified
 3814              	@ 412 "Core/Src/SEGGER_RTT.c" 1
 3815 013e BFF35F8F 		dmb
 3816              	
 3817              	@ 0 "" 2
 412:Core/Src/SEGGER_RTT.c ****     pRing->WrOff = WrOff;
 3818              		.loc 1 412 15 view .LVU1601
 413:Core/Src/SEGGER_RTT.c ****   } while (NumBytes);
 3819              		.loc 1 413 5 view .LVU1602
 413:Core/Src/SEGGER_RTT.c ****   } while (NumBytes);
 3820              		.loc 1 413 18 is_stmt 0 view .LVU1603
 3821              		.thumb
 3822              		.syntax unified
 3823 0142 C4F80CB0 		str	fp, [r4, #12]
 414:Core/Src/SEGGER_RTT.c ****   return NumBytesWritten;
 3824              		.loc 1 414 12 is_stmt 1 view .LVU1604
 3825 0146 B8F1000F 		cmp	r8, #0
 3826 014a 3FF475AF 		beq	.L158
 410:Core/Src/SEGGER_RTT.c ****     }
 3827              		.loc 1 410 13 is_stmt 0 view .LVU1605
 3828 014e 0026     		movs	r6, #0
 3829 0150 CDE7     		b	.L169
 3830              	.LVL386:
 3831              	.L156:
 410:Core/Src/SEGGER_RTT.c ****     }
 3832              		.loc 1 410 13 view .LVU1606
 3833              	.LBE201:
 3834              	.LBE203:
1056:Core/Src/SEGGER_RTT.c ****     Status = Avail < NumBytes ? Avail : NumBytes;
 3835              		.loc 1 1056 5 is_stmt 1 view .LVU1607
 3836              	.LBB204:
 3837              	.LBI204:
 526:Core/Src/SEGGER_RTT.c ****   unsigned RdOff;
 3838              		.loc 1 526 17 view .LVU1608
 3839              	.LBB205:
 527:Core/Src/SEGGER_RTT.c ****   unsigned WrOff;
 3840              		.loc 1 527 3 view .LVU1609
 528:Core/Src/SEGGER_RTT.c ****   unsigned r;
 3841              		.loc 1 528 3 view .LVU1610
 529:Core/Src/SEGGER_RTT.c ****   //
 3842              		.loc 1 529 3 view .LVU1611
 534:Core/Src/SEGGER_RTT.c ****   WrOff = pRing->WrOff;
 3843              		.loc 1 534 3 view .LVU1612
 534:Core/Src/SEGGER_RTT.c ****   WrOff = pRing->WrOff;
 3844              		.loc 1 534 9 is_stmt 0 view .LVU1613
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccSC4OZm.s 			page 114


 3845 0152 2769     		ldr	r7, [r4, #16]
 3846              	.LVL387:
 535:Core/Src/SEGGER_RTT.c ****   if (RdOff <= WrOff) {
 3847              		.loc 1 535 3 is_stmt 1 view .LVU1614
 535:Core/Src/SEGGER_RTT.c ****   if (RdOff <= WrOff) {
 3848              		.loc 1 535 9 is_stmt 0 view .LVU1615
 3849 0154 E568     		ldr	r5, [r4, #12]
 3850              	.LVL388:
 536:Core/Src/SEGGER_RTT.c ****     r = pRing->SizeOfBuffer - 1u - WrOff + RdOff;
 3851              		.loc 1 536 3 is_stmt 1 view .LVU1616
 536:Core/Src/SEGGER_RTT.c ****     r = pRing->SizeOfBuffer - 1u - WrOff + RdOff;
 3852              		.loc 1 536 6 is_stmt 0 view .LVU1617
 3853 0156 AF42     		cmp	r7, r5
 3854 0158 18D9     		bls	.L179
 539:Core/Src/SEGGER_RTT.c ****   }
 3855              		.loc 1 539 5 is_stmt 1 view .LVU1618
 539:Core/Src/SEGGER_RTT.c ****   }
 3856              		.loc 1 539 7 is_stmt 0 view .LVU1619
 3857 015a 013F     		subs	r7, r7, #1
 3858              	.LVL389:
 539:Core/Src/SEGGER_RTT.c ****   }
 3859              		.loc 1 539 7 view .LVU1620
 3860 015c 7F1B     		subs	r7, r7, r5
 3861              	.LVL390:
 539:Core/Src/SEGGER_RTT.c ****   }
 3862              		.loc 1 539 7 view .LVU1621
 3863              	.LBE205:
 3864              	.LBE204:
 3865              	.LBB208:
 3866              	.LBB195:
 537:Core/Src/SEGGER_RTT.c ****   } else {
 3867              		.loc 1 537 14 view .LVU1622
 3868 015e A668     		ldr	r6, [r4, #8]
 537:Core/Src/SEGGER_RTT.c ****   } else {
 3869              		.loc 1 537 14 view .LVU1623
 3870              	.LBE195:
 3871              	.LBE208:
 3872              	.LBB209:
 3873              	.LBB206:
 541:Core/Src/SEGGER_RTT.c **** }
 3874              		.loc 1 541 3 is_stmt 1 view .LVU1624
 3875              	.LVL391:
 541:Core/Src/SEGGER_RTT.c **** }
 3876              		.loc 1 541 3 is_stmt 0 view .LVU1625
 3877              	.LBE206:
 3878              	.LBE209:
1057:Core/Src/SEGGER_RTT.c ****     _WriteNoCheck(pRing, pData, Status);
 3879              		.loc 1 1057 5 is_stmt 1 view .LVU1626
1057:Core/Src/SEGGER_RTT.c ****     _WriteNoCheck(pRing, pData, Status);
 3880              		.loc 1 1057 12 is_stmt 0 view .LVU1627
 3881 0160 4745     		cmp	r7, r8
 3882 0162 28BF     		it	cs
 3883 0164 4746     		movcs	r7, r8
 3884              	.LVL392:
1058:Core/Src/SEGGER_RTT.c ****     break;
 3885              		.loc 1 1058 5 is_stmt 1 view .LVU1628
 3886              	.LBB210:
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccSC4OZm.s 			page 115


 3887              	.LBI210:
 436:Core/Src/SEGGER_RTT.c ****   unsigned NumBytesAtOnce;
 3888              		.loc 1 436 13 view .LVU1629
 3889              	.LBB211:
 437:Core/Src/SEGGER_RTT.c ****   unsigned WrOff;
 3890              		.loc 1 437 3 view .LVU1630
 438:Core/Src/SEGGER_RTT.c ****   unsigned Rem;
 3891              		.loc 1 438 3 view .LVU1631
 439:Core/Src/SEGGER_RTT.c ****   volatile char* pDst;
 3892              		.loc 1 439 3 view .LVU1632
 440:Core/Src/SEGGER_RTT.c **** 
 3893              		.loc 1 440 3 view .LVU1633
 442:Core/Src/SEGGER_RTT.c ****   Rem = pRing->SizeOfBuffer - WrOff;
 3894              		.loc 1 442 3 view .LVU1634
 443:Core/Src/SEGGER_RTT.c ****   if (Rem > NumBytes) {
 3895              		.loc 1 443 3 view .LVU1635
 443:Core/Src/SEGGER_RTT.c ****   if (Rem > NumBytes) {
 3896              		.loc 1 443 7 is_stmt 0 view .LVU1636
 3897 0166 A6EB0508 		sub	r8, r6, r5
 3898              	.LVL393:
 444:Core/Src/SEGGER_RTT.c ****     //
 3899              		.loc 1 444 3 is_stmt 1 view .LVU1637
 444:Core/Src/SEGGER_RTT.c ****     //
 3900              		.loc 1 444 6 is_stmt 0 view .LVU1638
 3901 016a 4745     		cmp	r7, r8
 3902 016c 19D2     		bcs	.L164
 3903              	.L180:
 448:Core/Src/SEGGER_RTT.c **** #if SEGGER_RTT_MEMCPY_USE_BYTELOOP
 3904              		.loc 1 448 5 is_stmt 1 view .LVU1639
 3905              	.LVL394:
 457:Core/Src/SEGGER_RTT.c ****     RTT__DMB();                     // Force data write to be complete before writing the <WrOff>, 
 3906              		.loc 1 457 5 view .LVU1640
 448:Core/Src/SEGGER_RTT.c **** #if SEGGER_RTT_MEMCPY_USE_BYTELOOP
 3907              		.loc 1 448 10 is_stmt 0 view .LVU1641
 3908 016e 6068     		ldr	r0, [r4, #4]
 457:Core/Src/SEGGER_RTT.c ****     RTT__DMB();                     // Force data write to be complete before writing the <WrOff>, 
 3909              		.loc 1 457 5 view .LVU1642
 3910 0170 4946     		mov	r1, r9
 3911 0172 2844     		add	r0, r0, r5
 3912              	.LVL395:
 457:Core/Src/SEGGER_RTT.c ****     RTT__DMB();                     // Force data write to be complete before writing the <WrOff>, 
 3913              		.loc 1 457 5 view .LVU1643
 3914 0174 3A46     		mov	r2, r7
 3915 0176 FFF7FEFF 		bl	memcpy
 3916              	.LVL396:
 458:Core/Src/SEGGER_RTT.c ****     pRing->WrOff = WrOff + NumBytes;
 3917              		.loc 1 458 5 is_stmt 1 view .LVU1644
 3918              		.syntax unified
 3919              	@ 458 "Core/Src/SEGGER_RTT.c" 1
 3920 017a BFF35F8F 		dmb
 3921              	
 3922              	@ 0 "" 2
 458:Core/Src/SEGGER_RTT.c ****     pRing->WrOff = WrOff + NumBytes;
 3923              		.loc 1 458 15 view .LVU1645
 459:Core/Src/SEGGER_RTT.c **** #endif
 3924              		.loc 1 459 5 view .LVU1646
 459:Core/Src/SEGGER_RTT.c **** #endif
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccSC4OZm.s 			page 116


 3925              		.loc 1 459 26 is_stmt 0 view .LVU1647
 3926              		.thumb
 3927              		.syntax unified
 3928 017e 3D44     		add	r5, r5, r7
 3929              	.LVL397:
 459:Core/Src/SEGGER_RTT.c **** #endif
 3930              		.loc 1 459 18 view .LVU1648
 3931 0180 E560     		str	r5, [r4, #12]
 3932              	.LVL398:
 459:Core/Src/SEGGER_RTT.c **** #endif
 3933              		.loc 1 459 18 view .LVU1649
 3934              	.LBE211:
 3935              	.LBE210:
1073:Core/Src/SEGGER_RTT.c **** }
 3936              		.loc 1 1073 3 is_stmt 1 view .LVU1650
1073:Core/Src/SEGGER_RTT.c **** }
 3937              		.loc 1 1073 3 is_stmt 0 view .LVU1651
 3938              	.LBE216:
 3939              	.LBE219:
1181:Core/Src/SEGGER_RTT.c ****   return Status;
 3940              		.loc 1 1181 3 is_stmt 1 view .LVU1652
 3941              		.syntax unified
 3942              	@ 1181 "Core/Src/SEGGER_RTT.c" 1
 3943 0182 8AF31188 		msr   basepri, r10  
 3944              		
 3945              	@ 0 "" 2
 3946              		.thumb
 3947              		.syntax unified
 3948              	.LBE223:
1181:Core/Src/SEGGER_RTT.c ****   return Status;
 3949              		.loc 1 1181 22 view .LVU1653
1182:Core/Src/SEGGER_RTT.c **** }
 3950              		.loc 1 1182 3 view .LVU1654
 3951              		.loc 1 1183 1 is_stmt 0 view .LVU1655
 3952 0186 3846     		mov	r0, r7
 3953 0188 BDE8F88F 		pop	{r3, r4, r5, r6, r7, r8, r9, r10, fp, pc}
 3954              	.LVL399:
 3955              	.L179:
 3956              	.LBB224:
 3957              	.LBB220:
 3958              	.LBB217:
 3959              	.LBB213:
 3960              	.LBB207:
 537:Core/Src/SEGGER_RTT.c ****   } else {
 3961              		.loc 1 537 5 is_stmt 1 view .LVU1656
 537:Core/Src/SEGGER_RTT.c ****   } else {
 3962              		.loc 1 537 14 is_stmt 0 view .LVU1657
 3963 018c A668     		ldr	r6, [r4, #8]
 537:Core/Src/SEGGER_RTT.c ****   } else {
 3964              		.loc 1 537 7 view .LVU1658
 3965 018e 3744     		add	r7, r7, r6
 3966              	.LVL400:
 537:Core/Src/SEGGER_RTT.c ****   } else {
 3967              		.loc 1 537 7 view .LVU1659
 3968 0190 013F     		subs	r7, r7, #1
 3969 0192 7F1B     		subs	r7, r7, r5
 3970              	.LVL401:
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccSC4OZm.s 			page 117


 541:Core/Src/SEGGER_RTT.c **** }
 3971              		.loc 1 541 3 is_stmt 1 view .LVU1660
 541:Core/Src/SEGGER_RTT.c **** }
 3972              		.loc 1 541 3 is_stmt 0 view .LVU1661
 3973              	.LBE207:
 3974              	.LBE213:
1057:Core/Src/SEGGER_RTT.c ****     _WriteNoCheck(pRing, pData, Status);
 3975              		.loc 1 1057 5 is_stmt 1 view .LVU1662
1057:Core/Src/SEGGER_RTT.c ****     _WriteNoCheck(pRing, pData, Status);
 3976              		.loc 1 1057 12 is_stmt 0 view .LVU1663
 3977 0194 4745     		cmp	r7, r8
 3978 0196 28BF     		it	cs
 3979 0198 4746     		movcs	r7, r8
 3980              	.LVL402:
1058:Core/Src/SEGGER_RTT.c ****     break;
 3981              		.loc 1 1058 5 is_stmt 1 view .LVU1664
 3982              	.LBB214:
 436:Core/Src/SEGGER_RTT.c ****   unsigned NumBytesAtOnce;
 3983              		.loc 1 436 13 view .LVU1665
 3984              	.LBB212:
 437:Core/Src/SEGGER_RTT.c ****   unsigned WrOff;
 3985              		.loc 1 437 3 view .LVU1666
 438:Core/Src/SEGGER_RTT.c ****   unsigned Rem;
 3986              		.loc 1 438 3 view .LVU1667
 439:Core/Src/SEGGER_RTT.c ****   volatile char* pDst;
 3987              		.loc 1 439 3 view .LVU1668
 440:Core/Src/SEGGER_RTT.c **** 
 3988              		.loc 1 440 3 view .LVU1669
 442:Core/Src/SEGGER_RTT.c ****   Rem = pRing->SizeOfBuffer - WrOff;
 3989              		.loc 1 442 3 view .LVU1670
 443:Core/Src/SEGGER_RTT.c ****   if (Rem > NumBytes) {
 3990              		.loc 1 443 3 view .LVU1671
 443:Core/Src/SEGGER_RTT.c ****   if (Rem > NumBytes) {
 3991              		.loc 1 443 7 is_stmt 0 view .LVU1672
 3992 019a A6EB0508 		sub	r8, r6, r5
 3993              	.LVL403:
 444:Core/Src/SEGGER_RTT.c ****     //
 3994              		.loc 1 444 3 is_stmt 1 view .LVU1673
 444:Core/Src/SEGGER_RTT.c ****     //
 3995              		.loc 1 444 6 is_stmt 0 view .LVU1674
 3996 019e 4745     		cmp	r7, r8
 3997 01a0 E5D3     		bcc	.L180
 3998              	.L164:
 479:Core/Src/SEGGER_RTT.c ****     pDst = (pRing->pBuffer + WrOff) + SEGGER_RTT_UNCACHED_OFF;
 3999              		.loc 1 479 5 is_stmt 1 view .LVU1675
 4000              	.LVL404:
 480:Core/Src/SEGGER_RTT.c ****     SEGGER_RTT_MEMCPY((void*)pDst, pData, NumBytesAtOnce);
 4001              		.loc 1 480 5 view .LVU1676
 481:Core/Src/SEGGER_RTT.c ****     NumBytesAtOnce = NumBytes - Rem;
 4002              		.loc 1 481 5 view .LVU1677
 480:Core/Src/SEGGER_RTT.c ****     SEGGER_RTT_MEMCPY((void*)pDst, pData, NumBytesAtOnce);
 4003              		.loc 1 480 10 is_stmt 0 view .LVU1678
 4004 01a2 6068     		ldr	r0, [r4, #4]
 482:Core/Src/SEGGER_RTT.c ****     pDst = pRing->pBuffer + SEGGER_RTT_UNCACHED_OFF;
 4005              		.loc 1 482 20 view .LVU1679
 4006 01a4 BE1B     		subs	r6, r7, r6
 481:Core/Src/SEGGER_RTT.c ****     NumBytesAtOnce = NumBytes - Rem;
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccSC4OZm.s 			page 118


 4007              		.loc 1 481 5 view .LVU1680
 4008 01a6 4246     		mov	r2, r8
 4009 01a8 4946     		mov	r1, r9
 4010 01aa 2844     		add	r0, r0, r5
 4011              	.LVL405:
 482:Core/Src/SEGGER_RTT.c ****     pDst = pRing->pBuffer + SEGGER_RTT_UNCACHED_OFF;
 4012              		.loc 1 482 20 view .LVU1681
 4013 01ac 2E44     		add	r6, r6, r5
 481:Core/Src/SEGGER_RTT.c ****     NumBytesAtOnce = NumBytes - Rem;
 4014              		.loc 1 481 5 view .LVU1682
 4015 01ae FFF7FEFF 		bl	memcpy
 4016              	.LVL406:
 482:Core/Src/SEGGER_RTT.c ****     pDst = pRing->pBuffer + SEGGER_RTT_UNCACHED_OFF;
 4017              		.loc 1 482 5 is_stmt 1 view .LVU1683
 483:Core/Src/SEGGER_RTT.c ****     SEGGER_RTT_MEMCPY((void*)pDst, pData + Rem, NumBytesAtOnce);
 4018              		.loc 1 483 5 view .LVU1684
 484:Core/Src/SEGGER_RTT.c ****     RTT__DMB();                     // Force data write to be complete before writing the <WrOff>, 
 4019              		.loc 1 484 5 view .LVU1685
 4020 01b2 6068     		ldr	r0, [r4, #4]
 4021 01b4 09EB0801 		add	r1, r9, r8
 4022 01b8 3246     		mov	r2, r6
 4023 01ba FFF7FEFF 		bl	memcpy
 4024              	.LVL407:
 485:Core/Src/SEGGER_RTT.c ****     pRing->WrOff = NumBytesAtOnce;
 4025              		.loc 1 485 5 view .LVU1686
 4026              		.syntax unified
 4027              	@ 485 "Core/Src/SEGGER_RTT.c" 1
 4028 01be BFF35F8F 		dmb
 4029              	
 4030              	@ 0 "" 2
 485:Core/Src/SEGGER_RTT.c ****     pRing->WrOff = NumBytesAtOnce;
 4031              		.loc 1 485 15 view .LVU1687
 486:Core/Src/SEGGER_RTT.c **** #endif
 4032              		.loc 1 486 5 view .LVU1688
 486:Core/Src/SEGGER_RTT.c **** #endif
 4033              		.loc 1 486 18 is_stmt 0 view .LVU1689
 4034              		.thumb
 4035              		.syntax unified
 4036 01c2 E660     		str	r6, [r4, #12]
 4037              	.LVL408:
 486:Core/Src/SEGGER_RTT.c **** #endif
 4038              		.loc 1 486 18 view .LVU1690
 4039              	.LBE212:
 4040              	.LBE214:
1073:Core/Src/SEGGER_RTT.c **** }
 4041              		.loc 1 1073 3 is_stmt 1 view .LVU1691
1073:Core/Src/SEGGER_RTT.c **** }
 4042              		.loc 1 1073 3 is_stmt 0 view .LVU1692
 4043              	.LBE217:
 4044              	.LBE220:
1181:Core/Src/SEGGER_RTT.c ****   return Status;
 4045              		.loc 1 1181 3 is_stmt 1 view .LVU1693
 4046              		.syntax unified
 4047              	@ 1181 "Core/Src/SEGGER_RTT.c" 1
 4048 01c4 8AF31188 		msr   basepri, r10  
 4049              		
 4050              	@ 0 "" 2
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccSC4OZm.s 			page 119


 4051              		.thumb
 4052              		.syntax unified
 4053              	.LBE224:
1181:Core/Src/SEGGER_RTT.c ****   return Status;
 4054              		.loc 1 1181 22 view .LVU1694
1182:Core/Src/SEGGER_RTT.c **** }
 4055              		.loc 1 1182 3 view .LVU1695
 4056              		.loc 1 1183 1 is_stmt 0 view .LVU1696
 4057 01c8 3846     		mov	r0, r7
 4058 01ca BDE8F88F 		pop	{r3, r4, r5, r6, r7, r8, r9, r10, fp, pc}
 4059              	.LVL409:
 4060              	.L161:
 4061              	.LBB225:
 4062              	.LBB221:
 4063              	.LBB218:
 4064              	.LBB215:
 4065              	.LBB198:
 479:Core/Src/SEGGER_RTT.c ****     pDst = (pRing->pBuffer + WrOff) + SEGGER_RTT_UNCACHED_OFF;
 4066              		.loc 1 479 5 is_stmt 1 view .LVU1697
 480:Core/Src/SEGGER_RTT.c ****     SEGGER_RTT_MEMCPY((void*)pDst, pData, NumBytesAtOnce);
 4067              		.loc 1 480 5 view .LVU1698
 481:Core/Src/SEGGER_RTT.c ****     NumBytesAtOnce = NumBytes - Rem;
 4068              		.loc 1 481 5 view .LVU1699
 480:Core/Src/SEGGER_RTT.c ****     SEGGER_RTT_MEMCPY((void*)pDst, pData, NumBytesAtOnce);
 4069              		.loc 1 480 10 is_stmt 0 view .LVU1700
 4070 01ce 6068     		ldr	r0, [r4, #4]
 481:Core/Src/SEGGER_RTT.c ****     NumBytesAtOnce = NumBytes - Rem;
 4071              		.loc 1 481 5 view .LVU1701
 4072 01d0 2844     		add	r0, r0, r5
 4073              	.LVL410:
 482:Core/Src/SEGGER_RTT.c ****     pDst = pRing->pBuffer + SEGGER_RTT_UNCACHED_OFF;
 4074              		.loc 1 482 20 view .LVU1702
 4075 01d2 4544     		add	r5, r5, r8
 4076              	.LVL411:
 481:Core/Src/SEGGER_RTT.c ****     NumBytesAtOnce = NumBytes - Rem;
 4077              		.loc 1 481 5 view .LVU1703
 4078 01d4 3246     		mov	r2, r6
 4079 01d6 4946     		mov	r1, r9
 482:Core/Src/SEGGER_RTT.c ****     pDst = pRing->pBuffer + SEGGER_RTT_UNCACHED_OFF;
 4080              		.loc 1 482 20 view .LVU1704
 4081 01d8 ED1B     		subs	r5, r5, r7
 481:Core/Src/SEGGER_RTT.c ****     NumBytesAtOnce = NumBytes - Rem;
 4082              		.loc 1 481 5 view .LVU1705
 4083 01da FFF7FEFF 		bl	memcpy
 4084              	.LVL412:
 482:Core/Src/SEGGER_RTT.c ****     pDst = pRing->pBuffer + SEGGER_RTT_UNCACHED_OFF;
 4085              		.loc 1 482 5 is_stmt 1 view .LVU1706
 483:Core/Src/SEGGER_RTT.c ****     SEGGER_RTT_MEMCPY((void*)pDst, pData + Rem, NumBytesAtOnce);
 4086              		.loc 1 483 5 view .LVU1707
 484:Core/Src/SEGGER_RTT.c ****     RTT__DMB();                     // Force data write to be complete before writing the <WrOff>, 
 4087              		.loc 1 484 5 view .LVU1708
 4088 01de 6068     		ldr	r0, [r4, #4]
 4089 01e0 09EB0601 		add	r1, r9, r6
 4090 01e4 2A46     		mov	r2, r5
 4091 01e6 FFF7FEFF 		bl	memcpy
 4092              	.LVL413:
 485:Core/Src/SEGGER_RTT.c ****     pRing->WrOff = NumBytesAtOnce;
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccSC4OZm.s 			page 120


 4093              		.loc 1 485 5 view .LVU1709
 4094              		.syntax unified
 4095              	@ 485 "Core/Src/SEGGER_RTT.c" 1
 4096 01ea BFF35F8F 		dmb
 4097              	
 4098              	@ 0 "" 2
 485:Core/Src/SEGGER_RTT.c ****     pRing->WrOff = NumBytesAtOnce;
 4099              		.loc 1 485 15 view .LVU1710
 486:Core/Src/SEGGER_RTT.c **** #endif
 4100              		.loc 1 486 5 view .LVU1711
 486:Core/Src/SEGGER_RTT.c **** #endif
 4101              		.loc 1 486 18 is_stmt 0 view .LVU1712
 4102              		.thumb
 4103              		.syntax unified
 4104 01ee E560     		str	r5, [r4, #12]
 4105 01f0 4746     		mov	r7, r8
 4106 01f2 21E7     		b	.L158
 4107              	.L182:
 4108              		.align	2
 4109              	.L181:
 4110 01f4 00000000 		.word	.LANCHOR0
 4111 01f8 00000000 		.word	.LC0
 4112 01fc 00000000 		.word	.LANCHOR1
 4113 0200 00000000 		.word	.LANCHOR2
 4114              	.LBE198:
 4115              	.LBE215:
 4116              	.LBE218:
 4117              	.LBE221:
 4118              	.LBE225:
 4119              		.cfi_endproc
 4120              	.LFE12:
 4122              		.section	.text.SEGGER_RTT_Write,"ax",%progbits
 4123              		.align	1
 4124              		.p2align 2,,3
 4125              		.global	SEGGER_RTT_Write
 4126              		.syntax unified
 4127              		.thumb
 4128              		.thumb_func
 4130              	SEGGER_RTT_Write:
 4131              	.LVL414:
 4132              	.LFB13:
1184:Core/Src/SEGGER_RTT.c **** 
1185:Core/Src/SEGGER_RTT.c **** /*********************************************************************
1186:Core/Src/SEGGER_RTT.c **** *
1187:Core/Src/SEGGER_RTT.c **** *       SEGGER_RTT_Write
1188:Core/Src/SEGGER_RTT.c **** *
1189:Core/Src/SEGGER_RTT.c **** *  Function description
1190:Core/Src/SEGGER_RTT.c **** *    Stores a specified number of characters in SEGGER RTT
1191:Core/Src/SEGGER_RTT.c **** *    control block which is then read by the host.
1192:Core/Src/SEGGER_RTT.c **** *
1193:Core/Src/SEGGER_RTT.c **** *  Parameters
1194:Core/Src/SEGGER_RTT.c **** *    BufferIndex  Index of "Up"-buffer to be used (e.g. 0 for "Terminal").
1195:Core/Src/SEGGER_RTT.c **** *    pBuffer      Pointer to character array. Does not need to point to a \0 terminated string.
1196:Core/Src/SEGGER_RTT.c **** *    NumBytes     Number of bytes to be stored in the SEGGER RTT control block.
1197:Core/Src/SEGGER_RTT.c **** *
1198:Core/Src/SEGGER_RTT.c **** *  Return value
1199:Core/Src/SEGGER_RTT.c **** *    Number of bytes which have been stored in the "Up"-buffer.
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccSC4OZm.s 			page 121


1200:Core/Src/SEGGER_RTT.c **** *
1201:Core/Src/SEGGER_RTT.c **** *  Notes
1202:Core/Src/SEGGER_RTT.c **** *    (1) Data is stored according to buffer flags.
1203:Core/Src/SEGGER_RTT.c **** */
1204:Core/Src/SEGGER_RTT.c **** unsigned SEGGER_RTT_Write(unsigned BufferIndex, const void* pBuffer, unsigned NumBytes) {
 4133              		.loc 1 1204 89 is_stmt 1 view -0
 4134              		.cfi_startproc
 4135              		@ args = 0, pretend = 0, frame = 8
 4136              		@ frame_needed = 0, uses_anonymous_args = 0
1205:Core/Src/SEGGER_RTT.c ****   unsigned Status;
 4137              		.loc 1 1205 3 view .LVU1714
 4138              	.LBB244:
1206:Core/Src/SEGGER_RTT.c **** 
1207:Core/Src/SEGGER_RTT.c ****   INIT();
 4139              		.loc 1 1207 3 view .LVU1715
 4140              		.loc 1 1207 3 view .LVU1716
 4141              		.loc 1 1207 3 view .LVU1717
 4142              		.loc 1 1207 3 view .LVU1718
 4143              	.LBE244:
1204:Core/Src/SEGGER_RTT.c ****   unsigned Status;
 4144              		.loc 1 1204 89 is_stmt 0 view .LVU1719
 4145 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 4146              		.cfi_def_cfa_offset 36
 4147              		.cfi_offset 4, -36
 4148              		.cfi_offset 5, -32
 4149              		.cfi_offset 6, -28
 4150              		.cfi_offset 7, -24
 4151              		.cfi_offset 8, -20
 4152              		.cfi_offset 9, -16
 4153              		.cfi_offset 10, -12
 4154              		.cfi_offset 11, -8
 4155              		.cfi_offset 14, -4
 4156              	.LBB247:
 4157              		.loc 1 1207 3 view .LVU1720
 4158 0004 984E     		ldr	r6, .L212
 4159 0006 3778     		ldrb	r7, [r6]	@ zero_extendqisi2
 4160              	.LBE247:
1204:Core/Src/SEGGER_RTT.c ****   unsigned Status;
 4161              		.loc 1 1204 89 view .LVU1721
 4162 0008 83B0     		sub	sp, sp, #12
 4163              		.cfi_def_cfa_offset 48
1204:Core/Src/SEGGER_RTT.c ****   unsigned Status;
 4164              		.loc 1 1204 89 view .LVU1722
 4165 000a 0446     		mov	r4, r0
 4166 000c 8B46     		mov	fp, r1
 4167 000e 9146     		mov	r9, r2
 4168              	.LBB248:
 4169              		.loc 1 1207 3 view .LVU1723
 4170 0010 0FB3     		cbz	r7, .L206
 4171              	.LVL415:
 4172              	.L184:
 4173              		.loc 1 1207 3 is_stmt 1 discriminator 3 view .LVU1724
 4174              	.LBE248:
 4175              		.loc 1 1207 9 discriminator 3 view .LVU1725
 4176              	.LBB249:
1208:Core/Src/SEGGER_RTT.c ****   SEGGER_RTT_LOCK();
 4177              		.loc 1 1208 3 discriminator 3 view .LVU1726
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccSC4OZm.s 			page 122


 4178              		.loc 1 1208 3 discriminator 3 view .LVU1727
 4179              		.syntax unified
 4180              	@ 1208 "Core/Src/SEGGER_RTT.c" 1
 4181 0012 EFF31183 		mrs   r3, basepri  
 4182 0016 4FF02001 		mov   r1, #32       
 4183 001a 81F31188 		msr   basepri, r1  
 4184              		
 4185              	@ 0 "" 2
 4186              		.thumb
 4187              		.syntax unified
 4188              	.LBB250:
 4189              	.LBB251:
1112:Core/Src/SEGGER_RTT.c ****   case SEGGER_RTT_MODE_NO_BLOCK_SKIP:
 4190              		.loc 1 1112 16 is_stmt 0 discriminator 3 view .LVU1728
 4191 001e 04EB4407 		add	r7, r4, r4, lsl #1
 4192 0022 06EBC707 		add	r7, r6, r7, lsl #3
 4193              	.LBE251:
 4194              	.LBE250:
 4195              		.loc 1 1208 3 discriminator 3 view .LVU1729
 4196 0026 0093     		str	r3, [sp]
 4197              	.LVL416:
 4198              		.loc 1 1208 20 is_stmt 1 discriminator 3 view .LVU1730
1209:Core/Src/SEGGER_RTT.c ****   Status = SEGGER_RTT_WriteNoLock(BufferIndex, pBuffer, NumBytes);  // Call the non-locking write f
 4199              		.loc 1 1209 3 discriminator 3 view .LVU1731
 4200              	.LBB272:
 4201              	.LBI250:
1099:Core/Src/SEGGER_RTT.c ****   unsigned              Status;
 4202              		.loc 1 1099 10 discriminator 3 view .LVU1732
 4203              	.LBB270:
1100:Core/Src/SEGGER_RTT.c ****   unsigned              Avail;
 4204              		.loc 1 1100 3 discriminator 3 view .LVU1733
1101:Core/Src/SEGGER_RTT.c ****   const char*           pData;
 4205              		.loc 1 1101 3 discriminator 3 view .LVU1734
1102:Core/Src/SEGGER_RTT.c ****   SEGGER_RTT_BUFFER_UP* pRing;
 4206              		.loc 1 1102 3 discriminator 3 view .LVU1735
1103:Core/Src/SEGGER_RTT.c ****   //
 4207              		.loc 1 1103 3 discriminator 3 view .LVU1736
1107:Core/Src/SEGGER_RTT.c ****   pRing = (SEGGER_RTT_BUFFER_UP*)((char*)&_SEGGER_RTT.aUp[BufferIndex] + SEGGER_RTT_UNCACHED_OFF); 
 4208              		.loc 1 1107 3 discriminator 3 view .LVU1737
1108:Core/Src/SEGGER_RTT.c ****   //
 4209              		.loc 1 1108 3 discriminator 3 view .LVU1738
1112:Core/Src/SEGGER_RTT.c ****   case SEGGER_RTT_MODE_NO_BLOCK_SKIP:
 4210              		.loc 1 1112 3 discriminator 3 view .LVU1739
1112:Core/Src/SEGGER_RTT.c ****   case SEGGER_RTT_MODE_NO_BLOCK_SKIP:
 4211              		.loc 1 1112 16 is_stmt 0 discriminator 3 view .LVU1740
 4212 0028 D7F82C80 		ldr	r8, [r7, #44]
1112:Core/Src/SEGGER_RTT.c ****   case SEGGER_RTT_MODE_NO_BLOCK_SKIP:
 4213              		.loc 1 1112 3 discriminator 3 view .LVU1741
 4214 002c B8F1010F 		cmp	r8, #1
1112:Core/Src/SEGGER_RTT.c ****   case SEGGER_RTT_MODE_NO_BLOCK_SKIP:
 4215              		.loc 1 1112 16 discriminator 3 view .LVU1742
 4216 0030 4FEA4405 		lsl	r5, r4, #1
1112:Core/Src/SEGGER_RTT.c ****   case SEGGER_RTT_MODE_NO_BLOCK_SKIP:
 4217              		.loc 1 1112 3 discriminator 3 view .LVU1743
 4218 0034 00F0B080 		beq	.L185
1112:Core/Src/SEGGER_RTT.c ****   case SEGGER_RTT_MODE_NO_BLOCK_SKIP:
 4219              		.loc 1 1112 3 view .LVU1744
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccSC4OZm.s 			page 123


 4220 0038 B8F1020F 		cmp	r8, #2
 4221 003c 6CD0     		beq	.L186
 4222 003e B8F1000F 		cmp	r8, #0
 4223 0042 42D0     		beq	.L207
 4224 0044 4FF00008 		mov	r8, #0
 4225              	.LVL417:
 4226              	.L187:
1147:Core/Src/SEGGER_RTT.c **** }
 4227              		.loc 1 1147 3 is_stmt 1 view .LVU1745
1147:Core/Src/SEGGER_RTT.c **** }
 4228              		.loc 1 1147 3 is_stmt 0 view .LVU1746
 4229              	.LBE270:
 4230              	.LBE272:
1210:Core/Src/SEGGER_RTT.c ****   SEGGER_RTT_UNLOCK();
 4231              		.loc 1 1210 3 is_stmt 1 view .LVU1747
 4232 0048 009B     		ldr	r3, [sp]
 4233              		.syntax unified
 4234              	@ 1210 "Core/Src/SEGGER_RTT.c" 1
 4235 004a 83F31188 		msr   basepri, r3  
 4236              		
 4237              	@ 0 "" 2
 4238              		.thumb
 4239              		.syntax unified
 4240              	.LBE249:
 4241              		.loc 1 1210 22 view .LVU1748
1211:Core/Src/SEGGER_RTT.c ****   return Status;
 4242              		.loc 1 1211 3 view .LVU1749
1212:Core/Src/SEGGER_RTT.c **** }
 4243              		.loc 1 1212 1 is_stmt 0 view .LVU1750
 4244 004e 4046     		mov	r0, r8
 4245 0050 03B0     		add	sp, sp, #12
 4246              		.cfi_remember_state
 4247              		.cfi_def_cfa_offset 36
 4248              	.LVL418:
 4249              		.loc 1 1212 1 view .LVU1751
 4250              		@ sp needed
 4251 0052 BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 4252              	.LVL419:
 4253              	.L206:
 4254              		.cfi_restore_state
 4255              		.loc 1 1212 1 view .LVU1752
 4256 0056 07F0FF05 		and	r5, r7, #255
 4257              	.LBB274:
1207:Core/Src/SEGGER_RTT.c ****   SEGGER_RTT_LOCK();
 4258              		.loc 1 1207 3 is_stmt 1 view .LVU1753
 4259              	.LBB245:
 4260              	.LBI245:
 314:Core/Src/SEGGER_RTT.c ****   volatile SEGGER_RTT_CB* p;   // Volatile to make sure that compiler cannot change the order of ac
 4261              		.loc 1 314 13 view .LVU1754
 4262              	.LBB246:
 315:Core/Src/SEGGER_RTT.c ****   static const char _aInitStr[] = "\0\0\0\0\0\0TTR REGGES";  // Init complete ID string to make sur
 4263              		.loc 1 315 3 view .LVU1755
 316:Core/Src/SEGGER_RTT.c ****   unsigned i;
 4264              		.loc 1 316 3 view .LVU1756
 317:Core/Src/SEGGER_RTT.c ****   //
 4265              		.loc 1 317 3 view .LVU1757
 321:Core/Src/SEGGER_RTT.c ****   memset((SEGGER_RTT_CB*)p, 0, sizeof(_SEGGER_RTT));         // Make sure that the RTT CB is always
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccSC4OZm.s 			page 124


 4266              		.loc 1 321 3 view .LVU1758
 4267              	.LVL420:
 322:Core/Src/SEGGER_RTT.c ****   p->MaxNumUpBuffers    = SEGGER_RTT_MAX_NUM_UP_BUFFERS;
 4268              		.loc 1 322 3 view .LVU1759
 4269 005a 2946     		mov	r1, r5
 4270              	.LVL421:
 322:Core/Src/SEGGER_RTT.c ****   p->MaxNumUpBuffers    = SEGGER_RTT_MAX_NUM_UP_BUFFERS;
 4271              		.loc 1 322 3 is_stmt 0 view .LVU1760
 4272 005c 7822     		movs	r2, #120
 4273              	.LVL422:
 322:Core/Src/SEGGER_RTT.c ****   p->MaxNumUpBuffers    = SEGGER_RTT_MAX_NUM_UP_BUFFERS;
 4274              		.loc 1 322 3 view .LVU1761
 4275 005e 06F13000 		add	r0, r6, #48
 4276              	.LVL423:
 322:Core/Src/SEGGER_RTT.c ****   p->MaxNumUpBuffers    = SEGGER_RTT_MAX_NUM_UP_BUFFERS;
 4277              		.loc 1 322 3 view .LVU1762
 4278 0062 FFF7FEFF 		bl	memset
 4279              	.LVL424:
 323:Core/Src/SEGGER_RTT.c ****   p->MaxNumDownBuffers  = SEGGER_RTT_MAX_NUM_DOWN_BUFFERS;
 4280              		.loc 1 323 3 is_stmt 1 view .LVU1763
 323:Core/Src/SEGGER_RTT.c ****   p->MaxNumDownBuffers  = SEGGER_RTT_MAX_NUM_DOWN_BUFFERS;
 4281              		.loc 1 323 25 is_stmt 0 view .LVU1764
 4282 0066 0321     		movs	r1, #3
 4283 0068 3161     		str	r1, [r6, #16]
 324:Core/Src/SEGGER_RTT.c ****   //
 4284              		.loc 1 324 3 is_stmt 1 view .LVU1765
 328:Core/Src/SEGGER_RTT.c ****   p->aUp[0].pBuffer       = _acUpBuffer;
 4285              		.loc 1 328 27 is_stmt 0 view .LVU1766
 4286 006a 804A     		ldr	r2, .L212+4
 324:Core/Src/SEGGER_RTT.c ****   //
 4287              		.loc 1 324 25 view .LVU1767
 4288 006c 7161     		str	r1, [r6, #20]
 328:Core/Src/SEGGER_RTT.c ****   p->aUp[0].pBuffer       = _acUpBuffer;
 4289              		.loc 1 328 3 is_stmt 1 view .LVU1768
 330:Core/Src/SEGGER_RTT.c ****   p->aUp[0].RdOff         = 0u;
 4290              		.loc 1 330 27 is_stmt 0 view .LVU1769
 4291 006e 4FF48060 		mov	r0, #1024
 329:Core/Src/SEGGER_RTT.c ****   p->aUp[0].SizeOfBuffer  = BUFFER_SIZE_UP;
 4292              		.loc 1 329 27 view .LVU1770
 4293 0072 7F49     		ldr	r1, .L212+8
 328:Core/Src/SEGGER_RTT.c ****   p->aUp[0].pBuffer       = _acUpBuffer;
 4294              		.loc 1 328 27 view .LVU1771
 4295 0074 B261     		str	r2, [r6, #24]
 329:Core/Src/SEGGER_RTT.c ****   p->aUp[0].SizeOfBuffer  = BUFFER_SIZE_UP;
 4296              		.loc 1 329 3 is_stmt 1 view .LVU1772
 329:Core/Src/SEGGER_RTT.c ****   p->aUp[0].SizeOfBuffer  = BUFFER_SIZE_UP;
 4297              		.loc 1 329 27 is_stmt 0 view .LVU1773
 4298 0076 F161     		str	r1, [r6, #28]
 330:Core/Src/SEGGER_RTT.c ****   p->aUp[0].RdOff         = 0u;
 4299              		.loc 1 330 3 is_stmt 1 view .LVU1774
 330:Core/Src/SEGGER_RTT.c ****   p->aUp[0].RdOff         = 0u;
 4300              		.loc 1 330 27 is_stmt 0 view .LVU1775
 4301 0078 3062     		str	r0, [r6, #32]
 331:Core/Src/SEGGER_RTT.c ****   p->aUp[0].WrOff         = 0u;
 4302              		.loc 1 331 3 is_stmt 1 view .LVU1776
 338:Core/Src/SEGGER_RTT.c ****   p->aDown[0].SizeOfBuffer  = BUFFER_SIZE_DOWN;
 4303              		.loc 1 338 29 is_stmt 0 view .LVU1777
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccSC4OZm.s 			page 125


 4304 007a 7E49     		ldr	r1, .L212+12
 331:Core/Src/SEGGER_RTT.c ****   p->aUp[0].WrOff         = 0u;
 4305              		.loc 1 331 27 view .LVU1778
 4306 007c B562     		str	r5, [r6, #40]
 332:Core/Src/SEGGER_RTT.c ****   p->aUp[0].Flags         = SEGGER_RTT_MODE_DEFAULT;
 4307              		.loc 1 332 3 is_stmt 1 view .LVU1779
 332:Core/Src/SEGGER_RTT.c ****   p->aUp[0].Flags         = SEGGER_RTT_MODE_DEFAULT;
 4308              		.loc 1 332 27 is_stmt 0 view .LVU1780
 4309 007e 7562     		str	r5, [r6, #36]
 333:Core/Src/SEGGER_RTT.c ****   //
 4310              		.loc 1 333 3 is_stmt 1 view .LVU1781
 333:Core/Src/SEGGER_RTT.c ****   //
 4311              		.loc 1 333 27 is_stmt 0 view .LVU1782
 4312 0080 F562     		str	r5, [r6, #44]
 337:Core/Src/SEGGER_RTT.c ****   p->aDown[0].pBuffer       = _acDownBuffer;
 4313              		.loc 1 337 3 is_stmt 1 view .LVU1783
 337:Core/Src/SEGGER_RTT.c ****   p->aDown[0].pBuffer       = _acDownBuffer;
 4314              		.loc 1 337 29 is_stmt 0 view .LVU1784
 4315 0082 3266     		str	r2, [r6, #96]
 338:Core/Src/SEGGER_RTT.c ****   p->aDown[0].SizeOfBuffer  = BUFFER_SIZE_DOWN;
 4316              		.loc 1 338 3 is_stmt 1 view .LVU1785
 339:Core/Src/SEGGER_RTT.c ****   p->aDown[0].RdOff         = 0u;
 4317              		.loc 1 339 29 is_stmt 0 view .LVU1786
 4318 0084 1022     		movs	r2, #16
 338:Core/Src/SEGGER_RTT.c ****   p->aDown[0].SizeOfBuffer  = BUFFER_SIZE_DOWN;
 4319              		.loc 1 338 29 view .LVU1787
 4320 0086 7166     		str	r1, [r6, #100]
 339:Core/Src/SEGGER_RTT.c ****   p->aDown[0].RdOff         = 0u;
 4321              		.loc 1 339 3 is_stmt 1 view .LVU1788
 339:Core/Src/SEGGER_RTT.c ****   p->aDown[0].RdOff         = 0u;
 4322              		.loc 1 339 29 is_stmt 0 view .LVU1789
 4323 0088 B266     		str	r2, [r6, #104]
 340:Core/Src/SEGGER_RTT.c ****   p->aDown[0].WrOff         = 0u;
 4324              		.loc 1 340 3 is_stmt 1 view .LVU1790
 340:Core/Src/SEGGER_RTT.c ****   p->aDown[0].WrOff         = 0u;
 4325              		.loc 1 340 29 is_stmt 0 view .LVU1791
 4326 008a 3567     		str	r5, [r6, #112]
 341:Core/Src/SEGGER_RTT.c ****   p->aDown[0].Flags         = SEGGER_RTT_MODE_DEFAULT;
 4327              		.loc 1 341 3 is_stmt 1 view .LVU1792
 341:Core/Src/SEGGER_RTT.c ****   p->aDown[0].Flags         = SEGGER_RTT_MODE_DEFAULT;
 4328              		.loc 1 341 29 is_stmt 0 view .LVU1793
 4329 008c F566     		str	r5, [r6, #108]
 342:Core/Src/SEGGER_RTT.c ****   //
 4330              		.loc 1 342 3 is_stmt 1 view .LVU1794
 342:Core/Src/SEGGER_RTT.c ****   //
 4331              		.loc 1 342 29 is_stmt 0 view .LVU1795
 4332 008e 7567     		str	r5, [r6, #116]
 348:Core/Src/SEGGER_RTT.c ****   for (i = 0; i < sizeof(_aInitStr) - 1; ++i) {
 4333              		.loc 1 348 3 is_stmt 1 view .LVU1796
 4334              		.syntax unified
 4335              	@ 348 "Core/Src/SEGGER_RTT.c" 1
 4336 0090 BFF35F8F 		dmb
 4337              	
 4338              	@ 0 "" 2
 348:Core/Src/SEGGER_RTT.c ****   for (i = 0; i < sizeof(_aInitStr) - 1; ++i) {
 4339              		.loc 1 348 13 view .LVU1797
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccSC4OZm.s 			page 126


 4340              		.loc 1 349 3 view .LVU1798
 4341              	.LVL425:
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 4342              		.loc 1 349 17 view .LVU1799
 350:Core/Src/SEGGER_RTT.c ****   }
 4343              		.loc 1 350 5 view .LVU1800
 350:Core/Src/SEGGER_RTT.c ****   }
 4344              		.loc 1 350 16 is_stmt 0 view .LVU1801
 4345              		.thumb
 4346              		.syntax unified
 4347 0094 4520     		movs	r0, #69
 4348 0096 4727     		movs	r7, #71
 4349 0098 4FF0530C 		mov	ip, #83
 4350 009c 86F800C0 		strb	ip, [r6]
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 4351              		.loc 1 349 42 is_stmt 1 view .LVU1802
 4352              	.LVL426:
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 4353              		.loc 1 349 17 view .LVU1803
 350:Core/Src/SEGGER_RTT.c ****   }
 4354              		.loc 1 350 5 view .LVU1804
 350:Core/Src/SEGGER_RTT.c ****   }
 4355              		.loc 1 350 16 is_stmt 0 view .LVU1805
 4356 00a0 5221     		movs	r1, #82
 4357 00a2 7070     		strb	r0, [r6, #1]
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 4358              		.loc 1 349 42 is_stmt 1 view .LVU1806
 4359              	.LVL427:
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 4360              		.loc 1 349 17 view .LVU1807
 350:Core/Src/SEGGER_RTT.c ****   }
 4361              		.loc 1 350 5 view .LVU1808
 350:Core/Src/SEGGER_RTT.c ****   }
 4362              		.loc 1 350 16 is_stmt 0 view .LVU1809
 4363 00a4 5422     		movs	r2, #84
 4364 00a6 B770     		strb	r7, [r6, #2]
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 4365              		.loc 1 349 42 is_stmt 1 view .LVU1810
 4366              	.LVL428:
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 4367              		.loc 1 349 17 view .LVU1811
 350:Core/Src/SEGGER_RTT.c ****   }
 4368              		.loc 1 350 5 view .LVU1812
 350:Core/Src/SEGGER_RTT.c ****   }
 4369              		.loc 1 350 16 is_stmt 0 view .LVU1813
 4370 00a8 F770     		strb	r7, [r6, #3]
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 4371              		.loc 1 349 42 is_stmt 1 view .LVU1814
 4372              	.LVL429:
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 4373              		.loc 1 349 17 view .LVU1815
 350:Core/Src/SEGGER_RTT.c ****   }
 4374              		.loc 1 350 5 view .LVU1816
 350:Core/Src/SEGGER_RTT.c ****   }
 4375              		.loc 1 350 16 is_stmt 0 view .LVU1817
 4376 00aa 3071     		strb	r0, [r6, #4]
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccSC4OZm.s 			page 127


 4377              		.loc 1 349 42 is_stmt 1 view .LVU1818
 4378              	.LVL430:
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 4379              		.loc 1 349 17 view .LVU1819
 350:Core/Src/SEGGER_RTT.c ****   }
 4380              		.loc 1 350 5 view .LVU1820
 350:Core/Src/SEGGER_RTT.c ****   }
 4381              		.loc 1 350 16 is_stmt 0 view .LVU1821
 4382 00ac 2020     		movs	r0, #32
 4383 00ae 7171     		strb	r1, [r6, #5]
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 4384              		.loc 1 349 42 is_stmt 1 view .LVU1822
 4385              	.LVL431:
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 4386              		.loc 1 349 17 view .LVU1823
 350:Core/Src/SEGGER_RTT.c ****   }
 4387              		.loc 1 350 5 view .LVU1824
 350:Core/Src/SEGGER_RTT.c ****   }
 4388              		.loc 1 350 16 is_stmt 0 view .LVU1825
 4389 00b0 B071     		strb	r0, [r6, #6]
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 4390              		.loc 1 349 42 is_stmt 1 view .LVU1826
 4391              	.LVL432:
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 4392              		.loc 1 349 17 view .LVU1827
 350:Core/Src/SEGGER_RTT.c ****   }
 4393              		.loc 1 350 5 view .LVU1828
 350:Core/Src/SEGGER_RTT.c ****   }
 4394              		.loc 1 350 16 is_stmt 0 view .LVU1829
 4395 00b2 F171     		strb	r1, [r6, #7]
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 4396              		.loc 1 349 42 is_stmt 1 view .LVU1830
 4397              	.LVL433:
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 4398              		.loc 1 349 17 view .LVU1831
 350:Core/Src/SEGGER_RTT.c ****   }
 4399              		.loc 1 350 5 view .LVU1832
 350:Core/Src/SEGGER_RTT.c ****   }
 4400              		.loc 1 350 16 is_stmt 0 view .LVU1833
 4401 00b4 3272     		strb	r2, [r6, #8]
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 4402              		.loc 1 349 42 is_stmt 1 view .LVU1834
 4403              	.LVL434:
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 4404              		.loc 1 349 17 view .LVU1835
 350:Core/Src/SEGGER_RTT.c ****   }
 4405              		.loc 1 350 5 view .LVU1836
 350:Core/Src/SEGGER_RTT.c ****   }
 4406              		.loc 1 350 16 is_stmt 0 view .LVU1837
 4407 00b6 7272     		strb	r2, [r6, #9]
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 4408              		.loc 1 349 42 is_stmt 1 view .LVU1838
 4409              	.LVL435:
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 4410              		.loc 1 349 17 view .LVU1839
 350:Core/Src/SEGGER_RTT.c ****   }
 4411              		.loc 1 350 5 view .LVU1840
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccSC4OZm.s 			page 128


 350:Core/Src/SEGGER_RTT.c ****   }
 4412              		.loc 1 350 16 is_stmt 0 view .LVU1841
 4413 00b8 B572     		strb	r5, [r6, #10]
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 4414              		.loc 1 349 42 is_stmt 1 view .LVU1842
 4415              	.LVL436:
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 4416              		.loc 1 349 17 view .LVU1843
 350:Core/Src/SEGGER_RTT.c ****   }
 4417              		.loc 1 350 5 view .LVU1844
 350:Core/Src/SEGGER_RTT.c ****   }
 4418              		.loc 1 350 16 is_stmt 0 view .LVU1845
 4419 00ba F572     		strb	r5, [r6, #11]
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 4420              		.loc 1 349 42 is_stmt 1 view .LVU1846
 4421              	.LVL437:
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 4422              		.loc 1 349 17 view .LVU1847
 350:Core/Src/SEGGER_RTT.c ****   }
 4423              		.loc 1 350 5 view .LVU1848
 350:Core/Src/SEGGER_RTT.c ****   }
 4424              		.loc 1 350 16 is_stmt 0 view .LVU1849
 4425 00bc 3573     		strb	r5, [r6, #12]
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 4426              		.loc 1 349 42 is_stmt 1 view .LVU1850
 4427              	.LVL438:
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 4428              		.loc 1 349 17 view .LVU1851
 350:Core/Src/SEGGER_RTT.c ****   }
 4429              		.loc 1 350 5 view .LVU1852
 350:Core/Src/SEGGER_RTT.c ****   }
 4430              		.loc 1 350 16 is_stmt 0 view .LVU1853
 4431 00be 7573     		strb	r5, [r6, #13]
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 4432              		.loc 1 349 42 is_stmt 1 view .LVU1854
 4433              	.LVL439:
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 4434              		.loc 1 349 17 view .LVU1855
 350:Core/Src/SEGGER_RTT.c ****   }
 4435              		.loc 1 350 5 view .LVU1856
 350:Core/Src/SEGGER_RTT.c ****   }
 4436              		.loc 1 350 16 is_stmt 0 view .LVU1857
 4437 00c0 B573     		strb	r5, [r6, #14]
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 4438              		.loc 1 349 42 is_stmt 1 view .LVU1858
 4439              	.LVL440:
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 4440              		.loc 1 349 17 view .LVU1859
 350:Core/Src/SEGGER_RTT.c ****   }
 4441              		.loc 1 350 5 view .LVU1860
 350:Core/Src/SEGGER_RTT.c ****   }
 4442              		.loc 1 350 16 is_stmt 0 view .LVU1861
 4443 00c2 F573     		strb	r5, [r6, #15]
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 4444              		.loc 1 349 42 is_stmt 1 view .LVU1862
 4445              	.LVL441:
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccSC4OZm.s 			page 129


 4446              		.loc 1 349 17 view .LVU1863
 352:Core/Src/SEGGER_RTT.c **** }
 4447              		.loc 1 352 3 view .LVU1864
 4448              		.syntax unified
 4449              	@ 352 "Core/Src/SEGGER_RTT.c" 1
 4450 00c4 BFF35F8F 		dmb
 4451              	
 4452              	@ 0 "" 2
 352:Core/Src/SEGGER_RTT.c **** }
 4453              		.loc 1 352 13 view .LVU1865
 353:Core/Src/SEGGER_RTT.c **** 
 4454              		.loc 1 353 1 is_stmt 0 view .LVU1866
 4455              		.thumb
 4456              		.syntax unified
 4457 00c8 A3E7     		b	.L184
 4458              	.LVL442:
 4459              	.L207:
 353:Core/Src/SEGGER_RTT.c **** 
 4460              		.loc 1 353 1 view .LVU1867
 4461              	.LBE246:
 4462              	.LBE245:
 4463              	.LBE274:
 4464              	.LBB275:
 4465              	.LBB273:
 4466              	.LBB271:
1118:Core/Src/SEGGER_RTT.c ****     if (Avail < NumBytes) {
 4467              		.loc 1 1118 5 is_stmt 1 view .LVU1868
 4468              	.LBB252:
 4469              	.LBI252:
 526:Core/Src/SEGGER_RTT.c ****   unsigned RdOff;
 4470              		.loc 1 526 17 view .LVU1869
 4471              	.LBB253:
 527:Core/Src/SEGGER_RTT.c ****   unsigned WrOff;
 4472              		.loc 1 527 3 view .LVU1870
 528:Core/Src/SEGGER_RTT.c ****   unsigned r;
 4473              		.loc 1 528 3 view .LVU1871
 529:Core/Src/SEGGER_RTT.c ****   //
 4474              		.loc 1 529 3 view .LVU1872
 534:Core/Src/SEGGER_RTT.c ****   WrOff = pRing->WrOff;
 4475              		.loc 1 534 3 view .LVU1873
 534:Core/Src/SEGGER_RTT.c ****   WrOff = pRing->WrOff;
 4476              		.loc 1 534 9 is_stmt 0 view .LVU1874
 4477 00ca BA6A     		ldr	r2, [r7, #40]
 4478              	.LVL443:
 535:Core/Src/SEGGER_RTT.c ****   if (RdOff <= WrOff) {
 4479              		.loc 1 535 3 is_stmt 1 view .LVU1875
 535:Core/Src/SEGGER_RTT.c ****   if (RdOff <= WrOff) {
 4480              		.loc 1 535 9 is_stmt 0 view .LVU1876
 4481 00cc D7F824A0 		ldr	r10, [r7, #36]
 4482              	.LVL444:
 536:Core/Src/SEGGER_RTT.c ****     r = pRing->SizeOfBuffer - 1u - WrOff + RdOff;
 4483              		.loc 1 536 3 is_stmt 1 view .LVU1877
 536:Core/Src/SEGGER_RTT.c ****     r = pRing->SizeOfBuffer - 1u - WrOff + RdOff;
 4484              		.loc 1 536 6 is_stmt 0 view .LVU1878
 4485 00d0 5245     		cmp	r2, r10
 537:Core/Src/SEGGER_RTT.c ****   } else {
 4486              		.loc 1 537 5 is_stmt 1 view .LVU1879
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccSC4OZm.s 			page 130


 537:Core/Src/SEGGER_RTT.c ****   } else {
 4487              		.loc 1 537 7 is_stmt 0 view .LVU1880
 4488 00d2 9CBF     		itt	ls
 4489 00d4 396A     		ldrls	r1, [r7, #32]
 4490 00d6 5218     		addls	r2, r2, r1
 4491              	.LVL445:
 539:Core/Src/SEGGER_RTT.c ****   }
 4492              		.loc 1 539 5 is_stmt 1 view .LVU1881
 539:Core/Src/SEGGER_RTT.c ****   }
 4493              		.loc 1 539 7 is_stmt 0 view .LVU1882
 4494 00d8 013A     		subs	r2, r2, #1
 4495 00da A2EB0A02 		sub	r2, r2, r10
 4496              	.LVL446:
 541:Core/Src/SEGGER_RTT.c **** }
 4497              		.loc 1 541 3 is_stmt 1 view .LVU1883
 541:Core/Src/SEGGER_RTT.c **** }
 4498              		.loc 1 541 3 is_stmt 0 view .LVU1884
 4499              	.LBE253:
 4500              	.LBE252:
1119:Core/Src/SEGGER_RTT.c ****       Status = 0u;
 4501              		.loc 1 1119 5 is_stmt 1 view .LVU1885
1119:Core/Src/SEGGER_RTT.c ****       Status = 0u;
 4502              		.loc 1 1119 8 is_stmt 0 view .LVU1886
 4503 00de 9145     		cmp	r9, r2
 4504 00e0 B2D8     		bhi	.L187
1122:Core/Src/SEGGER_RTT.c ****       _WriteNoCheck(pRing, pData, NumBytes);
 4505              		.loc 1 1122 7 is_stmt 1 view .LVU1887
 4506              	.LVL447:
1123:Core/Src/SEGGER_RTT.c ****     }
 4507              		.loc 1 1123 7 view .LVU1888
 4508              	.LBB255:
 4509              	.LBI255:
 436:Core/Src/SEGGER_RTT.c ****   unsigned NumBytesAtOnce;
 4510              		.loc 1 436 13 view .LVU1889
 4511              	.LBB256:
 437:Core/Src/SEGGER_RTT.c ****   unsigned WrOff;
 4512              		.loc 1 437 3 view .LVU1890
 438:Core/Src/SEGGER_RTT.c ****   unsigned Rem;
 4513              		.loc 1 438 3 view .LVU1891
 439:Core/Src/SEGGER_RTT.c ****   volatile char* pDst;
 4514              		.loc 1 439 3 view .LVU1892
 440:Core/Src/SEGGER_RTT.c **** 
 4515              		.loc 1 440 3 view .LVU1893
 442:Core/Src/SEGGER_RTT.c ****   Rem = pRing->SizeOfBuffer - WrOff;
 4516              		.loc 1 442 3 view .LVU1894
 443:Core/Src/SEGGER_RTT.c ****   if (Rem > NumBytes) {
 4517              		.loc 1 443 3 view .LVU1895
 443:Core/Src/SEGGER_RTT.c ****   if (Rem > NumBytes) {
 4518              		.loc 1 443 14 is_stmt 0 view .LVU1896
 4519 00e2 2544     		add	r5, r5, r4
 4520 00e4 06EBC505 		add	r5, r6, r5, lsl #3
 448:Core/Src/SEGGER_RTT.c **** #if SEGGER_RTT_MEMCPY_USE_BYTELOOP
 4521              		.loc 1 448 18 view .LVU1897
 4522 00e8 0134     		adds	r4, r4, #1
 4523              	.LVL448:
 443:Core/Src/SEGGER_RTT.c ****   if (Rem > NumBytes) {
 4524              		.loc 1 443 14 view .LVU1898
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccSC4OZm.s 			page 131


 4525 00ea 2F6A     		ldr	r7, [r5, #32]
 443:Core/Src/SEGGER_RTT.c ****   if (Rem > NumBytes) {
 4526              		.loc 1 443 7 view .LVU1899
 4527 00ec A7EB0A08 		sub	r8, r7, r10
 4528              	.LVL449:
 444:Core/Src/SEGGER_RTT.c ****     //
 4529              		.loc 1 444 3 is_stmt 1 view .LVU1900
 444:Core/Src/SEGGER_RTT.c ****     //
 4530              		.loc 1 444 6 is_stmt 0 view .LVU1901
 4531 00f0 C145     		cmp	r9, r8
 448:Core/Src/SEGGER_RTT.c **** #if SEGGER_RTT_MEMCPY_USE_BYTELOOP
 4532              		.loc 1 448 18 view .LVU1902
 4533 00f2 04EB4404 		add	r4, r4, r4, lsl #1
 4534              	.LVL450:
 444:Core/Src/SEGGER_RTT.c ****     //
 4535              		.loc 1 444 6 view .LVU1903
 4536 00f6 80F0A180 		bcs	.L190
 448:Core/Src/SEGGER_RTT.c **** #if SEGGER_RTT_MEMCPY_USE_BYTELOOP
 4537              		.loc 1 448 5 is_stmt 1 view .LVU1904
 4538              	.LVL451:
 457:Core/Src/SEGGER_RTT.c ****     RTT__DMB();                     // Force data write to be complete before writing the <WrOff>, 
 4539              		.loc 1 457 5 view .LVU1905
 448:Core/Src/SEGGER_RTT.c **** #if SEGGER_RTT_MEMCPY_USE_BYTELOOP
 4540              		.loc 1 448 18 is_stmt 0 view .LVU1906
 4541 00fa 06EBC402 		add	r2, r6, r4, lsl #3
 4542              	.LVL452:
 457:Core/Src/SEGGER_RTT.c ****     RTT__DMB();                     // Force data write to be complete before writing the <WrOff>, 
 4543              		.loc 1 457 5 view .LVU1907
 4544 00fe 5946     		mov	r1, fp
 448:Core/Src/SEGGER_RTT.c **** #if SEGGER_RTT_MEMCPY_USE_BYTELOOP
 4545              		.loc 1 448 10 view .LVU1908
 4546 0100 5068     		ldr	r0, [r2, #4]
 457:Core/Src/SEGGER_RTT.c ****     RTT__DMB();                     // Force data write to be complete before writing the <WrOff>, 
 4547              		.loc 1 457 5 view .LVU1909
 4548 0102 4A46     		mov	r2, r9
 4549 0104 5044     		add	r0, r0, r10
 4550 0106 FFF7FEFF 		bl	memcpy
 4551              	.LVL453:
 458:Core/Src/SEGGER_RTT.c ****     pRing->WrOff = WrOff + NumBytes;
 4552              		.loc 1 458 5 is_stmt 1 view .LVU1910
 4553              		.syntax unified
 4554              	@ 458 "Core/Src/SEGGER_RTT.c" 1
 4555 010a BFF35F8F 		dmb
 4556              	
 4557              	@ 0 "" 2
 458:Core/Src/SEGGER_RTT.c ****     pRing->WrOff = WrOff + NumBytes;
 4558              		.loc 1 458 15 view .LVU1911
 459:Core/Src/SEGGER_RTT.c **** #endif
 4559              		.loc 1 459 5 view .LVU1912
 459:Core/Src/SEGGER_RTT.c **** #endif
 4560              		.loc 1 459 26 is_stmt 0 view .LVU1913
 4561              		.thumb
 4562              		.syntax unified
 4563 010e 09EB0A03 		add	r3, r9, r10
 459:Core/Src/SEGGER_RTT.c **** #endif
 4564              		.loc 1 459 18 view .LVU1914
 4565 0112 6B62     		str	r3, [r5, #36]
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccSC4OZm.s 			page 132


 4566 0114 C846     		mov	r8, r9
 4567              	.LVL454:
 459:Core/Src/SEGGER_RTT.c **** #endif
 4568              		.loc 1 459 18 view .LVU1915
 4569 0116 97E7     		b	.L187
 4570              	.LVL455:
 4571              	.L186:
 459:Core/Src/SEGGER_RTT.c **** #endif
 4572              		.loc 1 459 18 view .LVU1916
 4573              	.LBE256:
 4574              	.LBE255:
1138:Core/Src/SEGGER_RTT.c ****     break;
 4575              		.loc 1 1138 5 is_stmt 1 view .LVU1917
 4576              	.LBB258:
 4577              	.LBI258:
 374:Core/Src/SEGGER_RTT.c ****   unsigned NumBytesToWrite;
 4578              		.loc 1 374 17 view .LVU1918
 4579              	.LBB259:
 375:Core/Src/SEGGER_RTT.c ****   unsigned NumBytesWritten;
 4580              		.loc 1 375 3 view .LVU1919
 376:Core/Src/SEGGER_RTT.c ****   unsigned RdOff;
 4581              		.loc 1 376 3 view .LVU1920
 377:Core/Src/SEGGER_RTT.c ****   unsigned WrOff;
 4582              		.loc 1 377 3 view .LVU1921
 378:Core/Src/SEGGER_RTT.c ****   volatile char* pDst;
 4583              		.loc 1 378 3 view .LVU1922
 379:Core/Src/SEGGER_RTT.c ****   //
 4584              		.loc 1 379 3 view .LVU1923
 383:Core/Src/SEGGER_RTT.c ****   WrOff = pRing->WrOff;
 4585              		.loc 1 383 3 view .LVU1924
 384:Core/Src/SEGGER_RTT.c ****   do {
 4586              		.loc 1 384 3 view .LVU1925
 4587 0118 0134     		adds	r4, r4, #1
 4588              	.LVL456:
 394:Core/Src/SEGGER_RTT.c **** #if SEGGER_RTT_MEMCPY_USE_BYTELOOP
 4589              		.loc 1 394 18 is_stmt 0 view .LVU1926
 4590 011a 04EB4404 		add	r4, r4, r4, lsl #1
 4591              	.LVL457:
 384:Core/Src/SEGGER_RTT.c ****   do {
 4592              		.loc 1 384 9 view .LVU1927
 4593 011e 7D6A     		ldr	r5, [r7, #36]
 4594              	.LVL458:
 394:Core/Src/SEGGER_RTT.c **** #if SEGGER_RTT_MEMCPY_USE_BYTELOOP
 4595              		.loc 1 394 18 view .LVU1928
 4596 0120 4FEAC40A 		lsl	r10, r4, #3
 383:Core/Src/SEGGER_RTT.c ****   WrOff = pRing->WrOff;
 4597              		.loc 1 383 19 view .LVU1929
 4598 0124 4FF00008 		mov	r8, #0
 4599              	.LVL459:
 4600              	.L198:
 385:Core/Src/SEGGER_RTT.c ****     RdOff = pRing->RdOff;                         // May be changed by host (debug probe) in the me
 4601              		.loc 1 385 3 is_stmt 1 view .LVU1930
 386:Core/Src/SEGGER_RTT.c ****     if (RdOff > WrOff) {
 4602              		.loc 1 386 5 view .LVU1931
 388:Core/Src/SEGGER_RTT.c ****     } else {
 4603              		.loc 1 388 7 view .LVU1932
 390:Core/Src/SEGGER_RTT.c ****     }
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccSC4OZm.s 			page 133


 4604              		.loc 1 390 7 view .LVU1933
 386:Core/Src/SEGGER_RTT.c ****     if (RdOff > WrOff) {
 4605              		.loc 1 386 11 is_stmt 0 view .LVU1934
 4606 0128 BB6A     		ldr	r3, [r7, #40]
 4607              	.LVL460:
 387:Core/Src/SEGGER_RTT.c ****       NumBytesToWrite = RdOff - WrOff - 1u;
 4608              		.loc 1 387 5 is_stmt 1 view .LVU1935
 387:Core/Src/SEGGER_RTT.c ****       NumBytesToWrite = RdOff - WrOff - 1u;
 4609              		.loc 1 387 8 is_stmt 0 view .LVU1936
 4610 012a AB42     		cmp	r3, r5
 388:Core/Src/SEGGER_RTT.c ****     } else {
 4611              		.loc 1 388 23 view .LVU1937
 4612 012c 03F1FF32 		add	r2, r3, #-1
 387:Core/Src/SEGGER_RTT.c ****       NumBytesToWrite = RdOff - WrOff - 1u;
 4613              		.loc 1 387 8 view .LVU1938
 4614 0130 25D9     		bls	.L194
 4615              	.L209:
 390:Core/Src/SEGGER_RTT.c ****     }
 4616              		.loc 1 390 30 view .LVU1939
 4617 0132 3C6A     		ldr	r4, [r7, #32]
 388:Core/Src/SEGGER_RTT.c ****     } else {
 4618              		.loc 1 388 23 view .LVU1940
 4619 0134 531B     		subs	r3, r2, r5
 4620              	.LVL461:
 4621              	.L195:
 392:Core/Src/SEGGER_RTT.c ****     NumBytesToWrite = MIN(NumBytesToWrite, NumBytes);
 4622              		.loc 1 392 5 is_stmt 1 view .LVU1941
 4623 0136 4B45     		cmp	r3, r9
 394:Core/Src/SEGGER_RTT.c **** #if SEGGER_RTT_MEMCPY_USE_BYTELOOP
 4624              		.loc 1 394 18 is_stmt 0 view .LVU1942
 4625 0138 06EB0A02 		add	r2, r6, r10
 392:Core/Src/SEGGER_RTT.c ****     NumBytesToWrite = MIN(NumBytesToWrite, NumBytes);
 4626              		.loc 1 392 23 view .LVU1943
 4627 013c A4EB0504 		sub	r4, r4, r5
 4628 0140 28BF     		it	cs
 4629 0142 4B46     		movcs	r3, r9
 393:Core/Src/SEGGER_RTT.c ****     pDst = (pRing->pBuffer + WrOff) + SEGGER_RTT_UNCACHED_OFF;
 4630              		.loc 1 393 5 is_stmt 1 view .LVU1944
 393:Core/Src/SEGGER_RTT.c ****     pDst = (pRing->pBuffer + WrOff) + SEGGER_RTT_UNCACHED_OFF;
 4631              		.loc 1 393 21 is_stmt 0 view .LVU1945
 4632 0144 9C42     		cmp	r4, r3
 394:Core/Src/SEGGER_RTT.c **** #if SEGGER_RTT_MEMCPY_USE_BYTELOOP
 4633              		.loc 1 394 10 view .LVU1946
 4634 0146 5068     		ldr	r0, [r2, #4]
 393:Core/Src/SEGGER_RTT.c ****     pDst = (pRing->pBuffer + WrOff) + SEGGER_RTT_UNCACHED_OFF;
 4635              		.loc 1 393 21 view .LVU1947
 4636 0148 28BF     		it	cs
 4637 014a 1C46     		movcs	r4, r3
 4638              	.LVL462:
 394:Core/Src/SEGGER_RTT.c **** #if SEGGER_RTT_MEMCPY_USE_BYTELOOP
 4639              		.loc 1 394 5 is_stmt 1 view .LVU1948
 403:Core/Src/SEGGER_RTT.c ****     NumBytesWritten += NumBytesToWrite;
 4640              		.loc 1 403 5 view .LVU1949
 4641 014c 2844     		add	r0, r0, r5
 4642 014e 5946     		mov	r1, fp
 4643 0150 2246     		mov	r2, r4
 4644 0152 FFF7FEFF 		bl	memcpy
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccSC4OZm.s 			page 134


 4645              	.LVL463:
 404:Core/Src/SEGGER_RTT.c ****     pBuffer         += NumBytesToWrite;
 4646              		.loc 1 404 5 view .LVU1950
 409:Core/Src/SEGGER_RTT.c ****       WrOff = 0u;
 4647              		.loc 1 409 8 is_stmt 0 view .LVU1951
 4648 0156 3B6A     		ldr	r3, [r7, #32]
 407:Core/Src/SEGGER_RTT.c **** #endif
 4649              		.loc 1 407 21 view .LVU1952
 4650 0158 2544     		add	r5, r5, r4
 4651              	.LVL464:
 412:Core/Src/SEGGER_RTT.c ****     pRing->WrOff = WrOff;
 4652              		.loc 1 412 5 is_stmt 1 view .LVU1953
 409:Core/Src/SEGGER_RTT.c ****       WrOff = 0u;
 4653              		.loc 1 409 8 is_stmt 0 view .LVU1954
 4654 015a 9D42     		cmp	r5, r3
 404:Core/Src/SEGGER_RTT.c ****     pBuffer         += NumBytesToWrite;
 4655              		.loc 1 404 21 view .LVU1955
 4656 015c A044     		add	r8, r8, r4
 4657              	.LVL465:
 405:Core/Src/SEGGER_RTT.c ****     NumBytes        -= NumBytesToWrite;
 4658              		.loc 1 405 5 is_stmt 1 view .LVU1956
 405:Core/Src/SEGGER_RTT.c ****     NumBytes        -= NumBytesToWrite;
 4659              		.loc 1 405 21 is_stmt 0 view .LVU1957
 4660 015e A344     		add	fp, fp, r4
 4661              	.LVL466:
 406:Core/Src/SEGGER_RTT.c ****     WrOff           += NumBytesToWrite;
 4662              		.loc 1 406 5 is_stmt 1 view .LVU1958
 406:Core/Src/SEGGER_RTT.c ****     WrOff           += NumBytesToWrite;
 4663              		.loc 1 406 21 is_stmt 0 view .LVU1959
 4664 0160 A9EB0409 		sub	r9, r9, r4
 4665              	.LVL467:
 407:Core/Src/SEGGER_RTT.c **** #endif
 4666              		.loc 1 407 5 is_stmt 1 view .LVU1960
 409:Core/Src/SEGGER_RTT.c ****       WrOff = 0u;
 4667              		.loc 1 409 5 view .LVU1961
 409:Core/Src/SEGGER_RTT.c ****       WrOff = 0u;
 4668              		.loc 1 409 8 is_stmt 0 view .LVU1962
 4669 0164 10D0     		beq	.L208
 412:Core/Src/SEGGER_RTT.c ****     pRing->WrOff = WrOff;
 4670              		.loc 1 412 5 view .LVU1963
 4671              		.syntax unified
 4672              	@ 412 "Core/Src/SEGGER_RTT.c" 1
 4673 0166 BFF35F8F 		dmb
 4674              	
 4675              	@ 0 "" 2
 412:Core/Src/SEGGER_RTT.c ****     pRing->WrOff = WrOff;
 4676              		.loc 1 412 15 is_stmt 1 view .LVU1964
 413:Core/Src/SEGGER_RTT.c ****   } while (NumBytes);
 4677              		.loc 1 413 5 view .LVU1965
 413:Core/Src/SEGGER_RTT.c ****   } while (NumBytes);
 4678              		.loc 1 413 18 is_stmt 0 view .LVU1966
 4679              		.thumb
 4680              		.syntax unified
 4681 016a 7D62     		str	r5, [r7, #36]
 414:Core/Src/SEGGER_RTT.c ****   return NumBytesWritten;
 4682              		.loc 1 414 12 is_stmt 1 view .LVU1967
 4683 016c B9F1000F 		cmp	r9, #0
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccSC4OZm.s 			page 135


 4684 0170 3FF46AAF 		beq	.L187
 385:Core/Src/SEGGER_RTT.c ****     RdOff = pRing->RdOff;                         // May be changed by host (debug probe) in the me
 4685              		.loc 1 385 3 view .LVU1968
 386:Core/Src/SEGGER_RTT.c ****     if (RdOff > WrOff) {
 4686              		.loc 1 386 5 view .LVU1969
 388:Core/Src/SEGGER_RTT.c ****     } else {
 4687              		.loc 1 388 7 view .LVU1970
 390:Core/Src/SEGGER_RTT.c ****     }
 4688              		.loc 1 390 7 view .LVU1971
 386:Core/Src/SEGGER_RTT.c ****     if (RdOff > WrOff) {
 4689              		.loc 1 386 11 is_stmt 0 view .LVU1972
 4690 0174 BB6A     		ldr	r3, [r7, #40]
 4691              	.LVL468:
 387:Core/Src/SEGGER_RTT.c ****       NumBytesToWrite = RdOff - WrOff - 1u;
 4692              		.loc 1 387 5 is_stmt 1 view .LVU1973
 387:Core/Src/SEGGER_RTT.c ****       NumBytesToWrite = RdOff - WrOff - 1u;
 4693              		.loc 1 387 8 is_stmt 0 view .LVU1974
 4694 0176 AB42     		cmp	r3, r5
 388:Core/Src/SEGGER_RTT.c ****     } else {
 4695              		.loc 1 388 23 view .LVU1975
 4696 0178 03F1FF32 		add	r2, r3, #-1
 387:Core/Src/SEGGER_RTT.c ****       NumBytesToWrite = RdOff - WrOff - 1u;
 4697              		.loc 1 387 8 view .LVU1976
 4698 017c D9D8     		bhi	.L209
 4699              	.LVL469:
 4700              	.L194:
 390:Core/Src/SEGGER_RTT.c ****     }
 4701              		.loc 1 390 30 view .LVU1977
 4702 017e 3C6A     		ldr	r4, [r7, #32]
 390:Core/Src/SEGGER_RTT.c ****     }
 4703              		.loc 1 390 23 view .LVU1978
 4704 0180 2344     		add	r3, r3, r4
 4705              	.LVL470:
 390:Core/Src/SEGGER_RTT.c ****     }
 4706              		.loc 1 390 23 view .LVU1979
 4707 0182 013B     		subs	r3, r3, #1
 4708 0184 5B1B     		subs	r3, r3, r5
 4709              	.LVL471:
 390:Core/Src/SEGGER_RTT.c ****     }
 4710              		.loc 1 390 23 view .LVU1980
 4711 0186 D6E7     		b	.L195
 4712              	.LVL472:
 4713              	.L208:
 412:Core/Src/SEGGER_RTT.c ****     pRing->WrOff = WrOff;
 4714              		.loc 1 412 5 is_stmt 1 view .LVU1981
 4715              		.syntax unified
 4716              	@ 412 "Core/Src/SEGGER_RTT.c" 1
 4717 0188 BFF35F8F 		dmb
 4718              	
 4719              	@ 0 "" 2
 412:Core/Src/SEGGER_RTT.c ****     pRing->WrOff = WrOff;
 4720              		.loc 1 412 15 view .LVU1982
 413:Core/Src/SEGGER_RTT.c ****   } while (NumBytes);
 4721              		.loc 1 413 5 view .LVU1983
 413:Core/Src/SEGGER_RTT.c ****   } while (NumBytes);
 4722              		.loc 1 413 18 is_stmt 0 view .LVU1984
 4723              		.thumb
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccSC4OZm.s 			page 136


 4724              		.syntax unified
 4725 018c 0025     		movs	r5, #0
 4726 018e 7D62     		str	r5, [r7, #36]
 414:Core/Src/SEGGER_RTT.c ****   return NumBytesWritten;
 4727              		.loc 1 414 12 is_stmt 1 view .LVU1985
 4728 0190 B9F1000F 		cmp	r9, #0
 4729 0194 C8D1     		bne	.L198
 4730 0196 57E7     		b	.L187
 4731              	.LVL473:
 4732              	.L185:
 414:Core/Src/SEGGER_RTT.c ****   return NumBytesWritten;
 4733              		.loc 1 414 12 is_stmt 0 view .LVU1986
 4734              	.LBE259:
 4735              	.LBE258:
1130:Core/Src/SEGGER_RTT.c ****     Status = Avail < NumBytes ? Avail : NumBytes;
 4736              		.loc 1 1130 5 is_stmt 1 view .LVU1987
 4737              	.LBB260:
 4738              	.LBI260:
 526:Core/Src/SEGGER_RTT.c ****   unsigned RdOff;
 4739              		.loc 1 526 17 view .LVU1988
 4740              	.LBB261:
 527:Core/Src/SEGGER_RTT.c ****   unsigned WrOff;
 4741              		.loc 1 527 3 view .LVU1989
 528:Core/Src/SEGGER_RTT.c ****   unsigned r;
 4742              		.loc 1 528 3 view .LVU1990
 529:Core/Src/SEGGER_RTT.c ****   //
 4743              		.loc 1 529 3 view .LVU1991
 534:Core/Src/SEGGER_RTT.c ****   WrOff = pRing->WrOff;
 4744              		.loc 1 534 3 view .LVU1992
 534:Core/Src/SEGGER_RTT.c ****   WrOff = pRing->WrOff;
 4745              		.loc 1 534 9 is_stmt 0 view .LVU1993
 4746 0198 BA6A     		ldr	r2, [r7, #40]
 4747              	.LVL474:
 535:Core/Src/SEGGER_RTT.c ****   if (RdOff <= WrOff) {
 4748              		.loc 1 535 3 is_stmt 1 view .LVU1994
 535:Core/Src/SEGGER_RTT.c ****   if (RdOff <= WrOff) {
 4749              		.loc 1 535 9 is_stmt 0 view .LVU1995
 4750 019a D7F824A0 		ldr	r10, [r7, #36]
 4751              	.LVL475:
 536:Core/Src/SEGGER_RTT.c ****     r = pRing->SizeOfBuffer - 1u - WrOff + RdOff;
 4752              		.loc 1 536 3 is_stmt 1 view .LVU1996
 536:Core/Src/SEGGER_RTT.c ****     r = pRing->SizeOfBuffer - 1u - WrOff + RdOff;
 4753              		.loc 1 536 6 is_stmt 0 view .LVU1997
 4754 019e 5245     		cmp	r2, r10
 4755 01a0 1FD9     		bls	.L210
 539:Core/Src/SEGGER_RTT.c ****   }
 4756              		.loc 1 539 5 is_stmt 1 view .LVU1998
 539:Core/Src/SEGGER_RTT.c ****   }
 4757              		.loc 1 539 7 is_stmt 0 view .LVU1999
 4758 01a2 02F1FF38 		add	r8, r2, #-1
 4759 01a6 A8EB0A08 		sub	r8, r8, r10
 4760              	.LVL476:
 541:Core/Src/SEGGER_RTT.c **** }
 4761              		.loc 1 541 3 is_stmt 1 view .LVU2000
 541:Core/Src/SEGGER_RTT.c **** }
 4762              		.loc 1 541 3 is_stmt 0 view .LVU2001
 4763              	.LBE261:
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccSC4OZm.s 			page 137


 4764              	.LBE260:
1131:Core/Src/SEGGER_RTT.c ****     _WriteNoCheck(pRing, pData, Status);
 4765              		.loc 1 1131 5 is_stmt 1 view .LVU2002
 4766              	.LBB263:
 4767              	.LBB254:
 537:Core/Src/SEGGER_RTT.c ****   } else {
 4768              		.loc 1 537 14 is_stmt 0 view .LVU2003
 4769 01aa 3F6A     		ldr	r7, [r7, #32]
 4770              	.LBE254:
 4771              	.LBE263:
1131:Core/Src/SEGGER_RTT.c ****     _WriteNoCheck(pRing, pData, Status);
 4772              		.loc 1 1131 12 view .LVU2004
 4773 01ac C845     		cmp	r8, r9
 4774 01ae 28BF     		it	cs
 4775 01b0 C846     		movcs	r8, r9
 4776              	.LVL477:
1132:Core/Src/SEGGER_RTT.c ****     break;
 4777              		.loc 1 1132 5 is_stmt 1 view .LVU2005
 4778              	.LBB264:
 4779              	.LBI264:
 436:Core/Src/SEGGER_RTT.c ****   unsigned NumBytesAtOnce;
 4780              		.loc 1 436 13 view .LVU2006
 4781              	.LBB265:
 437:Core/Src/SEGGER_RTT.c ****   unsigned WrOff;
 4782              		.loc 1 437 3 view .LVU2007
 438:Core/Src/SEGGER_RTT.c ****   unsigned Rem;
 4783              		.loc 1 438 3 view .LVU2008
 439:Core/Src/SEGGER_RTT.c ****   volatile char* pDst;
 4784              		.loc 1 439 3 view .LVU2009
 440:Core/Src/SEGGER_RTT.c **** 
 4785              		.loc 1 440 3 view .LVU2010
 442:Core/Src/SEGGER_RTT.c ****   Rem = pRing->SizeOfBuffer - WrOff;
 4786              		.loc 1 442 3 view .LVU2011
 443:Core/Src/SEGGER_RTT.c ****   if (Rem > NumBytes) {
 4787              		.loc 1 443 3 view .LVU2012
 443:Core/Src/SEGGER_RTT.c ****   if (Rem > NumBytes) {
 4788              		.loc 1 443 7 is_stmt 0 view .LVU2013
 4789 01b2 A7EB0A02 		sub	r2, r7, r10
 4790              	.LVL478:
 444:Core/Src/SEGGER_RTT.c ****     //
 4791              		.loc 1 444 3 is_stmt 1 view .LVU2014
 444:Core/Src/SEGGER_RTT.c ****     //
 4792              		.loc 1 444 6 is_stmt 0 view .LVU2015
 4793 01b6 9045     		cmp	r8, r2
 4794 01b8 21D2     		bcs	.L193
 4795              	.L211:
 448:Core/Src/SEGGER_RTT.c **** #if SEGGER_RTT_MEMCPY_USE_BYTELOOP
 4796              		.loc 1 448 5 is_stmt 1 view .LVU2016
 4797              	.LVL479:
 457:Core/Src/SEGGER_RTT.c ****     RTT__DMB();                     // Force data write to be complete before writing the <WrOff>, 
 4798              		.loc 1 457 5 view .LVU2017
 448:Core/Src/SEGGER_RTT.c **** #if SEGGER_RTT_MEMCPY_USE_BYTELOOP
 4799              		.loc 1 448 18 is_stmt 0 view .LVU2018
 4800 01ba 631C     		adds	r3, r4, #1
 4801              	.LVL480:
 448:Core/Src/SEGGER_RTT.c **** #if SEGGER_RTT_MEMCPY_USE_BYTELOOP
 4802              		.loc 1 448 18 view .LVU2019
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccSC4OZm.s 			page 138


 4803 01bc 03EB4303 		add	r3, r3, r3, lsl #1
 4804 01c0 06EBC303 		add	r3, r6, r3, lsl #3
 457:Core/Src/SEGGER_RTT.c ****     RTT__DMB();                     // Force data write to be complete before writing the <WrOff>, 
 4805              		.loc 1 457 5 view .LVU2020
 4806 01c4 5946     		mov	r1, fp
 448:Core/Src/SEGGER_RTT.c **** #if SEGGER_RTT_MEMCPY_USE_BYTELOOP
 4807              		.loc 1 448 10 view .LVU2021
 4808 01c6 5868     		ldr	r0, [r3, #4]
 457:Core/Src/SEGGER_RTT.c ****     RTT__DMB();                     // Force data write to be complete before writing the <WrOff>, 
 4809              		.loc 1 457 5 view .LVU2022
 4810 01c8 4246     		mov	r2, r8
 4811              	.LVL481:
 457:Core/Src/SEGGER_RTT.c ****     RTT__DMB();                     // Force data write to be complete before writing the <WrOff>, 
 4812              		.loc 1 457 5 view .LVU2023
 4813 01ca 5044     		add	r0, r0, r10
 4814 01cc FFF7FEFF 		bl	memcpy
 4815              	.LVL482:
 458:Core/Src/SEGGER_RTT.c ****     pRing->WrOff = WrOff + NumBytes;
 4816              		.loc 1 458 5 is_stmt 1 view .LVU2024
 4817              		.syntax unified
 4818              	@ 458 "Core/Src/SEGGER_RTT.c" 1
 4819 01d0 BFF35F8F 		dmb
 4820              	
 4821              	@ 0 "" 2
 458:Core/Src/SEGGER_RTT.c ****     pRing->WrOff = WrOff + NumBytes;
 4822              		.loc 1 458 15 view .LVU2025
 459:Core/Src/SEGGER_RTT.c **** #endif
 4823              		.loc 1 459 5 view .LVU2026
 459:Core/Src/SEGGER_RTT.c **** #endif
 4824              		.loc 1 459 18 is_stmt 0 view .LVU2027
 4825              		.thumb
 4826              		.syntax unified
 4827 01d4 2544     		add	r5, r5, r4
 4828 01d6 06EBC505 		add	r5, r6, r5, lsl #3
 459:Core/Src/SEGGER_RTT.c **** #endif
 4829              		.loc 1 459 26 view .LVU2028
 4830 01da 0AEB0803 		add	r3, r10, r8
 459:Core/Src/SEGGER_RTT.c **** #endif
 4831              		.loc 1 459 18 view .LVU2029
 4832 01de 6B62     		str	r3, [r5, #36]
 4833 01e0 32E7     		b	.L187
 4834              	.LVL483:
 4835              	.L210:
 459:Core/Src/SEGGER_RTT.c **** #endif
 4836              		.loc 1 459 18 view .LVU2030
 4837              	.LBE265:
 4838              	.LBE264:
 4839              	.LBB267:
 4840              	.LBB262:
 537:Core/Src/SEGGER_RTT.c ****   } else {
 4841              		.loc 1 537 5 is_stmt 1 view .LVU2031
 537:Core/Src/SEGGER_RTT.c ****   } else {
 4842              		.loc 1 537 14 is_stmt 0 view .LVU2032
 4843 01e2 3F6A     		ldr	r7, [r7, #32]
 537:Core/Src/SEGGER_RTT.c ****   } else {
 4844              		.loc 1 537 7 view .LVU2033
 4845 01e4 02EB0708 		add	r8, r2, r7
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccSC4OZm.s 			page 139


 4846 01e8 08F1FF38 		add	r8, r8, #-1
 4847 01ec A8EB0A08 		sub	r8, r8, r10
 4848              	.LVL484:
 541:Core/Src/SEGGER_RTT.c **** }
 4849              		.loc 1 541 3 is_stmt 1 view .LVU2034
 541:Core/Src/SEGGER_RTT.c **** }
 4850              		.loc 1 541 3 is_stmt 0 view .LVU2035
 4851              	.LBE262:
 4852              	.LBE267:
1131:Core/Src/SEGGER_RTT.c ****     _WriteNoCheck(pRing, pData, Status);
 4853              		.loc 1 1131 5 is_stmt 1 view .LVU2036
1131:Core/Src/SEGGER_RTT.c ****     _WriteNoCheck(pRing, pData, Status);
 4854              		.loc 1 1131 12 is_stmt 0 view .LVU2037
 4855 01f0 C845     		cmp	r8, r9
 4856 01f2 28BF     		it	cs
 4857 01f4 C846     		movcs	r8, r9
 4858              	.LVL485:
1132:Core/Src/SEGGER_RTT.c ****     break;
 4859              		.loc 1 1132 5 is_stmt 1 view .LVU2038
 4860              	.LBB268:
 436:Core/Src/SEGGER_RTT.c ****   unsigned NumBytesAtOnce;
 4861              		.loc 1 436 13 view .LVU2039
 4862              	.LBB266:
 437:Core/Src/SEGGER_RTT.c ****   unsigned WrOff;
 4863              		.loc 1 437 3 view .LVU2040
 438:Core/Src/SEGGER_RTT.c ****   unsigned Rem;
 4864              		.loc 1 438 3 view .LVU2041
 439:Core/Src/SEGGER_RTT.c ****   volatile char* pDst;
 4865              		.loc 1 439 3 view .LVU2042
 440:Core/Src/SEGGER_RTT.c **** 
 4866              		.loc 1 440 3 view .LVU2043
 442:Core/Src/SEGGER_RTT.c ****   Rem = pRing->SizeOfBuffer - WrOff;
 4867              		.loc 1 442 3 view .LVU2044
 443:Core/Src/SEGGER_RTT.c ****   if (Rem > NumBytes) {
 4868              		.loc 1 443 3 view .LVU2045
 443:Core/Src/SEGGER_RTT.c ****   if (Rem > NumBytes) {
 4869              		.loc 1 443 7 is_stmt 0 view .LVU2046
 4870 01f6 A7EB0A02 		sub	r2, r7, r10
 4871              	.LVL486:
 444:Core/Src/SEGGER_RTT.c ****     //
 4872              		.loc 1 444 3 is_stmt 1 view .LVU2047
 444:Core/Src/SEGGER_RTT.c ****     //
 4873              		.loc 1 444 6 is_stmt 0 view .LVU2048
 4874 01fa 9045     		cmp	r8, r2
 4875 01fc DDD3     		bcc	.L211
 4876              	.L193:
 479:Core/Src/SEGGER_RTT.c ****     pDst = (pRing->pBuffer + WrOff) + SEGGER_RTT_UNCACHED_OFF;
 4877              		.loc 1 479 5 is_stmt 1 view .LVU2049
 4878              	.LVL487:
 480:Core/Src/SEGGER_RTT.c ****     SEGGER_RTT_MEMCPY((void*)pDst, pData, NumBytesAtOnce);
 4879              		.loc 1 480 5 view .LVU2050
 481:Core/Src/SEGGER_RTT.c ****     NumBytesAtOnce = NumBytes - Rem;
 4880              		.loc 1 481 5 view .LVU2051
 480:Core/Src/SEGGER_RTT.c ****     SEGGER_RTT_MEMCPY((void*)pDst, pData, NumBytesAtOnce);
 4881              		.loc 1 480 18 is_stmt 0 view .LVU2052
 4882 01fe 04F10109 		add	r9, r4, #1
 4883              	.LVL488:
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccSC4OZm.s 			page 140


 480:Core/Src/SEGGER_RTT.c ****     SEGGER_RTT_MEMCPY((void*)pDst, pData, NumBytesAtOnce);
 4884              		.loc 1 480 18 view .LVU2053
 4885 0202 09EB4909 		add	r9, r9, r9, lsl #1
 4886 0206 06EBC909 		add	r9, r6, r9, lsl #3
 481:Core/Src/SEGGER_RTT.c ****     NumBytesAtOnce = NumBytes - Rem;
 4887              		.loc 1 481 5 view .LVU2054
 4888 020a 5946     		mov	r1, fp
 480:Core/Src/SEGGER_RTT.c ****     SEGGER_RTT_MEMCPY((void*)pDst, pData, NumBytesAtOnce);
 4889              		.loc 1 480 10 view .LVU2055
 4890 020c D9F80400 		ldr	r0, [r9, #4]
 481:Core/Src/SEGGER_RTT.c ****     NumBytesAtOnce = NumBytes - Rem;
 4891              		.loc 1 481 5 view .LVU2056
 4892 0210 0192     		str	r2, [sp, #4]
 4893 0212 5044     		add	r0, r0, r10
 4894 0214 FFF7FEFF 		bl	memcpy
 4895              	.LVL489:
 482:Core/Src/SEGGER_RTT.c ****     pDst = pRing->pBuffer + SEGGER_RTT_UNCACHED_OFF;
 4896              		.loc 1 482 5 is_stmt 1 view .LVU2057
 482:Core/Src/SEGGER_RTT.c ****     pDst = pRing->pBuffer + SEGGER_RTT_UNCACHED_OFF;
 4897              		.loc 1 482 20 is_stmt 0 view .LVU2058
 4898 0218 A8EB0707 		sub	r7, r8, r7
 484:Core/Src/SEGGER_RTT.c ****     RTT__DMB();                     // Force data write to be complete before writing the <WrOff>, 
 4899              		.loc 1 484 5 view .LVU2059
 4900 021c 019A     		ldr	r2, [sp, #4]
 4901 021e D9F80400 		ldr	r0, [r9, #4]
 482:Core/Src/SEGGER_RTT.c ****     pDst = pRing->pBuffer + SEGGER_RTT_UNCACHED_OFF;
 4902              		.loc 1 482 20 view .LVU2060
 4903 0222 5744     		add	r7, r7, r10
 4904              	.LVL490:
 483:Core/Src/SEGGER_RTT.c ****     SEGGER_RTT_MEMCPY((void*)pDst, pData + Rem, NumBytesAtOnce);
 4905              		.loc 1 483 5 is_stmt 1 view .LVU2061
 484:Core/Src/SEGGER_RTT.c ****     RTT__DMB();                     // Force data write to be complete before writing the <WrOff>, 
 4906              		.loc 1 484 5 view .LVU2062
 4907 0224 0BEB0201 		add	r1, fp, r2
 4908 0228 3A46     		mov	r2, r7
 4909 022a FFF7FEFF 		bl	memcpy
 4910              	.LVL491:
 485:Core/Src/SEGGER_RTT.c ****     pRing->WrOff = NumBytesAtOnce;
 4911              		.loc 1 485 5 view .LVU2063
 4912              		.syntax unified
 4913              	@ 485 "Core/Src/SEGGER_RTT.c" 1
 4914 022e BFF35F8F 		dmb
 4915              	
 4916              	@ 0 "" 2
 485:Core/Src/SEGGER_RTT.c ****     pRing->WrOff = NumBytesAtOnce;
 4917              		.loc 1 485 15 view .LVU2064
 486:Core/Src/SEGGER_RTT.c **** #endif
 4918              		.loc 1 486 5 view .LVU2065
 486:Core/Src/SEGGER_RTT.c **** #endif
 4919              		.loc 1 486 18 is_stmt 0 view .LVU2066
 4920              		.thumb
 4921              		.syntax unified
 4922 0232 2544     		add	r5, r5, r4
 4923 0234 06EBC505 		add	r5, r6, r5, lsl #3
 4924 0238 6F62     		str	r7, [r5, #36]
 4925 023a 05E7     		b	.L187
 4926              	.LVL492:
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccSC4OZm.s 			page 141


 4927              	.L190:
 486:Core/Src/SEGGER_RTT.c **** #endif
 4928              		.loc 1 486 18 view .LVU2067
 4929              	.LBE266:
 4930              	.LBE268:
 4931              	.LBB269:
 4932              	.LBB257:
 479:Core/Src/SEGGER_RTT.c ****     pDst = (pRing->pBuffer + WrOff) + SEGGER_RTT_UNCACHED_OFF;
 4933              		.loc 1 479 5 is_stmt 1 view .LVU2068
 480:Core/Src/SEGGER_RTT.c ****     SEGGER_RTT_MEMCPY((void*)pDst, pData, NumBytesAtOnce);
 4934              		.loc 1 480 5 view .LVU2069
 481:Core/Src/SEGGER_RTT.c ****     NumBytesAtOnce = NumBytes - Rem;
 4935              		.loc 1 481 5 view .LVU2070
 480:Core/Src/SEGGER_RTT.c ****     SEGGER_RTT_MEMCPY((void*)pDst, pData, NumBytesAtOnce);
 4936              		.loc 1 480 18 is_stmt 0 view .LVU2071
 4937 023c 06EBC406 		add	r6, r6, r4, lsl #3
 482:Core/Src/SEGGER_RTT.c ****     pDst = pRing->pBuffer + SEGGER_RTT_UNCACHED_OFF;
 4938              		.loc 1 482 20 view .LVU2072
 4939 0240 09EB0A04 		add	r4, r9, r10
 480:Core/Src/SEGGER_RTT.c ****     SEGGER_RTT_MEMCPY((void*)pDst, pData, NumBytesAtOnce);
 4940              		.loc 1 480 10 view .LVU2073
 4941 0244 7068     		ldr	r0, [r6, #4]
 481:Core/Src/SEGGER_RTT.c ****     NumBytesAtOnce = NumBytes - Rem;
 4942              		.loc 1 481 5 view .LVU2074
 4943 0246 4246     		mov	r2, r8
 4944              	.LVL493:
 481:Core/Src/SEGGER_RTT.c ****     NumBytesAtOnce = NumBytes - Rem;
 4945              		.loc 1 481 5 view .LVU2075
 4946 0248 5946     		mov	r1, fp
 4947 024a 5044     		add	r0, r0, r10
 482:Core/Src/SEGGER_RTT.c ****     pDst = pRing->pBuffer + SEGGER_RTT_UNCACHED_OFF;
 4948              		.loc 1 482 20 view .LVU2076
 4949 024c E41B     		subs	r4, r4, r7
 481:Core/Src/SEGGER_RTT.c ****     NumBytesAtOnce = NumBytes - Rem;
 4950              		.loc 1 481 5 view .LVU2077
 4951 024e FFF7FEFF 		bl	memcpy
 4952              	.LVL494:
 482:Core/Src/SEGGER_RTT.c ****     pDst = pRing->pBuffer + SEGGER_RTT_UNCACHED_OFF;
 4953              		.loc 1 482 5 is_stmt 1 view .LVU2078
 483:Core/Src/SEGGER_RTT.c ****     SEGGER_RTT_MEMCPY((void*)pDst, pData + Rem, NumBytesAtOnce);
 4954              		.loc 1 483 5 view .LVU2079
 484:Core/Src/SEGGER_RTT.c ****     RTT__DMB();                     // Force data write to be complete before writing the <WrOff>, 
 4955              		.loc 1 484 5 view .LVU2080
 4956 0252 7068     		ldr	r0, [r6, #4]
 4957 0254 0BEB0801 		add	r1, fp, r8
 4958 0258 2246     		mov	r2, r4
 4959 025a FFF7FEFF 		bl	memcpy
 4960              	.LVL495:
 485:Core/Src/SEGGER_RTT.c ****     pRing->WrOff = NumBytesAtOnce;
 4961              		.loc 1 485 5 view .LVU2081
 4962              		.syntax unified
 4963              	@ 485 "Core/Src/SEGGER_RTT.c" 1
 4964 025e BFF35F8F 		dmb
 4965              	
 4966              	@ 0 "" 2
 485:Core/Src/SEGGER_RTT.c ****     pRing->WrOff = NumBytesAtOnce;
 4967              		.loc 1 485 15 view .LVU2082
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccSC4OZm.s 			page 142


 486:Core/Src/SEGGER_RTT.c **** #endif
 4968              		.loc 1 486 5 view .LVU2083
 486:Core/Src/SEGGER_RTT.c **** #endif
 4969              		.loc 1 486 18 is_stmt 0 view .LVU2084
 4970              		.thumb
 4971              		.syntax unified
 4972 0262 6C62     		str	r4, [r5, #36]
 4973 0264 C846     		mov	r8, r9
 4974              	.LVL496:
 486:Core/Src/SEGGER_RTT.c **** #endif
 4975              		.loc 1 486 18 view .LVU2085
 4976 0266 EFE6     		b	.L187
 4977              	.L213:
 4978              		.align	2
 4979              	.L212:
 4980 0268 00000000 		.word	.LANCHOR0
 4981 026c 00000000 		.word	.LC0
 4982 0270 00000000 		.word	.LANCHOR1
 4983 0274 00000000 		.word	.LANCHOR2
 4984              	.LBE257:
 4985              	.LBE269:
 4986              	.LBE271:
 4987              	.LBE273:
 4988              	.LBE275:
 4989              		.cfi_endproc
 4990              	.LFE13:
 4992              		.section	.text.SEGGER_RTT_WriteString,"ax",%progbits
 4993              		.align	1
 4994              		.p2align 2,,3
 4995              		.global	SEGGER_RTT_WriteString
 4996              		.syntax unified
 4997              		.thumb
 4998              		.thumb_func
 5000              	SEGGER_RTT_WriteString:
 5001              	.LVL497:
 5002              	.LFB14:
1213:Core/Src/SEGGER_RTT.c **** 
1214:Core/Src/SEGGER_RTT.c **** /*********************************************************************
1215:Core/Src/SEGGER_RTT.c **** *
1216:Core/Src/SEGGER_RTT.c **** *       SEGGER_RTT_WriteString
1217:Core/Src/SEGGER_RTT.c **** *
1218:Core/Src/SEGGER_RTT.c **** *  Function description
1219:Core/Src/SEGGER_RTT.c **** *    Stores string in SEGGER RTT control block.
1220:Core/Src/SEGGER_RTT.c **** *    This data is read by the host.
1221:Core/Src/SEGGER_RTT.c **** *
1222:Core/Src/SEGGER_RTT.c **** *  Parameters
1223:Core/Src/SEGGER_RTT.c **** *    BufferIndex  Index of "Up"-buffer to be used (e.g. 0 for "Terminal").
1224:Core/Src/SEGGER_RTT.c **** *    s            Pointer to string.
1225:Core/Src/SEGGER_RTT.c **** *
1226:Core/Src/SEGGER_RTT.c **** *  Return value
1227:Core/Src/SEGGER_RTT.c **** *    Number of bytes which have been stored in the "Up"-buffer.
1228:Core/Src/SEGGER_RTT.c **** *
1229:Core/Src/SEGGER_RTT.c **** *  Notes
1230:Core/Src/SEGGER_RTT.c **** *    (1) Data is stored according to buffer flags.
1231:Core/Src/SEGGER_RTT.c **** *    (2) String passed to this function has to be \0 terminated
1232:Core/Src/SEGGER_RTT.c **** *    (3) \0 termination character is *not* stored in RTT buffer
1233:Core/Src/SEGGER_RTT.c **** */
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccSC4OZm.s 			page 143


1234:Core/Src/SEGGER_RTT.c **** unsigned SEGGER_RTT_WriteString(unsigned BufferIndex, const char* s) {
 5003              		.loc 1 1234 70 is_stmt 1 view -0
 5004              		.cfi_startproc
 5005              		@ args = 0, pretend = 0, frame = 8
 5006              		@ frame_needed = 0, uses_anonymous_args = 0
1235:Core/Src/SEGGER_RTT.c ****   unsigned Len;
 5007              		.loc 1 1235 3 view .LVU2087
1236:Core/Src/SEGGER_RTT.c **** 
1237:Core/Src/SEGGER_RTT.c ****   Len = STRLEN(s);
 5008              		.loc 1 1237 3 view .LVU2088
1234:Core/Src/SEGGER_RTT.c ****   unsigned Len;
 5009              		.loc 1 1234 70 is_stmt 0 view .LVU2089
 5010 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 5011              		.cfi_def_cfa_offset 36
 5012              		.cfi_offset 4, -36
 5013              		.cfi_offset 5, -32
 5014              		.cfi_offset 6, -28
 5015              		.cfi_offset 7, -24
 5016              		.cfi_offset 8, -20
 5017              		.cfi_offset 9, -16
 5018              		.cfi_offset 10, -12
 5019              		.cfi_offset 11, -8
 5020              		.cfi_offset 14, -4
 5021              	.LBB294:
 5022              	.LBB295:
 5023              	.LBB296:
1207:Core/Src/SEGGER_RTT.c ****   SEGGER_RTT_LOCK();
 5024              		.loc 1 1207 3 view .LVU2090
 5025 0004 9A4E     		ldr	r6, .L243
 5026              	.LBE296:
 5027              	.LBE295:
 5028              	.LBE294:
1234:Core/Src/SEGGER_RTT.c ****   unsigned Len;
 5029              		.loc 1 1234 70 view .LVU2091
 5030 0006 83B0     		sub	sp, sp, #12
 5031              		.cfi_def_cfa_offset 48
1234:Core/Src/SEGGER_RTT.c ****   unsigned Len;
 5032              		.loc 1 1234 70 view .LVU2092
 5033 0008 0446     		mov	r4, r0
 5034              		.loc 1 1237 9 view .LVU2093
 5035 000a 0846     		mov	r0, r1
 5036              	.LVL498:
1234:Core/Src/SEGGER_RTT.c ****   unsigned Len;
 5037              		.loc 1 1234 70 view .LVU2094
 5038 000c 8B46     		mov	fp, r1
 5039              		.loc 1 1237 9 view .LVU2095
 5040 000e FFF7FEFF 		bl	strlen
 5041              	.LVL499:
 5042              	.LBB331:
 5043              	.LBB328:
 5044              	.LBB299:
1207:Core/Src/SEGGER_RTT.c ****   SEGGER_RTT_LOCK();
 5045              		.loc 1 1207 3 view .LVU2096
 5046 0012 3278     		ldrb	r2, [r6]	@ zero_extendqisi2
 5047              	.LBE299:
 5048              	.LBE328:
 5049              	.LBE331:
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccSC4OZm.s 			page 144


 5050              		.loc 1 1237 9 view .LVU2097
 5051 0014 8146     		mov	r9, r0
 5052              	.LVL500:
1238:Core/Src/SEGGER_RTT.c ****   return SEGGER_RTT_Write(BufferIndex, s, Len);
 5053              		.loc 1 1238 3 is_stmt 1 view .LVU2098
 5054              	.LBB332:
 5055              	.LBI294:
1204:Core/Src/SEGGER_RTT.c ****   unsigned Status;
 5056              		.loc 1 1204 10 view .LVU2099
 5057              	.LBB329:
1205:Core/Src/SEGGER_RTT.c **** 
 5058              		.loc 1 1205 3 view .LVU2100
 5059              	.LBB300:
1207:Core/Src/SEGGER_RTT.c ****   SEGGER_RTT_LOCK();
 5060              		.loc 1 1207 3 view .LVU2101
1207:Core/Src/SEGGER_RTT.c ****   SEGGER_RTT_LOCK();
 5061              		.loc 1 1207 3 view .LVU2102
1207:Core/Src/SEGGER_RTT.c ****   SEGGER_RTT_LOCK();
 5062              		.loc 1 1207 3 view .LVU2103
1207:Core/Src/SEGGER_RTT.c ****   SEGGER_RTT_LOCK();
 5063              		.loc 1 1207 3 view .LVU2104
 5064 0016 0AB3     		cbz	r2, .L237
 5065              	.LVL501:
 5066              	.L215:
1207:Core/Src/SEGGER_RTT.c ****   SEGGER_RTT_LOCK();
 5067              		.loc 1 1207 3 view .LVU2105
 5068              	.LBE300:
1207:Core/Src/SEGGER_RTT.c ****   SEGGER_RTT_LOCK();
 5069              		.loc 1 1207 9 view .LVU2106
 5070              	.LBB301:
1208:Core/Src/SEGGER_RTT.c ****   Status = SEGGER_RTT_WriteNoLock(BufferIndex, pBuffer, NumBytes);  // Call the non-locking write f
 5071              		.loc 1 1208 3 view .LVU2107
1208:Core/Src/SEGGER_RTT.c ****   Status = SEGGER_RTT_WriteNoLock(BufferIndex, pBuffer, NumBytes);  // Call the non-locking write f
 5072              		.loc 1 1208 3 view .LVU2108
 5073              		.syntax unified
 5074              	@ 1208 "Core/Src/SEGGER_RTT.c" 1
 5075 0018 EFF31183 		mrs   r3, basepri  
 5076 001c 4FF02001 		mov   r1, #32       
 5077 0020 81F31188 		msr   basepri, r1  
 5078              		
 5079              	@ 0 "" 2
 5080              		.thumb
 5081              		.syntax unified
 5082              	.LBB302:
 5083              	.LBB303:
1112:Core/Src/SEGGER_RTT.c ****   case SEGGER_RTT_MODE_NO_BLOCK_SKIP:
 5084              		.loc 1 1112 16 is_stmt 0 view .LVU2109
 5085 0024 04EB4407 		add	r7, r4, r4, lsl #1
 5086 0028 06EBC707 		add	r7, r6, r7, lsl #3
 5087              	.LBE303:
 5088              	.LBE302:
1208:Core/Src/SEGGER_RTT.c ****   Status = SEGGER_RTT_WriteNoLock(BufferIndex, pBuffer, NumBytes);  // Call the non-locking write f
 5089              		.loc 1 1208 3 view .LVU2110
 5090 002c 0093     		str	r3, [sp]
 5091              	.LVL502:
1208:Core/Src/SEGGER_RTT.c ****   Status = SEGGER_RTT_WriteNoLock(BufferIndex, pBuffer, NumBytes);  // Call the non-locking write f
 5092              		.loc 1 1208 20 is_stmt 1 view .LVU2111
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccSC4OZm.s 			page 145


1209:Core/Src/SEGGER_RTT.c ****   SEGGER_RTT_UNLOCK();
 5093              		.loc 1 1209 3 view .LVU2112
 5094              	.LBB324:
 5095              	.LBI302:
1099:Core/Src/SEGGER_RTT.c ****   unsigned              Status;
 5096              		.loc 1 1099 10 view .LVU2113
 5097              	.LBB322:
1100:Core/Src/SEGGER_RTT.c ****   unsigned              Avail;
 5098              		.loc 1 1100 3 view .LVU2114
1101:Core/Src/SEGGER_RTT.c ****   const char*           pData;
 5099              		.loc 1 1101 3 view .LVU2115
1102:Core/Src/SEGGER_RTT.c ****   SEGGER_RTT_BUFFER_UP* pRing;
 5100              		.loc 1 1102 3 view .LVU2116
1103:Core/Src/SEGGER_RTT.c ****   //
 5101              		.loc 1 1103 3 view .LVU2117
1107:Core/Src/SEGGER_RTT.c ****   pRing = (SEGGER_RTT_BUFFER_UP*)((char*)&_SEGGER_RTT.aUp[BufferIndex] + SEGGER_RTT_UNCACHED_OFF); 
 5102              		.loc 1 1107 3 view .LVU2118
1108:Core/Src/SEGGER_RTT.c ****   //
 5103              		.loc 1 1108 3 view .LVU2119
1112:Core/Src/SEGGER_RTT.c ****   case SEGGER_RTT_MODE_NO_BLOCK_SKIP:
 5104              		.loc 1 1112 3 view .LVU2120
1112:Core/Src/SEGGER_RTT.c ****   case SEGGER_RTT_MODE_NO_BLOCK_SKIP:
 5105              		.loc 1 1112 16 is_stmt 0 view .LVU2121
 5106 002e D7F82C80 		ldr	r8, [r7, #44]
1112:Core/Src/SEGGER_RTT.c ****   case SEGGER_RTT_MODE_NO_BLOCK_SKIP:
 5107              		.loc 1 1112 3 view .LVU2122
 5108 0032 B8F1010F 		cmp	r8, #1
1112:Core/Src/SEGGER_RTT.c ****   case SEGGER_RTT_MODE_NO_BLOCK_SKIP:
 5109              		.loc 1 1112 16 view .LVU2123
 5110 0036 4FEA4405 		lsl	r5, r4, #1
1112:Core/Src/SEGGER_RTT.c ****   case SEGGER_RTT_MODE_NO_BLOCK_SKIP:
 5111              		.loc 1 1112 3 view .LVU2124
 5112 003a 00F0B080 		beq	.L216
 5113 003e B8F1020F 		cmp	r8, #2
 5114 0042 6CD0     		beq	.L217
 5115 0044 B8F1000F 		cmp	r8, #0
 5116 0048 42D0     		beq	.L238
 5117 004a 4FF00008 		mov	r8, #0
 5118              	.LVL503:
 5119              	.L218:
1147:Core/Src/SEGGER_RTT.c **** }
 5120              		.loc 1 1147 3 is_stmt 1 view .LVU2125
1147:Core/Src/SEGGER_RTT.c **** }
 5121              		.loc 1 1147 3 is_stmt 0 view .LVU2126
 5122              	.LBE322:
 5123              	.LBE324:
1210:Core/Src/SEGGER_RTT.c ****   return Status;
 5124              		.loc 1 1210 3 is_stmt 1 view .LVU2127
 5125 004e 009B     		ldr	r3, [sp]
 5126              		.syntax unified
 5127              	@ 1210 "Core/Src/SEGGER_RTT.c" 1
 5128 0050 83F31188 		msr   basepri, r3  
 5129              		
 5130              	@ 0 "" 2
 5131              		.thumb
 5132              		.syntax unified
 5133              	.LBE301:
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccSC4OZm.s 			page 146


1210:Core/Src/SEGGER_RTT.c ****   return Status;
 5134              		.loc 1 1210 22 view .LVU2128
1211:Core/Src/SEGGER_RTT.c **** }
 5135              		.loc 1 1211 3 view .LVU2129
 5136              	.LVL504:
1211:Core/Src/SEGGER_RTT.c **** }
 5137              		.loc 1 1211 3 is_stmt 0 view .LVU2130
 5138              	.LBE329:
 5139              	.LBE332:
1239:Core/Src/SEGGER_RTT.c **** }
 5140              		.loc 1 1239 1 view .LVU2131
 5141 0054 4046     		mov	r0, r8
 5142 0056 03B0     		add	sp, sp, #12
 5143              		.cfi_remember_state
 5144              		.cfi_def_cfa_offset 36
 5145              		@ sp needed
 5146 0058 BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 5147              	.LVL505:
 5148              	.L237:
 5149              		.cfi_restore_state
 5150              		.loc 1 1239 1 view .LVU2132
 5151 005c 02F0FF05 		and	r5, r2, #255
 5152              	.LBB333:
 5153              	.LBB330:
 5154              	.LBB326:
1207:Core/Src/SEGGER_RTT.c ****   SEGGER_RTT_LOCK();
 5155              		.loc 1 1207 3 is_stmt 1 view .LVU2133
 5156              	.LBB297:
 5157              	.LBI297:
 314:Core/Src/SEGGER_RTT.c ****   volatile SEGGER_RTT_CB* p;   // Volatile to make sure that compiler cannot change the order of ac
 5158              		.loc 1 314 13 view .LVU2134
 5159              	.LBB298:
 315:Core/Src/SEGGER_RTT.c ****   static const char _aInitStr[] = "\0\0\0\0\0\0TTR REGGES";  // Init complete ID string to make sur
 5160              		.loc 1 315 3 view .LVU2135
 316:Core/Src/SEGGER_RTT.c ****   unsigned i;
 5161              		.loc 1 316 3 view .LVU2136
 317:Core/Src/SEGGER_RTT.c ****   //
 5162              		.loc 1 317 3 view .LVU2137
 321:Core/Src/SEGGER_RTT.c ****   memset((SEGGER_RTT_CB*)p, 0, sizeof(_SEGGER_RTT));         // Make sure that the RTT CB is always
 5163              		.loc 1 321 3 view .LVU2138
 5164              	.LVL506:
 322:Core/Src/SEGGER_RTT.c ****   p->MaxNumUpBuffers    = SEGGER_RTT_MAX_NUM_UP_BUFFERS;
 5165              		.loc 1 322 3 view .LVU2139
 5166 0060 2946     		mov	r1, r5
 5167 0062 7822     		movs	r2, #120
 5168 0064 06F13000 		add	r0, r6, #48
 5169              	.LVL507:
 322:Core/Src/SEGGER_RTT.c ****   p->MaxNumUpBuffers    = SEGGER_RTT_MAX_NUM_UP_BUFFERS;
 5170              		.loc 1 322 3 is_stmt 0 view .LVU2140
 5171 0068 FFF7FEFF 		bl	memset
 5172              	.LVL508:
 323:Core/Src/SEGGER_RTT.c ****   p->MaxNumDownBuffers  = SEGGER_RTT_MAX_NUM_DOWN_BUFFERS;
 5173              		.loc 1 323 3 is_stmt 1 view .LVU2141
 323:Core/Src/SEGGER_RTT.c ****   p->MaxNumDownBuffers  = SEGGER_RTT_MAX_NUM_DOWN_BUFFERS;
 5174              		.loc 1 323 25 is_stmt 0 view .LVU2142
 5175 006c 0321     		movs	r1, #3
 5176 006e 3161     		str	r1, [r6, #16]
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccSC4OZm.s 			page 147


 324:Core/Src/SEGGER_RTT.c ****   //
 5177              		.loc 1 324 3 is_stmt 1 view .LVU2143
 328:Core/Src/SEGGER_RTT.c ****   p->aUp[0].pBuffer       = _acUpBuffer;
 5178              		.loc 1 328 27 is_stmt 0 view .LVU2144
 5179 0070 804A     		ldr	r2, .L243+4
 324:Core/Src/SEGGER_RTT.c ****   //
 5180              		.loc 1 324 25 view .LVU2145
 5181 0072 7161     		str	r1, [r6, #20]
 328:Core/Src/SEGGER_RTT.c ****   p->aUp[0].pBuffer       = _acUpBuffer;
 5182              		.loc 1 328 3 is_stmt 1 view .LVU2146
 330:Core/Src/SEGGER_RTT.c ****   p->aUp[0].RdOff         = 0u;
 5183              		.loc 1 330 27 is_stmt 0 view .LVU2147
 5184 0074 4FF48060 		mov	r0, #1024
 329:Core/Src/SEGGER_RTT.c ****   p->aUp[0].SizeOfBuffer  = BUFFER_SIZE_UP;
 5185              		.loc 1 329 27 view .LVU2148
 5186 0078 7F49     		ldr	r1, .L243+8
 328:Core/Src/SEGGER_RTT.c ****   p->aUp[0].pBuffer       = _acUpBuffer;
 5187              		.loc 1 328 27 view .LVU2149
 5188 007a B261     		str	r2, [r6, #24]
 329:Core/Src/SEGGER_RTT.c ****   p->aUp[0].SizeOfBuffer  = BUFFER_SIZE_UP;
 5189              		.loc 1 329 3 is_stmt 1 view .LVU2150
 329:Core/Src/SEGGER_RTT.c ****   p->aUp[0].SizeOfBuffer  = BUFFER_SIZE_UP;
 5190              		.loc 1 329 27 is_stmt 0 view .LVU2151
 5191 007c F161     		str	r1, [r6, #28]
 330:Core/Src/SEGGER_RTT.c ****   p->aUp[0].RdOff         = 0u;
 5192              		.loc 1 330 3 is_stmt 1 view .LVU2152
 330:Core/Src/SEGGER_RTT.c ****   p->aUp[0].RdOff         = 0u;
 5193              		.loc 1 330 27 is_stmt 0 view .LVU2153
 5194 007e 3062     		str	r0, [r6, #32]
 331:Core/Src/SEGGER_RTT.c ****   p->aUp[0].WrOff         = 0u;
 5195              		.loc 1 331 3 is_stmt 1 view .LVU2154
 338:Core/Src/SEGGER_RTT.c ****   p->aDown[0].SizeOfBuffer  = BUFFER_SIZE_DOWN;
 5196              		.loc 1 338 29 is_stmt 0 view .LVU2155
 5197 0080 7E49     		ldr	r1, .L243+12
 331:Core/Src/SEGGER_RTT.c ****   p->aUp[0].WrOff         = 0u;
 5198              		.loc 1 331 27 view .LVU2156
 5199 0082 B562     		str	r5, [r6, #40]
 332:Core/Src/SEGGER_RTT.c ****   p->aUp[0].Flags         = SEGGER_RTT_MODE_DEFAULT;
 5200              		.loc 1 332 3 is_stmt 1 view .LVU2157
 332:Core/Src/SEGGER_RTT.c ****   p->aUp[0].Flags         = SEGGER_RTT_MODE_DEFAULT;
 5201              		.loc 1 332 27 is_stmt 0 view .LVU2158
 5202 0084 7562     		str	r5, [r6, #36]
 333:Core/Src/SEGGER_RTT.c ****   //
 5203              		.loc 1 333 3 is_stmt 1 view .LVU2159
 333:Core/Src/SEGGER_RTT.c ****   //
 5204              		.loc 1 333 27 is_stmt 0 view .LVU2160
 5205 0086 F562     		str	r5, [r6, #44]
 337:Core/Src/SEGGER_RTT.c ****   p->aDown[0].pBuffer       = _acDownBuffer;
 5206              		.loc 1 337 3 is_stmt 1 view .LVU2161
 337:Core/Src/SEGGER_RTT.c ****   p->aDown[0].pBuffer       = _acDownBuffer;
 5207              		.loc 1 337 29 is_stmt 0 view .LVU2162
 5208 0088 3266     		str	r2, [r6, #96]
 338:Core/Src/SEGGER_RTT.c ****   p->aDown[0].SizeOfBuffer  = BUFFER_SIZE_DOWN;
 5209              		.loc 1 338 3 is_stmt 1 view .LVU2163
 339:Core/Src/SEGGER_RTT.c ****   p->aDown[0].RdOff         = 0u;
 5210              		.loc 1 339 29 is_stmt 0 view .LVU2164
 5211 008a 1022     		movs	r2, #16
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccSC4OZm.s 			page 148


 338:Core/Src/SEGGER_RTT.c ****   p->aDown[0].SizeOfBuffer  = BUFFER_SIZE_DOWN;
 5212              		.loc 1 338 29 view .LVU2165
 5213 008c 7166     		str	r1, [r6, #100]
 339:Core/Src/SEGGER_RTT.c ****   p->aDown[0].RdOff         = 0u;
 5214              		.loc 1 339 3 is_stmt 1 view .LVU2166
 339:Core/Src/SEGGER_RTT.c ****   p->aDown[0].RdOff         = 0u;
 5215              		.loc 1 339 29 is_stmt 0 view .LVU2167
 5216 008e B266     		str	r2, [r6, #104]
 340:Core/Src/SEGGER_RTT.c ****   p->aDown[0].WrOff         = 0u;
 5217              		.loc 1 340 3 is_stmt 1 view .LVU2168
 340:Core/Src/SEGGER_RTT.c ****   p->aDown[0].WrOff         = 0u;
 5218              		.loc 1 340 29 is_stmt 0 view .LVU2169
 5219 0090 3567     		str	r5, [r6, #112]
 341:Core/Src/SEGGER_RTT.c ****   p->aDown[0].Flags         = SEGGER_RTT_MODE_DEFAULT;
 5220              		.loc 1 341 3 is_stmt 1 view .LVU2170
 341:Core/Src/SEGGER_RTT.c ****   p->aDown[0].Flags         = SEGGER_RTT_MODE_DEFAULT;
 5221              		.loc 1 341 29 is_stmt 0 view .LVU2171
 5222 0092 F566     		str	r5, [r6, #108]
 342:Core/Src/SEGGER_RTT.c ****   //
 5223              		.loc 1 342 3 is_stmt 1 view .LVU2172
 342:Core/Src/SEGGER_RTT.c ****   //
 5224              		.loc 1 342 29 is_stmt 0 view .LVU2173
 5225 0094 7567     		str	r5, [r6, #116]
 348:Core/Src/SEGGER_RTT.c ****   for (i = 0; i < sizeof(_aInitStr) - 1; ++i) {
 5226              		.loc 1 348 3 is_stmt 1 view .LVU2174
 5227              		.syntax unified
 5228              	@ 348 "Core/Src/SEGGER_RTT.c" 1
 5229 0096 BFF35F8F 		dmb
 5230              	
 5231              	@ 0 "" 2
 348:Core/Src/SEGGER_RTT.c ****   for (i = 0; i < sizeof(_aInitStr) - 1; ++i) {
 5232              		.loc 1 348 13 view .LVU2175
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 5233              		.loc 1 349 3 view .LVU2176
 5234              	.LVL509:
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 5235              		.loc 1 349 17 view .LVU2177
 350:Core/Src/SEGGER_RTT.c ****   }
 5236              		.loc 1 350 5 view .LVU2178
 350:Core/Src/SEGGER_RTT.c ****   }
 5237              		.loc 1 350 16 is_stmt 0 view .LVU2179
 5238              		.thumb
 5239              		.syntax unified
 5240 009a 4520     		movs	r0, #69
 5241 009c 4727     		movs	r7, #71
 5242 009e 4FF0530C 		mov	ip, #83
 5243 00a2 86F800C0 		strb	ip, [r6]
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 5244              		.loc 1 349 42 is_stmt 1 view .LVU2180
 5245              	.LVL510:
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 5246              		.loc 1 349 17 view .LVU2181
 350:Core/Src/SEGGER_RTT.c ****   }
 5247              		.loc 1 350 5 view .LVU2182
 350:Core/Src/SEGGER_RTT.c ****   }
 5248              		.loc 1 350 16 is_stmt 0 view .LVU2183
 5249 00a6 5221     		movs	r1, #82
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccSC4OZm.s 			page 149


 5250 00a8 7070     		strb	r0, [r6, #1]
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 5251              		.loc 1 349 42 is_stmt 1 view .LVU2184
 5252              	.LVL511:
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 5253              		.loc 1 349 17 view .LVU2185
 350:Core/Src/SEGGER_RTT.c ****   }
 5254              		.loc 1 350 5 view .LVU2186
 350:Core/Src/SEGGER_RTT.c ****   }
 5255              		.loc 1 350 16 is_stmt 0 view .LVU2187
 5256 00aa 5422     		movs	r2, #84
 5257 00ac B770     		strb	r7, [r6, #2]
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 5258              		.loc 1 349 42 is_stmt 1 view .LVU2188
 5259              	.LVL512:
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 5260              		.loc 1 349 17 view .LVU2189
 350:Core/Src/SEGGER_RTT.c ****   }
 5261              		.loc 1 350 5 view .LVU2190
 350:Core/Src/SEGGER_RTT.c ****   }
 5262              		.loc 1 350 16 is_stmt 0 view .LVU2191
 5263 00ae F770     		strb	r7, [r6, #3]
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 5264              		.loc 1 349 42 is_stmt 1 view .LVU2192
 5265              	.LVL513:
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 5266              		.loc 1 349 17 view .LVU2193
 350:Core/Src/SEGGER_RTT.c ****   }
 5267              		.loc 1 350 5 view .LVU2194
 350:Core/Src/SEGGER_RTT.c ****   }
 5268              		.loc 1 350 16 is_stmt 0 view .LVU2195
 5269 00b0 3071     		strb	r0, [r6, #4]
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 5270              		.loc 1 349 42 is_stmt 1 view .LVU2196
 5271              	.LVL514:
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 5272              		.loc 1 349 17 view .LVU2197
 350:Core/Src/SEGGER_RTT.c ****   }
 5273              		.loc 1 350 5 view .LVU2198
 350:Core/Src/SEGGER_RTT.c ****   }
 5274              		.loc 1 350 16 is_stmt 0 view .LVU2199
 5275 00b2 2020     		movs	r0, #32
 5276 00b4 7171     		strb	r1, [r6, #5]
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 5277              		.loc 1 349 42 is_stmt 1 view .LVU2200
 5278              	.LVL515:
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 5279              		.loc 1 349 17 view .LVU2201
 350:Core/Src/SEGGER_RTT.c ****   }
 5280              		.loc 1 350 5 view .LVU2202
 350:Core/Src/SEGGER_RTT.c ****   }
 5281              		.loc 1 350 16 is_stmt 0 view .LVU2203
 5282 00b6 B071     		strb	r0, [r6, #6]
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 5283              		.loc 1 349 42 is_stmt 1 view .LVU2204
 5284              	.LVL516:
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccSC4OZm.s 			page 150


 5285              		.loc 1 349 17 view .LVU2205
 350:Core/Src/SEGGER_RTT.c ****   }
 5286              		.loc 1 350 5 view .LVU2206
 350:Core/Src/SEGGER_RTT.c ****   }
 5287              		.loc 1 350 16 is_stmt 0 view .LVU2207
 5288 00b8 F171     		strb	r1, [r6, #7]
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 5289              		.loc 1 349 42 is_stmt 1 view .LVU2208
 5290              	.LVL517:
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 5291              		.loc 1 349 17 view .LVU2209
 350:Core/Src/SEGGER_RTT.c ****   }
 5292              		.loc 1 350 5 view .LVU2210
 350:Core/Src/SEGGER_RTT.c ****   }
 5293              		.loc 1 350 16 is_stmt 0 view .LVU2211
 5294 00ba 3272     		strb	r2, [r6, #8]
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 5295              		.loc 1 349 42 is_stmt 1 view .LVU2212
 5296              	.LVL518:
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 5297              		.loc 1 349 17 view .LVU2213
 350:Core/Src/SEGGER_RTT.c ****   }
 5298              		.loc 1 350 5 view .LVU2214
 350:Core/Src/SEGGER_RTT.c ****   }
 5299              		.loc 1 350 16 is_stmt 0 view .LVU2215
 5300 00bc 7272     		strb	r2, [r6, #9]
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 5301              		.loc 1 349 42 is_stmt 1 view .LVU2216
 5302              	.LVL519:
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 5303              		.loc 1 349 17 view .LVU2217
 350:Core/Src/SEGGER_RTT.c ****   }
 5304              		.loc 1 350 5 view .LVU2218
 350:Core/Src/SEGGER_RTT.c ****   }
 5305              		.loc 1 350 16 is_stmt 0 view .LVU2219
 5306 00be B572     		strb	r5, [r6, #10]
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 5307              		.loc 1 349 42 is_stmt 1 view .LVU2220
 5308              	.LVL520:
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 5309              		.loc 1 349 17 view .LVU2221
 350:Core/Src/SEGGER_RTT.c ****   }
 5310              		.loc 1 350 5 view .LVU2222
 350:Core/Src/SEGGER_RTT.c ****   }
 5311              		.loc 1 350 16 is_stmt 0 view .LVU2223
 5312 00c0 F572     		strb	r5, [r6, #11]
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 5313              		.loc 1 349 42 is_stmt 1 view .LVU2224
 5314              	.LVL521:
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 5315              		.loc 1 349 17 view .LVU2225
 350:Core/Src/SEGGER_RTT.c ****   }
 5316              		.loc 1 350 5 view .LVU2226
 350:Core/Src/SEGGER_RTT.c ****   }
 5317              		.loc 1 350 16 is_stmt 0 view .LVU2227
 5318 00c2 3573     		strb	r5, [r6, #12]
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccSC4OZm.s 			page 151


 5319              		.loc 1 349 42 is_stmt 1 view .LVU2228
 5320              	.LVL522:
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 5321              		.loc 1 349 17 view .LVU2229
 350:Core/Src/SEGGER_RTT.c ****   }
 5322              		.loc 1 350 5 view .LVU2230
 350:Core/Src/SEGGER_RTT.c ****   }
 5323              		.loc 1 350 16 is_stmt 0 view .LVU2231
 5324 00c4 7573     		strb	r5, [r6, #13]
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 5325              		.loc 1 349 42 is_stmt 1 view .LVU2232
 5326              	.LVL523:
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 5327              		.loc 1 349 17 view .LVU2233
 350:Core/Src/SEGGER_RTT.c ****   }
 5328              		.loc 1 350 5 view .LVU2234
 350:Core/Src/SEGGER_RTT.c ****   }
 5329              		.loc 1 350 16 is_stmt 0 view .LVU2235
 5330 00c6 B573     		strb	r5, [r6, #14]
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 5331              		.loc 1 349 42 is_stmt 1 view .LVU2236
 5332              	.LVL524:
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 5333              		.loc 1 349 17 view .LVU2237
 350:Core/Src/SEGGER_RTT.c ****   }
 5334              		.loc 1 350 5 view .LVU2238
 350:Core/Src/SEGGER_RTT.c ****   }
 5335              		.loc 1 350 16 is_stmt 0 view .LVU2239
 5336 00c8 F573     		strb	r5, [r6, #15]
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 5337              		.loc 1 349 42 is_stmt 1 view .LVU2240
 5338              	.LVL525:
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 5339              		.loc 1 349 17 view .LVU2241
 352:Core/Src/SEGGER_RTT.c **** }
 5340              		.loc 1 352 3 view .LVU2242
 5341              		.syntax unified
 5342              	@ 352 "Core/Src/SEGGER_RTT.c" 1
 5343 00ca BFF35F8F 		dmb
 5344              	
 5345              	@ 0 "" 2
 352:Core/Src/SEGGER_RTT.c **** }
 5346              		.loc 1 352 13 view .LVU2243
 353:Core/Src/SEGGER_RTT.c **** 
 5347              		.loc 1 353 1 is_stmt 0 view .LVU2244
 5348              		.thumb
 5349              		.syntax unified
 5350 00ce A3E7     		b	.L215
 5351              	.LVL526:
 5352              	.L238:
 353:Core/Src/SEGGER_RTT.c **** 
 5353              		.loc 1 353 1 view .LVU2245
 5354              	.LBE298:
 5355              	.LBE297:
 5356              	.LBE326:
 5357              	.LBB327:
 5358              	.LBB325:
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccSC4OZm.s 			page 152


 5359              	.LBB323:
1118:Core/Src/SEGGER_RTT.c ****     if (Avail < NumBytes) {
 5360              		.loc 1 1118 5 is_stmt 1 view .LVU2246
 5361              	.LBB304:
 5362              	.LBI304:
 526:Core/Src/SEGGER_RTT.c ****   unsigned RdOff;
 5363              		.loc 1 526 17 view .LVU2247
 5364              	.LBB305:
 527:Core/Src/SEGGER_RTT.c ****   unsigned WrOff;
 5365              		.loc 1 527 3 view .LVU2248
 528:Core/Src/SEGGER_RTT.c ****   unsigned r;
 5366              		.loc 1 528 3 view .LVU2249
 529:Core/Src/SEGGER_RTT.c ****   //
 5367              		.loc 1 529 3 view .LVU2250
 534:Core/Src/SEGGER_RTT.c ****   WrOff = pRing->WrOff;
 5368              		.loc 1 534 3 view .LVU2251
 534:Core/Src/SEGGER_RTT.c ****   WrOff = pRing->WrOff;
 5369              		.loc 1 534 9 is_stmt 0 view .LVU2252
 5370 00d0 BA6A     		ldr	r2, [r7, #40]
 5371              	.LVL527:
 535:Core/Src/SEGGER_RTT.c ****   if (RdOff <= WrOff) {
 5372              		.loc 1 535 3 is_stmt 1 view .LVU2253
 535:Core/Src/SEGGER_RTT.c ****   if (RdOff <= WrOff) {
 5373              		.loc 1 535 9 is_stmt 0 view .LVU2254
 5374 00d2 D7F824A0 		ldr	r10, [r7, #36]
 5375              	.LVL528:
 536:Core/Src/SEGGER_RTT.c ****     r = pRing->SizeOfBuffer - 1u - WrOff + RdOff;
 5376              		.loc 1 536 3 is_stmt 1 view .LVU2255
 536:Core/Src/SEGGER_RTT.c ****     r = pRing->SizeOfBuffer - 1u - WrOff + RdOff;
 5377              		.loc 1 536 6 is_stmt 0 view .LVU2256
 5378 00d6 5245     		cmp	r2, r10
 537:Core/Src/SEGGER_RTT.c ****   } else {
 5379              		.loc 1 537 5 is_stmt 1 view .LVU2257
 537:Core/Src/SEGGER_RTT.c ****   } else {
 5380              		.loc 1 537 7 is_stmt 0 view .LVU2258
 5381 00d8 9CBF     		itt	ls
 5382 00da 396A     		ldrls	r1, [r7, #32]
 5383 00dc 5218     		addls	r2, r2, r1
 5384              	.LVL529:
 539:Core/Src/SEGGER_RTT.c ****   }
 5385              		.loc 1 539 5 is_stmt 1 view .LVU2259
 539:Core/Src/SEGGER_RTT.c ****   }
 5386              		.loc 1 539 7 is_stmt 0 view .LVU2260
 5387 00de 013A     		subs	r2, r2, #1
 5388 00e0 A2EB0A02 		sub	r2, r2, r10
 5389              	.LVL530:
 541:Core/Src/SEGGER_RTT.c **** }
 5390              		.loc 1 541 3 is_stmt 1 view .LVU2261
 541:Core/Src/SEGGER_RTT.c **** }
 5391              		.loc 1 541 3 is_stmt 0 view .LVU2262
 5392              	.LBE305:
 5393              	.LBE304:
1119:Core/Src/SEGGER_RTT.c ****       Status = 0u;
 5394              		.loc 1 1119 5 is_stmt 1 view .LVU2263
1119:Core/Src/SEGGER_RTT.c ****       Status = 0u;
 5395              		.loc 1 1119 8 is_stmt 0 view .LVU2264
 5396 00e4 9145     		cmp	r9, r2
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccSC4OZm.s 			page 153


 5397 00e6 B2D8     		bhi	.L218
1122:Core/Src/SEGGER_RTT.c ****       _WriteNoCheck(pRing, pData, NumBytes);
 5398              		.loc 1 1122 7 is_stmt 1 view .LVU2265
 5399              	.LVL531:
1123:Core/Src/SEGGER_RTT.c ****     }
 5400              		.loc 1 1123 7 view .LVU2266
 5401              	.LBB307:
 5402              	.LBI307:
 436:Core/Src/SEGGER_RTT.c ****   unsigned NumBytesAtOnce;
 5403              		.loc 1 436 13 view .LVU2267
 5404              	.LBB308:
 437:Core/Src/SEGGER_RTT.c ****   unsigned WrOff;
 5405              		.loc 1 437 3 view .LVU2268
 438:Core/Src/SEGGER_RTT.c ****   unsigned Rem;
 5406              		.loc 1 438 3 view .LVU2269
 439:Core/Src/SEGGER_RTT.c ****   volatile char* pDst;
 5407              		.loc 1 439 3 view .LVU2270
 440:Core/Src/SEGGER_RTT.c **** 
 5408              		.loc 1 440 3 view .LVU2271
 442:Core/Src/SEGGER_RTT.c ****   Rem = pRing->SizeOfBuffer - WrOff;
 5409              		.loc 1 442 3 view .LVU2272
 443:Core/Src/SEGGER_RTT.c ****   if (Rem > NumBytes) {
 5410              		.loc 1 443 3 view .LVU2273
 443:Core/Src/SEGGER_RTT.c ****   if (Rem > NumBytes) {
 5411              		.loc 1 443 14 is_stmt 0 view .LVU2274
 5412 00e8 2544     		add	r5, r5, r4
 5413 00ea 06EBC505 		add	r5, r6, r5, lsl #3
 448:Core/Src/SEGGER_RTT.c **** #if SEGGER_RTT_MEMCPY_USE_BYTELOOP
 5414              		.loc 1 448 18 view .LVU2275
 5415 00ee 0134     		adds	r4, r4, #1
 5416              	.LVL532:
 443:Core/Src/SEGGER_RTT.c ****   if (Rem > NumBytes) {
 5417              		.loc 1 443 14 view .LVU2276
 5418 00f0 2F6A     		ldr	r7, [r5, #32]
 443:Core/Src/SEGGER_RTT.c ****   if (Rem > NumBytes) {
 5419              		.loc 1 443 7 view .LVU2277
 5420 00f2 A7EB0A08 		sub	r8, r7, r10
 5421              	.LVL533:
 444:Core/Src/SEGGER_RTT.c ****     //
 5422              		.loc 1 444 3 is_stmt 1 view .LVU2278
 444:Core/Src/SEGGER_RTT.c ****     //
 5423              		.loc 1 444 6 is_stmt 0 view .LVU2279
 5424 00f6 C145     		cmp	r9, r8
 448:Core/Src/SEGGER_RTT.c **** #if SEGGER_RTT_MEMCPY_USE_BYTELOOP
 5425              		.loc 1 448 18 view .LVU2280
 5426 00f8 04EB4404 		add	r4, r4, r4, lsl #1
 5427              	.LVL534:
 444:Core/Src/SEGGER_RTT.c ****     //
 5428              		.loc 1 444 6 view .LVU2281
 5429 00fc 80F0A180 		bcs	.L221
 448:Core/Src/SEGGER_RTT.c **** #if SEGGER_RTT_MEMCPY_USE_BYTELOOP
 5430              		.loc 1 448 5 is_stmt 1 view .LVU2282
 5431              	.LVL535:
 457:Core/Src/SEGGER_RTT.c ****     RTT__DMB();                     // Force data write to be complete before writing the <WrOff>, 
 5432              		.loc 1 457 5 view .LVU2283
 448:Core/Src/SEGGER_RTT.c **** #if SEGGER_RTT_MEMCPY_USE_BYTELOOP
 5433              		.loc 1 448 18 is_stmt 0 view .LVU2284
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccSC4OZm.s 			page 154


 5434 0100 06EBC402 		add	r2, r6, r4, lsl #3
 5435              	.LVL536:
 457:Core/Src/SEGGER_RTT.c ****     RTT__DMB();                     // Force data write to be complete before writing the <WrOff>, 
 5436              		.loc 1 457 5 view .LVU2285
 5437 0104 5946     		mov	r1, fp
 448:Core/Src/SEGGER_RTT.c **** #if SEGGER_RTT_MEMCPY_USE_BYTELOOP
 5438              		.loc 1 448 10 view .LVU2286
 5439 0106 5068     		ldr	r0, [r2, #4]
 457:Core/Src/SEGGER_RTT.c ****     RTT__DMB();                     // Force data write to be complete before writing the <WrOff>, 
 5440              		.loc 1 457 5 view .LVU2287
 5441 0108 4A46     		mov	r2, r9
 5442 010a 5044     		add	r0, r0, r10
 5443 010c FFF7FEFF 		bl	memcpy
 5444              	.LVL537:
 458:Core/Src/SEGGER_RTT.c ****     pRing->WrOff = WrOff + NumBytes;
 5445              		.loc 1 458 5 is_stmt 1 view .LVU2288
 5446              		.syntax unified
 5447              	@ 458 "Core/Src/SEGGER_RTT.c" 1
 5448 0110 BFF35F8F 		dmb
 5449              	
 5450              	@ 0 "" 2
 458:Core/Src/SEGGER_RTT.c ****     pRing->WrOff = WrOff + NumBytes;
 5451              		.loc 1 458 15 view .LVU2289
 459:Core/Src/SEGGER_RTT.c **** #endif
 5452              		.loc 1 459 5 view .LVU2290
 459:Core/Src/SEGGER_RTT.c **** #endif
 5453              		.loc 1 459 26 is_stmt 0 view .LVU2291
 5454              		.thumb
 5455              		.syntax unified
 5456 0114 09EB0A03 		add	r3, r9, r10
 459:Core/Src/SEGGER_RTT.c **** #endif
 5457              		.loc 1 459 18 view .LVU2292
 5458 0118 6B62     		str	r3, [r5, #36]
 5459 011a C846     		mov	r8, r9
 5460              	.LVL538:
 459:Core/Src/SEGGER_RTT.c **** #endif
 5461              		.loc 1 459 18 view .LVU2293
 5462 011c 97E7     		b	.L218
 5463              	.LVL539:
 5464              	.L217:
 459:Core/Src/SEGGER_RTT.c **** #endif
 5465              		.loc 1 459 18 view .LVU2294
 5466              	.LBE308:
 5467              	.LBE307:
1138:Core/Src/SEGGER_RTT.c ****     break;
 5468              		.loc 1 1138 5 is_stmt 1 view .LVU2295
 5469              	.LBB310:
 5470              	.LBI310:
 374:Core/Src/SEGGER_RTT.c ****   unsigned NumBytesToWrite;
 5471              		.loc 1 374 17 view .LVU2296
 5472              	.LBB311:
 375:Core/Src/SEGGER_RTT.c ****   unsigned NumBytesWritten;
 5473              		.loc 1 375 3 view .LVU2297
 376:Core/Src/SEGGER_RTT.c ****   unsigned RdOff;
 5474              		.loc 1 376 3 view .LVU2298
 377:Core/Src/SEGGER_RTT.c ****   unsigned WrOff;
 5475              		.loc 1 377 3 view .LVU2299
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccSC4OZm.s 			page 155


 378:Core/Src/SEGGER_RTT.c ****   volatile char* pDst;
 5476              		.loc 1 378 3 view .LVU2300
 379:Core/Src/SEGGER_RTT.c ****   //
 5477              		.loc 1 379 3 view .LVU2301
 383:Core/Src/SEGGER_RTT.c ****   WrOff = pRing->WrOff;
 5478              		.loc 1 383 3 view .LVU2302
 384:Core/Src/SEGGER_RTT.c ****   do {
 5479              		.loc 1 384 3 view .LVU2303
 5480 011e 0134     		adds	r4, r4, #1
 5481              	.LVL540:
 394:Core/Src/SEGGER_RTT.c **** #if SEGGER_RTT_MEMCPY_USE_BYTELOOP
 5482              		.loc 1 394 18 is_stmt 0 view .LVU2304
 5483 0120 04EB4404 		add	r4, r4, r4, lsl #1
 5484              	.LVL541:
 384:Core/Src/SEGGER_RTT.c ****   do {
 5485              		.loc 1 384 9 view .LVU2305
 5486 0124 7D6A     		ldr	r5, [r7, #36]
 5487              	.LVL542:
 394:Core/Src/SEGGER_RTT.c **** #if SEGGER_RTT_MEMCPY_USE_BYTELOOP
 5488              		.loc 1 394 18 view .LVU2306
 5489 0126 4FEAC40A 		lsl	r10, r4, #3
 383:Core/Src/SEGGER_RTT.c ****   WrOff = pRing->WrOff;
 5490              		.loc 1 383 19 view .LVU2307
 5491 012a 4FF00008 		mov	r8, #0
 5492              	.LVL543:
 5493              	.L229:
 385:Core/Src/SEGGER_RTT.c ****     RdOff = pRing->RdOff;                         // May be changed by host (debug probe) in the me
 5494              		.loc 1 385 3 is_stmt 1 view .LVU2308
 386:Core/Src/SEGGER_RTT.c ****     if (RdOff > WrOff) {
 5495              		.loc 1 386 5 view .LVU2309
 388:Core/Src/SEGGER_RTT.c ****     } else {
 5496              		.loc 1 388 7 view .LVU2310
 390:Core/Src/SEGGER_RTT.c ****     }
 5497              		.loc 1 390 7 view .LVU2311
 386:Core/Src/SEGGER_RTT.c ****     if (RdOff > WrOff) {
 5498              		.loc 1 386 11 is_stmt 0 view .LVU2312
 5499 012e BB6A     		ldr	r3, [r7, #40]
 5500              	.LVL544:
 387:Core/Src/SEGGER_RTT.c ****       NumBytesToWrite = RdOff - WrOff - 1u;
 5501              		.loc 1 387 5 is_stmt 1 view .LVU2313
 387:Core/Src/SEGGER_RTT.c ****       NumBytesToWrite = RdOff - WrOff - 1u;
 5502              		.loc 1 387 8 is_stmt 0 view .LVU2314
 5503 0130 AB42     		cmp	r3, r5
 388:Core/Src/SEGGER_RTT.c ****     } else {
 5504              		.loc 1 388 23 view .LVU2315
 5505 0132 03F1FF32 		add	r2, r3, #-1
 387:Core/Src/SEGGER_RTT.c ****       NumBytesToWrite = RdOff - WrOff - 1u;
 5506              		.loc 1 387 8 view .LVU2316
 5507 0136 25D9     		bls	.L225
 5508              	.L240:
 390:Core/Src/SEGGER_RTT.c ****     }
 5509              		.loc 1 390 30 view .LVU2317
 5510 0138 3C6A     		ldr	r4, [r7, #32]
 388:Core/Src/SEGGER_RTT.c ****     } else {
 5511              		.loc 1 388 23 view .LVU2318
 5512 013a 531B     		subs	r3, r2, r5
 5513              	.LVL545:
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccSC4OZm.s 			page 156


 5514              	.L226:
 392:Core/Src/SEGGER_RTT.c ****     NumBytesToWrite = MIN(NumBytesToWrite, NumBytes);
 5515              		.loc 1 392 5 is_stmt 1 view .LVU2319
 5516 013c 4B45     		cmp	r3, r9
 394:Core/Src/SEGGER_RTT.c **** #if SEGGER_RTT_MEMCPY_USE_BYTELOOP
 5517              		.loc 1 394 18 is_stmt 0 view .LVU2320
 5518 013e 06EB0A02 		add	r2, r6, r10
 392:Core/Src/SEGGER_RTT.c ****     NumBytesToWrite = MIN(NumBytesToWrite, NumBytes);
 5519              		.loc 1 392 23 view .LVU2321
 5520 0142 A4EB0504 		sub	r4, r4, r5
 5521 0146 28BF     		it	cs
 5522 0148 4B46     		movcs	r3, r9
 393:Core/Src/SEGGER_RTT.c ****     pDst = (pRing->pBuffer + WrOff) + SEGGER_RTT_UNCACHED_OFF;
 5523              		.loc 1 393 5 is_stmt 1 view .LVU2322
 393:Core/Src/SEGGER_RTT.c ****     pDst = (pRing->pBuffer + WrOff) + SEGGER_RTT_UNCACHED_OFF;
 5524              		.loc 1 393 21 is_stmt 0 view .LVU2323
 5525 014a 9C42     		cmp	r4, r3
 394:Core/Src/SEGGER_RTT.c **** #if SEGGER_RTT_MEMCPY_USE_BYTELOOP
 5526              		.loc 1 394 10 view .LVU2324
 5527 014c 5068     		ldr	r0, [r2, #4]
 393:Core/Src/SEGGER_RTT.c ****     pDst = (pRing->pBuffer + WrOff) + SEGGER_RTT_UNCACHED_OFF;
 5528              		.loc 1 393 21 view .LVU2325
 5529 014e 28BF     		it	cs
 5530 0150 1C46     		movcs	r4, r3
 5531              	.LVL546:
 394:Core/Src/SEGGER_RTT.c **** #if SEGGER_RTT_MEMCPY_USE_BYTELOOP
 5532              		.loc 1 394 5 is_stmt 1 view .LVU2326
 403:Core/Src/SEGGER_RTT.c ****     NumBytesWritten += NumBytesToWrite;
 5533              		.loc 1 403 5 view .LVU2327
 5534 0152 2844     		add	r0, r0, r5
 5535 0154 5946     		mov	r1, fp
 5536 0156 2246     		mov	r2, r4
 5537 0158 FFF7FEFF 		bl	memcpy
 5538              	.LVL547:
 404:Core/Src/SEGGER_RTT.c ****     pBuffer         += NumBytesToWrite;
 5539              		.loc 1 404 5 view .LVU2328
 409:Core/Src/SEGGER_RTT.c ****       WrOff = 0u;
 5540              		.loc 1 409 8 is_stmt 0 view .LVU2329
 5541 015c 3B6A     		ldr	r3, [r7, #32]
 407:Core/Src/SEGGER_RTT.c **** #endif
 5542              		.loc 1 407 21 view .LVU2330
 5543 015e 2544     		add	r5, r5, r4
 5544              	.LVL548:
 412:Core/Src/SEGGER_RTT.c ****     pRing->WrOff = WrOff;
 5545              		.loc 1 412 5 is_stmt 1 view .LVU2331
 409:Core/Src/SEGGER_RTT.c ****       WrOff = 0u;
 5546              		.loc 1 409 8 is_stmt 0 view .LVU2332
 5547 0160 9D42     		cmp	r5, r3
 404:Core/Src/SEGGER_RTT.c ****     pBuffer         += NumBytesToWrite;
 5548              		.loc 1 404 21 view .LVU2333
 5549 0162 A044     		add	r8, r8, r4
 5550              	.LVL549:
 405:Core/Src/SEGGER_RTT.c ****     NumBytes        -= NumBytesToWrite;
 5551              		.loc 1 405 5 is_stmt 1 view .LVU2334
 405:Core/Src/SEGGER_RTT.c ****     NumBytes        -= NumBytesToWrite;
 5552              		.loc 1 405 21 is_stmt 0 view .LVU2335
 5553 0164 A344     		add	fp, fp, r4
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccSC4OZm.s 			page 157


 5554              	.LVL550:
 406:Core/Src/SEGGER_RTT.c ****     WrOff           += NumBytesToWrite;
 5555              		.loc 1 406 5 is_stmt 1 view .LVU2336
 406:Core/Src/SEGGER_RTT.c ****     WrOff           += NumBytesToWrite;
 5556              		.loc 1 406 21 is_stmt 0 view .LVU2337
 5557 0166 A9EB0409 		sub	r9, r9, r4
 5558              	.LVL551:
 407:Core/Src/SEGGER_RTT.c **** #endif
 5559              		.loc 1 407 5 is_stmt 1 view .LVU2338
 409:Core/Src/SEGGER_RTT.c ****       WrOff = 0u;
 5560              		.loc 1 409 5 view .LVU2339
 409:Core/Src/SEGGER_RTT.c ****       WrOff = 0u;
 5561              		.loc 1 409 8 is_stmt 0 view .LVU2340
 5562 016a 10D0     		beq	.L239
 412:Core/Src/SEGGER_RTT.c ****     pRing->WrOff = WrOff;
 5563              		.loc 1 412 5 view .LVU2341
 5564              		.syntax unified
 5565              	@ 412 "Core/Src/SEGGER_RTT.c" 1
 5566 016c BFF35F8F 		dmb
 5567              	
 5568              	@ 0 "" 2
 412:Core/Src/SEGGER_RTT.c ****     pRing->WrOff = WrOff;
 5569              		.loc 1 412 15 is_stmt 1 view .LVU2342
 413:Core/Src/SEGGER_RTT.c ****   } while (NumBytes);
 5570              		.loc 1 413 5 view .LVU2343
 413:Core/Src/SEGGER_RTT.c ****   } while (NumBytes);
 5571              		.loc 1 413 18 is_stmt 0 view .LVU2344
 5572              		.thumb
 5573              		.syntax unified
 5574 0170 7D62     		str	r5, [r7, #36]
 414:Core/Src/SEGGER_RTT.c ****   return NumBytesWritten;
 5575              		.loc 1 414 12 is_stmt 1 view .LVU2345
 5576 0172 B9F1000F 		cmp	r9, #0
 5577 0176 3FF46AAF 		beq	.L218
 385:Core/Src/SEGGER_RTT.c ****     RdOff = pRing->RdOff;                         // May be changed by host (debug probe) in the me
 5578              		.loc 1 385 3 view .LVU2346
 386:Core/Src/SEGGER_RTT.c ****     if (RdOff > WrOff) {
 5579              		.loc 1 386 5 view .LVU2347
 388:Core/Src/SEGGER_RTT.c ****     } else {
 5580              		.loc 1 388 7 view .LVU2348
 390:Core/Src/SEGGER_RTT.c ****     }
 5581              		.loc 1 390 7 view .LVU2349
 386:Core/Src/SEGGER_RTT.c ****     if (RdOff > WrOff) {
 5582              		.loc 1 386 11 is_stmt 0 view .LVU2350
 5583 017a BB6A     		ldr	r3, [r7, #40]
 5584              	.LVL552:
 387:Core/Src/SEGGER_RTT.c ****       NumBytesToWrite = RdOff - WrOff - 1u;
 5585              		.loc 1 387 5 is_stmt 1 view .LVU2351
 387:Core/Src/SEGGER_RTT.c ****       NumBytesToWrite = RdOff - WrOff - 1u;
 5586              		.loc 1 387 8 is_stmt 0 view .LVU2352
 5587 017c AB42     		cmp	r3, r5
 388:Core/Src/SEGGER_RTT.c ****     } else {
 5588              		.loc 1 388 23 view .LVU2353
 5589 017e 03F1FF32 		add	r2, r3, #-1
 387:Core/Src/SEGGER_RTT.c ****       NumBytesToWrite = RdOff - WrOff - 1u;
 5590              		.loc 1 387 8 view .LVU2354
 5591 0182 D9D8     		bhi	.L240
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccSC4OZm.s 			page 158


 5592              	.LVL553:
 5593              	.L225:
 390:Core/Src/SEGGER_RTT.c ****     }
 5594              		.loc 1 390 30 view .LVU2355
 5595 0184 3C6A     		ldr	r4, [r7, #32]
 390:Core/Src/SEGGER_RTT.c ****     }
 5596              		.loc 1 390 23 view .LVU2356
 5597 0186 2344     		add	r3, r3, r4
 5598              	.LVL554:
 390:Core/Src/SEGGER_RTT.c ****     }
 5599              		.loc 1 390 23 view .LVU2357
 5600 0188 013B     		subs	r3, r3, #1
 5601 018a 5B1B     		subs	r3, r3, r5
 5602              	.LVL555:
 390:Core/Src/SEGGER_RTT.c ****     }
 5603              		.loc 1 390 23 view .LVU2358
 5604 018c D6E7     		b	.L226
 5605              	.LVL556:
 5606              	.L239:
 412:Core/Src/SEGGER_RTT.c ****     pRing->WrOff = WrOff;
 5607              		.loc 1 412 5 is_stmt 1 view .LVU2359
 5608              		.syntax unified
 5609              	@ 412 "Core/Src/SEGGER_RTT.c" 1
 5610 018e BFF35F8F 		dmb
 5611              	
 5612              	@ 0 "" 2
 412:Core/Src/SEGGER_RTT.c ****     pRing->WrOff = WrOff;
 5613              		.loc 1 412 15 view .LVU2360
 413:Core/Src/SEGGER_RTT.c ****   } while (NumBytes);
 5614              		.loc 1 413 5 view .LVU2361
 413:Core/Src/SEGGER_RTT.c ****   } while (NumBytes);
 5615              		.loc 1 413 18 is_stmt 0 view .LVU2362
 5616              		.thumb
 5617              		.syntax unified
 5618 0192 0025     		movs	r5, #0
 5619 0194 7D62     		str	r5, [r7, #36]
 414:Core/Src/SEGGER_RTT.c ****   return NumBytesWritten;
 5620              		.loc 1 414 12 is_stmt 1 view .LVU2363
 5621 0196 B9F1000F 		cmp	r9, #0
 5622 019a C8D1     		bne	.L229
 5623 019c 57E7     		b	.L218
 5624              	.LVL557:
 5625              	.L216:
 414:Core/Src/SEGGER_RTT.c ****   return NumBytesWritten;
 5626              		.loc 1 414 12 is_stmt 0 view .LVU2364
 5627              	.LBE311:
 5628              	.LBE310:
1130:Core/Src/SEGGER_RTT.c ****     Status = Avail < NumBytes ? Avail : NumBytes;
 5629              		.loc 1 1130 5 is_stmt 1 view .LVU2365
 5630              	.LBB312:
 5631              	.LBI312:
 526:Core/Src/SEGGER_RTT.c ****   unsigned RdOff;
 5632              		.loc 1 526 17 view .LVU2366
 5633              	.LBB313:
 527:Core/Src/SEGGER_RTT.c ****   unsigned WrOff;
 5634              		.loc 1 527 3 view .LVU2367
 528:Core/Src/SEGGER_RTT.c ****   unsigned r;
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccSC4OZm.s 			page 159


 5635              		.loc 1 528 3 view .LVU2368
 529:Core/Src/SEGGER_RTT.c ****   //
 5636              		.loc 1 529 3 view .LVU2369
 534:Core/Src/SEGGER_RTT.c ****   WrOff = pRing->WrOff;
 5637              		.loc 1 534 3 view .LVU2370
 534:Core/Src/SEGGER_RTT.c ****   WrOff = pRing->WrOff;
 5638              		.loc 1 534 9 is_stmt 0 view .LVU2371
 5639 019e BA6A     		ldr	r2, [r7, #40]
 5640              	.LVL558:
 535:Core/Src/SEGGER_RTT.c ****   if (RdOff <= WrOff) {
 5641              		.loc 1 535 3 is_stmt 1 view .LVU2372
 535:Core/Src/SEGGER_RTT.c ****   if (RdOff <= WrOff) {
 5642              		.loc 1 535 9 is_stmt 0 view .LVU2373
 5643 01a0 D7F824A0 		ldr	r10, [r7, #36]
 5644              	.LVL559:
 536:Core/Src/SEGGER_RTT.c ****     r = pRing->SizeOfBuffer - 1u - WrOff + RdOff;
 5645              		.loc 1 536 3 is_stmt 1 view .LVU2374
 536:Core/Src/SEGGER_RTT.c ****     r = pRing->SizeOfBuffer - 1u - WrOff + RdOff;
 5646              		.loc 1 536 6 is_stmt 0 view .LVU2375
 5647 01a4 5245     		cmp	r2, r10
 5648 01a6 1FD9     		bls	.L241
 539:Core/Src/SEGGER_RTT.c ****   }
 5649              		.loc 1 539 5 is_stmt 1 view .LVU2376
 539:Core/Src/SEGGER_RTT.c ****   }
 5650              		.loc 1 539 7 is_stmt 0 view .LVU2377
 5651 01a8 02F1FF38 		add	r8, r2, #-1
 5652 01ac A8EB0A08 		sub	r8, r8, r10
 5653              	.LVL560:
 541:Core/Src/SEGGER_RTT.c **** }
 5654              		.loc 1 541 3 is_stmt 1 view .LVU2378
 541:Core/Src/SEGGER_RTT.c **** }
 5655              		.loc 1 541 3 is_stmt 0 view .LVU2379
 5656              	.LBE313:
 5657              	.LBE312:
1131:Core/Src/SEGGER_RTT.c ****     _WriteNoCheck(pRing, pData, Status);
 5658              		.loc 1 1131 5 is_stmt 1 view .LVU2380
 5659              	.LBB315:
 5660              	.LBB306:
 537:Core/Src/SEGGER_RTT.c ****   } else {
 5661              		.loc 1 537 14 is_stmt 0 view .LVU2381
 5662 01b0 3F6A     		ldr	r7, [r7, #32]
 5663              	.LBE306:
 5664              	.LBE315:
1131:Core/Src/SEGGER_RTT.c ****     _WriteNoCheck(pRing, pData, Status);
 5665              		.loc 1 1131 12 view .LVU2382
 5666 01b2 C845     		cmp	r8, r9
 5667 01b4 28BF     		it	cs
 5668 01b6 C846     		movcs	r8, r9
 5669              	.LVL561:
1132:Core/Src/SEGGER_RTT.c ****     break;
 5670              		.loc 1 1132 5 is_stmt 1 view .LVU2383
 5671              	.LBB316:
 5672              	.LBI316:
 436:Core/Src/SEGGER_RTT.c ****   unsigned NumBytesAtOnce;
 5673              		.loc 1 436 13 view .LVU2384
 5674              	.LBB317:
 437:Core/Src/SEGGER_RTT.c ****   unsigned WrOff;
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccSC4OZm.s 			page 160


 5675              		.loc 1 437 3 view .LVU2385
 438:Core/Src/SEGGER_RTT.c ****   unsigned Rem;
 5676              		.loc 1 438 3 view .LVU2386
 439:Core/Src/SEGGER_RTT.c ****   volatile char* pDst;
 5677              		.loc 1 439 3 view .LVU2387
 440:Core/Src/SEGGER_RTT.c **** 
 5678              		.loc 1 440 3 view .LVU2388
 442:Core/Src/SEGGER_RTT.c ****   Rem = pRing->SizeOfBuffer - WrOff;
 5679              		.loc 1 442 3 view .LVU2389
 443:Core/Src/SEGGER_RTT.c ****   if (Rem > NumBytes) {
 5680              		.loc 1 443 3 view .LVU2390
 443:Core/Src/SEGGER_RTT.c ****   if (Rem > NumBytes) {
 5681              		.loc 1 443 7 is_stmt 0 view .LVU2391
 5682 01b8 A7EB0A02 		sub	r2, r7, r10
 5683              	.LVL562:
 444:Core/Src/SEGGER_RTT.c ****     //
 5684              		.loc 1 444 3 is_stmt 1 view .LVU2392
 444:Core/Src/SEGGER_RTT.c ****     //
 5685              		.loc 1 444 6 is_stmt 0 view .LVU2393
 5686 01bc 9045     		cmp	r8, r2
 5687 01be 21D2     		bcs	.L224
 5688              	.L242:
 448:Core/Src/SEGGER_RTT.c **** #if SEGGER_RTT_MEMCPY_USE_BYTELOOP
 5689              		.loc 1 448 5 is_stmt 1 view .LVU2394
 5690              	.LVL563:
 457:Core/Src/SEGGER_RTT.c ****     RTT__DMB();                     // Force data write to be complete before writing the <WrOff>, 
 5691              		.loc 1 457 5 view .LVU2395
 448:Core/Src/SEGGER_RTT.c **** #if SEGGER_RTT_MEMCPY_USE_BYTELOOP
 5692              		.loc 1 448 18 is_stmt 0 view .LVU2396
 5693 01c0 631C     		adds	r3, r4, #1
 5694              	.LVL564:
 448:Core/Src/SEGGER_RTT.c **** #if SEGGER_RTT_MEMCPY_USE_BYTELOOP
 5695              		.loc 1 448 18 view .LVU2397
 5696 01c2 03EB4303 		add	r3, r3, r3, lsl #1
 5697 01c6 06EBC303 		add	r3, r6, r3, lsl #3
 457:Core/Src/SEGGER_RTT.c ****     RTT__DMB();                     // Force data write to be complete before writing the <WrOff>, 
 5698              		.loc 1 457 5 view .LVU2398
 5699 01ca 5946     		mov	r1, fp
 448:Core/Src/SEGGER_RTT.c **** #if SEGGER_RTT_MEMCPY_USE_BYTELOOP
 5700              		.loc 1 448 10 view .LVU2399
 5701 01cc 5868     		ldr	r0, [r3, #4]
 457:Core/Src/SEGGER_RTT.c ****     RTT__DMB();                     // Force data write to be complete before writing the <WrOff>, 
 5702              		.loc 1 457 5 view .LVU2400
 5703 01ce 4246     		mov	r2, r8
 5704              	.LVL565:
 457:Core/Src/SEGGER_RTT.c ****     RTT__DMB();                     // Force data write to be complete before writing the <WrOff>, 
 5705              		.loc 1 457 5 view .LVU2401
 5706 01d0 5044     		add	r0, r0, r10
 5707 01d2 FFF7FEFF 		bl	memcpy
 5708              	.LVL566:
 458:Core/Src/SEGGER_RTT.c ****     pRing->WrOff = WrOff + NumBytes;
 5709              		.loc 1 458 5 is_stmt 1 view .LVU2402
 5710              		.syntax unified
 5711              	@ 458 "Core/Src/SEGGER_RTT.c" 1
 5712 01d6 BFF35F8F 		dmb
 5713              	
 5714              	@ 0 "" 2
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccSC4OZm.s 			page 161


 458:Core/Src/SEGGER_RTT.c ****     pRing->WrOff = WrOff + NumBytes;
 5715              		.loc 1 458 15 view .LVU2403
 459:Core/Src/SEGGER_RTT.c **** #endif
 5716              		.loc 1 459 5 view .LVU2404
 459:Core/Src/SEGGER_RTT.c **** #endif
 5717              		.loc 1 459 18 is_stmt 0 view .LVU2405
 5718              		.thumb
 5719              		.syntax unified
 5720 01da 2544     		add	r5, r5, r4
 5721 01dc 06EBC505 		add	r5, r6, r5, lsl #3
 459:Core/Src/SEGGER_RTT.c **** #endif
 5722              		.loc 1 459 26 view .LVU2406
 5723 01e0 0AEB0803 		add	r3, r10, r8
 459:Core/Src/SEGGER_RTT.c **** #endif
 5724              		.loc 1 459 18 view .LVU2407
 5725 01e4 6B62     		str	r3, [r5, #36]
 5726 01e6 32E7     		b	.L218
 5727              	.LVL567:
 5728              	.L241:
 459:Core/Src/SEGGER_RTT.c **** #endif
 5729              		.loc 1 459 18 view .LVU2408
 5730              	.LBE317:
 5731              	.LBE316:
 5732              	.LBB319:
 5733              	.LBB314:
 537:Core/Src/SEGGER_RTT.c ****   } else {
 5734              		.loc 1 537 5 is_stmt 1 view .LVU2409
 537:Core/Src/SEGGER_RTT.c ****   } else {
 5735              		.loc 1 537 14 is_stmt 0 view .LVU2410
 5736 01e8 3F6A     		ldr	r7, [r7, #32]
 537:Core/Src/SEGGER_RTT.c ****   } else {
 5737              		.loc 1 537 7 view .LVU2411
 5738 01ea 02EB0708 		add	r8, r2, r7
 5739 01ee 08F1FF38 		add	r8, r8, #-1
 5740 01f2 A8EB0A08 		sub	r8, r8, r10
 5741              	.LVL568:
 541:Core/Src/SEGGER_RTT.c **** }
 5742              		.loc 1 541 3 is_stmt 1 view .LVU2412
 541:Core/Src/SEGGER_RTT.c **** }
 5743              		.loc 1 541 3 is_stmt 0 view .LVU2413
 5744              	.LBE314:
 5745              	.LBE319:
1131:Core/Src/SEGGER_RTT.c ****     _WriteNoCheck(pRing, pData, Status);
 5746              		.loc 1 1131 5 is_stmt 1 view .LVU2414
1131:Core/Src/SEGGER_RTT.c ****     _WriteNoCheck(pRing, pData, Status);
 5747              		.loc 1 1131 12 is_stmt 0 view .LVU2415
 5748 01f6 C845     		cmp	r8, r9
 5749 01f8 28BF     		it	cs
 5750 01fa C846     		movcs	r8, r9
 5751              	.LVL569:
1132:Core/Src/SEGGER_RTT.c ****     break;
 5752              		.loc 1 1132 5 is_stmt 1 view .LVU2416
 5753              	.LBB320:
 436:Core/Src/SEGGER_RTT.c ****   unsigned NumBytesAtOnce;
 5754              		.loc 1 436 13 view .LVU2417
 5755              	.LBB318:
 437:Core/Src/SEGGER_RTT.c ****   unsigned WrOff;
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccSC4OZm.s 			page 162


 5756              		.loc 1 437 3 view .LVU2418
 438:Core/Src/SEGGER_RTT.c ****   unsigned Rem;
 5757              		.loc 1 438 3 view .LVU2419
 439:Core/Src/SEGGER_RTT.c ****   volatile char* pDst;
 5758              		.loc 1 439 3 view .LVU2420
 440:Core/Src/SEGGER_RTT.c **** 
 5759              		.loc 1 440 3 view .LVU2421
 442:Core/Src/SEGGER_RTT.c ****   Rem = pRing->SizeOfBuffer - WrOff;
 5760              		.loc 1 442 3 view .LVU2422
 443:Core/Src/SEGGER_RTT.c ****   if (Rem > NumBytes) {
 5761              		.loc 1 443 3 view .LVU2423
 443:Core/Src/SEGGER_RTT.c ****   if (Rem > NumBytes) {
 5762              		.loc 1 443 7 is_stmt 0 view .LVU2424
 5763 01fc A7EB0A02 		sub	r2, r7, r10
 5764              	.LVL570:
 444:Core/Src/SEGGER_RTT.c ****     //
 5765              		.loc 1 444 3 is_stmt 1 view .LVU2425
 444:Core/Src/SEGGER_RTT.c ****     //
 5766              		.loc 1 444 6 is_stmt 0 view .LVU2426
 5767 0200 9045     		cmp	r8, r2
 5768 0202 DDD3     		bcc	.L242
 5769              	.L224:
 479:Core/Src/SEGGER_RTT.c ****     pDst = (pRing->pBuffer + WrOff) + SEGGER_RTT_UNCACHED_OFF;
 5770              		.loc 1 479 5 is_stmt 1 view .LVU2427
 5771              	.LVL571:
 480:Core/Src/SEGGER_RTT.c ****     SEGGER_RTT_MEMCPY((void*)pDst, pData, NumBytesAtOnce);
 5772              		.loc 1 480 5 view .LVU2428
 481:Core/Src/SEGGER_RTT.c ****     NumBytesAtOnce = NumBytes - Rem;
 5773              		.loc 1 481 5 view .LVU2429
 480:Core/Src/SEGGER_RTT.c ****     SEGGER_RTT_MEMCPY((void*)pDst, pData, NumBytesAtOnce);
 5774              		.loc 1 480 18 is_stmt 0 view .LVU2430
 5775 0204 04F10109 		add	r9, r4, #1
 5776              	.LVL572:
 480:Core/Src/SEGGER_RTT.c ****     SEGGER_RTT_MEMCPY((void*)pDst, pData, NumBytesAtOnce);
 5777              		.loc 1 480 18 view .LVU2431
 5778 0208 09EB4909 		add	r9, r9, r9, lsl #1
 5779 020c 06EBC909 		add	r9, r6, r9, lsl #3
 481:Core/Src/SEGGER_RTT.c ****     NumBytesAtOnce = NumBytes - Rem;
 5780              		.loc 1 481 5 view .LVU2432
 5781 0210 5946     		mov	r1, fp
 480:Core/Src/SEGGER_RTT.c ****     SEGGER_RTT_MEMCPY((void*)pDst, pData, NumBytesAtOnce);
 5782              		.loc 1 480 10 view .LVU2433
 5783 0212 D9F80400 		ldr	r0, [r9, #4]
 481:Core/Src/SEGGER_RTT.c ****     NumBytesAtOnce = NumBytes - Rem;
 5784              		.loc 1 481 5 view .LVU2434
 5785 0216 0192     		str	r2, [sp, #4]
 5786 0218 5044     		add	r0, r0, r10
 5787 021a FFF7FEFF 		bl	memcpy
 5788              	.LVL573:
 482:Core/Src/SEGGER_RTT.c ****     pDst = pRing->pBuffer + SEGGER_RTT_UNCACHED_OFF;
 5789              		.loc 1 482 5 is_stmt 1 view .LVU2435
 482:Core/Src/SEGGER_RTT.c ****     pDst = pRing->pBuffer + SEGGER_RTT_UNCACHED_OFF;
 5790              		.loc 1 482 20 is_stmt 0 view .LVU2436
 5791 021e A8EB0707 		sub	r7, r8, r7
 484:Core/Src/SEGGER_RTT.c ****     RTT__DMB();                     // Force data write to be complete before writing the <WrOff>, 
 5792              		.loc 1 484 5 view .LVU2437
 5793 0222 019A     		ldr	r2, [sp, #4]
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccSC4OZm.s 			page 163


 5794 0224 D9F80400 		ldr	r0, [r9, #4]
 482:Core/Src/SEGGER_RTT.c ****     pDst = pRing->pBuffer + SEGGER_RTT_UNCACHED_OFF;
 5795              		.loc 1 482 20 view .LVU2438
 5796 0228 5744     		add	r7, r7, r10
 5797              	.LVL574:
 483:Core/Src/SEGGER_RTT.c ****     SEGGER_RTT_MEMCPY((void*)pDst, pData + Rem, NumBytesAtOnce);
 5798              		.loc 1 483 5 is_stmt 1 view .LVU2439
 484:Core/Src/SEGGER_RTT.c ****     RTT__DMB();                     // Force data write to be complete before writing the <WrOff>, 
 5799              		.loc 1 484 5 view .LVU2440
 5800 022a 0BEB0201 		add	r1, fp, r2
 5801 022e 3A46     		mov	r2, r7
 5802 0230 FFF7FEFF 		bl	memcpy
 5803              	.LVL575:
 485:Core/Src/SEGGER_RTT.c ****     pRing->WrOff = NumBytesAtOnce;
 5804              		.loc 1 485 5 view .LVU2441
 5805              		.syntax unified
 5806              	@ 485 "Core/Src/SEGGER_RTT.c" 1
 5807 0234 BFF35F8F 		dmb
 5808              	
 5809              	@ 0 "" 2
 485:Core/Src/SEGGER_RTT.c ****     pRing->WrOff = NumBytesAtOnce;
 5810              		.loc 1 485 15 view .LVU2442
 486:Core/Src/SEGGER_RTT.c **** #endif
 5811              		.loc 1 486 5 view .LVU2443
 486:Core/Src/SEGGER_RTT.c **** #endif
 5812              		.loc 1 486 18 is_stmt 0 view .LVU2444
 5813              		.thumb
 5814              		.syntax unified
 5815 0238 2544     		add	r5, r5, r4
 5816 023a 06EBC505 		add	r5, r6, r5, lsl #3
 5817 023e 6F62     		str	r7, [r5, #36]
 5818 0240 05E7     		b	.L218
 5819              	.LVL576:
 5820              	.L221:
 486:Core/Src/SEGGER_RTT.c **** #endif
 5821              		.loc 1 486 18 view .LVU2445
 5822              	.LBE318:
 5823              	.LBE320:
 5824              	.LBB321:
 5825              	.LBB309:
 479:Core/Src/SEGGER_RTT.c ****     pDst = (pRing->pBuffer + WrOff) + SEGGER_RTT_UNCACHED_OFF;
 5826              		.loc 1 479 5 is_stmt 1 view .LVU2446
 480:Core/Src/SEGGER_RTT.c ****     SEGGER_RTT_MEMCPY((void*)pDst, pData, NumBytesAtOnce);
 5827              		.loc 1 480 5 view .LVU2447
 481:Core/Src/SEGGER_RTT.c ****     NumBytesAtOnce = NumBytes - Rem;
 5828              		.loc 1 481 5 view .LVU2448
 480:Core/Src/SEGGER_RTT.c ****     SEGGER_RTT_MEMCPY((void*)pDst, pData, NumBytesAtOnce);
 5829              		.loc 1 480 18 is_stmt 0 view .LVU2449
 5830 0242 06EBC406 		add	r6, r6, r4, lsl #3
 482:Core/Src/SEGGER_RTT.c ****     pDst = pRing->pBuffer + SEGGER_RTT_UNCACHED_OFF;
 5831              		.loc 1 482 20 view .LVU2450
 5832 0246 AAEB0704 		sub	r4, r10, r7
 480:Core/Src/SEGGER_RTT.c ****     SEGGER_RTT_MEMCPY((void*)pDst, pData, NumBytesAtOnce);
 5833              		.loc 1 480 10 view .LVU2451
 5834 024a 7068     		ldr	r0, [r6, #4]
 481:Core/Src/SEGGER_RTT.c ****     NumBytesAtOnce = NumBytes - Rem;
 5835              		.loc 1 481 5 view .LVU2452
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccSC4OZm.s 			page 164


 5836 024c 4246     		mov	r2, r8
 5837              	.LVL577:
 481:Core/Src/SEGGER_RTT.c ****     NumBytesAtOnce = NumBytes - Rem;
 5838              		.loc 1 481 5 view .LVU2453
 5839 024e 5946     		mov	r1, fp
 5840 0250 5044     		add	r0, r0, r10
 482:Core/Src/SEGGER_RTT.c ****     pDst = pRing->pBuffer + SEGGER_RTT_UNCACHED_OFF;
 5841              		.loc 1 482 20 view .LVU2454
 5842 0252 4C44     		add	r4, r4, r9
 481:Core/Src/SEGGER_RTT.c ****     NumBytesAtOnce = NumBytes - Rem;
 5843              		.loc 1 481 5 view .LVU2455
 5844 0254 FFF7FEFF 		bl	memcpy
 5845              	.LVL578:
 482:Core/Src/SEGGER_RTT.c ****     pDst = pRing->pBuffer + SEGGER_RTT_UNCACHED_OFF;
 5846              		.loc 1 482 5 is_stmt 1 view .LVU2456
 483:Core/Src/SEGGER_RTT.c ****     SEGGER_RTT_MEMCPY((void*)pDst, pData + Rem, NumBytesAtOnce);
 5847              		.loc 1 483 5 view .LVU2457
 484:Core/Src/SEGGER_RTT.c ****     RTT__DMB();                     // Force data write to be complete before writing the <WrOff>, 
 5848              		.loc 1 484 5 view .LVU2458
 5849 0258 7068     		ldr	r0, [r6, #4]
 5850 025a 0BEB0801 		add	r1, fp, r8
 5851 025e 2246     		mov	r2, r4
 5852 0260 FFF7FEFF 		bl	memcpy
 5853              	.LVL579:
 485:Core/Src/SEGGER_RTT.c ****     pRing->WrOff = NumBytesAtOnce;
 5854              		.loc 1 485 5 view .LVU2459
 5855              		.syntax unified
 5856              	@ 485 "Core/Src/SEGGER_RTT.c" 1
 5857 0264 BFF35F8F 		dmb
 5858              	
 5859              	@ 0 "" 2
 485:Core/Src/SEGGER_RTT.c ****     pRing->WrOff = NumBytesAtOnce;
 5860              		.loc 1 485 15 view .LVU2460
 486:Core/Src/SEGGER_RTT.c **** #endif
 5861              		.loc 1 486 5 view .LVU2461
 486:Core/Src/SEGGER_RTT.c **** #endif
 5862              		.loc 1 486 18 is_stmt 0 view .LVU2462
 5863              		.thumb
 5864              		.syntax unified
 5865 0268 6C62     		str	r4, [r5, #36]
 5866 026a C846     		mov	r8, r9
 5867              	.LVL580:
 486:Core/Src/SEGGER_RTT.c **** #endif
 5868              		.loc 1 486 18 view .LVU2463
 5869 026c EFE6     		b	.L218
 5870              	.L244:
 5871 026e 00BF     		.align	2
 5872              	.L243:
 5873 0270 00000000 		.word	.LANCHOR0
 5874 0274 00000000 		.word	.LC0
 5875 0278 00000000 		.word	.LANCHOR1
 5876 027c 00000000 		.word	.LANCHOR2
 5877              	.LBE309:
 5878              	.LBE321:
 5879              	.LBE323:
 5880              	.LBE325:
 5881              	.LBE327:
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccSC4OZm.s 			page 165


 5882              	.LBE330:
 5883              	.LBE333:
 5884              		.cfi_endproc
 5885              	.LFE14:
 5887              		.section	.text.SEGGER_RTT_PutCharSkipNoLock,"ax",%progbits
 5888              		.align	1
 5889              		.p2align 2,,3
 5890              		.global	SEGGER_RTT_PutCharSkipNoLock
 5891              		.syntax unified
 5892              		.thumb
 5893              		.thumb_func
 5895              	SEGGER_RTT_PutCharSkipNoLock:
 5896              	.LVL581:
 5897              	.LFB15:
1240:Core/Src/SEGGER_RTT.c **** 
1241:Core/Src/SEGGER_RTT.c **** /*********************************************************************
1242:Core/Src/SEGGER_RTT.c **** *
1243:Core/Src/SEGGER_RTT.c **** *       SEGGER_RTT_PutCharSkipNoLock
1244:Core/Src/SEGGER_RTT.c **** *
1245:Core/Src/SEGGER_RTT.c **** *  Function description
1246:Core/Src/SEGGER_RTT.c **** *    Stores a single character/byte in SEGGER RTT buffer.
1247:Core/Src/SEGGER_RTT.c **** *    SEGGER_RTT_PutCharSkipNoLock does not lock the application and
1248:Core/Src/SEGGER_RTT.c **** *    skips the byte, if it does not fit into the buffer.
1249:Core/Src/SEGGER_RTT.c **** *
1250:Core/Src/SEGGER_RTT.c **** *  Parameters
1251:Core/Src/SEGGER_RTT.c **** *    BufferIndex  Index of "Up"-buffer to be used (e.g. 0 for "Terminal").
1252:Core/Src/SEGGER_RTT.c **** *    c            Byte to be stored.
1253:Core/Src/SEGGER_RTT.c **** *
1254:Core/Src/SEGGER_RTT.c **** *  Return value
1255:Core/Src/SEGGER_RTT.c **** *    Number of bytes which have been stored in the "Up"-buffer.
1256:Core/Src/SEGGER_RTT.c **** *
1257:Core/Src/SEGGER_RTT.c **** *  Notes
1258:Core/Src/SEGGER_RTT.c **** *    (1) If there is not enough space in the "Up"-buffer, the character is dropped.
1259:Core/Src/SEGGER_RTT.c **** *    (2) For performance reasons this function does not call Init()
1260:Core/Src/SEGGER_RTT.c **** *        and may only be called after RTT has been initialized.
1261:Core/Src/SEGGER_RTT.c **** *        Either by calling SEGGER_RTT_Init() or calling another RTT API function first.
1262:Core/Src/SEGGER_RTT.c **** */
1263:Core/Src/SEGGER_RTT.c **** 
1264:Core/Src/SEGGER_RTT.c **** unsigned SEGGER_RTT_PutCharSkipNoLock(unsigned BufferIndex, char c) {
 5898              		.loc 1 1264 69 is_stmt 1 view -0
 5899              		.cfi_startproc
 5900              		@ args = 0, pretend = 0, frame = 0
 5901              		@ frame_needed = 0, uses_anonymous_args = 0
 5902              		@ link register save eliminated.
1265:Core/Src/SEGGER_RTT.c ****   SEGGER_RTT_BUFFER_UP* pRing;
 5903              		.loc 1 1265 3 view .LVU2465
1266:Core/Src/SEGGER_RTT.c ****   unsigned              WrOff;
 5904              		.loc 1 1266 3 view .LVU2466
1267:Core/Src/SEGGER_RTT.c ****   unsigned              Status;
 5905              		.loc 1 1267 3 view .LVU2467
1268:Core/Src/SEGGER_RTT.c ****   volatile char*        pDst;
 5906              		.loc 1 1268 3 view .LVU2468
1269:Core/Src/SEGGER_RTT.c ****   //
1270:Core/Src/SEGGER_RTT.c ****   // Get "to-host" ring buffer.
1271:Core/Src/SEGGER_RTT.c ****   //
1272:Core/Src/SEGGER_RTT.c ****   pRing = (SEGGER_RTT_BUFFER_UP*)((char*)&_SEGGER_RTT.aUp[BufferIndex] + SEGGER_RTT_UNCACHED_OFF); 
 5907              		.loc 1 1272 3 view .LVU2469
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccSC4OZm.s 			page 166


1264:Core/Src/SEGGER_RTT.c ****   SEGGER_RTT_BUFFER_UP* pRing;
 5908              		.loc 1 1264 69 is_stmt 0 view .LVU2470
 5909 0000 F0B4     		push	{r4, r5, r6, r7}
 5910              		.cfi_def_cfa_offset 16
 5911              		.cfi_offset 4, -16
 5912              		.cfi_offset 5, -12
 5913              		.cfi_offset 6, -8
 5914              		.cfi_offset 7, -4
1273:Core/Src/SEGGER_RTT.c ****   //
1274:Core/Src/SEGGER_RTT.c ****   // Get write position and handle wrap-around if necessary
1275:Core/Src/SEGGER_RTT.c ****   //
1276:Core/Src/SEGGER_RTT.c ****   WrOff = pRing->WrOff + 1;
 5915              		.loc 1 1276 16 view .LVU2471
 5916 0002 0F4C     		ldr	r4, .L250
 5917              	.LVL582:
 5918              		.loc 1 1276 3 is_stmt 1 view .LVU2472
 5919              		.loc 1 1276 16 is_stmt 0 view .LVU2473
 5920 0004 00EB4003 		add	r3, r0, r0, lsl #1
 5921 0008 04EBC303 		add	r3, r4, r3, lsl #3
 5922 000c 5D6A     		ldr	r5, [r3, #36]
1277:Core/Src/SEGGER_RTT.c ****   if (WrOff == pRing->SizeOfBuffer) {
1278:Core/Src/SEGGER_RTT.c ****     WrOff = 0;
 5923              		.loc 1 1278 11 view .LVU2474
 5924 000e 1F6A     		ldr	r7, [r3, #32]
1279:Core/Src/SEGGER_RTT.c ****   }
1280:Core/Src/SEGGER_RTT.c ****   //
1281:Core/Src/SEGGER_RTT.c ****   // Output byte if free space is available
1282:Core/Src/SEGGER_RTT.c ****   //
1283:Core/Src/SEGGER_RTT.c ****   if (WrOff != pRing->RdOff) {
 5925              		.loc 1 1283 21 view .LVU2475
 5926 0010 9E6A     		ldr	r6, [r3, #40]
1276:Core/Src/SEGGER_RTT.c ****   if (WrOff == pRing->SizeOfBuffer) {
 5927              		.loc 1 1276 9 view .LVU2476
 5928 0012 6A1C     		adds	r2, r5, #1
 5929              	.LVL583:
1277:Core/Src/SEGGER_RTT.c ****   if (WrOff == pRing->SizeOfBuffer) {
 5930              		.loc 1 1277 3 is_stmt 1 view .LVU2477
1278:Core/Src/SEGGER_RTT.c ****   }
 5931              		.loc 1 1278 11 is_stmt 0 view .LVU2478
 5932 0014 9742     		cmp	r7, r2
 5933 0016 08BF     		it	eq
 5934 0018 0022     		moveq	r2, #0
 5935              	.LVL584:
 5936              		.loc 1 1283 3 is_stmt 1 view .LVU2479
 5937              		.loc 1 1283 6 is_stmt 0 view .LVU2480
 5938 001a 9642     		cmp	r6, r2
 5939 001c 0CD0     		beq	.L248
1284:Core/Src/SEGGER_RTT.c ****     pDst = (pRing->pBuffer + pRing->WrOff) + SEGGER_RTT_UNCACHED_OFF;
 5940              		.loc 1 1284 5 is_stmt 1 view .LVU2481
 5941              		.loc 1 1284 18 is_stmt 0 view .LVU2482
 5942 001e 0130     		adds	r0, r0, #1
 5943              	.LVL585:
 5944              		.loc 1 1284 18 view .LVU2483
 5945 0020 00EB4000 		add	r0, r0, r0, lsl #1
 5946              	.LVL586:
 5947              		.loc 1 1284 18 view .LVU2484
 5948 0024 04EBC004 		add	r4, r4, r0, lsl #3
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccSC4OZm.s 			page 167


 5949              		.loc 1 1284 10 view .LVU2485
 5950 0028 6068     		ldr	r0, [r4, #4]
 5951              	.LVL587:
1285:Core/Src/SEGGER_RTT.c ****     *pDst = c;
 5952              		.loc 1 1285 5 is_stmt 1 view .LVU2486
 5953              		.loc 1 1285 11 is_stmt 0 view .LVU2487
 5954 002a 4155     		strb	r1, [r0, r5]
1286:Core/Src/SEGGER_RTT.c ****     RTT__DMB();                     // Force data write to be complete before writing the <WrOff>, 
 5955              		.loc 1 1286 5 is_stmt 1 view .LVU2488
 5956              		.syntax unified
 5957              	@ 1286 "Core/Src/SEGGER_RTT.c" 1
 5958 002c BFF35F8F 		dmb
 5959              	
 5960              	@ 0 "" 2
 5961              		.loc 1 1286 15 view .LVU2489
1287:Core/Src/SEGGER_RTT.c ****     pRing->WrOff = WrOff;
 5962              		.loc 1 1287 5 view .LVU2490
1288:Core/Src/SEGGER_RTT.c ****     Status = 1;
 5963              		.loc 1 1288 12 is_stmt 0 view .LVU2491
 5964              		.thumb
 5965              		.syntax unified
 5966 0030 0120     		movs	r0, #1
 5967              	.LVL588:
1289:Core/Src/SEGGER_RTT.c ****   } else {
1290:Core/Src/SEGGER_RTT.c ****     Status = 0;
1291:Core/Src/SEGGER_RTT.c ****   }
1292:Core/Src/SEGGER_RTT.c ****   //
1293:Core/Src/SEGGER_RTT.c ****   return Status;
1294:Core/Src/SEGGER_RTT.c **** }
 5968              		.loc 1 1294 1 view .LVU2492
 5969 0032 F0BC     		pop	{r4, r5, r6, r7}
 5970              		.cfi_remember_state
 5971              		.cfi_restore 7
 5972              		.cfi_restore 6
 5973              		.cfi_restore 5
 5974              		.cfi_restore 4
 5975              		.cfi_def_cfa_offset 0
1287:Core/Src/SEGGER_RTT.c ****     Status = 1;
 5976              		.loc 1 1287 18 view .LVU2493
 5977 0034 5A62     		str	r2, [r3, #36]
1288:Core/Src/SEGGER_RTT.c ****     Status = 1;
 5978              		.loc 1 1288 5 is_stmt 1 view .LVU2494
 5979              	.LVL589:
 5980              		.loc 1 1294 1 is_stmt 0 view .LVU2495
 5981 0036 7047     		bx	lr
 5982              	.LVL590:
 5983              	.L248:
 5984              		.cfi_restore_state
1290:Core/Src/SEGGER_RTT.c ****   }
 5985              		.loc 1 1290 12 view .LVU2496
 5986 0038 0020     		movs	r0, #0
 5987              	.LVL591:
1293:Core/Src/SEGGER_RTT.c **** }
 5988              		.loc 1 1293 3 is_stmt 1 view .LVU2497
 5989              		.loc 1 1294 1 is_stmt 0 view .LVU2498
 5990 003a F0BC     		pop	{r4, r5, r6, r7}
 5991              		.cfi_restore 7
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccSC4OZm.s 			page 168


 5992              		.cfi_restore 6
 5993              		.cfi_restore 5
 5994              		.cfi_restore 4
 5995              		.cfi_def_cfa_offset 0
 5996 003c 7047     		bx	lr
 5997              	.L251:
 5998 003e 00BF     		.align	2
 5999              	.L250:
 6000 0040 00000000 		.word	.LANCHOR0
 6001              		.cfi_endproc
 6002              	.LFE15:
 6004              		.section	.text.SEGGER_RTT_PutCharSkip,"ax",%progbits
 6005              		.align	1
 6006              		.p2align 2,,3
 6007              		.global	SEGGER_RTT_PutCharSkip
 6008              		.syntax unified
 6009              		.thumb
 6010              		.thumb_func
 6012              	SEGGER_RTT_PutCharSkip:
 6013              	.LVL592:
 6014              	.LFB16:
1295:Core/Src/SEGGER_RTT.c **** 
1296:Core/Src/SEGGER_RTT.c **** /*********************************************************************
1297:Core/Src/SEGGER_RTT.c **** *
1298:Core/Src/SEGGER_RTT.c **** *       SEGGER_RTT_PutCharSkip
1299:Core/Src/SEGGER_RTT.c **** *
1300:Core/Src/SEGGER_RTT.c **** *  Function description
1301:Core/Src/SEGGER_RTT.c **** *    Stores a single character/byte in SEGGER RTT buffer.
1302:Core/Src/SEGGER_RTT.c **** *
1303:Core/Src/SEGGER_RTT.c **** *  Parameters
1304:Core/Src/SEGGER_RTT.c **** *    BufferIndex  Index of "Up"-buffer to be used (e.g. 0 for "Terminal").
1305:Core/Src/SEGGER_RTT.c **** *    c            Byte to be stored.
1306:Core/Src/SEGGER_RTT.c **** *
1307:Core/Src/SEGGER_RTT.c **** *  Return value
1308:Core/Src/SEGGER_RTT.c **** *    Number of bytes which have been stored in the "Up"-buffer.
1309:Core/Src/SEGGER_RTT.c **** *
1310:Core/Src/SEGGER_RTT.c **** *  Notes
1311:Core/Src/SEGGER_RTT.c **** *    (1) If there is not enough space in the "Up"-buffer, the character is dropped.
1312:Core/Src/SEGGER_RTT.c **** */
1313:Core/Src/SEGGER_RTT.c **** 
1314:Core/Src/SEGGER_RTT.c **** unsigned SEGGER_RTT_PutCharSkip(unsigned BufferIndex, char c) {
 6015              		.loc 1 1314 63 is_stmt 1 view -0
 6016              		.cfi_startproc
 6017              		@ args = 0, pretend = 0, frame = 0
 6018              		@ frame_needed = 0, uses_anonymous_args = 0
1315:Core/Src/SEGGER_RTT.c ****   SEGGER_RTT_BUFFER_UP* pRing;
 6019              		.loc 1 1315 3 view .LVU2500
1316:Core/Src/SEGGER_RTT.c ****   unsigned              WrOff;
 6020              		.loc 1 1316 3 view .LVU2501
1317:Core/Src/SEGGER_RTT.c ****   unsigned              Status;
 6021              		.loc 1 1317 3 view .LVU2502
1318:Core/Src/SEGGER_RTT.c ****   volatile char*        pDst;
 6022              		.loc 1 1318 3 view .LVU2503
 6023              	.LBB338:
1319:Core/Src/SEGGER_RTT.c ****   //
1320:Core/Src/SEGGER_RTT.c ****   // Prepare
1321:Core/Src/SEGGER_RTT.c ****   //
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccSC4OZm.s 			page 169


1322:Core/Src/SEGGER_RTT.c ****   INIT();
 6024              		.loc 1 1322 3 view .LVU2504
 6025              		.loc 1 1322 3 view .LVU2505
 6026              		.loc 1 1322 3 view .LVU2506
 6027              		.loc 1 1322 3 view .LVU2507
 6028              	.LBE338:
1314:Core/Src/SEGGER_RTT.c ****   SEGGER_RTT_BUFFER_UP* pRing;
 6029              		.loc 1 1314 63 is_stmt 0 view .LVU2508
 6030 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 6031              		.cfi_def_cfa_offset 24
 6032              		.cfi_offset 4, -24
 6033              		.cfi_offset 5, -20
 6034              		.cfi_offset 6, -16
 6035              		.cfi_offset 7, -12
 6036              		.cfi_offset 8, -8
 6037              		.cfi_offset 14, -4
 6038              	.LBB341:
 6039              		.loc 1 1322 3 view .LVU2509
 6040 0004 324C     		ldr	r4, .L259
 6041 0006 2378     		ldrb	r3, [r4]	@ zero_extendqisi2
 6042              	.LBE341:
1314:Core/Src/SEGGER_RTT.c ****   SEGGER_RTT_BUFFER_UP* pRing;
 6043              		.loc 1 1314 63 view .LVU2510
 6044 0008 0546     		mov	r5, r0
 6045 000a 8846     		mov	r8, r1
 6046              	.LBB342:
 6047              		.loc 1 1322 3 view .LVU2511
 6048 000c 3BB3     		cbz	r3, .L258
 6049              	.LVL593:
 6050              	.L253:
 6051              		.loc 1 1322 3 is_stmt 1 discriminator 3 view .LVU2512
 6052              	.LBE342:
 6053              		.loc 1 1322 9 discriminator 3 view .LVU2513
 6054              	.LBB343:
1323:Core/Src/SEGGER_RTT.c ****   SEGGER_RTT_LOCK();
 6055              		.loc 1 1323 3 discriminator 3 view .LVU2514
 6056              		.loc 1 1323 3 discriminator 3 view .LVU2515
 6057              		.syntax unified
 6058              	@ 1323 "Core/Src/SEGGER_RTT.c" 1
 6059 000e EFF31187 		mrs   r7, basepri  
 6060 0012 4FF02001 		mov   r1, #32       
 6061 0016 81F31188 		msr   basepri, r1  
 6062              		
 6063              	@ 0 "" 2
 6064              	.LVL594:
 6065              		.loc 1 1323 20 discriminator 3 view .LVU2516
1324:Core/Src/SEGGER_RTT.c ****   //
1325:Core/Src/SEGGER_RTT.c ****   // Get "to-host" ring buffer.
1326:Core/Src/SEGGER_RTT.c ****   //
1327:Core/Src/SEGGER_RTT.c ****   pRing = (SEGGER_RTT_BUFFER_UP*)((char*)&_SEGGER_RTT.aUp[BufferIndex] + SEGGER_RTT_UNCACHED_OFF); 
 6066              		.loc 1 1327 3 discriminator 3 view .LVU2517
1328:Core/Src/SEGGER_RTT.c ****   //
1329:Core/Src/SEGGER_RTT.c ****   // Get write position and handle wrap-around if necessary
1330:Core/Src/SEGGER_RTT.c ****   //
1331:Core/Src/SEGGER_RTT.c ****   WrOff = pRing->WrOff + 1;
 6067              		.loc 1 1331 3 discriminator 3 view .LVU2518
 6068              		.loc 1 1331 16 is_stmt 0 discriminator 3 view .LVU2519
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccSC4OZm.s 			page 170


 6069              		.thumb
 6070              		.syntax unified
 6071 001a 05EB4503 		add	r3, r5, r5, lsl #1
 6072 001e 04EBC303 		add	r3, r4, r3, lsl #3
 6073 0022 596A     		ldr	r1, [r3, #36]
1332:Core/Src/SEGGER_RTT.c ****   if (WrOff == pRing->SizeOfBuffer) {
1333:Core/Src/SEGGER_RTT.c ****     WrOff = 0;
 6074              		.loc 1 1333 11 discriminator 3 view .LVU2520
 6075 0024 1E6A     		ldr	r6, [r3, #32]
1334:Core/Src/SEGGER_RTT.c ****   }
1335:Core/Src/SEGGER_RTT.c ****   //
1336:Core/Src/SEGGER_RTT.c ****   // Output byte if free space is available
1337:Core/Src/SEGGER_RTT.c ****   //
1338:Core/Src/SEGGER_RTT.c ****   if (WrOff != pRing->RdOff) {
 6076              		.loc 1 1338 21 discriminator 3 view .LVU2521
 6077 0026 986A     		ldr	r0, [r3, #40]
1331:Core/Src/SEGGER_RTT.c ****   if (WrOff == pRing->SizeOfBuffer) {
 6078              		.loc 1 1331 9 discriminator 3 view .LVU2522
 6079 0028 4A1C     		adds	r2, r1, #1
 6080              	.LVL595:
1332:Core/Src/SEGGER_RTT.c ****   if (WrOff == pRing->SizeOfBuffer) {
 6081              		.loc 1 1332 3 is_stmt 1 discriminator 3 view .LVU2523
1333:Core/Src/SEGGER_RTT.c ****   }
 6082              		.loc 1 1333 11 is_stmt 0 discriminator 3 view .LVU2524
 6083 002a 9642     		cmp	r6, r2
 6084 002c 08BF     		it	eq
 6085 002e 0022     		moveq	r2, #0
 6086              	.LVL596:
 6087              		.loc 1 1338 3 is_stmt 1 discriminator 3 view .LVU2525
 6088              		.loc 1 1338 6 is_stmt 0 discriminator 3 view .LVU2526
 6089 0030 9042     		cmp	r0, r2
 6090 0032 0FD0     		beq	.L256
1339:Core/Src/SEGGER_RTT.c ****     pDst  = (pRing->pBuffer + pRing->WrOff) + SEGGER_RTT_UNCACHED_OFF;
 6091              		.loc 1 1339 5 is_stmt 1 view .LVU2527
 6092              		.loc 1 1339 19 is_stmt 0 view .LVU2528
 6093 0034 0135     		adds	r5, r5, #1
 6094              	.LVL597:
 6095              		.loc 1 1339 19 view .LVU2529
 6096 0036 05EB4505 		add	r5, r5, r5, lsl #1
 6097              	.LVL598:
 6098              		.loc 1 1339 19 view .LVU2530
 6099 003a 04EBC504 		add	r4, r4, r5, lsl #3
 6100              		.loc 1 1339 11 view .LVU2531
 6101 003e 6068     		ldr	r0, [r4, #4]
 6102              	.LVL599:
1340:Core/Src/SEGGER_RTT.c ****     *pDst = c;
 6103              		.loc 1 1340 5 is_stmt 1 view .LVU2532
 6104              		.loc 1 1340 11 is_stmt 0 view .LVU2533
 6105 0040 00F80180 		strb	r8, [r0, r1]
1341:Core/Src/SEGGER_RTT.c ****     RTT__DMB();                     // Force data write to be complete before writing the <WrOff>, 
 6106              		.loc 1 1341 5 is_stmt 1 view .LVU2534
 6107              		.syntax unified
 6108              	@ 1341 "Core/Src/SEGGER_RTT.c" 1
 6109 0044 BFF35F8F 		dmb
 6110              	
 6111              	@ 0 "" 2
 6112              		.loc 1 1341 15 view .LVU2535
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccSC4OZm.s 			page 171


1342:Core/Src/SEGGER_RTT.c ****     pRing->WrOff = WrOff;
 6113              		.loc 1 1342 5 view .LVU2536
1343:Core/Src/SEGGER_RTT.c ****     Status = 1;
 6114              		.loc 1 1343 12 is_stmt 0 view .LVU2537
 6115              		.thumb
 6116              		.syntax unified
 6117 0048 0120     		movs	r0, #1
 6118              	.LVL600:
1342:Core/Src/SEGGER_RTT.c ****     pRing->WrOff = WrOff;
 6119              		.loc 1 1342 18 view .LVU2538
 6120 004a 5A62     		str	r2, [r3, #36]
 6121              		.loc 1 1343 5 is_stmt 1 view .LVU2539
 6122              	.LVL601:
1344:Core/Src/SEGGER_RTT.c ****   } else {
1345:Core/Src/SEGGER_RTT.c ****     Status = 0;
1346:Core/Src/SEGGER_RTT.c ****   }
1347:Core/Src/SEGGER_RTT.c ****   //
1348:Core/Src/SEGGER_RTT.c ****   // Finish up.
1349:Core/Src/SEGGER_RTT.c ****   //
1350:Core/Src/SEGGER_RTT.c ****   SEGGER_RTT_UNLOCK();
 6123              		.loc 1 1350 3 view .LVU2540
 6124              		.syntax unified
 6125              	@ 1350 "Core/Src/SEGGER_RTT.c" 1
 6126 004c 87F31188 		msr   basepri, r7  
 6127              		
 6128              	@ 0 "" 2
 6129              		.thumb
 6130              		.syntax unified
 6131              	.LBE343:
 6132              		.loc 1 1350 22 view .LVU2541
1351:Core/Src/SEGGER_RTT.c ****   //
1352:Core/Src/SEGGER_RTT.c ****   return Status;
 6133              		.loc 1 1352 3 view .LVU2542
1353:Core/Src/SEGGER_RTT.c **** }
 6134              		.loc 1 1353 1 is_stmt 0 view .LVU2543
 6135 0050 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 6136              	.LVL602:
 6137              	.L256:
 6138              	.LBB344:
1345:Core/Src/SEGGER_RTT.c ****   }
 6139              		.loc 1 1345 12 view .LVU2544
 6140 0054 0020     		movs	r0, #0
 6141              	.LVL603:
1350:Core/Src/SEGGER_RTT.c ****   //
 6142              		.loc 1 1350 3 is_stmt 1 view .LVU2545
 6143              		.syntax unified
 6144              	@ 1350 "Core/Src/SEGGER_RTT.c" 1
 6145 0056 87F31188 		msr   basepri, r7  
 6146              		
 6147              	@ 0 "" 2
 6148              		.thumb
 6149              		.syntax unified
 6150              	.LBE344:
1350:Core/Src/SEGGER_RTT.c ****   //
 6151              		.loc 1 1350 22 view .LVU2546
1352:Core/Src/SEGGER_RTT.c **** }
 6152              		.loc 1 1352 3 view .LVU2547
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccSC4OZm.s 			page 172


 6153              		.loc 1 1353 1 is_stmt 0 view .LVU2548
 6154 005a BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 6155              	.LVL604:
 6156              	.L258:
 6157              		.loc 1 1353 1 view .LVU2549
 6158 005e 03F0FF07 		and	r7, r3, #255
 6159              	.LBB345:
1322:Core/Src/SEGGER_RTT.c ****   SEGGER_RTT_LOCK();
 6160              		.loc 1 1322 3 is_stmt 1 view .LVU2550
 6161              	.LBB339:
 6162              	.LBI339:
 314:Core/Src/SEGGER_RTT.c ****   volatile SEGGER_RTT_CB* p;   // Volatile to make sure that compiler cannot change the order of ac
 6163              		.loc 1 314 13 view .LVU2551
 6164              	.LBB340:
 315:Core/Src/SEGGER_RTT.c ****   static const char _aInitStr[] = "\0\0\0\0\0\0TTR REGGES";  // Init complete ID string to make sur
 6165              		.loc 1 315 3 view .LVU2552
 316:Core/Src/SEGGER_RTT.c ****   unsigned i;
 6166              		.loc 1 316 3 view .LVU2553
 317:Core/Src/SEGGER_RTT.c ****   //
 6167              		.loc 1 317 3 view .LVU2554
 321:Core/Src/SEGGER_RTT.c ****   memset((SEGGER_RTT_CB*)p, 0, sizeof(_SEGGER_RTT));         // Make sure that the RTT CB is always
 6168              		.loc 1 321 3 view .LVU2555
 6169              	.LVL605:
 322:Core/Src/SEGGER_RTT.c ****   p->MaxNumUpBuffers    = SEGGER_RTT_MAX_NUM_UP_BUFFERS;
 6170              		.loc 1 322 3 view .LVU2556
 6171 0062 3946     		mov	r1, r7
 6172              	.LVL606:
 322:Core/Src/SEGGER_RTT.c ****   p->MaxNumUpBuffers    = SEGGER_RTT_MAX_NUM_UP_BUFFERS;
 6173              		.loc 1 322 3 is_stmt 0 view .LVU2557
 6174 0064 7822     		movs	r2, #120
 6175 0066 04F13000 		add	r0, r4, #48
 6176              	.LVL607:
 322:Core/Src/SEGGER_RTT.c ****   p->MaxNumUpBuffers    = SEGGER_RTT_MAX_NUM_UP_BUFFERS;
 6177              		.loc 1 322 3 view .LVU2558
 6178 006a FFF7FEFF 		bl	memset
 6179              	.LVL608:
 323:Core/Src/SEGGER_RTT.c ****   p->MaxNumDownBuffers  = SEGGER_RTT_MAX_NUM_DOWN_BUFFERS;
 6180              		.loc 1 323 3 is_stmt 1 view .LVU2559
 323:Core/Src/SEGGER_RTT.c ****   p->MaxNumDownBuffers  = SEGGER_RTT_MAX_NUM_DOWN_BUFFERS;
 6181              		.loc 1 323 25 is_stmt 0 view .LVU2560
 6182 006e 0323     		movs	r3, #3
 6183 0070 2361     		str	r3, [r4, #16]
 324:Core/Src/SEGGER_RTT.c ****   //
 6184              		.loc 1 324 3 is_stmt 1 view .LVU2561
 329:Core/Src/SEGGER_RTT.c ****   p->aUp[0].SizeOfBuffer  = BUFFER_SIZE_UP;
 6185              		.loc 1 329 27 is_stmt 0 view .LVU2562
 6186 0072 184A     		ldr	r2, .L259+4
 324:Core/Src/SEGGER_RTT.c ****   //
 6187              		.loc 1 324 25 view .LVU2563
 6188 0074 6361     		str	r3, [r4, #20]
 328:Core/Src/SEGGER_RTT.c ****   p->aUp[0].pBuffer       = _acUpBuffer;
 6189              		.loc 1 328 3 is_stmt 1 view .LVU2564
 330:Core/Src/SEGGER_RTT.c ****   p->aUp[0].RdOff         = 0u;
 6190              		.loc 1 330 27 is_stmt 0 view .LVU2565
 6191 0076 4FF48061 		mov	r1, #1024
 328:Core/Src/SEGGER_RTT.c ****   p->aUp[0].pBuffer       = _acUpBuffer;
 6192              		.loc 1 328 27 view .LVU2566
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccSC4OZm.s 			page 173


 6193 007a 174B     		ldr	r3, .L259+8
 6194 007c A361     		str	r3, [r4, #24]
 329:Core/Src/SEGGER_RTT.c ****   p->aUp[0].SizeOfBuffer  = BUFFER_SIZE_UP;
 6195              		.loc 1 329 3 is_stmt 1 view .LVU2567
 329:Core/Src/SEGGER_RTT.c ****   p->aUp[0].SizeOfBuffer  = BUFFER_SIZE_UP;
 6196              		.loc 1 329 27 is_stmt 0 view .LVU2568
 6197 007e E261     		str	r2, [r4, #28]
 330:Core/Src/SEGGER_RTT.c ****   p->aUp[0].RdOff         = 0u;
 6198              		.loc 1 330 3 is_stmt 1 view .LVU2569
 330:Core/Src/SEGGER_RTT.c ****   p->aUp[0].RdOff         = 0u;
 6199              		.loc 1 330 27 is_stmt 0 view .LVU2570
 6200 0080 2162     		str	r1, [r4, #32]
 331:Core/Src/SEGGER_RTT.c ****   p->aUp[0].WrOff         = 0u;
 6201              		.loc 1 331 3 is_stmt 1 view .LVU2571
 338:Core/Src/SEGGER_RTT.c ****   p->aDown[0].SizeOfBuffer  = BUFFER_SIZE_DOWN;
 6202              		.loc 1 338 29 is_stmt 0 view .LVU2572
 6203 0082 164A     		ldr	r2, .L259+12
 331:Core/Src/SEGGER_RTT.c ****   p->aUp[0].WrOff         = 0u;
 6204              		.loc 1 331 27 view .LVU2573
 6205 0084 A762     		str	r7, [r4, #40]
 332:Core/Src/SEGGER_RTT.c ****   p->aUp[0].Flags         = SEGGER_RTT_MODE_DEFAULT;
 6206              		.loc 1 332 3 is_stmt 1 view .LVU2574
 332:Core/Src/SEGGER_RTT.c ****   p->aUp[0].Flags         = SEGGER_RTT_MODE_DEFAULT;
 6207              		.loc 1 332 27 is_stmt 0 view .LVU2575
 6208 0086 6762     		str	r7, [r4, #36]
 333:Core/Src/SEGGER_RTT.c ****   //
 6209              		.loc 1 333 3 is_stmt 1 view .LVU2576
 333:Core/Src/SEGGER_RTT.c ****   //
 6210              		.loc 1 333 27 is_stmt 0 view .LVU2577
 6211 0088 E762     		str	r7, [r4, #44]
 337:Core/Src/SEGGER_RTT.c ****   p->aDown[0].pBuffer       = _acDownBuffer;
 6212              		.loc 1 337 3 is_stmt 1 view .LVU2578
 337:Core/Src/SEGGER_RTT.c ****   p->aDown[0].pBuffer       = _acDownBuffer;
 6213              		.loc 1 337 29 is_stmt 0 view .LVU2579
 6214 008a 2366     		str	r3, [r4, #96]
 338:Core/Src/SEGGER_RTT.c ****   p->aDown[0].SizeOfBuffer  = BUFFER_SIZE_DOWN;
 6215              		.loc 1 338 3 is_stmt 1 view .LVU2580
 339:Core/Src/SEGGER_RTT.c ****   p->aDown[0].RdOff         = 0u;
 6216              		.loc 1 339 29 is_stmt 0 view .LVU2581
 6217 008c 1023     		movs	r3, #16
 338:Core/Src/SEGGER_RTT.c ****   p->aDown[0].SizeOfBuffer  = BUFFER_SIZE_DOWN;
 6218              		.loc 1 338 29 view .LVU2582
 6219 008e 6266     		str	r2, [r4, #100]
 339:Core/Src/SEGGER_RTT.c ****   p->aDown[0].RdOff         = 0u;
 6220              		.loc 1 339 3 is_stmt 1 view .LVU2583
 339:Core/Src/SEGGER_RTT.c ****   p->aDown[0].RdOff         = 0u;
 6221              		.loc 1 339 29 is_stmt 0 view .LVU2584
 6222 0090 A366     		str	r3, [r4, #104]
 340:Core/Src/SEGGER_RTT.c ****   p->aDown[0].WrOff         = 0u;
 6223              		.loc 1 340 3 is_stmt 1 view .LVU2585
 340:Core/Src/SEGGER_RTT.c ****   p->aDown[0].WrOff         = 0u;
 6224              		.loc 1 340 29 is_stmt 0 view .LVU2586
 6225 0092 2767     		str	r7, [r4, #112]
 341:Core/Src/SEGGER_RTT.c ****   p->aDown[0].Flags         = SEGGER_RTT_MODE_DEFAULT;
 6226              		.loc 1 341 3 is_stmt 1 view .LVU2587
 341:Core/Src/SEGGER_RTT.c ****   p->aDown[0].Flags         = SEGGER_RTT_MODE_DEFAULT;
 6227              		.loc 1 341 29 is_stmt 0 view .LVU2588
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccSC4OZm.s 			page 174


 6228 0094 E766     		str	r7, [r4, #108]
 342:Core/Src/SEGGER_RTT.c ****   //
 6229              		.loc 1 342 3 is_stmt 1 view .LVU2589
 342:Core/Src/SEGGER_RTT.c ****   //
 6230              		.loc 1 342 29 is_stmt 0 view .LVU2590
 6231 0096 6767     		str	r7, [r4, #116]
 348:Core/Src/SEGGER_RTT.c ****   for (i = 0; i < sizeof(_aInitStr) - 1; ++i) {
 6232              		.loc 1 348 3 is_stmt 1 view .LVU2591
 6233              		.syntax unified
 6234              	@ 348 "Core/Src/SEGGER_RTT.c" 1
 6235 0098 BFF35F8F 		dmb
 6236              	
 6237              	@ 0 "" 2
 348:Core/Src/SEGGER_RTT.c ****   for (i = 0; i < sizeof(_aInitStr) - 1; ++i) {
 6238              		.loc 1 348 13 view .LVU2592
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 6239              		.loc 1 349 3 view .LVU2593
 6240              	.LVL609:
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 6241              		.loc 1 349 17 view .LVU2594
 350:Core/Src/SEGGER_RTT.c ****   }
 6242              		.loc 1 350 5 view .LVU2595
 350:Core/Src/SEGGER_RTT.c ****   }
 6243              		.loc 1 350 16 is_stmt 0 view .LVU2596
 6244              		.thumb
 6245              		.syntax unified
 6246 009c 5323     		movs	r3, #83
 6247 009e 2370     		strb	r3, [r4]
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 6248              		.loc 1 349 42 is_stmt 1 view .LVU2597
 6249              	.LVL610:
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 6250              		.loc 1 349 17 view .LVU2598
 350:Core/Src/SEGGER_RTT.c ****   }
 6251              		.loc 1 350 5 view .LVU2599
 350:Core/Src/SEGGER_RTT.c ****   }
 6252              		.loc 1 350 16 is_stmt 0 view .LVU2600
 6253 00a0 4722     		movs	r2, #71
 6254 00a2 4523     		movs	r3, #69
 6255 00a4 6370     		strb	r3, [r4, #1]
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 6256              		.loc 1 349 42 is_stmt 1 view .LVU2601
 6257              	.LVL611:
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 6258              		.loc 1 349 17 view .LVU2602
 350:Core/Src/SEGGER_RTT.c ****   }
 6259              		.loc 1 350 5 view .LVU2603
 350:Core/Src/SEGGER_RTT.c ****   }
 6260              		.loc 1 350 16 is_stmt 0 view .LVU2604
 6261 00a6 2021     		movs	r1, #32
 6262 00a8 A270     		strb	r2, [r4, #2]
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 6263              		.loc 1 349 42 is_stmt 1 view .LVU2605
 6264              	.LVL612:
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 6265              		.loc 1 349 17 view .LVU2606
 350:Core/Src/SEGGER_RTT.c ****   }
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccSC4OZm.s 			page 175


 6266              		.loc 1 350 5 view .LVU2607
 350:Core/Src/SEGGER_RTT.c ****   }
 6267              		.loc 1 350 16 is_stmt 0 view .LVU2608
 6268 00aa E270     		strb	r2, [r4, #3]
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 6269              		.loc 1 349 42 is_stmt 1 view .LVU2609
 6270              	.LVL613:
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 6271              		.loc 1 349 17 view .LVU2610
 350:Core/Src/SEGGER_RTT.c ****   }
 6272              		.loc 1 350 5 view .LVU2611
 350:Core/Src/SEGGER_RTT.c ****   }
 6273              		.loc 1 350 16 is_stmt 0 view .LVU2612
 6274 00ac 2371     		strb	r3, [r4, #4]
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 6275              		.loc 1 349 42 is_stmt 1 view .LVU2613
 6276              	.LVL614:
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 6277              		.loc 1 349 17 view .LVU2614
 350:Core/Src/SEGGER_RTT.c ****   }
 6278              		.loc 1 350 5 view .LVU2615
 350:Core/Src/SEGGER_RTT.c ****   }
 6279              		.loc 1 350 16 is_stmt 0 view .LVU2616
 6280 00ae 5222     		movs	r2, #82
 6281 00b0 5423     		movs	r3, #84
 6282 00b2 6271     		strb	r2, [r4, #5]
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 6283              		.loc 1 349 42 is_stmt 1 view .LVU2617
 6284              	.LVL615:
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 6285              		.loc 1 349 17 view .LVU2618
 350:Core/Src/SEGGER_RTT.c ****   }
 6286              		.loc 1 350 5 view .LVU2619
 350:Core/Src/SEGGER_RTT.c ****   }
 6287              		.loc 1 350 16 is_stmt 0 view .LVU2620
 6288 00b4 A171     		strb	r1, [r4, #6]
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 6289              		.loc 1 349 42 is_stmt 1 view .LVU2621
 6290              	.LVL616:
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 6291              		.loc 1 349 17 view .LVU2622
 350:Core/Src/SEGGER_RTT.c ****   }
 6292              		.loc 1 350 5 view .LVU2623
 350:Core/Src/SEGGER_RTT.c ****   }
 6293              		.loc 1 350 16 is_stmt 0 view .LVU2624
 6294 00b6 E271     		strb	r2, [r4, #7]
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 6295              		.loc 1 349 42 is_stmt 1 view .LVU2625
 6296              	.LVL617:
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 6297              		.loc 1 349 17 view .LVU2626
 350:Core/Src/SEGGER_RTT.c ****   }
 6298              		.loc 1 350 5 view .LVU2627
 350:Core/Src/SEGGER_RTT.c ****   }
 6299              		.loc 1 350 16 is_stmt 0 view .LVU2628
 6300 00b8 2372     		strb	r3, [r4, #8]
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccSC4OZm.s 			page 176


 6301              		.loc 1 349 42 is_stmt 1 view .LVU2629
 6302              	.LVL618:
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 6303              		.loc 1 349 17 view .LVU2630
 350:Core/Src/SEGGER_RTT.c ****   }
 6304              		.loc 1 350 5 view .LVU2631
 350:Core/Src/SEGGER_RTT.c ****   }
 6305              		.loc 1 350 16 is_stmt 0 view .LVU2632
 6306 00ba 6372     		strb	r3, [r4, #9]
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 6307              		.loc 1 349 42 is_stmt 1 view .LVU2633
 6308              	.LVL619:
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 6309              		.loc 1 349 17 view .LVU2634
 350:Core/Src/SEGGER_RTT.c ****   }
 6310              		.loc 1 350 5 view .LVU2635
 350:Core/Src/SEGGER_RTT.c ****   }
 6311              		.loc 1 350 16 is_stmt 0 view .LVU2636
 6312 00bc A772     		strb	r7, [r4, #10]
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 6313              		.loc 1 349 42 is_stmt 1 view .LVU2637
 6314              	.LVL620:
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 6315              		.loc 1 349 17 view .LVU2638
 350:Core/Src/SEGGER_RTT.c ****   }
 6316              		.loc 1 350 5 view .LVU2639
 350:Core/Src/SEGGER_RTT.c ****   }
 6317              		.loc 1 350 16 is_stmt 0 view .LVU2640
 6318 00be E772     		strb	r7, [r4, #11]
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 6319              		.loc 1 349 42 is_stmt 1 view .LVU2641
 6320              	.LVL621:
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 6321              		.loc 1 349 17 view .LVU2642
 350:Core/Src/SEGGER_RTT.c ****   }
 6322              		.loc 1 350 5 view .LVU2643
 350:Core/Src/SEGGER_RTT.c ****   }
 6323              		.loc 1 350 16 is_stmt 0 view .LVU2644
 6324 00c0 2773     		strb	r7, [r4, #12]
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 6325              		.loc 1 349 42 is_stmt 1 view .LVU2645
 6326              	.LVL622:
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 6327              		.loc 1 349 17 view .LVU2646
 350:Core/Src/SEGGER_RTT.c ****   }
 6328              		.loc 1 350 5 view .LVU2647
 350:Core/Src/SEGGER_RTT.c ****   }
 6329              		.loc 1 350 16 is_stmt 0 view .LVU2648
 6330 00c2 6773     		strb	r7, [r4, #13]
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 6331              		.loc 1 349 42 is_stmt 1 view .LVU2649
 6332              	.LVL623:
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 6333              		.loc 1 349 17 view .LVU2650
 350:Core/Src/SEGGER_RTT.c ****   }
 6334              		.loc 1 350 5 view .LVU2651
 350:Core/Src/SEGGER_RTT.c ****   }
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccSC4OZm.s 			page 177


 6335              		.loc 1 350 16 is_stmt 0 view .LVU2652
 6336 00c4 A773     		strb	r7, [r4, #14]
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 6337              		.loc 1 349 42 is_stmt 1 view .LVU2653
 6338              	.LVL624:
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 6339              		.loc 1 349 17 view .LVU2654
 350:Core/Src/SEGGER_RTT.c ****   }
 6340              		.loc 1 350 5 view .LVU2655
 350:Core/Src/SEGGER_RTT.c ****   }
 6341              		.loc 1 350 16 is_stmt 0 view .LVU2656
 6342 00c6 E773     		strb	r7, [r4, #15]
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 6343              		.loc 1 349 42 is_stmt 1 view .LVU2657
 6344              	.LVL625:
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 6345              		.loc 1 349 17 view .LVU2658
 352:Core/Src/SEGGER_RTT.c **** }
 6346              		.loc 1 352 3 view .LVU2659
 6347              		.syntax unified
 6348              	@ 352 "Core/Src/SEGGER_RTT.c" 1
 6349 00c8 BFF35F8F 		dmb
 6350              	
 6351              	@ 0 "" 2
 352:Core/Src/SEGGER_RTT.c **** }
 6352              		.loc 1 352 13 view .LVU2660
 353:Core/Src/SEGGER_RTT.c **** 
 6353              		.loc 1 353 1 is_stmt 0 view .LVU2661
 6354              		.thumb
 6355              		.syntax unified
 6356 00cc 9FE7     		b	.L253
 6357              	.L260:
 6358 00ce 00BF     		.align	2
 6359              	.L259:
 6360 00d0 00000000 		.word	.LANCHOR0
 6361 00d4 00000000 		.word	.LANCHOR1
 6362 00d8 00000000 		.word	.LC0
 6363 00dc 00000000 		.word	.LANCHOR2
 6364              	.LBE340:
 6365              	.LBE339:
 6366              	.LBE345:
 6367              		.cfi_endproc
 6368              	.LFE16:
 6370              		.section	.text.SEGGER_RTT_PutChar,"ax",%progbits
 6371              		.align	1
 6372              		.p2align 2,,3
 6373              		.global	SEGGER_RTT_PutChar
 6374              		.syntax unified
 6375              		.thumb
 6376              		.thumb_func
 6378              	SEGGER_RTT_PutChar:
 6379              	.LVL626:
 6380              	.LFB17:
1354:Core/Src/SEGGER_RTT.c **** 
1355:Core/Src/SEGGER_RTT.c ****  /*********************************************************************
1356:Core/Src/SEGGER_RTT.c **** *
1357:Core/Src/SEGGER_RTT.c **** *       SEGGER_RTT_PutChar
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccSC4OZm.s 			page 178


1358:Core/Src/SEGGER_RTT.c **** *
1359:Core/Src/SEGGER_RTT.c **** *  Function description
1360:Core/Src/SEGGER_RTT.c **** *    Stores a single character/byte in SEGGER RTT buffer.
1361:Core/Src/SEGGER_RTT.c **** *
1362:Core/Src/SEGGER_RTT.c **** *  Parameters
1363:Core/Src/SEGGER_RTT.c **** *    BufferIndex  Index of "Up"-buffer to be used (e.g. 0 for "Terminal").
1364:Core/Src/SEGGER_RTT.c **** *    c            Byte to be stored.
1365:Core/Src/SEGGER_RTT.c **** *
1366:Core/Src/SEGGER_RTT.c **** *  Return value
1367:Core/Src/SEGGER_RTT.c **** *    Number of bytes which have been stored in the "Up"-buffer.
1368:Core/Src/SEGGER_RTT.c **** *
1369:Core/Src/SEGGER_RTT.c **** *  Notes
1370:Core/Src/SEGGER_RTT.c **** *    (1) Data is stored according to buffer flags.
1371:Core/Src/SEGGER_RTT.c **** */
1372:Core/Src/SEGGER_RTT.c **** 
1373:Core/Src/SEGGER_RTT.c **** unsigned SEGGER_RTT_PutChar(unsigned BufferIndex, char c) {
 6381              		.loc 1 1373 59 is_stmt 1 view -0
 6382              		.cfi_startproc
 6383              		@ args = 0, pretend = 0, frame = 0
 6384              		@ frame_needed = 0, uses_anonymous_args = 0
1374:Core/Src/SEGGER_RTT.c ****   SEGGER_RTT_BUFFER_UP* pRing;
 6385              		.loc 1 1374 3 view .LVU2663
1375:Core/Src/SEGGER_RTT.c ****   unsigned              WrOff;
 6386              		.loc 1 1375 3 view .LVU2664
1376:Core/Src/SEGGER_RTT.c ****   unsigned              Status;
 6387              		.loc 1 1376 3 view .LVU2665
1377:Core/Src/SEGGER_RTT.c ****   volatile char*        pDst;
 6388              		.loc 1 1377 3 view .LVU2666
 6389              	.LBB350:
1378:Core/Src/SEGGER_RTT.c ****   //
1379:Core/Src/SEGGER_RTT.c ****   // Prepare
1380:Core/Src/SEGGER_RTT.c ****   //
1381:Core/Src/SEGGER_RTT.c ****   INIT();
 6390              		.loc 1 1381 3 view .LVU2667
 6391              		.loc 1 1381 3 view .LVU2668
 6392              		.loc 1 1381 3 view .LVU2669
 6393              		.loc 1 1381 3 view .LVU2670
 6394              	.LBE350:
1373:Core/Src/SEGGER_RTT.c ****   SEGGER_RTT_BUFFER_UP* pRing;
 6395              		.loc 1 1373 59 is_stmt 0 view .LVU2671
 6396 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 6397              		.cfi_def_cfa_offset 24
 6398              		.cfi_offset 3, -24
 6399              		.cfi_offset 4, -20
 6400              		.cfi_offset 5, -16
 6401              		.cfi_offset 6, -12
 6402              		.cfi_offset 7, -8
 6403              		.cfi_offset 14, -4
 6404              	.LBB353:
 6405              		.loc 1 1381 3 view .LVU2672
 6406 0002 394C     		ldr	r4, .L272
 6407 0004 2378     		ldrb	r3, [r4]	@ zero_extendqisi2
 6408              	.LBE353:
1373:Core/Src/SEGGER_RTT.c ****   SEGGER_RTT_BUFFER_UP* pRing;
 6409              		.loc 1 1373 59 view .LVU2673
 6410 0006 0546     		mov	r5, r0
 6411 0008 0E46     		mov	r6, r1
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccSC4OZm.s 			page 179


 6412              	.LBB354:
 6413              		.loc 1 1381 3 view .LVU2674
 6414 000a 002B     		cmp	r3, #0
 6415 000c 34D0     		beq	.L271
 6416              	.LVL627:
 6417              	.L262:
 6418              		.loc 1 1381 3 is_stmt 1 discriminator 3 view .LVU2675
 6419              	.LBE354:
 6420              		.loc 1 1381 9 discriminator 3 view .LVU2676
 6421              	.LBB355:
1382:Core/Src/SEGGER_RTT.c ****   SEGGER_RTT_LOCK();
 6422              		.loc 1 1382 3 discriminator 3 view .LVU2677
 6423              		.loc 1 1382 3 discriminator 3 view .LVU2678
 6424              		.syntax unified
 6425              	@ 1382 "Core/Src/SEGGER_RTT.c" 1
 6426 000e EFF3118C 		mrs   ip, basepri  
 6427 0012 4FF02001 		mov   r1, #32       
 6428 0016 81F31188 		msr   basepri, r1  
 6429              		
 6430              	@ 0 "" 2
 6431              	.LVL628:
 6432              		.loc 1 1382 20 discriminator 3 view .LVU2679
1383:Core/Src/SEGGER_RTT.c ****   //
1384:Core/Src/SEGGER_RTT.c ****   // Get "to-host" ring buffer.
1385:Core/Src/SEGGER_RTT.c ****   //
1386:Core/Src/SEGGER_RTT.c ****   pRing = (SEGGER_RTT_BUFFER_UP*)((char*)&_SEGGER_RTT.aUp[BufferIndex] + SEGGER_RTT_UNCACHED_OFF); 
 6433              		.loc 1 1386 3 discriminator 3 view .LVU2680
1387:Core/Src/SEGGER_RTT.c ****   //
1388:Core/Src/SEGGER_RTT.c ****   // Get write position and handle wrap-around if necessary
1389:Core/Src/SEGGER_RTT.c ****   //
1390:Core/Src/SEGGER_RTT.c ****   WrOff = pRing->WrOff + 1;
 6434              		.loc 1 1390 3 discriminator 3 view .LVU2681
 6435              		.loc 1 1390 16 is_stmt 0 discriminator 3 view .LVU2682
 6436              		.thumb
 6437              		.syntax unified
 6438 001a 05EB4503 		add	r3, r5, r5, lsl #1
 6439 001e 04EBC303 		add	r3, r4, r3, lsl #3
1391:Core/Src/SEGGER_RTT.c ****   if (WrOff == pRing->SizeOfBuffer) {
 6440              		.loc 1 1391 6 discriminator 3 view .LVU2683
 6441 0022 D3E90807 		ldrd	r0, r7, [r3, #32]
1392:Core/Src/SEGGER_RTT.c ****     WrOff = 0;
1393:Core/Src/SEGGER_RTT.c ****   }
1394:Core/Src/SEGGER_RTT.c ****   //
1395:Core/Src/SEGGER_RTT.c ****   // Wait for free space if mode is set to blocking
1396:Core/Src/SEGGER_RTT.c ****   //
1397:Core/Src/SEGGER_RTT.c ****   if (pRing->Flags == SEGGER_RTT_MODE_BLOCK_IF_FIFO_FULL) {
 6442              		.loc 1 1397 6 discriminator 3 view .LVU2684
 6443 0026 D96A     		ldr	r1, [r3, #44]
1390:Core/Src/SEGGER_RTT.c ****   if (WrOff == pRing->SizeOfBuffer) {
 6444              		.loc 1 1390 9 discriminator 3 view .LVU2685
 6445 0028 7A1C     		adds	r2, r7, #1
 6446              	.LVL629:
1391:Core/Src/SEGGER_RTT.c ****   if (WrOff == pRing->SizeOfBuffer) {
 6447              		.loc 1 1391 3 is_stmt 1 discriminator 3 view .LVU2686
1392:Core/Src/SEGGER_RTT.c ****     WrOff = 0;
 6448              		.loc 1 1392 11 is_stmt 0 discriminator 3 view .LVU2687
 6449 002a 9042     		cmp	r0, r2
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccSC4OZm.s 			page 180


 6450 002c 08BF     		it	eq
 6451 002e 0022     		moveq	r2, #0
 6452              	.LVL630:
 6453              		.loc 1 1397 3 is_stmt 1 discriminator 3 view .LVU2688
 6454              		.loc 1 1397 6 is_stmt 0 discriminator 3 view .LVU2689
 6455 0030 0229     		cmp	r1, #2
1390:Core/Src/SEGGER_RTT.c ****   if (WrOff == pRing->SizeOfBuffer) {
 6456              		.loc 1 1390 16 discriminator 3 view .LVU2690
 6457 0032 4FEA450E 		lsl	lr, r5, #1
 6458              		.loc 1 1397 6 discriminator 3 view .LVU2691
 6459 0036 14D0     		beq	.L265
 6460              	.L264:
1398:Core/Src/SEGGER_RTT.c ****     while (WrOff == pRing->RdOff) {
1399:Core/Src/SEGGER_RTT.c ****       ;
1400:Core/Src/SEGGER_RTT.c ****     }
1401:Core/Src/SEGGER_RTT.c ****   }
1402:Core/Src/SEGGER_RTT.c ****   //
1403:Core/Src/SEGGER_RTT.c ****   // Output byte if free space is available
1404:Core/Src/SEGGER_RTT.c ****   //
1405:Core/Src/SEGGER_RTT.c ****   if (WrOff != pRing->RdOff) {
 6461              		.loc 1 1405 3 is_stmt 1 view .LVU2692
 6462              		.loc 1 1405 21 is_stmt 0 view .LVU2693
 6463 0038 0EEB0503 		add	r3, lr, r5
 6464 003c 04EBC303 		add	r3, r4, r3, lsl #3
 6465 0040 996A     		ldr	r1, [r3, #40]
 6466              		.loc 1 1405 6 view .LVU2694
 6467 0042 9142     		cmp	r1, r2
 6468 0044 14D0     		beq	.L267
1406:Core/Src/SEGGER_RTT.c ****     pDst  = (pRing->pBuffer + pRing->WrOff) + SEGGER_RTT_UNCACHED_OFF;
 6469              		.loc 1 1406 5 is_stmt 1 view .LVU2695
 6470              		.loc 1 1406 19 is_stmt 0 view .LVU2696
 6471 0046 0135     		adds	r5, r5, #1
 6472              	.LVL631:
 6473              		.loc 1 1406 19 view .LVU2697
 6474 0048 05EB4505 		add	r5, r5, r5, lsl #1
 6475              	.LVL632:
 6476              		.loc 1 1406 19 view .LVU2698
 6477 004c 04EBC504 		add	r4, r4, r5, lsl #3
 6478              		.loc 1 1406 11 view .LVU2699
 6479 0050 6168     		ldr	r1, [r4, #4]
 6480              	.LVL633:
1407:Core/Src/SEGGER_RTT.c ****     *pDst = c;
 6481              		.loc 1 1407 5 is_stmt 1 view .LVU2700
 6482              		.loc 1 1407 11 is_stmt 0 view .LVU2701
 6483 0052 CE55     		strb	r6, [r1, r7]
1408:Core/Src/SEGGER_RTT.c ****     RTT__DMB();                     // Force data write to be complete before writing the <WrOff>, 
 6484              		.loc 1 1408 5 is_stmt 1 view .LVU2702
 6485              		.syntax unified
 6486              	@ 1408 "Core/Src/SEGGER_RTT.c" 1
 6487 0054 BFF35F8F 		dmb
 6488              	
 6489              	@ 0 "" 2
 6490              		.loc 1 1408 15 view .LVU2703
1409:Core/Src/SEGGER_RTT.c ****     pRing->WrOff = WrOff;
 6491              		.loc 1 1409 5 view .LVU2704
1410:Core/Src/SEGGER_RTT.c ****     Status = 1;
 6492              		.loc 1 1410 12 is_stmt 0 view .LVU2705
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccSC4OZm.s 			page 181


 6493              		.thumb
 6494              		.syntax unified
 6495 0058 0120     		movs	r0, #1
1409:Core/Src/SEGGER_RTT.c ****     pRing->WrOff = WrOff;
 6496              		.loc 1 1409 18 view .LVU2706
 6497 005a 5A62     		str	r2, [r3, #36]
 6498              		.loc 1 1410 5 is_stmt 1 view .LVU2707
 6499              	.LVL634:
1411:Core/Src/SEGGER_RTT.c ****   } else {
1412:Core/Src/SEGGER_RTT.c ****     Status = 0;
1413:Core/Src/SEGGER_RTT.c ****   }
1414:Core/Src/SEGGER_RTT.c ****   //
1415:Core/Src/SEGGER_RTT.c ****   // Finish up.
1416:Core/Src/SEGGER_RTT.c ****   //
1417:Core/Src/SEGGER_RTT.c ****   SEGGER_RTT_UNLOCK();
 6500              		.loc 1 1417 3 view .LVU2708
 6501              		.syntax unified
 6502              	@ 1417 "Core/Src/SEGGER_RTT.c" 1
 6503 005c 8CF31188 		msr   basepri, ip  
 6504              		
 6505              	@ 0 "" 2
 6506              		.thumb
 6507              		.syntax unified
 6508              	.LBE355:
 6509              		.loc 1 1417 22 view .LVU2709
1418:Core/Src/SEGGER_RTT.c ****   return Status;
 6510              		.loc 1 1418 3 view .LVU2710
1419:Core/Src/SEGGER_RTT.c **** }
 6511              		.loc 1 1419 1 is_stmt 0 view .LVU2711
 6512 0060 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 6513              	.LVL635:
 6514              	.L265:
 6515              	.LBB356:
1399:Core/Src/SEGGER_RTT.c ****     }
 6516              		.loc 1 1399 7 is_stmt 1 discriminator 1 view .LVU2712
1398:Core/Src/SEGGER_RTT.c ****       ;
 6517              		.loc 1 1398 18 discriminator 1 view .LVU2713
1398:Core/Src/SEGGER_RTT.c ****       ;
 6518              		.loc 1 1398 26 is_stmt 0 discriminator 1 view .LVU2714
 6519 0062 996A     		ldr	r1, [r3, #40]
1398:Core/Src/SEGGER_RTT.c ****       ;
 6520              		.loc 1 1398 18 discriminator 1 view .LVU2715
 6521 0064 9142     		cmp	r1, r2
 6522 0066 E7D1     		bne	.L264
1399:Core/Src/SEGGER_RTT.c ****     }
 6523              		.loc 1 1399 7 is_stmt 1 view .LVU2716
1398:Core/Src/SEGGER_RTT.c ****       ;
 6524              		.loc 1 1398 18 view .LVU2717
1398:Core/Src/SEGGER_RTT.c ****       ;
 6525              		.loc 1 1398 26 is_stmt 0 view .LVU2718
 6526 0068 996A     		ldr	r1, [r3, #40]
1398:Core/Src/SEGGER_RTT.c ****       ;
 6527              		.loc 1 1398 18 view .LVU2719
 6528 006a 9142     		cmp	r1, r2
 6529 006c F9D0     		beq	.L265
 6530 006e E3E7     		b	.L264
 6531              	.L267:
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccSC4OZm.s 			page 182


1412:Core/Src/SEGGER_RTT.c ****   }
 6532              		.loc 1 1412 12 view .LVU2720
 6533 0070 0020     		movs	r0, #0
 6534              	.LVL636:
1417:Core/Src/SEGGER_RTT.c ****   return Status;
 6535              		.loc 1 1417 3 is_stmt 1 view .LVU2721
 6536              		.syntax unified
 6537              	@ 1417 "Core/Src/SEGGER_RTT.c" 1
 6538 0072 8CF31188 		msr   basepri, ip  
 6539              		
 6540              	@ 0 "" 2
 6541              		.thumb
 6542              		.syntax unified
 6543              	.LBE356:
1417:Core/Src/SEGGER_RTT.c ****   return Status;
 6544              		.loc 1 1417 22 view .LVU2722
1418:Core/Src/SEGGER_RTT.c **** }
 6545              		.loc 1 1418 3 view .LVU2723
 6546              		.loc 1 1419 1 is_stmt 0 view .LVU2724
 6547 0076 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 6548              	.LVL637:
 6549              	.L271:
 6550              		.loc 1 1419 1 view .LVU2725
 6551 0078 03F0FF07 		and	r7, r3, #255
 6552              	.LBB357:
1381:Core/Src/SEGGER_RTT.c ****   SEGGER_RTT_LOCK();
 6553              		.loc 1 1381 3 is_stmt 1 view .LVU2726
 6554              	.LBB351:
 6555              	.LBI351:
 314:Core/Src/SEGGER_RTT.c ****   volatile SEGGER_RTT_CB* p;   // Volatile to make sure that compiler cannot change the order of ac
 6556              		.loc 1 314 13 view .LVU2727
 6557              	.LBB352:
 315:Core/Src/SEGGER_RTT.c ****   static const char _aInitStr[] = "\0\0\0\0\0\0TTR REGGES";  // Init complete ID string to make sur
 6558              		.loc 1 315 3 view .LVU2728
 316:Core/Src/SEGGER_RTT.c ****   unsigned i;
 6559              		.loc 1 316 3 view .LVU2729
 317:Core/Src/SEGGER_RTT.c ****   //
 6560              		.loc 1 317 3 view .LVU2730
 321:Core/Src/SEGGER_RTT.c ****   memset((SEGGER_RTT_CB*)p, 0, sizeof(_SEGGER_RTT));         // Make sure that the RTT CB is always
 6561              		.loc 1 321 3 view .LVU2731
 6562              	.LVL638:
 322:Core/Src/SEGGER_RTT.c ****   p->MaxNumUpBuffers    = SEGGER_RTT_MAX_NUM_UP_BUFFERS;
 6563              		.loc 1 322 3 view .LVU2732
 6564 007c 3946     		mov	r1, r7
 6565              	.LVL639:
 322:Core/Src/SEGGER_RTT.c ****   p->MaxNumUpBuffers    = SEGGER_RTT_MAX_NUM_UP_BUFFERS;
 6566              		.loc 1 322 3 is_stmt 0 view .LVU2733
 6567 007e 7822     		movs	r2, #120
 6568 0080 04F13000 		add	r0, r4, #48
 6569              	.LVL640:
 322:Core/Src/SEGGER_RTT.c ****   p->MaxNumUpBuffers    = SEGGER_RTT_MAX_NUM_UP_BUFFERS;
 6570              		.loc 1 322 3 view .LVU2734
 6571 0084 FFF7FEFF 		bl	memset
 6572              	.LVL641:
 323:Core/Src/SEGGER_RTT.c ****   p->MaxNumDownBuffers  = SEGGER_RTT_MAX_NUM_DOWN_BUFFERS;
 6573              		.loc 1 323 3 is_stmt 1 view .LVU2735
 323:Core/Src/SEGGER_RTT.c ****   p->MaxNumDownBuffers  = SEGGER_RTT_MAX_NUM_DOWN_BUFFERS;
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccSC4OZm.s 			page 183


 6574              		.loc 1 323 25 is_stmt 0 view .LVU2736
 6575 0088 0323     		movs	r3, #3
 6576 008a 2361     		str	r3, [r4, #16]
 324:Core/Src/SEGGER_RTT.c ****   //
 6577              		.loc 1 324 3 is_stmt 1 view .LVU2737
 329:Core/Src/SEGGER_RTT.c ****   p->aUp[0].SizeOfBuffer  = BUFFER_SIZE_UP;
 6578              		.loc 1 329 27 is_stmt 0 view .LVU2738
 6579 008c 174A     		ldr	r2, .L272+4
 324:Core/Src/SEGGER_RTT.c ****   //
 6580              		.loc 1 324 25 view .LVU2739
 6581 008e 6361     		str	r3, [r4, #20]
 328:Core/Src/SEGGER_RTT.c ****   p->aUp[0].pBuffer       = _acUpBuffer;
 6582              		.loc 1 328 3 is_stmt 1 view .LVU2740
 330:Core/Src/SEGGER_RTT.c ****   p->aUp[0].RdOff         = 0u;
 6583              		.loc 1 330 27 is_stmt 0 view .LVU2741
 6584 0090 4FF48061 		mov	r1, #1024
 328:Core/Src/SEGGER_RTT.c ****   p->aUp[0].pBuffer       = _acUpBuffer;
 6585              		.loc 1 328 27 view .LVU2742
 6586 0094 164B     		ldr	r3, .L272+8
 6587 0096 A361     		str	r3, [r4, #24]
 329:Core/Src/SEGGER_RTT.c ****   p->aUp[0].SizeOfBuffer  = BUFFER_SIZE_UP;
 6588              		.loc 1 329 3 is_stmt 1 view .LVU2743
 329:Core/Src/SEGGER_RTT.c ****   p->aUp[0].SizeOfBuffer  = BUFFER_SIZE_UP;
 6589              		.loc 1 329 27 is_stmt 0 view .LVU2744
 6590 0098 E261     		str	r2, [r4, #28]
 330:Core/Src/SEGGER_RTT.c ****   p->aUp[0].RdOff         = 0u;
 6591              		.loc 1 330 3 is_stmt 1 view .LVU2745
 330:Core/Src/SEGGER_RTT.c ****   p->aUp[0].RdOff         = 0u;
 6592              		.loc 1 330 27 is_stmt 0 view .LVU2746
 6593 009a 2162     		str	r1, [r4, #32]
 331:Core/Src/SEGGER_RTT.c ****   p->aUp[0].WrOff         = 0u;
 6594              		.loc 1 331 3 is_stmt 1 view .LVU2747
 338:Core/Src/SEGGER_RTT.c ****   p->aDown[0].SizeOfBuffer  = BUFFER_SIZE_DOWN;
 6595              		.loc 1 338 29 is_stmt 0 view .LVU2748
 6596 009c 154A     		ldr	r2, .L272+12
 331:Core/Src/SEGGER_RTT.c ****   p->aUp[0].WrOff         = 0u;
 6597              		.loc 1 331 27 view .LVU2749
 6598 009e A762     		str	r7, [r4, #40]
 332:Core/Src/SEGGER_RTT.c ****   p->aUp[0].Flags         = SEGGER_RTT_MODE_DEFAULT;
 6599              		.loc 1 332 3 is_stmt 1 view .LVU2750
 332:Core/Src/SEGGER_RTT.c ****   p->aUp[0].Flags         = SEGGER_RTT_MODE_DEFAULT;
 6600              		.loc 1 332 27 is_stmt 0 view .LVU2751
 6601 00a0 6762     		str	r7, [r4, #36]
 333:Core/Src/SEGGER_RTT.c ****   //
 6602              		.loc 1 333 3 is_stmt 1 view .LVU2752
 333:Core/Src/SEGGER_RTT.c ****   //
 6603              		.loc 1 333 27 is_stmt 0 view .LVU2753
 6604 00a2 E762     		str	r7, [r4, #44]
 337:Core/Src/SEGGER_RTT.c ****   p->aDown[0].pBuffer       = _acDownBuffer;
 6605              		.loc 1 337 3 is_stmt 1 view .LVU2754
 337:Core/Src/SEGGER_RTT.c ****   p->aDown[0].pBuffer       = _acDownBuffer;
 6606              		.loc 1 337 29 is_stmt 0 view .LVU2755
 6607 00a4 2366     		str	r3, [r4, #96]
 338:Core/Src/SEGGER_RTT.c ****   p->aDown[0].SizeOfBuffer  = BUFFER_SIZE_DOWN;
 6608              		.loc 1 338 3 is_stmt 1 view .LVU2756
 339:Core/Src/SEGGER_RTT.c ****   p->aDown[0].RdOff         = 0u;
 6609              		.loc 1 339 29 is_stmt 0 view .LVU2757
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccSC4OZm.s 			page 184


 6610 00a6 1023     		movs	r3, #16
 338:Core/Src/SEGGER_RTT.c ****   p->aDown[0].SizeOfBuffer  = BUFFER_SIZE_DOWN;
 6611              		.loc 1 338 29 view .LVU2758
 6612 00a8 6266     		str	r2, [r4, #100]
 339:Core/Src/SEGGER_RTT.c ****   p->aDown[0].RdOff         = 0u;
 6613              		.loc 1 339 3 is_stmt 1 view .LVU2759
 339:Core/Src/SEGGER_RTT.c ****   p->aDown[0].RdOff         = 0u;
 6614              		.loc 1 339 29 is_stmt 0 view .LVU2760
 6615 00aa A366     		str	r3, [r4, #104]
 340:Core/Src/SEGGER_RTT.c ****   p->aDown[0].WrOff         = 0u;
 6616              		.loc 1 340 3 is_stmt 1 view .LVU2761
 340:Core/Src/SEGGER_RTT.c ****   p->aDown[0].WrOff         = 0u;
 6617              		.loc 1 340 29 is_stmt 0 view .LVU2762
 6618 00ac 2767     		str	r7, [r4, #112]
 341:Core/Src/SEGGER_RTT.c ****   p->aDown[0].Flags         = SEGGER_RTT_MODE_DEFAULT;
 6619              		.loc 1 341 3 is_stmt 1 view .LVU2763
 341:Core/Src/SEGGER_RTT.c ****   p->aDown[0].Flags         = SEGGER_RTT_MODE_DEFAULT;
 6620              		.loc 1 341 29 is_stmt 0 view .LVU2764
 6621 00ae E766     		str	r7, [r4, #108]
 342:Core/Src/SEGGER_RTT.c ****   //
 6622              		.loc 1 342 3 is_stmt 1 view .LVU2765
 342:Core/Src/SEGGER_RTT.c ****   //
 6623              		.loc 1 342 29 is_stmt 0 view .LVU2766
 6624 00b0 6767     		str	r7, [r4, #116]
 348:Core/Src/SEGGER_RTT.c ****   for (i = 0; i < sizeof(_aInitStr) - 1; ++i) {
 6625              		.loc 1 348 3 is_stmt 1 view .LVU2767
 6626              		.syntax unified
 6627              	@ 348 "Core/Src/SEGGER_RTT.c" 1
 6628 00b2 BFF35F8F 		dmb
 6629              	
 6630              	@ 0 "" 2
 348:Core/Src/SEGGER_RTT.c ****   for (i = 0; i < sizeof(_aInitStr) - 1; ++i) {
 6631              		.loc 1 348 13 view .LVU2768
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 6632              		.loc 1 349 3 view .LVU2769
 6633              	.LVL642:
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 6634              		.loc 1 349 17 view .LVU2770
 350:Core/Src/SEGGER_RTT.c ****   }
 6635              		.loc 1 350 5 view .LVU2771
 350:Core/Src/SEGGER_RTT.c ****   }
 6636              		.loc 1 350 16 is_stmt 0 view .LVU2772
 6637              		.thumb
 6638              		.syntax unified
 6639 00b6 5323     		movs	r3, #83
 6640 00b8 2370     		strb	r3, [r4]
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 6641              		.loc 1 349 42 is_stmt 1 view .LVU2773
 6642              	.LVL643:
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 6643              		.loc 1 349 17 view .LVU2774
 350:Core/Src/SEGGER_RTT.c ****   }
 6644              		.loc 1 350 5 view .LVU2775
 350:Core/Src/SEGGER_RTT.c ****   }
 6645              		.loc 1 350 16 is_stmt 0 view .LVU2776
 6646 00ba 4722     		movs	r2, #71
 6647 00bc 4523     		movs	r3, #69
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccSC4OZm.s 			page 185


 6648 00be 6370     		strb	r3, [r4, #1]
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 6649              		.loc 1 349 42 is_stmt 1 view .LVU2777
 6650              	.LVL644:
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 6651              		.loc 1 349 17 view .LVU2778
 350:Core/Src/SEGGER_RTT.c ****   }
 6652              		.loc 1 350 5 view .LVU2779
 350:Core/Src/SEGGER_RTT.c ****   }
 6653              		.loc 1 350 16 is_stmt 0 view .LVU2780
 6654 00c0 2021     		movs	r1, #32
 6655 00c2 A270     		strb	r2, [r4, #2]
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 6656              		.loc 1 349 42 is_stmt 1 view .LVU2781
 6657              	.LVL645:
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 6658              		.loc 1 349 17 view .LVU2782
 350:Core/Src/SEGGER_RTT.c ****   }
 6659              		.loc 1 350 5 view .LVU2783
 350:Core/Src/SEGGER_RTT.c ****   }
 6660              		.loc 1 350 16 is_stmt 0 view .LVU2784
 6661 00c4 E270     		strb	r2, [r4, #3]
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 6662              		.loc 1 349 42 is_stmt 1 view .LVU2785
 6663              	.LVL646:
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 6664              		.loc 1 349 17 view .LVU2786
 350:Core/Src/SEGGER_RTT.c ****   }
 6665              		.loc 1 350 5 view .LVU2787
 350:Core/Src/SEGGER_RTT.c ****   }
 6666              		.loc 1 350 16 is_stmt 0 view .LVU2788
 6667 00c6 2371     		strb	r3, [r4, #4]
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 6668              		.loc 1 349 42 is_stmt 1 view .LVU2789
 6669              	.LVL647:
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 6670              		.loc 1 349 17 view .LVU2790
 350:Core/Src/SEGGER_RTT.c ****   }
 6671              		.loc 1 350 5 view .LVU2791
 350:Core/Src/SEGGER_RTT.c ****   }
 6672              		.loc 1 350 16 is_stmt 0 view .LVU2792
 6673 00c8 5222     		movs	r2, #82
 6674 00ca 5423     		movs	r3, #84
 6675 00cc 6271     		strb	r2, [r4, #5]
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 6676              		.loc 1 349 42 is_stmt 1 view .LVU2793
 6677              	.LVL648:
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 6678              		.loc 1 349 17 view .LVU2794
 350:Core/Src/SEGGER_RTT.c ****   }
 6679              		.loc 1 350 5 view .LVU2795
 350:Core/Src/SEGGER_RTT.c ****   }
 6680              		.loc 1 350 16 is_stmt 0 view .LVU2796
 6681 00ce A171     		strb	r1, [r4, #6]
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 6682              		.loc 1 349 42 is_stmt 1 view .LVU2797
 6683              	.LVL649:
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccSC4OZm.s 			page 186


 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 6684              		.loc 1 349 17 view .LVU2798
 350:Core/Src/SEGGER_RTT.c ****   }
 6685              		.loc 1 350 5 view .LVU2799
 350:Core/Src/SEGGER_RTT.c ****   }
 6686              		.loc 1 350 16 is_stmt 0 view .LVU2800
 6687 00d0 E271     		strb	r2, [r4, #7]
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 6688              		.loc 1 349 42 is_stmt 1 view .LVU2801
 6689              	.LVL650:
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 6690              		.loc 1 349 17 view .LVU2802
 350:Core/Src/SEGGER_RTT.c ****   }
 6691              		.loc 1 350 5 view .LVU2803
 350:Core/Src/SEGGER_RTT.c ****   }
 6692              		.loc 1 350 16 is_stmt 0 view .LVU2804
 6693 00d2 2372     		strb	r3, [r4, #8]
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 6694              		.loc 1 349 42 is_stmt 1 view .LVU2805
 6695              	.LVL651:
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 6696              		.loc 1 349 17 view .LVU2806
 350:Core/Src/SEGGER_RTT.c ****   }
 6697              		.loc 1 350 5 view .LVU2807
 350:Core/Src/SEGGER_RTT.c ****   }
 6698              		.loc 1 350 16 is_stmt 0 view .LVU2808
 6699 00d4 6372     		strb	r3, [r4, #9]
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 6700              		.loc 1 349 42 is_stmt 1 view .LVU2809
 6701              	.LVL652:
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 6702              		.loc 1 349 17 view .LVU2810
 350:Core/Src/SEGGER_RTT.c ****   }
 6703              		.loc 1 350 5 view .LVU2811
 350:Core/Src/SEGGER_RTT.c ****   }
 6704              		.loc 1 350 16 is_stmt 0 view .LVU2812
 6705 00d6 A772     		strb	r7, [r4, #10]
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 6706              		.loc 1 349 42 is_stmt 1 view .LVU2813
 6707              	.LVL653:
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 6708              		.loc 1 349 17 view .LVU2814
 350:Core/Src/SEGGER_RTT.c ****   }
 6709              		.loc 1 350 5 view .LVU2815
 350:Core/Src/SEGGER_RTT.c ****   }
 6710              		.loc 1 350 16 is_stmt 0 view .LVU2816
 6711 00d8 E772     		strb	r7, [r4, #11]
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 6712              		.loc 1 349 42 is_stmt 1 view .LVU2817
 6713              	.LVL654:
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 6714              		.loc 1 349 17 view .LVU2818
 350:Core/Src/SEGGER_RTT.c ****   }
 6715              		.loc 1 350 5 view .LVU2819
 350:Core/Src/SEGGER_RTT.c ****   }
 6716              		.loc 1 350 16 is_stmt 0 view .LVU2820
 6717 00da 2773     		strb	r7, [r4, #12]
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccSC4OZm.s 			page 187


 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 6718              		.loc 1 349 42 is_stmt 1 view .LVU2821
 6719              	.LVL655:
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 6720              		.loc 1 349 17 view .LVU2822
 350:Core/Src/SEGGER_RTT.c ****   }
 6721              		.loc 1 350 5 view .LVU2823
 350:Core/Src/SEGGER_RTT.c ****   }
 6722              		.loc 1 350 16 is_stmt 0 view .LVU2824
 6723 00dc 6773     		strb	r7, [r4, #13]
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 6724              		.loc 1 349 42 is_stmt 1 view .LVU2825
 6725              	.LVL656:
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 6726              		.loc 1 349 17 view .LVU2826
 350:Core/Src/SEGGER_RTT.c ****   }
 6727              		.loc 1 350 5 view .LVU2827
 350:Core/Src/SEGGER_RTT.c ****   }
 6728              		.loc 1 350 16 is_stmt 0 view .LVU2828
 6729 00de A773     		strb	r7, [r4, #14]
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 6730              		.loc 1 349 42 is_stmt 1 view .LVU2829
 6731              	.LVL657:
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 6732              		.loc 1 349 17 view .LVU2830
 350:Core/Src/SEGGER_RTT.c ****   }
 6733              		.loc 1 350 5 view .LVU2831
 350:Core/Src/SEGGER_RTT.c ****   }
 6734              		.loc 1 350 16 is_stmt 0 view .LVU2832
 6735 00e0 E773     		strb	r7, [r4, #15]
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 6736              		.loc 1 349 42 is_stmt 1 view .LVU2833
 6737              	.LVL658:
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 6738              		.loc 1 349 17 view .LVU2834
 352:Core/Src/SEGGER_RTT.c **** }
 6739              		.loc 1 352 3 view .LVU2835
 6740              		.syntax unified
 6741              	@ 352 "Core/Src/SEGGER_RTT.c" 1
 6742 00e2 BFF35F8F 		dmb
 6743              	
 6744              	@ 0 "" 2
 352:Core/Src/SEGGER_RTT.c **** }
 6745              		.loc 1 352 13 view .LVU2836
 353:Core/Src/SEGGER_RTT.c **** 
 6746              		.loc 1 353 1 is_stmt 0 view .LVU2837
 6747              		.thumb
 6748              		.syntax unified
 6749 00e6 92E7     		b	.L262
 6750              	.L273:
 6751              		.align	2
 6752              	.L272:
 6753 00e8 00000000 		.word	.LANCHOR0
 6754 00ec 00000000 		.word	.LANCHOR1
 6755 00f0 00000000 		.word	.LC0
 6756 00f4 00000000 		.word	.LANCHOR2
 6757              	.LBE352:
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccSC4OZm.s 			page 188


 6758              	.LBE351:
 6759              	.LBE357:
 6760              		.cfi_endproc
 6761              	.LFE17:
 6763              		.section	.text.SEGGER_RTT_GetKey,"ax",%progbits
 6764              		.align	1
 6765              		.p2align 2,,3
 6766              		.global	SEGGER_RTT_GetKey
 6767              		.syntax unified
 6768              		.thumb
 6769              		.thumb_func
 6771              	SEGGER_RTT_GetKey:
 6772              	.LFB18:
1420:Core/Src/SEGGER_RTT.c **** 
1421:Core/Src/SEGGER_RTT.c **** /*********************************************************************
1422:Core/Src/SEGGER_RTT.c **** *
1423:Core/Src/SEGGER_RTT.c **** *       SEGGER_RTT_GetKey
1424:Core/Src/SEGGER_RTT.c **** *
1425:Core/Src/SEGGER_RTT.c **** *  Function description
1426:Core/Src/SEGGER_RTT.c **** *    Reads one character from the SEGGER RTT buffer.
1427:Core/Src/SEGGER_RTT.c **** *    Host has previously stored data there.
1428:Core/Src/SEGGER_RTT.c **** *
1429:Core/Src/SEGGER_RTT.c **** *  Return value
1430:Core/Src/SEGGER_RTT.c **** *    <  0 -   No character available (buffer empty).
1431:Core/Src/SEGGER_RTT.c **** *    >= 0 -   Character which has been read. (Possible values: 0 - 255)
1432:Core/Src/SEGGER_RTT.c **** *
1433:Core/Src/SEGGER_RTT.c **** *  Notes
1434:Core/Src/SEGGER_RTT.c **** *    (1) This function is only specified for accesses to RTT buffer 0.
1435:Core/Src/SEGGER_RTT.c **** */
1436:Core/Src/SEGGER_RTT.c **** int SEGGER_RTT_GetKey(void) {
 6773              		.loc 1 1436 29 is_stmt 1 view -0
 6774              		.cfi_startproc
 6775              		@ args = 0, pretend = 0, frame = 8
 6776              		@ frame_needed = 0, uses_anonymous_args = 0
1437:Core/Src/SEGGER_RTT.c ****   char c;
 6777              		.loc 1 1437 3 view .LVU2839
1438:Core/Src/SEGGER_RTT.c ****   int r;
 6778              		.loc 1 1438 3 view .LVU2840
1439:Core/Src/SEGGER_RTT.c **** 
1440:Core/Src/SEGGER_RTT.c ****   r = (int)SEGGER_RTT_Read(0u, &c, 1u);
 6779              		.loc 1 1440 3 view .LVU2841
 6780              	.LVL659:
1436:Core/Src/SEGGER_RTT.c ****   char c;
 6781              		.loc 1 1436 29 is_stmt 0 view .LVU2842
 6782 0000 2DE9F047 		push	{r4, r5, r6, r7, r8, r9, r10, lr}
 6783              		.cfi_def_cfa_offset 32
 6784              		.cfi_offset 4, -32
 6785              		.cfi_offset 5, -28
 6786              		.cfi_offset 6, -24
 6787              		.cfi_offset 7, -20
 6788              		.cfi_offset 8, -16
 6789              		.cfi_offset 9, -12
 6790              		.cfi_offset 10, -8
 6791              		.cfi_offset 14, -4
 6792 0004 82B0     		sub	sp, sp, #8
 6793              		.cfi_def_cfa_offset 40
 6794              	.LVL660:
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccSC4OZm.s 			page 189


 6795              	.LBB369:
 6796              	.LBI369:
 794:Core/Src/SEGGER_RTT.c ****   unsigned NumBytesRead;
 6797              		.loc 1 794 10 is_stmt 1 view .LVU2843
 6798              	.LBB370:
 795:Core/Src/SEGGER_RTT.c **** 
 6799              		.loc 1 795 3 view .LVU2844
 6800              	.LBB371:
 797:Core/Src/SEGGER_RTT.c ****   //
 6801              		.loc 1 797 3 view .LVU2845
 797:Core/Src/SEGGER_RTT.c ****   //
 6802              		.loc 1 797 3 view .LVU2846
 6803              		.syntax unified
 6804              	@ 797 "Core/Src/SEGGER_RTT.c" 1
 6805 0006 EFF31188 		mrs   r8, basepri  
 6806 000a 4FF02001 		mov   r1, #32       
 6807 000e 81F31188 		msr   basepri, r1  
 6808              		
 6809              	@ 0 "" 2
 6810              	.LVL661:
 797:Core/Src/SEGGER_RTT.c ****   //
 6811              		.loc 1 797 20 view .LVU2847
 801:Core/Src/SEGGER_RTT.c ****   //
 6812              		.loc 1 801 3 view .LVU2848
 6813              		.thumb
 6814              		.syntax unified
 6815              	.LBB372:
 6816              	.LBI372:
 665:Core/Src/SEGGER_RTT.c ****   unsigned                NumBytesRem;
 6817              		.loc 1 665 10 view .LVU2849
 6818              	.LBB373:
 666:Core/Src/SEGGER_RTT.c ****   unsigned                NumBytesRead;
 6819              		.loc 1 666 3 view .LVU2850
 667:Core/Src/SEGGER_RTT.c ****   unsigned                RdOff;
 6820              		.loc 1 667 3 view .LVU2851
 668:Core/Src/SEGGER_RTT.c ****   unsigned                WrOff;
 6821              		.loc 1 668 3 view .LVU2852
 669:Core/Src/SEGGER_RTT.c ****   unsigned char*          pBuffer;
 6822              		.loc 1 669 3 view .LVU2853
 670:Core/Src/SEGGER_RTT.c ****   SEGGER_RTT_BUFFER_DOWN* pRing;
 6823              		.loc 1 670 3 view .LVU2854
 671:Core/Src/SEGGER_RTT.c ****   volatile char*          pSrc;
 6824              		.loc 1 671 3 view .LVU2855
 672:Core/Src/SEGGER_RTT.c ****   //
 6825              		.loc 1 672 3 view .LVU2856
 6826              	.LBB374:
 674:Core/Src/SEGGER_RTT.c ****   pRing = (SEGGER_RTT_BUFFER_DOWN*)((char*)&_SEGGER_RTT.aDown[BufferIndex] + SEGGER_RTT_UNCACHED_OF
 6827              		.loc 1 674 3 view .LVU2857
 674:Core/Src/SEGGER_RTT.c ****   pRing = (SEGGER_RTT_BUFFER_DOWN*)((char*)&_SEGGER_RTT.aDown[BufferIndex] + SEGGER_RTT_UNCACHED_OF
 6828              		.loc 1 674 3 view .LVU2858
 674:Core/Src/SEGGER_RTT.c ****   pRing = (SEGGER_RTT_BUFFER_DOWN*)((char*)&_SEGGER_RTT.aDown[BufferIndex] + SEGGER_RTT_UNCACHED_OF
 6829              		.loc 1 674 3 view .LVU2859
 674:Core/Src/SEGGER_RTT.c ****   pRing = (SEGGER_RTT_BUFFER_DOWN*)((char*)&_SEGGER_RTT.aDown[BufferIndex] + SEGGER_RTT_UNCACHED_OF
 6830              		.loc 1 674 3 view .LVU2860
 6831 0012 424C     		ldr	r4, .L294
 6832 0014 2378     		ldrb	r3, [r4]	@ zero_extendqisi2
 6833 0016 002B     		cmp	r3, #0
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccSC4OZm.s 			page 190


 6834 0018 3FD0     		beq	.L275
 6835              	.LBE374:
 678:Core/Src/SEGGER_RTT.c ****   NumBytesRead = 0u;
 6836              		.loc 1 678 9 is_stmt 0 view .LVU2861
 6837 001a E66E     		ldr	r6, [r4, #108]
 677:Core/Src/SEGGER_RTT.c ****   WrOff = pRing->WrOff;
 6838              		.loc 1 677 9 view .LVU2862
 6839 001c 256F     		ldr	r5, [r4, #112]
 6840              	.LBB377:
 674:Core/Src/SEGGER_RTT.c ****   pRing = (SEGGER_RTT_BUFFER_DOWN*)((char*)&_SEGGER_RTT.aDown[BufferIndex] + SEGGER_RTT_UNCACHED_OF
 6841              		.loc 1 674 3 is_stmt 1 view .LVU2863
 6842              	.LBE377:
 674:Core/Src/SEGGER_RTT.c ****   pRing = (SEGGER_RTT_BUFFER_DOWN*)((char*)&_SEGGER_RTT.aDown[BufferIndex] + SEGGER_RTT_UNCACHED_OF
 6843              		.loc 1 674 9 view .LVU2864
 675:Core/Src/SEGGER_RTT.c ****   pBuffer = (unsigned char*)pData;
 6844              		.loc 1 675 3 view .LVU2865
 6845              	.LVL662:
 676:Core/Src/SEGGER_RTT.c ****   RdOff = pRing->RdOff;
 6846              		.loc 1 676 3 view .LVU2866
 677:Core/Src/SEGGER_RTT.c ****   WrOff = pRing->WrOff;
 6847              		.loc 1 677 3 view .LVU2867
 678:Core/Src/SEGGER_RTT.c ****   NumBytesRead = 0u;
 6848              		.loc 1 678 3 view .LVU2868
 679:Core/Src/SEGGER_RTT.c ****   //
 6849              		.loc 1 679 3 view .LVU2869
 683:Core/Src/SEGGER_RTT.c ****     NumBytesRem = pRing->SizeOfBuffer - RdOff;
 6850              		.loc 1 683 3 view .LVU2870
 683:Core/Src/SEGGER_RTT.c ****     NumBytesRem = pRing->SizeOfBuffer - RdOff;
 6851              		.loc 1 683 6 is_stmt 0 view .LVU2871
 6852 001e AE42     		cmp	r6, r5
 6853 0020 08D3     		bcc	.L291
 711:Core/Src/SEGGER_RTT.c ****   NumBytesRem = MIN(NumBytesRem, BufferSize);
 6854              		.loc 1 711 3 is_stmt 1 view .LVU2872
 6855              	.LVL663:
 712:Core/Src/SEGGER_RTT.c ****   if (NumBytesRem > 0u) {
 6856              		.loc 1 712 3 view .LVU2873
 713:Core/Src/SEGGER_RTT.c ****     pSrc = (pRing->pBuffer + RdOff) + SEGGER_RTT_UNCACHED_OFF;
 6857              		.loc 1 713 3 view .LVU2874
 713:Core/Src/SEGGER_RTT.c ****     pSrc = (pRing->pBuffer + RdOff) + SEGGER_RTT_UNCACHED_OFF;
 6858              		.loc 1 713 6 is_stmt 0 view .LVU2875
 6859 0022 AE42     		cmp	r6, r5
 6860 0024 26D1     		bne	.L292
 6861              	.LVL664:
 6862              	.L283:
 734:Core/Src/SEGGER_RTT.c **** }
 6863              		.loc 1 734 3 is_stmt 1 view .LVU2876
 734:Core/Src/SEGGER_RTT.c **** }
 6864              		.loc 1 734 3 is_stmt 0 view .LVU2877
 6865              	.LBE373:
 6866              	.LBE372:
 805:Core/Src/SEGGER_RTT.c ****   //
 6867              		.loc 1 805 3 is_stmt 1 view .LVU2878
 6868              		.syntax unified
 6869              	@ 805 "Core/Src/SEGGER_RTT.c" 1
 6870 0026 88F31188 		msr   basepri, r8  
 6871              		
 6872              	@ 0 "" 2
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccSC4OZm.s 			page 191


 6873              	.LVL665:
 6874              		.thumb
 6875              		.syntax unified
 6876              	.L290:
 805:Core/Src/SEGGER_RTT.c ****   //
 6877              		.loc 1 805 3 is_stmt 0 view .LVU2879
 6878              	.LBE371:
 805:Core/Src/SEGGER_RTT.c ****   //
 6879              		.loc 1 805 22 is_stmt 1 view .LVU2880
 807:Core/Src/SEGGER_RTT.c **** }
 6880              		.loc 1 807 3 view .LVU2881
 807:Core/Src/SEGGER_RTT.c **** }
 6881              		.loc 1 807 3 is_stmt 0 view .LVU2882
 6882              	.LBE370:
 6883              	.LBE369:
1441:Core/Src/SEGGER_RTT.c ****   if (r == 1) {
 6884              		.loc 1 1441 3 is_stmt 1 view .LVU2883
1442:Core/Src/SEGGER_RTT.c ****     r = (int)(unsigned char)c;
1443:Core/Src/SEGGER_RTT.c ****   } else {
1444:Core/Src/SEGGER_RTT.c ****     r = -1;
 6885              		.loc 1 1444 7 is_stmt 0 view .LVU2884
 6886 002a 4FF0FF30 		mov	r0, #-1
1445:Core/Src/SEGGER_RTT.c ****   }
1446:Core/Src/SEGGER_RTT.c ****   return r;
1447:Core/Src/SEGGER_RTT.c **** }
 6887              		.loc 1 1447 1 view .LVU2885
 6888 002e 02B0     		add	sp, sp, #8
 6889              		.cfi_remember_state
 6890              		.cfi_def_cfa_offset 32
 6891              		@ sp needed
 6892 0030 BDE8F087 		pop	{r4, r5, r6, r7, r8, r9, r10, pc}
 6893              	.LVL666:
 6894              	.L291:
 6895              		.cfi_restore_state
 6896              	.LBB391:
 6897              	.LBB388:
 6898              	.LBB385:
 6899              	.LBB382:
 6900              	.LBB379:
 684:Core/Src/SEGGER_RTT.c ****     NumBytesRem = MIN(NumBytesRem, BufferSize);
 6901              		.loc 1 684 5 is_stmt 1 view .LVU2886
 686:Core/Src/SEGGER_RTT.c **** #if SEGGER_RTT_MEMCPY_USE_BYTELOOP
 6902              		.loc 1 686 18 is_stmt 0 view .LVU2887
 6903 0034 D4E9199A 		ldrd	r9, r10, [r4, #100]
 684:Core/Src/SEGGER_RTT.c ****     NumBytesRem = MIN(NumBytesRem, BufferSize);
 6904              		.loc 1 684 17 view .LVU2888
 6905 0038 AAEB0507 		sub	r7, r10, r5
 6906              	.LVL667:
 685:Core/Src/SEGGER_RTT.c ****     pSrc = (pRing->pBuffer + RdOff) + SEGGER_RTT_UNCACHED_OFF;
 6907              		.loc 1 685 5 is_stmt 1 view .LVU2889
 685:Core/Src/SEGGER_RTT.c ****     pSrc = (pRing->pBuffer + RdOff) + SEGGER_RTT_UNCACHED_OFF;
 6908              		.loc 1 685 17 is_stmt 0 view .LVU2890
 6909 003c 012F     		cmp	r7, #1
 6910 003e 28BF     		it	cs
 6911 0040 0127     		movcs	r7, #1
 6912              	.LVL668:
 686:Core/Src/SEGGER_RTT.c **** #if SEGGER_RTT_MEMCPY_USE_BYTELOOP
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccSC4OZm.s 			page 192


 6913              		.loc 1 686 5 is_stmt 1 view .LVU2891
 695:Core/Src/SEGGER_RTT.c ****     NumBytesRead += NumBytesRem;
 6914              		.loc 1 695 5 view .LVU2892
 6915 0042 3A46     		mov	r2, r7
 6916 0044 09EB0501 		add	r1, r9, r5
 6917              	.LVL669:
 695:Core/Src/SEGGER_RTT.c ****     NumBytesRead += NumBytesRem;
 6918              		.loc 1 695 5 is_stmt 0 view .LVU2893
 6919 0048 0DF10700 		add	r0, sp, #7
 6920              	.LVL670:
 695:Core/Src/SEGGER_RTT.c ****     NumBytesRead += NumBytesRem;
 6921              		.loc 1 695 5 view .LVU2894
 6922 004c FFF7FEFF 		bl	memcpy
 6923              	.LVL671:
 696:Core/Src/SEGGER_RTT.c ****     pBuffer      += NumBytesRem;
 6924              		.loc 1 696 5 is_stmt 1 view .LVU2895
 697:Core/Src/SEGGER_RTT.c ****     BufferSize   -= NumBytesRem;
 6925              		.loc 1 697 5 view .LVU2896
 698:Core/Src/SEGGER_RTT.c ****     RdOff        += NumBytesRem;
 6926              		.loc 1 698 5 view .LVU2897
 699:Core/Src/SEGGER_RTT.c **** #endif
 6927              		.loc 1 699 18 is_stmt 0 view .LVU2898
 6928 0050 7A19     		adds	r2, r7, r5
 704:Core/Src/SEGGER_RTT.c ****       RdOff = 0u;
 6929              		.loc 1 704 8 view .LVU2899
 6930 0052 9245     		cmp	r10, r2
 698:Core/Src/SEGGER_RTT.c ****     RdOff        += NumBytesRem;
 6931              		.loc 1 698 18 view .LVU2900
 6932 0054 C7F10103 		rsb	r3, r7, #1
 6933              	.LVL672:
 699:Core/Src/SEGGER_RTT.c **** #endif
 6934              		.loc 1 699 5 is_stmt 1 view .LVU2901
 704:Core/Src/SEGGER_RTT.c ****       RdOff = 0u;
 6935              		.loc 1 704 5 view .LVU2902
 711:Core/Src/SEGGER_RTT.c ****   NumBytesRem = MIN(NumBytesRem, BufferSize);
 6936              		.loc 1 711 15 is_stmt 0 view .LVU2903
 6937 0058 14BF     		ite	ne
 6938 005a B61A     		subne	r6, r6, r2
 6939              	.LVL673:
 705:Core/Src/SEGGER_RTT.c ****     }
 6940              		.loc 1 705 13 view .LVU2904
 6941 005c 0022     		moveq	r2, #0
 6942              	.LVL674:
 711:Core/Src/SEGGER_RTT.c ****   NumBytesRem = MIN(NumBytesRem, BufferSize);
 6943              		.loc 1 711 3 is_stmt 1 view .LVU2905
 712:Core/Src/SEGGER_RTT.c ****   if (NumBytesRem > 0u) {
 6944              		.loc 1 712 3 view .LVU2906
 713:Core/Src/SEGGER_RTT.c ****     pSrc = (pRing->pBuffer + RdOff) + SEGGER_RTT_UNCACHED_OFF;
 6945              		.loc 1 713 3 view .LVU2907
 712:Core/Src/SEGGER_RTT.c ****   if (NumBytesRem > 0u) {
 6946              		.loc 1 712 15 is_stmt 0 view .LVU2908
 6947 005e B342     		cmp	r3, r6
 6948 0060 28BF     		it	cs
 6949 0062 3346     		movcs	r3, r6
 6950              	.LVL675:
 713:Core/Src/SEGGER_RTT.c ****     pSrc = (pRing->pBuffer + RdOff) + SEGGER_RTT_UNCACHED_OFF;
 6951              		.loc 1 713 6 view .LVU2909
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccSC4OZm.s 			page 193


 6952 0064 002B     		cmp	r3, #0
 6953 0066 53D1     		bne	.L293
 730:Core/Src/SEGGER_RTT.c ****     pRing->RdOff = RdOff;
 6954              		.loc 1 730 3 is_stmt 1 view .LVU2910
 730:Core/Src/SEGGER_RTT.c ****     pRing->RdOff = RdOff;
 6955              		.loc 1 730 6 is_stmt 0 view .LVU2911
 6956 0068 AA45     		cmp	r10, r5
 6957 006a DCD0     		beq	.L283
 6958              	.LVL676:
 731:Core/Src/SEGGER_RTT.c ****   }
 6959              		.loc 1 731 5 is_stmt 1 view .LVU2912
 731:Core/Src/SEGGER_RTT.c ****   }
 6960              		.loc 1 731 18 is_stmt 0 view .LVU2913
 6961 006c 2267     		str	r2, [r4, #112]
 6962              	.LVL677:
 734:Core/Src/SEGGER_RTT.c **** }
 6963              		.loc 1 734 3 is_stmt 1 view .LVU2914
 734:Core/Src/SEGGER_RTT.c **** }
 6964              		.loc 1 734 3 is_stmt 0 view .LVU2915
 6965              	.LBE379:
 6966              	.LBE382:
 805:Core/Src/SEGGER_RTT.c ****   //
 6967              		.loc 1 805 3 is_stmt 1 view .LVU2916
 6968              		.syntax unified
 6969              	@ 805 "Core/Src/SEGGER_RTT.c" 1
 6970 006e 88F31188 		msr   basepri, r8  
 6971              		
 6972              	@ 0 "" 2
 6973              		.thumb
 6974              		.syntax unified
 6975              	.LBE385:
 805:Core/Src/SEGGER_RTT.c ****   //
 6976              		.loc 1 805 22 view .LVU2917
 807:Core/Src/SEGGER_RTT.c **** }
 6977              		.loc 1 807 3 view .LVU2918
 6978              	.LVL678:
 807:Core/Src/SEGGER_RTT.c **** }
 6979              		.loc 1 807 3 is_stmt 0 view .LVU2919
 6980              	.LBE388:
 6981              	.LBE391:
1441:Core/Src/SEGGER_RTT.c ****     r = (int)(unsigned char)c;
 6982              		.loc 1 1441 3 is_stmt 1 view .LVU2920
 6983 0072 0DE0     		b	.L280
 6984              	.LVL679:
 6985              	.L292:
 6986              	.LBB392:
 6987              	.LBB389:
 6988              	.LBB386:
 6989              	.LBB383:
 6990              	.LBB380:
 686:Core/Src/SEGGER_RTT.c **** #if SEGGER_RTT_MEMCPY_USE_BYTELOOP
 6991              		.loc 1 686 18 is_stmt 0 view .LVU2921
 6992 0074 D4F86490 		ldr	r9, [r4, #100]
 6993 0078 0127     		movs	r7, #1
 676:Core/Src/SEGGER_RTT.c ****   RdOff = pRing->RdOff;
 6994              		.loc 1 676 11 view .LVU2922
 6995 007a 0DF10703 		add	r3, sp, #7
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccSC4OZm.s 			page 194


 6996              	.LVL680:
 6997              	.L284:
 714:Core/Src/SEGGER_RTT.c **** #if SEGGER_RTT_MEMCPY_USE_BYTELOOP
 6998              		.loc 1 714 5 is_stmt 1 view .LVU2923
 723:Core/Src/SEGGER_RTT.c ****     NumBytesRead += NumBytesRem;
 6999              		.loc 1 723 5 view .LVU2924
 7000 007e 19F80520 		ldrb	r2, [r9, r5]	@ zero_extendqisi2
 7001 0082 1A70     		strb	r2, [r3]
 724:Core/Src/SEGGER_RTT.c ****     pBuffer      += NumBytesRem;
 7002              		.loc 1 724 5 view .LVU2925
 725:Core/Src/SEGGER_RTT.c ****     BufferSize   -= NumBytesRem;
 7003              		.loc 1 725 5 view .LVU2926
 726:Core/Src/SEGGER_RTT.c ****     RdOff        += NumBytesRem;
 7004              		.loc 1 726 5 view .LVU2927
 727:Core/Src/SEGGER_RTT.c **** #endif
 7005              		.loc 1 727 5 view .LVU2928
 7006              	.LVL681:
 730:Core/Src/SEGGER_RTT.c ****     pRing->RdOff = RdOff;
 7007              		.loc 1 730 3 view .LVU2929
 731:Core/Src/SEGGER_RTT.c ****   }
 7008              		.loc 1 731 5 view .LVU2930
 727:Core/Src/SEGGER_RTT.c **** #endif
 7009              		.loc 1 727 18 is_stmt 0 view .LVU2931
 7010 0084 0135     		adds	r5, r5, #1
 7011              	.LVL682:
 731:Core/Src/SEGGER_RTT.c ****   }
 7012              		.loc 1 731 18 view .LVU2932
 7013 0086 2567     		str	r5, [r4, #112]
 7014              	.LVL683:
 734:Core/Src/SEGGER_RTT.c **** }
 7015              		.loc 1 734 3 is_stmt 1 view .LVU2933
 734:Core/Src/SEGGER_RTT.c **** }
 7016              		.loc 1 734 3 is_stmt 0 view .LVU2934
 7017              	.LBE380:
 7018              	.LBE383:
 805:Core/Src/SEGGER_RTT.c ****   //
 7019              		.loc 1 805 3 is_stmt 1 view .LVU2935
 7020              		.syntax unified
 7021              	@ 805 "Core/Src/SEGGER_RTT.c" 1
 7022 0088 88F31188 		msr   basepri, r8  
 7023              		
 7024              	@ 0 "" 2
 7025              		.thumb
 7026              		.syntax unified
 7027              	.LBE386:
 805:Core/Src/SEGGER_RTT.c ****   //
 7028              		.loc 1 805 22 view .LVU2936
 807:Core/Src/SEGGER_RTT.c **** }
 7029              		.loc 1 807 3 view .LVU2937
 7030              	.LVL684:
 807:Core/Src/SEGGER_RTT.c **** }
 7031              		.loc 1 807 3 is_stmt 0 view .LVU2938
 7032              	.LBE389:
 7033              	.LBE392:
1441:Core/Src/SEGGER_RTT.c ****     r = (int)(unsigned char)c;
 7034              		.loc 1 1441 3 is_stmt 1 view .LVU2939
1441:Core/Src/SEGGER_RTT.c ****     r = (int)(unsigned char)c;
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccSC4OZm.s 			page 195


 7035              		.loc 1 1441 6 is_stmt 0 view .LVU2940
 7036 008c 012F     		cmp	r7, #1
 7037 008e CCD1     		bne	.L290
 7038              	.LVL685:
 7039              	.L280:
1442:Core/Src/SEGGER_RTT.c ****   } else {
 7040              		.loc 1 1442 5 is_stmt 1 view .LVU2941
1442:Core/Src/SEGGER_RTT.c ****   } else {
 7041              		.loc 1 1442 7 is_stmt 0 view .LVU2942
 7042 0090 9DF80700 		ldrb	r0, [sp, #7]	@ zero_extendqisi2
 7043              	.LVL686:
1446:Core/Src/SEGGER_RTT.c **** }
 7044              		.loc 1 1446 3 is_stmt 1 view .LVU2943
 7045              		.loc 1 1447 1 is_stmt 0 view .LVU2944
 7046 0094 02B0     		add	sp, sp, #8
 7047              		.cfi_remember_state
 7048              		.cfi_def_cfa_offset 32
 7049              		@ sp needed
 7050 0096 BDE8F087 		pop	{r4, r5, r6, r7, r8, r9, r10, pc}
 7051              	.LVL687:
 7052              	.L275:
 7053              		.cfi_restore_state
 7054              		.loc 1 1447 1 view .LVU2945
 7055 009a 03F0FF05 		and	r5, r3, #255
 7056              	.LBB393:
 7057              	.LBB390:
 7058              	.LBB387:
 7059              	.LBB384:
 7060              	.LBB381:
 7061              	.LBB378:
 674:Core/Src/SEGGER_RTT.c ****   pRing = (SEGGER_RTT_BUFFER_DOWN*)((char*)&_SEGGER_RTT.aDown[BufferIndex] + SEGGER_RTT_UNCACHED_OF
 7062              		.loc 1 674 3 is_stmt 1 view .LVU2946
 7063              	.LBB375:
 7064              	.LBI375:
 314:Core/Src/SEGGER_RTT.c ****   volatile SEGGER_RTT_CB* p;   // Volatile to make sure that compiler cannot change the order of ac
 7065              		.loc 1 314 13 view .LVU2947
 7066              	.LBB376:
 315:Core/Src/SEGGER_RTT.c ****   static const char _aInitStr[] = "\0\0\0\0\0\0TTR REGGES";  // Init complete ID string to make sur
 7067              		.loc 1 315 3 view .LVU2948
 316:Core/Src/SEGGER_RTT.c ****   unsigned i;
 7068              		.loc 1 316 3 view .LVU2949
 317:Core/Src/SEGGER_RTT.c ****   //
 7069              		.loc 1 317 3 view .LVU2950
 321:Core/Src/SEGGER_RTT.c ****   memset((SEGGER_RTT_CB*)p, 0, sizeof(_SEGGER_RTT));         // Make sure that the RTT CB is always
 7070              		.loc 1 321 3 view .LVU2951
 7071              	.LVL688:
 322:Core/Src/SEGGER_RTT.c ****   p->MaxNumUpBuffers    = SEGGER_RTT_MAX_NUM_UP_BUFFERS;
 7072              		.loc 1 322 3 view .LVU2952
 7073 009e 7822     		movs	r2, #120
 7074 00a0 2946     		mov	r1, r5
 7075 00a2 04F13000 		add	r0, r4, #48
 7076 00a6 FFF7FEFF 		bl	memset
 7077              	.LVL689:
 323:Core/Src/SEGGER_RTT.c ****   p->MaxNumDownBuffers  = SEGGER_RTT_MAX_NUM_DOWN_BUFFERS;
 7078              		.loc 1 323 3 view .LVU2953
 323:Core/Src/SEGGER_RTT.c ****   p->MaxNumDownBuffers  = SEGGER_RTT_MAX_NUM_DOWN_BUFFERS;
 7079              		.loc 1 323 25 is_stmt 0 view .LVU2954
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccSC4OZm.s 			page 196


 7080 00aa 0322     		movs	r2, #3
 7081 00ac 2261     		str	r2, [r4, #16]
 324:Core/Src/SEGGER_RTT.c ****   //
 7082              		.loc 1 324 3 is_stmt 1 view .LVU2955
 328:Core/Src/SEGGER_RTT.c ****   p->aUp[0].pBuffer       = _acUpBuffer;
 7083              		.loc 1 328 27 is_stmt 0 view .LVU2956
 7084 00ae 1C4B     		ldr	r3, .L294+4
 324:Core/Src/SEGGER_RTT.c ****   //
 7085              		.loc 1 324 25 view .LVU2957
 7086 00b0 6261     		str	r2, [r4, #20]
 328:Core/Src/SEGGER_RTT.c ****   p->aUp[0].pBuffer       = _acUpBuffer;
 7087              		.loc 1 328 3 is_stmt 1 view .LVU2958
 329:Core/Src/SEGGER_RTT.c ****   p->aUp[0].SizeOfBuffer  = BUFFER_SIZE_UP;
 7088              		.loc 1 329 27 is_stmt 0 view .LVU2959
 7089 00b2 1C4A     		ldr	r2, .L294+8
 328:Core/Src/SEGGER_RTT.c ****   p->aUp[0].pBuffer       = _acUpBuffer;
 7090              		.loc 1 328 27 view .LVU2960
 7091 00b4 A361     		str	r3, [r4, #24]
 329:Core/Src/SEGGER_RTT.c ****   p->aUp[0].SizeOfBuffer  = BUFFER_SIZE_UP;
 7092              		.loc 1 329 3 is_stmt 1 view .LVU2961
 329:Core/Src/SEGGER_RTT.c ****   p->aUp[0].SizeOfBuffer  = BUFFER_SIZE_UP;
 7093              		.loc 1 329 27 is_stmt 0 view .LVU2962
 7094 00b6 E261     		str	r2, [r4, #28]
 330:Core/Src/SEGGER_RTT.c ****   p->aUp[0].RdOff         = 0u;
 7095              		.loc 1 330 3 is_stmt 1 view .LVU2963
 330:Core/Src/SEGGER_RTT.c ****   p->aUp[0].RdOff         = 0u;
 7096              		.loc 1 330 27 is_stmt 0 view .LVU2964
 7097 00b8 4FF48062 		mov	r2, #1024
 7098 00bc 2262     		str	r2, [r4, #32]
 331:Core/Src/SEGGER_RTT.c ****   p->aUp[0].WrOff         = 0u;
 7099              		.loc 1 331 3 is_stmt 1 view .LVU2965
 331:Core/Src/SEGGER_RTT.c ****   p->aUp[0].WrOff         = 0u;
 7100              		.loc 1 331 27 is_stmt 0 view .LVU2966
 7101 00be A562     		str	r5, [r4, #40]
 332:Core/Src/SEGGER_RTT.c ****   p->aUp[0].Flags         = SEGGER_RTT_MODE_DEFAULT;
 7102              		.loc 1 332 3 is_stmt 1 view .LVU2967
 338:Core/Src/SEGGER_RTT.c ****   p->aDown[0].SizeOfBuffer  = BUFFER_SIZE_DOWN;
 7103              		.loc 1 338 29 is_stmt 0 view .LVU2968
 7104 00c0 194A     		ldr	r2, .L294+12
 332:Core/Src/SEGGER_RTT.c ****   p->aUp[0].Flags         = SEGGER_RTT_MODE_DEFAULT;
 7105              		.loc 1 332 27 view .LVU2969
 7106 00c2 6562     		str	r5, [r4, #36]
 333:Core/Src/SEGGER_RTT.c ****   //
 7107              		.loc 1 333 3 is_stmt 1 view .LVU2970
 333:Core/Src/SEGGER_RTT.c ****   //
 7108              		.loc 1 333 27 is_stmt 0 view .LVU2971
 7109 00c4 E562     		str	r5, [r4, #44]
 337:Core/Src/SEGGER_RTT.c ****   p->aDown[0].pBuffer       = _acDownBuffer;
 7110              		.loc 1 337 3 is_stmt 1 view .LVU2972
 337:Core/Src/SEGGER_RTT.c ****   p->aDown[0].pBuffer       = _acDownBuffer;
 7111              		.loc 1 337 29 is_stmt 0 view .LVU2973
 7112 00c6 2366     		str	r3, [r4, #96]
 338:Core/Src/SEGGER_RTT.c ****   p->aDown[0].SizeOfBuffer  = BUFFER_SIZE_DOWN;
 7113              		.loc 1 338 3 is_stmt 1 view .LVU2974
 339:Core/Src/SEGGER_RTT.c ****   p->aDown[0].RdOff         = 0u;
 7114              		.loc 1 339 29 is_stmt 0 view .LVU2975
 7115 00c8 1023     		movs	r3, #16
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccSC4OZm.s 			page 197


 338:Core/Src/SEGGER_RTT.c ****   p->aDown[0].SizeOfBuffer  = BUFFER_SIZE_DOWN;
 7116              		.loc 1 338 29 view .LVU2976
 7117 00ca 6266     		str	r2, [r4, #100]
 339:Core/Src/SEGGER_RTT.c ****   p->aDown[0].RdOff         = 0u;
 7118              		.loc 1 339 3 is_stmt 1 view .LVU2977
 339:Core/Src/SEGGER_RTT.c ****   p->aDown[0].RdOff         = 0u;
 7119              		.loc 1 339 29 is_stmt 0 view .LVU2978
 7120 00cc A366     		str	r3, [r4, #104]
 340:Core/Src/SEGGER_RTT.c ****   p->aDown[0].WrOff         = 0u;
 7121              		.loc 1 340 3 is_stmt 1 view .LVU2979
 340:Core/Src/SEGGER_RTT.c ****   p->aDown[0].WrOff         = 0u;
 7122              		.loc 1 340 29 is_stmt 0 view .LVU2980
 7123 00ce 2567     		str	r5, [r4, #112]
 341:Core/Src/SEGGER_RTT.c ****   p->aDown[0].Flags         = SEGGER_RTT_MODE_DEFAULT;
 7124              		.loc 1 341 3 is_stmt 1 view .LVU2981
 341:Core/Src/SEGGER_RTT.c ****   p->aDown[0].Flags         = SEGGER_RTT_MODE_DEFAULT;
 7125              		.loc 1 341 29 is_stmt 0 view .LVU2982
 7126 00d0 E566     		str	r5, [r4, #108]
 342:Core/Src/SEGGER_RTT.c ****   //
 7127              		.loc 1 342 3 is_stmt 1 view .LVU2983
 342:Core/Src/SEGGER_RTT.c ****   //
 7128              		.loc 1 342 29 is_stmt 0 view .LVU2984
 7129 00d2 6567     		str	r5, [r4, #116]
 348:Core/Src/SEGGER_RTT.c ****   for (i = 0; i < sizeof(_aInitStr) - 1; ++i) {
 7130              		.loc 1 348 3 is_stmt 1 view .LVU2985
 7131              		.syntax unified
 7132              	@ 348 "Core/Src/SEGGER_RTT.c" 1
 7133 00d4 BFF35F8F 		dmb
 7134              	
 7135              	@ 0 "" 2
 348:Core/Src/SEGGER_RTT.c ****   for (i = 0; i < sizeof(_aInitStr) - 1; ++i) {
 7136              		.loc 1 348 13 view .LVU2986
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 7137              		.loc 1 349 3 view .LVU2987
 7138              	.LVL690:
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 7139              		.loc 1 349 17 view .LVU2988
 350:Core/Src/SEGGER_RTT.c ****   }
 7140              		.loc 1 350 5 view .LVU2989
 350:Core/Src/SEGGER_RTT.c ****   }
 7141              		.loc 1 350 16 is_stmt 0 view .LVU2990
 7142              		.thumb
 7143              		.syntax unified
 7144 00d8 4523     		movs	r3, #69
 7145 00da 4722     		movs	r2, #71
 7146 00dc 5321     		movs	r1, #83
 7147 00de 2170     		strb	r1, [r4]
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 7148              		.loc 1 349 42 is_stmt 1 view .LVU2991
 7149              	.LVL691:
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 7150              		.loc 1 349 17 view .LVU2992
 350:Core/Src/SEGGER_RTT.c ****   }
 7151              		.loc 1 350 5 view .LVU2993
 350:Core/Src/SEGGER_RTT.c ****   }
 7152              		.loc 1 350 16 is_stmt 0 view .LVU2994
 7153 00e0 6370     		strb	r3, [r4, #1]
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccSC4OZm.s 			page 198


 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 7154              		.loc 1 349 42 is_stmt 1 view .LVU2995
 7155              	.LVL692:
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 7156              		.loc 1 349 17 view .LVU2996
 350:Core/Src/SEGGER_RTT.c ****   }
 7157              		.loc 1 350 5 view .LVU2997
 350:Core/Src/SEGGER_RTT.c ****   }
 7158              		.loc 1 350 16 is_stmt 0 view .LVU2998
 7159 00e2 2021     		movs	r1, #32
 7160 00e4 A270     		strb	r2, [r4, #2]
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 7161              		.loc 1 349 42 is_stmt 1 view .LVU2999
 7162              	.LVL693:
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 7163              		.loc 1 349 17 view .LVU3000
 350:Core/Src/SEGGER_RTT.c ****   }
 7164              		.loc 1 350 5 view .LVU3001
 350:Core/Src/SEGGER_RTT.c ****   }
 7165              		.loc 1 350 16 is_stmt 0 view .LVU3002
 7166 00e6 E270     		strb	r2, [r4, #3]
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 7167              		.loc 1 349 42 is_stmt 1 view .LVU3003
 7168              	.LVL694:
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 7169              		.loc 1 349 17 view .LVU3004
 350:Core/Src/SEGGER_RTT.c ****   }
 7170              		.loc 1 350 5 view .LVU3005
 350:Core/Src/SEGGER_RTT.c ****   }
 7171              		.loc 1 350 16 is_stmt 0 view .LVU3006
 7172 00e8 2371     		strb	r3, [r4, #4]
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 7173              		.loc 1 349 42 is_stmt 1 view .LVU3007
 7174              	.LVL695:
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 7175              		.loc 1 349 17 view .LVU3008
 350:Core/Src/SEGGER_RTT.c ****   }
 7176              		.loc 1 350 5 view .LVU3009
 350:Core/Src/SEGGER_RTT.c ****   }
 7177              		.loc 1 350 16 is_stmt 0 view .LVU3010
 7178 00ea 5222     		movs	r2, #82
 7179 00ec 5423     		movs	r3, #84
 7180 00ee 6271     		strb	r2, [r4, #5]
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 7181              		.loc 1 349 42 is_stmt 1 view .LVU3011
 7182              	.LVL696:
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 7183              		.loc 1 349 17 view .LVU3012
 350:Core/Src/SEGGER_RTT.c ****   }
 7184              		.loc 1 350 5 view .LVU3013
 350:Core/Src/SEGGER_RTT.c ****   }
 7185              		.loc 1 350 16 is_stmt 0 view .LVU3014
 7186 00f0 A171     		strb	r1, [r4, #6]
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 7187              		.loc 1 349 42 is_stmt 1 view .LVU3015
 7188              	.LVL697:
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccSC4OZm.s 			page 199


 7189              		.loc 1 349 17 view .LVU3016
 350:Core/Src/SEGGER_RTT.c ****   }
 7190              		.loc 1 350 5 view .LVU3017
 350:Core/Src/SEGGER_RTT.c ****   }
 7191              		.loc 1 350 16 is_stmt 0 view .LVU3018
 7192 00f2 E271     		strb	r2, [r4, #7]
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 7193              		.loc 1 349 42 is_stmt 1 view .LVU3019
 7194              	.LVL698:
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 7195              		.loc 1 349 17 view .LVU3020
 350:Core/Src/SEGGER_RTT.c ****   }
 7196              		.loc 1 350 5 view .LVU3021
 350:Core/Src/SEGGER_RTT.c ****   }
 7197              		.loc 1 350 16 is_stmt 0 view .LVU3022
 7198 00f4 2372     		strb	r3, [r4, #8]
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 7199              		.loc 1 349 42 is_stmt 1 view .LVU3023
 7200              	.LVL699:
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 7201              		.loc 1 349 17 view .LVU3024
 350:Core/Src/SEGGER_RTT.c ****   }
 7202              		.loc 1 350 5 view .LVU3025
 350:Core/Src/SEGGER_RTT.c ****   }
 7203              		.loc 1 350 16 is_stmt 0 view .LVU3026
 7204 00f6 6372     		strb	r3, [r4, #9]
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 7205              		.loc 1 349 42 is_stmt 1 view .LVU3027
 7206              	.LVL700:
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 7207              		.loc 1 349 17 view .LVU3028
 350:Core/Src/SEGGER_RTT.c ****   }
 7208              		.loc 1 350 5 view .LVU3029
 350:Core/Src/SEGGER_RTT.c ****   }
 7209              		.loc 1 350 16 is_stmt 0 view .LVU3030
 7210 00f8 A572     		strb	r5, [r4, #10]
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 7211              		.loc 1 349 42 is_stmt 1 view .LVU3031
 7212              	.LVL701:
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 7213              		.loc 1 349 17 view .LVU3032
 350:Core/Src/SEGGER_RTT.c ****   }
 7214              		.loc 1 350 5 view .LVU3033
 350:Core/Src/SEGGER_RTT.c ****   }
 7215              		.loc 1 350 16 is_stmt 0 view .LVU3034
 7216 00fa E572     		strb	r5, [r4, #11]
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 7217              		.loc 1 349 42 is_stmt 1 view .LVU3035
 7218              	.LVL702:
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 7219              		.loc 1 349 17 view .LVU3036
 350:Core/Src/SEGGER_RTT.c ****   }
 7220              		.loc 1 350 5 view .LVU3037
 350:Core/Src/SEGGER_RTT.c ****   }
 7221              		.loc 1 350 16 is_stmt 0 view .LVU3038
 7222 00fc 2573     		strb	r5, [r4, #12]
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccSC4OZm.s 			page 200


 7223              		.loc 1 349 42 is_stmt 1 view .LVU3039
 7224              	.LVL703:
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 7225              		.loc 1 349 17 view .LVU3040
 350:Core/Src/SEGGER_RTT.c ****   }
 7226              		.loc 1 350 5 view .LVU3041
 350:Core/Src/SEGGER_RTT.c ****   }
 7227              		.loc 1 350 16 is_stmt 0 view .LVU3042
 7228 00fe 6573     		strb	r5, [r4, #13]
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 7229              		.loc 1 349 42 is_stmt 1 view .LVU3043
 7230              	.LVL704:
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 7231              		.loc 1 349 17 view .LVU3044
 350:Core/Src/SEGGER_RTT.c ****   }
 7232              		.loc 1 350 5 view .LVU3045
 350:Core/Src/SEGGER_RTT.c ****   }
 7233              		.loc 1 350 16 is_stmt 0 view .LVU3046
 7234 0100 A573     		strb	r5, [r4, #14]
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 7235              		.loc 1 349 42 is_stmt 1 view .LVU3047
 7236              	.LVL705:
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 7237              		.loc 1 349 17 view .LVU3048
 350:Core/Src/SEGGER_RTT.c ****   }
 7238              		.loc 1 350 5 view .LVU3049
 350:Core/Src/SEGGER_RTT.c ****   }
 7239              		.loc 1 350 16 is_stmt 0 view .LVU3050
 7240 0102 E573     		strb	r5, [r4, #15]
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 7241              		.loc 1 349 42 is_stmt 1 view .LVU3051
 7242              	.LVL706:
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 7243              		.loc 1 349 17 view .LVU3052
 352:Core/Src/SEGGER_RTT.c **** }
 7244              		.loc 1 352 3 view .LVU3053
 7245              		.syntax unified
 7246              	@ 352 "Core/Src/SEGGER_RTT.c" 1
 7247 0104 BFF35F8F 		dmb
 7248              	
 7249              	@ 0 "" 2
 352:Core/Src/SEGGER_RTT.c **** }
 7250              		.loc 1 352 13 view .LVU3054
 7251              	.LVL707:
 352:Core/Src/SEGGER_RTT.c **** }
 7252              		.loc 1 352 13 is_stmt 0 view .LVU3055
 7253              		.thumb
 7254              		.syntax unified
 7255              	.LBE376:
 7256              	.LBE375:
 674:Core/Src/SEGGER_RTT.c ****   pRing = (SEGGER_RTT_BUFFER_DOWN*)((char*)&_SEGGER_RTT.aDown[BufferIndex] + SEGGER_RTT_UNCACHED_OF
 7257              		.loc 1 674 3 is_stmt 1 view .LVU3056
 7258              	.LBE378:
 674:Core/Src/SEGGER_RTT.c ****   pRing = (SEGGER_RTT_BUFFER_DOWN*)((char*)&_SEGGER_RTT.aDown[BufferIndex] + SEGGER_RTT_UNCACHED_OF
 7259              		.loc 1 674 9 view .LVU3057
 675:Core/Src/SEGGER_RTT.c ****   pBuffer = (unsigned char*)pData;
 7260              		.loc 1 675 3 view .LVU3058
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccSC4OZm.s 			page 201


 676:Core/Src/SEGGER_RTT.c ****   RdOff = pRing->RdOff;
 7261              		.loc 1 676 3 view .LVU3059
 677:Core/Src/SEGGER_RTT.c ****   WrOff = pRing->WrOff;
 7262              		.loc 1 677 3 view .LVU3060
 678:Core/Src/SEGGER_RTT.c ****   NumBytesRead = 0u;
 7263              		.loc 1 678 3 view .LVU3061
 678:Core/Src/SEGGER_RTT.c ****   NumBytesRead = 0u;
 7264              		.loc 1 678 9 is_stmt 0 view .LVU3062
 7265 0108 E66E     		ldr	r6, [r4, #108]
 7266              	.LVL708:
 679:Core/Src/SEGGER_RTT.c ****   //
 7267              		.loc 1 679 3 is_stmt 1 view .LVU3063
 683:Core/Src/SEGGER_RTT.c ****     NumBytesRem = pRing->SizeOfBuffer - RdOff;
 7268              		.loc 1 683 3 view .LVU3064
 711:Core/Src/SEGGER_RTT.c ****   NumBytesRem = MIN(NumBytesRem, BufferSize);
 7269              		.loc 1 711 3 view .LVU3065
 712:Core/Src/SEGGER_RTT.c ****   if (NumBytesRem > 0u) {
 7270              		.loc 1 712 3 view .LVU3066
 713:Core/Src/SEGGER_RTT.c ****     pSrc = (pRing->pBuffer + RdOff) + SEGGER_RTT_UNCACHED_OFF;
 7271              		.loc 1 713 3 view .LVU3067
 713:Core/Src/SEGGER_RTT.c ****     pSrc = (pRing->pBuffer + RdOff) + SEGGER_RTT_UNCACHED_OFF;
 7272              		.loc 1 713 6 is_stmt 0 view .LVU3068
 7273 010a AE42     		cmp	r6, r5
 7274 010c 8BD0     		beq	.L283
 7275 010e B1E7     		b	.L292
 7276              	.LVL709:
 7277              	.L293:
 697:Core/Src/SEGGER_RTT.c ****     BufferSize   -= NumBytesRem;
 7278              		.loc 1 697 18 view .LVU3069
 7279 0110 0DF10703 		add	r3, sp, #7
 7280              	.LVL710:
 697:Core/Src/SEGGER_RTT.c ****     BufferSize   -= NumBytesRem;
 7281              		.loc 1 697 18 view .LVU3070
 7282 0114 3B44     		add	r3, r3, r7
 7283              	.LVL711:
 724:Core/Src/SEGGER_RTT.c ****     pBuffer      += NumBytesRem;
 7284              		.loc 1 724 18 view .LVU3071
 7285 0116 1546     		mov	r5, r2
 7286              	.LVL712:
 724:Core/Src/SEGGER_RTT.c ****     pBuffer      += NumBytesRem;
 7287              		.loc 1 724 18 view .LVU3072
 7288 0118 0137     		adds	r7, r7, #1
 7289              	.LVL713:
 724:Core/Src/SEGGER_RTT.c ****     pBuffer      += NumBytesRem;
 7290              		.loc 1 724 18 view .LVU3073
 7291 011a B0E7     		b	.L284
 7292              	.L295:
 7293              		.align	2
 7294              	.L294:
 7295 011c 00000000 		.word	.LANCHOR0
 7296 0120 00000000 		.word	.LC0
 7297 0124 00000000 		.word	.LANCHOR1
 7298 0128 00000000 		.word	.LANCHOR2
 7299              	.LBE381:
 7300              	.LBE384:
 7301              	.LBE387:
 7302              	.LBE390:
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccSC4OZm.s 			page 202


 7303              	.LBE393:
 7304              		.cfi_endproc
 7305              	.LFE18:
 7307              		.section	.text.SEGGER_RTT_WaitKey,"ax",%progbits
 7308              		.align	1
 7309              		.p2align 2,,3
 7310              		.global	SEGGER_RTT_WaitKey
 7311              		.syntax unified
 7312              		.thumb
 7313              		.thumb_func
 7315              	SEGGER_RTT_WaitKey:
 7316              	.LFB19:
1448:Core/Src/SEGGER_RTT.c **** 
1449:Core/Src/SEGGER_RTT.c **** /*********************************************************************
1450:Core/Src/SEGGER_RTT.c **** *
1451:Core/Src/SEGGER_RTT.c **** *       SEGGER_RTT_WaitKey
1452:Core/Src/SEGGER_RTT.c **** *
1453:Core/Src/SEGGER_RTT.c **** *  Function description
1454:Core/Src/SEGGER_RTT.c **** *    Waits until at least one character is avaible in the SEGGER RTT buffer.
1455:Core/Src/SEGGER_RTT.c **** *    Once a character is available, it is read and this function returns.
1456:Core/Src/SEGGER_RTT.c **** *
1457:Core/Src/SEGGER_RTT.c **** *  Return value
1458:Core/Src/SEGGER_RTT.c **** *    >=0 -   Character which has been read.
1459:Core/Src/SEGGER_RTT.c **** *
1460:Core/Src/SEGGER_RTT.c **** *  Notes
1461:Core/Src/SEGGER_RTT.c **** *    (1) This function is only specified for accesses to RTT buffer 0
1462:Core/Src/SEGGER_RTT.c **** *    (2) This function is blocking if no character is present in RTT buffer
1463:Core/Src/SEGGER_RTT.c **** */
1464:Core/Src/SEGGER_RTT.c **** int SEGGER_RTT_WaitKey(void) {
 7317              		.loc 1 1464 30 is_stmt 1 view -0
 7318              		.cfi_startproc
 7319              		@ args = 0, pretend = 0, frame = 16
 7320              		@ frame_needed = 0, uses_anonymous_args = 0
 7321 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 7322              		.cfi_def_cfa_offset 36
 7323              		.cfi_offset 4, -36
 7324              		.cfi_offset 5, -32
 7325              		.cfi_offset 6, -28
 7326              		.cfi_offset 7, -24
 7327              		.cfi_offset 8, -20
 7328              		.cfi_offset 9, -16
 7329              		.cfi_offset 10, -12
 7330              		.cfi_offset 11, -8
 7331              		.cfi_offset 14, -4
 7332 0004 484C     		ldr	r4, .L317
 7333              	.LBB404:
 7334              	.LBB405:
 7335              	.LBB406:
 7336              	.LBB407:
 7337              	.LBB408:
 7338              	.LBB409:
 7339              	.LBB410:
 7340              	.LBB411:
 7341              	.LBB412:
 7342              	.LBB413:
 328:Core/Src/SEGGER_RTT.c ****   p->aUp[0].pBuffer       = _acUpBuffer;
 7343              		.loc 1 328 27 is_stmt 0 view .LVU3075
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccSC4OZm.s 			page 203


 7344 0006 494F     		ldr	r7, .L317+4
 7345              	.LBE413:
 7346              	.LBE412:
 7347              	.LBE411:
 7348              	.LBE410:
 7349              	.LBE409:
 7350              	.LBE408:
 7351              	.LBE407:
 7352              	.LBE406:
 7353              	.LBE405:
 7354              	.LBE404:
 7355              		.loc 1 1464 30 view .LVU3076
 7356 0008 85B0     		sub	sp, sp, #20
 7357              		.cfi_def_cfa_offset 56
 7358              	.LBB452:
 7359              	.LBB447:
 7360              	.LBB442:
 7361              	.LBB437:
 7362              	.LBB432:
 7363              	.LBB427:
 7364              	.LBB422:
 7365              	.LBB418:
 7366              	.LBB416:
 7367              	.LBB414:
 322:Core/Src/SEGGER_RTT.c ****   p->MaxNumUpBuffers    = SEGGER_RTT_MAX_NUM_UP_BUFFERS;
 7368              		.loc 1 322 3 view .LVU3077
 7369 000a 04F13008 		add	r8, r4, #48
 7370              	.L305:
 7371              	.LBE414:
 7372              	.LBE416:
 7373              	.LBE418:
 7374              	.LBE422:
 7375              	.LBE427:
 7376              	.LBE432:
 7377              	.LBE437:
 7378              	.LBE442:
 7379              	.LBE447:
 7380              	.LBE452:
1465:Core/Src/SEGGER_RTT.c ****   int r;
 7381              		.loc 1 1465 3 is_stmt 1 discriminator 1 view .LVU3078
1466:Core/Src/SEGGER_RTT.c **** 
1467:Core/Src/SEGGER_RTT.c ****   do {
 7382              		.loc 1 1467 3 discriminator 1 view .LVU3079
1468:Core/Src/SEGGER_RTT.c ****     r = SEGGER_RTT_GetKey();
 7383              		.loc 1 1468 5 discriminator 1 view .LVU3080
 7384              	.LBB453:
 7385              	.LBI404:
1436:Core/Src/SEGGER_RTT.c ****   char c;
 7386              		.loc 1 1436 5 discriminator 1 view .LVU3081
 7387              	.LBB448:
1437:Core/Src/SEGGER_RTT.c ****   int r;
 7388              		.loc 1 1437 3 discriminator 1 view .LVU3082
1438:Core/Src/SEGGER_RTT.c **** 
 7389              		.loc 1 1438 3 discriminator 1 view .LVU3083
1440:Core/Src/SEGGER_RTT.c ****   if (r == 1) {
 7390              		.loc 1 1440 3 discriminator 1 view .LVU3084
 7391              	.LVL714:
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccSC4OZm.s 			page 204


 7392              	.LBB443:
 7393              	.LBI406:
 794:Core/Src/SEGGER_RTT.c ****   unsigned NumBytesRead;
 7394              		.loc 1 794 10 discriminator 1 view .LVU3085
 7395              	.LBB438:
 795:Core/Src/SEGGER_RTT.c **** 
 7396              		.loc 1 795 3 discriminator 1 view .LVU3086
 7397              	.LBB433:
 797:Core/Src/SEGGER_RTT.c ****   //
 7398              		.loc 1 797 3 discriminator 1 view .LVU3087
 797:Core/Src/SEGGER_RTT.c ****   //
 7399              		.loc 1 797 3 discriminator 1 view .LVU3088
 7400              		.syntax unified
 7401              	@ 797 "Core/Src/SEGGER_RTT.c" 1
 7402 000e EFF3118A 		mrs   r10, basepri  
 7403 0012 4FF02001 		mov   r1, #32       
 7404 0016 81F31188 		msr   basepri, r1  
 7405              		
 7406              	@ 0 "" 2
 7407              	.LVL715:
 797:Core/Src/SEGGER_RTT.c ****   //
 7408              		.loc 1 797 20 discriminator 1 view .LVU3089
 801:Core/Src/SEGGER_RTT.c ****   //
 7409              		.loc 1 801 3 discriminator 1 view .LVU3090
 7410              		.thumb
 7411              		.syntax unified
 7412              	.LBB428:
 7413              	.LBI409:
 665:Core/Src/SEGGER_RTT.c ****   unsigned                NumBytesRem;
 7414              		.loc 1 665 10 discriminator 1 view .LVU3091
 7415              	.LBB423:
 666:Core/Src/SEGGER_RTT.c ****   unsigned                NumBytesRead;
 7416              		.loc 1 666 3 discriminator 1 view .LVU3092
 667:Core/Src/SEGGER_RTT.c ****   unsigned                RdOff;
 7417              		.loc 1 667 3 discriminator 1 view .LVU3093
 668:Core/Src/SEGGER_RTT.c ****   unsigned                WrOff;
 7418              		.loc 1 668 3 discriminator 1 view .LVU3094
 669:Core/Src/SEGGER_RTT.c ****   unsigned char*          pBuffer;
 7419              		.loc 1 669 3 discriminator 1 view .LVU3095
 670:Core/Src/SEGGER_RTT.c ****   SEGGER_RTT_BUFFER_DOWN* pRing;
 7420              		.loc 1 670 3 discriminator 1 view .LVU3096
 671:Core/Src/SEGGER_RTT.c ****   volatile char*          pSrc;
 7421              		.loc 1 671 3 discriminator 1 view .LVU3097
 672:Core/Src/SEGGER_RTT.c ****   //
 7422              		.loc 1 672 3 discriminator 1 view .LVU3098
 7423              	.LBB419:
 674:Core/Src/SEGGER_RTT.c ****   pRing = (SEGGER_RTT_BUFFER_DOWN*)((char*)&_SEGGER_RTT.aDown[BufferIndex] + SEGGER_RTT_UNCACHED_OF
 7424              		.loc 1 674 3 discriminator 1 view .LVU3099
 674:Core/Src/SEGGER_RTT.c ****   pRing = (SEGGER_RTT_BUFFER_DOWN*)((char*)&_SEGGER_RTT.aDown[BufferIndex] + SEGGER_RTT_UNCACHED_OF
 7425              		.loc 1 674 3 discriminator 1 view .LVU3100
 674:Core/Src/SEGGER_RTT.c ****   pRing = (SEGGER_RTT_BUFFER_DOWN*)((char*)&_SEGGER_RTT.aDown[BufferIndex] + SEGGER_RTT_UNCACHED_OF
 7426              		.loc 1 674 3 discriminator 1 view .LVU3101
 674:Core/Src/SEGGER_RTT.c ****   pRing = (SEGGER_RTT_BUFFER_DOWN*)((char*)&_SEGGER_RTT.aDown[BufferIndex] + SEGGER_RTT_UNCACHED_OF
 7427              		.loc 1 674 3 discriminator 1 view .LVU3102
 7428 001a 2378     		ldrb	r3, [r4]	@ zero_extendqisi2
 7429 001c 03F0FF05 		and	r5, r3, #255
 7430 0020 63B3     		cbz	r3, .L297
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccSC4OZm.s 			page 205


 7431              	.LBE419:
 678:Core/Src/SEGGER_RTT.c ****   NumBytesRead = 0u;
 7432              		.loc 1 678 9 is_stmt 0 view .LVU3103
 7433 0022 E66E     		ldr	r6, [r4, #108]
 677:Core/Src/SEGGER_RTT.c ****   WrOff = pRing->WrOff;
 7434              		.loc 1 677 9 view .LVU3104
 7435 0024 256F     		ldr	r5, [r4, #112]
 7436              	.LBB420:
 674:Core/Src/SEGGER_RTT.c ****   pRing = (SEGGER_RTT_BUFFER_DOWN*)((char*)&_SEGGER_RTT.aDown[BufferIndex] + SEGGER_RTT_UNCACHED_OF
 7437              		.loc 1 674 3 is_stmt 1 view .LVU3105
 7438              	.LBE420:
 674:Core/Src/SEGGER_RTT.c ****   pRing = (SEGGER_RTT_BUFFER_DOWN*)((char*)&_SEGGER_RTT.aDown[BufferIndex] + SEGGER_RTT_UNCACHED_OF
 7439              		.loc 1 674 9 view .LVU3106
 675:Core/Src/SEGGER_RTT.c ****   pBuffer = (unsigned char*)pData;
 7440              		.loc 1 675 3 view .LVU3107
 7441              	.LVL716:
 676:Core/Src/SEGGER_RTT.c ****   RdOff = pRing->RdOff;
 7442              		.loc 1 676 3 view .LVU3108
 677:Core/Src/SEGGER_RTT.c ****   WrOff = pRing->WrOff;
 7443              		.loc 1 677 3 view .LVU3109
 678:Core/Src/SEGGER_RTT.c ****   NumBytesRead = 0u;
 7444              		.loc 1 678 3 view .LVU3110
 679:Core/Src/SEGGER_RTT.c ****   //
 7445              		.loc 1 679 3 view .LVU3111
 683:Core/Src/SEGGER_RTT.c ****     NumBytesRem = pRing->SizeOfBuffer - RdOff;
 7446              		.loc 1 683 3 view .LVU3112
 683:Core/Src/SEGGER_RTT.c ****     NumBytesRem = pRing->SizeOfBuffer - RdOff;
 7447              		.loc 1 683 6 is_stmt 0 view .LVU3113
 7448 0026 B542     		cmp	r5, r6
 7449 0028 5CD9     		bls	.L299
 684:Core/Src/SEGGER_RTT.c ****     NumBytesRem = MIN(NumBytesRem, BufferSize);
 7450              		.loc 1 684 5 is_stmt 1 view .LVU3114
 686:Core/Src/SEGGER_RTT.c **** #if SEGGER_RTT_MEMCPY_USE_BYTELOOP
 7451              		.loc 1 686 18 is_stmt 0 view .LVU3115
 7452 002a D4E919B3 		ldrd	fp, r3, [r4, #100]
 684:Core/Src/SEGGER_RTT.c ****     NumBytesRem = MIN(NumBytesRem, BufferSize);
 7453              		.loc 1 684 17 view .LVU3116
 7454 002e A3EB0509 		sub	r9, r3, r5
 685:Core/Src/SEGGER_RTT.c ****     pSrc = (pRing->pBuffer + RdOff) + SEGGER_RTT_UNCACHED_OFF;
 7455              		.loc 1 685 17 view .LVU3117
 7456 0032 B9F1010F 		cmp	r9, #1
 7457 0036 28BF     		it	cs
 7458 0038 4FF00109 		movcs	r9, #1
 695:Core/Src/SEGGER_RTT.c ****     NumBytesRead += NumBytesRem;
 7459              		.loc 1 695 5 view .LVU3118
 7460 003c 4A46     		mov	r2, r9
 7461 003e 0BEB0501 		add	r1, fp, r5
 7462 0042 0DF10F00 		add	r0, sp, #15
 7463              	.LVL717:
 684:Core/Src/SEGGER_RTT.c ****     NumBytesRem = MIN(NumBytesRem, BufferSize);
 7464              		.loc 1 684 17 view .LVU3119
 7465 0046 0193     		str	r3, [sp, #4]
 685:Core/Src/SEGGER_RTT.c ****     pSrc = (pRing->pBuffer + RdOff) + SEGGER_RTT_UNCACHED_OFF;
 7466              		.loc 1 685 5 is_stmt 1 view .LVU3120
 7467              	.LVL718:
 686:Core/Src/SEGGER_RTT.c **** #if SEGGER_RTT_MEMCPY_USE_BYTELOOP
 7468              		.loc 1 686 5 view .LVU3121
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccSC4OZm.s 			page 206


 695:Core/Src/SEGGER_RTT.c ****     NumBytesRead += NumBytesRem;
 7469              		.loc 1 695 5 view .LVU3122
 7470 0048 FFF7FEFF 		bl	memcpy
 7471              	.LVL719:
 696:Core/Src/SEGGER_RTT.c ****     pBuffer      += NumBytesRem;
 7472              		.loc 1 696 5 view .LVU3123
 697:Core/Src/SEGGER_RTT.c ****     BufferSize   -= NumBytesRem;
 7473              		.loc 1 697 5 view .LVU3124
 698:Core/Src/SEGGER_RTT.c ****     RdOff        += NumBytesRem;
 7474              		.loc 1 698 5 view .LVU3125
 704:Core/Src/SEGGER_RTT.c ****       RdOff = 0u;
 7475              		.loc 1 704 8 is_stmt 0 view .LVU3126
 7476 004c 019B     		ldr	r3, [sp, #4]
 699:Core/Src/SEGGER_RTT.c **** #endif
 7477              		.loc 1 699 18 view .LVU3127
 7478 004e 05EB0900 		add	r0, r5, r9
 704:Core/Src/SEGGER_RTT.c ****       RdOff = 0u;
 7479              		.loc 1 704 8 view .LVU3128
 7480 0052 8342     		cmp	r3, r0
 698:Core/Src/SEGGER_RTT.c ****     RdOff        += NumBytesRem;
 7481              		.loc 1 698 18 view .LVU3129
 7482 0054 C9F10102 		rsb	r2, r9, #1
 7483              	.LVL720:
 699:Core/Src/SEGGER_RTT.c **** #endif
 7484              		.loc 1 699 5 is_stmt 1 view .LVU3130
 704:Core/Src/SEGGER_RTT.c ****       RdOff = 0u;
 7485              		.loc 1 704 5 view .LVU3131
 711:Core/Src/SEGGER_RTT.c ****   NumBytesRem = MIN(NumBytesRem, BufferSize);
 7486              		.loc 1 711 15 is_stmt 0 view .LVU3132
 7487 0058 14BF     		ite	ne
 7488 005a 361A     		subne	r6, r6, r0
 7489              	.LVL721:
 705:Core/Src/SEGGER_RTT.c ****     }
 7490              		.loc 1 705 13 view .LVU3133
 7491 005c 0020     		moveq	r0, #0
 7492              	.LVL722:
 711:Core/Src/SEGGER_RTT.c ****   NumBytesRem = MIN(NumBytesRem, BufferSize);
 7493              		.loc 1 711 3 is_stmt 1 view .LVU3134
 712:Core/Src/SEGGER_RTT.c ****   if (NumBytesRem > 0u) {
 7494              		.loc 1 712 3 view .LVU3135
 713:Core/Src/SEGGER_RTT.c ****     pSrc = (pRing->pBuffer + RdOff) + SEGGER_RTT_UNCACHED_OFF;
 7495              		.loc 1 713 3 view .LVU3136
 712:Core/Src/SEGGER_RTT.c ****   if (NumBytesRem > 0u) {
 7496              		.loc 1 712 15 is_stmt 0 view .LVU3137
 7497 005e B242     		cmp	r2, r6
 7498 0060 28BF     		it	cs
 7499 0062 3246     		movcs	r2, r6
 7500              	.LVL723:
 713:Core/Src/SEGGER_RTT.c ****     pSrc = (pRing->pBuffer + RdOff) + SEGGER_RTT_UNCACHED_OFF;
 7501              		.loc 1 713 6 view .LVU3138
 7502 0064 002A     		cmp	r2, #0
 7503 0066 58D1     		bne	.L315
 7504              	.LVL724:
 730:Core/Src/SEGGER_RTT.c ****     pRing->RdOff = RdOff;
 7505              		.loc 1 730 3 is_stmt 1 view .LVU3139
 730:Core/Src/SEGGER_RTT.c ****     pRing->RdOff = RdOff;
 7506              		.loc 1 730 6 is_stmt 0 view .LVU3140
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccSC4OZm.s 			page 207


 7507 0068 9D42     		cmp	r5, r3
 7508 006a 3DD0     		beq	.L306
 7509              	.LVL725:
 731:Core/Src/SEGGER_RTT.c ****   }
 7510              		.loc 1 731 5 is_stmt 1 view .LVU3141
 731:Core/Src/SEGGER_RTT.c ****   }
 7511              		.loc 1 731 18 is_stmt 0 view .LVU3142
 7512 006c 2067     		str	r0, [r4, #112]
 7513              	.LVL726:
 734:Core/Src/SEGGER_RTT.c **** }
 7514              		.loc 1 734 3 is_stmt 1 view .LVU3143
 734:Core/Src/SEGGER_RTT.c **** }
 7515              		.loc 1 734 3 is_stmt 0 view .LVU3144
 7516              	.LBE423:
 7517              	.LBE428:
 805:Core/Src/SEGGER_RTT.c ****   //
 7518              		.loc 1 805 3 is_stmt 1 view .LVU3145
 7519              		.syntax unified
 7520              	@ 805 "Core/Src/SEGGER_RTT.c" 1
 7521 006e 8AF31188 		msr   basepri, r10  
 7522              		
 7523              	@ 0 "" 2
 7524              		.thumb
 7525              		.syntax unified
 7526              	.LBE433:
 805:Core/Src/SEGGER_RTT.c ****   //
 7527              		.loc 1 805 22 view .LVU3146
 807:Core/Src/SEGGER_RTT.c **** }
 7528              		.loc 1 807 3 view .LVU3147
 7529              	.LVL727:
 807:Core/Src/SEGGER_RTT.c **** }
 7530              		.loc 1 807 3 is_stmt 0 view .LVU3148
 7531              	.LBE438:
 7532              	.LBE443:
1441:Core/Src/SEGGER_RTT.c ****     r = (int)(unsigned char)c;
 7533              		.loc 1 1441 3 is_stmt 1 view .LVU3149
1442:Core/Src/SEGGER_RTT.c ****   } else {
 7534              		.loc 1 1442 5 view .LVU3150
1442:Core/Src/SEGGER_RTT.c ****   } else {
 7535              		.loc 1 1442 7 is_stmt 0 view .LVU3151
 7536 0072 9DF80F00 		ldrb	r0, [sp, #15]	@ zero_extendqisi2
 7537              	.LVL728:
1446:Core/Src/SEGGER_RTT.c **** }
 7538              		.loc 1 1446 3 is_stmt 1 view .LVU3152
1446:Core/Src/SEGGER_RTT.c **** }
 7539              		.loc 1 1446 3 is_stmt 0 view .LVU3153
 7540              	.LBE448:
 7541              	.LBE453:
1469:Core/Src/SEGGER_RTT.c ****   } while (r < 0);
 7542              		.loc 1 1469 14 is_stmt 1 view .LVU3154
1470:Core/Src/SEGGER_RTT.c ****   return r;
 7543              		.loc 1 1470 3 view .LVU3155
1471:Core/Src/SEGGER_RTT.c **** }
 7544              		.loc 1 1471 1 is_stmt 0 view .LVU3156
 7545 0076 05B0     		add	sp, sp, #20
 7546              		.cfi_remember_state
 7547              		.cfi_def_cfa_offset 36
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccSC4OZm.s 			page 208


 7548              		@ sp needed
 7549 0078 BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 7550              	.LVL729:
 7551              	.L297:
 7552              		.cfi_restore_state
 7553              	.LBB454:
 7554              	.LBB449:
 7555              	.LBB444:
 7556              	.LBB439:
 7557              	.LBB434:
 7558              	.LBB429:
 7559              	.LBB424:
 7560              	.LBB421:
 674:Core/Src/SEGGER_RTT.c ****   pRing = (SEGGER_RTT_BUFFER_DOWN*)((char*)&_SEGGER_RTT.aDown[BufferIndex] + SEGGER_RTT_UNCACHED_OF
 7561              		.loc 1 674 3 is_stmt 1 view .LVU3157
 7562              	.LBB417:
 7563              	.LBI412:
 314:Core/Src/SEGGER_RTT.c ****   volatile SEGGER_RTT_CB* p;   // Volatile to make sure that compiler cannot change the order of ac
 7564              		.loc 1 314 13 view .LVU3158
 7565              	.LBB415:
 315:Core/Src/SEGGER_RTT.c ****   static const char _aInitStr[] = "\0\0\0\0\0\0TTR REGGES";  // Init complete ID string to make sur
 7566              		.loc 1 315 3 view .LVU3159
 316:Core/Src/SEGGER_RTT.c ****   unsigned i;
 7567              		.loc 1 316 3 view .LVU3160
 317:Core/Src/SEGGER_RTT.c ****   //
 7568              		.loc 1 317 3 view .LVU3161
 321:Core/Src/SEGGER_RTT.c ****   memset((SEGGER_RTT_CB*)p, 0, sizeof(_SEGGER_RTT));         // Make sure that the RTT CB is always
 7569              		.loc 1 321 3 view .LVU3162
 322:Core/Src/SEGGER_RTT.c ****   p->MaxNumUpBuffers    = SEGGER_RTT_MAX_NUM_UP_BUFFERS;
 7570              		.loc 1 322 3 view .LVU3163
 7571 007c 2946     		mov	r1, r5
 7572 007e 7822     		movs	r2, #120
 7573 0080 4046     		mov	r0, r8
 7574 0082 FFF7FEFF 		bl	memset
 7575              	.LVL730:
 323:Core/Src/SEGGER_RTT.c ****   p->MaxNumDownBuffers  = SEGGER_RTT_MAX_NUM_DOWN_BUFFERS;
 7576              		.loc 1 323 3 view .LVU3164
 323:Core/Src/SEGGER_RTT.c ****   p->MaxNumDownBuffers  = SEGGER_RTT_MAX_NUM_DOWN_BUFFERS;
 7577              		.loc 1 323 25 is_stmt 0 view .LVU3165
 7578 0086 0323     		movs	r3, #3
 7579 0088 2361     		str	r3, [r4, #16]
 324:Core/Src/SEGGER_RTT.c ****   //
 7580              		.loc 1 324 3 is_stmt 1 view .LVU3166
 338:Core/Src/SEGGER_RTT.c ****   p->aDown[0].SizeOfBuffer  = BUFFER_SIZE_DOWN;
 7581              		.loc 1 338 29 is_stmt 0 view .LVU3167
 7582 008a 2949     		ldr	r1, .L317+8
 324:Core/Src/SEGGER_RTT.c ****   //
 7583              		.loc 1 324 25 view .LVU3168
 7584 008c 6361     		str	r3, [r4, #20]
 328:Core/Src/SEGGER_RTT.c ****   p->aUp[0].pBuffer       = _acUpBuffer;
 7585              		.loc 1 328 3 is_stmt 1 view .LVU3169
 330:Core/Src/SEGGER_RTT.c ****   p->aUp[0].RdOff         = 0u;
 7586              		.loc 1 330 27 is_stmt 0 view .LVU3170
 7587 008e 4FF48060 		mov	r0, #1024
 329:Core/Src/SEGGER_RTT.c ****   p->aUp[0].SizeOfBuffer  = BUFFER_SIZE_UP;
 7588              		.loc 1 329 27 view .LVU3171
 7589 0092 284B     		ldr	r3, .L317+12
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccSC4OZm.s 			page 209


 328:Core/Src/SEGGER_RTT.c ****   p->aUp[0].pBuffer       = _acUpBuffer;
 7590              		.loc 1 328 27 view .LVU3172
 7591 0094 A761     		str	r7, [r4, #24]
 329:Core/Src/SEGGER_RTT.c ****   p->aUp[0].SizeOfBuffer  = BUFFER_SIZE_UP;
 7592              		.loc 1 329 3 is_stmt 1 view .LVU3173
 339:Core/Src/SEGGER_RTT.c ****   p->aDown[0].RdOff         = 0u;
 7593              		.loc 1 339 29 is_stmt 0 view .LVU3174
 7594 0096 1022     		movs	r2, #16
 329:Core/Src/SEGGER_RTT.c ****   p->aUp[0].SizeOfBuffer  = BUFFER_SIZE_UP;
 7595              		.loc 1 329 27 view .LVU3175
 7596 0098 E361     		str	r3, [r4, #28]
 330:Core/Src/SEGGER_RTT.c ****   p->aUp[0].RdOff         = 0u;
 7597              		.loc 1 330 3 is_stmt 1 view .LVU3176
 330:Core/Src/SEGGER_RTT.c ****   p->aUp[0].RdOff         = 0u;
 7598              		.loc 1 330 27 is_stmt 0 view .LVU3177
 7599 009a 2062     		str	r0, [r4, #32]
 331:Core/Src/SEGGER_RTT.c ****   p->aUp[0].WrOff         = 0u;
 7600              		.loc 1 331 3 is_stmt 1 view .LVU3178
 331:Core/Src/SEGGER_RTT.c ****   p->aUp[0].WrOff         = 0u;
 7601              		.loc 1 331 27 is_stmt 0 view .LVU3179
 7602 009c A562     		str	r5, [r4, #40]
 332:Core/Src/SEGGER_RTT.c ****   p->aUp[0].Flags         = SEGGER_RTT_MODE_DEFAULT;
 7603              		.loc 1 332 3 is_stmt 1 view .LVU3180
 332:Core/Src/SEGGER_RTT.c ****   p->aUp[0].Flags         = SEGGER_RTT_MODE_DEFAULT;
 7604              		.loc 1 332 27 is_stmt 0 view .LVU3181
 7605 009e 6562     		str	r5, [r4, #36]
 333:Core/Src/SEGGER_RTT.c ****   //
 7606              		.loc 1 333 3 is_stmt 1 view .LVU3182
 333:Core/Src/SEGGER_RTT.c ****   //
 7607              		.loc 1 333 27 is_stmt 0 view .LVU3183
 7608 00a0 E562     		str	r5, [r4, #44]
 337:Core/Src/SEGGER_RTT.c ****   p->aDown[0].pBuffer       = _acDownBuffer;
 7609              		.loc 1 337 3 is_stmt 1 view .LVU3184
 337:Core/Src/SEGGER_RTT.c ****   p->aDown[0].pBuffer       = _acDownBuffer;
 7610              		.loc 1 337 29 is_stmt 0 view .LVU3185
 7611 00a2 2766     		str	r7, [r4, #96]
 338:Core/Src/SEGGER_RTT.c ****   p->aDown[0].SizeOfBuffer  = BUFFER_SIZE_DOWN;
 7612              		.loc 1 338 3 is_stmt 1 view .LVU3186
 338:Core/Src/SEGGER_RTT.c ****   p->aDown[0].SizeOfBuffer  = BUFFER_SIZE_DOWN;
 7613              		.loc 1 338 29 is_stmt 0 view .LVU3187
 7614 00a4 6166     		str	r1, [r4, #100]
 339:Core/Src/SEGGER_RTT.c ****   p->aDown[0].RdOff         = 0u;
 7615              		.loc 1 339 3 is_stmt 1 view .LVU3188
 339:Core/Src/SEGGER_RTT.c ****   p->aDown[0].RdOff         = 0u;
 7616              		.loc 1 339 29 is_stmt 0 view .LVU3189
 7617 00a6 A266     		str	r2, [r4, #104]
 340:Core/Src/SEGGER_RTT.c ****   p->aDown[0].WrOff         = 0u;
 7618              		.loc 1 340 3 is_stmt 1 view .LVU3190
 340:Core/Src/SEGGER_RTT.c ****   p->aDown[0].WrOff         = 0u;
 7619              		.loc 1 340 29 is_stmt 0 view .LVU3191
 7620 00a8 2567     		str	r5, [r4, #112]
 341:Core/Src/SEGGER_RTT.c ****   p->aDown[0].Flags         = SEGGER_RTT_MODE_DEFAULT;
 7621              		.loc 1 341 3 is_stmt 1 view .LVU3192
 341:Core/Src/SEGGER_RTT.c ****   p->aDown[0].Flags         = SEGGER_RTT_MODE_DEFAULT;
 7622              		.loc 1 341 29 is_stmt 0 view .LVU3193
 7623 00aa E566     		str	r5, [r4, #108]
 342:Core/Src/SEGGER_RTT.c ****   //
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccSC4OZm.s 			page 210


 7624              		.loc 1 342 3 is_stmt 1 view .LVU3194
 342:Core/Src/SEGGER_RTT.c ****   //
 7625              		.loc 1 342 29 is_stmt 0 view .LVU3195
 7626 00ac 6567     		str	r5, [r4, #116]
 348:Core/Src/SEGGER_RTT.c ****   for (i = 0; i < sizeof(_aInitStr) - 1; ++i) {
 7627              		.loc 1 348 3 is_stmt 1 view .LVU3196
 7628              		.syntax unified
 7629              	@ 348 "Core/Src/SEGGER_RTT.c" 1
 7630 00ae BFF35F8F 		dmb
 7631              	
 7632              	@ 0 "" 2
 348:Core/Src/SEGGER_RTT.c ****   for (i = 0; i < sizeof(_aInitStr) - 1; ++i) {
 7633              		.loc 1 348 13 view .LVU3197
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 7634              		.loc 1 349 3 view .LVU3198
 7635              	.LVL731:
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 7636              		.loc 1 349 17 view .LVU3199
 350:Core/Src/SEGGER_RTT.c ****   }
 7637              		.loc 1 350 5 view .LVU3200
 350:Core/Src/SEGGER_RTT.c ****   }
 7638              		.loc 1 350 16 is_stmt 0 view .LVU3201
 7639              		.thumb
 7640              		.syntax unified
 7641 00b2 4523     		movs	r3, #69
 7642 00b4 4721     		movs	r1, #71
 7643 00b6 5320     		movs	r0, #83
 7644 00b8 2070     		strb	r0, [r4]
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 7645              		.loc 1 349 42 is_stmt 1 view .LVU3202
 7646              	.LVL732:
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 7647              		.loc 1 349 17 view .LVU3203
 350:Core/Src/SEGGER_RTT.c ****   }
 7648              		.loc 1 350 5 view .LVU3204
 350:Core/Src/SEGGER_RTT.c ****   }
 7649              		.loc 1 350 16 is_stmt 0 view .LVU3205
 7650 00ba 5222     		movs	r2, #82
 7651 00bc 6370     		strb	r3, [r4, #1]
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 7652              		.loc 1 349 42 is_stmt 1 view .LVU3206
 7653              	.LVL733:
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 7654              		.loc 1 349 17 view .LVU3207
 350:Core/Src/SEGGER_RTT.c ****   }
 7655              		.loc 1 350 5 view .LVU3208
 350:Core/Src/SEGGER_RTT.c ****   }
 7656              		.loc 1 350 16 is_stmt 0 view .LVU3209
 7657 00be 2020     		movs	r0, #32
 7658 00c0 A170     		strb	r1, [r4, #2]
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 7659              		.loc 1 349 42 is_stmt 1 view .LVU3210
 7660              	.LVL734:
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 7661              		.loc 1 349 17 view .LVU3211
 350:Core/Src/SEGGER_RTT.c ****   }
 7662              		.loc 1 350 5 view .LVU3212
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccSC4OZm.s 			page 211


 350:Core/Src/SEGGER_RTT.c ****   }
 7663              		.loc 1 350 16 is_stmt 0 view .LVU3213
 7664 00c2 E170     		strb	r1, [r4, #3]
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 7665              		.loc 1 349 42 is_stmt 1 view .LVU3214
 7666              	.LVL735:
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 7667              		.loc 1 349 17 view .LVU3215
 350:Core/Src/SEGGER_RTT.c ****   }
 7668              		.loc 1 350 5 view .LVU3216
 350:Core/Src/SEGGER_RTT.c ****   }
 7669              		.loc 1 350 16 is_stmt 0 view .LVU3217
 7670 00c4 2371     		strb	r3, [r4, #4]
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 7671              		.loc 1 349 42 is_stmt 1 view .LVU3218
 7672              	.LVL736:
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 7673              		.loc 1 349 17 view .LVU3219
 350:Core/Src/SEGGER_RTT.c ****   }
 7674              		.loc 1 350 5 view .LVU3220
 350:Core/Src/SEGGER_RTT.c ****   }
 7675              		.loc 1 350 16 is_stmt 0 view .LVU3221
 7676 00c6 5423     		movs	r3, #84
 7677 00c8 6271     		strb	r2, [r4, #5]
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 7678              		.loc 1 349 42 is_stmt 1 view .LVU3222
 7679              	.LVL737:
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 7680              		.loc 1 349 17 view .LVU3223
 350:Core/Src/SEGGER_RTT.c ****   }
 7681              		.loc 1 350 5 view .LVU3224
 350:Core/Src/SEGGER_RTT.c ****   }
 7682              		.loc 1 350 16 is_stmt 0 view .LVU3225
 7683 00ca A071     		strb	r0, [r4, #6]
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 7684              		.loc 1 349 42 is_stmt 1 view .LVU3226
 7685              	.LVL738:
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 7686              		.loc 1 349 17 view .LVU3227
 350:Core/Src/SEGGER_RTT.c ****   }
 7687              		.loc 1 350 5 view .LVU3228
 350:Core/Src/SEGGER_RTT.c ****   }
 7688              		.loc 1 350 16 is_stmt 0 view .LVU3229
 7689 00cc E271     		strb	r2, [r4, #7]
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 7690              		.loc 1 349 42 is_stmt 1 view .LVU3230
 7691              	.LVL739:
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 7692              		.loc 1 349 17 view .LVU3231
 350:Core/Src/SEGGER_RTT.c ****   }
 7693              		.loc 1 350 5 view .LVU3232
 350:Core/Src/SEGGER_RTT.c ****   }
 7694              		.loc 1 350 16 is_stmt 0 view .LVU3233
 7695 00ce 2372     		strb	r3, [r4, #8]
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 7696              		.loc 1 349 42 is_stmt 1 view .LVU3234
 7697              	.LVL740:
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccSC4OZm.s 			page 212


 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 7698              		.loc 1 349 17 view .LVU3235
 350:Core/Src/SEGGER_RTT.c ****   }
 7699              		.loc 1 350 5 view .LVU3236
 350:Core/Src/SEGGER_RTT.c ****   }
 7700              		.loc 1 350 16 is_stmt 0 view .LVU3237
 7701 00d0 6372     		strb	r3, [r4, #9]
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 7702              		.loc 1 349 42 is_stmt 1 view .LVU3238
 7703              	.LVL741:
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 7704              		.loc 1 349 17 view .LVU3239
 350:Core/Src/SEGGER_RTT.c ****   }
 7705              		.loc 1 350 5 view .LVU3240
 350:Core/Src/SEGGER_RTT.c ****   }
 7706              		.loc 1 350 16 is_stmt 0 view .LVU3241
 7707 00d2 A572     		strb	r5, [r4, #10]
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 7708              		.loc 1 349 42 is_stmt 1 view .LVU3242
 7709              	.LVL742:
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 7710              		.loc 1 349 17 view .LVU3243
 350:Core/Src/SEGGER_RTT.c ****   }
 7711              		.loc 1 350 5 view .LVU3244
 350:Core/Src/SEGGER_RTT.c ****   }
 7712              		.loc 1 350 16 is_stmt 0 view .LVU3245
 7713 00d4 E572     		strb	r5, [r4, #11]
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 7714              		.loc 1 349 42 is_stmt 1 view .LVU3246
 7715              	.LVL743:
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 7716              		.loc 1 349 17 view .LVU3247
 350:Core/Src/SEGGER_RTT.c ****   }
 7717              		.loc 1 350 5 view .LVU3248
 350:Core/Src/SEGGER_RTT.c ****   }
 7718              		.loc 1 350 16 is_stmt 0 view .LVU3249
 7719 00d6 2573     		strb	r5, [r4, #12]
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 7720              		.loc 1 349 42 is_stmt 1 view .LVU3250
 7721              	.LVL744:
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 7722              		.loc 1 349 17 view .LVU3251
 350:Core/Src/SEGGER_RTT.c ****   }
 7723              		.loc 1 350 5 view .LVU3252
 350:Core/Src/SEGGER_RTT.c ****   }
 7724              		.loc 1 350 16 is_stmt 0 view .LVU3253
 7725 00d8 6573     		strb	r5, [r4, #13]
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 7726              		.loc 1 349 42 is_stmt 1 view .LVU3254
 7727              	.LVL745:
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 7728              		.loc 1 349 17 view .LVU3255
 350:Core/Src/SEGGER_RTT.c ****   }
 7729              		.loc 1 350 5 view .LVU3256
 350:Core/Src/SEGGER_RTT.c ****   }
 7730              		.loc 1 350 16 is_stmt 0 view .LVU3257
 7731 00da A573     		strb	r5, [r4, #14]
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccSC4OZm.s 			page 213


 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 7732              		.loc 1 349 42 is_stmt 1 view .LVU3258
 7733              	.LVL746:
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 7734              		.loc 1 349 17 view .LVU3259
 350:Core/Src/SEGGER_RTT.c ****   }
 7735              		.loc 1 350 5 view .LVU3260
 350:Core/Src/SEGGER_RTT.c ****   }
 7736              		.loc 1 350 16 is_stmt 0 view .LVU3261
 7737 00dc E573     		strb	r5, [r4, #15]
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 7738              		.loc 1 349 42 is_stmt 1 view .LVU3262
 7739              	.LVL747:
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 7740              		.loc 1 349 17 view .LVU3263
 352:Core/Src/SEGGER_RTT.c **** }
 7741              		.loc 1 352 3 view .LVU3264
 7742              		.syntax unified
 7743              	@ 352 "Core/Src/SEGGER_RTT.c" 1
 7744 00de BFF35F8F 		dmb
 7745              	
 7746              	@ 0 "" 2
 352:Core/Src/SEGGER_RTT.c **** }
 7747              		.loc 1 352 13 view .LVU3265
 7748              	.LVL748:
 352:Core/Src/SEGGER_RTT.c **** }
 7749              		.loc 1 352 13 is_stmt 0 view .LVU3266
 7750              		.thumb
 7751              		.syntax unified
 7752              	.LBE415:
 7753              	.LBE417:
 674:Core/Src/SEGGER_RTT.c ****   pRing = (SEGGER_RTT_BUFFER_DOWN*)((char*)&_SEGGER_RTT.aDown[BufferIndex] + SEGGER_RTT_UNCACHED_OF
 7754              		.loc 1 674 3 is_stmt 1 view .LVU3267
 7755              	.LBE421:
 674:Core/Src/SEGGER_RTT.c ****   pRing = (SEGGER_RTT_BUFFER_DOWN*)((char*)&_SEGGER_RTT.aDown[BufferIndex] + SEGGER_RTT_UNCACHED_OF
 7756              		.loc 1 674 9 view .LVU3268
 675:Core/Src/SEGGER_RTT.c ****   pBuffer = (unsigned char*)pData;
 7757              		.loc 1 675 3 view .LVU3269
 676:Core/Src/SEGGER_RTT.c ****   RdOff = pRing->RdOff;
 7758              		.loc 1 676 3 view .LVU3270
 677:Core/Src/SEGGER_RTT.c ****   WrOff = pRing->WrOff;
 7759              		.loc 1 677 3 view .LVU3271
 678:Core/Src/SEGGER_RTT.c ****   NumBytesRead = 0u;
 7760              		.loc 1 678 3 view .LVU3272
 678:Core/Src/SEGGER_RTT.c ****   NumBytesRead = 0u;
 7761              		.loc 1 678 9 is_stmt 0 view .LVU3273
 7762 00e2 E66E     		ldr	r6, [r4, #108]
 7763              	.LVL749:
 679:Core/Src/SEGGER_RTT.c ****   //
 7764              		.loc 1 679 3 is_stmt 1 view .LVU3274
 683:Core/Src/SEGGER_RTT.c ****     NumBytesRem = pRing->SizeOfBuffer - RdOff;
 7765              		.loc 1 683 3 view .LVU3275
 7766              	.L299:
 711:Core/Src/SEGGER_RTT.c ****   NumBytesRem = MIN(NumBytesRem, BufferSize);
 7767              		.loc 1 711 3 view .LVU3276
 712:Core/Src/SEGGER_RTT.c ****   if (NumBytesRem > 0u) {
 7768              		.loc 1 712 3 view .LVU3277
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccSC4OZm.s 			page 214


 713:Core/Src/SEGGER_RTT.c ****     pSrc = (pRing->pBuffer + RdOff) + SEGGER_RTT_UNCACHED_OFF;
 7769              		.loc 1 713 3 view .LVU3278
 713:Core/Src/SEGGER_RTT.c ****     pSrc = (pRing->pBuffer + RdOff) + SEGGER_RTT_UNCACHED_OFF;
 7770              		.loc 1 713 6 is_stmt 0 view .LVU3279
 7771 00e4 AE42     		cmp	r6, r5
 7772 00e6 02D1     		bne	.L316
 7773              	.LVL750:
 7774              	.L306:
 734:Core/Src/SEGGER_RTT.c **** }
 7775              		.loc 1 734 3 is_stmt 1 view .LVU3280
 734:Core/Src/SEGGER_RTT.c **** }
 7776              		.loc 1 734 3 is_stmt 0 view .LVU3281
 7777              	.LBE424:
 7778              	.LBE429:
 805:Core/Src/SEGGER_RTT.c ****   //
 7779              		.loc 1 805 3 is_stmt 1 view .LVU3282
 7780              		.syntax unified
 7781              	@ 805 "Core/Src/SEGGER_RTT.c" 1
 7782 00e8 8AF31188 		msr   basepri, r10  
 7783              		
 7784              	@ 0 "" 2
 7785              		.thumb
 7786              		.syntax unified
 7787              	.LBE434:
 805:Core/Src/SEGGER_RTT.c ****   //
 7788              		.loc 1 805 22 view .LVU3283
 807:Core/Src/SEGGER_RTT.c **** }
 7789              		.loc 1 807 3 view .LVU3284
 7790              	.LVL751:
 807:Core/Src/SEGGER_RTT.c **** }
 7791              		.loc 1 807 3 is_stmt 0 view .LVU3285
 7792              	.LBE439:
 7793              	.LBE444:
1441:Core/Src/SEGGER_RTT.c ****     r = (int)(unsigned char)c;
 7794              		.loc 1 1441 3 is_stmt 1 view .LVU3286
1446:Core/Src/SEGGER_RTT.c **** }
 7795              		.loc 1 1446 3 view .LVU3287
1446:Core/Src/SEGGER_RTT.c **** }
 7796              		.loc 1 1446 3 is_stmt 0 view .LVU3288
 7797              	.LBE449:
 7798              	.LBE454:
1469:Core/Src/SEGGER_RTT.c ****   return r;
 7799              		.loc 1 1469 14 is_stmt 1 view .LVU3289
 7800 00ec 8FE7     		b	.L305
 7801              	.LVL752:
 7802              	.L316:
 7803              	.LBB455:
 7804              	.LBB450:
 7805              	.LBB445:
 7806              	.LBB440:
 7807              	.LBB435:
 7808              	.LBB430:
 7809              	.LBB425:
 686:Core/Src/SEGGER_RTT.c **** #if SEGGER_RTT_MEMCPY_USE_BYTELOOP
 7810              		.loc 1 686 18 is_stmt 0 view .LVU3290
 7811 00ee D4F864B0 		ldr	fp, [r4, #100]
 7812 00f2 4FF00109 		mov	r9, #1
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccSC4OZm.s 			page 215


 676:Core/Src/SEGGER_RTT.c ****   RdOff = pRing->RdOff;
 7813              		.loc 1 676 11 view .LVU3291
 7814 00f6 0DF10F03 		add	r3, sp, #15
 7815              	.LVL753:
 7816              	.L307:
 714:Core/Src/SEGGER_RTT.c **** #if SEGGER_RTT_MEMCPY_USE_BYTELOOP
 7817              		.loc 1 714 5 is_stmt 1 view .LVU3292
 723:Core/Src/SEGGER_RTT.c ****     NumBytesRead += NumBytesRem;
 7818              		.loc 1 723 5 view .LVU3293
 7819 00fa 1BF80520 		ldrb	r2, [fp, r5]	@ zero_extendqisi2
 7820 00fe 1A70     		strb	r2, [r3]
 724:Core/Src/SEGGER_RTT.c ****     pBuffer      += NumBytesRem;
 7821              		.loc 1 724 5 view .LVU3294
 725:Core/Src/SEGGER_RTT.c ****     BufferSize   -= NumBytesRem;
 7822              		.loc 1 725 5 view .LVU3295
 726:Core/Src/SEGGER_RTT.c ****     RdOff        += NumBytesRem;
 7823              		.loc 1 726 5 view .LVU3296
 727:Core/Src/SEGGER_RTT.c **** #endif
 7824              		.loc 1 727 5 view .LVU3297
 7825              	.LVL754:
 730:Core/Src/SEGGER_RTT.c ****     pRing->RdOff = RdOff;
 7826              		.loc 1 730 3 view .LVU3298
 731:Core/Src/SEGGER_RTT.c ****   }
 7827              		.loc 1 731 5 view .LVU3299
 727:Core/Src/SEGGER_RTT.c **** #endif
 7828              		.loc 1 727 18 is_stmt 0 view .LVU3300
 7829 0100 0135     		adds	r5, r5, #1
 7830              	.LVL755:
 731:Core/Src/SEGGER_RTT.c ****   }
 7831              		.loc 1 731 18 view .LVU3301
 7832 0102 2567     		str	r5, [r4, #112]
 7833              	.LVL756:
 734:Core/Src/SEGGER_RTT.c **** }
 7834              		.loc 1 734 3 is_stmt 1 view .LVU3302
 734:Core/Src/SEGGER_RTT.c **** }
 7835              		.loc 1 734 3 is_stmt 0 view .LVU3303
 7836              	.LBE425:
 7837              	.LBE430:
 805:Core/Src/SEGGER_RTT.c ****   //
 7838              		.loc 1 805 3 is_stmt 1 view .LVU3304
 7839              		.syntax unified
 7840              	@ 805 "Core/Src/SEGGER_RTT.c" 1
 7841 0104 8AF31188 		msr   basepri, r10  
 7842              		
 7843              	@ 0 "" 2
 7844              		.thumb
 7845              		.syntax unified
 7846              	.LBE435:
 805:Core/Src/SEGGER_RTT.c ****   //
 7847              		.loc 1 805 22 view .LVU3305
 807:Core/Src/SEGGER_RTT.c **** }
 7848              		.loc 1 807 3 view .LVU3306
 7849              	.LVL757:
 807:Core/Src/SEGGER_RTT.c **** }
 7850              		.loc 1 807 3 is_stmt 0 view .LVU3307
 7851              	.LBE440:
 7852              	.LBE445:
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccSC4OZm.s 			page 216


1441:Core/Src/SEGGER_RTT.c ****     r = (int)(unsigned char)c;
 7853              		.loc 1 1441 3 is_stmt 1 view .LVU3308
1441:Core/Src/SEGGER_RTT.c ****     r = (int)(unsigned char)c;
 7854              		.loc 1 1441 6 is_stmt 0 view .LVU3309
 7855 0108 B9F1010F 		cmp	r9, #1
 7856 010c 7FF47FAF 		bne	.L305
1442:Core/Src/SEGGER_RTT.c ****   } else {
 7857              		.loc 1 1442 5 is_stmt 1 view .LVU3310
1442:Core/Src/SEGGER_RTT.c ****   } else {
 7858              		.loc 1 1442 7 is_stmt 0 view .LVU3311
 7859 0110 9DF80F00 		ldrb	r0, [sp, #15]	@ zero_extendqisi2
 7860              	.LVL758:
1446:Core/Src/SEGGER_RTT.c **** }
 7861              		.loc 1 1446 3 is_stmt 1 view .LVU3312
1446:Core/Src/SEGGER_RTT.c **** }
 7862              		.loc 1 1446 3 is_stmt 0 view .LVU3313
 7863              	.LBE450:
 7864              	.LBE455:
1469:Core/Src/SEGGER_RTT.c ****   return r;
 7865              		.loc 1 1469 14 is_stmt 1 view .LVU3314
1470:Core/Src/SEGGER_RTT.c **** }
 7866              		.loc 1 1470 3 view .LVU3315
 7867              		.loc 1 1471 1 is_stmt 0 view .LVU3316
 7868 0114 05B0     		add	sp, sp, #20
 7869              		.cfi_remember_state
 7870              		.cfi_def_cfa_offset 36
 7871              		@ sp needed
 7872 0116 BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 7873              	.LVL759:
 7874              	.L315:
 7875              		.cfi_restore_state
 7876              	.LBB456:
 7877              	.LBB451:
 7878              	.LBB446:
 7879              	.LBB441:
 7880              	.LBB436:
 7881              	.LBB431:
 7882              	.LBB426:
 697:Core/Src/SEGGER_RTT.c ****     BufferSize   -= NumBytesRem;
 7883              		.loc 1 697 18 view .LVU3317
 7884 011a 0DF10F03 		add	r3, sp, #15
 7885              	.LVL760:
 697:Core/Src/SEGGER_RTT.c ****     BufferSize   -= NumBytesRem;
 7886              		.loc 1 697 18 view .LVU3318
 7887 011e 4B44     		add	r3, r3, r9
 7888              	.LVL761:
 724:Core/Src/SEGGER_RTT.c ****     pBuffer      += NumBytesRem;
 7889              		.loc 1 724 18 view .LVU3319
 7890 0120 0546     		mov	r5, r0
 7891              	.LVL762:
 724:Core/Src/SEGGER_RTT.c ****     pBuffer      += NumBytesRem;
 7892              		.loc 1 724 18 view .LVU3320
 7893 0122 09F10109 		add	r9, r9, #1
 7894              	.LVL763:
 724:Core/Src/SEGGER_RTT.c ****     pBuffer      += NumBytesRem;
 7895              		.loc 1 724 18 view .LVU3321
 7896 0126 E8E7     		b	.L307
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccSC4OZm.s 			page 217


 7897              	.L318:
 7898              		.align	2
 7899              	.L317:
 7900 0128 00000000 		.word	.LANCHOR0
 7901 012c 00000000 		.word	.LC0
 7902 0130 00000000 		.word	.LANCHOR2
 7903 0134 00000000 		.word	.LANCHOR1
 7904              	.LBE426:
 7905              	.LBE431:
 7906              	.LBE436:
 7907              	.LBE441:
 7908              	.LBE446:
 7909              	.LBE451:
 7910              	.LBE456:
 7911              		.cfi_endproc
 7912              	.LFE19:
 7914              		.section	.text.SEGGER_RTT_HasKey,"ax",%progbits
 7915              		.align	1
 7916              		.p2align 2,,3
 7917              		.global	SEGGER_RTT_HasKey
 7918              		.syntax unified
 7919              		.thumb
 7920              		.thumb_func
 7922              	SEGGER_RTT_HasKey:
 7923              	.LFB20:
1472:Core/Src/SEGGER_RTT.c **** 
1473:Core/Src/SEGGER_RTT.c **** /*********************************************************************
1474:Core/Src/SEGGER_RTT.c **** *
1475:Core/Src/SEGGER_RTT.c **** *       SEGGER_RTT_HasKey
1476:Core/Src/SEGGER_RTT.c **** *
1477:Core/Src/SEGGER_RTT.c **** *  Function description
1478:Core/Src/SEGGER_RTT.c **** *    Checks if at least one character for reading is available in the SEGGER RTT buffer.
1479:Core/Src/SEGGER_RTT.c **** *
1480:Core/Src/SEGGER_RTT.c **** *  Return value
1481:Core/Src/SEGGER_RTT.c **** *    == 0 -     No characters are available to read.
1482:Core/Src/SEGGER_RTT.c **** *    == 1 -     At least one character is available.
1483:Core/Src/SEGGER_RTT.c **** *
1484:Core/Src/SEGGER_RTT.c **** *  Notes
1485:Core/Src/SEGGER_RTT.c **** *    (1) This function is only specified for accesses to RTT buffer 0
1486:Core/Src/SEGGER_RTT.c **** */
1487:Core/Src/SEGGER_RTT.c **** int SEGGER_RTT_HasKey(void) {
 7924              		.loc 1 1487 29 is_stmt 1 view -0
 7925              		.cfi_startproc
 7926              		@ args = 0, pretend = 0, frame = 0
 7927              		@ frame_needed = 0, uses_anonymous_args = 0
1488:Core/Src/SEGGER_RTT.c ****   SEGGER_RTT_BUFFER_DOWN* pRing;
 7928              		.loc 1 1488 3 view .LVU3323
1489:Core/Src/SEGGER_RTT.c ****   unsigned RdOff;
 7929              		.loc 1 1489 3 view .LVU3324
1490:Core/Src/SEGGER_RTT.c ****   int r;
 7930              		.loc 1 1490 3 view .LVU3325
 7931              	.LBB460:
1491:Core/Src/SEGGER_RTT.c **** 
1492:Core/Src/SEGGER_RTT.c ****   INIT();
 7932              		.loc 1 1492 3 view .LVU3326
 7933              		.loc 1 1492 3 view .LVU3327
 7934              	.LVL764:
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccSC4OZm.s 			page 218


 7935              		.loc 1 1492 3 view .LVU3328
 7936              		.loc 1 1492 3 view .LVU3329
 7937              	.LBE460:
1487:Core/Src/SEGGER_RTT.c ****   SEGGER_RTT_BUFFER_DOWN* pRing;
 7938              		.loc 1 1487 29 is_stmt 0 view .LVU3330
 7939 0000 38B5     		push	{r3, r4, r5, lr}
 7940              		.cfi_def_cfa_offset 16
 7941              		.cfi_offset 3, -16
 7942              		.cfi_offset 4, -12
 7943              		.cfi_offset 5, -8
 7944              		.cfi_offset 14, -4
 7945              	.LBB463:
 7946              		.loc 1 1492 3 view .LVU3331
 7947 0002 224C     		ldr	r4, .L323
 7948 0004 2378     		ldrb	r3, [r4]	@ zero_extendqisi2
 7949 0006 2BB1     		cbz	r3, .L320
 7950              		.loc 1 1492 3 is_stmt 1 view .LVU3332
 7951              	.LBE463:
 7952              		.loc 1 1492 9 view .LVU3333
1493:Core/Src/SEGGER_RTT.c ****   pRing = (SEGGER_RTT_BUFFER_DOWN*)((char*)&_SEGGER_RTT.aDown[0] + SEGGER_RTT_UNCACHED_OFF);  // Ac
 7953              		.loc 1 1493 3 view .LVU3334
 7954              	.LVL765:
1494:Core/Src/SEGGER_RTT.c ****   RdOff = pRing->RdOff;
 7955              		.loc 1 1494 3 view .LVU3335
1495:Core/Src/SEGGER_RTT.c ****   if (RdOff != pRing->WrOff) {
 7956              		.loc 1 1495 3 view .LVU3336
1494:Core/Src/SEGGER_RTT.c ****   RdOff = pRing->RdOff;
 7957              		.loc 1 1494 9 is_stmt 0 view .LVU3337
 7958 0008 256F     		ldr	r5, [r4, #112]
 7959              		.loc 1 1495 21 view .LVU3338
 7960 000a E06E     		ldr	r0, [r4, #108]
 7961              	.LVL766:
1496:Core/Src/SEGGER_RTT.c ****     r = 1;
1497:Core/Src/SEGGER_RTT.c ****   } else {
1498:Core/Src/SEGGER_RTT.c ****     r = 0;
1499:Core/Src/SEGGER_RTT.c ****   }
1500:Core/Src/SEGGER_RTT.c ****   return r;
 7962              		.loc 1 1500 3 is_stmt 1 view .LVU3339
1501:Core/Src/SEGGER_RTT.c **** }
 7963              		.loc 1 1501 1 is_stmt 0 view .LVU3340
 7964 000c 401B     		subs	r0, r0, r5
 7965              	.LVL767:
 7966              		.loc 1 1501 1 view .LVU3341
 7967 000e 18BF     		it	ne
 7968 0010 0120     		movne	r0, #1
 7969 0012 38BD     		pop	{r3, r4, r5, pc}
 7970              	.LVL768:
 7971              	.L320:
 7972              		.loc 1 1501 1 view .LVU3342
 7973 0014 03F0FF05 		and	r5, r3, #255
 7974              	.LBB464:
1492:Core/Src/SEGGER_RTT.c ****   pRing = (SEGGER_RTT_BUFFER_DOWN*)((char*)&_SEGGER_RTT.aDown[0] + SEGGER_RTT_UNCACHED_OFF);  // Ac
 7975              		.loc 1 1492 3 is_stmt 1 view .LVU3343
 7976              	.LBB461:
 7977              	.LBI461:
 314:Core/Src/SEGGER_RTT.c ****   volatile SEGGER_RTT_CB* p;   // Volatile to make sure that compiler cannot change the order of ac
 7978              		.loc 1 314 13 view .LVU3344
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccSC4OZm.s 			page 219


 7979              	.LBB462:
 315:Core/Src/SEGGER_RTT.c ****   static const char _aInitStr[] = "\0\0\0\0\0\0TTR REGGES";  // Init complete ID string to make sur
 7980              		.loc 1 315 3 view .LVU3345
 316:Core/Src/SEGGER_RTT.c ****   unsigned i;
 7981              		.loc 1 316 3 view .LVU3346
 317:Core/Src/SEGGER_RTT.c ****   //
 7982              		.loc 1 317 3 view .LVU3347
 321:Core/Src/SEGGER_RTT.c ****   memset((SEGGER_RTT_CB*)p, 0, sizeof(_SEGGER_RTT));         // Make sure that the RTT CB is always
 7983              		.loc 1 321 3 view .LVU3348
 7984              	.LVL769:
 322:Core/Src/SEGGER_RTT.c ****   p->MaxNumUpBuffers    = SEGGER_RTT_MAX_NUM_UP_BUFFERS;
 7985              		.loc 1 322 3 view .LVU3349
 7986 0018 2946     		mov	r1, r5
 7987 001a 7822     		movs	r2, #120
 7988 001c 04F13000 		add	r0, r4, #48
 7989 0020 FFF7FEFF 		bl	memset
 7990              	.LVL770:
 323:Core/Src/SEGGER_RTT.c ****   p->MaxNumDownBuffers  = SEGGER_RTT_MAX_NUM_DOWN_BUFFERS;
 7991              		.loc 1 323 3 view .LVU3350
 323:Core/Src/SEGGER_RTT.c ****   p->MaxNumDownBuffers  = SEGGER_RTT_MAX_NUM_DOWN_BUFFERS;
 7992              		.loc 1 323 25 is_stmt 0 view .LVU3351
 7993 0024 0322     		movs	r2, #3
 7994 0026 2261     		str	r2, [r4, #16]
 324:Core/Src/SEGGER_RTT.c ****   //
 7995              		.loc 1 324 3 is_stmt 1 view .LVU3352
 328:Core/Src/SEGGER_RTT.c ****   p->aUp[0].pBuffer       = _acUpBuffer;
 7996              		.loc 1 328 27 is_stmt 0 view .LVU3353
 7997 0028 194B     		ldr	r3, .L323+4
 324:Core/Src/SEGGER_RTT.c ****   //
 7998              		.loc 1 324 25 view .LVU3354
 7999 002a 6261     		str	r2, [r4, #20]
 328:Core/Src/SEGGER_RTT.c ****   p->aUp[0].pBuffer       = _acUpBuffer;
 8000              		.loc 1 328 3 is_stmt 1 view .LVU3355
 329:Core/Src/SEGGER_RTT.c ****   p->aUp[0].SizeOfBuffer  = BUFFER_SIZE_UP;
 8001              		.loc 1 329 27 is_stmt 0 view .LVU3356
 8002 002c 1949     		ldr	r1, .L323+8
 328:Core/Src/SEGGER_RTT.c ****   p->aUp[0].pBuffer       = _acUpBuffer;
 8003              		.loc 1 328 27 view .LVU3357
 8004 002e A361     		str	r3, [r4, #24]
 329:Core/Src/SEGGER_RTT.c ****   p->aUp[0].SizeOfBuffer  = BUFFER_SIZE_UP;
 8005              		.loc 1 329 3 is_stmt 1 view .LVU3358
 330:Core/Src/SEGGER_RTT.c ****   p->aUp[0].RdOff         = 0u;
 8006              		.loc 1 330 27 is_stmt 0 view .LVU3359
 8007 0030 4FF48062 		mov	r2, #1024
 329:Core/Src/SEGGER_RTT.c ****   p->aUp[0].SizeOfBuffer  = BUFFER_SIZE_UP;
 8008              		.loc 1 329 27 view .LVU3360
 8009 0034 E161     		str	r1, [r4, #28]
 330:Core/Src/SEGGER_RTT.c ****   p->aUp[0].RdOff         = 0u;
 8010              		.loc 1 330 3 is_stmt 1 view .LVU3361
 330:Core/Src/SEGGER_RTT.c ****   p->aUp[0].RdOff         = 0u;
 8011              		.loc 1 330 27 is_stmt 0 view .LVU3362
 8012 0036 2262     		str	r2, [r4, #32]
 331:Core/Src/SEGGER_RTT.c ****   p->aUp[0].WrOff         = 0u;
 8013              		.loc 1 331 3 is_stmt 1 view .LVU3363
 338:Core/Src/SEGGER_RTT.c ****   p->aDown[0].SizeOfBuffer  = BUFFER_SIZE_DOWN;
 8014              		.loc 1 338 29 is_stmt 0 view .LVU3364
 8015 0038 1749     		ldr	r1, .L323+12
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccSC4OZm.s 			page 220


 331:Core/Src/SEGGER_RTT.c ****   p->aUp[0].WrOff         = 0u;
 8016              		.loc 1 331 27 view .LVU3365
 8017 003a A562     		str	r5, [r4, #40]
 332:Core/Src/SEGGER_RTT.c ****   p->aUp[0].Flags         = SEGGER_RTT_MODE_DEFAULT;
 8018              		.loc 1 332 3 is_stmt 1 view .LVU3366
 339:Core/Src/SEGGER_RTT.c ****   p->aDown[0].RdOff         = 0u;
 8019              		.loc 1 339 29 is_stmt 0 view .LVU3367
 8020 003c 1022     		movs	r2, #16
 332:Core/Src/SEGGER_RTT.c ****   p->aUp[0].Flags         = SEGGER_RTT_MODE_DEFAULT;
 8021              		.loc 1 332 27 view .LVU3368
 8022 003e 6562     		str	r5, [r4, #36]
 333:Core/Src/SEGGER_RTT.c ****   //
 8023              		.loc 1 333 3 is_stmt 1 view .LVU3369
 333:Core/Src/SEGGER_RTT.c ****   //
 8024              		.loc 1 333 27 is_stmt 0 view .LVU3370
 8025 0040 E562     		str	r5, [r4, #44]
 337:Core/Src/SEGGER_RTT.c ****   p->aDown[0].pBuffer       = _acDownBuffer;
 8026              		.loc 1 337 3 is_stmt 1 view .LVU3371
 337:Core/Src/SEGGER_RTT.c ****   p->aDown[0].pBuffer       = _acDownBuffer;
 8027              		.loc 1 337 29 is_stmt 0 view .LVU3372
 8028 0042 2366     		str	r3, [r4, #96]
 338:Core/Src/SEGGER_RTT.c ****   p->aDown[0].SizeOfBuffer  = BUFFER_SIZE_DOWN;
 8029              		.loc 1 338 3 is_stmt 1 view .LVU3373
 338:Core/Src/SEGGER_RTT.c ****   p->aDown[0].SizeOfBuffer  = BUFFER_SIZE_DOWN;
 8030              		.loc 1 338 29 is_stmt 0 view .LVU3374
 8031 0044 6166     		str	r1, [r4, #100]
 339:Core/Src/SEGGER_RTT.c ****   p->aDown[0].RdOff         = 0u;
 8032              		.loc 1 339 3 is_stmt 1 view .LVU3375
 339:Core/Src/SEGGER_RTT.c ****   p->aDown[0].RdOff         = 0u;
 8033              		.loc 1 339 29 is_stmt 0 view .LVU3376
 8034 0046 A266     		str	r2, [r4, #104]
 340:Core/Src/SEGGER_RTT.c ****   p->aDown[0].WrOff         = 0u;
 8035              		.loc 1 340 3 is_stmt 1 view .LVU3377
 340:Core/Src/SEGGER_RTT.c ****   p->aDown[0].WrOff         = 0u;
 8036              		.loc 1 340 29 is_stmt 0 view .LVU3378
 8037 0048 2567     		str	r5, [r4, #112]
 341:Core/Src/SEGGER_RTT.c ****   p->aDown[0].Flags         = SEGGER_RTT_MODE_DEFAULT;
 8038              		.loc 1 341 3 is_stmt 1 view .LVU3379
 341:Core/Src/SEGGER_RTT.c ****   p->aDown[0].Flags         = SEGGER_RTT_MODE_DEFAULT;
 8039              		.loc 1 341 29 is_stmt 0 view .LVU3380
 8040 004a E566     		str	r5, [r4, #108]
 342:Core/Src/SEGGER_RTT.c ****   //
 8041              		.loc 1 342 3 is_stmt 1 view .LVU3381
 342:Core/Src/SEGGER_RTT.c ****   //
 8042              		.loc 1 342 29 is_stmt 0 view .LVU3382
 8043 004c 6567     		str	r5, [r4, #116]
 348:Core/Src/SEGGER_RTT.c ****   for (i = 0; i < sizeof(_aInitStr) - 1; ++i) {
 8044              		.loc 1 348 3 is_stmt 1 view .LVU3383
 8045              		.syntax unified
 8046              	@ 348 "Core/Src/SEGGER_RTT.c" 1
 8047 004e BFF35F8F 		dmb
 8048              	
 8049              	@ 0 "" 2
 348:Core/Src/SEGGER_RTT.c ****   for (i = 0; i < sizeof(_aInitStr) - 1; ++i) {
 8050              		.loc 1 348 13 view .LVU3384
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 8051              		.loc 1 349 3 view .LVU3385
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccSC4OZm.s 			page 221


 8052              	.LVL771:
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 8053              		.loc 1 349 17 view .LVU3386
 350:Core/Src/SEGGER_RTT.c ****   }
 8054              		.loc 1 350 5 view .LVU3387
 350:Core/Src/SEGGER_RTT.c ****   }
 8055              		.loc 1 350 16 is_stmt 0 view .LVU3388
 8056              		.thumb
 8057              		.syntax unified
 8058 0052 4521     		movs	r1, #69
 8059 0054 4723     		movs	r3, #71
 8060 0056 5320     		movs	r0, #83
 8061 0058 2070     		strb	r0, [r4]
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 8062              		.loc 1 349 42 is_stmt 1 view .LVU3389
 8063              	.LVL772:
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 8064              		.loc 1 349 17 view .LVU3390
 350:Core/Src/SEGGER_RTT.c ****   }
 8065              		.loc 1 350 5 view .LVU3391
 350:Core/Src/SEGGER_RTT.c ****   }
 8066              		.loc 1 350 16 is_stmt 0 view .LVU3392
 8067 005a 5222     		movs	r2, #82
 8068 005c 6170     		strb	r1, [r4, #1]
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 8069              		.loc 1 349 42 is_stmt 1 view .LVU3393
 8070              	.LVL773:
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 8071              		.loc 1 349 17 view .LVU3394
 350:Core/Src/SEGGER_RTT.c ****   }
 8072              		.loc 1 350 5 view .LVU3395
 350:Core/Src/SEGGER_RTT.c ****   }
 8073              		.loc 1 350 16 is_stmt 0 view .LVU3396
 8074 005e 2020     		movs	r0, #32
 8075 0060 A370     		strb	r3, [r4, #2]
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 8076              		.loc 1 349 42 is_stmt 1 view .LVU3397
 8077              	.LVL774:
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 8078              		.loc 1 349 17 view .LVU3398
 350:Core/Src/SEGGER_RTT.c ****   }
 8079              		.loc 1 350 5 view .LVU3399
 350:Core/Src/SEGGER_RTT.c ****   }
 8080              		.loc 1 350 16 is_stmt 0 view .LVU3400
 8081 0062 E370     		strb	r3, [r4, #3]
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 8082              		.loc 1 349 42 is_stmt 1 view .LVU3401
 8083              	.LVL775:
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 8084              		.loc 1 349 17 view .LVU3402
 350:Core/Src/SEGGER_RTT.c ****   }
 8085              		.loc 1 350 5 view .LVU3403
 350:Core/Src/SEGGER_RTT.c ****   }
 8086              		.loc 1 350 16 is_stmt 0 view .LVU3404
 8087 0064 5423     		movs	r3, #84
 8088 0066 2171     		strb	r1, [r4, #4]
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccSC4OZm.s 			page 222


 8089              		.loc 1 349 42 is_stmt 1 view .LVU3405
 8090              	.LVL776:
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 8091              		.loc 1 349 17 view .LVU3406
 350:Core/Src/SEGGER_RTT.c ****   }
 8092              		.loc 1 350 5 view .LVU3407
 350:Core/Src/SEGGER_RTT.c ****   }
 8093              		.loc 1 350 16 is_stmt 0 view .LVU3408
 8094 0068 6271     		strb	r2, [r4, #5]
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 8095              		.loc 1 349 42 is_stmt 1 view .LVU3409
 8096              	.LVL777:
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 8097              		.loc 1 349 17 view .LVU3410
 350:Core/Src/SEGGER_RTT.c ****   }
 8098              		.loc 1 350 5 view .LVU3411
 350:Core/Src/SEGGER_RTT.c ****   }
 8099              		.loc 1 350 16 is_stmt 0 view .LVU3412
 8100 006a A071     		strb	r0, [r4, #6]
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 8101              		.loc 1 349 42 is_stmt 1 view .LVU3413
 8102              	.LVL778:
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 8103              		.loc 1 349 17 view .LVU3414
 350:Core/Src/SEGGER_RTT.c ****   }
 8104              		.loc 1 350 5 view .LVU3415
 350:Core/Src/SEGGER_RTT.c ****   }
 8105              		.loc 1 350 16 is_stmt 0 view .LVU3416
 8106 006c E271     		strb	r2, [r4, #7]
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 8107              		.loc 1 349 42 is_stmt 1 view .LVU3417
 8108              	.LVL779:
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 8109              		.loc 1 349 17 view .LVU3418
 350:Core/Src/SEGGER_RTT.c ****   }
 8110              		.loc 1 350 5 view .LVU3419
 350:Core/Src/SEGGER_RTT.c ****   }
 8111              		.loc 1 350 16 is_stmt 0 view .LVU3420
 8112 006e 2372     		strb	r3, [r4, #8]
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 8113              		.loc 1 349 42 is_stmt 1 view .LVU3421
 8114              	.LVL780:
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 8115              		.loc 1 349 17 view .LVU3422
 350:Core/Src/SEGGER_RTT.c ****   }
 8116              		.loc 1 350 5 view .LVU3423
 350:Core/Src/SEGGER_RTT.c ****   }
 8117              		.loc 1 350 16 is_stmt 0 view .LVU3424
 8118 0070 6372     		strb	r3, [r4, #9]
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 8119              		.loc 1 349 42 is_stmt 1 view .LVU3425
 8120              	.LVL781:
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 8121              		.loc 1 349 17 view .LVU3426
 350:Core/Src/SEGGER_RTT.c ****   }
 8122              		.loc 1 350 5 view .LVU3427
 350:Core/Src/SEGGER_RTT.c ****   }
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccSC4OZm.s 			page 223


 8123              		.loc 1 350 16 is_stmt 0 view .LVU3428
 8124 0072 A572     		strb	r5, [r4, #10]
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 8125              		.loc 1 349 42 is_stmt 1 view .LVU3429
 8126              	.LVL782:
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 8127              		.loc 1 349 17 view .LVU3430
 350:Core/Src/SEGGER_RTT.c ****   }
 8128              		.loc 1 350 5 view .LVU3431
 350:Core/Src/SEGGER_RTT.c ****   }
 8129              		.loc 1 350 16 is_stmt 0 view .LVU3432
 8130 0074 E572     		strb	r5, [r4, #11]
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 8131              		.loc 1 349 42 is_stmt 1 view .LVU3433
 8132              	.LVL783:
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 8133              		.loc 1 349 17 view .LVU3434
 350:Core/Src/SEGGER_RTT.c ****   }
 8134              		.loc 1 350 5 view .LVU3435
 350:Core/Src/SEGGER_RTT.c ****   }
 8135              		.loc 1 350 16 is_stmt 0 view .LVU3436
 8136 0076 2573     		strb	r5, [r4, #12]
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 8137              		.loc 1 349 42 is_stmt 1 view .LVU3437
 8138              	.LVL784:
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 8139              		.loc 1 349 17 view .LVU3438
 350:Core/Src/SEGGER_RTT.c ****   }
 8140              		.loc 1 350 5 view .LVU3439
 350:Core/Src/SEGGER_RTT.c ****   }
 8141              		.loc 1 350 16 is_stmt 0 view .LVU3440
 8142 0078 6573     		strb	r5, [r4, #13]
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 8143              		.loc 1 349 42 is_stmt 1 view .LVU3441
 8144              	.LVL785:
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 8145              		.loc 1 349 17 view .LVU3442
 350:Core/Src/SEGGER_RTT.c ****   }
 8146              		.loc 1 350 5 view .LVU3443
 350:Core/Src/SEGGER_RTT.c ****   }
 8147              		.loc 1 350 16 is_stmt 0 view .LVU3444
 8148 007a A573     		strb	r5, [r4, #14]
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 8149              		.loc 1 349 42 is_stmt 1 view .LVU3445
 8150              	.LVL786:
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 8151              		.loc 1 349 17 view .LVU3446
 350:Core/Src/SEGGER_RTT.c ****   }
 8152              		.loc 1 350 5 view .LVU3447
 350:Core/Src/SEGGER_RTT.c ****   }
 8153              		.loc 1 350 16 is_stmt 0 view .LVU3448
 8154 007c E573     		strb	r5, [r4, #15]
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 8155              		.loc 1 349 42 is_stmt 1 view .LVU3449
 8156              	.LVL787:
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 8157              		.loc 1 349 17 view .LVU3450
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccSC4OZm.s 			page 224


 352:Core/Src/SEGGER_RTT.c **** }
 8158              		.loc 1 352 3 view .LVU3451
 8159              		.syntax unified
 8160              	@ 352 "Core/Src/SEGGER_RTT.c" 1
 8161 007e BFF35F8F 		dmb
 8162              	
 8163              	@ 0 "" 2
 352:Core/Src/SEGGER_RTT.c **** }
 8164              		.loc 1 352 13 view .LVU3452
 8165              	.LVL788:
 352:Core/Src/SEGGER_RTT.c **** }
 8166              		.loc 1 352 13 is_stmt 0 view .LVU3453
 8167              		.thumb
 8168              		.syntax unified
 8169              	.LBE462:
 8170              	.LBE461:
1492:Core/Src/SEGGER_RTT.c ****   pRing = (SEGGER_RTT_BUFFER_DOWN*)((char*)&_SEGGER_RTT.aDown[0] + SEGGER_RTT_UNCACHED_OFF);  // Ac
 8171              		.loc 1 1492 3 is_stmt 1 view .LVU3454
 8172              	.LBE464:
1492:Core/Src/SEGGER_RTT.c ****   pRing = (SEGGER_RTT_BUFFER_DOWN*)((char*)&_SEGGER_RTT.aDown[0] + SEGGER_RTT_UNCACHED_OFF);  // Ac
 8173              		.loc 1 1492 9 view .LVU3455
1493:Core/Src/SEGGER_RTT.c ****   RdOff = pRing->RdOff;
 8174              		.loc 1 1493 3 view .LVU3456
1494:Core/Src/SEGGER_RTT.c ****   if (RdOff != pRing->WrOff) {
 8175              		.loc 1 1494 3 view .LVU3457
1495:Core/Src/SEGGER_RTT.c ****     r = 1;
 8176              		.loc 1 1495 3 view .LVU3458
1495:Core/Src/SEGGER_RTT.c ****     r = 1;
 8177              		.loc 1 1495 21 is_stmt 0 view .LVU3459
 8178 0082 E06E     		ldr	r0, [r4, #108]
 8179              	.LVL789:
1500:Core/Src/SEGGER_RTT.c **** }
 8180              		.loc 1 1500 3 is_stmt 1 view .LVU3460
 8181              		.loc 1 1501 1 is_stmt 0 view .LVU3461
 8182 0084 401B     		subs	r0, r0, r5
 8183              	.LVL790:
 8184              		.loc 1 1501 1 view .LVU3462
 8185 0086 18BF     		it	ne
 8186 0088 0120     		movne	r0, #1
 8187 008a 38BD     		pop	{r3, r4, r5, pc}
 8188              	.LVL791:
 8189              	.L324:
 8190              		.loc 1 1501 1 view .LVU3463
 8191              		.align	2
 8192              	.L323:
 8193 008c 00000000 		.word	.LANCHOR0
 8194 0090 00000000 		.word	.LC0
 8195 0094 00000000 		.word	.LANCHOR1
 8196 0098 00000000 		.word	.LANCHOR2
 8197              		.cfi_endproc
 8198              	.LFE20:
 8200              		.section	.text.SEGGER_RTT_HasData,"ax",%progbits
 8201              		.align	1
 8202              		.p2align 2,,3
 8203              		.global	SEGGER_RTT_HasData
 8204              		.syntax unified
 8205              		.thumb
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccSC4OZm.s 			page 225


 8206              		.thumb_func
 8208              	SEGGER_RTT_HasData:
 8209              	.LVL792:
 8210              	.LFB21:
1502:Core/Src/SEGGER_RTT.c **** 
1503:Core/Src/SEGGER_RTT.c **** /*********************************************************************
1504:Core/Src/SEGGER_RTT.c **** *
1505:Core/Src/SEGGER_RTT.c **** *       SEGGER_RTT_HasData
1506:Core/Src/SEGGER_RTT.c **** *
1507:Core/Src/SEGGER_RTT.c **** *  Function description
1508:Core/Src/SEGGER_RTT.c **** *    Check if there is data from the host in the given buffer.
1509:Core/Src/SEGGER_RTT.c **** *
1510:Core/Src/SEGGER_RTT.c **** *  Return value:
1511:Core/Src/SEGGER_RTT.c **** *  ==0:  No data
1512:Core/Src/SEGGER_RTT.c **** *  !=0:  Data in buffer
1513:Core/Src/SEGGER_RTT.c **** *
1514:Core/Src/SEGGER_RTT.c **** */
1515:Core/Src/SEGGER_RTT.c **** unsigned SEGGER_RTT_HasData(unsigned BufferIndex) {
 8211              		.loc 1 1515 51 is_stmt 1 view -0
 8212              		.cfi_startproc
 8213              		@ args = 0, pretend = 0, frame = 0
 8214              		@ frame_needed = 0, uses_anonymous_args = 0
 8215              		@ link register save eliminated.
1516:Core/Src/SEGGER_RTT.c ****   SEGGER_RTT_BUFFER_DOWN* pRing;
 8216              		.loc 1 1516 3 view .LVU3465
1517:Core/Src/SEGGER_RTT.c ****   unsigned                v;
 8217              		.loc 1 1517 3 view .LVU3466
1518:Core/Src/SEGGER_RTT.c **** 
1519:Core/Src/SEGGER_RTT.c ****   pRing = (SEGGER_RTT_BUFFER_DOWN*)((char*)&_SEGGER_RTT.aDown[BufferIndex] + SEGGER_RTT_UNCACHED_OF
 8218              		.loc 1 1519 3 view .LVU3467
1520:Core/Src/SEGGER_RTT.c ****   v = pRing->WrOff;
 8219              		.loc 1 1520 3 view .LVU3468
 8220              		.loc 1 1520 5 is_stmt 0 view .LVU3469
 8221 0000 044B     		ldr	r3, .L326
 8222 0002 00EB4000 		add	r0, r0, r0, lsl #1
 8223              	.LVL793:
 8224              		.loc 1 1520 5 view .LVU3470
 8225 0006 03EBC003 		add	r3, r3, r0, lsl #3
 8226 000a D86E     		ldr	r0, [r3, #108]
 8227              	.LVL794:
1521:Core/Src/SEGGER_RTT.c ****   return v - pRing->RdOff;
 8228              		.loc 1 1521 3 is_stmt 1 view .LVU3471
 8229              		.loc 1 1521 12 is_stmt 0 view .LVU3472
 8230 000c 1B6F     		ldr	r3, [r3, #112]
1522:Core/Src/SEGGER_RTT.c **** }
 8231              		.loc 1 1522 1 view .LVU3473
 8232 000e C01A     		subs	r0, r0, r3
 8233              	.LVL795:
 8234              		.loc 1 1522 1 view .LVU3474
 8235 0010 7047     		bx	lr
 8236              	.L327:
 8237 0012 00BF     		.align	2
 8238              	.L326:
 8239 0014 00000000 		.word	.LANCHOR0
 8240              		.cfi_endproc
 8241              	.LFE21:
 8243              		.section	.text.SEGGER_RTT_HasDataUp,"ax",%progbits
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccSC4OZm.s 			page 226


 8244              		.align	1
 8245              		.p2align 2,,3
 8246              		.global	SEGGER_RTT_HasDataUp
 8247              		.syntax unified
 8248              		.thumb
 8249              		.thumb_func
 8251              	SEGGER_RTT_HasDataUp:
 8252              	.LVL796:
 8253              	.LFB22:
1523:Core/Src/SEGGER_RTT.c **** 
1524:Core/Src/SEGGER_RTT.c **** /*********************************************************************
1525:Core/Src/SEGGER_RTT.c **** *
1526:Core/Src/SEGGER_RTT.c **** *       SEGGER_RTT_HasDataUp
1527:Core/Src/SEGGER_RTT.c **** *
1528:Core/Src/SEGGER_RTT.c **** *  Function description
1529:Core/Src/SEGGER_RTT.c **** *    Check if there is data remaining to be sent in the given buffer.
1530:Core/Src/SEGGER_RTT.c **** *
1531:Core/Src/SEGGER_RTT.c **** *  Return value:
1532:Core/Src/SEGGER_RTT.c **** *  ==0:  No data
1533:Core/Src/SEGGER_RTT.c **** *  !=0:  Data in buffer
1534:Core/Src/SEGGER_RTT.c **** *
1535:Core/Src/SEGGER_RTT.c **** */
1536:Core/Src/SEGGER_RTT.c **** unsigned SEGGER_RTT_HasDataUp(unsigned BufferIndex) {
 8254              		.loc 1 1536 53 is_stmt 1 view -0
 8255              		.cfi_startproc
 8256              		@ args = 0, pretend = 0, frame = 0
 8257              		@ frame_needed = 0, uses_anonymous_args = 0
 8258              		@ link register save eliminated.
1537:Core/Src/SEGGER_RTT.c ****   SEGGER_RTT_BUFFER_UP* pRing;
 8259              		.loc 1 1537 3 view .LVU3476
1538:Core/Src/SEGGER_RTT.c ****   unsigned                v;
 8260              		.loc 1 1538 3 view .LVU3477
1539:Core/Src/SEGGER_RTT.c **** 
1540:Core/Src/SEGGER_RTT.c ****   pRing = (SEGGER_RTT_BUFFER_UP*)((char*)&_SEGGER_RTT.aUp[BufferIndex] + SEGGER_RTT_UNCACHED_OFF); 
 8261              		.loc 1 1540 3 view .LVU3478
1541:Core/Src/SEGGER_RTT.c ****   v = pRing->RdOff;
 8262              		.loc 1 1541 3 view .LVU3479
 8263              		.loc 1 1541 5 is_stmt 0 view .LVU3480
 8264 0000 044B     		ldr	r3, .L329
 8265 0002 00EB4000 		add	r0, r0, r0, lsl #1
 8266              	.LVL797:
 8267              		.loc 1 1541 5 view .LVU3481
 8268 0006 03EBC003 		add	r3, r3, r0, lsl #3
 8269 000a 9A6A     		ldr	r2, [r3, #40]
 8270              	.LVL798:
1542:Core/Src/SEGGER_RTT.c ****   return pRing->WrOff - v;
 8271              		.loc 1 1542 3 is_stmt 1 view .LVU3482
 8272              		.loc 1 1542 23 is_stmt 0 view .LVU3483
 8273 000c 586A     		ldr	r0, [r3, #36]
1543:Core/Src/SEGGER_RTT.c **** }
 8274              		.loc 1 1543 1 view .LVU3484
 8275 000e 801A     		subs	r0, r0, r2
 8276 0010 7047     		bx	lr
 8277              	.L330:
 8278 0012 00BF     		.align	2
 8279              	.L329:
 8280 0014 00000000 		.word	.LANCHOR0
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccSC4OZm.s 			page 227


 8281              		.cfi_endproc
 8282              	.LFE22:
 8284              		.section	.text.SEGGER_RTT_AllocDownBuffer,"ax",%progbits
 8285              		.align	1
 8286              		.p2align 2,,3
 8287              		.global	SEGGER_RTT_AllocDownBuffer
 8288              		.syntax unified
 8289              		.thumb
 8290              		.thumb_func
 8292              	SEGGER_RTT_AllocDownBuffer:
 8293              	.LVL799:
 8294              	.LFB23:
1544:Core/Src/SEGGER_RTT.c **** 
1545:Core/Src/SEGGER_RTT.c **** /*********************************************************************
1546:Core/Src/SEGGER_RTT.c **** *
1547:Core/Src/SEGGER_RTT.c **** *       SEGGER_RTT_AllocDownBuffer
1548:Core/Src/SEGGER_RTT.c **** *
1549:Core/Src/SEGGER_RTT.c **** *  Function description
1550:Core/Src/SEGGER_RTT.c **** *    Run-time configuration of the next down-buffer (H->T).
1551:Core/Src/SEGGER_RTT.c **** *    The next buffer, which is not used yet is configured.
1552:Core/Src/SEGGER_RTT.c **** *    This includes: Buffer address, size, name, flags, ...
1553:Core/Src/SEGGER_RTT.c **** *
1554:Core/Src/SEGGER_RTT.c **** *  Parameters
1555:Core/Src/SEGGER_RTT.c **** *    sName        Pointer to a constant name string.
1556:Core/Src/SEGGER_RTT.c **** *    pBuffer      Pointer to a buffer to be used.
1557:Core/Src/SEGGER_RTT.c **** *    BufferSize   Size of the buffer.
1558:Core/Src/SEGGER_RTT.c **** *    Flags        Operating modes. Define behavior if buffer is full (not enough space for entire m
1559:Core/Src/SEGGER_RTT.c **** *                 Flags[31:24] are used for validity check and must be zero. Flags[23:2] are reserv
1560:Core/Src/SEGGER_RTT.c **** *
1561:Core/Src/SEGGER_RTT.c **** *  Return value
1562:Core/Src/SEGGER_RTT.c **** *    >= 0 - O.K. Buffer Index
1563:Core/Src/SEGGER_RTT.c **** *     < 0 - Error
1564:Core/Src/SEGGER_RTT.c **** */
1565:Core/Src/SEGGER_RTT.c **** int SEGGER_RTT_AllocDownBuffer(const char* sName, void* pBuffer, unsigned BufferSize, unsigned Flag
 8295              		.loc 1 1565 103 is_stmt 1 view -0
 8296              		.cfi_startproc
 8297              		@ args = 0, pretend = 0, frame = 0
 8298              		@ frame_needed = 0, uses_anonymous_args = 0
1566:Core/Src/SEGGER_RTT.c ****   int BufferIndex;
 8299              		.loc 1 1566 3 view .LVU3486
1567:Core/Src/SEGGER_RTT.c ****   volatile SEGGER_RTT_CB* pRTTCB;
 8300              		.loc 1 1567 3 view .LVU3487
 8301              	.LBB469:
1568:Core/Src/SEGGER_RTT.c **** 
1569:Core/Src/SEGGER_RTT.c ****   INIT();
 8302              		.loc 1 1569 3 view .LVU3488
 8303              		.loc 1 1569 3 view .LVU3489
 8304              		.loc 1 1569 3 view .LVU3490
 8305              		.loc 1 1569 3 view .LVU3491
 8306              	.LBE469:
1565:Core/Src/SEGGER_RTT.c ****   int BufferIndex;
 8307              		.loc 1 1565 103 is_stmt 0 view .LVU3492
 8308 0000 2DE9F843 		push	{r3, r4, r5, r6, r7, r8, r9, lr}
 8309              		.cfi_def_cfa_offset 32
 8310              		.cfi_offset 3, -32
 8311              		.cfi_offset 4, -28
 8312              		.cfi_offset 5, -24
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccSC4OZm.s 			page 228


 8313              		.cfi_offset 6, -20
 8314              		.cfi_offset 7, -16
 8315              		.cfi_offset 8, -12
 8316              		.cfi_offset 9, -8
 8317              		.cfi_offset 14, -4
 8318              	.LBB472:
 8319              		.loc 1 1569 3 view .LVU3493
 8320 0004 3A4C     		ldr	r4, .L345
 8321              	.LBE472:
1565:Core/Src/SEGGER_RTT.c ****   int BufferIndex;
 8322              		.loc 1 1565 103 view .LVU3494
 8323 0006 1E46     		mov	r6, r3
 8324              	.LBB473:
 8325              		.loc 1 1569 3 view .LVU3495
 8326 0008 2378     		ldrb	r3, [r4]	@ zero_extendqisi2
 8327              	.LVL800:
 8328              		.loc 1 1569 3 view .LVU3496
 8329              	.LBE473:
1565:Core/Src/SEGGER_RTT.c ****   int BufferIndex;
 8330              		.loc 1 1565 103 view .LVU3497
 8331 000a 8146     		mov	r9, r0
 8332 000c 8846     		mov	r8, r1
 8333 000e 1746     		mov	r7, r2
 8334              	.LBB474:
 8335              		.loc 1 1569 3 view .LVU3498
 8336 0010 002B     		cmp	r3, #0
 8337 0012 2CD0     		beq	.L344
 8338              	.LVL801:
 8339              	.L332:
 8340              		.loc 1 1569 3 is_stmt 1 discriminator 3 view .LVU3499
 8341              	.LBE474:
 8342              		.loc 1 1569 9 discriminator 3 view .LVU3500
 8343              	.LBB475:
1570:Core/Src/SEGGER_RTT.c ****   SEGGER_RTT_LOCK();
 8344              		.loc 1 1570 3 discriminator 3 view .LVU3501
 8345              		.loc 1 1570 3 discriminator 3 view .LVU3502
 8346              		.syntax unified
 8347              	@ 1570 "Core/Src/SEGGER_RTT.c" 1
 8348 0014 EFF31182 		mrs   r2, basepri  
 8349 0018 4FF02001 		mov   r1, #32       
 8350 001c 81F31188 		msr   basepri, r1  
 8351              		
 8352              	@ 0 "" 2
 8353              	.LVL802:
 8354              		.loc 1 1570 20 discriminator 3 view .LVU3503
1571:Core/Src/SEGGER_RTT.c ****   pRTTCB = (volatile SEGGER_RTT_CB*)((unsigned char*)&_SEGGER_RTT + SEGGER_RTT_UNCACHED_OFF);  // A
 8355              		.loc 1 1571 3 discriminator 3 view .LVU3504
1572:Core/Src/SEGGER_RTT.c ****   BufferIndex = 0;
 8356              		.loc 1 1572 3 discriminator 3 view .LVU3505
1573:Core/Src/SEGGER_RTT.c ****   do {
 8357              		.loc 1 1573 3 discriminator 3 view .LVU3506
1574:Core/Src/SEGGER_RTT.c ****     if (pRTTCB->aDown[BufferIndex].pBuffer == NULL) {
 8358              		.loc 1 1574 5 discriminator 3 view .LVU3507
 8359              		.loc 1 1574 35 is_stmt 0 discriminator 3 view .LVU3508
 8360              		.thumb
 8361              		.syntax unified
 8362 0020 606E     		ldr	r0, [r4, #100]
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccSC4OZm.s 			page 229


 8363              		.loc 1 1574 8 discriminator 3 view .LVU3509
 8364 0022 70B1     		cbz	r0, .L335
1575:Core/Src/SEGGER_RTT.c ****       break;
1576:Core/Src/SEGGER_RTT.c ****     }
1577:Core/Src/SEGGER_RTT.c ****     BufferIndex++;
 8365              		.loc 1 1577 5 is_stmt 1 view .LVU3510
 8366              	.LVL803:
1578:Core/Src/SEGGER_RTT.c ****   } while (BufferIndex < pRTTCB->MaxNumDownBuffers);
 8367              		.loc 1 1578 24 view .LVU3511
 8368              		.loc 1 1578 32 is_stmt 0 view .LVU3512
 8369 0024 6369     		ldr	r3, [r4, #20]
 8370              		.loc 1 1578 24 view .LVU3513
 8371 0026 012B     		cmp	r3, #1
 8372 0028 5BDD     		ble	.L339
1573:Core/Src/SEGGER_RTT.c ****     if (pRTTCB->aDown[BufferIndex].pBuffer == NULL) {
 8373              		.loc 1 1573 3 is_stmt 1 view .LVU3514
1574:Core/Src/SEGGER_RTT.c ****       break;
 8374              		.loc 1 1574 5 view .LVU3515
1574:Core/Src/SEGGER_RTT.c ****       break;
 8375              		.loc 1 1574 35 is_stmt 0 view .LVU3516
 8376 002a E36F     		ldr	r3, [r4, #124]
1574:Core/Src/SEGGER_RTT.c ****       break;
 8377              		.loc 1 1574 8 view .LVU3517
 8378 002c 002B     		cmp	r3, #0
 8379 002e 58D0     		beq	.L339
1577:Core/Src/SEGGER_RTT.c ****   } while (BufferIndex < pRTTCB->MaxNumDownBuffers);
 8380              		.loc 1 1577 5 is_stmt 1 view .LVU3518
 8381              	.LVL804:
 8382              		.loc 1 1578 24 view .LVU3519
 8383              		.loc 1 1578 32 is_stmt 0 view .LVU3520
 8384 0030 6369     		ldr	r3, [r4, #20]
 8385              		.loc 1 1578 24 view .LVU3521
 8386 0032 022B     		cmp	r3, #2
 8387 0034 57DD     		ble	.L341
1573:Core/Src/SEGGER_RTT.c ****     if (pRTTCB->aDown[BufferIndex].pBuffer == NULL) {
 8388              		.loc 1 1573 3 is_stmt 1 view .LVU3522
1574:Core/Src/SEGGER_RTT.c ****       break;
 8389              		.loc 1 1574 5 view .LVU3523
1574:Core/Src/SEGGER_RTT.c ****       break;
 8390              		.loc 1 1574 35 is_stmt 0 view .LVU3524
 8391 0036 D4F89430 		ldr	r3, [r4, #148]
1574:Core/Src/SEGGER_RTT.c ****       break;
 8392              		.loc 1 1574 8 view .LVU3525
 8393 003a 002B     		cmp	r3, #0
 8394 003c 53D0     		beq	.L341
1577:Core/Src/SEGGER_RTT.c ****   } while (BufferIndex < pRTTCB->MaxNumDownBuffers);
 8395              		.loc 1 1577 5 is_stmt 1 view .LVU3526
 8396              	.LVL805:
 8397              		.loc 1 1578 24 view .LVU3527
 8398              		.loc 1 1578 32 is_stmt 0 view .LVU3528
 8399 003e 6369     		ldr	r3, [r4, #20]
1577:Core/Src/SEGGER_RTT.c ****   } while (BufferIndex < pRTTCB->MaxNumDownBuffers);
 8400              		.loc 1 1577 16 view .LVU3529
 8401 0040 0320     		movs	r0, #3
 8402              	.LVL806:
 8403              	.L335:
1579:Core/Src/SEGGER_RTT.c ****   if (BufferIndex < pRTTCB->MaxNumDownBuffers) {
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccSC4OZm.s 			page 230


 8404              		.loc 1 1579 3 is_stmt 1 view .LVU3530
 8405              		.loc 1 1579 27 is_stmt 0 view .LVU3531
 8406 0042 6369     		ldr	r3, [r4, #20]
 8407              		.loc 1 1579 6 view .LVU3532
 8408 0044 8342     		cmp	r3, r0
 8409 0046 50DD     		ble	.L342
1580:Core/Src/SEGGER_RTT.c ****     pRTTCB->aDown[BufferIndex].sName        = sName;
 8410              		.loc 1 1580 5 is_stmt 1 view .LVU3533
 8411              		.loc 1 1580 45 is_stmt 0 view .LVU3534
 8412 0048 00EB4003 		add	r3, r0, r0, lsl #1
 8413 004c 04EBC304 		add	r4, r4, r3, lsl #3
1581:Core/Src/SEGGER_RTT.c ****     pRTTCB->aDown[BufferIndex].pBuffer      = (char*)pBuffer;
1582:Core/Src/SEGGER_RTT.c ****     pRTTCB->aDown[BufferIndex].SizeOfBuffer = BufferSize;
1583:Core/Src/SEGGER_RTT.c ****     pRTTCB->aDown[BufferIndex].RdOff        = 0u;
 8414              		.loc 1 1583 45 view .LVU3535
 8415 0050 0023     		movs	r3, #0
1580:Core/Src/SEGGER_RTT.c ****     pRTTCB->aDown[BufferIndex].sName        = sName;
 8416              		.loc 1 1580 45 view .LVU3536
 8417 0052 C4F86090 		str	r9, [r4, #96]
1581:Core/Src/SEGGER_RTT.c ****     pRTTCB->aDown[BufferIndex].pBuffer      = (char*)pBuffer;
 8418              		.loc 1 1581 5 is_stmt 1 view .LVU3537
1581:Core/Src/SEGGER_RTT.c ****     pRTTCB->aDown[BufferIndex].pBuffer      = (char*)pBuffer;
 8419              		.loc 1 1581 45 is_stmt 0 view .LVU3538
 8420 0056 C4F86480 		str	r8, [r4, #100]
1582:Core/Src/SEGGER_RTT.c ****     pRTTCB->aDown[BufferIndex].RdOff        = 0u;
 8421              		.loc 1 1582 5 is_stmt 1 view .LVU3539
1582:Core/Src/SEGGER_RTT.c ****     pRTTCB->aDown[BufferIndex].RdOff        = 0u;
 8422              		.loc 1 1582 45 is_stmt 0 view .LVU3540
 8423 005a A766     		str	r7, [r4, #104]
 8424              		.loc 1 1583 5 is_stmt 1 view .LVU3541
 8425              		.loc 1 1583 45 is_stmt 0 view .LVU3542
 8426 005c 2367     		str	r3, [r4, #112]
1584:Core/Src/SEGGER_RTT.c ****     pRTTCB->aDown[BufferIndex].WrOff        = 0u;
 8427              		.loc 1 1584 5 is_stmt 1 view .LVU3543
 8428              		.loc 1 1584 45 is_stmt 0 view .LVU3544
 8429 005e E366     		str	r3, [r4, #108]
1585:Core/Src/SEGGER_RTT.c ****     pRTTCB->aDown[BufferIndex].Flags        = Flags;
 8430              		.loc 1 1585 5 is_stmt 1 view .LVU3545
 8431              		.loc 1 1585 45 is_stmt 0 view .LVU3546
 8432 0060 6667     		str	r6, [r4, #116]
1586:Core/Src/SEGGER_RTT.c ****     RTT__DMB();                     // Force data write to be complete before writing the <WrOff>, 
 8433              		.loc 1 1586 5 is_stmt 1 view .LVU3547
 8434              		.syntax unified
 8435              	@ 1586 "Core/Src/SEGGER_RTT.c" 1
 8436 0062 BFF35F8F 		dmb
 8437              	
 8438              	@ 0 "" 2
 8439              		.loc 1 1586 15 view .LVU3548
 8440              	.LVL807:
 8441              		.thumb
 8442              		.syntax unified
 8443              	.L336:
1587:Core/Src/SEGGER_RTT.c ****   } else {
1588:Core/Src/SEGGER_RTT.c ****     BufferIndex = -1;
1589:Core/Src/SEGGER_RTT.c ****   }
1590:Core/Src/SEGGER_RTT.c ****   SEGGER_RTT_UNLOCK();
 8444              		.loc 1 1590 3 view .LVU3549
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccSC4OZm.s 			page 231


 8445              		.syntax unified
 8446              	@ 1590 "Core/Src/SEGGER_RTT.c" 1
 8447 0066 82F31188 		msr   basepri, r2  
 8448              		
 8449              	@ 0 "" 2
 8450              		.thumb
 8451              		.syntax unified
 8452              	.LBE475:
 8453              		.loc 1 1590 22 view .LVU3550
1591:Core/Src/SEGGER_RTT.c ****   return BufferIndex;
 8454              		.loc 1 1591 3 view .LVU3551
1592:Core/Src/SEGGER_RTT.c **** }
 8455              		.loc 1 1592 1 is_stmt 0 view .LVU3552
 8456 006a BDE8F883 		pop	{r3, r4, r5, r6, r7, r8, r9, pc}
 8457              	.LVL808:
 8458              	.L344:
 8459              		.loc 1 1592 1 view .LVU3553
 8460 006e 03F0FF05 		and	r5, r3, #255
 8461              	.LBB476:
1569:Core/Src/SEGGER_RTT.c ****   SEGGER_RTT_LOCK();
 8462              		.loc 1 1569 3 is_stmt 1 view .LVU3554
 8463              	.LBB470:
 8464              	.LBI470:
 314:Core/Src/SEGGER_RTT.c ****   volatile SEGGER_RTT_CB* p;   // Volatile to make sure that compiler cannot change the order of ac
 8465              		.loc 1 314 13 view .LVU3555
 8466              	.LBB471:
 315:Core/Src/SEGGER_RTT.c ****   static const char _aInitStr[] = "\0\0\0\0\0\0TTR REGGES";  // Init complete ID string to make sur
 8467              		.loc 1 315 3 view .LVU3556
 316:Core/Src/SEGGER_RTT.c ****   unsigned i;
 8468              		.loc 1 316 3 view .LVU3557
 317:Core/Src/SEGGER_RTT.c ****   //
 8469              		.loc 1 317 3 view .LVU3558
 321:Core/Src/SEGGER_RTT.c ****   memset((SEGGER_RTT_CB*)p, 0, sizeof(_SEGGER_RTT));         // Make sure that the RTT CB is always
 8470              		.loc 1 321 3 view .LVU3559
 8471              	.LVL809:
 322:Core/Src/SEGGER_RTT.c ****   p->MaxNumUpBuffers    = SEGGER_RTT_MAX_NUM_UP_BUFFERS;
 8472              		.loc 1 322 3 view .LVU3560
 8473 0072 2946     		mov	r1, r5
 8474              	.LVL810:
 322:Core/Src/SEGGER_RTT.c ****   p->MaxNumUpBuffers    = SEGGER_RTT_MAX_NUM_UP_BUFFERS;
 8475              		.loc 1 322 3 is_stmt 0 view .LVU3561
 8476 0074 7822     		movs	r2, #120
 8477              	.LVL811:
 322:Core/Src/SEGGER_RTT.c ****   p->MaxNumUpBuffers    = SEGGER_RTT_MAX_NUM_UP_BUFFERS;
 8478              		.loc 1 322 3 view .LVU3562
 8479 0076 04F13000 		add	r0, r4, #48
 8480              	.LVL812:
 322:Core/Src/SEGGER_RTT.c ****   p->MaxNumUpBuffers    = SEGGER_RTT_MAX_NUM_UP_BUFFERS;
 8481              		.loc 1 322 3 view .LVU3563
 8482 007a FFF7FEFF 		bl	memset
 8483              	.LVL813:
 323:Core/Src/SEGGER_RTT.c ****   p->MaxNumDownBuffers  = SEGGER_RTT_MAX_NUM_DOWN_BUFFERS;
 8484              		.loc 1 323 3 is_stmt 1 view .LVU3564
 323:Core/Src/SEGGER_RTT.c ****   p->MaxNumDownBuffers  = SEGGER_RTT_MAX_NUM_DOWN_BUFFERS;
 8485              		.loc 1 323 25 is_stmt 0 view .LVU3565
 8486 007e 0322     		movs	r2, #3
 8487 0080 2261     		str	r2, [r4, #16]
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccSC4OZm.s 			page 232


 324:Core/Src/SEGGER_RTT.c ****   //
 8488              		.loc 1 324 3 is_stmt 1 view .LVU3566
 328:Core/Src/SEGGER_RTT.c ****   p->aUp[0].pBuffer       = _acUpBuffer;
 8489              		.loc 1 328 27 is_stmt 0 view .LVU3567
 8490 0082 1C4B     		ldr	r3, .L345+4
 324:Core/Src/SEGGER_RTT.c ****   //
 8491              		.loc 1 324 25 view .LVU3568
 8492 0084 6261     		str	r2, [r4, #20]
 328:Core/Src/SEGGER_RTT.c ****   p->aUp[0].pBuffer       = _acUpBuffer;
 8493              		.loc 1 328 3 is_stmt 1 view .LVU3569
 330:Core/Src/SEGGER_RTT.c ****   p->aUp[0].RdOff         = 0u;
 8494              		.loc 1 330 27 is_stmt 0 view .LVU3570
 8495 0086 4FF48061 		mov	r1, #1024
 329:Core/Src/SEGGER_RTT.c ****   p->aUp[0].SizeOfBuffer  = BUFFER_SIZE_UP;
 8496              		.loc 1 329 27 view .LVU3571
 8497 008a 1B4A     		ldr	r2, .L345+8
 328:Core/Src/SEGGER_RTT.c ****   p->aUp[0].pBuffer       = _acUpBuffer;
 8498              		.loc 1 328 27 view .LVU3572
 8499 008c A361     		str	r3, [r4, #24]
 329:Core/Src/SEGGER_RTT.c ****   p->aUp[0].SizeOfBuffer  = BUFFER_SIZE_UP;
 8500              		.loc 1 329 3 is_stmt 1 view .LVU3573
 329:Core/Src/SEGGER_RTT.c ****   p->aUp[0].SizeOfBuffer  = BUFFER_SIZE_UP;
 8501              		.loc 1 329 27 is_stmt 0 view .LVU3574
 8502 008e E261     		str	r2, [r4, #28]
 330:Core/Src/SEGGER_RTT.c ****   p->aUp[0].RdOff         = 0u;
 8503              		.loc 1 330 3 is_stmt 1 view .LVU3575
 330:Core/Src/SEGGER_RTT.c ****   p->aUp[0].RdOff         = 0u;
 8504              		.loc 1 330 27 is_stmt 0 view .LVU3576
 8505 0090 2162     		str	r1, [r4, #32]
 331:Core/Src/SEGGER_RTT.c ****   p->aUp[0].WrOff         = 0u;
 8506              		.loc 1 331 3 is_stmt 1 view .LVU3577
 338:Core/Src/SEGGER_RTT.c ****   p->aDown[0].SizeOfBuffer  = BUFFER_SIZE_DOWN;
 8507              		.loc 1 338 29 is_stmt 0 view .LVU3578
 8508 0092 1A4A     		ldr	r2, .L345+12
 331:Core/Src/SEGGER_RTT.c ****   p->aUp[0].WrOff         = 0u;
 8509              		.loc 1 331 27 view .LVU3579
 8510 0094 A562     		str	r5, [r4, #40]
 332:Core/Src/SEGGER_RTT.c ****   p->aUp[0].Flags         = SEGGER_RTT_MODE_DEFAULT;
 8511              		.loc 1 332 3 is_stmt 1 view .LVU3580
 332:Core/Src/SEGGER_RTT.c ****   p->aUp[0].Flags         = SEGGER_RTT_MODE_DEFAULT;
 8512              		.loc 1 332 27 is_stmt 0 view .LVU3581
 8513 0096 6562     		str	r5, [r4, #36]
 333:Core/Src/SEGGER_RTT.c ****   //
 8514              		.loc 1 333 3 is_stmt 1 view .LVU3582
 333:Core/Src/SEGGER_RTT.c ****   //
 8515              		.loc 1 333 27 is_stmt 0 view .LVU3583
 8516 0098 E562     		str	r5, [r4, #44]
 337:Core/Src/SEGGER_RTT.c ****   p->aDown[0].pBuffer       = _acDownBuffer;
 8517              		.loc 1 337 3 is_stmt 1 view .LVU3584
 337:Core/Src/SEGGER_RTT.c ****   p->aDown[0].pBuffer       = _acDownBuffer;
 8518              		.loc 1 337 29 is_stmt 0 view .LVU3585
 8519 009a 2366     		str	r3, [r4, #96]
 338:Core/Src/SEGGER_RTT.c ****   p->aDown[0].SizeOfBuffer  = BUFFER_SIZE_DOWN;
 8520              		.loc 1 338 3 is_stmt 1 view .LVU3586
 339:Core/Src/SEGGER_RTT.c ****   p->aDown[0].RdOff         = 0u;
 8521              		.loc 1 339 29 is_stmt 0 view .LVU3587
 8522 009c 1023     		movs	r3, #16
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccSC4OZm.s 			page 233


 338:Core/Src/SEGGER_RTT.c ****   p->aDown[0].SizeOfBuffer  = BUFFER_SIZE_DOWN;
 8523              		.loc 1 338 29 view .LVU3588
 8524 009e 6266     		str	r2, [r4, #100]
 339:Core/Src/SEGGER_RTT.c ****   p->aDown[0].RdOff         = 0u;
 8525              		.loc 1 339 3 is_stmt 1 view .LVU3589
 339:Core/Src/SEGGER_RTT.c ****   p->aDown[0].RdOff         = 0u;
 8526              		.loc 1 339 29 is_stmt 0 view .LVU3590
 8527 00a0 A366     		str	r3, [r4, #104]
 340:Core/Src/SEGGER_RTT.c ****   p->aDown[0].WrOff         = 0u;
 8528              		.loc 1 340 3 is_stmt 1 view .LVU3591
 340:Core/Src/SEGGER_RTT.c ****   p->aDown[0].WrOff         = 0u;
 8529              		.loc 1 340 29 is_stmt 0 view .LVU3592
 8530 00a2 2567     		str	r5, [r4, #112]
 341:Core/Src/SEGGER_RTT.c ****   p->aDown[0].Flags         = SEGGER_RTT_MODE_DEFAULT;
 8531              		.loc 1 341 3 is_stmt 1 view .LVU3593
 341:Core/Src/SEGGER_RTT.c ****   p->aDown[0].Flags         = SEGGER_RTT_MODE_DEFAULT;
 8532              		.loc 1 341 29 is_stmt 0 view .LVU3594
 8533 00a4 E566     		str	r5, [r4, #108]
 342:Core/Src/SEGGER_RTT.c ****   //
 8534              		.loc 1 342 3 is_stmt 1 view .LVU3595
 342:Core/Src/SEGGER_RTT.c ****   //
 8535              		.loc 1 342 29 is_stmt 0 view .LVU3596
 8536 00a6 6567     		str	r5, [r4, #116]
 348:Core/Src/SEGGER_RTT.c ****   for (i = 0; i < sizeof(_aInitStr) - 1; ++i) {
 8537              		.loc 1 348 3 is_stmt 1 view .LVU3597
 8538              		.syntax unified
 8539              	@ 348 "Core/Src/SEGGER_RTT.c" 1
 8540 00a8 BFF35F8F 		dmb
 8541              	
 8542              	@ 0 "" 2
 348:Core/Src/SEGGER_RTT.c ****   for (i = 0; i < sizeof(_aInitStr) - 1; ++i) {
 8543              		.loc 1 348 13 view .LVU3598
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 8544              		.loc 1 349 3 view .LVU3599
 8545              	.LVL814:
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 8546              		.loc 1 349 17 view .LVU3600
 350:Core/Src/SEGGER_RTT.c ****   }
 8547              		.loc 1 350 5 view .LVU3601
 350:Core/Src/SEGGER_RTT.c ****   }
 8548              		.loc 1 350 16 is_stmt 0 view .LVU3602
 8549              		.thumb
 8550              		.syntax unified
 8551 00ac 4521     		movs	r1, #69
 8552 00ae 4720     		movs	r0, #71
 8553 00b0 4FF0530C 		mov	ip, #83
 8554 00b4 84F800C0 		strb	ip, [r4]
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 8555              		.loc 1 349 42 is_stmt 1 view .LVU3603
 8556              	.LVL815:
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 8557              		.loc 1 349 17 view .LVU3604
 350:Core/Src/SEGGER_RTT.c ****   }
 8558              		.loc 1 350 5 view .LVU3605
 350:Core/Src/SEGGER_RTT.c ****   }
 8559              		.loc 1 350 16 is_stmt 0 view .LVU3606
 8560 00b8 5222     		movs	r2, #82
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccSC4OZm.s 			page 234


 8561 00ba 6170     		strb	r1, [r4, #1]
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 8562              		.loc 1 349 42 is_stmt 1 view .LVU3607
 8563              	.LVL816:
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 8564              		.loc 1 349 17 view .LVU3608
 350:Core/Src/SEGGER_RTT.c ****   }
 8565              		.loc 1 350 5 view .LVU3609
 350:Core/Src/SEGGER_RTT.c ****   }
 8566              		.loc 1 350 16 is_stmt 0 view .LVU3610
 8567 00bc 5423     		movs	r3, #84
 8568 00be A070     		strb	r0, [r4, #2]
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 8569              		.loc 1 349 42 is_stmt 1 view .LVU3611
 8570              	.LVL817:
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 8571              		.loc 1 349 17 view .LVU3612
 350:Core/Src/SEGGER_RTT.c ****   }
 8572              		.loc 1 350 5 view .LVU3613
 350:Core/Src/SEGGER_RTT.c ****   }
 8573              		.loc 1 350 16 is_stmt 0 view .LVU3614
 8574 00c0 E070     		strb	r0, [r4, #3]
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 8575              		.loc 1 349 42 is_stmt 1 view .LVU3615
 8576              	.LVL818:
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 8577              		.loc 1 349 17 view .LVU3616
 350:Core/Src/SEGGER_RTT.c ****   }
 8578              		.loc 1 350 5 view .LVU3617
 350:Core/Src/SEGGER_RTT.c ****   }
 8579              		.loc 1 350 16 is_stmt 0 view .LVU3618
 8580 00c2 2171     		strb	r1, [r4, #4]
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 8581              		.loc 1 349 42 is_stmt 1 view .LVU3619
 8582              	.LVL819:
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 8583              		.loc 1 349 17 view .LVU3620
 350:Core/Src/SEGGER_RTT.c ****   }
 8584              		.loc 1 350 5 view .LVU3621
 350:Core/Src/SEGGER_RTT.c ****   }
 8585              		.loc 1 350 16 is_stmt 0 view .LVU3622
 8586 00c4 2021     		movs	r1, #32
 8587 00c6 6271     		strb	r2, [r4, #5]
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 8588              		.loc 1 349 42 is_stmt 1 view .LVU3623
 8589              	.LVL820:
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 8590              		.loc 1 349 17 view .LVU3624
 350:Core/Src/SEGGER_RTT.c ****   }
 8591              		.loc 1 350 5 view .LVU3625
 350:Core/Src/SEGGER_RTT.c ****   }
 8592              		.loc 1 350 16 is_stmt 0 view .LVU3626
 8593 00c8 A171     		strb	r1, [r4, #6]
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 8594              		.loc 1 349 42 is_stmt 1 view .LVU3627
 8595              	.LVL821:
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccSC4OZm.s 			page 235


 8596              		.loc 1 349 17 view .LVU3628
 350:Core/Src/SEGGER_RTT.c ****   }
 8597              		.loc 1 350 5 view .LVU3629
 350:Core/Src/SEGGER_RTT.c ****   }
 8598              		.loc 1 350 16 is_stmt 0 view .LVU3630
 8599 00ca E271     		strb	r2, [r4, #7]
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 8600              		.loc 1 349 42 is_stmt 1 view .LVU3631
 8601              	.LVL822:
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 8602              		.loc 1 349 17 view .LVU3632
 350:Core/Src/SEGGER_RTT.c ****   }
 8603              		.loc 1 350 5 view .LVU3633
 350:Core/Src/SEGGER_RTT.c ****   }
 8604              		.loc 1 350 16 is_stmt 0 view .LVU3634
 8605 00cc 2372     		strb	r3, [r4, #8]
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 8606              		.loc 1 349 42 is_stmt 1 view .LVU3635
 8607              	.LVL823:
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 8608              		.loc 1 349 17 view .LVU3636
 350:Core/Src/SEGGER_RTT.c ****   }
 8609              		.loc 1 350 5 view .LVU3637
 350:Core/Src/SEGGER_RTT.c ****   }
 8610              		.loc 1 350 16 is_stmt 0 view .LVU3638
 8611 00ce 6372     		strb	r3, [r4, #9]
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 8612              		.loc 1 349 42 is_stmt 1 view .LVU3639
 8613              	.LVL824:
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 8614              		.loc 1 349 17 view .LVU3640
 350:Core/Src/SEGGER_RTT.c ****   }
 8615              		.loc 1 350 5 view .LVU3641
 350:Core/Src/SEGGER_RTT.c ****   }
 8616              		.loc 1 350 16 is_stmt 0 view .LVU3642
 8617 00d0 A572     		strb	r5, [r4, #10]
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 8618              		.loc 1 349 42 is_stmt 1 view .LVU3643
 8619              	.LVL825:
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 8620              		.loc 1 349 17 view .LVU3644
 350:Core/Src/SEGGER_RTT.c ****   }
 8621              		.loc 1 350 5 view .LVU3645
 350:Core/Src/SEGGER_RTT.c ****   }
 8622              		.loc 1 350 16 is_stmt 0 view .LVU3646
 8623 00d2 E572     		strb	r5, [r4, #11]
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 8624              		.loc 1 349 42 is_stmt 1 view .LVU3647
 8625              	.LVL826:
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 8626              		.loc 1 349 17 view .LVU3648
 350:Core/Src/SEGGER_RTT.c ****   }
 8627              		.loc 1 350 5 view .LVU3649
 350:Core/Src/SEGGER_RTT.c ****   }
 8628              		.loc 1 350 16 is_stmt 0 view .LVU3650
 8629 00d4 2573     		strb	r5, [r4, #12]
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccSC4OZm.s 			page 236


 8630              		.loc 1 349 42 is_stmt 1 view .LVU3651
 8631              	.LVL827:
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 8632              		.loc 1 349 17 view .LVU3652
 350:Core/Src/SEGGER_RTT.c ****   }
 8633              		.loc 1 350 5 view .LVU3653
 350:Core/Src/SEGGER_RTT.c ****   }
 8634              		.loc 1 350 16 is_stmt 0 view .LVU3654
 8635 00d6 6573     		strb	r5, [r4, #13]
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 8636              		.loc 1 349 42 is_stmt 1 view .LVU3655
 8637              	.LVL828:
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 8638              		.loc 1 349 17 view .LVU3656
 350:Core/Src/SEGGER_RTT.c ****   }
 8639              		.loc 1 350 5 view .LVU3657
 350:Core/Src/SEGGER_RTT.c ****   }
 8640              		.loc 1 350 16 is_stmt 0 view .LVU3658
 8641 00d8 A573     		strb	r5, [r4, #14]
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 8642              		.loc 1 349 42 is_stmt 1 view .LVU3659
 8643              	.LVL829:
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 8644              		.loc 1 349 17 view .LVU3660
 350:Core/Src/SEGGER_RTT.c ****   }
 8645              		.loc 1 350 5 view .LVU3661
 350:Core/Src/SEGGER_RTT.c ****   }
 8646              		.loc 1 350 16 is_stmt 0 view .LVU3662
 8647 00da E573     		strb	r5, [r4, #15]
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 8648              		.loc 1 349 42 is_stmt 1 view .LVU3663
 8649              	.LVL830:
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 8650              		.loc 1 349 17 view .LVU3664
 352:Core/Src/SEGGER_RTT.c **** }
 8651              		.loc 1 352 3 view .LVU3665
 8652              		.syntax unified
 8653              	@ 352 "Core/Src/SEGGER_RTT.c" 1
 8654 00dc BFF35F8F 		dmb
 8655              	
 8656              	@ 0 "" 2
 352:Core/Src/SEGGER_RTT.c **** }
 8657              		.loc 1 352 13 view .LVU3666
 353:Core/Src/SEGGER_RTT.c **** 
 8658              		.loc 1 353 1 is_stmt 0 view .LVU3667
 8659              		.thumb
 8660              		.syntax unified
 8661 00e0 98E7     		b	.L332
 8662              	.LVL831:
 8663              	.L339:
 353:Core/Src/SEGGER_RTT.c **** 
 8664              		.loc 1 353 1 view .LVU3668
 8665              	.LBE471:
 8666              	.LBE470:
 8667              	.LBE476:
 8668              	.LBB477:
1577:Core/Src/SEGGER_RTT.c ****   } while (BufferIndex < pRTTCB->MaxNumDownBuffers);
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccSC4OZm.s 			page 237


 8669              		.loc 1 1577 16 view .LVU3669
 8670 00e2 0120     		movs	r0, #1
 8671 00e4 ADE7     		b	.L335
 8672              	.LVL832:
 8673              	.L341:
1577:Core/Src/SEGGER_RTT.c ****   } while (BufferIndex < pRTTCB->MaxNumDownBuffers);
 8674              		.loc 1 1577 16 view .LVU3670
 8675 00e6 0220     		movs	r0, #2
 8676 00e8 ABE7     		b	.L335
 8677              	.LVL833:
 8678              	.L342:
1588:Core/Src/SEGGER_RTT.c ****   }
 8679              		.loc 1 1588 17 view .LVU3671
 8680 00ea 4FF0FF30 		mov	r0, #-1
 8681              	.LVL834:
1588:Core/Src/SEGGER_RTT.c ****   }
 8682              		.loc 1 1588 17 view .LVU3672
 8683 00ee BAE7     		b	.L336
 8684              	.L346:
 8685              		.align	2
 8686              	.L345:
 8687 00f0 00000000 		.word	.LANCHOR0
 8688 00f4 00000000 		.word	.LC0
 8689 00f8 00000000 		.word	.LANCHOR1
 8690 00fc 00000000 		.word	.LANCHOR2
 8691              	.LBE477:
 8692              		.cfi_endproc
 8693              	.LFE23:
 8695              		.section	.text.SEGGER_RTT_AllocUpBuffer,"ax",%progbits
 8696              		.align	1
 8697              		.p2align 2,,3
 8698              		.global	SEGGER_RTT_AllocUpBuffer
 8699              		.syntax unified
 8700              		.thumb
 8701              		.thumb_func
 8703              	SEGGER_RTT_AllocUpBuffer:
 8704              	.LVL835:
 8705              	.LFB24:
1593:Core/Src/SEGGER_RTT.c **** 
1594:Core/Src/SEGGER_RTT.c **** /*********************************************************************
1595:Core/Src/SEGGER_RTT.c **** *
1596:Core/Src/SEGGER_RTT.c **** *       SEGGER_RTT_AllocUpBuffer
1597:Core/Src/SEGGER_RTT.c **** *
1598:Core/Src/SEGGER_RTT.c **** *  Function description
1599:Core/Src/SEGGER_RTT.c **** *    Run-time configuration of the next up-buffer (T->H).
1600:Core/Src/SEGGER_RTT.c **** *    The next buffer, which is not used yet is configured.
1601:Core/Src/SEGGER_RTT.c **** *    This includes: Buffer address, size, name, flags, ...
1602:Core/Src/SEGGER_RTT.c **** *
1603:Core/Src/SEGGER_RTT.c **** *  Parameters
1604:Core/Src/SEGGER_RTT.c **** *    sName        Pointer to a constant name string.
1605:Core/Src/SEGGER_RTT.c **** *    pBuffer      Pointer to a buffer to be used.
1606:Core/Src/SEGGER_RTT.c **** *    BufferSize   Size of the buffer.
1607:Core/Src/SEGGER_RTT.c **** *    Flags        Operating modes. Define behavior if buffer is full (not enough space for entire m
1608:Core/Src/SEGGER_RTT.c **** *                 Flags[31:24] are used for validity check and must be zero. Flags[23:2] are reserv
1609:Core/Src/SEGGER_RTT.c **** *
1610:Core/Src/SEGGER_RTT.c **** *  Return value
1611:Core/Src/SEGGER_RTT.c **** *    >= 0 - O.K. Buffer Index
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccSC4OZm.s 			page 238


1612:Core/Src/SEGGER_RTT.c **** *     < 0 - Error
1613:Core/Src/SEGGER_RTT.c **** */
1614:Core/Src/SEGGER_RTT.c **** int SEGGER_RTT_AllocUpBuffer(const char* sName, void* pBuffer, unsigned BufferSize, unsigned Flags)
 8706              		.loc 1 1614 101 is_stmt 1 view -0
 8707              		.cfi_startproc
 8708              		@ args = 0, pretend = 0, frame = 0
 8709              		@ frame_needed = 0, uses_anonymous_args = 0
1615:Core/Src/SEGGER_RTT.c ****   int BufferIndex;
 8710              		.loc 1 1615 3 view .LVU3674
1616:Core/Src/SEGGER_RTT.c ****   volatile SEGGER_RTT_CB* pRTTCB;
 8711              		.loc 1 1616 3 view .LVU3675
 8712              	.LBB482:
1617:Core/Src/SEGGER_RTT.c **** 
1618:Core/Src/SEGGER_RTT.c ****   INIT();
 8713              		.loc 1 1618 3 view .LVU3676
 8714              		.loc 1 1618 3 view .LVU3677
 8715              		.loc 1 1618 3 view .LVU3678
 8716              		.loc 1 1618 3 view .LVU3679
 8717              	.LBE482:
1614:Core/Src/SEGGER_RTT.c ****   int BufferIndex;
 8718              		.loc 1 1614 101 is_stmt 0 view .LVU3680
 8719 0000 2DE9F843 		push	{r3, r4, r5, r6, r7, r8, r9, lr}
 8720              		.cfi_def_cfa_offset 32
 8721              		.cfi_offset 3, -32
 8722              		.cfi_offset 4, -28
 8723              		.cfi_offset 5, -24
 8724              		.cfi_offset 6, -20
 8725              		.cfi_offset 7, -16
 8726              		.cfi_offset 8, -12
 8727              		.cfi_offset 9, -8
 8728              		.cfi_offset 14, -4
 8729              	.LBB485:
 8730              		.loc 1 1618 3 view .LVU3681
 8731 0004 434C     		ldr	r4, .L361
 8732              	.LBE485:
1614:Core/Src/SEGGER_RTT.c ****   int BufferIndex;
 8733              		.loc 1 1614 101 view .LVU3682
 8734 0006 1D46     		mov	r5, r3
 8735              	.LBB486:
 8736              		.loc 1 1618 3 view .LVU3683
 8737 0008 2378     		ldrb	r3, [r4]	@ zero_extendqisi2
 8738              	.LVL836:
 8739              		.loc 1 1618 3 view .LVU3684
 8740              	.LBE486:
1614:Core/Src/SEGGER_RTT.c ****   int BufferIndex;
 8741              		.loc 1 1614 101 view .LVU3685
 8742 000a 8046     		mov	r8, r0
 8743 000c 0F46     		mov	r7, r1
 8744 000e 1646     		mov	r6, r2
 8745              	.LBB487:
 8746              		.loc 1 1618 3 view .LVU3686
 8747 0010 002B     		cmp	r3, #0
 8748 0012 32D0     		beq	.L360
 8749              	.LVL837:
 8750              	.L348:
 8751              		.loc 1 1618 3 is_stmt 1 discriminator 3 view .LVU3687
 8752              	.LBE487:
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccSC4OZm.s 			page 239


 8753              		.loc 1 1618 9 discriminator 3 view .LVU3688
 8754              	.LBB488:
1619:Core/Src/SEGGER_RTT.c ****   SEGGER_RTT_LOCK();
 8755              		.loc 1 1619 3 discriminator 3 view .LVU3689
 8756              		.loc 1 1619 3 discriminator 3 view .LVU3690
 8757              		.syntax unified
 8758              	@ 1619 "Core/Src/SEGGER_RTT.c" 1
 8759 0014 EFF31182 		mrs   r2, basepri  
 8760 0018 4FF02001 		mov   r1, #32       
 8761 001c 81F31188 		msr   basepri, r1  
 8762              		
 8763              	@ 0 "" 2
 8764              	.LVL838:
 8765              		.loc 1 1619 20 discriminator 3 view .LVU3691
1620:Core/Src/SEGGER_RTT.c ****   pRTTCB = (volatile SEGGER_RTT_CB*)((unsigned char*)&_SEGGER_RTT + SEGGER_RTT_UNCACHED_OFF);  // A
 8766              		.loc 1 1620 3 discriminator 3 view .LVU3692
1621:Core/Src/SEGGER_RTT.c ****   BufferIndex = 0;
 8767              		.loc 1 1621 3 discriminator 3 view .LVU3693
1622:Core/Src/SEGGER_RTT.c ****   do {
 8768              		.loc 1 1622 3 discriminator 3 view .LVU3694
1623:Core/Src/SEGGER_RTT.c ****     if (pRTTCB->aUp[BufferIndex].pBuffer == NULL) {
 8769              		.loc 1 1623 5 discriminator 3 view .LVU3695
 8770              		.loc 1 1623 33 is_stmt 0 discriminator 3 view .LVU3696
 8771              		.thumb
 8772              		.syntax unified
 8773 0020 E069     		ldr	r0, [r4, #28]
 8774              		.loc 1 1623 8 discriminator 3 view .LVU3697
 8775 0022 68B1     		cbz	r0, .L351
1624:Core/Src/SEGGER_RTT.c ****       break;
1625:Core/Src/SEGGER_RTT.c ****     }
1626:Core/Src/SEGGER_RTT.c ****     BufferIndex++;
 8776              		.loc 1 1626 5 is_stmt 1 view .LVU3698
 8777              	.LVL839:
1627:Core/Src/SEGGER_RTT.c ****   } while (BufferIndex < pRTTCB->MaxNumUpBuffers);
 8778              		.loc 1 1627 24 view .LVU3699
 8779              		.loc 1 1627 32 is_stmt 0 view .LVU3700
 8780 0024 2369     		ldr	r3, [r4, #16]
 8781              		.loc 1 1627 24 view .LVU3701
 8782 0026 012B     		cmp	r3, #1
 8783 0028 6DDD     		ble	.L355
1622:Core/Src/SEGGER_RTT.c ****     if (pRTTCB->aUp[BufferIndex].pBuffer == NULL) {
 8784              		.loc 1 1622 3 is_stmt 1 view .LVU3702
1623:Core/Src/SEGGER_RTT.c ****       break;
 8785              		.loc 1 1623 5 view .LVU3703
1623:Core/Src/SEGGER_RTT.c ****       break;
 8786              		.loc 1 1623 33 is_stmt 0 view .LVU3704
 8787 002a 636B     		ldr	r3, [r4, #52]
1623:Core/Src/SEGGER_RTT.c ****       break;
 8788              		.loc 1 1623 8 view .LVU3705
 8789 002c 002B     		cmp	r3, #0
 8790 002e 6AD0     		beq	.L355
1626:Core/Src/SEGGER_RTT.c ****   } while (BufferIndex < pRTTCB->MaxNumUpBuffers);
 8791              		.loc 1 1626 5 is_stmt 1 view .LVU3706
 8792              	.LVL840:
 8793              		.loc 1 1627 24 view .LVU3707
 8794              		.loc 1 1627 32 is_stmt 0 view .LVU3708
 8795 0030 2369     		ldr	r3, [r4, #16]
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccSC4OZm.s 			page 240


 8796              		.loc 1 1627 24 view .LVU3709
 8797 0032 022B     		cmp	r3, #2
 8798 0034 69DD     		ble	.L357
1622:Core/Src/SEGGER_RTT.c ****     if (pRTTCB->aUp[BufferIndex].pBuffer == NULL) {
 8799              		.loc 1 1622 3 is_stmt 1 view .LVU3710
1623:Core/Src/SEGGER_RTT.c ****       break;
 8800              		.loc 1 1623 5 view .LVU3711
1623:Core/Src/SEGGER_RTT.c ****       break;
 8801              		.loc 1 1623 33 is_stmt 0 view .LVU3712
 8802 0036 E36C     		ldr	r3, [r4, #76]
1623:Core/Src/SEGGER_RTT.c ****       break;
 8803              		.loc 1 1623 8 view .LVU3713
 8804 0038 002B     		cmp	r3, #0
 8805 003a 66D0     		beq	.L357
1626:Core/Src/SEGGER_RTT.c ****   } while (BufferIndex < pRTTCB->MaxNumUpBuffers);
 8806              		.loc 1 1626 5 is_stmt 1 view .LVU3714
 8807              	.LVL841:
 8808              		.loc 1 1627 24 view .LVU3715
 8809              		.loc 1 1627 32 is_stmt 0 view .LVU3716
 8810 003c 2369     		ldr	r3, [r4, #16]
1626:Core/Src/SEGGER_RTT.c ****   } while (BufferIndex < pRTTCB->MaxNumUpBuffers);
 8811              		.loc 1 1626 16 view .LVU3717
 8812 003e 0320     		movs	r0, #3
 8813              	.LVL842:
 8814              	.L351:
1628:Core/Src/SEGGER_RTT.c ****   if (BufferIndex < pRTTCB->MaxNumUpBuffers) {
 8815              		.loc 1 1628 3 is_stmt 1 view .LVU3718
 8816              		.loc 1 1628 27 is_stmt 0 view .LVU3719
 8817 0040 2369     		ldr	r3, [r4, #16]
 8818              		.loc 1 1628 6 view .LVU3720
 8819 0042 8342     		cmp	r3, r0
 8820 0044 63DD     		ble	.L358
1629:Core/Src/SEGGER_RTT.c ****     pRTTCB->aUp[BufferIndex].sName        = sName;
 8821              		.loc 1 1629 5 is_stmt 1 view .LVU3721
 8822              		.loc 1 1629 43 is_stmt 0 view .LVU3722
 8823 0046 00F1010C 		add	ip, r0, #1
 8824 004a 0CEB4C0C 		add	ip, ip, ip, lsl #1
 8825 004e 4FEACC0C 		lsl	ip, ip, #3
1630:Core/Src/SEGGER_RTT.c ****     pRTTCB->aUp[BufferIndex].pBuffer      = (char*)pBuffer;
1631:Core/Src/SEGGER_RTT.c ****     pRTTCB->aUp[BufferIndex].SizeOfBuffer = BufferSize;
 8826              		.loc 1 1631 43 view .LVU3723
 8827 0052 00EB4003 		add	r3, r0, r0, lsl #1
1629:Core/Src/SEGGER_RTT.c ****     pRTTCB->aUp[BufferIndex].sName        = sName;
 8828              		.loc 1 1629 43 view .LVU3724
 8829 0056 44F80C80 		str	r8, [r4, ip]
1630:Core/Src/SEGGER_RTT.c ****     pRTTCB->aUp[BufferIndex].pBuffer      = (char*)pBuffer;
 8830              		.loc 1 1630 5 is_stmt 1 view .LVU3725
1630:Core/Src/SEGGER_RTT.c ****     pRTTCB->aUp[BufferIndex].pBuffer      = (char*)pBuffer;
 8831              		.loc 1 1630 43 is_stmt 0 view .LVU3726
 8832 005a A444     		add	ip, ip, r4
 8833              		.loc 1 1631 43 view .LVU3727
 8834 005c 04EBC304 		add	r4, r4, r3, lsl #3
1632:Core/Src/SEGGER_RTT.c ****     pRTTCB->aUp[BufferIndex].RdOff        = 0u;
 8835              		.loc 1 1632 43 view .LVU3728
 8836 0060 0023     		movs	r3, #0
1630:Core/Src/SEGGER_RTT.c ****     pRTTCB->aUp[BufferIndex].pBuffer      = (char*)pBuffer;
 8837              		.loc 1 1630 43 view .LVU3729
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccSC4OZm.s 			page 241


 8838 0062 CCF80470 		str	r7, [ip, #4]
1631:Core/Src/SEGGER_RTT.c ****     pRTTCB->aUp[BufferIndex].RdOff        = 0u;
 8839              		.loc 1 1631 5 is_stmt 1 view .LVU3730
1631:Core/Src/SEGGER_RTT.c ****     pRTTCB->aUp[BufferIndex].RdOff        = 0u;
 8840              		.loc 1 1631 43 is_stmt 0 view .LVU3731
 8841 0066 2662     		str	r6, [r4, #32]
 8842              		.loc 1 1632 5 is_stmt 1 view .LVU3732
 8843              		.loc 1 1632 43 is_stmt 0 view .LVU3733
 8844 0068 A362     		str	r3, [r4, #40]
1633:Core/Src/SEGGER_RTT.c ****     pRTTCB->aUp[BufferIndex].WrOff        = 0u;
 8845              		.loc 1 1633 5 is_stmt 1 view .LVU3734
 8846              		.loc 1 1633 43 is_stmt 0 view .LVU3735
 8847 006a 6362     		str	r3, [r4, #36]
1634:Core/Src/SEGGER_RTT.c ****     pRTTCB->aUp[BufferIndex].Flags        = Flags;
 8848              		.loc 1 1634 5 is_stmt 1 view .LVU3736
 8849              		.loc 1 1634 43 is_stmt 0 view .LVU3737
 8850 006c E562     		str	r5, [r4, #44]
1635:Core/Src/SEGGER_RTT.c ****     RTT__DMB();                     // Force data write to be complete before writing the <WrOff>, 
 8851              		.loc 1 1635 5 is_stmt 1 view .LVU3738
 8852              		.syntax unified
 8853              	@ 1635 "Core/Src/SEGGER_RTT.c" 1
 8854 006e BFF35F8F 		dmb
 8855              	
 8856              	@ 0 "" 2
 8857              		.loc 1 1635 15 view .LVU3739
 8858              	.LVL843:
 8859              		.thumb
 8860              		.syntax unified
 8861              	.L352:
1636:Core/Src/SEGGER_RTT.c ****   } else {
1637:Core/Src/SEGGER_RTT.c ****     BufferIndex = -1;
1638:Core/Src/SEGGER_RTT.c ****   }
1639:Core/Src/SEGGER_RTT.c ****   SEGGER_RTT_UNLOCK();
 8862              		.loc 1 1639 3 view .LVU3740
 8863              		.syntax unified
 8864              	@ 1639 "Core/Src/SEGGER_RTT.c" 1
 8865 0072 82F31188 		msr   basepri, r2  
 8866              		
 8867              	@ 0 "" 2
 8868              		.thumb
 8869              		.syntax unified
 8870              	.LBE488:
 8871              		.loc 1 1639 22 view .LVU3741
1640:Core/Src/SEGGER_RTT.c ****   return BufferIndex;
 8872              		.loc 1 1640 3 view .LVU3742
1641:Core/Src/SEGGER_RTT.c **** }
 8873              		.loc 1 1641 1 is_stmt 0 view .LVU3743
 8874 0076 BDE8F883 		pop	{r3, r4, r5, r6, r7, r8, r9, pc}
 8875              	.LVL844:
 8876              	.L360:
 8877              		.loc 1 1641 1 view .LVU3744
 8878 007a 03F0FF09 		and	r9, r3, #255
 8879              	.LBB489:
1618:Core/Src/SEGGER_RTT.c ****   SEGGER_RTT_LOCK();
 8880              		.loc 1 1618 3 is_stmt 1 view .LVU3745
 8881              	.LBB483:
 8882              	.LBI483:
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccSC4OZm.s 			page 242


 314:Core/Src/SEGGER_RTT.c ****   volatile SEGGER_RTT_CB* p;   // Volatile to make sure that compiler cannot change the order of ac
 8883              		.loc 1 314 13 view .LVU3746
 8884              	.LBB484:
 315:Core/Src/SEGGER_RTT.c ****   static const char _aInitStr[] = "\0\0\0\0\0\0TTR REGGES";  // Init complete ID string to make sur
 8885              		.loc 1 315 3 view .LVU3747
 316:Core/Src/SEGGER_RTT.c ****   unsigned i;
 8886              		.loc 1 316 3 view .LVU3748
 317:Core/Src/SEGGER_RTT.c ****   //
 8887              		.loc 1 317 3 view .LVU3749
 321:Core/Src/SEGGER_RTT.c ****   memset((SEGGER_RTT_CB*)p, 0, sizeof(_SEGGER_RTT));         // Make sure that the RTT CB is always
 8888              		.loc 1 321 3 view .LVU3750
 8889              	.LVL845:
 322:Core/Src/SEGGER_RTT.c ****   p->MaxNumUpBuffers    = SEGGER_RTT_MAX_NUM_UP_BUFFERS;
 8890              		.loc 1 322 3 view .LVU3751
 8891 007e 4946     		mov	r1, r9
 8892              	.LVL846:
 322:Core/Src/SEGGER_RTT.c ****   p->MaxNumUpBuffers    = SEGGER_RTT_MAX_NUM_UP_BUFFERS;
 8893              		.loc 1 322 3 is_stmt 0 view .LVU3752
 8894 0080 7822     		movs	r2, #120
 8895              	.LVL847:
 322:Core/Src/SEGGER_RTT.c ****   p->MaxNumUpBuffers    = SEGGER_RTT_MAX_NUM_UP_BUFFERS;
 8896              		.loc 1 322 3 view .LVU3753
 8897 0082 04F13000 		add	r0, r4, #48
 8898              	.LVL848:
 322:Core/Src/SEGGER_RTT.c ****   p->MaxNumUpBuffers    = SEGGER_RTT_MAX_NUM_UP_BUFFERS;
 8899              		.loc 1 322 3 view .LVU3754
 8900 0086 FFF7FEFF 		bl	memset
 8901              	.LVL849:
 323:Core/Src/SEGGER_RTT.c ****   p->MaxNumDownBuffers  = SEGGER_RTT_MAX_NUM_DOWN_BUFFERS;
 8902              		.loc 1 323 3 is_stmt 1 view .LVU3755
 323:Core/Src/SEGGER_RTT.c ****   p->MaxNumDownBuffers  = SEGGER_RTT_MAX_NUM_DOWN_BUFFERS;
 8903              		.loc 1 323 25 is_stmt 0 view .LVU3756
 8904 008a 0322     		movs	r2, #3
 8905 008c 2261     		str	r2, [r4, #16]
 324:Core/Src/SEGGER_RTT.c ****   //
 8906              		.loc 1 324 3 is_stmt 1 view .LVU3757
 328:Core/Src/SEGGER_RTT.c ****   p->aUp[0].pBuffer       = _acUpBuffer;
 8907              		.loc 1 328 27 is_stmt 0 view .LVU3758
 8908 008e 224B     		ldr	r3, .L361+4
 324:Core/Src/SEGGER_RTT.c ****   //
 8909              		.loc 1 324 25 view .LVU3759
 8910 0090 6261     		str	r2, [r4, #20]
 328:Core/Src/SEGGER_RTT.c ****   p->aUp[0].pBuffer       = _acUpBuffer;
 8911              		.loc 1 328 3 is_stmt 1 view .LVU3760
 330:Core/Src/SEGGER_RTT.c ****   p->aUp[0].RdOff         = 0u;
 8912              		.loc 1 330 27 is_stmt 0 view .LVU3761
 8913 0092 4FF48061 		mov	r1, #1024
 329:Core/Src/SEGGER_RTT.c ****   p->aUp[0].SizeOfBuffer  = BUFFER_SIZE_UP;
 8914              		.loc 1 329 27 view .LVU3762
 8915 0096 214A     		ldr	r2, .L361+8
 328:Core/Src/SEGGER_RTT.c ****   p->aUp[0].pBuffer       = _acUpBuffer;
 8916              		.loc 1 328 27 view .LVU3763
 8917 0098 A361     		str	r3, [r4, #24]
 329:Core/Src/SEGGER_RTT.c ****   p->aUp[0].SizeOfBuffer  = BUFFER_SIZE_UP;
 8918              		.loc 1 329 3 is_stmt 1 view .LVU3764
 329:Core/Src/SEGGER_RTT.c ****   p->aUp[0].SizeOfBuffer  = BUFFER_SIZE_UP;
 8919              		.loc 1 329 27 is_stmt 0 view .LVU3765
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccSC4OZm.s 			page 243


 8920 009a E261     		str	r2, [r4, #28]
 330:Core/Src/SEGGER_RTT.c ****   p->aUp[0].RdOff         = 0u;
 8921              		.loc 1 330 3 is_stmt 1 view .LVU3766
 330:Core/Src/SEGGER_RTT.c ****   p->aUp[0].RdOff         = 0u;
 8922              		.loc 1 330 27 is_stmt 0 view .LVU3767
 8923 009c 2162     		str	r1, [r4, #32]
 331:Core/Src/SEGGER_RTT.c ****   p->aUp[0].WrOff         = 0u;
 8924              		.loc 1 331 3 is_stmt 1 view .LVU3768
 338:Core/Src/SEGGER_RTT.c ****   p->aDown[0].SizeOfBuffer  = BUFFER_SIZE_DOWN;
 8925              		.loc 1 338 29 is_stmt 0 view .LVU3769
 8926 009e 204A     		ldr	r2, .L361+12
 331:Core/Src/SEGGER_RTT.c ****   p->aUp[0].WrOff         = 0u;
 8927              		.loc 1 331 27 view .LVU3770
 8928 00a0 C4F82890 		str	r9, [r4, #40]
 332:Core/Src/SEGGER_RTT.c ****   p->aUp[0].Flags         = SEGGER_RTT_MODE_DEFAULT;
 8929              		.loc 1 332 3 is_stmt 1 view .LVU3771
 332:Core/Src/SEGGER_RTT.c ****   p->aUp[0].Flags         = SEGGER_RTT_MODE_DEFAULT;
 8930              		.loc 1 332 27 is_stmt 0 view .LVU3772
 8931 00a4 C4F82490 		str	r9, [r4, #36]
 333:Core/Src/SEGGER_RTT.c ****   //
 8932              		.loc 1 333 3 is_stmt 1 view .LVU3773
 333:Core/Src/SEGGER_RTT.c ****   //
 8933              		.loc 1 333 27 is_stmt 0 view .LVU3774
 8934 00a8 C4F82C90 		str	r9, [r4, #44]
 337:Core/Src/SEGGER_RTT.c ****   p->aDown[0].pBuffer       = _acDownBuffer;
 8935              		.loc 1 337 3 is_stmt 1 view .LVU3775
 337:Core/Src/SEGGER_RTT.c ****   p->aDown[0].pBuffer       = _acDownBuffer;
 8936              		.loc 1 337 29 is_stmt 0 view .LVU3776
 8937 00ac 2366     		str	r3, [r4, #96]
 338:Core/Src/SEGGER_RTT.c ****   p->aDown[0].SizeOfBuffer  = BUFFER_SIZE_DOWN;
 8938              		.loc 1 338 3 is_stmt 1 view .LVU3777
 339:Core/Src/SEGGER_RTT.c ****   p->aDown[0].RdOff         = 0u;
 8939              		.loc 1 339 29 is_stmt 0 view .LVU3778
 8940 00ae 1023     		movs	r3, #16
 338:Core/Src/SEGGER_RTT.c ****   p->aDown[0].SizeOfBuffer  = BUFFER_SIZE_DOWN;
 8941              		.loc 1 338 29 view .LVU3779
 8942 00b0 6266     		str	r2, [r4, #100]
 339:Core/Src/SEGGER_RTT.c ****   p->aDown[0].RdOff         = 0u;
 8943              		.loc 1 339 3 is_stmt 1 view .LVU3780
 339:Core/Src/SEGGER_RTT.c ****   p->aDown[0].RdOff         = 0u;
 8944              		.loc 1 339 29 is_stmt 0 view .LVU3781
 8945 00b2 A366     		str	r3, [r4, #104]
 340:Core/Src/SEGGER_RTT.c ****   p->aDown[0].WrOff         = 0u;
 8946              		.loc 1 340 3 is_stmt 1 view .LVU3782
 340:Core/Src/SEGGER_RTT.c ****   p->aDown[0].WrOff         = 0u;
 8947              		.loc 1 340 29 is_stmt 0 view .LVU3783
 8948 00b4 C4F87090 		str	r9, [r4, #112]
 341:Core/Src/SEGGER_RTT.c ****   p->aDown[0].Flags         = SEGGER_RTT_MODE_DEFAULT;
 8949              		.loc 1 341 3 is_stmt 1 view .LVU3784
 341:Core/Src/SEGGER_RTT.c ****   p->aDown[0].Flags         = SEGGER_RTT_MODE_DEFAULT;
 8950              		.loc 1 341 29 is_stmt 0 view .LVU3785
 8951 00b8 C4F86C90 		str	r9, [r4, #108]
 342:Core/Src/SEGGER_RTT.c ****   //
 8952              		.loc 1 342 3 is_stmt 1 view .LVU3786
 342:Core/Src/SEGGER_RTT.c ****   //
 8953              		.loc 1 342 29 is_stmt 0 view .LVU3787
 8954 00bc C4F87490 		str	r9, [r4, #116]
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccSC4OZm.s 			page 244


 348:Core/Src/SEGGER_RTT.c ****   for (i = 0; i < sizeof(_aInitStr) - 1; ++i) {
 8955              		.loc 1 348 3 is_stmt 1 view .LVU3788
 8956              		.syntax unified
 8957              	@ 348 "Core/Src/SEGGER_RTT.c" 1
 8958 00c0 BFF35F8F 		dmb
 8959              	
 8960              	@ 0 "" 2
 348:Core/Src/SEGGER_RTT.c ****   for (i = 0; i < sizeof(_aInitStr) - 1; ++i) {
 8961              		.loc 1 348 13 view .LVU3789
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 8962              		.loc 1 349 3 view .LVU3790
 8963              	.LVL850:
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 8964              		.loc 1 349 17 view .LVU3791
 350:Core/Src/SEGGER_RTT.c ****   }
 8965              		.loc 1 350 5 view .LVU3792
 350:Core/Src/SEGGER_RTT.c ****   }
 8966              		.loc 1 350 16 is_stmt 0 view .LVU3793
 8967              		.thumb
 8968              		.syntax unified
 8969 00c4 4521     		movs	r1, #69
 8970 00c6 4720     		movs	r0, #71
 8971 00c8 4FF0530C 		mov	ip, #83
 8972 00cc 84F800C0 		strb	ip, [r4]
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 8973              		.loc 1 349 42 is_stmt 1 view .LVU3794
 8974              	.LVL851:
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 8975              		.loc 1 349 17 view .LVU3795
 350:Core/Src/SEGGER_RTT.c ****   }
 8976              		.loc 1 350 5 view .LVU3796
 350:Core/Src/SEGGER_RTT.c ****   }
 8977              		.loc 1 350 16 is_stmt 0 view .LVU3797
 8978 00d0 5222     		movs	r2, #82
 8979 00d2 6170     		strb	r1, [r4, #1]
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 8980              		.loc 1 349 42 is_stmt 1 view .LVU3798
 8981              	.LVL852:
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 8982              		.loc 1 349 17 view .LVU3799
 350:Core/Src/SEGGER_RTT.c ****   }
 8983              		.loc 1 350 5 view .LVU3800
 350:Core/Src/SEGGER_RTT.c ****   }
 8984              		.loc 1 350 16 is_stmt 0 view .LVU3801
 8985 00d4 5423     		movs	r3, #84
 8986 00d6 A070     		strb	r0, [r4, #2]
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 8987              		.loc 1 349 42 is_stmt 1 view .LVU3802
 8988              	.LVL853:
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 8989              		.loc 1 349 17 view .LVU3803
 350:Core/Src/SEGGER_RTT.c ****   }
 8990              		.loc 1 350 5 view .LVU3804
 350:Core/Src/SEGGER_RTT.c ****   }
 8991              		.loc 1 350 16 is_stmt 0 view .LVU3805
 8992 00d8 E070     		strb	r0, [r4, #3]
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccSC4OZm.s 			page 245


 8993              		.loc 1 349 42 is_stmt 1 view .LVU3806
 8994              	.LVL854:
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 8995              		.loc 1 349 17 view .LVU3807
 350:Core/Src/SEGGER_RTT.c ****   }
 8996              		.loc 1 350 5 view .LVU3808
 350:Core/Src/SEGGER_RTT.c ****   }
 8997              		.loc 1 350 16 is_stmt 0 view .LVU3809
 8998 00da 2171     		strb	r1, [r4, #4]
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 8999              		.loc 1 349 42 is_stmt 1 view .LVU3810
 9000              	.LVL855:
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 9001              		.loc 1 349 17 view .LVU3811
 350:Core/Src/SEGGER_RTT.c ****   }
 9002              		.loc 1 350 5 view .LVU3812
 350:Core/Src/SEGGER_RTT.c ****   }
 9003              		.loc 1 350 16 is_stmt 0 view .LVU3813
 9004 00dc 2021     		movs	r1, #32
 9005 00de 6271     		strb	r2, [r4, #5]
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 9006              		.loc 1 349 42 is_stmt 1 view .LVU3814
 9007              	.LVL856:
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 9008              		.loc 1 349 17 view .LVU3815
 350:Core/Src/SEGGER_RTT.c ****   }
 9009              		.loc 1 350 5 view .LVU3816
 350:Core/Src/SEGGER_RTT.c ****   }
 9010              		.loc 1 350 16 is_stmt 0 view .LVU3817
 9011 00e0 A171     		strb	r1, [r4, #6]
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 9012              		.loc 1 349 42 is_stmt 1 view .LVU3818
 9013              	.LVL857:
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 9014              		.loc 1 349 17 view .LVU3819
 350:Core/Src/SEGGER_RTT.c ****   }
 9015              		.loc 1 350 5 view .LVU3820
 350:Core/Src/SEGGER_RTT.c ****   }
 9016              		.loc 1 350 16 is_stmt 0 view .LVU3821
 9017 00e2 E271     		strb	r2, [r4, #7]
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 9018              		.loc 1 349 42 is_stmt 1 view .LVU3822
 9019              	.LVL858:
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 9020              		.loc 1 349 17 view .LVU3823
 350:Core/Src/SEGGER_RTT.c ****   }
 9021              		.loc 1 350 5 view .LVU3824
 350:Core/Src/SEGGER_RTT.c ****   }
 9022              		.loc 1 350 16 is_stmt 0 view .LVU3825
 9023 00e4 2372     		strb	r3, [r4, #8]
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 9024              		.loc 1 349 42 is_stmt 1 view .LVU3826
 9025              	.LVL859:
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 9026              		.loc 1 349 17 view .LVU3827
 350:Core/Src/SEGGER_RTT.c ****   }
 9027              		.loc 1 350 5 view .LVU3828
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccSC4OZm.s 			page 246


 350:Core/Src/SEGGER_RTT.c ****   }
 9028              		.loc 1 350 16 is_stmt 0 view .LVU3829
 9029 00e6 6372     		strb	r3, [r4, #9]
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 9030              		.loc 1 349 42 is_stmt 1 view .LVU3830
 9031              	.LVL860:
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 9032              		.loc 1 349 17 view .LVU3831
 350:Core/Src/SEGGER_RTT.c ****   }
 9033              		.loc 1 350 5 view .LVU3832
 350:Core/Src/SEGGER_RTT.c ****   }
 9034              		.loc 1 350 16 is_stmt 0 view .LVU3833
 9035 00e8 84F80A90 		strb	r9, [r4, #10]
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 9036              		.loc 1 349 42 is_stmt 1 view .LVU3834
 9037              	.LVL861:
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 9038              		.loc 1 349 17 view .LVU3835
 350:Core/Src/SEGGER_RTT.c ****   }
 9039              		.loc 1 350 5 view .LVU3836
 350:Core/Src/SEGGER_RTT.c ****   }
 9040              		.loc 1 350 16 is_stmt 0 view .LVU3837
 9041 00ec 84F80B90 		strb	r9, [r4, #11]
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 9042              		.loc 1 349 42 is_stmt 1 view .LVU3838
 9043              	.LVL862:
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 9044              		.loc 1 349 17 view .LVU3839
 350:Core/Src/SEGGER_RTT.c ****   }
 9045              		.loc 1 350 5 view .LVU3840
 350:Core/Src/SEGGER_RTT.c ****   }
 9046              		.loc 1 350 16 is_stmt 0 view .LVU3841
 9047 00f0 84F80C90 		strb	r9, [r4, #12]
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 9048              		.loc 1 349 42 is_stmt 1 view .LVU3842
 9049              	.LVL863:
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 9050              		.loc 1 349 17 view .LVU3843
 350:Core/Src/SEGGER_RTT.c ****   }
 9051              		.loc 1 350 5 view .LVU3844
 350:Core/Src/SEGGER_RTT.c ****   }
 9052              		.loc 1 350 16 is_stmt 0 view .LVU3845
 9053 00f4 84F80D90 		strb	r9, [r4, #13]
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 9054              		.loc 1 349 42 is_stmt 1 view .LVU3846
 9055              	.LVL864:
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 9056              		.loc 1 349 17 view .LVU3847
 350:Core/Src/SEGGER_RTT.c ****   }
 9057              		.loc 1 350 5 view .LVU3848
 350:Core/Src/SEGGER_RTT.c ****   }
 9058              		.loc 1 350 16 is_stmt 0 view .LVU3849
 9059 00f8 84F80E90 		strb	r9, [r4, #14]
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 9060              		.loc 1 349 42 is_stmt 1 view .LVU3850
 9061              	.LVL865:
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccSC4OZm.s 			page 247


 9062              		.loc 1 349 17 view .LVU3851
 350:Core/Src/SEGGER_RTT.c ****   }
 9063              		.loc 1 350 5 view .LVU3852
 350:Core/Src/SEGGER_RTT.c ****   }
 9064              		.loc 1 350 16 is_stmt 0 view .LVU3853
 9065 00fc 84F80F90 		strb	r9, [r4, #15]
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 9066              		.loc 1 349 42 is_stmt 1 view .LVU3854
 9067              	.LVL866:
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 9068              		.loc 1 349 17 view .LVU3855
 352:Core/Src/SEGGER_RTT.c **** }
 9069              		.loc 1 352 3 view .LVU3856
 9070              		.syntax unified
 9071              	@ 352 "Core/Src/SEGGER_RTT.c" 1
 9072 0100 BFF35F8F 		dmb
 9073              	
 9074              	@ 0 "" 2
 352:Core/Src/SEGGER_RTT.c **** }
 9075              		.loc 1 352 13 view .LVU3857
 353:Core/Src/SEGGER_RTT.c **** 
 9076              		.loc 1 353 1 is_stmt 0 view .LVU3858
 9077              		.thumb
 9078              		.syntax unified
 9079 0104 86E7     		b	.L348
 9080              	.LVL867:
 9081              	.L355:
 353:Core/Src/SEGGER_RTT.c **** 
 9082              		.loc 1 353 1 view .LVU3859
 9083              	.LBE484:
 9084              	.LBE483:
 9085              	.LBE489:
 9086              	.LBB490:
1626:Core/Src/SEGGER_RTT.c ****   } while (BufferIndex < pRTTCB->MaxNumUpBuffers);
 9087              		.loc 1 1626 16 view .LVU3860
 9088 0106 0120     		movs	r0, #1
 9089 0108 9AE7     		b	.L351
 9090              	.LVL868:
 9091              	.L357:
1626:Core/Src/SEGGER_RTT.c ****   } while (BufferIndex < pRTTCB->MaxNumUpBuffers);
 9092              		.loc 1 1626 16 view .LVU3861
 9093 010a 0220     		movs	r0, #2
 9094 010c 98E7     		b	.L351
 9095              	.LVL869:
 9096              	.L358:
1637:Core/Src/SEGGER_RTT.c ****   }
 9097              		.loc 1 1637 17 view .LVU3862
 9098 010e 4FF0FF30 		mov	r0, #-1
 9099              	.LVL870:
1637:Core/Src/SEGGER_RTT.c ****   }
 9100              		.loc 1 1637 17 view .LVU3863
 9101 0112 AEE7     		b	.L352
 9102              	.L362:
 9103              		.align	2
 9104              	.L361:
 9105 0114 00000000 		.word	.LANCHOR0
 9106 0118 00000000 		.word	.LC0
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccSC4OZm.s 			page 248


 9107 011c 00000000 		.word	.LANCHOR1
 9108 0120 00000000 		.word	.LANCHOR2
 9109              	.LBE490:
 9110              		.cfi_endproc
 9111              	.LFE24:
 9113              		.section	.text.SEGGER_RTT_ConfigUpBuffer,"ax",%progbits
 9114              		.align	1
 9115              		.p2align 2,,3
 9116              		.global	SEGGER_RTT_ConfigUpBuffer
 9117              		.syntax unified
 9118              		.thumb
 9119              		.thumb_func
 9121              	SEGGER_RTT_ConfigUpBuffer:
 9122              	.LVL871:
 9123              	.LFB25:
1642:Core/Src/SEGGER_RTT.c **** 
1643:Core/Src/SEGGER_RTT.c **** /*********************************************************************
1644:Core/Src/SEGGER_RTT.c **** *
1645:Core/Src/SEGGER_RTT.c **** *       SEGGER_RTT_ConfigUpBuffer
1646:Core/Src/SEGGER_RTT.c **** *
1647:Core/Src/SEGGER_RTT.c **** *  Function description
1648:Core/Src/SEGGER_RTT.c **** *    Run-time configuration of a specific up-buffer (T->H).
1649:Core/Src/SEGGER_RTT.c **** *    Buffer to be configured is specified by index.
1650:Core/Src/SEGGER_RTT.c **** *    This includes: Buffer address, size, name, flags, ...
1651:Core/Src/SEGGER_RTT.c **** *
1652:Core/Src/SEGGER_RTT.c **** *  Parameters
1653:Core/Src/SEGGER_RTT.c **** *    BufferIndex  Index of the buffer to configure.
1654:Core/Src/SEGGER_RTT.c **** *    sName        Pointer to a constant name string.
1655:Core/Src/SEGGER_RTT.c **** *    pBuffer      Pointer to a buffer to be used.
1656:Core/Src/SEGGER_RTT.c **** *    BufferSize   Size of the buffer.
1657:Core/Src/SEGGER_RTT.c **** *    Flags        Operating modes. Define behavior if buffer is full (not enough space for entire m
1658:Core/Src/SEGGER_RTT.c **** *                 Flags[31:24] are used for validity check and must be zero. Flags[23:2] are reserv
1659:Core/Src/SEGGER_RTT.c **** *
1660:Core/Src/SEGGER_RTT.c **** *  Return value
1661:Core/Src/SEGGER_RTT.c **** *    >= 0 - O.K.
1662:Core/Src/SEGGER_RTT.c **** *     < 0 - Error
1663:Core/Src/SEGGER_RTT.c **** *
1664:Core/Src/SEGGER_RTT.c **** *  Additional information
1665:Core/Src/SEGGER_RTT.c **** *    Buffer 0 is configured on compile-time.
1666:Core/Src/SEGGER_RTT.c **** *    May only be called once per buffer.
1667:Core/Src/SEGGER_RTT.c **** *    Buffer name and flags can be reconfigured using the appropriate functions.
1668:Core/Src/SEGGER_RTT.c **** */
1669:Core/Src/SEGGER_RTT.c **** int SEGGER_RTT_ConfigUpBuffer(unsigned BufferIndex, const char* sName, void* pBuffer, unsigned Buff
 9124              		.loc 1 1669 124 is_stmt 1 view -0
 9125              		.cfi_startproc
 9126              		@ args = 4, pretend = 0, frame = 0
 9127              		@ frame_needed = 0, uses_anonymous_args = 0
1670:Core/Src/SEGGER_RTT.c ****   int r;
 9128              		.loc 1 1670 3 view .LVU3865
1671:Core/Src/SEGGER_RTT.c ****   volatile SEGGER_RTT_CB* pRTTCB;
 9129              		.loc 1 1671 3 view .LVU3866
1672:Core/Src/SEGGER_RTT.c ****   volatile SEGGER_RTT_BUFFER_UP* pUp;
 9130              		.loc 1 1672 3 view .LVU3867
 9131              	.LBB495:
1673:Core/Src/SEGGER_RTT.c **** 
1674:Core/Src/SEGGER_RTT.c ****   INIT();
 9132              		.loc 1 1674 3 view .LVU3868
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccSC4OZm.s 			page 249


 9133              		.loc 1 1674 3 view .LVU3869
 9134              		.loc 1 1674 3 view .LVU3870
 9135              		.loc 1 1674 3 view .LVU3871
 9136              	.LBE495:
1669:Core/Src/SEGGER_RTT.c ****   int r;
 9137              		.loc 1 1669 124 is_stmt 0 view .LVU3872
 9138 0000 2DE9F843 		push	{r3, r4, r5, r6, r7, r8, r9, lr}
 9139              		.cfi_def_cfa_offset 32
 9140              		.cfi_offset 3, -32
 9141              		.cfi_offset 4, -28
 9142              		.cfi_offset 5, -24
 9143              		.cfi_offset 6, -20
 9144              		.cfi_offset 7, -16
 9145              		.cfi_offset 8, -12
 9146              		.cfi_offset 9, -8
 9147              		.cfi_offset 14, -4
 9148              	.LBB498:
 9149              		.loc 1 1674 3 view .LVU3873
 9150 0004 354C     		ldr	r4, .L373
 9151              	.LBE498:
1669:Core/Src/SEGGER_RTT.c ****   int r;
 9152              		.loc 1 1669 124 view .LVU3874
 9153 0006 1F46     		mov	r7, r3
 9154              	.LBB499:
 9155              		.loc 1 1674 3 view .LVU3875
 9156 0008 2378     		ldrb	r3, [r4]	@ zero_extendqisi2
 9157              	.LVL872:
 9158              		.loc 1 1674 3 view .LVU3876
 9159              	.LBE499:
1669:Core/Src/SEGGER_RTT.c ****   int r;
 9160              		.loc 1 1669 124 view .LVU3877
 9161 000a 0546     		mov	r5, r0
 9162 000c 8946     		mov	r9, r1
 9163 000e 9046     		mov	r8, r2
 9164              	.LBB500:
 9165              		.loc 1 1674 3 view .LVU3878
 9166 0010 33B3     		cbz	r3, .L372
 9167              	.LVL873:
 9168              	.L364:
 9169              		.loc 1 1674 3 is_stmt 1 discriminator 3 view .LVU3879
 9170              	.LBE500:
 9171              		.loc 1 1674 9 discriminator 3 view .LVU3880
1675:Core/Src/SEGGER_RTT.c ****   pRTTCB = (volatile SEGGER_RTT_CB*)((unsigned char*)&_SEGGER_RTT + SEGGER_RTT_UNCACHED_OFF);  // A
 9172              		.loc 1 1675 3 discriminator 3 view .LVU3881
1676:Core/Src/SEGGER_RTT.c ****   if (BufferIndex < SEGGER_RTT_MAX_NUM_UP_BUFFERS) {
 9173              		.loc 1 1676 3 discriminator 3 view .LVU3882
 9174              		.loc 1 1676 6 is_stmt 0 discriminator 3 view .LVU3883
 9175 0012 022D     		cmp	r5, #2
 9176 0014 5ED8     		bhi	.L367
 9177              	.LBB501:
1677:Core/Src/SEGGER_RTT.c ****     SEGGER_RTT_LOCK();
 9178              		.loc 1 1677 5 is_stmt 1 view .LVU3884
 9179              		.loc 1 1677 5 view .LVU3885
 9180              		.syntax unified
 9181              	@ 1677 "Core/Src/SEGGER_RTT.c" 1
 9182 0016 EFF31186 		mrs   r6, basepri  
 9183 001a 4FF02001 		mov   r1, #32       
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccSC4OZm.s 			page 250


 9184 001e 81F31188 		msr   basepri, r1  
 9185              		
 9186              	@ 0 "" 2
 9187              	.LVL874:
 9188              		.loc 1 1677 22 view .LVU3886
1678:Core/Src/SEGGER_RTT.c ****     pUp = &pRTTCB->aUp[BufferIndex];
 9189              		.loc 1 1678 5 view .LVU3887
1679:Core/Src/SEGGER_RTT.c ****     if (BufferIndex) {
 9190              		.loc 1 1679 5 view .LVU3888
 9191              		.loc 1 1679 8 is_stmt 0 view .LVU3889
 9192              		.thumb
 9193              		.syntax unified
 9194 0022 55B9     		cbnz	r5, .L370
 9195 0024 2A46     		mov	r2, r5
 9196              	.L366:
1680:Core/Src/SEGGER_RTT.c ****       pUp->sName        = sName;
1681:Core/Src/SEGGER_RTT.c ****       pUp->pBuffer      = (char*)pBuffer;
1682:Core/Src/SEGGER_RTT.c ****       pUp->SizeOfBuffer = BufferSize;
1683:Core/Src/SEGGER_RTT.c ****       pUp->RdOff        = 0u;
1684:Core/Src/SEGGER_RTT.c ****       pUp->WrOff        = 0u;
1685:Core/Src/SEGGER_RTT.c ****     }
1686:Core/Src/SEGGER_RTT.c ****     pUp->Flags          = Flags;
 9197              		.loc 1 1686 5 is_stmt 1 view .LVU3890
 9198              		.loc 1 1686 25 is_stmt 0 view .LVU3891
 9199 0026 5319     		adds	r3, r2, r5
 9200 0028 04EBC304 		add	r4, r4, r3, lsl #3
 9201 002c 089B     		ldr	r3, [sp, #32]
 9202 002e E362     		str	r3, [r4, #44]
1687:Core/Src/SEGGER_RTT.c ****     SEGGER_RTT_UNLOCK();
 9203              		.loc 1 1687 5 is_stmt 1 view .LVU3892
 9204              		.syntax unified
 9205              	@ 1687 "Core/Src/SEGGER_RTT.c" 1
 9206 0030 86F31188 		msr   basepri, r6  
 9207              		
 9208              	@ 0 "" 2
 9209              		.thumb
 9210              		.syntax unified
 9211              	.LBE501:
 9212              		.loc 1 1687 24 view .LVU3893
1688:Core/Src/SEGGER_RTT.c ****     r =  0;
 9213              		.loc 1 1688 5 view .LVU3894
 9214              	.LVL875:
 9215              		.loc 1 1688 7 is_stmt 0 view .LVU3895
 9216 0034 0020     		movs	r0, #0
 9217              	.LVL876:
 9218              	.L363:
1689:Core/Src/SEGGER_RTT.c ****   } else {
1690:Core/Src/SEGGER_RTT.c ****     r = -1;
1691:Core/Src/SEGGER_RTT.c ****   }
1692:Core/Src/SEGGER_RTT.c ****   return r;
1693:Core/Src/SEGGER_RTT.c **** }
 9219              		.loc 1 1693 1 view .LVU3896
 9220 0036 BDE8F883 		pop	{r3, r4, r5, r6, r7, r8, r9, pc}
 9221              	.LVL877:
 9222              	.L370:
 9223              	.LBB502:
1680:Core/Src/SEGGER_RTT.c ****       pUp->pBuffer      = (char*)pBuffer;
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccSC4OZm.s 			page 251


 9224              		.loc 1 1680 7 is_stmt 1 view .LVU3897
1680:Core/Src/SEGGER_RTT.c ****       pUp->pBuffer      = (char*)pBuffer;
 9225              		.loc 1 1680 25 is_stmt 0 view .LVU3898
 9226 003a 681C     		adds	r0, r5, #1
 9227 003c 00EB4000 		add	r0, r0, r0, lsl #1
 9228 0040 C000     		lsls	r0, r0, #3
1682:Core/Src/SEGGER_RTT.c ****       pUp->RdOff        = 0u;
 9229              		.loc 1 1682 25 view .LVU3899
 9230 0042 05EB4503 		add	r3, r5, r5, lsl #1
1680:Core/Src/SEGGER_RTT.c ****       pUp->pBuffer      = (char*)pBuffer;
 9231              		.loc 1 1680 25 view .LVU3900
 9232 0046 44F80090 		str	r9, [r4, r0]
1681:Core/Src/SEGGER_RTT.c ****       pUp->SizeOfBuffer = BufferSize;
 9233              		.loc 1 1681 7 is_stmt 1 view .LVU3901
1682:Core/Src/SEGGER_RTT.c ****       pUp->RdOff        = 0u;
 9234              		.loc 1 1682 25 is_stmt 0 view .LVU3902
 9235 004a 04EBC303 		add	r3, r4, r3, lsl #3
1681:Core/Src/SEGGER_RTT.c ****       pUp->SizeOfBuffer = BufferSize;
 9236              		.loc 1 1681 25 view .LVU3903
 9237 004e 2044     		add	r0, r0, r4
1683:Core/Src/SEGGER_RTT.c ****       pUp->WrOff        = 0u;
 9238              		.loc 1 1683 25 view .LVU3904
 9239 0050 0021     		movs	r1, #0
1681:Core/Src/SEGGER_RTT.c ****       pUp->SizeOfBuffer = BufferSize;
 9240              		.loc 1 1681 25 view .LVU3905
 9241 0052 C0F80480 		str	r8, [r0, #4]
1682:Core/Src/SEGGER_RTT.c ****       pUp->RdOff        = 0u;
 9242              		.loc 1 1682 7 is_stmt 1 view .LVU3906
1682:Core/Src/SEGGER_RTT.c ****       pUp->RdOff        = 0u;
 9243              		.loc 1 1682 25 is_stmt 0 view .LVU3907
 9244 0056 6A00     		lsls	r2, r5, #1
 9245 0058 1F62     		str	r7, [r3, #32]
1683:Core/Src/SEGGER_RTT.c ****       pUp->WrOff        = 0u;
 9246              		.loc 1 1683 7 is_stmt 1 view .LVU3908
1683:Core/Src/SEGGER_RTT.c ****       pUp->WrOff        = 0u;
 9247              		.loc 1 1683 25 is_stmt 0 view .LVU3909
 9248 005a 9962     		str	r1, [r3, #40]
1684:Core/Src/SEGGER_RTT.c ****     }
 9249              		.loc 1 1684 7 is_stmt 1 view .LVU3910
1684:Core/Src/SEGGER_RTT.c ****     }
 9250              		.loc 1 1684 25 is_stmt 0 view .LVU3911
 9251 005c 5962     		str	r1, [r3, #36]
 9252 005e E2E7     		b	.L366
 9253              	.LVL878:
 9254              	.L372:
1684:Core/Src/SEGGER_RTT.c ****     }
 9255              		.loc 1 1684 25 view .LVU3912
 9256 0060 03F0FF06 		and	r6, r3, #255
 9257              	.LBE502:
 9258              	.LBB503:
1674:Core/Src/SEGGER_RTT.c ****   pRTTCB = (volatile SEGGER_RTT_CB*)((unsigned char*)&_SEGGER_RTT + SEGGER_RTT_UNCACHED_OFF);  // A
 9259              		.loc 1 1674 3 is_stmt 1 view .LVU3913
 9260              	.LBB496:
 9261              	.LBI496:
 314:Core/Src/SEGGER_RTT.c ****   volatile SEGGER_RTT_CB* p;   // Volatile to make sure that compiler cannot change the order of ac
 9262              		.loc 1 314 13 view .LVU3914
 9263              	.LBB497:
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccSC4OZm.s 			page 252


 315:Core/Src/SEGGER_RTT.c ****   static const char _aInitStr[] = "\0\0\0\0\0\0TTR REGGES";  // Init complete ID string to make sur
 9264              		.loc 1 315 3 view .LVU3915
 316:Core/Src/SEGGER_RTT.c ****   unsigned i;
 9265              		.loc 1 316 3 view .LVU3916
 317:Core/Src/SEGGER_RTT.c ****   //
 9266              		.loc 1 317 3 view .LVU3917
 321:Core/Src/SEGGER_RTT.c ****   memset((SEGGER_RTT_CB*)p, 0, sizeof(_SEGGER_RTT));         // Make sure that the RTT CB is always
 9267              		.loc 1 321 3 view .LVU3918
 9268              	.LVL879:
 322:Core/Src/SEGGER_RTT.c ****   p->MaxNumUpBuffers    = SEGGER_RTT_MAX_NUM_UP_BUFFERS;
 9269              		.loc 1 322 3 view .LVU3919
 9270 0064 3146     		mov	r1, r6
 9271              	.LVL880:
 322:Core/Src/SEGGER_RTT.c ****   p->MaxNumUpBuffers    = SEGGER_RTT_MAX_NUM_UP_BUFFERS;
 9272              		.loc 1 322 3 is_stmt 0 view .LVU3920
 9273 0066 7822     		movs	r2, #120
 9274              	.LVL881:
 322:Core/Src/SEGGER_RTT.c ****   p->MaxNumUpBuffers    = SEGGER_RTT_MAX_NUM_UP_BUFFERS;
 9275              		.loc 1 322 3 view .LVU3921
 9276 0068 04F13000 		add	r0, r4, #48
 9277              	.LVL882:
 322:Core/Src/SEGGER_RTT.c ****   p->MaxNumUpBuffers    = SEGGER_RTT_MAX_NUM_UP_BUFFERS;
 9278              		.loc 1 322 3 view .LVU3922
 9279 006c FFF7FEFF 		bl	memset
 9280              	.LVL883:
 323:Core/Src/SEGGER_RTT.c ****   p->MaxNumDownBuffers  = SEGGER_RTT_MAX_NUM_DOWN_BUFFERS;
 9281              		.loc 1 323 3 is_stmt 1 view .LVU3923
 323:Core/Src/SEGGER_RTT.c ****   p->MaxNumDownBuffers  = SEGGER_RTT_MAX_NUM_DOWN_BUFFERS;
 9282              		.loc 1 323 25 is_stmt 0 view .LVU3924
 9283 0070 0322     		movs	r2, #3
 9284 0072 2261     		str	r2, [r4, #16]
 324:Core/Src/SEGGER_RTT.c ****   //
 9285              		.loc 1 324 3 is_stmt 1 view .LVU3925
 328:Core/Src/SEGGER_RTT.c ****   p->aUp[0].pBuffer       = _acUpBuffer;
 9286              		.loc 1 328 27 is_stmt 0 view .LVU3926
 9287 0074 1A4B     		ldr	r3, .L373+4
 324:Core/Src/SEGGER_RTT.c ****   //
 9288              		.loc 1 324 25 view .LVU3927
 9289 0076 6261     		str	r2, [r4, #20]
 328:Core/Src/SEGGER_RTT.c ****   p->aUp[0].pBuffer       = _acUpBuffer;
 9290              		.loc 1 328 3 is_stmt 1 view .LVU3928
 330:Core/Src/SEGGER_RTT.c ****   p->aUp[0].RdOff         = 0u;
 9291              		.loc 1 330 27 is_stmt 0 view .LVU3929
 9292 0078 4FF48061 		mov	r1, #1024
 329:Core/Src/SEGGER_RTT.c ****   p->aUp[0].SizeOfBuffer  = BUFFER_SIZE_UP;
 9293              		.loc 1 329 27 view .LVU3930
 9294 007c 194A     		ldr	r2, .L373+8
 328:Core/Src/SEGGER_RTT.c ****   p->aUp[0].pBuffer       = _acUpBuffer;
 9295              		.loc 1 328 27 view .LVU3931
 9296 007e A361     		str	r3, [r4, #24]
 329:Core/Src/SEGGER_RTT.c ****   p->aUp[0].SizeOfBuffer  = BUFFER_SIZE_UP;
 9297              		.loc 1 329 3 is_stmt 1 view .LVU3932
 329:Core/Src/SEGGER_RTT.c ****   p->aUp[0].SizeOfBuffer  = BUFFER_SIZE_UP;
 9298              		.loc 1 329 27 is_stmt 0 view .LVU3933
 9299 0080 E261     		str	r2, [r4, #28]
 330:Core/Src/SEGGER_RTT.c ****   p->aUp[0].RdOff         = 0u;
 9300              		.loc 1 330 3 is_stmt 1 view .LVU3934
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccSC4OZm.s 			page 253


 330:Core/Src/SEGGER_RTT.c ****   p->aUp[0].RdOff         = 0u;
 9301              		.loc 1 330 27 is_stmt 0 view .LVU3935
 9302 0082 2162     		str	r1, [r4, #32]
 331:Core/Src/SEGGER_RTT.c ****   p->aUp[0].WrOff         = 0u;
 9303              		.loc 1 331 3 is_stmt 1 view .LVU3936
 338:Core/Src/SEGGER_RTT.c ****   p->aDown[0].SizeOfBuffer  = BUFFER_SIZE_DOWN;
 9304              		.loc 1 338 29 is_stmt 0 view .LVU3937
 9305 0084 184A     		ldr	r2, .L373+12
 331:Core/Src/SEGGER_RTT.c ****   p->aUp[0].WrOff         = 0u;
 9306              		.loc 1 331 27 view .LVU3938
 9307 0086 A662     		str	r6, [r4, #40]
 332:Core/Src/SEGGER_RTT.c ****   p->aUp[0].Flags         = SEGGER_RTT_MODE_DEFAULT;
 9308              		.loc 1 332 3 is_stmt 1 view .LVU3939
 332:Core/Src/SEGGER_RTT.c ****   p->aUp[0].Flags         = SEGGER_RTT_MODE_DEFAULT;
 9309              		.loc 1 332 27 is_stmt 0 view .LVU3940
 9310 0088 6662     		str	r6, [r4, #36]
 333:Core/Src/SEGGER_RTT.c ****   //
 9311              		.loc 1 333 3 is_stmt 1 view .LVU3941
 333:Core/Src/SEGGER_RTT.c ****   //
 9312              		.loc 1 333 27 is_stmt 0 view .LVU3942
 9313 008a E662     		str	r6, [r4, #44]
 337:Core/Src/SEGGER_RTT.c ****   p->aDown[0].pBuffer       = _acDownBuffer;
 9314              		.loc 1 337 3 is_stmt 1 view .LVU3943
 337:Core/Src/SEGGER_RTT.c ****   p->aDown[0].pBuffer       = _acDownBuffer;
 9315              		.loc 1 337 29 is_stmt 0 view .LVU3944
 9316 008c 2366     		str	r3, [r4, #96]
 338:Core/Src/SEGGER_RTT.c ****   p->aDown[0].SizeOfBuffer  = BUFFER_SIZE_DOWN;
 9317              		.loc 1 338 3 is_stmt 1 view .LVU3945
 339:Core/Src/SEGGER_RTT.c ****   p->aDown[0].RdOff         = 0u;
 9318              		.loc 1 339 29 is_stmt 0 view .LVU3946
 9319 008e 1023     		movs	r3, #16
 338:Core/Src/SEGGER_RTT.c ****   p->aDown[0].SizeOfBuffer  = BUFFER_SIZE_DOWN;
 9320              		.loc 1 338 29 view .LVU3947
 9321 0090 6266     		str	r2, [r4, #100]
 339:Core/Src/SEGGER_RTT.c ****   p->aDown[0].RdOff         = 0u;
 9322              		.loc 1 339 3 is_stmt 1 view .LVU3948
 339:Core/Src/SEGGER_RTT.c ****   p->aDown[0].RdOff         = 0u;
 9323              		.loc 1 339 29 is_stmt 0 view .LVU3949
 9324 0092 A366     		str	r3, [r4, #104]
 340:Core/Src/SEGGER_RTT.c ****   p->aDown[0].WrOff         = 0u;
 9325              		.loc 1 340 3 is_stmt 1 view .LVU3950
 340:Core/Src/SEGGER_RTT.c ****   p->aDown[0].WrOff         = 0u;
 9326              		.loc 1 340 29 is_stmt 0 view .LVU3951
 9327 0094 2667     		str	r6, [r4, #112]
 341:Core/Src/SEGGER_RTT.c ****   p->aDown[0].Flags         = SEGGER_RTT_MODE_DEFAULT;
 9328              		.loc 1 341 3 is_stmt 1 view .LVU3952
 341:Core/Src/SEGGER_RTT.c ****   p->aDown[0].Flags         = SEGGER_RTT_MODE_DEFAULT;
 9329              		.loc 1 341 29 is_stmt 0 view .LVU3953
 9330 0096 E666     		str	r6, [r4, #108]
 342:Core/Src/SEGGER_RTT.c ****   //
 9331              		.loc 1 342 3 is_stmt 1 view .LVU3954
 342:Core/Src/SEGGER_RTT.c ****   //
 9332              		.loc 1 342 29 is_stmt 0 view .LVU3955
 9333 0098 6667     		str	r6, [r4, #116]
 348:Core/Src/SEGGER_RTT.c ****   for (i = 0; i < sizeof(_aInitStr) - 1; ++i) {
 9334              		.loc 1 348 3 is_stmt 1 view .LVU3956
 9335              		.syntax unified
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccSC4OZm.s 			page 254


 9336              	@ 348 "Core/Src/SEGGER_RTT.c" 1
 9337 009a BFF35F8F 		dmb
 9338              	
 9339              	@ 0 "" 2
 348:Core/Src/SEGGER_RTT.c ****   for (i = 0; i < sizeof(_aInitStr) - 1; ++i) {
 9340              		.loc 1 348 13 view .LVU3957
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 9341              		.loc 1 349 3 view .LVU3958
 9342              	.LVL884:
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 9343              		.loc 1 349 17 view .LVU3959
 350:Core/Src/SEGGER_RTT.c ****   }
 9344              		.loc 1 350 5 view .LVU3960
 350:Core/Src/SEGGER_RTT.c ****   }
 9345              		.loc 1 350 16 is_stmt 0 view .LVU3961
 9346              		.thumb
 9347              		.syntax unified
 9348 009e 4521     		movs	r1, #69
 9349 00a0 4720     		movs	r0, #71
 9350 00a2 4FF0530C 		mov	ip, #83
 9351 00a6 84F800C0 		strb	ip, [r4]
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 9352              		.loc 1 349 42 is_stmt 1 view .LVU3962
 9353              	.LVL885:
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 9354              		.loc 1 349 17 view .LVU3963
 350:Core/Src/SEGGER_RTT.c ****   }
 9355              		.loc 1 350 5 view .LVU3964
 350:Core/Src/SEGGER_RTT.c ****   }
 9356              		.loc 1 350 16 is_stmt 0 view .LVU3965
 9357 00aa 5222     		movs	r2, #82
 9358 00ac 6170     		strb	r1, [r4, #1]
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 9359              		.loc 1 349 42 is_stmt 1 view .LVU3966
 9360              	.LVL886:
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 9361              		.loc 1 349 17 view .LVU3967
 350:Core/Src/SEGGER_RTT.c ****   }
 9362              		.loc 1 350 5 view .LVU3968
 350:Core/Src/SEGGER_RTT.c ****   }
 9363              		.loc 1 350 16 is_stmt 0 view .LVU3969
 9364 00ae 5423     		movs	r3, #84
 9365 00b0 A070     		strb	r0, [r4, #2]
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 9366              		.loc 1 349 42 is_stmt 1 view .LVU3970
 9367              	.LVL887:
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 9368              		.loc 1 349 17 view .LVU3971
 350:Core/Src/SEGGER_RTT.c ****   }
 9369              		.loc 1 350 5 view .LVU3972
 350:Core/Src/SEGGER_RTT.c ****   }
 9370              		.loc 1 350 16 is_stmt 0 view .LVU3973
 9371 00b2 E070     		strb	r0, [r4, #3]
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 9372              		.loc 1 349 42 is_stmt 1 view .LVU3974
 9373              	.LVL888:
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccSC4OZm.s 			page 255


 9374              		.loc 1 349 17 view .LVU3975
 350:Core/Src/SEGGER_RTT.c ****   }
 9375              		.loc 1 350 5 view .LVU3976
 350:Core/Src/SEGGER_RTT.c ****   }
 9376              		.loc 1 350 16 is_stmt 0 view .LVU3977
 9377 00b4 2171     		strb	r1, [r4, #4]
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 9378              		.loc 1 349 42 is_stmt 1 view .LVU3978
 9379              	.LVL889:
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 9380              		.loc 1 349 17 view .LVU3979
 350:Core/Src/SEGGER_RTT.c ****   }
 9381              		.loc 1 350 5 view .LVU3980
 350:Core/Src/SEGGER_RTT.c ****   }
 9382              		.loc 1 350 16 is_stmt 0 view .LVU3981
 9383 00b6 2021     		movs	r1, #32
 9384 00b8 6271     		strb	r2, [r4, #5]
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 9385              		.loc 1 349 42 is_stmt 1 view .LVU3982
 9386              	.LVL890:
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 9387              		.loc 1 349 17 view .LVU3983
 350:Core/Src/SEGGER_RTT.c ****   }
 9388              		.loc 1 350 5 view .LVU3984
 350:Core/Src/SEGGER_RTT.c ****   }
 9389              		.loc 1 350 16 is_stmt 0 view .LVU3985
 9390 00ba A171     		strb	r1, [r4, #6]
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 9391              		.loc 1 349 42 is_stmt 1 view .LVU3986
 9392              	.LVL891:
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 9393              		.loc 1 349 17 view .LVU3987
 350:Core/Src/SEGGER_RTT.c ****   }
 9394              		.loc 1 350 5 view .LVU3988
 350:Core/Src/SEGGER_RTT.c ****   }
 9395              		.loc 1 350 16 is_stmt 0 view .LVU3989
 9396 00bc E271     		strb	r2, [r4, #7]
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 9397              		.loc 1 349 42 is_stmt 1 view .LVU3990
 9398              	.LVL892:
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 9399              		.loc 1 349 17 view .LVU3991
 350:Core/Src/SEGGER_RTT.c ****   }
 9400              		.loc 1 350 5 view .LVU3992
 350:Core/Src/SEGGER_RTT.c ****   }
 9401              		.loc 1 350 16 is_stmt 0 view .LVU3993
 9402 00be 2372     		strb	r3, [r4, #8]
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 9403              		.loc 1 349 42 is_stmt 1 view .LVU3994
 9404              	.LVL893:
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 9405              		.loc 1 349 17 view .LVU3995
 350:Core/Src/SEGGER_RTT.c ****   }
 9406              		.loc 1 350 5 view .LVU3996
 350:Core/Src/SEGGER_RTT.c ****   }
 9407              		.loc 1 350 16 is_stmt 0 view .LVU3997
 9408 00c0 6372     		strb	r3, [r4, #9]
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccSC4OZm.s 			page 256


 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 9409              		.loc 1 349 42 is_stmt 1 view .LVU3998
 9410              	.LVL894:
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 9411              		.loc 1 349 17 view .LVU3999
 350:Core/Src/SEGGER_RTT.c ****   }
 9412              		.loc 1 350 5 view .LVU4000
 350:Core/Src/SEGGER_RTT.c ****   }
 9413              		.loc 1 350 16 is_stmt 0 view .LVU4001
 9414 00c2 A672     		strb	r6, [r4, #10]
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 9415              		.loc 1 349 42 is_stmt 1 view .LVU4002
 9416              	.LVL895:
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 9417              		.loc 1 349 17 view .LVU4003
 350:Core/Src/SEGGER_RTT.c ****   }
 9418              		.loc 1 350 5 view .LVU4004
 350:Core/Src/SEGGER_RTT.c ****   }
 9419              		.loc 1 350 16 is_stmt 0 view .LVU4005
 9420 00c4 E672     		strb	r6, [r4, #11]
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 9421              		.loc 1 349 42 is_stmt 1 view .LVU4006
 9422              	.LVL896:
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 9423              		.loc 1 349 17 view .LVU4007
 350:Core/Src/SEGGER_RTT.c ****   }
 9424              		.loc 1 350 5 view .LVU4008
 350:Core/Src/SEGGER_RTT.c ****   }
 9425              		.loc 1 350 16 is_stmt 0 view .LVU4009
 9426 00c6 2673     		strb	r6, [r4, #12]
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 9427              		.loc 1 349 42 is_stmt 1 view .LVU4010
 9428              	.LVL897:
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 9429              		.loc 1 349 17 view .LVU4011
 350:Core/Src/SEGGER_RTT.c ****   }
 9430              		.loc 1 350 5 view .LVU4012
 350:Core/Src/SEGGER_RTT.c ****   }
 9431              		.loc 1 350 16 is_stmt 0 view .LVU4013
 9432 00c8 6673     		strb	r6, [r4, #13]
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 9433              		.loc 1 349 42 is_stmt 1 view .LVU4014
 9434              	.LVL898:
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 9435              		.loc 1 349 17 view .LVU4015
 350:Core/Src/SEGGER_RTT.c ****   }
 9436              		.loc 1 350 5 view .LVU4016
 350:Core/Src/SEGGER_RTT.c ****   }
 9437              		.loc 1 350 16 is_stmt 0 view .LVU4017
 9438 00ca A673     		strb	r6, [r4, #14]
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 9439              		.loc 1 349 42 is_stmt 1 view .LVU4018
 9440              	.LVL899:
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 9441              		.loc 1 349 17 view .LVU4019
 350:Core/Src/SEGGER_RTT.c ****   }
 9442              		.loc 1 350 5 view .LVU4020
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccSC4OZm.s 			page 257


 350:Core/Src/SEGGER_RTT.c ****   }
 9443              		.loc 1 350 16 is_stmt 0 view .LVU4021
 9444 00cc E673     		strb	r6, [r4, #15]
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 9445              		.loc 1 349 42 is_stmt 1 view .LVU4022
 9446              	.LVL900:
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 9447              		.loc 1 349 17 view .LVU4023
 352:Core/Src/SEGGER_RTT.c **** }
 9448              		.loc 1 352 3 view .LVU4024
 9449              		.syntax unified
 9450              	@ 352 "Core/Src/SEGGER_RTT.c" 1
 9451 00ce BFF35F8F 		dmb
 9452              	
 9453              	@ 0 "" 2
 352:Core/Src/SEGGER_RTT.c **** }
 9454              		.loc 1 352 13 view .LVU4025
 353:Core/Src/SEGGER_RTT.c **** 
 9455              		.loc 1 353 1 is_stmt 0 view .LVU4026
 9456              		.thumb
 9457              		.syntax unified
 9458 00d2 9EE7     		b	.L364
 9459              	.LVL901:
 9460              	.L367:
 353:Core/Src/SEGGER_RTT.c **** 
 9461              		.loc 1 353 1 view .LVU4027
 9462              	.LBE497:
 9463              	.LBE496:
 9464              	.LBE503:
1690:Core/Src/SEGGER_RTT.c ****   }
 9465              		.loc 1 1690 7 view .LVU4028
 9466 00d4 4FF0FF30 		mov	r0, #-1
 9467              	.LVL902:
1692:Core/Src/SEGGER_RTT.c **** }
 9468              		.loc 1 1692 3 is_stmt 1 view .LVU4029
1692:Core/Src/SEGGER_RTT.c **** }
 9469              		.loc 1 1692 10 is_stmt 0 view .LVU4030
 9470 00d8 ADE7     		b	.L363
 9471              	.L374:
 9472 00da 00BF     		.align	2
 9473              	.L373:
 9474 00dc 00000000 		.word	.LANCHOR0
 9475 00e0 00000000 		.word	.LC0
 9476 00e4 00000000 		.word	.LANCHOR1
 9477 00e8 00000000 		.word	.LANCHOR2
 9478              		.cfi_endproc
 9479              	.LFE25:
 9481              		.section	.text.SEGGER_RTT_ConfigDownBuffer,"ax",%progbits
 9482              		.align	1
 9483              		.p2align 2,,3
 9484              		.global	SEGGER_RTT_ConfigDownBuffer
 9485              		.syntax unified
 9486              		.thumb
 9487              		.thumb_func
 9489              	SEGGER_RTT_ConfigDownBuffer:
 9490              	.LVL903:
 9491              	.LFB26:
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccSC4OZm.s 			page 258


1694:Core/Src/SEGGER_RTT.c **** 
1695:Core/Src/SEGGER_RTT.c **** /*********************************************************************
1696:Core/Src/SEGGER_RTT.c **** *
1697:Core/Src/SEGGER_RTT.c **** *       SEGGER_RTT_ConfigDownBuffer
1698:Core/Src/SEGGER_RTT.c **** *
1699:Core/Src/SEGGER_RTT.c **** *  Function description
1700:Core/Src/SEGGER_RTT.c **** *    Run-time configuration of a specific down-buffer (H->T).
1701:Core/Src/SEGGER_RTT.c **** *    Buffer to be configured is specified by index.
1702:Core/Src/SEGGER_RTT.c **** *    This includes: Buffer address, size, name, flags, ...
1703:Core/Src/SEGGER_RTT.c **** *
1704:Core/Src/SEGGER_RTT.c **** *  Parameters
1705:Core/Src/SEGGER_RTT.c **** *    BufferIndex  Index of the buffer to configure.
1706:Core/Src/SEGGER_RTT.c **** *    sName        Pointer to a constant name string.
1707:Core/Src/SEGGER_RTT.c **** *    pBuffer      Pointer to a buffer to be used.
1708:Core/Src/SEGGER_RTT.c **** *    BufferSize   Size of the buffer.
1709:Core/Src/SEGGER_RTT.c **** *    Flags        Operating modes. Define behavior if buffer is full (not enough space for entire m
1710:Core/Src/SEGGER_RTT.c **** *                 Flags[31:24] are used for validity check and must be zero. Flags[23:2] are reserv
1711:Core/Src/SEGGER_RTT.c **** *
1712:Core/Src/SEGGER_RTT.c **** *  Return value
1713:Core/Src/SEGGER_RTT.c **** *    >= 0  O.K.
1714:Core/Src/SEGGER_RTT.c **** *     < 0  Error
1715:Core/Src/SEGGER_RTT.c **** *
1716:Core/Src/SEGGER_RTT.c **** *  Additional information
1717:Core/Src/SEGGER_RTT.c **** *    Buffer 0 is configured on compile-time.
1718:Core/Src/SEGGER_RTT.c **** *    May only be called once per buffer.
1719:Core/Src/SEGGER_RTT.c **** *    Buffer name and flags can be reconfigured using the appropriate functions.
1720:Core/Src/SEGGER_RTT.c **** */
1721:Core/Src/SEGGER_RTT.c **** int SEGGER_RTT_ConfigDownBuffer(unsigned BufferIndex, const char* sName, void* pBuffer, unsigned Bu
 9492              		.loc 1 1721 126 is_stmt 1 view -0
 9493              		.cfi_startproc
 9494              		@ args = 4, pretend = 0, frame = 0
 9495              		@ frame_needed = 0, uses_anonymous_args = 0
1722:Core/Src/SEGGER_RTT.c ****   int r;
 9496              		.loc 1 1722 3 view .LVU4032
1723:Core/Src/SEGGER_RTT.c ****   volatile SEGGER_RTT_CB* pRTTCB;
 9497              		.loc 1 1723 3 view .LVU4033
1724:Core/Src/SEGGER_RTT.c ****   volatile SEGGER_RTT_BUFFER_DOWN* pDown;
 9498              		.loc 1 1724 3 view .LVU4034
 9499              	.LBB508:
1725:Core/Src/SEGGER_RTT.c **** 
1726:Core/Src/SEGGER_RTT.c ****   INIT();
 9500              		.loc 1 1726 3 view .LVU4035
 9501              		.loc 1 1726 3 view .LVU4036
 9502              		.loc 1 1726 3 view .LVU4037
 9503              		.loc 1 1726 3 view .LVU4038
 9504              	.LBE508:
1721:Core/Src/SEGGER_RTT.c ****   int r;
 9505              		.loc 1 1721 126 is_stmt 0 view .LVU4039
 9506 0000 2DE9F843 		push	{r3, r4, r5, r6, r7, r8, r9, lr}
 9507              		.cfi_def_cfa_offset 32
 9508              		.cfi_offset 3, -32
 9509              		.cfi_offset 4, -28
 9510              		.cfi_offset 5, -24
 9511              		.cfi_offset 6, -20
 9512              		.cfi_offset 7, -16
 9513              		.cfi_offset 8, -12
 9514              		.cfi_offset 9, -8
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccSC4OZm.s 			page 259


 9515              		.cfi_offset 14, -4
 9516              	.LBB511:
 9517              		.loc 1 1726 3 view .LVU4040
 9518 0004 334C     		ldr	r4, .L385
 9519              	.LBE511:
1721:Core/Src/SEGGER_RTT.c ****   int r;
 9520              		.loc 1 1721 126 view .LVU4041
 9521 0006 0546     		mov	r5, r0
 9522              	.LBB512:
 9523              		.loc 1 1726 3 view .LVU4042
 9524 0008 2078     		ldrb	r0, [r4]	@ zero_extendqisi2
 9525              	.LVL904:
 9526              		.loc 1 1726 3 view .LVU4043
 9527              	.LBE512:
1721:Core/Src/SEGGER_RTT.c ****   int r;
 9528              		.loc 1 1721 126 view .LVU4044
 9529 000a 8846     		mov	r8, r1
 9530 000c 1746     		mov	r7, r2
 9531 000e 9946     		mov	r9, r3
 9532              	.LBB513:
 9533              		.loc 1 1726 3 view .LVU4045
 9534 0010 18B3     		cbz	r0, .L384
 9535              	.LVL905:
 9536              	.L376:
 9537              		.loc 1 1726 3 is_stmt 1 discriminator 3 view .LVU4046
 9538              	.LBE513:
 9539              		.loc 1 1726 9 discriminator 3 view .LVU4047
1727:Core/Src/SEGGER_RTT.c ****   pRTTCB = (volatile SEGGER_RTT_CB*)((unsigned char*)&_SEGGER_RTT + SEGGER_RTT_UNCACHED_OFF);  // A
 9540              		.loc 1 1727 3 discriminator 3 view .LVU4048
1728:Core/Src/SEGGER_RTT.c ****   if (BufferIndex < SEGGER_RTT_MAX_NUM_DOWN_BUFFERS) {
 9541              		.loc 1 1728 3 discriminator 3 view .LVU4049
 9542              		.loc 1 1728 6 is_stmt 0 discriminator 3 view .LVU4050
 9543 0012 022D     		cmp	r5, #2
 9544 0014 5BD8     		bhi	.L379
 9545              	.LBB514:
1729:Core/Src/SEGGER_RTT.c ****     SEGGER_RTT_LOCK();
 9546              		.loc 1 1729 5 is_stmt 1 view .LVU4051
 9547              		.loc 1 1729 5 view .LVU4052
 9548              		.syntax unified
 9549              	@ 1729 "Core/Src/SEGGER_RTT.c" 1
 9550 0016 EFF31182 		mrs   r2, basepri  
 9551 001a 4FF02001 		mov   r1, #32       
 9552 001e 81F31188 		msr   basepri, r1  
 9553              		
 9554              	@ 0 "" 2
 9555              	.LVL906:
 9556              		.loc 1 1729 22 view .LVU4053
1730:Core/Src/SEGGER_RTT.c ****     pDown = &pRTTCB->aDown[BufferIndex];
 9557              		.loc 1 1730 5 view .LVU4054
1731:Core/Src/SEGGER_RTT.c ****     if (BufferIndex) {
 9558              		.loc 1 1731 5 view .LVU4055
 9559              		.loc 1 1731 8 is_stmt 0 view .LVU4056
 9560              		.thumb
 9561              		.syntax unified
 9562 0022 65B9     		cbnz	r5, .L382
 9563 0024 2B46     		mov	r3, r5
 9564              	.L378:
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccSC4OZm.s 			page 260


1732:Core/Src/SEGGER_RTT.c ****       pDown->sName        = sName;
1733:Core/Src/SEGGER_RTT.c ****       pDown->pBuffer      = (char*)pBuffer;
1734:Core/Src/SEGGER_RTT.c ****       pDown->SizeOfBuffer = BufferSize;
1735:Core/Src/SEGGER_RTT.c ****       pDown->RdOff        = 0u;
1736:Core/Src/SEGGER_RTT.c ****       pDown->WrOff        = 0u;
1737:Core/Src/SEGGER_RTT.c ****     }
1738:Core/Src/SEGGER_RTT.c ****     pDown->Flags          = Flags;
 9565              		.loc 1 1738 5 is_stmt 1 view .LVU4057
 9566              		.loc 1 1738 27 is_stmt 0 view .LVU4058
 9567 0026 2B44     		add	r3, r3, r5
 9568 0028 04EBC304 		add	r4, r4, r3, lsl #3
 9569 002c 089B     		ldr	r3, [sp, #32]
 9570 002e 6367     		str	r3, [r4, #116]
1739:Core/Src/SEGGER_RTT.c ****     RTT__DMB();                     // Force data write to be complete before writing the <WrOff>, 
 9571              		.loc 1 1739 5 is_stmt 1 view .LVU4059
 9572              		.syntax unified
 9573              	@ 1739 "Core/Src/SEGGER_RTT.c" 1
 9574 0030 BFF35F8F 		dmb
 9575              	
 9576              	@ 0 "" 2
 9577              		.loc 1 1739 15 view .LVU4060
1740:Core/Src/SEGGER_RTT.c ****     SEGGER_RTT_UNLOCK();
 9578              		.loc 1 1740 5 view .LVU4061
 9579              	@ 1740 "Core/Src/SEGGER_RTT.c" 1
 9580 0034 82F31188 		msr   basepri, r2  
 9581              		
 9582              	@ 0 "" 2
 9583              		.thumb
 9584              		.syntax unified
 9585              	.LBE514:
 9586              		.loc 1 1740 24 view .LVU4062
1741:Core/Src/SEGGER_RTT.c ****     r =  0;
 9587              		.loc 1 1741 5 view .LVU4063
 9588              	.LVL907:
 9589              		.loc 1 1741 7 is_stmt 0 view .LVU4064
 9590 0038 0020     		movs	r0, #0
 9591              	.LVL908:
 9592              	.L375:
1742:Core/Src/SEGGER_RTT.c ****   } else {
1743:Core/Src/SEGGER_RTT.c ****     r = -1;
1744:Core/Src/SEGGER_RTT.c ****   }
1745:Core/Src/SEGGER_RTT.c ****   return r;
1746:Core/Src/SEGGER_RTT.c **** }
 9593              		.loc 1 1746 1 view .LVU4065
 9594 003a BDE8F883 		pop	{r3, r4, r5, r6, r7, r8, r9, pc}
 9595              	.LVL909:
 9596              	.L382:
 9597              	.LBB515:
1732:Core/Src/SEGGER_RTT.c ****       pDown->pBuffer      = (char*)pBuffer;
 9598              		.loc 1 1732 7 is_stmt 1 view .LVU4066
1732:Core/Src/SEGGER_RTT.c ****       pDown->pBuffer      = (char*)pBuffer;
 9599              		.loc 1 1732 27 is_stmt 0 view .LVU4067
 9600 003e 05EB4500 		add	r0, r5, r5, lsl #1
 9601 0042 04EBC000 		add	r0, r4, r0, lsl #3
1735:Core/Src/SEGGER_RTT.c ****       pDown->WrOff        = 0u;
 9602              		.loc 1 1735 27 view .LVU4068
 9603 0046 0023     		movs	r3, #0
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccSC4OZm.s 			page 261


1732:Core/Src/SEGGER_RTT.c ****       pDown->pBuffer      = (char*)pBuffer;
 9604              		.loc 1 1732 27 view .LVU4069
 9605 0048 C0F86080 		str	r8, [r0, #96]
1733:Core/Src/SEGGER_RTT.c ****       pDown->SizeOfBuffer = BufferSize;
 9606              		.loc 1 1733 7 is_stmt 1 view .LVU4070
1733:Core/Src/SEGGER_RTT.c ****       pDown->SizeOfBuffer = BufferSize;
 9607              		.loc 1 1733 27 is_stmt 0 view .LVU4071
 9608 004c 4766     		str	r7, [r0, #100]
1734:Core/Src/SEGGER_RTT.c ****       pDown->RdOff        = 0u;
 9609              		.loc 1 1734 7 is_stmt 1 view .LVU4072
1734:Core/Src/SEGGER_RTT.c ****       pDown->RdOff        = 0u;
 9610              		.loc 1 1734 27 is_stmt 0 view .LVU4073
 9611 004e C0F86890 		str	r9, [r0, #104]
1735:Core/Src/SEGGER_RTT.c ****       pDown->WrOff        = 0u;
 9612              		.loc 1 1735 7 is_stmt 1 view .LVU4074
1735:Core/Src/SEGGER_RTT.c ****       pDown->WrOff        = 0u;
 9613              		.loc 1 1735 27 is_stmt 0 view .LVU4075
 9614 0052 0367     		str	r3, [r0, #112]
1736:Core/Src/SEGGER_RTT.c ****     }
 9615              		.loc 1 1736 7 is_stmt 1 view .LVU4076
1736:Core/Src/SEGGER_RTT.c ****     }
 9616              		.loc 1 1736 27 is_stmt 0 view .LVU4077
 9617 0054 C366     		str	r3, [r0, #108]
1732:Core/Src/SEGGER_RTT.c ****       pDown->pBuffer      = (char*)pBuffer;
 9618              		.loc 1 1732 27 view .LVU4078
 9619 0056 6B00     		lsls	r3, r5, #1
 9620 0058 E5E7     		b	.L378
 9621              	.LVL910:
 9622              	.L384:
1732:Core/Src/SEGGER_RTT.c ****       pDown->pBuffer      = (char*)pBuffer;
 9623              		.loc 1 1732 27 view .LVU4079
 9624 005a 00F0FF06 		and	r6, r0, #255
 9625              	.LBE515:
 9626              	.LBB516:
1726:Core/Src/SEGGER_RTT.c ****   pRTTCB = (volatile SEGGER_RTT_CB*)((unsigned char*)&_SEGGER_RTT + SEGGER_RTT_UNCACHED_OFF);  // A
 9627              		.loc 1 1726 3 is_stmt 1 view .LVU4080
 9628              	.LBB509:
 9629              	.LBI509:
 314:Core/Src/SEGGER_RTT.c ****   volatile SEGGER_RTT_CB* p;   // Volatile to make sure that compiler cannot change the order of ac
 9630              		.loc 1 314 13 view .LVU4081
 9631              	.LBB510:
 315:Core/Src/SEGGER_RTT.c ****   static const char _aInitStr[] = "\0\0\0\0\0\0TTR REGGES";  // Init complete ID string to make sur
 9632              		.loc 1 315 3 view .LVU4082
 316:Core/Src/SEGGER_RTT.c ****   unsigned i;
 9633              		.loc 1 316 3 view .LVU4083
 317:Core/Src/SEGGER_RTT.c ****   //
 9634              		.loc 1 317 3 view .LVU4084
 321:Core/Src/SEGGER_RTT.c ****   memset((SEGGER_RTT_CB*)p, 0, sizeof(_SEGGER_RTT));         // Make sure that the RTT CB is always
 9635              		.loc 1 321 3 view .LVU4085
 9636              	.LVL911:
 322:Core/Src/SEGGER_RTT.c ****   p->MaxNumUpBuffers    = SEGGER_RTT_MAX_NUM_UP_BUFFERS;
 9637              		.loc 1 322 3 view .LVU4086
 9638 005e 3146     		mov	r1, r6
 9639              	.LVL912:
 322:Core/Src/SEGGER_RTT.c ****   p->MaxNumUpBuffers    = SEGGER_RTT_MAX_NUM_UP_BUFFERS;
 9640              		.loc 1 322 3 is_stmt 0 view .LVU4087
 9641 0060 7822     		movs	r2, #120
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccSC4OZm.s 			page 262


 9642              	.LVL913:
 322:Core/Src/SEGGER_RTT.c ****   p->MaxNumUpBuffers    = SEGGER_RTT_MAX_NUM_UP_BUFFERS;
 9643              		.loc 1 322 3 view .LVU4088
 9644 0062 04F13000 		add	r0, r4, #48
 9645 0066 FFF7FEFF 		bl	memset
 9646              	.LVL914:
 323:Core/Src/SEGGER_RTT.c ****   p->MaxNumDownBuffers  = SEGGER_RTT_MAX_NUM_DOWN_BUFFERS;
 9647              		.loc 1 323 3 is_stmt 1 view .LVU4089
 323:Core/Src/SEGGER_RTT.c ****   p->MaxNumDownBuffers  = SEGGER_RTT_MAX_NUM_DOWN_BUFFERS;
 9648              		.loc 1 323 25 is_stmt 0 view .LVU4090
 9649 006a 0322     		movs	r2, #3
 9650 006c 2261     		str	r2, [r4, #16]
 324:Core/Src/SEGGER_RTT.c ****   //
 9651              		.loc 1 324 3 is_stmt 1 view .LVU4091
 328:Core/Src/SEGGER_RTT.c ****   p->aUp[0].pBuffer       = _acUpBuffer;
 9652              		.loc 1 328 27 is_stmt 0 view .LVU4092
 9653 006e 1A4B     		ldr	r3, .L385+4
 324:Core/Src/SEGGER_RTT.c ****   //
 9654              		.loc 1 324 25 view .LVU4093
 9655 0070 6261     		str	r2, [r4, #20]
 328:Core/Src/SEGGER_RTT.c ****   p->aUp[0].pBuffer       = _acUpBuffer;
 9656              		.loc 1 328 3 is_stmt 1 view .LVU4094
 330:Core/Src/SEGGER_RTT.c ****   p->aUp[0].RdOff         = 0u;
 9657              		.loc 1 330 27 is_stmt 0 view .LVU4095
 9658 0072 4FF48061 		mov	r1, #1024
 329:Core/Src/SEGGER_RTT.c ****   p->aUp[0].SizeOfBuffer  = BUFFER_SIZE_UP;
 9659              		.loc 1 329 27 view .LVU4096
 9660 0076 194A     		ldr	r2, .L385+8
 328:Core/Src/SEGGER_RTT.c ****   p->aUp[0].pBuffer       = _acUpBuffer;
 9661              		.loc 1 328 27 view .LVU4097
 9662 0078 A361     		str	r3, [r4, #24]
 329:Core/Src/SEGGER_RTT.c ****   p->aUp[0].SizeOfBuffer  = BUFFER_SIZE_UP;
 9663              		.loc 1 329 3 is_stmt 1 view .LVU4098
 329:Core/Src/SEGGER_RTT.c ****   p->aUp[0].SizeOfBuffer  = BUFFER_SIZE_UP;
 9664              		.loc 1 329 27 is_stmt 0 view .LVU4099
 9665 007a E261     		str	r2, [r4, #28]
 330:Core/Src/SEGGER_RTT.c ****   p->aUp[0].RdOff         = 0u;
 9666              		.loc 1 330 3 is_stmt 1 view .LVU4100
 330:Core/Src/SEGGER_RTT.c ****   p->aUp[0].RdOff         = 0u;
 9667              		.loc 1 330 27 is_stmt 0 view .LVU4101
 9668 007c 2162     		str	r1, [r4, #32]
 331:Core/Src/SEGGER_RTT.c ****   p->aUp[0].WrOff         = 0u;
 9669              		.loc 1 331 3 is_stmt 1 view .LVU4102
 338:Core/Src/SEGGER_RTT.c ****   p->aDown[0].SizeOfBuffer  = BUFFER_SIZE_DOWN;
 9670              		.loc 1 338 29 is_stmt 0 view .LVU4103
 9671 007e 184A     		ldr	r2, .L385+12
 331:Core/Src/SEGGER_RTT.c ****   p->aUp[0].WrOff         = 0u;
 9672              		.loc 1 331 27 view .LVU4104
 9673 0080 A662     		str	r6, [r4, #40]
 332:Core/Src/SEGGER_RTT.c ****   p->aUp[0].Flags         = SEGGER_RTT_MODE_DEFAULT;
 9674              		.loc 1 332 3 is_stmt 1 view .LVU4105
 332:Core/Src/SEGGER_RTT.c ****   p->aUp[0].Flags         = SEGGER_RTT_MODE_DEFAULT;
 9675              		.loc 1 332 27 is_stmt 0 view .LVU4106
 9676 0082 6662     		str	r6, [r4, #36]
 333:Core/Src/SEGGER_RTT.c ****   //
 9677              		.loc 1 333 3 is_stmt 1 view .LVU4107
 333:Core/Src/SEGGER_RTT.c ****   //
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccSC4OZm.s 			page 263


 9678              		.loc 1 333 27 is_stmt 0 view .LVU4108
 9679 0084 E662     		str	r6, [r4, #44]
 337:Core/Src/SEGGER_RTT.c ****   p->aDown[0].pBuffer       = _acDownBuffer;
 9680              		.loc 1 337 3 is_stmt 1 view .LVU4109
 337:Core/Src/SEGGER_RTT.c ****   p->aDown[0].pBuffer       = _acDownBuffer;
 9681              		.loc 1 337 29 is_stmt 0 view .LVU4110
 9682 0086 2366     		str	r3, [r4, #96]
 338:Core/Src/SEGGER_RTT.c ****   p->aDown[0].SizeOfBuffer  = BUFFER_SIZE_DOWN;
 9683              		.loc 1 338 3 is_stmt 1 view .LVU4111
 339:Core/Src/SEGGER_RTT.c ****   p->aDown[0].RdOff         = 0u;
 9684              		.loc 1 339 29 is_stmt 0 view .LVU4112
 9685 0088 1023     		movs	r3, #16
 338:Core/Src/SEGGER_RTT.c ****   p->aDown[0].SizeOfBuffer  = BUFFER_SIZE_DOWN;
 9686              		.loc 1 338 29 view .LVU4113
 9687 008a 6266     		str	r2, [r4, #100]
 339:Core/Src/SEGGER_RTT.c ****   p->aDown[0].RdOff         = 0u;
 9688              		.loc 1 339 3 is_stmt 1 view .LVU4114
 339:Core/Src/SEGGER_RTT.c ****   p->aDown[0].RdOff         = 0u;
 9689              		.loc 1 339 29 is_stmt 0 view .LVU4115
 9690 008c A366     		str	r3, [r4, #104]
 340:Core/Src/SEGGER_RTT.c ****   p->aDown[0].WrOff         = 0u;
 9691              		.loc 1 340 3 is_stmt 1 view .LVU4116
 340:Core/Src/SEGGER_RTT.c ****   p->aDown[0].WrOff         = 0u;
 9692              		.loc 1 340 29 is_stmt 0 view .LVU4117
 9693 008e 2667     		str	r6, [r4, #112]
 341:Core/Src/SEGGER_RTT.c ****   p->aDown[0].Flags         = SEGGER_RTT_MODE_DEFAULT;
 9694              		.loc 1 341 3 is_stmt 1 view .LVU4118
 341:Core/Src/SEGGER_RTT.c ****   p->aDown[0].Flags         = SEGGER_RTT_MODE_DEFAULT;
 9695              		.loc 1 341 29 is_stmt 0 view .LVU4119
 9696 0090 E666     		str	r6, [r4, #108]
 342:Core/Src/SEGGER_RTT.c ****   //
 9697              		.loc 1 342 3 is_stmt 1 view .LVU4120
 342:Core/Src/SEGGER_RTT.c ****   //
 9698              		.loc 1 342 29 is_stmt 0 view .LVU4121
 9699 0092 6667     		str	r6, [r4, #116]
 348:Core/Src/SEGGER_RTT.c ****   for (i = 0; i < sizeof(_aInitStr) - 1; ++i) {
 9700              		.loc 1 348 3 is_stmt 1 view .LVU4122
 9701              		.syntax unified
 9702              	@ 348 "Core/Src/SEGGER_RTT.c" 1
 9703 0094 BFF35F8F 		dmb
 9704              	
 9705              	@ 0 "" 2
 348:Core/Src/SEGGER_RTT.c ****   for (i = 0; i < sizeof(_aInitStr) - 1; ++i) {
 9706              		.loc 1 348 13 view .LVU4123
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 9707              		.loc 1 349 3 view .LVU4124
 9708              	.LVL915:
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 9709              		.loc 1 349 17 view .LVU4125
 350:Core/Src/SEGGER_RTT.c ****   }
 9710              		.loc 1 350 5 view .LVU4126
 350:Core/Src/SEGGER_RTT.c ****   }
 9711              		.loc 1 350 16 is_stmt 0 view .LVU4127
 9712              		.thumb
 9713              		.syntax unified
 9714 0098 4521     		movs	r1, #69
 9715 009a 4720     		movs	r0, #71
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccSC4OZm.s 			page 264


 9716 009c 4FF0530C 		mov	ip, #83
 9717 00a0 84F800C0 		strb	ip, [r4]
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 9718              		.loc 1 349 42 is_stmt 1 view .LVU4128
 9719              	.LVL916:
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 9720              		.loc 1 349 17 view .LVU4129
 350:Core/Src/SEGGER_RTT.c ****   }
 9721              		.loc 1 350 5 view .LVU4130
 350:Core/Src/SEGGER_RTT.c ****   }
 9722              		.loc 1 350 16 is_stmt 0 view .LVU4131
 9723 00a4 5222     		movs	r2, #82
 9724 00a6 6170     		strb	r1, [r4, #1]
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 9725              		.loc 1 349 42 is_stmt 1 view .LVU4132
 9726              	.LVL917:
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 9727              		.loc 1 349 17 view .LVU4133
 350:Core/Src/SEGGER_RTT.c ****   }
 9728              		.loc 1 350 5 view .LVU4134
 350:Core/Src/SEGGER_RTT.c ****   }
 9729              		.loc 1 350 16 is_stmt 0 view .LVU4135
 9730 00a8 5423     		movs	r3, #84
 9731 00aa A070     		strb	r0, [r4, #2]
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 9732              		.loc 1 349 42 is_stmt 1 view .LVU4136
 9733              	.LVL918:
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 9734              		.loc 1 349 17 view .LVU4137
 350:Core/Src/SEGGER_RTT.c ****   }
 9735              		.loc 1 350 5 view .LVU4138
 350:Core/Src/SEGGER_RTT.c ****   }
 9736              		.loc 1 350 16 is_stmt 0 view .LVU4139
 9737 00ac E070     		strb	r0, [r4, #3]
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 9738              		.loc 1 349 42 is_stmt 1 view .LVU4140
 9739              	.LVL919:
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 9740              		.loc 1 349 17 view .LVU4141
 350:Core/Src/SEGGER_RTT.c ****   }
 9741              		.loc 1 350 5 view .LVU4142
 350:Core/Src/SEGGER_RTT.c ****   }
 9742              		.loc 1 350 16 is_stmt 0 view .LVU4143
 9743 00ae 2171     		strb	r1, [r4, #4]
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 9744              		.loc 1 349 42 is_stmt 1 view .LVU4144
 9745              	.LVL920:
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 9746              		.loc 1 349 17 view .LVU4145
 350:Core/Src/SEGGER_RTT.c ****   }
 9747              		.loc 1 350 5 view .LVU4146
 350:Core/Src/SEGGER_RTT.c ****   }
 9748              		.loc 1 350 16 is_stmt 0 view .LVU4147
 9749 00b0 2021     		movs	r1, #32
 9750 00b2 6271     		strb	r2, [r4, #5]
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 9751              		.loc 1 349 42 is_stmt 1 view .LVU4148
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccSC4OZm.s 			page 265


 9752              	.LVL921:
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 9753              		.loc 1 349 17 view .LVU4149
 350:Core/Src/SEGGER_RTT.c ****   }
 9754              		.loc 1 350 5 view .LVU4150
 350:Core/Src/SEGGER_RTT.c ****   }
 9755              		.loc 1 350 16 is_stmt 0 view .LVU4151
 9756 00b4 A171     		strb	r1, [r4, #6]
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 9757              		.loc 1 349 42 is_stmt 1 view .LVU4152
 9758              	.LVL922:
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 9759              		.loc 1 349 17 view .LVU4153
 350:Core/Src/SEGGER_RTT.c ****   }
 9760              		.loc 1 350 5 view .LVU4154
 350:Core/Src/SEGGER_RTT.c ****   }
 9761              		.loc 1 350 16 is_stmt 0 view .LVU4155
 9762 00b6 E271     		strb	r2, [r4, #7]
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 9763              		.loc 1 349 42 is_stmt 1 view .LVU4156
 9764              	.LVL923:
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 9765              		.loc 1 349 17 view .LVU4157
 350:Core/Src/SEGGER_RTT.c ****   }
 9766              		.loc 1 350 5 view .LVU4158
 350:Core/Src/SEGGER_RTT.c ****   }
 9767              		.loc 1 350 16 is_stmt 0 view .LVU4159
 9768 00b8 2372     		strb	r3, [r4, #8]
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 9769              		.loc 1 349 42 is_stmt 1 view .LVU4160
 9770              	.LVL924:
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 9771              		.loc 1 349 17 view .LVU4161
 350:Core/Src/SEGGER_RTT.c ****   }
 9772              		.loc 1 350 5 view .LVU4162
 350:Core/Src/SEGGER_RTT.c ****   }
 9773              		.loc 1 350 16 is_stmt 0 view .LVU4163
 9774 00ba 6372     		strb	r3, [r4, #9]
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 9775              		.loc 1 349 42 is_stmt 1 view .LVU4164
 9776              	.LVL925:
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 9777              		.loc 1 349 17 view .LVU4165
 350:Core/Src/SEGGER_RTT.c ****   }
 9778              		.loc 1 350 5 view .LVU4166
 350:Core/Src/SEGGER_RTT.c ****   }
 9779              		.loc 1 350 16 is_stmt 0 view .LVU4167
 9780 00bc A672     		strb	r6, [r4, #10]
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 9781              		.loc 1 349 42 is_stmt 1 view .LVU4168
 9782              	.LVL926:
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 9783              		.loc 1 349 17 view .LVU4169
 350:Core/Src/SEGGER_RTT.c ****   }
 9784              		.loc 1 350 5 view .LVU4170
 350:Core/Src/SEGGER_RTT.c ****   }
 9785              		.loc 1 350 16 is_stmt 0 view .LVU4171
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccSC4OZm.s 			page 266


 9786 00be E672     		strb	r6, [r4, #11]
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 9787              		.loc 1 349 42 is_stmt 1 view .LVU4172
 9788              	.LVL927:
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 9789              		.loc 1 349 17 view .LVU4173
 350:Core/Src/SEGGER_RTT.c ****   }
 9790              		.loc 1 350 5 view .LVU4174
 350:Core/Src/SEGGER_RTT.c ****   }
 9791              		.loc 1 350 16 is_stmt 0 view .LVU4175
 9792 00c0 2673     		strb	r6, [r4, #12]
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 9793              		.loc 1 349 42 is_stmt 1 view .LVU4176
 9794              	.LVL928:
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 9795              		.loc 1 349 17 view .LVU4177
 350:Core/Src/SEGGER_RTT.c ****   }
 9796              		.loc 1 350 5 view .LVU4178
 350:Core/Src/SEGGER_RTT.c ****   }
 9797              		.loc 1 350 16 is_stmt 0 view .LVU4179
 9798 00c2 6673     		strb	r6, [r4, #13]
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 9799              		.loc 1 349 42 is_stmt 1 view .LVU4180
 9800              	.LVL929:
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 9801              		.loc 1 349 17 view .LVU4181
 350:Core/Src/SEGGER_RTT.c ****   }
 9802              		.loc 1 350 5 view .LVU4182
 350:Core/Src/SEGGER_RTT.c ****   }
 9803              		.loc 1 350 16 is_stmt 0 view .LVU4183
 9804 00c4 A673     		strb	r6, [r4, #14]
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 9805              		.loc 1 349 42 is_stmt 1 view .LVU4184
 9806              	.LVL930:
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 9807              		.loc 1 349 17 view .LVU4185
 350:Core/Src/SEGGER_RTT.c ****   }
 9808              		.loc 1 350 5 view .LVU4186
 350:Core/Src/SEGGER_RTT.c ****   }
 9809              		.loc 1 350 16 is_stmt 0 view .LVU4187
 9810 00c6 E673     		strb	r6, [r4, #15]
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 9811              		.loc 1 349 42 is_stmt 1 view .LVU4188
 9812              	.LVL931:
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 9813              		.loc 1 349 17 view .LVU4189
 352:Core/Src/SEGGER_RTT.c **** }
 9814              		.loc 1 352 3 view .LVU4190
 9815              		.syntax unified
 9816              	@ 352 "Core/Src/SEGGER_RTT.c" 1
 9817 00c8 BFF35F8F 		dmb
 9818              	
 9819              	@ 0 "" 2
 352:Core/Src/SEGGER_RTT.c **** }
 9820              		.loc 1 352 13 view .LVU4191
 353:Core/Src/SEGGER_RTT.c **** 
 9821              		.loc 1 353 1 is_stmt 0 view .LVU4192
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccSC4OZm.s 			page 267


 9822              		.thumb
 9823              		.syntax unified
 9824 00cc A1E7     		b	.L376
 9825              	.LVL932:
 9826              	.L379:
 353:Core/Src/SEGGER_RTT.c **** 
 9827              		.loc 1 353 1 view .LVU4193
 9828              	.LBE510:
 9829              	.LBE509:
 9830              	.LBE516:
1743:Core/Src/SEGGER_RTT.c ****   }
 9831              		.loc 1 1743 7 view .LVU4194
 9832 00ce 4FF0FF30 		mov	r0, #-1
 9833              	.LVL933:
1745:Core/Src/SEGGER_RTT.c **** }
 9834              		.loc 1 1745 3 is_stmt 1 view .LVU4195
1745:Core/Src/SEGGER_RTT.c **** }
 9835              		.loc 1 1745 10 is_stmt 0 view .LVU4196
 9836 00d2 B2E7     		b	.L375
 9837              	.L386:
 9838              		.align	2
 9839              	.L385:
 9840 00d4 00000000 		.word	.LANCHOR0
 9841 00d8 00000000 		.word	.LC0
 9842 00dc 00000000 		.word	.LANCHOR1
 9843 00e0 00000000 		.word	.LANCHOR2
 9844              		.cfi_endproc
 9845              	.LFE26:
 9847              		.section	.text.SEGGER_RTT_SetNameUpBuffer,"ax",%progbits
 9848              		.align	1
 9849              		.p2align 2,,3
 9850              		.global	SEGGER_RTT_SetNameUpBuffer
 9851              		.syntax unified
 9852              		.thumb
 9853              		.thumb_func
 9855              	SEGGER_RTT_SetNameUpBuffer:
 9856              	.LVL934:
 9857              	.LFB27:
1747:Core/Src/SEGGER_RTT.c **** 
1748:Core/Src/SEGGER_RTT.c **** /*********************************************************************
1749:Core/Src/SEGGER_RTT.c **** *
1750:Core/Src/SEGGER_RTT.c **** *       SEGGER_RTT_SetNameUpBuffer
1751:Core/Src/SEGGER_RTT.c **** *
1752:Core/Src/SEGGER_RTT.c **** *  Function description
1753:Core/Src/SEGGER_RTT.c **** *    Run-time configuration of a specific up-buffer name (T->H).
1754:Core/Src/SEGGER_RTT.c **** *    Buffer to be configured is specified by index.
1755:Core/Src/SEGGER_RTT.c **** *
1756:Core/Src/SEGGER_RTT.c **** *  Parameters
1757:Core/Src/SEGGER_RTT.c **** *    BufferIndex  Index of the buffer to renamed.
1758:Core/Src/SEGGER_RTT.c **** *    sName        Pointer to a constant name string.
1759:Core/Src/SEGGER_RTT.c **** *
1760:Core/Src/SEGGER_RTT.c **** *  Return value
1761:Core/Src/SEGGER_RTT.c **** *    >= 0  O.K.
1762:Core/Src/SEGGER_RTT.c **** *     < 0  Error
1763:Core/Src/SEGGER_RTT.c **** */
1764:Core/Src/SEGGER_RTT.c **** int SEGGER_RTT_SetNameUpBuffer(unsigned BufferIndex, const char* sName) {
 9858              		.loc 1 1764 73 is_stmt 1 view -0
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccSC4OZm.s 			page 268


 9859              		.cfi_startproc
 9860              		@ args = 0, pretend = 0, frame = 0
 9861              		@ frame_needed = 0, uses_anonymous_args = 0
1765:Core/Src/SEGGER_RTT.c ****   int r;
 9862              		.loc 1 1765 3 view .LVU4198
1766:Core/Src/SEGGER_RTT.c ****   volatile SEGGER_RTT_CB* pRTTCB;
 9863              		.loc 1 1766 3 view .LVU4199
1767:Core/Src/SEGGER_RTT.c ****   volatile SEGGER_RTT_BUFFER_UP* pUp;
 9864              		.loc 1 1767 3 view .LVU4200
 9865              	.LBB521:
1768:Core/Src/SEGGER_RTT.c **** 
1769:Core/Src/SEGGER_RTT.c ****   INIT();
 9866              		.loc 1 1769 3 view .LVU4201
 9867              		.loc 1 1769 3 view .LVU4202
 9868              		.loc 1 1769 3 view .LVU4203
 9869              		.loc 1 1769 3 view .LVU4204
 9870              	.LBE521:
1764:Core/Src/SEGGER_RTT.c ****   int r;
 9871              		.loc 1 1764 73 is_stmt 0 view .LVU4205
 9872 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 9873              		.cfi_def_cfa_offset 24
 9874              		.cfi_offset 3, -24
 9875              		.cfi_offset 4, -20
 9876              		.cfi_offset 5, -16
 9877              		.cfi_offset 6, -12
 9878              		.cfi_offset 7, -8
 9879              		.cfi_offset 14, -4
 9880              	.LBB524:
 9881              		.loc 1 1769 3 view .LVU4206
 9882 0002 284C     		ldr	r4, .L393
 9883 0004 2378     		ldrb	r3, [r4]	@ zero_extendqisi2
 9884              	.LBE524:
1764:Core/Src/SEGGER_RTT.c ****   int r;
 9885              		.loc 1 1764 73 view .LVU4207
 9886 0006 0546     		mov	r5, r0
 9887 0008 0F46     		mov	r7, r1
 9888              	.LBB525:
 9889              		.loc 1 1769 3 view .LVU4208
 9890 000a 83B1     		cbz	r3, .L392
 9891              	.LVL935:
 9892              	.L388:
 9893              		.loc 1 1769 3 is_stmt 1 discriminator 3 view .LVU4209
 9894              	.LBE525:
 9895              		.loc 1 1769 9 discriminator 3 view .LVU4210
1770:Core/Src/SEGGER_RTT.c ****   pRTTCB = (volatile SEGGER_RTT_CB*)((unsigned char*)&_SEGGER_RTT + SEGGER_RTT_UNCACHED_OFF);  // A
 9896              		.loc 1 1770 3 discriminator 3 view .LVU4211
1771:Core/Src/SEGGER_RTT.c ****   if (BufferIndex < SEGGER_RTT_MAX_NUM_UP_BUFFERS) {
 9897              		.loc 1 1771 3 discriminator 3 view .LVU4212
 9898              		.loc 1 1771 6 is_stmt 0 discriminator 3 view .LVU4213
 9899 000c 022D     		cmp	r5, #2
 9900 000e 46D8     		bhi	.L390
 9901              	.LBB526:
1772:Core/Src/SEGGER_RTT.c ****     SEGGER_RTT_LOCK();
 9902              		.loc 1 1772 5 is_stmt 1 view .LVU4214
 9903              		.loc 1 1772 5 view .LVU4215
 9904              		.syntax unified
 9905              	@ 1772 "Core/Src/SEGGER_RTT.c" 1
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccSC4OZm.s 			page 269


 9906 0010 EFF31183 		mrs   r3, basepri  
 9907 0014 4FF02001 		mov   r1, #32       
 9908 0018 81F31188 		msr   basepri, r1  
 9909              		
 9910              	@ 0 "" 2
 9911              	.LVL936:
 9912              		.loc 1 1772 22 view .LVU4216
1773:Core/Src/SEGGER_RTT.c ****     pUp = &pRTTCB->aUp[BufferIndex];
 9913              		.loc 1 1773 5 view .LVU4217
1774:Core/Src/SEGGER_RTT.c ****     pUp->sName = sName;
 9914              		.loc 1 1774 5 view .LVU4218
 9915              		.loc 1 1774 16 is_stmt 0 view .LVU4219
 9916              		.thumb
 9917              		.syntax unified
 9918 001c 0135     		adds	r5, r5, #1
 9919              	.LVL937:
 9920              		.loc 1 1774 16 view .LVU4220
 9921 001e 05EB4505 		add	r5, r5, r5, lsl #1
 9922              	.LVL938:
 9923              		.loc 1 1774 16 view .LVU4221
 9924 0022 ED00     		lsls	r5, r5, #3
 9925 0024 6751     		str	r7, [r4, r5]
1775:Core/Src/SEGGER_RTT.c ****     SEGGER_RTT_UNLOCK();
 9926              		.loc 1 1775 5 is_stmt 1 view .LVU4222
 9927              		.syntax unified
 9928              	@ 1775 "Core/Src/SEGGER_RTT.c" 1
 9929 0026 83F31188 		msr   basepri, r3  
 9930              		
 9931              	@ 0 "" 2
 9932              		.thumb
 9933              		.syntax unified
 9934              	.LBE526:
 9935              		.loc 1 1775 24 view .LVU4223
1776:Core/Src/SEGGER_RTT.c ****     r =  0;
 9936              		.loc 1 1776 5 view .LVU4224
 9937              	.LVL939:
 9938              		.loc 1 1776 7 is_stmt 0 view .LVU4225
 9939 002a 0020     		movs	r0, #0
1777:Core/Src/SEGGER_RTT.c ****   } else {
1778:Core/Src/SEGGER_RTT.c ****     r = -1;
1779:Core/Src/SEGGER_RTT.c ****   }
1780:Core/Src/SEGGER_RTT.c ****   return r;
1781:Core/Src/SEGGER_RTT.c **** }
 9940              		.loc 1 1781 1 view .LVU4226
 9941 002c F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 9942              	.LVL940:
 9943              	.L392:
 9944              		.loc 1 1781 1 view .LVU4227
 9945 002e 03F0FF06 		and	r6, r3, #255
 9946              	.LBB527:
1769:Core/Src/SEGGER_RTT.c ****   pRTTCB = (volatile SEGGER_RTT_CB*)((unsigned char*)&_SEGGER_RTT + SEGGER_RTT_UNCACHED_OFF);  // A
 9947              		.loc 1 1769 3 is_stmt 1 view .LVU4228
 9948              	.LBB522:
 9949              	.LBI522:
 314:Core/Src/SEGGER_RTT.c ****   volatile SEGGER_RTT_CB* p;   // Volatile to make sure that compiler cannot change the order of ac
 9950              		.loc 1 314 13 view .LVU4229
 9951              	.LBB523:
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccSC4OZm.s 			page 270


 315:Core/Src/SEGGER_RTT.c ****   static const char _aInitStr[] = "\0\0\0\0\0\0TTR REGGES";  // Init complete ID string to make sur
 9952              		.loc 1 315 3 view .LVU4230
 316:Core/Src/SEGGER_RTT.c ****   unsigned i;
 9953              		.loc 1 316 3 view .LVU4231
 317:Core/Src/SEGGER_RTT.c ****   //
 9954              		.loc 1 317 3 view .LVU4232
 321:Core/Src/SEGGER_RTT.c ****   memset((SEGGER_RTT_CB*)p, 0, sizeof(_SEGGER_RTT));         // Make sure that the RTT CB is always
 9955              		.loc 1 321 3 view .LVU4233
 9956              	.LVL941:
 322:Core/Src/SEGGER_RTT.c ****   p->MaxNumUpBuffers    = SEGGER_RTT_MAX_NUM_UP_BUFFERS;
 9957              		.loc 1 322 3 view .LVU4234
 9958 0032 3146     		mov	r1, r6
 9959              	.LVL942:
 322:Core/Src/SEGGER_RTT.c ****   p->MaxNumUpBuffers    = SEGGER_RTT_MAX_NUM_UP_BUFFERS;
 9960              		.loc 1 322 3 is_stmt 0 view .LVU4235
 9961 0034 7822     		movs	r2, #120
 9962 0036 04F13000 		add	r0, r4, #48
 9963              	.LVL943:
 322:Core/Src/SEGGER_RTT.c ****   p->MaxNumUpBuffers    = SEGGER_RTT_MAX_NUM_UP_BUFFERS;
 9964              		.loc 1 322 3 view .LVU4236
 9965 003a FFF7FEFF 		bl	memset
 9966              	.LVL944:
 323:Core/Src/SEGGER_RTT.c ****   p->MaxNumDownBuffers  = SEGGER_RTT_MAX_NUM_DOWN_BUFFERS;
 9967              		.loc 1 323 3 is_stmt 1 view .LVU4237
 323:Core/Src/SEGGER_RTT.c ****   p->MaxNumDownBuffers  = SEGGER_RTT_MAX_NUM_DOWN_BUFFERS;
 9968              		.loc 1 323 25 is_stmt 0 view .LVU4238
 9969 003e 0323     		movs	r3, #3
 9970 0040 2361     		str	r3, [r4, #16]
 324:Core/Src/SEGGER_RTT.c ****   //
 9971              		.loc 1 324 3 is_stmt 1 view .LVU4239
 329:Core/Src/SEGGER_RTT.c ****   p->aUp[0].SizeOfBuffer  = BUFFER_SIZE_UP;
 9972              		.loc 1 329 27 is_stmt 0 view .LVU4240
 9973 0042 194A     		ldr	r2, .L393+4
 324:Core/Src/SEGGER_RTT.c ****   //
 9974              		.loc 1 324 25 view .LVU4241
 9975 0044 6361     		str	r3, [r4, #20]
 328:Core/Src/SEGGER_RTT.c ****   p->aUp[0].pBuffer       = _acUpBuffer;
 9976              		.loc 1 328 3 is_stmt 1 view .LVU4242
 330:Core/Src/SEGGER_RTT.c ****   p->aUp[0].RdOff         = 0u;
 9977              		.loc 1 330 27 is_stmt 0 view .LVU4243
 9978 0046 4FF48061 		mov	r1, #1024
 328:Core/Src/SEGGER_RTT.c ****   p->aUp[0].pBuffer       = _acUpBuffer;
 9979              		.loc 1 328 27 view .LVU4244
 9980 004a 184B     		ldr	r3, .L393+8
 9981 004c A361     		str	r3, [r4, #24]
 329:Core/Src/SEGGER_RTT.c ****   p->aUp[0].SizeOfBuffer  = BUFFER_SIZE_UP;
 9982              		.loc 1 329 3 is_stmt 1 view .LVU4245
 329:Core/Src/SEGGER_RTT.c ****   p->aUp[0].SizeOfBuffer  = BUFFER_SIZE_UP;
 9983              		.loc 1 329 27 is_stmt 0 view .LVU4246
 9984 004e E261     		str	r2, [r4, #28]
 330:Core/Src/SEGGER_RTT.c ****   p->aUp[0].RdOff         = 0u;
 9985              		.loc 1 330 3 is_stmt 1 view .LVU4247
 330:Core/Src/SEGGER_RTT.c ****   p->aUp[0].RdOff         = 0u;
 9986              		.loc 1 330 27 is_stmt 0 view .LVU4248
 9987 0050 2162     		str	r1, [r4, #32]
 331:Core/Src/SEGGER_RTT.c ****   p->aUp[0].WrOff         = 0u;
 9988              		.loc 1 331 3 is_stmt 1 view .LVU4249
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccSC4OZm.s 			page 271


 338:Core/Src/SEGGER_RTT.c ****   p->aDown[0].SizeOfBuffer  = BUFFER_SIZE_DOWN;
 9989              		.loc 1 338 29 is_stmt 0 view .LVU4250
 9990 0052 174A     		ldr	r2, .L393+12
 331:Core/Src/SEGGER_RTT.c ****   p->aUp[0].WrOff         = 0u;
 9991              		.loc 1 331 27 view .LVU4251
 9992 0054 A662     		str	r6, [r4, #40]
 332:Core/Src/SEGGER_RTT.c ****   p->aUp[0].Flags         = SEGGER_RTT_MODE_DEFAULT;
 9993              		.loc 1 332 3 is_stmt 1 view .LVU4252
 332:Core/Src/SEGGER_RTT.c ****   p->aUp[0].Flags         = SEGGER_RTT_MODE_DEFAULT;
 9994              		.loc 1 332 27 is_stmt 0 view .LVU4253
 9995 0056 6662     		str	r6, [r4, #36]
 333:Core/Src/SEGGER_RTT.c ****   //
 9996              		.loc 1 333 3 is_stmt 1 view .LVU4254
 333:Core/Src/SEGGER_RTT.c ****   //
 9997              		.loc 1 333 27 is_stmt 0 view .LVU4255
 9998 0058 E662     		str	r6, [r4, #44]
 337:Core/Src/SEGGER_RTT.c ****   p->aDown[0].pBuffer       = _acDownBuffer;
 9999              		.loc 1 337 3 is_stmt 1 view .LVU4256
 337:Core/Src/SEGGER_RTT.c ****   p->aDown[0].pBuffer       = _acDownBuffer;
 10000              		.loc 1 337 29 is_stmt 0 view .LVU4257
 10001 005a 2366     		str	r3, [r4, #96]
 338:Core/Src/SEGGER_RTT.c ****   p->aDown[0].SizeOfBuffer  = BUFFER_SIZE_DOWN;
 10002              		.loc 1 338 3 is_stmt 1 view .LVU4258
 339:Core/Src/SEGGER_RTT.c ****   p->aDown[0].RdOff         = 0u;
 10003              		.loc 1 339 29 is_stmt 0 view .LVU4259
 10004 005c 1023     		movs	r3, #16
 338:Core/Src/SEGGER_RTT.c ****   p->aDown[0].SizeOfBuffer  = BUFFER_SIZE_DOWN;
 10005              		.loc 1 338 29 view .LVU4260
 10006 005e 6266     		str	r2, [r4, #100]
 339:Core/Src/SEGGER_RTT.c ****   p->aDown[0].RdOff         = 0u;
 10007              		.loc 1 339 3 is_stmt 1 view .LVU4261
 339:Core/Src/SEGGER_RTT.c ****   p->aDown[0].RdOff         = 0u;
 10008              		.loc 1 339 29 is_stmt 0 view .LVU4262
 10009 0060 A366     		str	r3, [r4, #104]
 340:Core/Src/SEGGER_RTT.c ****   p->aDown[0].WrOff         = 0u;
 10010              		.loc 1 340 3 is_stmt 1 view .LVU4263
 340:Core/Src/SEGGER_RTT.c ****   p->aDown[0].WrOff         = 0u;
 10011              		.loc 1 340 29 is_stmt 0 view .LVU4264
 10012 0062 2667     		str	r6, [r4, #112]
 341:Core/Src/SEGGER_RTT.c ****   p->aDown[0].Flags         = SEGGER_RTT_MODE_DEFAULT;
 10013              		.loc 1 341 3 is_stmt 1 view .LVU4265
 341:Core/Src/SEGGER_RTT.c ****   p->aDown[0].Flags         = SEGGER_RTT_MODE_DEFAULT;
 10014              		.loc 1 341 29 is_stmt 0 view .LVU4266
 10015 0064 E666     		str	r6, [r4, #108]
 342:Core/Src/SEGGER_RTT.c ****   //
 10016              		.loc 1 342 3 is_stmt 1 view .LVU4267
 342:Core/Src/SEGGER_RTT.c ****   //
 10017              		.loc 1 342 29 is_stmt 0 view .LVU4268
 10018 0066 6667     		str	r6, [r4, #116]
 348:Core/Src/SEGGER_RTT.c ****   for (i = 0; i < sizeof(_aInitStr) - 1; ++i) {
 10019              		.loc 1 348 3 is_stmt 1 view .LVU4269
 10020              		.syntax unified
 10021              	@ 348 "Core/Src/SEGGER_RTT.c" 1
 10022 0068 BFF35F8F 		dmb
 10023              	
 10024              	@ 0 "" 2
 348:Core/Src/SEGGER_RTT.c ****   for (i = 0; i < sizeof(_aInitStr) - 1; ++i) {
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccSC4OZm.s 			page 272


 10025              		.loc 1 348 13 view .LVU4270
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 10026              		.loc 1 349 3 view .LVU4271
 10027              	.LVL945:
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 10028              		.loc 1 349 17 view .LVU4272
 350:Core/Src/SEGGER_RTT.c ****   }
 10029              		.loc 1 350 5 view .LVU4273
 350:Core/Src/SEGGER_RTT.c ****   }
 10030              		.loc 1 350 16 is_stmt 0 view .LVU4274
 10031              		.thumb
 10032              		.syntax unified
 10033 006c 5323     		movs	r3, #83
 10034 006e 2370     		strb	r3, [r4]
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 10035              		.loc 1 349 42 is_stmt 1 view .LVU4275
 10036              	.LVL946:
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 10037              		.loc 1 349 17 view .LVU4276
 350:Core/Src/SEGGER_RTT.c ****   }
 10038              		.loc 1 350 5 view .LVU4277
 350:Core/Src/SEGGER_RTT.c ****   }
 10039              		.loc 1 350 16 is_stmt 0 view .LVU4278
 10040 0070 4722     		movs	r2, #71
 10041 0072 4523     		movs	r3, #69
 10042 0074 6370     		strb	r3, [r4, #1]
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 10043              		.loc 1 349 42 is_stmt 1 view .LVU4279
 10044              	.LVL947:
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 10045              		.loc 1 349 17 view .LVU4280
 350:Core/Src/SEGGER_RTT.c ****   }
 10046              		.loc 1 350 5 view .LVU4281
 350:Core/Src/SEGGER_RTT.c ****   }
 10047              		.loc 1 350 16 is_stmt 0 view .LVU4282
 10048 0076 2021     		movs	r1, #32
 10049 0078 A270     		strb	r2, [r4, #2]
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 10050              		.loc 1 349 42 is_stmt 1 view .LVU4283
 10051              	.LVL948:
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 10052              		.loc 1 349 17 view .LVU4284
 350:Core/Src/SEGGER_RTT.c ****   }
 10053              		.loc 1 350 5 view .LVU4285
 350:Core/Src/SEGGER_RTT.c ****   }
 10054              		.loc 1 350 16 is_stmt 0 view .LVU4286
 10055 007a E270     		strb	r2, [r4, #3]
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 10056              		.loc 1 349 42 is_stmt 1 view .LVU4287
 10057              	.LVL949:
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 10058              		.loc 1 349 17 view .LVU4288
 350:Core/Src/SEGGER_RTT.c ****   }
 10059              		.loc 1 350 5 view .LVU4289
 350:Core/Src/SEGGER_RTT.c ****   }
 10060              		.loc 1 350 16 is_stmt 0 view .LVU4290
 10061 007c 2371     		strb	r3, [r4, #4]
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccSC4OZm.s 			page 273


 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 10062              		.loc 1 349 42 is_stmt 1 view .LVU4291
 10063              	.LVL950:
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 10064              		.loc 1 349 17 view .LVU4292
 350:Core/Src/SEGGER_RTT.c ****   }
 10065              		.loc 1 350 5 view .LVU4293
 350:Core/Src/SEGGER_RTT.c ****   }
 10066              		.loc 1 350 16 is_stmt 0 view .LVU4294
 10067 007e 5222     		movs	r2, #82
 10068 0080 5423     		movs	r3, #84
 10069 0082 6271     		strb	r2, [r4, #5]
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 10070              		.loc 1 349 42 is_stmt 1 view .LVU4295
 10071              	.LVL951:
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 10072              		.loc 1 349 17 view .LVU4296
 350:Core/Src/SEGGER_RTT.c ****   }
 10073              		.loc 1 350 5 view .LVU4297
 350:Core/Src/SEGGER_RTT.c ****   }
 10074              		.loc 1 350 16 is_stmt 0 view .LVU4298
 10075 0084 A171     		strb	r1, [r4, #6]
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 10076              		.loc 1 349 42 is_stmt 1 view .LVU4299
 10077              	.LVL952:
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 10078              		.loc 1 349 17 view .LVU4300
 350:Core/Src/SEGGER_RTT.c ****   }
 10079              		.loc 1 350 5 view .LVU4301
 350:Core/Src/SEGGER_RTT.c ****   }
 10080              		.loc 1 350 16 is_stmt 0 view .LVU4302
 10081 0086 E271     		strb	r2, [r4, #7]
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 10082              		.loc 1 349 42 is_stmt 1 view .LVU4303
 10083              	.LVL953:
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 10084              		.loc 1 349 17 view .LVU4304
 350:Core/Src/SEGGER_RTT.c ****   }
 10085              		.loc 1 350 5 view .LVU4305
 350:Core/Src/SEGGER_RTT.c ****   }
 10086              		.loc 1 350 16 is_stmt 0 view .LVU4306
 10087 0088 2372     		strb	r3, [r4, #8]
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 10088              		.loc 1 349 42 is_stmt 1 view .LVU4307
 10089              	.LVL954:
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 10090              		.loc 1 349 17 view .LVU4308
 350:Core/Src/SEGGER_RTT.c ****   }
 10091              		.loc 1 350 5 view .LVU4309
 350:Core/Src/SEGGER_RTT.c ****   }
 10092              		.loc 1 350 16 is_stmt 0 view .LVU4310
 10093 008a 6372     		strb	r3, [r4, #9]
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 10094              		.loc 1 349 42 is_stmt 1 view .LVU4311
 10095              	.LVL955:
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 10096              		.loc 1 349 17 view .LVU4312
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccSC4OZm.s 			page 274


 350:Core/Src/SEGGER_RTT.c ****   }
 10097              		.loc 1 350 5 view .LVU4313
 350:Core/Src/SEGGER_RTT.c ****   }
 10098              		.loc 1 350 16 is_stmt 0 view .LVU4314
 10099 008c A672     		strb	r6, [r4, #10]
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 10100              		.loc 1 349 42 is_stmt 1 view .LVU4315
 10101              	.LVL956:
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 10102              		.loc 1 349 17 view .LVU4316
 350:Core/Src/SEGGER_RTT.c ****   }
 10103              		.loc 1 350 5 view .LVU4317
 350:Core/Src/SEGGER_RTT.c ****   }
 10104              		.loc 1 350 16 is_stmt 0 view .LVU4318
 10105 008e E672     		strb	r6, [r4, #11]
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 10106              		.loc 1 349 42 is_stmt 1 view .LVU4319
 10107              	.LVL957:
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 10108              		.loc 1 349 17 view .LVU4320
 350:Core/Src/SEGGER_RTT.c ****   }
 10109              		.loc 1 350 5 view .LVU4321
 350:Core/Src/SEGGER_RTT.c ****   }
 10110              		.loc 1 350 16 is_stmt 0 view .LVU4322
 10111 0090 2673     		strb	r6, [r4, #12]
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 10112              		.loc 1 349 42 is_stmt 1 view .LVU4323
 10113              	.LVL958:
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 10114              		.loc 1 349 17 view .LVU4324
 350:Core/Src/SEGGER_RTT.c ****   }
 10115              		.loc 1 350 5 view .LVU4325
 350:Core/Src/SEGGER_RTT.c ****   }
 10116              		.loc 1 350 16 is_stmt 0 view .LVU4326
 10117 0092 6673     		strb	r6, [r4, #13]
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 10118              		.loc 1 349 42 is_stmt 1 view .LVU4327
 10119              	.LVL959:
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 10120              		.loc 1 349 17 view .LVU4328
 350:Core/Src/SEGGER_RTT.c ****   }
 10121              		.loc 1 350 5 view .LVU4329
 350:Core/Src/SEGGER_RTT.c ****   }
 10122              		.loc 1 350 16 is_stmt 0 view .LVU4330
 10123 0094 A673     		strb	r6, [r4, #14]
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 10124              		.loc 1 349 42 is_stmt 1 view .LVU4331
 10125              	.LVL960:
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 10126              		.loc 1 349 17 view .LVU4332
 350:Core/Src/SEGGER_RTT.c ****   }
 10127              		.loc 1 350 5 view .LVU4333
 350:Core/Src/SEGGER_RTT.c ****   }
 10128              		.loc 1 350 16 is_stmt 0 view .LVU4334
 10129 0096 E673     		strb	r6, [r4, #15]
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 10130              		.loc 1 349 42 is_stmt 1 view .LVU4335
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccSC4OZm.s 			page 275


 10131              	.LVL961:
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 10132              		.loc 1 349 17 view .LVU4336
 352:Core/Src/SEGGER_RTT.c **** }
 10133              		.loc 1 352 3 view .LVU4337
 10134              		.syntax unified
 10135              	@ 352 "Core/Src/SEGGER_RTT.c" 1
 10136 0098 BFF35F8F 		dmb
 10137              	
 10138              	@ 0 "" 2
 352:Core/Src/SEGGER_RTT.c **** }
 10139              		.loc 1 352 13 view .LVU4338
 353:Core/Src/SEGGER_RTT.c **** 
 10140              		.loc 1 353 1 is_stmt 0 view .LVU4339
 10141              		.thumb
 10142              		.syntax unified
 10143 009c B6E7     		b	.L388
 10144              	.LVL962:
 10145              	.L390:
 353:Core/Src/SEGGER_RTT.c **** 
 10146              		.loc 1 353 1 view .LVU4340
 10147              	.LBE523:
 10148              	.LBE522:
 10149              	.LBE527:
1778:Core/Src/SEGGER_RTT.c ****   }
 10150              		.loc 1 1778 7 view .LVU4341
 10151 009e 4FF0FF30 		mov	r0, #-1
 10152              	.LVL963:
1780:Core/Src/SEGGER_RTT.c **** }
 10153              		.loc 1 1780 3 is_stmt 1 view .LVU4342
 10154              		.loc 1 1781 1 is_stmt 0 view .LVU4343
 10155 00a2 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 10156              	.LVL964:
 10157              	.L394:
 10158              		.loc 1 1781 1 view .LVU4344
 10159              		.align	2
 10160              	.L393:
 10161 00a4 00000000 		.word	.LANCHOR0
 10162 00a8 00000000 		.word	.LANCHOR1
 10163 00ac 00000000 		.word	.LC0
 10164 00b0 00000000 		.word	.LANCHOR2
 10165              		.cfi_endproc
 10166              	.LFE27:
 10168              		.section	.text.SEGGER_RTT_SetNameDownBuffer,"ax",%progbits
 10169              		.align	1
 10170              		.p2align 2,,3
 10171              		.global	SEGGER_RTT_SetNameDownBuffer
 10172              		.syntax unified
 10173              		.thumb
 10174              		.thumb_func
 10176              	SEGGER_RTT_SetNameDownBuffer:
 10177              	.LVL965:
 10178              	.LFB28:
1782:Core/Src/SEGGER_RTT.c **** 
1783:Core/Src/SEGGER_RTT.c **** /*********************************************************************
1784:Core/Src/SEGGER_RTT.c **** *
1785:Core/Src/SEGGER_RTT.c **** *       SEGGER_RTT_SetNameDownBuffer
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccSC4OZm.s 			page 276


1786:Core/Src/SEGGER_RTT.c **** *
1787:Core/Src/SEGGER_RTT.c **** *  Function description
1788:Core/Src/SEGGER_RTT.c **** *    Run-time configuration of a specific Down-buffer name (T->H).
1789:Core/Src/SEGGER_RTT.c **** *    Buffer to be configured is specified by index.
1790:Core/Src/SEGGER_RTT.c **** *
1791:Core/Src/SEGGER_RTT.c **** *  Parameters
1792:Core/Src/SEGGER_RTT.c **** *    BufferIndex  Index of the buffer to renamed.
1793:Core/Src/SEGGER_RTT.c **** *    sName        Pointer to a constant name string.
1794:Core/Src/SEGGER_RTT.c **** *
1795:Core/Src/SEGGER_RTT.c **** *  Return value
1796:Core/Src/SEGGER_RTT.c **** *    >= 0  O.K.
1797:Core/Src/SEGGER_RTT.c **** *     < 0  Error
1798:Core/Src/SEGGER_RTT.c **** */
1799:Core/Src/SEGGER_RTT.c **** int SEGGER_RTT_SetNameDownBuffer(unsigned BufferIndex, const char* sName) {
 10179              		.loc 1 1799 75 is_stmt 1 view -0
 10180              		.cfi_startproc
 10181              		@ args = 0, pretend = 0, frame = 0
 10182              		@ frame_needed = 0, uses_anonymous_args = 0
1800:Core/Src/SEGGER_RTT.c ****   int r;
 10183              		.loc 1 1800 3 view .LVU4346
1801:Core/Src/SEGGER_RTT.c ****   volatile SEGGER_RTT_CB* pRTTCB;
 10184              		.loc 1 1801 3 view .LVU4347
1802:Core/Src/SEGGER_RTT.c ****   volatile SEGGER_RTT_BUFFER_DOWN* pDown;
 10185              		.loc 1 1802 3 view .LVU4348
 10186              	.LBB532:
1803:Core/Src/SEGGER_RTT.c **** 
1804:Core/Src/SEGGER_RTT.c ****   INIT();
 10187              		.loc 1 1804 3 view .LVU4349
 10188              		.loc 1 1804 3 view .LVU4350
 10189              		.loc 1 1804 3 view .LVU4351
 10190              		.loc 1 1804 3 view .LVU4352
 10191              	.LBE532:
1799:Core/Src/SEGGER_RTT.c ****   int r;
 10192              		.loc 1 1799 75 is_stmt 0 view .LVU4353
 10193 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 10194              		.cfi_def_cfa_offset 24
 10195              		.cfi_offset 3, -24
 10196              		.cfi_offset 4, -20
 10197              		.cfi_offset 5, -16
 10198              		.cfi_offset 6, -12
 10199              		.cfi_offset 7, -8
 10200              		.cfi_offset 14, -4
 10201              	.LBB535:
 10202              		.loc 1 1804 3 view .LVU4354
 10203 0002 284C     		ldr	r4, .L401
 10204 0004 2378     		ldrb	r3, [r4]	@ zero_extendqisi2
 10205              	.LBE535:
1799:Core/Src/SEGGER_RTT.c ****   int r;
 10206              		.loc 1 1799 75 view .LVU4355
 10207 0006 0546     		mov	r5, r0
 10208 0008 0F46     		mov	r7, r1
 10209              	.LBB536:
 10210              		.loc 1 1804 3 view .LVU4356
 10211 000a 83B1     		cbz	r3, .L400
 10212              	.LVL966:
 10213              	.L396:
 10214              		.loc 1 1804 3 is_stmt 1 discriminator 3 view .LVU4357
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccSC4OZm.s 			page 277


 10215              	.LBE536:
 10216              		.loc 1 1804 9 discriminator 3 view .LVU4358
1805:Core/Src/SEGGER_RTT.c ****   pRTTCB = (volatile SEGGER_RTT_CB*)((unsigned char*)&_SEGGER_RTT + SEGGER_RTT_UNCACHED_OFF);  // A
 10217              		.loc 1 1805 3 discriminator 3 view .LVU4359
1806:Core/Src/SEGGER_RTT.c ****   if (BufferIndex < SEGGER_RTT_MAX_NUM_DOWN_BUFFERS) {
 10218              		.loc 1 1806 3 discriminator 3 view .LVU4360
 10219              		.loc 1 1806 6 is_stmt 0 discriminator 3 view .LVU4361
 10220 000c 022D     		cmp	r5, #2
 10221 000e 46D8     		bhi	.L398
 10222              	.LBB537:
1807:Core/Src/SEGGER_RTT.c ****     SEGGER_RTT_LOCK();
 10223              		.loc 1 1807 5 is_stmt 1 view .LVU4362
 10224              		.loc 1 1807 5 view .LVU4363
 10225              		.syntax unified
 10226              	@ 1807 "Core/Src/SEGGER_RTT.c" 1
 10227 0010 EFF31183 		mrs   r3, basepri  
 10228 0014 4FF02001 		mov   r1, #32       
 10229 0018 81F31188 		msr   basepri, r1  
 10230              		
 10231              	@ 0 "" 2
 10232              	.LVL967:
 10233              		.loc 1 1807 22 view .LVU4364
1808:Core/Src/SEGGER_RTT.c ****     pDown = &pRTTCB->aDown[BufferIndex];
 10234              		.loc 1 1808 5 view .LVU4365
1809:Core/Src/SEGGER_RTT.c ****     pDown->sName = sName;
 10235              		.loc 1 1809 5 view .LVU4366
 10236              		.loc 1 1809 18 is_stmt 0 view .LVU4367
 10237              		.thumb
 10238              		.syntax unified
 10239 001c 05EB4505 		add	r5, r5, r5, lsl #1
 10240              	.LVL968:
 10241              		.loc 1 1809 18 view .LVU4368
 10242 0020 04EBC504 		add	r4, r4, r5, lsl #3
 10243 0024 2766     		str	r7, [r4, #96]
1810:Core/Src/SEGGER_RTT.c ****     SEGGER_RTT_UNLOCK();
 10244              		.loc 1 1810 5 is_stmt 1 view .LVU4369
 10245              		.syntax unified
 10246              	@ 1810 "Core/Src/SEGGER_RTT.c" 1
 10247 0026 83F31188 		msr   basepri, r3  
 10248              		
 10249              	@ 0 "" 2
 10250              		.thumb
 10251              		.syntax unified
 10252              	.LBE537:
 10253              		.loc 1 1810 24 view .LVU4370
1811:Core/Src/SEGGER_RTT.c ****     r =  0;
 10254              		.loc 1 1811 5 view .LVU4371
 10255              	.LVL969:
 10256              		.loc 1 1811 7 is_stmt 0 view .LVU4372
 10257 002a 0020     		movs	r0, #0
1812:Core/Src/SEGGER_RTT.c ****   } else {
1813:Core/Src/SEGGER_RTT.c ****     r = -1;
1814:Core/Src/SEGGER_RTT.c ****   }
1815:Core/Src/SEGGER_RTT.c ****   return r;
1816:Core/Src/SEGGER_RTT.c **** }
 10258              		.loc 1 1816 1 view .LVU4373
 10259 002c F8BD     		pop	{r3, r4, r5, r6, r7, pc}
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccSC4OZm.s 			page 278


 10260              	.LVL970:
 10261              	.L400:
 10262              		.loc 1 1816 1 view .LVU4374
 10263 002e 03F0FF06 		and	r6, r3, #255
 10264              	.LBB538:
1804:Core/Src/SEGGER_RTT.c ****   pRTTCB = (volatile SEGGER_RTT_CB*)((unsigned char*)&_SEGGER_RTT + SEGGER_RTT_UNCACHED_OFF);  // A
 10265              		.loc 1 1804 3 is_stmt 1 view .LVU4375
 10266              	.LBB533:
 10267              	.LBI533:
 314:Core/Src/SEGGER_RTT.c ****   volatile SEGGER_RTT_CB* p;   // Volatile to make sure that compiler cannot change the order of ac
 10268              		.loc 1 314 13 view .LVU4376
 10269              	.LBB534:
 315:Core/Src/SEGGER_RTT.c ****   static const char _aInitStr[] = "\0\0\0\0\0\0TTR REGGES";  // Init complete ID string to make sur
 10270              		.loc 1 315 3 view .LVU4377
 316:Core/Src/SEGGER_RTT.c ****   unsigned i;
 10271              		.loc 1 316 3 view .LVU4378
 317:Core/Src/SEGGER_RTT.c ****   //
 10272              		.loc 1 317 3 view .LVU4379
 321:Core/Src/SEGGER_RTT.c ****   memset((SEGGER_RTT_CB*)p, 0, sizeof(_SEGGER_RTT));         // Make sure that the RTT CB is always
 10273              		.loc 1 321 3 view .LVU4380
 10274              	.LVL971:
 322:Core/Src/SEGGER_RTT.c ****   p->MaxNumUpBuffers    = SEGGER_RTT_MAX_NUM_UP_BUFFERS;
 10275              		.loc 1 322 3 view .LVU4381
 10276 0032 3146     		mov	r1, r6
 10277              	.LVL972:
 322:Core/Src/SEGGER_RTT.c ****   p->MaxNumUpBuffers    = SEGGER_RTT_MAX_NUM_UP_BUFFERS;
 10278              		.loc 1 322 3 is_stmt 0 view .LVU4382
 10279 0034 7822     		movs	r2, #120
 10280 0036 04F13000 		add	r0, r4, #48
 10281              	.LVL973:
 322:Core/Src/SEGGER_RTT.c ****   p->MaxNumUpBuffers    = SEGGER_RTT_MAX_NUM_UP_BUFFERS;
 10282              		.loc 1 322 3 view .LVU4383
 10283 003a FFF7FEFF 		bl	memset
 10284              	.LVL974:
 323:Core/Src/SEGGER_RTT.c ****   p->MaxNumDownBuffers  = SEGGER_RTT_MAX_NUM_DOWN_BUFFERS;
 10285              		.loc 1 323 3 is_stmt 1 view .LVU4384
 323:Core/Src/SEGGER_RTT.c ****   p->MaxNumDownBuffers  = SEGGER_RTT_MAX_NUM_DOWN_BUFFERS;
 10286              		.loc 1 323 25 is_stmt 0 view .LVU4385
 10287 003e 0323     		movs	r3, #3
 10288 0040 2361     		str	r3, [r4, #16]
 324:Core/Src/SEGGER_RTT.c ****   //
 10289              		.loc 1 324 3 is_stmt 1 view .LVU4386
 329:Core/Src/SEGGER_RTT.c ****   p->aUp[0].SizeOfBuffer  = BUFFER_SIZE_UP;
 10290              		.loc 1 329 27 is_stmt 0 view .LVU4387
 10291 0042 194A     		ldr	r2, .L401+4
 324:Core/Src/SEGGER_RTT.c ****   //
 10292              		.loc 1 324 25 view .LVU4388
 10293 0044 6361     		str	r3, [r4, #20]
 328:Core/Src/SEGGER_RTT.c ****   p->aUp[0].pBuffer       = _acUpBuffer;
 10294              		.loc 1 328 3 is_stmt 1 view .LVU4389
 330:Core/Src/SEGGER_RTT.c ****   p->aUp[0].RdOff         = 0u;
 10295              		.loc 1 330 27 is_stmt 0 view .LVU4390
 10296 0046 4FF48061 		mov	r1, #1024
 328:Core/Src/SEGGER_RTT.c ****   p->aUp[0].pBuffer       = _acUpBuffer;
 10297              		.loc 1 328 27 view .LVU4391
 10298 004a 184B     		ldr	r3, .L401+8
 10299 004c A361     		str	r3, [r4, #24]
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccSC4OZm.s 			page 279


 329:Core/Src/SEGGER_RTT.c ****   p->aUp[0].SizeOfBuffer  = BUFFER_SIZE_UP;
 10300              		.loc 1 329 3 is_stmt 1 view .LVU4392
 329:Core/Src/SEGGER_RTT.c ****   p->aUp[0].SizeOfBuffer  = BUFFER_SIZE_UP;
 10301              		.loc 1 329 27 is_stmt 0 view .LVU4393
 10302 004e E261     		str	r2, [r4, #28]
 330:Core/Src/SEGGER_RTT.c ****   p->aUp[0].RdOff         = 0u;
 10303              		.loc 1 330 3 is_stmt 1 view .LVU4394
 330:Core/Src/SEGGER_RTT.c ****   p->aUp[0].RdOff         = 0u;
 10304              		.loc 1 330 27 is_stmt 0 view .LVU4395
 10305 0050 2162     		str	r1, [r4, #32]
 331:Core/Src/SEGGER_RTT.c ****   p->aUp[0].WrOff         = 0u;
 10306              		.loc 1 331 3 is_stmt 1 view .LVU4396
 338:Core/Src/SEGGER_RTT.c ****   p->aDown[0].SizeOfBuffer  = BUFFER_SIZE_DOWN;
 10307              		.loc 1 338 29 is_stmt 0 view .LVU4397
 10308 0052 174A     		ldr	r2, .L401+12
 331:Core/Src/SEGGER_RTT.c ****   p->aUp[0].WrOff         = 0u;
 10309              		.loc 1 331 27 view .LVU4398
 10310 0054 A662     		str	r6, [r4, #40]
 332:Core/Src/SEGGER_RTT.c ****   p->aUp[0].Flags         = SEGGER_RTT_MODE_DEFAULT;
 10311              		.loc 1 332 3 is_stmt 1 view .LVU4399
 332:Core/Src/SEGGER_RTT.c ****   p->aUp[0].Flags         = SEGGER_RTT_MODE_DEFAULT;
 10312              		.loc 1 332 27 is_stmt 0 view .LVU4400
 10313 0056 6662     		str	r6, [r4, #36]
 333:Core/Src/SEGGER_RTT.c ****   //
 10314              		.loc 1 333 3 is_stmt 1 view .LVU4401
 333:Core/Src/SEGGER_RTT.c ****   //
 10315              		.loc 1 333 27 is_stmt 0 view .LVU4402
 10316 0058 E662     		str	r6, [r4, #44]
 337:Core/Src/SEGGER_RTT.c ****   p->aDown[0].pBuffer       = _acDownBuffer;
 10317              		.loc 1 337 3 is_stmt 1 view .LVU4403
 337:Core/Src/SEGGER_RTT.c ****   p->aDown[0].pBuffer       = _acDownBuffer;
 10318              		.loc 1 337 29 is_stmt 0 view .LVU4404
 10319 005a 2366     		str	r3, [r4, #96]
 338:Core/Src/SEGGER_RTT.c ****   p->aDown[0].SizeOfBuffer  = BUFFER_SIZE_DOWN;
 10320              		.loc 1 338 3 is_stmt 1 view .LVU4405
 339:Core/Src/SEGGER_RTT.c ****   p->aDown[0].RdOff         = 0u;
 10321              		.loc 1 339 29 is_stmt 0 view .LVU4406
 10322 005c 1023     		movs	r3, #16
 338:Core/Src/SEGGER_RTT.c ****   p->aDown[0].SizeOfBuffer  = BUFFER_SIZE_DOWN;
 10323              		.loc 1 338 29 view .LVU4407
 10324 005e 6266     		str	r2, [r4, #100]
 339:Core/Src/SEGGER_RTT.c ****   p->aDown[0].RdOff         = 0u;
 10325              		.loc 1 339 3 is_stmt 1 view .LVU4408
 339:Core/Src/SEGGER_RTT.c ****   p->aDown[0].RdOff         = 0u;
 10326              		.loc 1 339 29 is_stmt 0 view .LVU4409
 10327 0060 A366     		str	r3, [r4, #104]
 340:Core/Src/SEGGER_RTT.c ****   p->aDown[0].WrOff         = 0u;
 10328              		.loc 1 340 3 is_stmt 1 view .LVU4410
 340:Core/Src/SEGGER_RTT.c ****   p->aDown[0].WrOff         = 0u;
 10329              		.loc 1 340 29 is_stmt 0 view .LVU4411
 10330 0062 2667     		str	r6, [r4, #112]
 341:Core/Src/SEGGER_RTT.c ****   p->aDown[0].Flags         = SEGGER_RTT_MODE_DEFAULT;
 10331              		.loc 1 341 3 is_stmt 1 view .LVU4412
 341:Core/Src/SEGGER_RTT.c ****   p->aDown[0].Flags         = SEGGER_RTT_MODE_DEFAULT;
 10332              		.loc 1 341 29 is_stmt 0 view .LVU4413
 10333 0064 E666     		str	r6, [r4, #108]
 342:Core/Src/SEGGER_RTT.c ****   //
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccSC4OZm.s 			page 280


 10334              		.loc 1 342 3 is_stmt 1 view .LVU4414
 342:Core/Src/SEGGER_RTT.c ****   //
 10335              		.loc 1 342 29 is_stmt 0 view .LVU4415
 10336 0066 6667     		str	r6, [r4, #116]
 348:Core/Src/SEGGER_RTT.c ****   for (i = 0; i < sizeof(_aInitStr) - 1; ++i) {
 10337              		.loc 1 348 3 is_stmt 1 view .LVU4416
 10338              		.syntax unified
 10339              	@ 348 "Core/Src/SEGGER_RTT.c" 1
 10340 0068 BFF35F8F 		dmb
 10341              	
 10342              	@ 0 "" 2
 348:Core/Src/SEGGER_RTT.c ****   for (i = 0; i < sizeof(_aInitStr) - 1; ++i) {
 10343              		.loc 1 348 13 view .LVU4417
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 10344              		.loc 1 349 3 view .LVU4418
 10345              	.LVL975:
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 10346              		.loc 1 349 17 view .LVU4419
 350:Core/Src/SEGGER_RTT.c ****   }
 10347              		.loc 1 350 5 view .LVU4420
 350:Core/Src/SEGGER_RTT.c ****   }
 10348              		.loc 1 350 16 is_stmt 0 view .LVU4421
 10349              		.thumb
 10350              		.syntax unified
 10351 006c 5323     		movs	r3, #83
 10352 006e 2370     		strb	r3, [r4]
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 10353              		.loc 1 349 42 is_stmt 1 view .LVU4422
 10354              	.LVL976:
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 10355              		.loc 1 349 17 view .LVU4423
 350:Core/Src/SEGGER_RTT.c ****   }
 10356              		.loc 1 350 5 view .LVU4424
 350:Core/Src/SEGGER_RTT.c ****   }
 10357              		.loc 1 350 16 is_stmt 0 view .LVU4425
 10358 0070 4722     		movs	r2, #71
 10359 0072 4523     		movs	r3, #69
 10360 0074 6370     		strb	r3, [r4, #1]
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 10361              		.loc 1 349 42 is_stmt 1 view .LVU4426
 10362              	.LVL977:
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 10363              		.loc 1 349 17 view .LVU4427
 350:Core/Src/SEGGER_RTT.c ****   }
 10364              		.loc 1 350 5 view .LVU4428
 350:Core/Src/SEGGER_RTT.c ****   }
 10365              		.loc 1 350 16 is_stmt 0 view .LVU4429
 10366 0076 2021     		movs	r1, #32
 10367 0078 A270     		strb	r2, [r4, #2]
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 10368              		.loc 1 349 42 is_stmt 1 view .LVU4430
 10369              	.LVL978:
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 10370              		.loc 1 349 17 view .LVU4431
 350:Core/Src/SEGGER_RTT.c ****   }
 10371              		.loc 1 350 5 view .LVU4432
 350:Core/Src/SEGGER_RTT.c ****   }
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccSC4OZm.s 			page 281


 10372              		.loc 1 350 16 is_stmt 0 view .LVU4433
 10373 007a E270     		strb	r2, [r4, #3]
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 10374              		.loc 1 349 42 is_stmt 1 view .LVU4434
 10375              	.LVL979:
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 10376              		.loc 1 349 17 view .LVU4435
 350:Core/Src/SEGGER_RTT.c ****   }
 10377              		.loc 1 350 5 view .LVU4436
 350:Core/Src/SEGGER_RTT.c ****   }
 10378              		.loc 1 350 16 is_stmt 0 view .LVU4437
 10379 007c 2371     		strb	r3, [r4, #4]
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 10380              		.loc 1 349 42 is_stmt 1 view .LVU4438
 10381              	.LVL980:
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 10382              		.loc 1 349 17 view .LVU4439
 350:Core/Src/SEGGER_RTT.c ****   }
 10383              		.loc 1 350 5 view .LVU4440
 350:Core/Src/SEGGER_RTT.c ****   }
 10384              		.loc 1 350 16 is_stmt 0 view .LVU4441
 10385 007e 5222     		movs	r2, #82
 10386 0080 5423     		movs	r3, #84
 10387 0082 6271     		strb	r2, [r4, #5]
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 10388              		.loc 1 349 42 is_stmt 1 view .LVU4442
 10389              	.LVL981:
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 10390              		.loc 1 349 17 view .LVU4443
 350:Core/Src/SEGGER_RTT.c ****   }
 10391              		.loc 1 350 5 view .LVU4444
 350:Core/Src/SEGGER_RTT.c ****   }
 10392              		.loc 1 350 16 is_stmt 0 view .LVU4445
 10393 0084 A171     		strb	r1, [r4, #6]
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 10394              		.loc 1 349 42 is_stmt 1 view .LVU4446
 10395              	.LVL982:
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 10396              		.loc 1 349 17 view .LVU4447
 350:Core/Src/SEGGER_RTT.c ****   }
 10397              		.loc 1 350 5 view .LVU4448
 350:Core/Src/SEGGER_RTT.c ****   }
 10398              		.loc 1 350 16 is_stmt 0 view .LVU4449
 10399 0086 E271     		strb	r2, [r4, #7]
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 10400              		.loc 1 349 42 is_stmt 1 view .LVU4450
 10401              	.LVL983:
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 10402              		.loc 1 349 17 view .LVU4451
 350:Core/Src/SEGGER_RTT.c ****   }
 10403              		.loc 1 350 5 view .LVU4452
 350:Core/Src/SEGGER_RTT.c ****   }
 10404              		.loc 1 350 16 is_stmt 0 view .LVU4453
 10405 0088 2372     		strb	r3, [r4, #8]
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 10406              		.loc 1 349 42 is_stmt 1 view .LVU4454
 10407              	.LVL984:
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccSC4OZm.s 			page 282


 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 10408              		.loc 1 349 17 view .LVU4455
 350:Core/Src/SEGGER_RTT.c ****   }
 10409              		.loc 1 350 5 view .LVU4456
 350:Core/Src/SEGGER_RTT.c ****   }
 10410              		.loc 1 350 16 is_stmt 0 view .LVU4457
 10411 008a 6372     		strb	r3, [r4, #9]
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 10412              		.loc 1 349 42 is_stmt 1 view .LVU4458
 10413              	.LVL985:
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 10414              		.loc 1 349 17 view .LVU4459
 350:Core/Src/SEGGER_RTT.c ****   }
 10415              		.loc 1 350 5 view .LVU4460
 350:Core/Src/SEGGER_RTT.c ****   }
 10416              		.loc 1 350 16 is_stmt 0 view .LVU4461
 10417 008c A672     		strb	r6, [r4, #10]
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 10418              		.loc 1 349 42 is_stmt 1 view .LVU4462
 10419              	.LVL986:
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 10420              		.loc 1 349 17 view .LVU4463
 350:Core/Src/SEGGER_RTT.c ****   }
 10421              		.loc 1 350 5 view .LVU4464
 350:Core/Src/SEGGER_RTT.c ****   }
 10422              		.loc 1 350 16 is_stmt 0 view .LVU4465
 10423 008e E672     		strb	r6, [r4, #11]
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 10424              		.loc 1 349 42 is_stmt 1 view .LVU4466
 10425              	.LVL987:
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 10426              		.loc 1 349 17 view .LVU4467
 350:Core/Src/SEGGER_RTT.c ****   }
 10427              		.loc 1 350 5 view .LVU4468
 350:Core/Src/SEGGER_RTT.c ****   }
 10428              		.loc 1 350 16 is_stmt 0 view .LVU4469
 10429 0090 2673     		strb	r6, [r4, #12]
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 10430              		.loc 1 349 42 is_stmt 1 view .LVU4470
 10431              	.LVL988:
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 10432              		.loc 1 349 17 view .LVU4471
 350:Core/Src/SEGGER_RTT.c ****   }
 10433              		.loc 1 350 5 view .LVU4472
 350:Core/Src/SEGGER_RTT.c ****   }
 10434              		.loc 1 350 16 is_stmt 0 view .LVU4473
 10435 0092 6673     		strb	r6, [r4, #13]
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 10436              		.loc 1 349 42 is_stmt 1 view .LVU4474
 10437              	.LVL989:
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 10438              		.loc 1 349 17 view .LVU4475
 350:Core/Src/SEGGER_RTT.c ****   }
 10439              		.loc 1 350 5 view .LVU4476
 350:Core/Src/SEGGER_RTT.c ****   }
 10440              		.loc 1 350 16 is_stmt 0 view .LVU4477
 10441 0094 A673     		strb	r6, [r4, #14]
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccSC4OZm.s 			page 283


 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 10442              		.loc 1 349 42 is_stmt 1 view .LVU4478
 10443              	.LVL990:
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 10444              		.loc 1 349 17 view .LVU4479
 350:Core/Src/SEGGER_RTT.c ****   }
 10445              		.loc 1 350 5 view .LVU4480
 350:Core/Src/SEGGER_RTT.c ****   }
 10446              		.loc 1 350 16 is_stmt 0 view .LVU4481
 10447 0096 E673     		strb	r6, [r4, #15]
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 10448              		.loc 1 349 42 is_stmt 1 view .LVU4482
 10449              	.LVL991:
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 10450              		.loc 1 349 17 view .LVU4483
 352:Core/Src/SEGGER_RTT.c **** }
 10451              		.loc 1 352 3 view .LVU4484
 10452              		.syntax unified
 10453              	@ 352 "Core/Src/SEGGER_RTT.c" 1
 10454 0098 BFF35F8F 		dmb
 10455              	
 10456              	@ 0 "" 2
 352:Core/Src/SEGGER_RTT.c **** }
 10457              		.loc 1 352 13 view .LVU4485
 353:Core/Src/SEGGER_RTT.c **** 
 10458              		.loc 1 353 1 is_stmt 0 view .LVU4486
 10459              		.thumb
 10460              		.syntax unified
 10461 009c B6E7     		b	.L396
 10462              	.LVL992:
 10463              	.L398:
 353:Core/Src/SEGGER_RTT.c **** 
 10464              		.loc 1 353 1 view .LVU4487
 10465              	.LBE534:
 10466              	.LBE533:
 10467              	.LBE538:
1813:Core/Src/SEGGER_RTT.c ****   }
 10468              		.loc 1 1813 7 view .LVU4488
 10469 009e 4FF0FF30 		mov	r0, #-1
 10470              	.LVL993:
1815:Core/Src/SEGGER_RTT.c **** }
 10471              		.loc 1 1815 3 is_stmt 1 view .LVU4489
 10472              		.loc 1 1816 1 is_stmt 0 view .LVU4490
 10473 00a2 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 10474              	.LVL994:
 10475              	.L402:
 10476              		.loc 1 1816 1 view .LVU4491
 10477              		.align	2
 10478              	.L401:
 10479 00a4 00000000 		.word	.LANCHOR0
 10480 00a8 00000000 		.word	.LANCHOR1
 10481 00ac 00000000 		.word	.LC0
 10482 00b0 00000000 		.word	.LANCHOR2
 10483              		.cfi_endproc
 10484              	.LFE28:
 10486              		.section	.text.SEGGER_RTT_SetFlagsUpBuffer,"ax",%progbits
 10487              		.align	1
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccSC4OZm.s 			page 284


 10488              		.p2align 2,,3
 10489              		.global	SEGGER_RTT_SetFlagsUpBuffer
 10490              		.syntax unified
 10491              		.thumb
 10492              		.thumb_func
 10494              	SEGGER_RTT_SetFlagsUpBuffer:
 10495              	.LVL995:
 10496              	.LFB29:
1817:Core/Src/SEGGER_RTT.c **** 
1818:Core/Src/SEGGER_RTT.c **** /*********************************************************************
1819:Core/Src/SEGGER_RTT.c **** *
1820:Core/Src/SEGGER_RTT.c **** *       SEGGER_RTT_SetFlagsUpBuffer
1821:Core/Src/SEGGER_RTT.c **** *
1822:Core/Src/SEGGER_RTT.c **** *  Function description
1823:Core/Src/SEGGER_RTT.c **** *    Run-time configuration of specific up-buffer flags (T->H).
1824:Core/Src/SEGGER_RTT.c **** *    Buffer to be configured is specified by index.
1825:Core/Src/SEGGER_RTT.c **** *
1826:Core/Src/SEGGER_RTT.c **** *  Parameters
1827:Core/Src/SEGGER_RTT.c **** *    BufferIndex  Index of the buffer.
1828:Core/Src/SEGGER_RTT.c **** *    Flags        Flags to set for the buffer.
1829:Core/Src/SEGGER_RTT.c **** *                 Flags[31:24] are used for validity check and must be zero. Flags[23:2] are reserv
1830:Core/Src/SEGGER_RTT.c **** *
1831:Core/Src/SEGGER_RTT.c **** *  Return value
1832:Core/Src/SEGGER_RTT.c **** *    >= 0  O.K.
1833:Core/Src/SEGGER_RTT.c **** *     < 0  Error
1834:Core/Src/SEGGER_RTT.c **** */
1835:Core/Src/SEGGER_RTT.c **** int SEGGER_RTT_SetFlagsUpBuffer(unsigned BufferIndex, unsigned Flags) {
 10497              		.loc 1 1835 71 is_stmt 1 view -0
 10498              		.cfi_startproc
 10499              		@ args = 0, pretend = 0, frame = 0
 10500              		@ frame_needed = 0, uses_anonymous_args = 0
1836:Core/Src/SEGGER_RTT.c ****   int r;
 10501              		.loc 1 1836 3 view .LVU4493
1837:Core/Src/SEGGER_RTT.c ****   volatile SEGGER_RTT_CB* pRTTCB;
 10502              		.loc 1 1837 3 view .LVU4494
1838:Core/Src/SEGGER_RTT.c ****   volatile SEGGER_RTT_BUFFER_UP* pUp;
 10503              		.loc 1 1838 3 view .LVU4495
 10504              	.LBB543:
1839:Core/Src/SEGGER_RTT.c **** 
1840:Core/Src/SEGGER_RTT.c ****   INIT();
 10505              		.loc 1 1840 3 view .LVU4496
 10506              		.loc 1 1840 3 view .LVU4497
 10507              		.loc 1 1840 3 view .LVU4498
 10508              		.loc 1 1840 3 view .LVU4499
 10509              	.LBE543:
1835:Core/Src/SEGGER_RTT.c ****   int r;
 10510              		.loc 1 1835 71 is_stmt 0 view .LVU4500
 10511 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 10512              		.cfi_def_cfa_offset 24
 10513              		.cfi_offset 3, -24
 10514              		.cfi_offset 4, -20
 10515              		.cfi_offset 5, -16
 10516              		.cfi_offset 6, -12
 10517              		.cfi_offset 7, -8
 10518              		.cfi_offset 14, -4
 10519              	.LBB546:
 10520              		.loc 1 1840 3 view .LVU4501
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccSC4OZm.s 			page 285


 10521 0002 284C     		ldr	r4, .L409
 10522 0004 2378     		ldrb	r3, [r4]	@ zero_extendqisi2
 10523              	.LBE546:
1835:Core/Src/SEGGER_RTT.c ****   int r;
 10524              		.loc 1 1835 71 view .LVU4502
 10525 0006 0546     		mov	r5, r0
 10526 0008 0F46     		mov	r7, r1
 10527              	.LBB547:
 10528              		.loc 1 1840 3 view .LVU4503
 10529 000a 83B1     		cbz	r3, .L408
 10530              	.LVL996:
 10531              	.L404:
 10532              		.loc 1 1840 3 is_stmt 1 discriminator 3 view .LVU4504
 10533              	.LBE547:
 10534              		.loc 1 1840 9 discriminator 3 view .LVU4505
1841:Core/Src/SEGGER_RTT.c ****   pRTTCB = (volatile SEGGER_RTT_CB*)((unsigned char*)&_SEGGER_RTT + SEGGER_RTT_UNCACHED_OFF);  // A
 10535              		.loc 1 1841 3 discriminator 3 view .LVU4506
1842:Core/Src/SEGGER_RTT.c ****   if (BufferIndex < SEGGER_RTT_MAX_NUM_UP_BUFFERS) {
 10536              		.loc 1 1842 3 discriminator 3 view .LVU4507
 10537              		.loc 1 1842 6 is_stmt 0 discriminator 3 view .LVU4508
 10538 000c 022D     		cmp	r5, #2
 10539 000e 46D8     		bhi	.L406
 10540              	.LBB548:
1843:Core/Src/SEGGER_RTT.c ****     SEGGER_RTT_LOCK();
 10541              		.loc 1 1843 5 is_stmt 1 view .LVU4509
 10542              		.loc 1 1843 5 view .LVU4510
 10543              		.syntax unified
 10544              	@ 1843 "Core/Src/SEGGER_RTT.c" 1
 10545 0010 EFF31183 		mrs   r3, basepri  
 10546 0014 4FF02001 		mov   r1, #32       
 10547 0018 81F31188 		msr   basepri, r1  
 10548              		
 10549              	@ 0 "" 2
 10550              	.LVL997:
 10551              		.loc 1 1843 22 view .LVU4511
1844:Core/Src/SEGGER_RTT.c ****     pUp = &pRTTCB->aUp[BufferIndex];
 10552              		.loc 1 1844 5 view .LVU4512
1845:Core/Src/SEGGER_RTT.c ****     pUp->Flags = Flags;
 10553              		.loc 1 1845 5 view .LVU4513
 10554              		.loc 1 1845 16 is_stmt 0 view .LVU4514
 10555              		.thumb
 10556              		.syntax unified
 10557 001c 05EB4505 		add	r5, r5, r5, lsl #1
 10558              	.LVL998:
 10559              		.loc 1 1845 16 view .LVU4515
 10560 0020 04EBC504 		add	r4, r4, r5, lsl #3
 10561 0024 E762     		str	r7, [r4, #44]
1846:Core/Src/SEGGER_RTT.c ****     SEGGER_RTT_UNLOCK();
 10562              		.loc 1 1846 5 is_stmt 1 view .LVU4516
 10563              		.syntax unified
 10564              	@ 1846 "Core/Src/SEGGER_RTT.c" 1
 10565 0026 83F31188 		msr   basepri, r3  
 10566              		
 10567              	@ 0 "" 2
 10568              		.thumb
 10569              		.syntax unified
 10570              	.LBE548:
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccSC4OZm.s 			page 286


 10571              		.loc 1 1846 24 view .LVU4517
1847:Core/Src/SEGGER_RTT.c ****     r =  0;
 10572              		.loc 1 1847 5 view .LVU4518
 10573              	.LVL999:
 10574              		.loc 1 1847 7 is_stmt 0 view .LVU4519
 10575 002a 0020     		movs	r0, #0
1848:Core/Src/SEGGER_RTT.c ****   } else {
1849:Core/Src/SEGGER_RTT.c ****     r = -1;
1850:Core/Src/SEGGER_RTT.c ****   }
1851:Core/Src/SEGGER_RTT.c ****   return r;
1852:Core/Src/SEGGER_RTT.c **** }
 10576              		.loc 1 1852 1 view .LVU4520
 10577 002c F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 10578              	.LVL1000:
 10579              	.L408:
 10580              		.loc 1 1852 1 view .LVU4521
 10581 002e 03F0FF06 		and	r6, r3, #255
 10582              	.LBB549:
1840:Core/Src/SEGGER_RTT.c ****   pRTTCB = (volatile SEGGER_RTT_CB*)((unsigned char*)&_SEGGER_RTT + SEGGER_RTT_UNCACHED_OFF);  // A
 10583              		.loc 1 1840 3 is_stmt 1 view .LVU4522
 10584              	.LBB544:
 10585              	.LBI544:
 314:Core/Src/SEGGER_RTT.c ****   volatile SEGGER_RTT_CB* p;   // Volatile to make sure that compiler cannot change the order of ac
 10586              		.loc 1 314 13 view .LVU4523
 10587              	.LBB545:
 315:Core/Src/SEGGER_RTT.c ****   static const char _aInitStr[] = "\0\0\0\0\0\0TTR REGGES";  // Init complete ID string to make sur
 10588              		.loc 1 315 3 view .LVU4524
 316:Core/Src/SEGGER_RTT.c ****   unsigned i;
 10589              		.loc 1 316 3 view .LVU4525
 317:Core/Src/SEGGER_RTT.c ****   //
 10590              		.loc 1 317 3 view .LVU4526
 321:Core/Src/SEGGER_RTT.c ****   memset((SEGGER_RTT_CB*)p, 0, sizeof(_SEGGER_RTT));         // Make sure that the RTT CB is always
 10591              		.loc 1 321 3 view .LVU4527
 10592              	.LVL1001:
 322:Core/Src/SEGGER_RTT.c ****   p->MaxNumUpBuffers    = SEGGER_RTT_MAX_NUM_UP_BUFFERS;
 10593              		.loc 1 322 3 view .LVU4528
 10594 0032 3146     		mov	r1, r6
 10595              	.LVL1002:
 322:Core/Src/SEGGER_RTT.c ****   p->MaxNumUpBuffers    = SEGGER_RTT_MAX_NUM_UP_BUFFERS;
 10596              		.loc 1 322 3 is_stmt 0 view .LVU4529
 10597 0034 7822     		movs	r2, #120
 10598 0036 04F13000 		add	r0, r4, #48
 10599              	.LVL1003:
 322:Core/Src/SEGGER_RTT.c ****   p->MaxNumUpBuffers    = SEGGER_RTT_MAX_NUM_UP_BUFFERS;
 10600              		.loc 1 322 3 view .LVU4530
 10601 003a FFF7FEFF 		bl	memset
 10602              	.LVL1004:
 323:Core/Src/SEGGER_RTT.c ****   p->MaxNumDownBuffers  = SEGGER_RTT_MAX_NUM_DOWN_BUFFERS;
 10603              		.loc 1 323 3 is_stmt 1 view .LVU4531
 323:Core/Src/SEGGER_RTT.c ****   p->MaxNumDownBuffers  = SEGGER_RTT_MAX_NUM_DOWN_BUFFERS;
 10604              		.loc 1 323 25 is_stmt 0 view .LVU4532
 10605 003e 0323     		movs	r3, #3
 10606 0040 2361     		str	r3, [r4, #16]
 324:Core/Src/SEGGER_RTT.c ****   //
 10607              		.loc 1 324 3 is_stmt 1 view .LVU4533
 329:Core/Src/SEGGER_RTT.c ****   p->aUp[0].SizeOfBuffer  = BUFFER_SIZE_UP;
 10608              		.loc 1 329 27 is_stmt 0 view .LVU4534
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccSC4OZm.s 			page 287


 10609 0042 194A     		ldr	r2, .L409+4
 324:Core/Src/SEGGER_RTT.c ****   //
 10610              		.loc 1 324 25 view .LVU4535
 10611 0044 6361     		str	r3, [r4, #20]
 328:Core/Src/SEGGER_RTT.c ****   p->aUp[0].pBuffer       = _acUpBuffer;
 10612              		.loc 1 328 3 is_stmt 1 view .LVU4536
 330:Core/Src/SEGGER_RTT.c ****   p->aUp[0].RdOff         = 0u;
 10613              		.loc 1 330 27 is_stmt 0 view .LVU4537
 10614 0046 4FF48061 		mov	r1, #1024
 328:Core/Src/SEGGER_RTT.c ****   p->aUp[0].pBuffer       = _acUpBuffer;
 10615              		.loc 1 328 27 view .LVU4538
 10616 004a 184B     		ldr	r3, .L409+8
 10617 004c A361     		str	r3, [r4, #24]
 329:Core/Src/SEGGER_RTT.c ****   p->aUp[0].SizeOfBuffer  = BUFFER_SIZE_UP;
 10618              		.loc 1 329 3 is_stmt 1 view .LVU4539
 329:Core/Src/SEGGER_RTT.c ****   p->aUp[0].SizeOfBuffer  = BUFFER_SIZE_UP;
 10619              		.loc 1 329 27 is_stmt 0 view .LVU4540
 10620 004e E261     		str	r2, [r4, #28]
 330:Core/Src/SEGGER_RTT.c ****   p->aUp[0].RdOff         = 0u;
 10621              		.loc 1 330 3 is_stmt 1 view .LVU4541
 330:Core/Src/SEGGER_RTT.c ****   p->aUp[0].RdOff         = 0u;
 10622              		.loc 1 330 27 is_stmt 0 view .LVU4542
 10623 0050 2162     		str	r1, [r4, #32]
 331:Core/Src/SEGGER_RTT.c ****   p->aUp[0].WrOff         = 0u;
 10624              		.loc 1 331 3 is_stmt 1 view .LVU4543
 338:Core/Src/SEGGER_RTT.c ****   p->aDown[0].SizeOfBuffer  = BUFFER_SIZE_DOWN;
 10625              		.loc 1 338 29 is_stmt 0 view .LVU4544
 10626 0052 174A     		ldr	r2, .L409+12
 331:Core/Src/SEGGER_RTT.c ****   p->aUp[0].WrOff         = 0u;
 10627              		.loc 1 331 27 view .LVU4545
 10628 0054 A662     		str	r6, [r4, #40]
 332:Core/Src/SEGGER_RTT.c ****   p->aUp[0].Flags         = SEGGER_RTT_MODE_DEFAULT;
 10629              		.loc 1 332 3 is_stmt 1 view .LVU4546
 332:Core/Src/SEGGER_RTT.c ****   p->aUp[0].Flags         = SEGGER_RTT_MODE_DEFAULT;
 10630              		.loc 1 332 27 is_stmt 0 view .LVU4547
 10631 0056 6662     		str	r6, [r4, #36]
 333:Core/Src/SEGGER_RTT.c ****   //
 10632              		.loc 1 333 3 is_stmt 1 view .LVU4548
 333:Core/Src/SEGGER_RTT.c ****   //
 10633              		.loc 1 333 27 is_stmt 0 view .LVU4549
 10634 0058 E662     		str	r6, [r4, #44]
 337:Core/Src/SEGGER_RTT.c ****   p->aDown[0].pBuffer       = _acDownBuffer;
 10635              		.loc 1 337 3 is_stmt 1 view .LVU4550
 337:Core/Src/SEGGER_RTT.c ****   p->aDown[0].pBuffer       = _acDownBuffer;
 10636              		.loc 1 337 29 is_stmt 0 view .LVU4551
 10637 005a 2366     		str	r3, [r4, #96]
 338:Core/Src/SEGGER_RTT.c ****   p->aDown[0].SizeOfBuffer  = BUFFER_SIZE_DOWN;
 10638              		.loc 1 338 3 is_stmt 1 view .LVU4552
 339:Core/Src/SEGGER_RTT.c ****   p->aDown[0].RdOff         = 0u;
 10639              		.loc 1 339 29 is_stmt 0 view .LVU4553
 10640 005c 1023     		movs	r3, #16
 338:Core/Src/SEGGER_RTT.c ****   p->aDown[0].SizeOfBuffer  = BUFFER_SIZE_DOWN;
 10641              		.loc 1 338 29 view .LVU4554
 10642 005e 6266     		str	r2, [r4, #100]
 339:Core/Src/SEGGER_RTT.c ****   p->aDown[0].RdOff         = 0u;
 10643              		.loc 1 339 3 is_stmt 1 view .LVU4555
 339:Core/Src/SEGGER_RTT.c ****   p->aDown[0].RdOff         = 0u;
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccSC4OZm.s 			page 288


 10644              		.loc 1 339 29 is_stmt 0 view .LVU4556
 10645 0060 A366     		str	r3, [r4, #104]
 340:Core/Src/SEGGER_RTT.c ****   p->aDown[0].WrOff         = 0u;
 10646              		.loc 1 340 3 is_stmt 1 view .LVU4557
 340:Core/Src/SEGGER_RTT.c ****   p->aDown[0].WrOff         = 0u;
 10647              		.loc 1 340 29 is_stmt 0 view .LVU4558
 10648 0062 2667     		str	r6, [r4, #112]
 341:Core/Src/SEGGER_RTT.c ****   p->aDown[0].Flags         = SEGGER_RTT_MODE_DEFAULT;
 10649              		.loc 1 341 3 is_stmt 1 view .LVU4559
 341:Core/Src/SEGGER_RTT.c ****   p->aDown[0].Flags         = SEGGER_RTT_MODE_DEFAULT;
 10650              		.loc 1 341 29 is_stmt 0 view .LVU4560
 10651 0064 E666     		str	r6, [r4, #108]
 342:Core/Src/SEGGER_RTT.c ****   //
 10652              		.loc 1 342 3 is_stmt 1 view .LVU4561
 342:Core/Src/SEGGER_RTT.c ****   //
 10653              		.loc 1 342 29 is_stmt 0 view .LVU4562
 10654 0066 6667     		str	r6, [r4, #116]
 348:Core/Src/SEGGER_RTT.c ****   for (i = 0; i < sizeof(_aInitStr) - 1; ++i) {
 10655              		.loc 1 348 3 is_stmt 1 view .LVU4563
 10656              		.syntax unified
 10657              	@ 348 "Core/Src/SEGGER_RTT.c" 1
 10658 0068 BFF35F8F 		dmb
 10659              	
 10660              	@ 0 "" 2
 348:Core/Src/SEGGER_RTT.c ****   for (i = 0; i < sizeof(_aInitStr) - 1; ++i) {
 10661              		.loc 1 348 13 view .LVU4564
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 10662              		.loc 1 349 3 view .LVU4565
 10663              	.LVL1005:
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 10664              		.loc 1 349 17 view .LVU4566
 350:Core/Src/SEGGER_RTT.c ****   }
 10665              		.loc 1 350 5 view .LVU4567
 350:Core/Src/SEGGER_RTT.c ****   }
 10666              		.loc 1 350 16 is_stmt 0 view .LVU4568
 10667              		.thumb
 10668              		.syntax unified
 10669 006c 5323     		movs	r3, #83
 10670 006e 2370     		strb	r3, [r4]
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 10671              		.loc 1 349 42 is_stmt 1 view .LVU4569
 10672              	.LVL1006:
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 10673              		.loc 1 349 17 view .LVU4570
 350:Core/Src/SEGGER_RTT.c ****   }
 10674              		.loc 1 350 5 view .LVU4571
 350:Core/Src/SEGGER_RTT.c ****   }
 10675              		.loc 1 350 16 is_stmt 0 view .LVU4572
 10676 0070 4722     		movs	r2, #71
 10677 0072 4523     		movs	r3, #69
 10678 0074 6370     		strb	r3, [r4, #1]
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 10679              		.loc 1 349 42 is_stmt 1 view .LVU4573
 10680              	.LVL1007:
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 10681              		.loc 1 349 17 view .LVU4574
 350:Core/Src/SEGGER_RTT.c ****   }
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccSC4OZm.s 			page 289


 10682              		.loc 1 350 5 view .LVU4575
 350:Core/Src/SEGGER_RTT.c ****   }
 10683              		.loc 1 350 16 is_stmt 0 view .LVU4576
 10684 0076 2021     		movs	r1, #32
 10685 0078 A270     		strb	r2, [r4, #2]
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 10686              		.loc 1 349 42 is_stmt 1 view .LVU4577
 10687              	.LVL1008:
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 10688              		.loc 1 349 17 view .LVU4578
 350:Core/Src/SEGGER_RTT.c ****   }
 10689              		.loc 1 350 5 view .LVU4579
 350:Core/Src/SEGGER_RTT.c ****   }
 10690              		.loc 1 350 16 is_stmt 0 view .LVU4580
 10691 007a E270     		strb	r2, [r4, #3]
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 10692              		.loc 1 349 42 is_stmt 1 view .LVU4581
 10693              	.LVL1009:
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 10694              		.loc 1 349 17 view .LVU4582
 350:Core/Src/SEGGER_RTT.c ****   }
 10695              		.loc 1 350 5 view .LVU4583
 350:Core/Src/SEGGER_RTT.c ****   }
 10696              		.loc 1 350 16 is_stmt 0 view .LVU4584
 10697 007c 2371     		strb	r3, [r4, #4]
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 10698              		.loc 1 349 42 is_stmt 1 view .LVU4585
 10699              	.LVL1010:
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 10700              		.loc 1 349 17 view .LVU4586
 350:Core/Src/SEGGER_RTT.c ****   }
 10701              		.loc 1 350 5 view .LVU4587
 350:Core/Src/SEGGER_RTT.c ****   }
 10702              		.loc 1 350 16 is_stmt 0 view .LVU4588
 10703 007e 5222     		movs	r2, #82
 10704 0080 5423     		movs	r3, #84
 10705 0082 6271     		strb	r2, [r4, #5]
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 10706              		.loc 1 349 42 is_stmt 1 view .LVU4589
 10707              	.LVL1011:
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 10708              		.loc 1 349 17 view .LVU4590
 350:Core/Src/SEGGER_RTT.c ****   }
 10709              		.loc 1 350 5 view .LVU4591
 350:Core/Src/SEGGER_RTT.c ****   }
 10710              		.loc 1 350 16 is_stmt 0 view .LVU4592
 10711 0084 A171     		strb	r1, [r4, #6]
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 10712              		.loc 1 349 42 is_stmt 1 view .LVU4593
 10713              	.LVL1012:
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 10714              		.loc 1 349 17 view .LVU4594
 350:Core/Src/SEGGER_RTT.c ****   }
 10715              		.loc 1 350 5 view .LVU4595
 350:Core/Src/SEGGER_RTT.c ****   }
 10716              		.loc 1 350 16 is_stmt 0 view .LVU4596
 10717 0086 E271     		strb	r2, [r4, #7]
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccSC4OZm.s 			page 290


 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 10718              		.loc 1 349 42 is_stmt 1 view .LVU4597
 10719              	.LVL1013:
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 10720              		.loc 1 349 17 view .LVU4598
 350:Core/Src/SEGGER_RTT.c ****   }
 10721              		.loc 1 350 5 view .LVU4599
 350:Core/Src/SEGGER_RTT.c ****   }
 10722              		.loc 1 350 16 is_stmt 0 view .LVU4600
 10723 0088 2372     		strb	r3, [r4, #8]
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 10724              		.loc 1 349 42 is_stmt 1 view .LVU4601
 10725              	.LVL1014:
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 10726              		.loc 1 349 17 view .LVU4602
 350:Core/Src/SEGGER_RTT.c ****   }
 10727              		.loc 1 350 5 view .LVU4603
 350:Core/Src/SEGGER_RTT.c ****   }
 10728              		.loc 1 350 16 is_stmt 0 view .LVU4604
 10729 008a 6372     		strb	r3, [r4, #9]
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 10730              		.loc 1 349 42 is_stmt 1 view .LVU4605
 10731              	.LVL1015:
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 10732              		.loc 1 349 17 view .LVU4606
 350:Core/Src/SEGGER_RTT.c ****   }
 10733              		.loc 1 350 5 view .LVU4607
 350:Core/Src/SEGGER_RTT.c ****   }
 10734              		.loc 1 350 16 is_stmt 0 view .LVU4608
 10735 008c A672     		strb	r6, [r4, #10]
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 10736              		.loc 1 349 42 is_stmt 1 view .LVU4609
 10737              	.LVL1016:
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 10738              		.loc 1 349 17 view .LVU4610
 350:Core/Src/SEGGER_RTT.c ****   }
 10739              		.loc 1 350 5 view .LVU4611
 350:Core/Src/SEGGER_RTT.c ****   }
 10740              		.loc 1 350 16 is_stmt 0 view .LVU4612
 10741 008e E672     		strb	r6, [r4, #11]
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 10742              		.loc 1 349 42 is_stmt 1 view .LVU4613
 10743              	.LVL1017:
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 10744              		.loc 1 349 17 view .LVU4614
 350:Core/Src/SEGGER_RTT.c ****   }
 10745              		.loc 1 350 5 view .LVU4615
 350:Core/Src/SEGGER_RTT.c ****   }
 10746              		.loc 1 350 16 is_stmt 0 view .LVU4616
 10747 0090 2673     		strb	r6, [r4, #12]
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 10748              		.loc 1 349 42 is_stmt 1 view .LVU4617
 10749              	.LVL1018:
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 10750              		.loc 1 349 17 view .LVU4618
 350:Core/Src/SEGGER_RTT.c ****   }
 10751              		.loc 1 350 5 view .LVU4619
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccSC4OZm.s 			page 291


 350:Core/Src/SEGGER_RTT.c ****   }
 10752              		.loc 1 350 16 is_stmt 0 view .LVU4620
 10753 0092 6673     		strb	r6, [r4, #13]
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 10754              		.loc 1 349 42 is_stmt 1 view .LVU4621
 10755              	.LVL1019:
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 10756              		.loc 1 349 17 view .LVU4622
 350:Core/Src/SEGGER_RTT.c ****   }
 10757              		.loc 1 350 5 view .LVU4623
 350:Core/Src/SEGGER_RTT.c ****   }
 10758              		.loc 1 350 16 is_stmt 0 view .LVU4624
 10759 0094 A673     		strb	r6, [r4, #14]
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 10760              		.loc 1 349 42 is_stmt 1 view .LVU4625
 10761              	.LVL1020:
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 10762              		.loc 1 349 17 view .LVU4626
 350:Core/Src/SEGGER_RTT.c ****   }
 10763              		.loc 1 350 5 view .LVU4627
 350:Core/Src/SEGGER_RTT.c ****   }
 10764              		.loc 1 350 16 is_stmt 0 view .LVU4628
 10765 0096 E673     		strb	r6, [r4, #15]
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 10766              		.loc 1 349 42 is_stmt 1 view .LVU4629
 10767              	.LVL1021:
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 10768              		.loc 1 349 17 view .LVU4630
 352:Core/Src/SEGGER_RTT.c **** }
 10769              		.loc 1 352 3 view .LVU4631
 10770              		.syntax unified
 10771              	@ 352 "Core/Src/SEGGER_RTT.c" 1
 10772 0098 BFF35F8F 		dmb
 10773              	
 10774              	@ 0 "" 2
 352:Core/Src/SEGGER_RTT.c **** }
 10775              		.loc 1 352 13 view .LVU4632
 353:Core/Src/SEGGER_RTT.c **** 
 10776              		.loc 1 353 1 is_stmt 0 view .LVU4633
 10777              		.thumb
 10778              		.syntax unified
 10779 009c B6E7     		b	.L404
 10780              	.LVL1022:
 10781              	.L406:
 353:Core/Src/SEGGER_RTT.c **** 
 10782              		.loc 1 353 1 view .LVU4634
 10783              	.LBE545:
 10784              	.LBE544:
 10785              	.LBE549:
1849:Core/Src/SEGGER_RTT.c ****   }
 10786              		.loc 1 1849 7 view .LVU4635
 10787 009e 4FF0FF30 		mov	r0, #-1
 10788              	.LVL1023:
1851:Core/Src/SEGGER_RTT.c **** }
 10789              		.loc 1 1851 3 is_stmt 1 view .LVU4636
 10790              		.loc 1 1852 1 is_stmt 0 view .LVU4637
 10791 00a2 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccSC4OZm.s 			page 292


 10792              	.LVL1024:
 10793              	.L410:
 10794              		.loc 1 1852 1 view .LVU4638
 10795              		.align	2
 10796              	.L409:
 10797 00a4 00000000 		.word	.LANCHOR0
 10798 00a8 00000000 		.word	.LANCHOR1
 10799 00ac 00000000 		.word	.LC0
 10800 00b0 00000000 		.word	.LANCHOR2
 10801              		.cfi_endproc
 10802              	.LFE29:
 10804              		.section	.text.SEGGER_RTT_SetFlagsDownBuffer,"ax",%progbits
 10805              		.align	1
 10806              		.p2align 2,,3
 10807              		.global	SEGGER_RTT_SetFlagsDownBuffer
 10808              		.syntax unified
 10809              		.thumb
 10810              		.thumb_func
 10812              	SEGGER_RTT_SetFlagsDownBuffer:
 10813              	.LVL1025:
 10814              	.LFB30:
1853:Core/Src/SEGGER_RTT.c **** 
1854:Core/Src/SEGGER_RTT.c **** /*********************************************************************
1855:Core/Src/SEGGER_RTT.c **** *
1856:Core/Src/SEGGER_RTT.c **** *       SEGGER_RTT_SetFlagsDownBuffer
1857:Core/Src/SEGGER_RTT.c **** *
1858:Core/Src/SEGGER_RTT.c **** *  Function description
1859:Core/Src/SEGGER_RTT.c **** *    Run-time configuration of specific Down-buffer flags (T->H).
1860:Core/Src/SEGGER_RTT.c **** *    Buffer to be configured is specified by index.
1861:Core/Src/SEGGER_RTT.c **** *
1862:Core/Src/SEGGER_RTT.c **** *  Parameters
1863:Core/Src/SEGGER_RTT.c **** *    BufferIndex  Index of the buffer to renamed.
1864:Core/Src/SEGGER_RTT.c **** *    Flags        Flags to set for the buffer.
1865:Core/Src/SEGGER_RTT.c **** *                 Flags[31:24] are used for validity check and must be zero. Flags[23:2] are reserv
1866:Core/Src/SEGGER_RTT.c **** *
1867:Core/Src/SEGGER_RTT.c **** *  Return value
1868:Core/Src/SEGGER_RTT.c **** *    >= 0  O.K.
1869:Core/Src/SEGGER_RTT.c **** *     < 0  Error
1870:Core/Src/SEGGER_RTT.c **** */
1871:Core/Src/SEGGER_RTT.c **** int SEGGER_RTT_SetFlagsDownBuffer(unsigned BufferIndex, unsigned Flags) {
 10815              		.loc 1 1871 73 is_stmt 1 view -0
 10816              		.cfi_startproc
 10817              		@ args = 0, pretend = 0, frame = 0
 10818              		@ frame_needed = 0, uses_anonymous_args = 0
1872:Core/Src/SEGGER_RTT.c ****   int r;
 10819              		.loc 1 1872 3 view .LVU4640
1873:Core/Src/SEGGER_RTT.c ****   volatile SEGGER_RTT_CB* pRTTCB;
 10820              		.loc 1 1873 3 view .LVU4641
1874:Core/Src/SEGGER_RTT.c ****   volatile SEGGER_RTT_BUFFER_DOWN* pDown;
 10821              		.loc 1 1874 3 view .LVU4642
 10822              	.LBB554:
1875:Core/Src/SEGGER_RTT.c **** 
1876:Core/Src/SEGGER_RTT.c ****   INIT();
 10823              		.loc 1 1876 3 view .LVU4643
 10824              		.loc 1 1876 3 view .LVU4644
 10825              		.loc 1 1876 3 view .LVU4645
 10826              		.loc 1 1876 3 view .LVU4646
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccSC4OZm.s 			page 293


 10827              	.LBE554:
1871:Core/Src/SEGGER_RTT.c ****   int r;
 10828              		.loc 1 1871 73 is_stmt 0 view .LVU4647
 10829 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 10830              		.cfi_def_cfa_offset 24
 10831              		.cfi_offset 3, -24
 10832              		.cfi_offset 4, -20
 10833              		.cfi_offset 5, -16
 10834              		.cfi_offset 6, -12
 10835              		.cfi_offset 7, -8
 10836              		.cfi_offset 14, -4
 10837              	.LBB557:
 10838              		.loc 1 1876 3 view .LVU4648
 10839 0002 284C     		ldr	r4, .L417
 10840 0004 2378     		ldrb	r3, [r4]	@ zero_extendqisi2
 10841              	.LBE557:
1871:Core/Src/SEGGER_RTT.c ****   int r;
 10842              		.loc 1 1871 73 view .LVU4649
 10843 0006 0546     		mov	r5, r0
 10844 0008 0F46     		mov	r7, r1
 10845              	.LBB558:
 10846              		.loc 1 1876 3 view .LVU4650
 10847 000a 83B1     		cbz	r3, .L416
 10848              	.LVL1026:
 10849              	.L412:
 10850              		.loc 1 1876 3 is_stmt 1 discriminator 3 view .LVU4651
 10851              	.LBE558:
 10852              		.loc 1 1876 9 discriminator 3 view .LVU4652
1877:Core/Src/SEGGER_RTT.c ****   pRTTCB = (volatile SEGGER_RTT_CB*)((unsigned char*)&_SEGGER_RTT + SEGGER_RTT_UNCACHED_OFF);  // A
 10853              		.loc 1 1877 3 discriminator 3 view .LVU4653
1878:Core/Src/SEGGER_RTT.c ****   if (BufferIndex < SEGGER_RTT_MAX_NUM_DOWN_BUFFERS) {
 10854              		.loc 1 1878 3 discriminator 3 view .LVU4654
 10855              		.loc 1 1878 6 is_stmt 0 discriminator 3 view .LVU4655
 10856 000c 022D     		cmp	r5, #2
 10857 000e 46D8     		bhi	.L414
 10858              	.LBB559:
1879:Core/Src/SEGGER_RTT.c ****     SEGGER_RTT_LOCK();
 10859              		.loc 1 1879 5 is_stmt 1 view .LVU4656
 10860              		.loc 1 1879 5 view .LVU4657
 10861              		.syntax unified
 10862              	@ 1879 "Core/Src/SEGGER_RTT.c" 1
 10863 0010 EFF31183 		mrs   r3, basepri  
 10864 0014 4FF02001 		mov   r1, #32       
 10865 0018 81F31188 		msr   basepri, r1  
 10866              		
 10867              	@ 0 "" 2
 10868              	.LVL1027:
 10869              		.loc 1 1879 22 view .LVU4658
1880:Core/Src/SEGGER_RTT.c ****     pDown = &pRTTCB->aDown[BufferIndex];
 10870              		.loc 1 1880 5 view .LVU4659
1881:Core/Src/SEGGER_RTT.c ****     pDown->Flags = Flags;
 10871              		.loc 1 1881 5 view .LVU4660
 10872              		.loc 1 1881 18 is_stmt 0 view .LVU4661
 10873              		.thumb
 10874              		.syntax unified
 10875 001c 05EB4505 		add	r5, r5, r5, lsl #1
 10876              	.LVL1028:
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccSC4OZm.s 			page 294


 10877              		.loc 1 1881 18 view .LVU4662
 10878 0020 04EBC504 		add	r4, r4, r5, lsl #3
 10879 0024 6767     		str	r7, [r4, #116]
1882:Core/Src/SEGGER_RTT.c ****     SEGGER_RTT_UNLOCK();
 10880              		.loc 1 1882 5 is_stmt 1 view .LVU4663
 10881              		.syntax unified
 10882              	@ 1882 "Core/Src/SEGGER_RTT.c" 1
 10883 0026 83F31188 		msr   basepri, r3  
 10884              		
 10885              	@ 0 "" 2
 10886              		.thumb
 10887              		.syntax unified
 10888              	.LBE559:
 10889              		.loc 1 1882 24 view .LVU4664
1883:Core/Src/SEGGER_RTT.c ****     r =  0;
 10890              		.loc 1 1883 5 view .LVU4665
 10891              	.LVL1029:
 10892              		.loc 1 1883 7 is_stmt 0 view .LVU4666
 10893 002a 0020     		movs	r0, #0
1884:Core/Src/SEGGER_RTT.c ****   } else {
1885:Core/Src/SEGGER_RTT.c ****     r = -1;
1886:Core/Src/SEGGER_RTT.c ****   }
1887:Core/Src/SEGGER_RTT.c ****   return r;
1888:Core/Src/SEGGER_RTT.c **** }
 10894              		.loc 1 1888 1 view .LVU4667
 10895 002c F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 10896              	.LVL1030:
 10897              	.L416:
 10898              		.loc 1 1888 1 view .LVU4668
 10899 002e 03F0FF06 		and	r6, r3, #255
 10900              	.LBB560:
1876:Core/Src/SEGGER_RTT.c ****   pRTTCB = (volatile SEGGER_RTT_CB*)((unsigned char*)&_SEGGER_RTT + SEGGER_RTT_UNCACHED_OFF);  // A
 10901              		.loc 1 1876 3 is_stmt 1 view .LVU4669
 10902              	.LBB555:
 10903              	.LBI555:
 314:Core/Src/SEGGER_RTT.c ****   volatile SEGGER_RTT_CB* p;   // Volatile to make sure that compiler cannot change the order of ac
 10904              		.loc 1 314 13 view .LVU4670
 10905              	.LBB556:
 315:Core/Src/SEGGER_RTT.c ****   static const char _aInitStr[] = "\0\0\0\0\0\0TTR REGGES";  // Init complete ID string to make sur
 10906              		.loc 1 315 3 view .LVU4671
 316:Core/Src/SEGGER_RTT.c ****   unsigned i;
 10907              		.loc 1 316 3 view .LVU4672
 317:Core/Src/SEGGER_RTT.c ****   //
 10908              		.loc 1 317 3 view .LVU4673
 321:Core/Src/SEGGER_RTT.c ****   memset((SEGGER_RTT_CB*)p, 0, sizeof(_SEGGER_RTT));         // Make sure that the RTT CB is always
 10909              		.loc 1 321 3 view .LVU4674
 10910              	.LVL1031:
 322:Core/Src/SEGGER_RTT.c ****   p->MaxNumUpBuffers    = SEGGER_RTT_MAX_NUM_UP_BUFFERS;
 10911              		.loc 1 322 3 view .LVU4675
 10912 0032 3146     		mov	r1, r6
 10913              	.LVL1032:
 322:Core/Src/SEGGER_RTT.c ****   p->MaxNumUpBuffers    = SEGGER_RTT_MAX_NUM_UP_BUFFERS;
 10914              		.loc 1 322 3 is_stmt 0 view .LVU4676
 10915 0034 7822     		movs	r2, #120
 10916 0036 04F13000 		add	r0, r4, #48
 10917              	.LVL1033:
 322:Core/Src/SEGGER_RTT.c ****   p->MaxNumUpBuffers    = SEGGER_RTT_MAX_NUM_UP_BUFFERS;
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccSC4OZm.s 			page 295


 10918              		.loc 1 322 3 view .LVU4677
 10919 003a FFF7FEFF 		bl	memset
 10920              	.LVL1034:
 323:Core/Src/SEGGER_RTT.c ****   p->MaxNumDownBuffers  = SEGGER_RTT_MAX_NUM_DOWN_BUFFERS;
 10921              		.loc 1 323 3 is_stmt 1 view .LVU4678
 323:Core/Src/SEGGER_RTT.c ****   p->MaxNumDownBuffers  = SEGGER_RTT_MAX_NUM_DOWN_BUFFERS;
 10922              		.loc 1 323 25 is_stmt 0 view .LVU4679
 10923 003e 0323     		movs	r3, #3
 10924 0040 2361     		str	r3, [r4, #16]
 324:Core/Src/SEGGER_RTT.c ****   //
 10925              		.loc 1 324 3 is_stmt 1 view .LVU4680
 329:Core/Src/SEGGER_RTT.c ****   p->aUp[0].SizeOfBuffer  = BUFFER_SIZE_UP;
 10926              		.loc 1 329 27 is_stmt 0 view .LVU4681
 10927 0042 194A     		ldr	r2, .L417+4
 324:Core/Src/SEGGER_RTT.c ****   //
 10928              		.loc 1 324 25 view .LVU4682
 10929 0044 6361     		str	r3, [r4, #20]
 328:Core/Src/SEGGER_RTT.c ****   p->aUp[0].pBuffer       = _acUpBuffer;
 10930              		.loc 1 328 3 is_stmt 1 view .LVU4683
 330:Core/Src/SEGGER_RTT.c ****   p->aUp[0].RdOff         = 0u;
 10931              		.loc 1 330 27 is_stmt 0 view .LVU4684
 10932 0046 4FF48061 		mov	r1, #1024
 328:Core/Src/SEGGER_RTT.c ****   p->aUp[0].pBuffer       = _acUpBuffer;
 10933              		.loc 1 328 27 view .LVU4685
 10934 004a 184B     		ldr	r3, .L417+8
 10935 004c A361     		str	r3, [r4, #24]
 329:Core/Src/SEGGER_RTT.c ****   p->aUp[0].SizeOfBuffer  = BUFFER_SIZE_UP;
 10936              		.loc 1 329 3 is_stmt 1 view .LVU4686
 329:Core/Src/SEGGER_RTT.c ****   p->aUp[0].SizeOfBuffer  = BUFFER_SIZE_UP;
 10937              		.loc 1 329 27 is_stmt 0 view .LVU4687
 10938 004e E261     		str	r2, [r4, #28]
 330:Core/Src/SEGGER_RTT.c ****   p->aUp[0].RdOff         = 0u;
 10939              		.loc 1 330 3 is_stmt 1 view .LVU4688
 330:Core/Src/SEGGER_RTT.c ****   p->aUp[0].RdOff         = 0u;
 10940              		.loc 1 330 27 is_stmt 0 view .LVU4689
 10941 0050 2162     		str	r1, [r4, #32]
 331:Core/Src/SEGGER_RTT.c ****   p->aUp[0].WrOff         = 0u;
 10942              		.loc 1 331 3 is_stmt 1 view .LVU4690
 338:Core/Src/SEGGER_RTT.c ****   p->aDown[0].SizeOfBuffer  = BUFFER_SIZE_DOWN;
 10943              		.loc 1 338 29 is_stmt 0 view .LVU4691
 10944 0052 174A     		ldr	r2, .L417+12
 331:Core/Src/SEGGER_RTT.c ****   p->aUp[0].WrOff         = 0u;
 10945              		.loc 1 331 27 view .LVU4692
 10946 0054 A662     		str	r6, [r4, #40]
 332:Core/Src/SEGGER_RTT.c ****   p->aUp[0].Flags         = SEGGER_RTT_MODE_DEFAULT;
 10947              		.loc 1 332 3 is_stmt 1 view .LVU4693
 332:Core/Src/SEGGER_RTT.c ****   p->aUp[0].Flags         = SEGGER_RTT_MODE_DEFAULT;
 10948              		.loc 1 332 27 is_stmt 0 view .LVU4694
 10949 0056 6662     		str	r6, [r4, #36]
 333:Core/Src/SEGGER_RTT.c ****   //
 10950              		.loc 1 333 3 is_stmt 1 view .LVU4695
 333:Core/Src/SEGGER_RTT.c ****   //
 10951              		.loc 1 333 27 is_stmt 0 view .LVU4696
 10952 0058 E662     		str	r6, [r4, #44]
 337:Core/Src/SEGGER_RTT.c ****   p->aDown[0].pBuffer       = _acDownBuffer;
 10953              		.loc 1 337 3 is_stmt 1 view .LVU4697
 337:Core/Src/SEGGER_RTT.c ****   p->aDown[0].pBuffer       = _acDownBuffer;
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccSC4OZm.s 			page 296


 10954              		.loc 1 337 29 is_stmt 0 view .LVU4698
 10955 005a 2366     		str	r3, [r4, #96]
 338:Core/Src/SEGGER_RTT.c ****   p->aDown[0].SizeOfBuffer  = BUFFER_SIZE_DOWN;
 10956              		.loc 1 338 3 is_stmt 1 view .LVU4699
 339:Core/Src/SEGGER_RTT.c ****   p->aDown[0].RdOff         = 0u;
 10957              		.loc 1 339 29 is_stmt 0 view .LVU4700
 10958 005c 1023     		movs	r3, #16
 338:Core/Src/SEGGER_RTT.c ****   p->aDown[0].SizeOfBuffer  = BUFFER_SIZE_DOWN;
 10959              		.loc 1 338 29 view .LVU4701
 10960 005e 6266     		str	r2, [r4, #100]
 339:Core/Src/SEGGER_RTT.c ****   p->aDown[0].RdOff         = 0u;
 10961              		.loc 1 339 3 is_stmt 1 view .LVU4702
 339:Core/Src/SEGGER_RTT.c ****   p->aDown[0].RdOff         = 0u;
 10962              		.loc 1 339 29 is_stmt 0 view .LVU4703
 10963 0060 A366     		str	r3, [r4, #104]
 340:Core/Src/SEGGER_RTT.c ****   p->aDown[0].WrOff         = 0u;
 10964              		.loc 1 340 3 is_stmt 1 view .LVU4704
 340:Core/Src/SEGGER_RTT.c ****   p->aDown[0].WrOff         = 0u;
 10965              		.loc 1 340 29 is_stmt 0 view .LVU4705
 10966 0062 2667     		str	r6, [r4, #112]
 341:Core/Src/SEGGER_RTT.c ****   p->aDown[0].Flags         = SEGGER_RTT_MODE_DEFAULT;
 10967              		.loc 1 341 3 is_stmt 1 view .LVU4706
 341:Core/Src/SEGGER_RTT.c ****   p->aDown[0].Flags         = SEGGER_RTT_MODE_DEFAULT;
 10968              		.loc 1 341 29 is_stmt 0 view .LVU4707
 10969 0064 E666     		str	r6, [r4, #108]
 342:Core/Src/SEGGER_RTT.c ****   //
 10970              		.loc 1 342 3 is_stmt 1 view .LVU4708
 342:Core/Src/SEGGER_RTT.c ****   //
 10971              		.loc 1 342 29 is_stmt 0 view .LVU4709
 10972 0066 6667     		str	r6, [r4, #116]
 348:Core/Src/SEGGER_RTT.c ****   for (i = 0; i < sizeof(_aInitStr) - 1; ++i) {
 10973              		.loc 1 348 3 is_stmt 1 view .LVU4710
 10974              		.syntax unified
 10975              	@ 348 "Core/Src/SEGGER_RTT.c" 1
 10976 0068 BFF35F8F 		dmb
 10977              	
 10978              	@ 0 "" 2
 348:Core/Src/SEGGER_RTT.c ****   for (i = 0; i < sizeof(_aInitStr) - 1; ++i) {
 10979              		.loc 1 348 13 view .LVU4711
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 10980              		.loc 1 349 3 view .LVU4712
 10981              	.LVL1035:
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 10982              		.loc 1 349 17 view .LVU4713
 350:Core/Src/SEGGER_RTT.c ****   }
 10983              		.loc 1 350 5 view .LVU4714
 350:Core/Src/SEGGER_RTT.c ****   }
 10984              		.loc 1 350 16 is_stmt 0 view .LVU4715
 10985              		.thumb
 10986              		.syntax unified
 10987 006c 5323     		movs	r3, #83
 10988 006e 2370     		strb	r3, [r4]
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 10989              		.loc 1 349 42 is_stmt 1 view .LVU4716
 10990              	.LVL1036:
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 10991              		.loc 1 349 17 view .LVU4717
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccSC4OZm.s 			page 297


 350:Core/Src/SEGGER_RTT.c ****   }
 10992              		.loc 1 350 5 view .LVU4718
 350:Core/Src/SEGGER_RTT.c ****   }
 10993              		.loc 1 350 16 is_stmt 0 view .LVU4719
 10994 0070 4722     		movs	r2, #71
 10995 0072 4523     		movs	r3, #69
 10996 0074 6370     		strb	r3, [r4, #1]
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 10997              		.loc 1 349 42 is_stmt 1 view .LVU4720
 10998              	.LVL1037:
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 10999              		.loc 1 349 17 view .LVU4721
 350:Core/Src/SEGGER_RTT.c ****   }
 11000              		.loc 1 350 5 view .LVU4722
 350:Core/Src/SEGGER_RTT.c ****   }
 11001              		.loc 1 350 16 is_stmt 0 view .LVU4723
 11002 0076 2021     		movs	r1, #32
 11003 0078 A270     		strb	r2, [r4, #2]
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 11004              		.loc 1 349 42 is_stmt 1 view .LVU4724
 11005              	.LVL1038:
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 11006              		.loc 1 349 17 view .LVU4725
 350:Core/Src/SEGGER_RTT.c ****   }
 11007              		.loc 1 350 5 view .LVU4726
 350:Core/Src/SEGGER_RTT.c ****   }
 11008              		.loc 1 350 16 is_stmt 0 view .LVU4727
 11009 007a E270     		strb	r2, [r4, #3]
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 11010              		.loc 1 349 42 is_stmt 1 view .LVU4728
 11011              	.LVL1039:
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 11012              		.loc 1 349 17 view .LVU4729
 350:Core/Src/SEGGER_RTT.c ****   }
 11013              		.loc 1 350 5 view .LVU4730
 350:Core/Src/SEGGER_RTT.c ****   }
 11014              		.loc 1 350 16 is_stmt 0 view .LVU4731
 11015 007c 2371     		strb	r3, [r4, #4]
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 11016              		.loc 1 349 42 is_stmt 1 view .LVU4732
 11017              	.LVL1040:
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 11018              		.loc 1 349 17 view .LVU4733
 350:Core/Src/SEGGER_RTT.c ****   }
 11019              		.loc 1 350 5 view .LVU4734
 350:Core/Src/SEGGER_RTT.c ****   }
 11020              		.loc 1 350 16 is_stmt 0 view .LVU4735
 11021 007e 5222     		movs	r2, #82
 11022 0080 5423     		movs	r3, #84
 11023 0082 6271     		strb	r2, [r4, #5]
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 11024              		.loc 1 349 42 is_stmt 1 view .LVU4736
 11025              	.LVL1041:
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 11026              		.loc 1 349 17 view .LVU4737
 350:Core/Src/SEGGER_RTT.c ****   }
 11027              		.loc 1 350 5 view .LVU4738
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccSC4OZm.s 			page 298


 350:Core/Src/SEGGER_RTT.c ****   }
 11028              		.loc 1 350 16 is_stmt 0 view .LVU4739
 11029 0084 A171     		strb	r1, [r4, #6]
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 11030              		.loc 1 349 42 is_stmt 1 view .LVU4740
 11031              	.LVL1042:
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 11032              		.loc 1 349 17 view .LVU4741
 350:Core/Src/SEGGER_RTT.c ****   }
 11033              		.loc 1 350 5 view .LVU4742
 350:Core/Src/SEGGER_RTT.c ****   }
 11034              		.loc 1 350 16 is_stmt 0 view .LVU4743
 11035 0086 E271     		strb	r2, [r4, #7]
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 11036              		.loc 1 349 42 is_stmt 1 view .LVU4744
 11037              	.LVL1043:
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 11038              		.loc 1 349 17 view .LVU4745
 350:Core/Src/SEGGER_RTT.c ****   }
 11039              		.loc 1 350 5 view .LVU4746
 350:Core/Src/SEGGER_RTT.c ****   }
 11040              		.loc 1 350 16 is_stmt 0 view .LVU4747
 11041 0088 2372     		strb	r3, [r4, #8]
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 11042              		.loc 1 349 42 is_stmt 1 view .LVU4748
 11043              	.LVL1044:
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 11044              		.loc 1 349 17 view .LVU4749
 350:Core/Src/SEGGER_RTT.c ****   }
 11045              		.loc 1 350 5 view .LVU4750
 350:Core/Src/SEGGER_RTT.c ****   }
 11046              		.loc 1 350 16 is_stmt 0 view .LVU4751
 11047 008a 6372     		strb	r3, [r4, #9]
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 11048              		.loc 1 349 42 is_stmt 1 view .LVU4752
 11049              	.LVL1045:
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 11050              		.loc 1 349 17 view .LVU4753
 350:Core/Src/SEGGER_RTT.c ****   }
 11051              		.loc 1 350 5 view .LVU4754
 350:Core/Src/SEGGER_RTT.c ****   }
 11052              		.loc 1 350 16 is_stmt 0 view .LVU4755
 11053 008c A672     		strb	r6, [r4, #10]
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 11054              		.loc 1 349 42 is_stmt 1 view .LVU4756
 11055              	.LVL1046:
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 11056              		.loc 1 349 17 view .LVU4757
 350:Core/Src/SEGGER_RTT.c ****   }
 11057              		.loc 1 350 5 view .LVU4758
 350:Core/Src/SEGGER_RTT.c ****   }
 11058              		.loc 1 350 16 is_stmt 0 view .LVU4759
 11059 008e E672     		strb	r6, [r4, #11]
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 11060              		.loc 1 349 42 is_stmt 1 view .LVU4760
 11061              	.LVL1047:
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccSC4OZm.s 			page 299


 11062              		.loc 1 349 17 view .LVU4761
 350:Core/Src/SEGGER_RTT.c ****   }
 11063              		.loc 1 350 5 view .LVU4762
 350:Core/Src/SEGGER_RTT.c ****   }
 11064              		.loc 1 350 16 is_stmt 0 view .LVU4763
 11065 0090 2673     		strb	r6, [r4, #12]
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 11066              		.loc 1 349 42 is_stmt 1 view .LVU4764
 11067              	.LVL1048:
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 11068              		.loc 1 349 17 view .LVU4765
 350:Core/Src/SEGGER_RTT.c ****   }
 11069              		.loc 1 350 5 view .LVU4766
 350:Core/Src/SEGGER_RTT.c ****   }
 11070              		.loc 1 350 16 is_stmt 0 view .LVU4767
 11071 0092 6673     		strb	r6, [r4, #13]
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 11072              		.loc 1 349 42 is_stmt 1 view .LVU4768
 11073              	.LVL1049:
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 11074              		.loc 1 349 17 view .LVU4769
 350:Core/Src/SEGGER_RTT.c ****   }
 11075              		.loc 1 350 5 view .LVU4770
 350:Core/Src/SEGGER_RTT.c ****   }
 11076              		.loc 1 350 16 is_stmt 0 view .LVU4771
 11077 0094 A673     		strb	r6, [r4, #14]
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 11078              		.loc 1 349 42 is_stmt 1 view .LVU4772
 11079              	.LVL1050:
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 11080              		.loc 1 349 17 view .LVU4773
 350:Core/Src/SEGGER_RTT.c ****   }
 11081              		.loc 1 350 5 view .LVU4774
 350:Core/Src/SEGGER_RTT.c ****   }
 11082              		.loc 1 350 16 is_stmt 0 view .LVU4775
 11083 0096 E673     		strb	r6, [r4, #15]
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 11084              		.loc 1 349 42 is_stmt 1 view .LVU4776
 11085              	.LVL1051:
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 11086              		.loc 1 349 17 view .LVU4777
 352:Core/Src/SEGGER_RTT.c **** }
 11087              		.loc 1 352 3 view .LVU4778
 11088              		.syntax unified
 11089              	@ 352 "Core/Src/SEGGER_RTT.c" 1
 11090 0098 BFF35F8F 		dmb
 11091              	
 11092              	@ 0 "" 2
 352:Core/Src/SEGGER_RTT.c **** }
 11093              		.loc 1 352 13 view .LVU4779
 353:Core/Src/SEGGER_RTT.c **** 
 11094              		.loc 1 353 1 is_stmt 0 view .LVU4780
 11095              		.thumb
 11096              		.syntax unified
 11097 009c B6E7     		b	.L412
 11098              	.LVL1052:
 11099              	.L414:
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccSC4OZm.s 			page 300


 353:Core/Src/SEGGER_RTT.c **** 
 11100              		.loc 1 353 1 view .LVU4781
 11101              	.LBE556:
 11102              	.LBE555:
 11103              	.LBE560:
1885:Core/Src/SEGGER_RTT.c ****   }
 11104              		.loc 1 1885 7 view .LVU4782
 11105 009e 4FF0FF30 		mov	r0, #-1
 11106              	.LVL1053:
1887:Core/Src/SEGGER_RTT.c **** }
 11107              		.loc 1 1887 3 is_stmt 1 view .LVU4783
 11108              		.loc 1 1888 1 is_stmt 0 view .LVU4784
 11109 00a2 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 11110              	.LVL1054:
 11111              	.L418:
 11112              		.loc 1 1888 1 view .LVU4785
 11113              		.align	2
 11114              	.L417:
 11115 00a4 00000000 		.word	.LANCHOR0
 11116 00a8 00000000 		.word	.LANCHOR1
 11117 00ac 00000000 		.word	.LC0
 11118 00b0 00000000 		.word	.LANCHOR2
 11119              		.cfi_endproc
 11120              	.LFE30:
 11122              		.section	.text.SEGGER_RTT_Init,"ax",%progbits
 11123              		.align	1
 11124              		.p2align 2,,3
 11125              		.global	SEGGER_RTT_Init
 11126              		.syntax unified
 11127              		.thumb
 11128              		.thumb_func
 11130              	SEGGER_RTT_Init:
 11131              	.LFB31:
1889:Core/Src/SEGGER_RTT.c **** 
1890:Core/Src/SEGGER_RTT.c **** /*********************************************************************
1891:Core/Src/SEGGER_RTT.c **** *
1892:Core/Src/SEGGER_RTT.c **** *       SEGGER_RTT_Init
1893:Core/Src/SEGGER_RTT.c **** *
1894:Core/Src/SEGGER_RTT.c **** *  Function description
1895:Core/Src/SEGGER_RTT.c **** *    Initializes the RTT Control Block.
1896:Core/Src/SEGGER_RTT.c **** *    Should be used in RAM targets, at start of the application.
1897:Core/Src/SEGGER_RTT.c **** *
1898:Core/Src/SEGGER_RTT.c **** */
1899:Core/Src/SEGGER_RTT.c **** void SEGGER_RTT_Init (void) {
 11132              		.loc 1 1899 29 is_stmt 1 view -0
 11133              		.cfi_startproc
 11134              		@ args = 0, pretend = 0, frame = 0
 11135              		@ frame_needed = 0, uses_anonymous_args = 0
1900:Core/Src/SEGGER_RTT.c ****   _DoInit();
 11136              		.loc 1 1900 3 view .LVU4787
 11137              	.LBB563:
 11138              	.LBI563:
 314:Core/Src/SEGGER_RTT.c ****   volatile SEGGER_RTT_CB* p;   // Volatile to make sure that compiler cannot change the order of ac
 11139              		.loc 1 314 13 view .LVU4788
 11140              	.LBB564:
 315:Core/Src/SEGGER_RTT.c ****   static const char _aInitStr[] = "\0\0\0\0\0\0TTR REGGES";  // Init complete ID string to make sur
 11141              		.loc 1 315 3 view .LVU4789
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccSC4OZm.s 			page 301


 316:Core/Src/SEGGER_RTT.c ****   unsigned i;
 11142              		.loc 1 316 3 view .LVU4790
 317:Core/Src/SEGGER_RTT.c ****   //
 11143              		.loc 1 317 3 view .LVU4791
 321:Core/Src/SEGGER_RTT.c ****   memset((SEGGER_RTT_CB*)p, 0, sizeof(_SEGGER_RTT));         // Make sure that the RTT CB is always
 11144              		.loc 1 321 3 view .LVU4792
 11145              	.LVL1055:
 322:Core/Src/SEGGER_RTT.c ****   p->MaxNumUpBuffers    = SEGGER_RTT_MAX_NUM_UP_BUFFERS;
 11146              		.loc 1 322 3 view .LVU4793
 11147              	.LBE564:
 11148              	.LBE563:
1899:Core/Src/SEGGER_RTT.c ****   _DoInit();
 11149              		.loc 1 1899 29 is_stmt 0 view .LVU4794
 11150 0000 10B5     		push	{r4, lr}
 11151              		.cfi_def_cfa_offset 8
 11152              		.cfi_offset 4, -8
 11153              		.cfi_offset 14, -4
 11154              	.LBB566:
 11155              	.LBB565:
 322:Core/Src/SEGGER_RTT.c ****   p->MaxNumUpBuffers    = SEGGER_RTT_MAX_NUM_UP_BUFFERS;
 11156              		.loc 1 322 3 view .LVU4795
 11157 0002 1E4C     		ldr	r4, .L421
 11158 0004 7822     		movs	r2, #120
 11159 0006 0021     		movs	r1, #0
 11160 0008 04F13000 		add	r0, r4, #48
 11161 000c FFF7FEFF 		bl	memset
 11162              	.LVL1056:
 323:Core/Src/SEGGER_RTT.c ****   p->MaxNumDownBuffers  = SEGGER_RTT_MAX_NUM_DOWN_BUFFERS;
 11163              		.loc 1 323 3 is_stmt 1 view .LVU4796
 323:Core/Src/SEGGER_RTT.c ****   p->MaxNumDownBuffers  = SEGGER_RTT_MAX_NUM_DOWN_BUFFERS;
 11164              		.loc 1 323 25 is_stmt 0 view .LVU4797
 11165 0010 0321     		movs	r1, #3
 11166 0012 2161     		str	r1, [r4, #16]
 324:Core/Src/SEGGER_RTT.c ****   //
 11167              		.loc 1 324 3 is_stmt 1 view .LVU4798
 328:Core/Src/SEGGER_RTT.c ****   p->aUp[0].pBuffer       = _acUpBuffer;
 11168              		.loc 1 328 27 is_stmt 0 view .LVU4799
 11169 0014 1A4A     		ldr	r2, .L421+4
 324:Core/Src/SEGGER_RTT.c ****   //
 11170              		.loc 1 324 25 view .LVU4800
 11171 0016 6161     		str	r1, [r4, #20]
 328:Core/Src/SEGGER_RTT.c ****   p->aUp[0].pBuffer       = _acUpBuffer;
 11172              		.loc 1 328 3 is_stmt 1 view .LVU4801
 329:Core/Src/SEGGER_RTT.c ****   p->aUp[0].SizeOfBuffer  = BUFFER_SIZE_UP;
 11173              		.loc 1 329 27 is_stmt 0 view .LVU4802
 11174 0018 1A48     		ldr	r0, .L421+8
 328:Core/Src/SEGGER_RTT.c ****   p->aUp[0].pBuffer       = _acUpBuffer;
 11175              		.loc 1 328 27 view .LVU4803
 11176 001a A261     		str	r2, [r4, #24]
 329:Core/Src/SEGGER_RTT.c ****   p->aUp[0].SizeOfBuffer  = BUFFER_SIZE_UP;
 11177              		.loc 1 329 3 is_stmt 1 view .LVU4804
 330:Core/Src/SEGGER_RTT.c ****   p->aUp[0].RdOff         = 0u;
 11178              		.loc 1 330 27 is_stmt 0 view .LVU4805
 11179 001c 4FF48061 		mov	r1, #1024
 329:Core/Src/SEGGER_RTT.c ****   p->aUp[0].SizeOfBuffer  = BUFFER_SIZE_UP;
 11180              		.loc 1 329 27 view .LVU4806
 11181 0020 E061     		str	r0, [r4, #28]
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccSC4OZm.s 			page 302


 330:Core/Src/SEGGER_RTT.c ****   p->aUp[0].RdOff         = 0u;
 11182              		.loc 1 330 3 is_stmt 1 view .LVU4807
 331:Core/Src/SEGGER_RTT.c ****   p->aUp[0].WrOff         = 0u;
 11183              		.loc 1 331 27 is_stmt 0 view .LVU4808
 11184 0022 0023     		movs	r3, #0
 330:Core/Src/SEGGER_RTT.c ****   p->aUp[0].RdOff         = 0u;
 11185              		.loc 1 330 27 view .LVU4809
 11186 0024 2162     		str	r1, [r4, #32]
 331:Core/Src/SEGGER_RTT.c ****   p->aUp[0].WrOff         = 0u;
 11187              		.loc 1 331 3 is_stmt 1 view .LVU4810
 338:Core/Src/SEGGER_RTT.c ****   p->aDown[0].SizeOfBuffer  = BUFFER_SIZE_DOWN;
 11188              		.loc 1 338 29 is_stmt 0 view .LVU4811
 11189 0026 1848     		ldr	r0, .L421+12
 331:Core/Src/SEGGER_RTT.c ****   p->aUp[0].WrOff         = 0u;
 11190              		.loc 1 331 27 view .LVU4812
 11191 0028 A362     		str	r3, [r4, #40]
 332:Core/Src/SEGGER_RTT.c ****   p->aUp[0].Flags         = SEGGER_RTT_MODE_DEFAULT;
 11192              		.loc 1 332 3 is_stmt 1 view .LVU4813
 339:Core/Src/SEGGER_RTT.c ****   p->aDown[0].RdOff         = 0u;
 11193              		.loc 1 339 29 is_stmt 0 view .LVU4814
 11194 002a 1021     		movs	r1, #16
 332:Core/Src/SEGGER_RTT.c ****   p->aUp[0].Flags         = SEGGER_RTT_MODE_DEFAULT;
 11195              		.loc 1 332 27 view .LVU4815
 11196 002c 6362     		str	r3, [r4, #36]
 333:Core/Src/SEGGER_RTT.c ****   //
 11197              		.loc 1 333 3 is_stmt 1 view .LVU4816
 333:Core/Src/SEGGER_RTT.c ****   //
 11198              		.loc 1 333 27 is_stmt 0 view .LVU4817
 11199 002e E362     		str	r3, [r4, #44]
 337:Core/Src/SEGGER_RTT.c ****   p->aDown[0].pBuffer       = _acDownBuffer;
 11200              		.loc 1 337 3 is_stmt 1 view .LVU4818
 337:Core/Src/SEGGER_RTT.c ****   p->aDown[0].pBuffer       = _acDownBuffer;
 11201              		.loc 1 337 29 is_stmt 0 view .LVU4819
 11202 0030 2266     		str	r2, [r4, #96]
 338:Core/Src/SEGGER_RTT.c ****   p->aDown[0].SizeOfBuffer  = BUFFER_SIZE_DOWN;
 11203              		.loc 1 338 3 is_stmt 1 view .LVU4820
 338:Core/Src/SEGGER_RTT.c ****   p->aDown[0].SizeOfBuffer  = BUFFER_SIZE_DOWN;
 11204              		.loc 1 338 29 is_stmt 0 view .LVU4821
 11205 0032 6066     		str	r0, [r4, #100]
 339:Core/Src/SEGGER_RTT.c ****   p->aDown[0].RdOff         = 0u;
 11206              		.loc 1 339 3 is_stmt 1 view .LVU4822
 339:Core/Src/SEGGER_RTT.c ****   p->aDown[0].RdOff         = 0u;
 11207              		.loc 1 339 29 is_stmt 0 view .LVU4823
 11208 0034 A166     		str	r1, [r4, #104]
 340:Core/Src/SEGGER_RTT.c ****   p->aDown[0].WrOff         = 0u;
 11209              		.loc 1 340 3 is_stmt 1 view .LVU4824
 340:Core/Src/SEGGER_RTT.c ****   p->aDown[0].WrOff         = 0u;
 11210              		.loc 1 340 29 is_stmt 0 view .LVU4825
 11211 0036 2367     		str	r3, [r4, #112]
 341:Core/Src/SEGGER_RTT.c ****   p->aDown[0].Flags         = SEGGER_RTT_MODE_DEFAULT;
 11212              		.loc 1 341 3 is_stmt 1 view .LVU4826
 341:Core/Src/SEGGER_RTT.c ****   p->aDown[0].Flags         = SEGGER_RTT_MODE_DEFAULT;
 11213              		.loc 1 341 29 is_stmt 0 view .LVU4827
 11214 0038 E366     		str	r3, [r4, #108]
 342:Core/Src/SEGGER_RTT.c ****   //
 11215              		.loc 1 342 3 is_stmt 1 view .LVU4828
 342:Core/Src/SEGGER_RTT.c ****   //
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccSC4OZm.s 			page 303


 11216              		.loc 1 342 29 is_stmt 0 view .LVU4829
 11217 003a 6367     		str	r3, [r4, #116]
 348:Core/Src/SEGGER_RTT.c ****   for (i = 0; i < sizeof(_aInitStr) - 1; ++i) {
 11218              		.loc 1 348 3 is_stmt 1 view .LVU4830
 11219              		.syntax unified
 11220              	@ 348 "Core/Src/SEGGER_RTT.c" 1
 11221 003c BFF35F8F 		dmb
 11222              	
 11223              	@ 0 "" 2
 348:Core/Src/SEGGER_RTT.c ****   for (i = 0; i < sizeof(_aInitStr) - 1; ++i) {
 11224              		.loc 1 348 13 view .LVU4831
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 11225              		.loc 1 349 3 view .LVU4832
 11226              	.LVL1057:
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 11227              		.loc 1 349 17 view .LVU4833
 350:Core/Src/SEGGER_RTT.c ****   }
 11228              		.loc 1 350 5 view .LVU4834
 350:Core/Src/SEGGER_RTT.c ****   }
 11229              		.loc 1 350 16 is_stmt 0 view .LVU4835
 11230              		.thumb
 11231              		.syntax unified
 11232 0040 4520     		movs	r0, #69
 11233 0042 4722     		movs	r2, #71
 11234 0044 4FF0530C 		mov	ip, #83
 11235 0048 84F800C0 		strb	ip, [r4]
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 11236              		.loc 1 349 42 is_stmt 1 view .LVU4836
 11237              	.LVL1058:
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 11238              		.loc 1 349 17 view .LVU4837
 350:Core/Src/SEGGER_RTT.c ****   }
 11239              		.loc 1 350 5 view .LVU4838
 350:Core/Src/SEGGER_RTT.c ****   }
 11240              		.loc 1 350 16 is_stmt 0 view .LVU4839
 11241 004c 5221     		movs	r1, #82
 11242 004e 6070     		strb	r0, [r4, #1]
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 11243              		.loc 1 349 42 is_stmt 1 view .LVU4840
 11244              	.LVL1059:
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 11245              		.loc 1 349 17 view .LVU4841
 350:Core/Src/SEGGER_RTT.c ****   }
 11246              		.loc 1 350 5 view .LVU4842
 350:Core/Src/SEGGER_RTT.c ****   }
 11247              		.loc 1 350 16 is_stmt 0 view .LVU4843
 11248 0050 4FF0200C 		mov	ip, #32
 11249 0054 A270     		strb	r2, [r4, #2]
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 11250              		.loc 1 349 42 is_stmt 1 view .LVU4844
 11251              	.LVL1060:
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 11252              		.loc 1 349 17 view .LVU4845
 350:Core/Src/SEGGER_RTT.c ****   }
 11253              		.loc 1 350 5 view .LVU4846
 350:Core/Src/SEGGER_RTT.c ****   }
 11254              		.loc 1 350 16 is_stmt 0 view .LVU4847
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccSC4OZm.s 			page 304


 11255 0056 E270     		strb	r2, [r4, #3]
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 11256              		.loc 1 349 42 is_stmt 1 view .LVU4848
 11257              	.LVL1061:
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 11258              		.loc 1 349 17 view .LVU4849
 350:Core/Src/SEGGER_RTT.c ****   }
 11259              		.loc 1 350 5 view .LVU4850
 350:Core/Src/SEGGER_RTT.c ****   }
 11260              		.loc 1 350 16 is_stmt 0 view .LVU4851
 11261 0058 5422     		movs	r2, #84
 11262 005a 2071     		strb	r0, [r4, #4]
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 11263              		.loc 1 349 42 is_stmt 1 view .LVU4852
 11264              	.LVL1062:
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 11265              		.loc 1 349 17 view .LVU4853
 350:Core/Src/SEGGER_RTT.c ****   }
 11266              		.loc 1 350 5 view .LVU4854
 350:Core/Src/SEGGER_RTT.c ****   }
 11267              		.loc 1 350 16 is_stmt 0 view .LVU4855
 11268 005c 6171     		strb	r1, [r4, #5]
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 11269              		.loc 1 349 42 is_stmt 1 view .LVU4856
 11270              	.LVL1063:
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 11271              		.loc 1 349 17 view .LVU4857
 350:Core/Src/SEGGER_RTT.c ****   }
 11272              		.loc 1 350 5 view .LVU4858
 350:Core/Src/SEGGER_RTT.c ****   }
 11273              		.loc 1 350 16 is_stmt 0 view .LVU4859
 11274 005e 84F806C0 		strb	ip, [r4, #6]
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 11275              		.loc 1 349 42 is_stmt 1 view .LVU4860
 11276              	.LVL1064:
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 11277              		.loc 1 349 17 view .LVU4861
 350:Core/Src/SEGGER_RTT.c ****   }
 11278              		.loc 1 350 5 view .LVU4862
 350:Core/Src/SEGGER_RTT.c ****   }
 11279              		.loc 1 350 16 is_stmt 0 view .LVU4863
 11280 0062 E171     		strb	r1, [r4, #7]
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 11281              		.loc 1 349 42 is_stmt 1 view .LVU4864
 11282              	.LVL1065:
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 11283              		.loc 1 349 17 view .LVU4865
 350:Core/Src/SEGGER_RTT.c ****   }
 11284              		.loc 1 350 5 view .LVU4866
 350:Core/Src/SEGGER_RTT.c ****   }
 11285              		.loc 1 350 16 is_stmt 0 view .LVU4867
 11286 0064 2272     		strb	r2, [r4, #8]
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 11287              		.loc 1 349 42 is_stmt 1 view .LVU4868
 11288              	.LVL1066:
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 11289              		.loc 1 349 17 view .LVU4869
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccSC4OZm.s 			page 305


 350:Core/Src/SEGGER_RTT.c ****   }
 11290              		.loc 1 350 5 view .LVU4870
 350:Core/Src/SEGGER_RTT.c ****   }
 11291              		.loc 1 350 16 is_stmt 0 view .LVU4871
 11292 0066 6272     		strb	r2, [r4, #9]
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 11293              		.loc 1 349 42 is_stmt 1 view .LVU4872
 11294              	.LVL1067:
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 11295              		.loc 1 349 17 view .LVU4873
 350:Core/Src/SEGGER_RTT.c ****   }
 11296              		.loc 1 350 5 view .LVU4874
 350:Core/Src/SEGGER_RTT.c ****   }
 11297              		.loc 1 350 16 is_stmt 0 view .LVU4875
 11298 0068 A372     		strb	r3, [r4, #10]
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 11299              		.loc 1 349 42 is_stmt 1 view .LVU4876
 11300              	.LVL1068:
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 11301              		.loc 1 349 17 view .LVU4877
 350:Core/Src/SEGGER_RTT.c ****   }
 11302              		.loc 1 350 5 view .LVU4878
 350:Core/Src/SEGGER_RTT.c ****   }
 11303              		.loc 1 350 16 is_stmt 0 view .LVU4879
 11304 006a E372     		strb	r3, [r4, #11]
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 11305              		.loc 1 349 42 is_stmt 1 view .LVU4880
 11306              	.LVL1069:
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 11307              		.loc 1 349 17 view .LVU4881
 350:Core/Src/SEGGER_RTT.c ****   }
 11308              		.loc 1 350 5 view .LVU4882
 350:Core/Src/SEGGER_RTT.c ****   }
 11309              		.loc 1 350 16 is_stmt 0 view .LVU4883
 11310 006c 2373     		strb	r3, [r4, #12]
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 11311              		.loc 1 349 42 is_stmt 1 view .LVU4884
 11312              	.LVL1070:
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 11313              		.loc 1 349 17 view .LVU4885
 350:Core/Src/SEGGER_RTT.c ****   }
 11314              		.loc 1 350 5 view .LVU4886
 350:Core/Src/SEGGER_RTT.c ****   }
 11315              		.loc 1 350 16 is_stmt 0 view .LVU4887
 11316 006e 6373     		strb	r3, [r4, #13]
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 11317              		.loc 1 349 42 is_stmt 1 view .LVU4888
 11318              	.LVL1071:
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 11319              		.loc 1 349 17 view .LVU4889
 350:Core/Src/SEGGER_RTT.c ****   }
 11320              		.loc 1 350 5 view .LVU4890
 350:Core/Src/SEGGER_RTT.c ****   }
 11321              		.loc 1 350 16 is_stmt 0 view .LVU4891
 11322 0070 A373     		strb	r3, [r4, #14]
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 11323              		.loc 1 349 42 is_stmt 1 view .LVU4892
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccSC4OZm.s 			page 306


 11324              	.LVL1072:
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 11325              		.loc 1 349 17 view .LVU4893
 350:Core/Src/SEGGER_RTT.c ****   }
 11326              		.loc 1 350 5 view .LVU4894
 350:Core/Src/SEGGER_RTT.c ****   }
 11327              		.loc 1 350 16 is_stmt 0 view .LVU4895
 11328 0072 E373     		strb	r3, [r4, #15]
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 11329              		.loc 1 349 42 is_stmt 1 view .LVU4896
 11330              	.LVL1073:
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 11331              		.loc 1 349 17 view .LVU4897
 352:Core/Src/SEGGER_RTT.c **** }
 11332              		.loc 1 352 3 view .LVU4898
 11333              		.syntax unified
 11334              	@ 352 "Core/Src/SEGGER_RTT.c" 1
 11335 0074 BFF35F8F 		dmb
 11336              	
 11337              	@ 0 "" 2
 352:Core/Src/SEGGER_RTT.c **** }
 11338              		.loc 1 352 13 view .LVU4899
 11339              	.LVL1074:
 352:Core/Src/SEGGER_RTT.c **** }
 11340              		.loc 1 352 13 is_stmt 0 view .LVU4900
 11341              		.thumb
 11342              		.syntax unified
 11343              	.LBE565:
 11344              	.LBE566:
1901:Core/Src/SEGGER_RTT.c **** }
 11345              		.loc 1 1901 1 view .LVU4901
 11346 0078 10BD     		pop	{r4, pc}
 11347              	.L422:
 11348 007a 00BF     		.align	2
 11349              	.L421:
 11350 007c 00000000 		.word	.LANCHOR0
 11351 0080 00000000 		.word	.LC0
 11352 0084 00000000 		.word	.LANCHOR1
 11353 0088 00000000 		.word	.LANCHOR2
 11354              		.cfi_endproc
 11355              	.LFE31:
 11357              		.section	.text.SEGGER_RTT_SetTerminal,"ax",%progbits
 11358              		.align	1
 11359              		.p2align 2,,3
 11360              		.global	SEGGER_RTT_SetTerminal
 11361              		.syntax unified
 11362              		.thumb
 11363              		.thumb_func
 11365              	SEGGER_RTT_SetTerminal:
 11366              	.LVL1075:
 11367              	.LFB32:
1902:Core/Src/SEGGER_RTT.c **** 
1903:Core/Src/SEGGER_RTT.c **** /*********************************************************************
1904:Core/Src/SEGGER_RTT.c **** *
1905:Core/Src/SEGGER_RTT.c **** *       SEGGER_RTT_SetTerminal
1906:Core/Src/SEGGER_RTT.c **** *
1907:Core/Src/SEGGER_RTT.c **** *  Function description
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccSC4OZm.s 			page 307


1908:Core/Src/SEGGER_RTT.c **** *    Sets the terminal to be used for output on channel 0.
1909:Core/Src/SEGGER_RTT.c **** *
1910:Core/Src/SEGGER_RTT.c **** *  Parameters
1911:Core/Src/SEGGER_RTT.c **** *    TerminalId  Index of the terminal.
1912:Core/Src/SEGGER_RTT.c **** *
1913:Core/Src/SEGGER_RTT.c **** *  Return value
1914:Core/Src/SEGGER_RTT.c **** *    >= 0  O.K.
1915:Core/Src/SEGGER_RTT.c **** *     < 0  Error (e.g. if RTT is configured for non-blocking mode and there was no space in the buf
1916:Core/Src/SEGGER_RTT.c **** *
1917:Core/Src/SEGGER_RTT.c **** *  Notes
1918:Core/Src/SEGGER_RTT.c **** *    (1) Buffer 0 is always reserved for terminal I/O, so we can use index 0 here, fixed
1919:Core/Src/SEGGER_RTT.c **** */
1920:Core/Src/SEGGER_RTT.c **** int SEGGER_RTT_SetTerminal (unsigned char TerminalId) {
 11368              		.loc 1 1920 55 is_stmt 1 view -0
 11369              		.cfi_startproc
 11370              		@ args = 0, pretend = 0, frame = 8
 11371              		@ frame_needed = 0, uses_anonymous_args = 0
1921:Core/Src/SEGGER_RTT.c ****   unsigned char         ac[2];
 11372              		.loc 1 1921 3 view .LVU4903
1922:Core/Src/SEGGER_RTT.c ****   SEGGER_RTT_BUFFER_UP* pRing;
 11373              		.loc 1 1922 3 view .LVU4904
1923:Core/Src/SEGGER_RTT.c ****   unsigned Avail;
 11374              		.loc 1 1923 3 view .LVU4905
1924:Core/Src/SEGGER_RTT.c ****   int r;
 11375              		.loc 1 1924 3 view .LVU4906
 11376              	.LBB577:
1925:Core/Src/SEGGER_RTT.c **** 
1926:Core/Src/SEGGER_RTT.c ****   INIT();
 11377              		.loc 1 1926 3 view .LVU4907
 11378              		.loc 1 1926 3 view .LVU4908
 11379              		.loc 1 1926 3 view .LVU4909
 11380              		.loc 1 1926 3 view .LVU4910
 11381              	.LBE577:
1920:Core/Src/SEGGER_RTT.c ****   unsigned char         ac[2];
 11382              		.loc 1 1920 55 is_stmt 0 view .LVU4911
 11383 0000 2DE9F047 		push	{r4, r5, r6, r7, r8, r9, r10, lr}
 11384              		.cfi_def_cfa_offset 32
 11385              		.cfi_offset 4, -32
 11386              		.cfi_offset 5, -28
 11387              		.cfi_offset 6, -24
 11388              		.cfi_offset 7, -20
 11389              		.cfi_offset 8, -16
 11390              		.cfi_offset 9, -12
 11391              		.cfi_offset 10, -8
 11392              		.cfi_offset 14, -4
 11393              	.LBB580:
 11394              		.loc 1 1926 3 view .LVU4912
 11395 0004 624C     		ldr	r4, .L447
 11396 0006 2378     		ldrb	r3, [r4]	@ zero_extendqisi2
 11397              	.LBE580:
1920:Core/Src/SEGGER_RTT.c ****   unsigned char         ac[2];
 11398              		.loc 1 1920 55 view .LVU4913
 11399 0008 82B0     		sub	sp, sp, #8
 11400              		.cfi_def_cfa_offset 40
1920:Core/Src/SEGGER_RTT.c ****   unsigned char         ac[2];
 11401              		.loc 1 1920 55 view .LVU4914
 11402 000a 0546     		mov	r5, r0
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccSC4OZm.s 			page 308


 11403              	.LBB581:
 11404              		.loc 1 1926 3 view .LVU4915
 11405 000c 002B     		cmp	r3, #0
 11406 000e 38D0     		beq	.L443
 11407              	.LVL1076:
 11408              	.L424:
 11409              		.loc 1 1926 3 is_stmt 1 discriminator 3 view .LVU4916
 11410              	.LBE581:
 11411              		.loc 1 1926 9 discriminator 3 view .LVU4917
1927:Core/Src/SEGGER_RTT.c ****   r = 0;
 11412              		.loc 1 1927 3 discriminator 3 view .LVU4918
1928:Core/Src/SEGGER_RTT.c ****   ac[0] = 0xFFu;
 11413              		.loc 1 1928 3 discriminator 3 view .LVU4919
 11414              		.loc 1 1928 9 is_stmt 0 discriminator 3 view .LVU4920
 11415 0010 FF23     		movs	r3, #255
1929:Core/Src/SEGGER_RTT.c ****   if (TerminalId < sizeof(_aTerminalId)) { // We only support a certain number of channels
 11416              		.loc 1 1929 6 discriminator 3 view .LVU4921
 11417 0012 0F2D     		cmp	r5, #15
1928:Core/Src/SEGGER_RTT.c ****   ac[0] = 0xFFu;
 11418              		.loc 1 1928 9 discriminator 3 view .LVU4922
 11419 0014 8DF80430 		strb	r3, [sp, #4]
 11420              		.loc 1 1929 3 is_stmt 1 discriminator 3 view .LVU4923
 11421              		.loc 1 1929 6 is_stmt 0 discriminator 3 view .LVU4924
 11422 0018 00F2B680 		bhi	.L436
1930:Core/Src/SEGGER_RTT.c ****     ac[1] = _aTerminalId[TerminalId];
 11423              		.loc 1 1930 5 is_stmt 1 view .LVU4925
 11424              		.loc 1 1930 25 is_stmt 0 view .LVU4926
 11425 001c 5D4B     		ldr	r3, .L447+4
 11426              		.loc 1 1930 11 view .LVU4927
 11427 001e 5B5D     		ldrb	r3, [r3, r5]	@ zero_extendqisi2
 11428 0020 8DF80530 		strb	r3, [sp, #5]
1931:Core/Src/SEGGER_RTT.c ****     pRing = (SEGGER_RTT_BUFFER_UP*)((char*)&_SEGGER_RTT.aUp[0] + SEGGER_RTT_UNCACHED_OFF);  // Acce
 11429              		.loc 1 1931 5 is_stmt 1 view .LVU4928
 11430              	.LVL1077:
 11431              	.LBB582:
1932:Core/Src/SEGGER_RTT.c ****     SEGGER_RTT_LOCK();                     // Lock to make sure that no other task is writing into 
 11432              		.loc 1 1932 5 view .LVU4929
 11433              		.loc 1 1932 5 view .LVU4930
 11434              		.syntax unified
 11435              	@ 1932 "Core/Src/SEGGER_RTT.c" 1
 11436 0024 EFF31187 		mrs   r7, basepri  
 11437 0028 4FF02001 		mov   r1, #32       
 11438 002c 81F31188 		msr   basepri, r1  
 11439              		
 11440              	@ 0 "" 2
 11441              	.LVL1078:
 11442              		.loc 1 1932 22 view .LVU4931
1933:Core/Src/SEGGER_RTT.c ****     if ((pRing->Flags & SEGGER_RTT_MODE_MASK) == SEGGER_RTT_MODE_BLOCK_IF_FIFO_FULL) {
 11443              		.loc 1 1933 5 view .LVU4932
 11444              		.loc 1 1933 23 is_stmt 0 view .LVU4933
 11445              		.thumb
 11446              		.syntax unified
 11447 0030 E06A     		ldr	r0, [r4, #44]
 11448 0032 00F00309 		and	r9, r0, #3
 11449              		.loc 1 1933 8 view .LVU4934
 11450 0036 B9F1020F 		cmp	r9, #2
 11451 003a 6ED0     		beq	.L444
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccSC4OZm.s 			page 309


1934:Core/Src/SEGGER_RTT.c ****       _ActiveTerminal = TerminalId;
1935:Core/Src/SEGGER_RTT.c ****       _WriteBlocking(pRing, (const char*)ac, 2u);
1936:Core/Src/SEGGER_RTT.c ****     } else {                                                                            // Skipping
1937:Core/Src/SEGGER_RTT.c ****       Avail = _GetAvailWriteSpace(pRing);
 11452              		.loc 1 1937 7 is_stmt 1 view .LVU4935
 11453              	.LVL1079:
 11454              	.LBB583:
 11455              	.LBI583:
 526:Core/Src/SEGGER_RTT.c ****   unsigned RdOff;
 11456              		.loc 1 526 17 view .LVU4936
 11457              	.LBB584:
 527:Core/Src/SEGGER_RTT.c ****   unsigned WrOff;
 11458              		.loc 1 527 3 view .LVU4937
 528:Core/Src/SEGGER_RTT.c ****   unsigned r;
 11459              		.loc 1 528 3 view .LVU4938
 529:Core/Src/SEGGER_RTT.c ****   //
 11460              		.loc 1 529 3 view .LVU4939
 534:Core/Src/SEGGER_RTT.c ****   WrOff = pRing->WrOff;
 11461              		.loc 1 534 3 view .LVU4940
 534:Core/Src/SEGGER_RTT.c ****   WrOff = pRing->WrOff;
 11462              		.loc 1 534 9 is_stmt 0 view .LVU4941
 11463 003c A36A     		ldr	r3, [r4, #40]
 11464              	.LVL1080:
 535:Core/Src/SEGGER_RTT.c ****   if (RdOff <= WrOff) {
 11465              		.loc 1 535 3 is_stmt 1 view .LVU4942
 535:Core/Src/SEGGER_RTT.c ****   if (RdOff <= WrOff) {
 11466              		.loc 1 535 9 is_stmt 0 view .LVU4943
 11467 003e 666A     		ldr	r6, [r4, #36]
 11468              	.LVL1081:
 536:Core/Src/SEGGER_RTT.c ****     r = pRing->SizeOfBuffer - 1u - WrOff + RdOff;
 11469              		.loc 1 536 3 is_stmt 1 view .LVU4944
 536:Core/Src/SEGGER_RTT.c ****     r = pRing->SizeOfBuffer - 1u - WrOff + RdOff;
 11470              		.loc 1 536 6 is_stmt 0 view .LVU4945
 11471 0040 B342     		cmp	r3, r6
 537:Core/Src/SEGGER_RTT.c ****   } else {
 11472              		.loc 1 537 5 is_stmt 1 view .LVU4946
 537:Core/Src/SEGGER_RTT.c ****   } else {
 11473              		.loc 1 537 7 is_stmt 0 view .LVU4947
 11474 0042 9CBF     		itt	ls
 11475 0044 226A     		ldrls	r2, [r4, #32]
 11476 0046 9B18     		addls	r3, r3, r2
 11477              	.LVL1082:
 539:Core/Src/SEGGER_RTT.c ****   }
 11478              		.loc 1 539 5 is_stmt 1 view .LVU4948
 539:Core/Src/SEGGER_RTT.c ****   }
 11479              		.loc 1 539 7 is_stmt 0 view .LVU4949
 11480 0048 013B     		subs	r3, r3, #1
 11481 004a 9B1B     		subs	r3, r3, r6
 11482              	.LVL1083:
 541:Core/Src/SEGGER_RTT.c **** }
 11483              		.loc 1 541 3 is_stmt 1 view .LVU4950
 541:Core/Src/SEGGER_RTT.c **** }
 11484              		.loc 1 541 3 is_stmt 0 view .LVU4951
 11485              	.LBE584:
 11486              	.LBE583:
1938:Core/Src/SEGGER_RTT.c ****       if (Avail >= 2) {
 11487              		.loc 1 1938 7 is_stmt 1 view .LVU4952
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccSC4OZm.s 			page 310


 11488              		.loc 1 1938 10 is_stmt 0 view .LVU4953
 11489 004c 012B     		cmp	r3, #1
 11490 004e 06D8     		bhi	.L445
1939:Core/Src/SEGGER_RTT.c ****         _ActiveTerminal = TerminalId;    // Only change active terminal in case of success
1940:Core/Src/SEGGER_RTT.c ****         _WriteNoCheck(pRing, (const char*)ac, 2u);
1941:Core/Src/SEGGER_RTT.c ****       } else {
1942:Core/Src/SEGGER_RTT.c ****         r = -1;
 11491              		.loc 1 1942 11 view .LVU4954
 11492 0050 4FF0FF30 		mov	r0, #-1
 11493              	.LVL1084:
 11494              	.L431:
1943:Core/Src/SEGGER_RTT.c ****       }
1944:Core/Src/SEGGER_RTT.c ****     }
1945:Core/Src/SEGGER_RTT.c ****     SEGGER_RTT_UNLOCK();
 11495              		.loc 1 1945 5 is_stmt 1 view .LVU4955
 11496              		.syntax unified
 11497              	@ 1945 "Core/Src/SEGGER_RTT.c" 1
 11498 0054 87F31188 		msr   basepri, r7  
 11499              		
 11500              	@ 0 "" 2
 11501              		.thumb
 11502              		.syntax unified
 11503              	.LBE582:
 11504              		.loc 1 1945 24 view .LVU4956
 11505              	.LVL1085:
 11506              	.L423:
1946:Core/Src/SEGGER_RTT.c ****   } else {
1947:Core/Src/SEGGER_RTT.c ****     r = -1;
1948:Core/Src/SEGGER_RTT.c ****   }
1949:Core/Src/SEGGER_RTT.c ****   return r;
1950:Core/Src/SEGGER_RTT.c **** }
 11507              		.loc 1 1950 1 is_stmt 0 view .LVU4957
 11508 0058 02B0     		add	sp, sp, #8
 11509              		.cfi_remember_state
 11510              		.cfi_def_cfa_offset 32
 11511              		@ sp needed
 11512 005a BDE8F087 		pop	{r4, r5, r6, r7, r8, r9, r10, pc}
 11513              	.LVL1086:
 11514              	.L445:
 11515              		.cfi_restore_state
 11516              	.LBB603:
1939:Core/Src/SEGGER_RTT.c ****         _WriteNoCheck(pRing, (const char*)ac, 2u);
 11517              		.loc 1 1939 9 is_stmt 1 view .LVU4958
1939:Core/Src/SEGGER_RTT.c ****         _WriteNoCheck(pRing, (const char*)ac, 2u);
 11518              		.loc 1 1939 25 is_stmt 0 view .LVU4959
 11519 005e 4E4B     		ldr	r3, .L447+8
 11520              	.LVL1087:
 11521              	.LBB587:
 11522              	.LBB588:
 443:Core/Src/SEGGER_RTT.c ****   if (Rem > NumBytes) {
 11523              		.loc 1 443 14 view .LVU4960
 11524 0060 D4F82080 		ldr	r8, [r4, #32]
 11525              	.LBE588:
 11526              	.LBE587:
1939:Core/Src/SEGGER_RTT.c ****         _WriteNoCheck(pRing, (const char*)ac, 2u);
 11527              		.loc 1 1939 25 view .LVU4961
 11528 0064 1D70     		strb	r5, [r3]
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccSC4OZm.s 			page 311


1940:Core/Src/SEGGER_RTT.c ****       } else {
 11529              		.loc 1 1940 9 is_stmt 1 view .LVU4962
 11530              	.LVL1088:
 11531              	.LBB593:
 11532              	.LBI587:
 436:Core/Src/SEGGER_RTT.c ****   unsigned NumBytesAtOnce;
 11533              		.loc 1 436 13 view .LVU4963
 11534              	.LBB589:
 437:Core/Src/SEGGER_RTT.c ****   unsigned WrOff;
 11535              		.loc 1 437 3 view .LVU4964
 438:Core/Src/SEGGER_RTT.c ****   unsigned Rem;
 11536              		.loc 1 438 3 view .LVU4965
 439:Core/Src/SEGGER_RTT.c ****   volatile char* pDst;
 11537              		.loc 1 439 3 view .LVU4966
 440:Core/Src/SEGGER_RTT.c **** 
 11538              		.loc 1 440 3 view .LVU4967
 442:Core/Src/SEGGER_RTT.c ****   Rem = pRing->SizeOfBuffer - WrOff;
 11539              		.loc 1 442 3 view .LVU4968
 443:Core/Src/SEGGER_RTT.c ****   if (Rem > NumBytes) {
 11540              		.loc 1 443 3 view .LVU4969
 443:Core/Src/SEGGER_RTT.c ****   if (Rem > NumBytes) {
 11541              		.loc 1 443 7 is_stmt 0 view .LVU4970
 11542 0066 A8EB0605 		sub	r5, r8, r6
 11543              	.LVL1089:
 444:Core/Src/SEGGER_RTT.c ****     //
 11544              		.loc 1 444 3 is_stmt 1 view .LVU4971
 444:Core/Src/SEGGER_RTT.c ****     //
 11545              		.loc 1 444 6 is_stmt 0 view .LVU4972
 11546 006a 022D     		cmp	r5, #2
 11547 006c 41D9     		bls	.L435
 448:Core/Src/SEGGER_RTT.c **** #if SEGGER_RTT_MEMCPY_USE_BYTELOOP
 11548              		.loc 1 448 5 is_stmt 1 view .LVU4973
 11549              	.LVL1090:
 457:Core/Src/SEGGER_RTT.c ****     RTT__DMB();                     // Force data write to be complete before writing the <WrOff>, 
 11550              		.loc 1 457 5 view .LVU4974
 11551 006e E369     		ldr	r3, [r4, #28]
 11552 0070 BDF80420 		ldrh	r2, [sp, #4]
 11553              	.LVL1091:
 457:Core/Src/SEGGER_RTT.c ****     RTT__DMB();                     // Force data write to be complete before writing the <WrOff>, 
 11554              		.loc 1 457 5 is_stmt 0 view .LVU4975
 11555 0074 9A53     		strh	r2, [r3, r6]	@ unaligned
 11556              	.LVL1092:
 458:Core/Src/SEGGER_RTT.c ****     pRing->WrOff = WrOff + NumBytes;
 11557              		.loc 1 458 5 is_stmt 1 view .LVU4976
 11558              		.syntax unified
 11559              	@ 458 "Core/Src/SEGGER_RTT.c" 1
 11560 0076 BFF35F8F 		dmb
 11561              	
 11562              	@ 0 "" 2
 458:Core/Src/SEGGER_RTT.c ****     pRing->WrOff = WrOff + NumBytes;
 11563              		.loc 1 458 15 view .LVU4977
 459:Core/Src/SEGGER_RTT.c **** #endif
 11564              		.loc 1 459 5 view .LVU4978
 459:Core/Src/SEGGER_RTT.c **** #endif
 11565              		.loc 1 459 26 is_stmt 0 view .LVU4979
 11566              		.thumb
 11567              		.syntax unified
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccSC4OZm.s 			page 312


 11568 007a 0236     		adds	r6, r6, #2
 11569              	.LVL1093:
 459:Core/Src/SEGGER_RTT.c **** #endif
 11570              		.loc 1 459 18 view .LVU4980
 11571 007c 6662     		str	r6, [r4, #36]
 11572              	.LVL1094:
 11573              	.L442:
 459:Core/Src/SEGGER_RTT.c **** #endif
 11574              		.loc 1 459 18 view .LVU4981
 11575              	.LBE589:
 11576              	.LBE593:
 11577              	.LBE603:
1927:Core/Src/SEGGER_RTT.c ****   ac[0] = 0xFFu;
 11578              		.loc 1 1927 5 view .LVU4982
 11579 007e 0020     		movs	r0, #0
 11580              	.LBB604:
 11581              	.LBB594:
 11582              	.LBB590:
 11583 0080 E8E7     		b	.L431
 11584              	.LVL1095:
 11585              	.L443:
1927:Core/Src/SEGGER_RTT.c ****   ac[0] = 0xFFu;
 11586              		.loc 1 1927 5 view .LVU4983
 11587 0082 03F0FF06 		and	r6, r3, #255
 11588              	.LBE590:
 11589              	.LBE594:
 11590              	.LBE604:
 11591              	.LBB605:
1926:Core/Src/SEGGER_RTT.c ****   r = 0;
 11592              		.loc 1 1926 3 is_stmt 1 view .LVU4984
 11593              	.LBB578:
 11594              	.LBI578:
 314:Core/Src/SEGGER_RTT.c ****   volatile SEGGER_RTT_CB* p;   // Volatile to make sure that compiler cannot change the order of ac
 11595              		.loc 1 314 13 view .LVU4985
 11596              	.LBB579:
 315:Core/Src/SEGGER_RTT.c ****   static const char _aInitStr[] = "\0\0\0\0\0\0TTR REGGES";  // Init complete ID string to make sur
 11597              		.loc 1 315 3 view .LVU4986
 316:Core/Src/SEGGER_RTT.c ****   unsigned i;
 11598              		.loc 1 316 3 view .LVU4987
 317:Core/Src/SEGGER_RTT.c ****   //
 11599              		.loc 1 317 3 view .LVU4988
 321:Core/Src/SEGGER_RTT.c ****   memset((SEGGER_RTT_CB*)p, 0, sizeof(_SEGGER_RTT));         // Make sure that the RTT CB is always
 11600              		.loc 1 321 3 view .LVU4989
 11601              	.LVL1096:
 322:Core/Src/SEGGER_RTT.c ****   p->MaxNumUpBuffers    = SEGGER_RTT_MAX_NUM_UP_BUFFERS;
 11602              		.loc 1 322 3 view .LVU4990
 11603 0086 7822     		movs	r2, #120
 11604 0088 3146     		mov	r1, r6
 11605 008a 04F13000 		add	r0, r4, #48
 11606              	.LVL1097:
 322:Core/Src/SEGGER_RTT.c ****   p->MaxNumUpBuffers    = SEGGER_RTT_MAX_NUM_UP_BUFFERS;
 11607              		.loc 1 322 3 is_stmt 0 view .LVU4991
 11608 008e FFF7FEFF 		bl	memset
 11609              	.LVL1098:
 323:Core/Src/SEGGER_RTT.c ****   p->MaxNumDownBuffers  = SEGGER_RTT_MAX_NUM_DOWN_BUFFERS;
 11610              		.loc 1 323 3 is_stmt 1 view .LVU4992
 323:Core/Src/SEGGER_RTT.c ****   p->MaxNumDownBuffers  = SEGGER_RTT_MAX_NUM_DOWN_BUFFERS;
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccSC4OZm.s 			page 313


 11611              		.loc 1 323 25 is_stmt 0 view .LVU4993
 11612 0092 0322     		movs	r2, #3
 11613 0094 2261     		str	r2, [r4, #16]
 324:Core/Src/SEGGER_RTT.c ****   //
 11614              		.loc 1 324 3 is_stmt 1 view .LVU4994
 328:Core/Src/SEGGER_RTT.c ****   p->aUp[0].pBuffer       = _acUpBuffer;
 11615              		.loc 1 328 27 is_stmt 0 view .LVU4995
 11616 0096 414B     		ldr	r3, .L447+12
 324:Core/Src/SEGGER_RTT.c ****   //
 11617              		.loc 1 324 25 view .LVU4996
 11618 0098 6261     		str	r2, [r4, #20]
 328:Core/Src/SEGGER_RTT.c ****   p->aUp[0].pBuffer       = _acUpBuffer;
 11619              		.loc 1 328 3 is_stmt 1 view .LVU4997
 329:Core/Src/SEGGER_RTT.c ****   p->aUp[0].SizeOfBuffer  = BUFFER_SIZE_UP;
 11620              		.loc 1 329 27 is_stmt 0 view .LVU4998
 11621 009a 414A     		ldr	r2, .L447+16
 328:Core/Src/SEGGER_RTT.c ****   p->aUp[0].pBuffer       = _acUpBuffer;
 11622              		.loc 1 328 27 view .LVU4999
 11623 009c A361     		str	r3, [r4, #24]
 329:Core/Src/SEGGER_RTT.c ****   p->aUp[0].SizeOfBuffer  = BUFFER_SIZE_UP;
 11624              		.loc 1 329 3 is_stmt 1 view .LVU5000
 329:Core/Src/SEGGER_RTT.c ****   p->aUp[0].SizeOfBuffer  = BUFFER_SIZE_UP;
 11625              		.loc 1 329 27 is_stmt 0 view .LVU5001
 11626 009e E261     		str	r2, [r4, #28]
 330:Core/Src/SEGGER_RTT.c ****   p->aUp[0].RdOff         = 0u;
 11627              		.loc 1 330 3 is_stmt 1 view .LVU5002
 330:Core/Src/SEGGER_RTT.c ****   p->aUp[0].RdOff         = 0u;
 11628              		.loc 1 330 27 is_stmt 0 view .LVU5003
 11629 00a0 4FF48062 		mov	r2, #1024
 11630 00a4 2262     		str	r2, [r4, #32]
 331:Core/Src/SEGGER_RTT.c ****   p->aUp[0].WrOff         = 0u;
 11631              		.loc 1 331 3 is_stmt 1 view .LVU5004
 331:Core/Src/SEGGER_RTT.c ****   p->aUp[0].WrOff         = 0u;
 11632              		.loc 1 331 27 is_stmt 0 view .LVU5005
 11633 00a6 A662     		str	r6, [r4, #40]
 332:Core/Src/SEGGER_RTT.c ****   p->aUp[0].Flags         = SEGGER_RTT_MODE_DEFAULT;
 11634              		.loc 1 332 3 is_stmt 1 view .LVU5006
 338:Core/Src/SEGGER_RTT.c ****   p->aDown[0].SizeOfBuffer  = BUFFER_SIZE_DOWN;
 11635              		.loc 1 338 29 is_stmt 0 view .LVU5007
 11636 00a8 3E4A     		ldr	r2, .L447+20
 332:Core/Src/SEGGER_RTT.c ****   p->aUp[0].Flags         = SEGGER_RTT_MODE_DEFAULT;
 11637              		.loc 1 332 27 view .LVU5008
 11638 00aa 6662     		str	r6, [r4, #36]
 333:Core/Src/SEGGER_RTT.c ****   //
 11639              		.loc 1 333 3 is_stmt 1 view .LVU5009
 333:Core/Src/SEGGER_RTT.c ****   //
 11640              		.loc 1 333 27 is_stmt 0 view .LVU5010
 11641 00ac E662     		str	r6, [r4, #44]
 337:Core/Src/SEGGER_RTT.c ****   p->aDown[0].pBuffer       = _acDownBuffer;
 11642              		.loc 1 337 3 is_stmt 1 view .LVU5011
 337:Core/Src/SEGGER_RTT.c ****   p->aDown[0].pBuffer       = _acDownBuffer;
 11643              		.loc 1 337 29 is_stmt 0 view .LVU5012
 11644 00ae 2366     		str	r3, [r4, #96]
 338:Core/Src/SEGGER_RTT.c ****   p->aDown[0].SizeOfBuffer  = BUFFER_SIZE_DOWN;
 11645              		.loc 1 338 3 is_stmt 1 view .LVU5013
 339:Core/Src/SEGGER_RTT.c ****   p->aDown[0].RdOff         = 0u;
 11646              		.loc 1 339 29 is_stmt 0 view .LVU5014
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccSC4OZm.s 			page 314


 11647 00b0 1023     		movs	r3, #16
 338:Core/Src/SEGGER_RTT.c ****   p->aDown[0].SizeOfBuffer  = BUFFER_SIZE_DOWN;
 11648              		.loc 1 338 29 view .LVU5015
 11649 00b2 6266     		str	r2, [r4, #100]
 339:Core/Src/SEGGER_RTT.c ****   p->aDown[0].RdOff         = 0u;
 11650              		.loc 1 339 3 is_stmt 1 view .LVU5016
 339:Core/Src/SEGGER_RTT.c ****   p->aDown[0].RdOff         = 0u;
 11651              		.loc 1 339 29 is_stmt 0 view .LVU5017
 11652 00b4 A366     		str	r3, [r4, #104]
 340:Core/Src/SEGGER_RTT.c ****   p->aDown[0].WrOff         = 0u;
 11653              		.loc 1 340 3 is_stmt 1 view .LVU5018
 340:Core/Src/SEGGER_RTT.c ****   p->aDown[0].WrOff         = 0u;
 11654              		.loc 1 340 29 is_stmt 0 view .LVU5019
 11655 00b6 2667     		str	r6, [r4, #112]
 341:Core/Src/SEGGER_RTT.c ****   p->aDown[0].Flags         = SEGGER_RTT_MODE_DEFAULT;
 11656              		.loc 1 341 3 is_stmt 1 view .LVU5020
 341:Core/Src/SEGGER_RTT.c ****   p->aDown[0].Flags         = SEGGER_RTT_MODE_DEFAULT;
 11657              		.loc 1 341 29 is_stmt 0 view .LVU5021
 11658 00b8 E666     		str	r6, [r4, #108]
 342:Core/Src/SEGGER_RTT.c ****   //
 11659              		.loc 1 342 3 is_stmt 1 view .LVU5022
 342:Core/Src/SEGGER_RTT.c ****   //
 11660              		.loc 1 342 29 is_stmt 0 view .LVU5023
 11661 00ba 6667     		str	r6, [r4, #116]
 348:Core/Src/SEGGER_RTT.c ****   for (i = 0; i < sizeof(_aInitStr) - 1; ++i) {
 11662              		.loc 1 348 3 is_stmt 1 view .LVU5024
 11663              		.syntax unified
 11664              	@ 348 "Core/Src/SEGGER_RTT.c" 1
 11665 00bc BFF35F8F 		dmb
 11666              	
 11667              	@ 0 "" 2
 348:Core/Src/SEGGER_RTT.c ****   for (i = 0; i < sizeof(_aInitStr) - 1; ++i) {
 11668              		.loc 1 348 13 view .LVU5025
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 11669              		.loc 1 349 3 view .LVU5026
 11670              	.LVL1099:
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 11671              		.loc 1 349 17 view .LVU5027
 350:Core/Src/SEGGER_RTT.c ****   }
 11672              		.loc 1 350 5 view .LVU5028
 350:Core/Src/SEGGER_RTT.c ****   }
 11673              		.loc 1 350 16 is_stmt 0 view .LVU5029
 11674              		.thumb
 11675              		.syntax unified
 11676 00c0 4523     		movs	r3, #69
 11677 00c2 4722     		movs	r2, #71
 11678 00c4 5321     		movs	r1, #83
 11679 00c6 2170     		strb	r1, [r4]
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 11680              		.loc 1 349 42 is_stmt 1 view .LVU5030
 11681              	.LVL1100:
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 11682              		.loc 1 349 17 view .LVU5031
 350:Core/Src/SEGGER_RTT.c ****   }
 11683              		.loc 1 350 5 view .LVU5032
 350:Core/Src/SEGGER_RTT.c ****   }
 11684              		.loc 1 350 16 is_stmt 0 view .LVU5033
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccSC4OZm.s 			page 315


 11685 00c8 6370     		strb	r3, [r4, #1]
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 11686              		.loc 1 349 42 is_stmt 1 view .LVU5034
 11687              	.LVL1101:
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 11688              		.loc 1 349 17 view .LVU5035
 350:Core/Src/SEGGER_RTT.c ****   }
 11689              		.loc 1 350 5 view .LVU5036
 350:Core/Src/SEGGER_RTT.c ****   }
 11690              		.loc 1 350 16 is_stmt 0 view .LVU5037
 11691 00ca 2021     		movs	r1, #32
 11692 00cc A270     		strb	r2, [r4, #2]
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 11693              		.loc 1 349 42 is_stmt 1 view .LVU5038
 11694              	.LVL1102:
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 11695              		.loc 1 349 17 view .LVU5039
 350:Core/Src/SEGGER_RTT.c ****   }
 11696              		.loc 1 350 5 view .LVU5040
 350:Core/Src/SEGGER_RTT.c ****   }
 11697              		.loc 1 350 16 is_stmt 0 view .LVU5041
 11698 00ce E270     		strb	r2, [r4, #3]
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 11699              		.loc 1 349 42 is_stmt 1 view .LVU5042
 11700              	.LVL1103:
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 11701              		.loc 1 349 17 view .LVU5043
 350:Core/Src/SEGGER_RTT.c ****   }
 11702              		.loc 1 350 5 view .LVU5044
 350:Core/Src/SEGGER_RTT.c ****   }
 11703              		.loc 1 350 16 is_stmt 0 view .LVU5045
 11704 00d0 2371     		strb	r3, [r4, #4]
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 11705              		.loc 1 349 42 is_stmt 1 view .LVU5046
 11706              	.LVL1104:
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 11707              		.loc 1 349 17 view .LVU5047
 350:Core/Src/SEGGER_RTT.c ****   }
 11708              		.loc 1 350 5 view .LVU5048
 350:Core/Src/SEGGER_RTT.c ****   }
 11709              		.loc 1 350 16 is_stmt 0 view .LVU5049
 11710 00d2 5222     		movs	r2, #82
 11711 00d4 5423     		movs	r3, #84
 11712 00d6 6271     		strb	r2, [r4, #5]
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 11713              		.loc 1 349 42 is_stmt 1 view .LVU5050
 11714              	.LVL1105:
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 11715              		.loc 1 349 17 view .LVU5051
 350:Core/Src/SEGGER_RTT.c ****   }
 11716              		.loc 1 350 5 view .LVU5052
 350:Core/Src/SEGGER_RTT.c ****   }
 11717              		.loc 1 350 16 is_stmt 0 view .LVU5053
 11718 00d8 A171     		strb	r1, [r4, #6]
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 11719              		.loc 1 349 42 is_stmt 1 view .LVU5054
 11720              	.LVL1106:
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccSC4OZm.s 			page 316


 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 11721              		.loc 1 349 17 view .LVU5055
 350:Core/Src/SEGGER_RTT.c ****   }
 11722              		.loc 1 350 5 view .LVU5056
 350:Core/Src/SEGGER_RTT.c ****   }
 11723              		.loc 1 350 16 is_stmt 0 view .LVU5057
 11724 00da E271     		strb	r2, [r4, #7]
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 11725              		.loc 1 349 42 is_stmt 1 view .LVU5058
 11726              	.LVL1107:
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 11727              		.loc 1 349 17 view .LVU5059
 350:Core/Src/SEGGER_RTT.c ****   }
 11728              		.loc 1 350 5 view .LVU5060
 350:Core/Src/SEGGER_RTT.c ****   }
 11729              		.loc 1 350 16 is_stmt 0 view .LVU5061
 11730 00dc 2372     		strb	r3, [r4, #8]
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 11731              		.loc 1 349 42 is_stmt 1 view .LVU5062
 11732              	.LVL1108:
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 11733              		.loc 1 349 17 view .LVU5063
 350:Core/Src/SEGGER_RTT.c ****   }
 11734              		.loc 1 350 5 view .LVU5064
 350:Core/Src/SEGGER_RTT.c ****   }
 11735              		.loc 1 350 16 is_stmt 0 view .LVU5065
 11736 00de 6372     		strb	r3, [r4, #9]
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 11737              		.loc 1 349 42 is_stmt 1 view .LVU5066
 11738              	.LVL1109:
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 11739              		.loc 1 349 17 view .LVU5067
 350:Core/Src/SEGGER_RTT.c ****   }
 11740              		.loc 1 350 5 view .LVU5068
 350:Core/Src/SEGGER_RTT.c ****   }
 11741              		.loc 1 350 16 is_stmt 0 view .LVU5069
 11742 00e0 A672     		strb	r6, [r4, #10]
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 11743              		.loc 1 349 42 is_stmt 1 view .LVU5070
 11744              	.LVL1110:
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 11745              		.loc 1 349 17 view .LVU5071
 350:Core/Src/SEGGER_RTT.c ****   }
 11746              		.loc 1 350 5 view .LVU5072
 350:Core/Src/SEGGER_RTT.c ****   }
 11747              		.loc 1 350 16 is_stmt 0 view .LVU5073
 11748 00e2 E672     		strb	r6, [r4, #11]
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 11749              		.loc 1 349 42 is_stmt 1 view .LVU5074
 11750              	.LVL1111:
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 11751              		.loc 1 349 17 view .LVU5075
 350:Core/Src/SEGGER_RTT.c ****   }
 11752              		.loc 1 350 5 view .LVU5076
 350:Core/Src/SEGGER_RTT.c ****   }
 11753              		.loc 1 350 16 is_stmt 0 view .LVU5077
 11754 00e4 2673     		strb	r6, [r4, #12]
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccSC4OZm.s 			page 317


 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 11755              		.loc 1 349 42 is_stmt 1 view .LVU5078
 11756              	.LVL1112:
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 11757              		.loc 1 349 17 view .LVU5079
 350:Core/Src/SEGGER_RTT.c ****   }
 11758              		.loc 1 350 5 view .LVU5080
 350:Core/Src/SEGGER_RTT.c ****   }
 11759              		.loc 1 350 16 is_stmt 0 view .LVU5081
 11760 00e6 6673     		strb	r6, [r4, #13]
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 11761              		.loc 1 349 42 is_stmt 1 view .LVU5082
 11762              	.LVL1113:
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 11763              		.loc 1 349 17 view .LVU5083
 350:Core/Src/SEGGER_RTT.c ****   }
 11764              		.loc 1 350 5 view .LVU5084
 350:Core/Src/SEGGER_RTT.c ****   }
 11765              		.loc 1 350 16 is_stmt 0 view .LVU5085
 11766 00e8 A673     		strb	r6, [r4, #14]
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 11767              		.loc 1 349 42 is_stmt 1 view .LVU5086
 11768              	.LVL1114:
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 11769              		.loc 1 349 17 view .LVU5087
 350:Core/Src/SEGGER_RTT.c ****   }
 11770              		.loc 1 350 5 view .LVU5088
 350:Core/Src/SEGGER_RTT.c ****   }
 11771              		.loc 1 350 16 is_stmt 0 view .LVU5089
 11772 00ea E673     		strb	r6, [r4, #15]
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 11773              		.loc 1 349 42 is_stmt 1 view .LVU5090
 11774              	.LVL1115:
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 11775              		.loc 1 349 17 view .LVU5091
 352:Core/Src/SEGGER_RTT.c **** }
 11776              		.loc 1 352 3 view .LVU5092
 11777              		.syntax unified
 11778              	@ 352 "Core/Src/SEGGER_RTT.c" 1
 11779 00ec BFF35F8F 		dmb
 11780              	
 11781              	@ 0 "" 2
 352:Core/Src/SEGGER_RTT.c **** }
 11782              		.loc 1 352 13 view .LVU5093
 353:Core/Src/SEGGER_RTT.c **** 
 11783              		.loc 1 353 1 is_stmt 0 view .LVU5094
 11784              		.thumb
 11785              		.syntax unified
 11786 00f0 8EE7     		b	.L424
 11787              	.LVL1116:
 11788              	.L435:
 353:Core/Src/SEGGER_RTT.c **** 
 11789              		.loc 1 353 1 view .LVU5095
 11790              	.LBE579:
 11791              	.LBE578:
 11792              	.LBE605:
 11793              	.LBB606:
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccSC4OZm.s 			page 318


 11794              	.LBB595:
 11795              	.LBB591:
 479:Core/Src/SEGGER_RTT.c ****     pDst = (pRing->pBuffer + WrOff) + SEGGER_RTT_UNCACHED_OFF;
 11796              		.loc 1 479 5 is_stmt 1 view .LVU5096
 480:Core/Src/SEGGER_RTT.c ****     SEGGER_RTT_MEMCPY((void*)pDst, pData, NumBytesAtOnce);
 11797              		.loc 1 480 5 view .LVU5097
 481:Core/Src/SEGGER_RTT.c ****     NumBytesAtOnce = NumBytes - Rem;
 11798              		.loc 1 481 5 view .LVU5098
 480:Core/Src/SEGGER_RTT.c ****     SEGGER_RTT_MEMCPY((void*)pDst, pData, NumBytesAtOnce);
 11799              		.loc 1 480 10 is_stmt 0 view .LVU5099
 11800 00f2 E069     		ldr	r0, [r4, #28]
 481:Core/Src/SEGGER_RTT.c ****     NumBytesAtOnce = NumBytes - Rem;
 11801              		.loc 1 481 5 view .LVU5100
 11802 00f4 2A46     		mov	r2, r5
 11803              	.LVL1117:
 481:Core/Src/SEGGER_RTT.c ****     NumBytesAtOnce = NumBytes - Rem;
 11804              		.loc 1 481 5 view .LVU5101
 11805 00f6 01A9     		add	r1, sp, #4
 11806              	.LVL1118:
 481:Core/Src/SEGGER_RTT.c ****     NumBytesAtOnce = NumBytes - Rem;
 11807              		.loc 1 481 5 view .LVU5102
 11808 00f8 3044     		add	r0, r0, r6
 11809              	.LVL1119:
 482:Core/Src/SEGGER_RTT.c ****     pDst = pRing->pBuffer + SEGGER_RTT_UNCACHED_OFF;
 11810              		.loc 1 482 20 view .LVU5103
 11811 00fa 0236     		adds	r6, r6, #2
 11812              	.LVL1120:
 481:Core/Src/SEGGER_RTT.c ****     NumBytesAtOnce = NumBytes - Rem;
 11813              		.loc 1 481 5 view .LVU5104
 11814 00fc FFF7FEFF 		bl	memcpy
 11815              	.LVL1121:
 482:Core/Src/SEGGER_RTT.c ****     pDst = pRing->pBuffer + SEGGER_RTT_UNCACHED_OFF;
 11816              		.loc 1 482 5 is_stmt 1 view .LVU5105
 482:Core/Src/SEGGER_RTT.c ****     pDst = pRing->pBuffer + SEGGER_RTT_UNCACHED_OFF;
 11817              		.loc 1 482 20 is_stmt 0 view .LVU5106
 11818 0100 A6EB0806 		sub	r6, r6, r8
 11819              	.LVL1122:
 483:Core/Src/SEGGER_RTT.c ****     SEGGER_RTT_MEMCPY((void*)pDst, pData + Rem, NumBytesAtOnce);
 11820              		.loc 1 483 5 is_stmt 1 view .LVU5107
 484:Core/Src/SEGGER_RTT.c ****     RTT__DMB();                     // Force data write to be complete before writing the <WrOff>, 
 11821              		.loc 1 484 5 view .LVU5108
 11822 0104 01AB     		add	r3, sp, #4
 11823              	.LVL1123:
 484:Core/Src/SEGGER_RTT.c ****     RTT__DMB();                     // Force data write to be complete before writing the <WrOff>, 
 11824              		.loc 1 484 5 is_stmt 0 view .LVU5109
 11825 0106 E069     		ldr	r0, [r4, #28]
 11826 0108 5919     		adds	r1, r3, r5
 11827 010a 3246     		mov	r2, r6
 11828 010c FFF7FEFF 		bl	memcpy
 11829              	.LVL1124:
 485:Core/Src/SEGGER_RTT.c ****     pRing->WrOff = NumBytesAtOnce;
 11830              		.loc 1 485 5 is_stmt 1 view .LVU5110
 11831              		.syntax unified
 11832              	@ 485 "Core/Src/SEGGER_RTT.c" 1
 11833 0110 BFF35F8F 		dmb
 11834              	
 11835              	@ 0 "" 2
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccSC4OZm.s 			page 319


 485:Core/Src/SEGGER_RTT.c ****     pRing->WrOff = NumBytesAtOnce;
 11836              		.loc 1 485 15 view .LVU5111
 486:Core/Src/SEGGER_RTT.c **** #endif
 11837              		.loc 1 486 5 view .LVU5112
 11838              		.thumb
 11839              		.syntax unified
 11840              	.LBE591:
 11841              	.LBE595:
 11842              	.LBE606:
1927:Core/Src/SEGGER_RTT.c ****   ac[0] = 0xFFu;
 11843              		.loc 1 1927 5 is_stmt 0 view .LVU5113
 11844 0114 0020     		movs	r0, #0
 11845              	.LBB607:
 11846              	.LBB596:
 11847              	.LBB592:
 486:Core/Src/SEGGER_RTT.c **** #endif
 11848              		.loc 1 486 18 view .LVU5114
 11849 0116 6662     		str	r6, [r4, #36]
 11850 0118 9CE7     		b	.L431
 11851              	.LVL1125:
 11852              	.L444:
 486:Core/Src/SEGGER_RTT.c **** #endif
 11853              		.loc 1 486 18 view .LVU5115
 11854              	.LBE592:
 11855              	.LBE596:
1934:Core/Src/SEGGER_RTT.c ****       _WriteBlocking(pRing, (const char*)ac, 2u);
 11856              		.loc 1 1934 7 is_stmt 1 view .LVU5116
1934:Core/Src/SEGGER_RTT.c ****       _WriteBlocking(pRing, (const char*)ac, 2u);
 11857              		.loc 1 1934 23 is_stmt 0 view .LVU5117
 11858 011a 1F4B     		ldr	r3, .L447+8
 11859              	.LBB597:
 11860              	.LBB585:
 537:Core/Src/SEGGER_RTT.c ****   } else {
 11861              		.loc 1 537 14 view .LVU5118
 11862 011c D4E90816 		ldrd	r1, r6, [r4, #32]
 11863              	.LBE585:
 11864              	.LBE597:
1934:Core/Src/SEGGER_RTT.c ****       _WriteBlocking(pRing, (const char*)ac, 2u);
 11865              		.loc 1 1934 23 view .LVU5119
 11866 0120 1D70     		strb	r5, [r3]
1935:Core/Src/SEGGER_RTT.c ****     } else {                                                                            // Skipping
 11867              		.loc 1 1935 7 is_stmt 1 view .LVU5120
 11868              	.LVL1126:
 11869              	.LBB598:
 11870              	.LBI598:
 374:Core/Src/SEGGER_RTT.c ****   unsigned NumBytesToWrite;
 11871              		.loc 1 374 17 view .LVU5121
 11872              	.LBB599:
 375:Core/Src/SEGGER_RTT.c ****   unsigned NumBytesWritten;
 11873              		.loc 1 375 3 view .LVU5122
 376:Core/Src/SEGGER_RTT.c ****   unsigned RdOff;
 11874              		.loc 1 376 3 view .LVU5123
 377:Core/Src/SEGGER_RTT.c ****   unsigned WrOff;
 11875              		.loc 1 377 3 view .LVU5124
 378:Core/Src/SEGGER_RTT.c ****   volatile char* pDst;
 11876              		.loc 1 378 3 view .LVU5125
 379:Core/Src/SEGGER_RTT.c ****   //
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccSC4OZm.s 			page 320


 11877              		.loc 1 379 3 view .LVU5126
 383:Core/Src/SEGGER_RTT.c ****   WrOff = pRing->WrOff;
 11878              		.loc 1 383 3 view .LVU5127
 384:Core/Src/SEGGER_RTT.c ****   do {
 11879              		.loc 1 384 3 view .LVU5128
 11880              	.LBE599:
 11881              	.LBE598:
 11882              	.LBB601:
 11883              	.LBB586:
 537:Core/Src/SEGGER_RTT.c ****   } else {
 11884              		.loc 1 537 14 is_stmt 0 view .LVU5129
 11885 0122 0DF1040A 		add	r10, sp, #4
 11886              	.LVL1127:
 537:Core/Src/SEGGER_RTT.c ****   } else {
 11887              		.loc 1 537 14 view .LVU5130
 11888              	.LBE586:
 11889              	.LBE601:
 11890              	.LBB602:
 11891              	.LBB600:
 413:Core/Src/SEGGER_RTT.c ****   } while (NumBytes);
 11892              		.loc 1 413 18 view .LVU5131
 11893 0126 4FF00008 		mov	r8, #0
 11894              	.LVL1128:
 11895              	.L432:
 385:Core/Src/SEGGER_RTT.c ****     RdOff = pRing->RdOff;                         // May be changed by host (debug probe) in the me
 11896              		.loc 1 385 3 is_stmt 1 view .LVU5132
 386:Core/Src/SEGGER_RTT.c ****     if (RdOff > WrOff) {
 11897              		.loc 1 386 5 view .LVU5133
 388:Core/Src/SEGGER_RTT.c ****     } else {
 11898              		.loc 1 388 7 view .LVU5134
 390:Core/Src/SEGGER_RTT.c ****     }
 11899              		.loc 1 390 7 view .LVU5135
 386:Core/Src/SEGGER_RTT.c ****     if (RdOff > WrOff) {
 11900              		.loc 1 386 11 is_stmt 0 view .LVU5136
 11901 012a A36A     		ldr	r3, [r4, #40]
 11902              	.LVL1129:
 387:Core/Src/SEGGER_RTT.c ****       NumBytesToWrite = RdOff - WrOff - 1u;
 11903              		.loc 1 387 5 is_stmt 1 view .LVU5137
 394:Core/Src/SEGGER_RTT.c **** #if SEGGER_RTT_MEMCPY_USE_BYTELOOP
 11904              		.loc 1 394 10 is_stmt 0 view .LVU5138
 11905 012c E069     		ldr	r0, [r4, #28]
 387:Core/Src/SEGGER_RTT.c ****       NumBytesToWrite = RdOff - WrOff - 1u;
 11906              		.loc 1 387 8 view .LVU5139
 11907 012e B342     		cmp	r3, r6
 392:Core/Src/SEGGER_RTT.c ****     NumBytesToWrite = MIN(NumBytesToWrite, NumBytes);
 11908              		.loc 1 392 23 view .LVU5140
 11909 0130 A1EB0605 		sub	r5, r1, r6
 388:Core/Src/SEGGER_RTT.c ****     } else {
 11910              		.loc 1 388 23 view .LVU5141
 11911 0134 03F1FF32 		add	r2, r3, #-1
 390:Core/Src/SEGGER_RTT.c ****     }
 11912              		.loc 1 390 23 view .LVU5142
 11913 0138 9CBF     		itt	ls
 11914 013a 03F1FF32 		addls	r2, r3, #-1
 11915 013e 5218     		addls	r2, r2, r1
 393:Core/Src/SEGGER_RTT.c ****     pDst = (pRing->pBuffer + WrOff) + SEGGER_RTT_UNCACHED_OFF;
 11916              		.loc 1 393 21 view .LVU5143
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccSC4OZm.s 			page 321


 11917 0140 4D45     		cmp	r5, r9
 11918 0142 28BF     		it	cs
 11919 0144 4D46     		movcs	r5, r9
 390:Core/Src/SEGGER_RTT.c ****     }
 11920              		.loc 1 390 23 view .LVU5144
 11921 0146 921B     		subs	r2, r2, r6
 11922              	.LVL1130:
 392:Core/Src/SEGGER_RTT.c ****     NumBytesToWrite = MIN(NumBytesToWrite, NumBytes);
 11923              		.loc 1 392 5 is_stmt 1 view .LVU5145
 393:Core/Src/SEGGER_RTT.c ****     pDst = (pRing->pBuffer + WrOff) + SEGGER_RTT_UNCACHED_OFF;
 11924              		.loc 1 393 5 view .LVU5146
 393:Core/Src/SEGGER_RTT.c ****     pDst = (pRing->pBuffer + WrOff) + SEGGER_RTT_UNCACHED_OFF;
 11925              		.loc 1 393 21 is_stmt 0 view .LVU5147
 11926 0148 9542     		cmp	r5, r2
 11927 014a 28BF     		it	cs
 11928 014c 1546     		movcs	r5, r2
 11929              	.LVL1131:
 394:Core/Src/SEGGER_RTT.c **** #if SEGGER_RTT_MEMCPY_USE_BYTELOOP
 11930              		.loc 1 394 5 is_stmt 1 view .LVU5148
 403:Core/Src/SEGGER_RTT.c ****     NumBytesWritten += NumBytesToWrite;
 11931              		.loc 1 403 5 view .LVU5149
 11932 014e 5146     		mov	r1, r10
 11933 0150 3044     		add	r0, r0, r6
 11934              	.LVL1132:
 403:Core/Src/SEGGER_RTT.c ****     NumBytesWritten += NumBytesToWrite;
 11935              		.loc 1 403 5 is_stmt 0 view .LVU5150
 11936 0152 2A46     		mov	r2, r5
 11937 0154 FFF7FEFF 		bl	memcpy
 11938              	.LVL1133:
 404:Core/Src/SEGGER_RTT.c ****     pBuffer         += NumBytesToWrite;
 11939              		.loc 1 404 5 is_stmt 1 view .LVU5151
 405:Core/Src/SEGGER_RTT.c ****     NumBytes        -= NumBytesToWrite;
 11940              		.loc 1 405 5 view .LVU5152
 409:Core/Src/SEGGER_RTT.c ****       WrOff = 0u;
 11941              		.loc 1 409 23 is_stmt 0 view .LVU5153
 11942 0158 216A     		ldr	r1, [r4, #32]
 407:Core/Src/SEGGER_RTT.c **** #endif
 11943              		.loc 1 407 21 view .LVU5154
 11944 015a 2E44     		add	r6, r6, r5
 11945              	.LVL1134:
 412:Core/Src/SEGGER_RTT.c ****     pRing->WrOff = WrOff;
 11946              		.loc 1 412 5 is_stmt 1 view .LVU5155
 409:Core/Src/SEGGER_RTT.c ****       WrOff = 0u;
 11947              		.loc 1 409 8 is_stmt 0 view .LVU5156
 11948 015c 8E42     		cmp	r6, r1
 405:Core/Src/SEGGER_RTT.c ****     NumBytes        -= NumBytesToWrite;
 11949              		.loc 1 405 21 view .LVU5157
 11950 015e AA44     		add	r10, r10, r5
 11951              	.LVL1135:
 406:Core/Src/SEGGER_RTT.c ****     WrOff           += NumBytesToWrite;
 11952              		.loc 1 406 5 is_stmt 1 view .LVU5158
 406:Core/Src/SEGGER_RTT.c ****     WrOff           += NumBytesToWrite;
 11953              		.loc 1 406 21 is_stmt 0 view .LVU5159
 11954 0160 A9EB0509 		sub	r9, r9, r5
 11955              	.LVL1136:
 407:Core/Src/SEGGER_RTT.c **** #endif
 11956              		.loc 1 407 5 is_stmt 1 view .LVU5160
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccSC4OZm.s 			page 322


 409:Core/Src/SEGGER_RTT.c ****       WrOff = 0u;
 11957              		.loc 1 409 5 view .LVU5161
 409:Core/Src/SEGGER_RTT.c ****       WrOff = 0u;
 11958              		.loc 1 409 8 is_stmt 0 view .LVU5162
 11959 0164 06D0     		beq	.L446
 412:Core/Src/SEGGER_RTT.c ****     pRing->WrOff = WrOff;
 11960              		.loc 1 412 5 view .LVU5163
 11961              		.syntax unified
 11962              	@ 412 "Core/Src/SEGGER_RTT.c" 1
 11963 0166 BFF35F8F 		dmb
 11964              	
 11965              	@ 0 "" 2
 412:Core/Src/SEGGER_RTT.c ****     pRing->WrOff = WrOff;
 11966              		.loc 1 412 15 is_stmt 1 view .LVU5164
 413:Core/Src/SEGGER_RTT.c ****   } while (NumBytes);
 11967              		.loc 1 413 5 view .LVU5165
 413:Core/Src/SEGGER_RTT.c ****   } while (NumBytes);
 11968              		.loc 1 413 18 is_stmt 0 view .LVU5166
 11969              		.thumb
 11970              		.syntax unified
 11971 016a 6662     		str	r6, [r4, #36]
 414:Core/Src/SEGGER_RTT.c ****   return NumBytesWritten;
 11972              		.loc 1 414 12 is_stmt 1 view .LVU5167
 11973 016c B9F1000F 		cmp	r9, #0
 11974 0170 DBD1     		bne	.L432
 11975 0172 84E7     		b	.L442
 11976              	.L446:
 11977              	.LVL1137:
 412:Core/Src/SEGGER_RTT.c ****     pRing->WrOff = WrOff;
 11978              		.loc 1 412 5 view .LVU5168
 11979              		.syntax unified
 11980              	@ 412 "Core/Src/SEGGER_RTT.c" 1
 11981 0174 BFF35F8F 		dmb
 11982              	
 11983              	@ 0 "" 2
 412:Core/Src/SEGGER_RTT.c ****     pRing->WrOff = WrOff;
 11984              		.loc 1 412 15 view .LVU5169
 413:Core/Src/SEGGER_RTT.c ****   } while (NumBytes);
 11985              		.loc 1 413 5 view .LVU5170
 413:Core/Src/SEGGER_RTT.c ****   } while (NumBytes);
 11986              		.loc 1 413 18 is_stmt 0 view .LVU5171
 11987              		.thumb
 11988              		.syntax unified
 11989 0178 C4F82480 		str	r8, [r4, #36]
 414:Core/Src/SEGGER_RTT.c ****   return NumBytesWritten;
 11990              		.loc 1 414 12 is_stmt 1 view .LVU5172
 11991 017c B9F1000F 		cmp	r9, #0
 11992 0180 3FF47DAF 		beq	.L442
 410:Core/Src/SEGGER_RTT.c ****     }
 11993              		.loc 1 410 13 is_stmt 0 view .LVU5173
 11994 0184 0026     		movs	r6, #0
 11995 0186 D0E7     		b	.L432
 11996              	.LVL1138:
 11997              	.L436:
 410:Core/Src/SEGGER_RTT.c ****     }
 11998              		.loc 1 410 13 view .LVU5174
 11999              	.LBE600:
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccSC4OZm.s 			page 323


 12000              	.LBE602:
 12001              	.LBE607:
1947:Core/Src/SEGGER_RTT.c ****   }
 12002              		.loc 1 1947 7 view .LVU5175
 12003 0188 4FF0FF30 		mov	r0, #-1
 12004              	.LVL1139:
1949:Core/Src/SEGGER_RTT.c **** }
 12005              		.loc 1 1949 3 is_stmt 1 view .LVU5176
1949:Core/Src/SEGGER_RTT.c **** }
 12006              		.loc 1 1949 10 is_stmt 0 view .LVU5177
 12007 018c 64E7     		b	.L423
 12008              	.L448:
 12009 018e 00BF     		.align	2
 12010              	.L447:
 12011 0190 00000000 		.word	.LANCHOR0
 12012 0194 00000000 		.word	.LANCHOR3
 12013 0198 00000000 		.word	.LANCHOR4
 12014 019c 00000000 		.word	.LC0
 12015 01a0 00000000 		.word	.LANCHOR1
 12016 01a4 00000000 		.word	.LANCHOR2
 12017              		.cfi_endproc
 12018              	.LFE32:
 12020              		.section	.text.SEGGER_RTT_TerminalOut,"ax",%progbits
 12021              		.align	1
 12022              		.p2align 2,,3
 12023              		.global	SEGGER_RTT_TerminalOut
 12024              		.syntax unified
 12025              		.thumb
 12026              		.thumb_func
 12028              	SEGGER_RTT_TerminalOut:
 12029              	.LVL1140:
 12030              	.LFB33:
1951:Core/Src/SEGGER_RTT.c **** 
1952:Core/Src/SEGGER_RTT.c **** /*********************************************************************
1953:Core/Src/SEGGER_RTT.c **** *
1954:Core/Src/SEGGER_RTT.c **** *       SEGGER_RTT_TerminalOut
1955:Core/Src/SEGGER_RTT.c **** *
1956:Core/Src/SEGGER_RTT.c **** *  Function description
1957:Core/Src/SEGGER_RTT.c **** *    Writes a string to the given terminal
1958:Core/Src/SEGGER_RTT.c **** *     without changing the terminal for channel 0.
1959:Core/Src/SEGGER_RTT.c **** *
1960:Core/Src/SEGGER_RTT.c **** *  Parameters
1961:Core/Src/SEGGER_RTT.c **** *    TerminalId   Index of the terminal.
1962:Core/Src/SEGGER_RTT.c **** *    s            String to be printed on the terminal.
1963:Core/Src/SEGGER_RTT.c **** *
1964:Core/Src/SEGGER_RTT.c **** *  Return value
1965:Core/Src/SEGGER_RTT.c **** *    >= 0 - Number of bytes written.
1966:Core/Src/SEGGER_RTT.c **** *     < 0 - Error.
1967:Core/Src/SEGGER_RTT.c **** *
1968:Core/Src/SEGGER_RTT.c **** */
1969:Core/Src/SEGGER_RTT.c **** int SEGGER_RTT_TerminalOut (unsigned char TerminalId, const char* s) {
 12031              		.loc 1 1969 70 is_stmt 1 view -0
 12032              		.cfi_startproc
 12033              		@ args = 0, pretend = 0, frame = 24
 12034              		@ frame_needed = 0, uses_anonymous_args = 0
1970:Core/Src/SEGGER_RTT.c ****   int                   Status;
 12035              		.loc 1 1970 3 view .LVU5179
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccSC4OZm.s 			page 324


1971:Core/Src/SEGGER_RTT.c ****   unsigned              FragLen;
 12036              		.loc 1 1971 3 view .LVU5180
1972:Core/Src/SEGGER_RTT.c ****   unsigned              Avail;
 12037              		.loc 1 1972 3 view .LVU5181
1973:Core/Src/SEGGER_RTT.c ****   SEGGER_RTT_BUFFER_UP* pRing;
 12038              		.loc 1 1973 3 view .LVU5182
 12039              	.LBB644:
1974:Core/Src/SEGGER_RTT.c ****   //
1975:Core/Src/SEGGER_RTT.c ****   INIT();
 12040              		.loc 1 1975 3 view .LVU5183
 12041              		.loc 1 1975 3 view .LVU5184
 12042              		.loc 1 1975 3 view .LVU5185
 12043              		.loc 1 1975 3 view .LVU5186
 12044              	.LBE644:
1969:Core/Src/SEGGER_RTT.c ****   int                   Status;
 12045              		.loc 1 1969 70 is_stmt 0 view .LVU5187
 12046 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 12047              		.cfi_def_cfa_offset 36
 12048              		.cfi_offset 4, -36
 12049              		.cfi_offset 5, -32
 12050              		.cfi_offset 6, -28
 12051              		.cfi_offset 7, -24
 12052              		.cfi_offset 8, -20
 12053              		.cfi_offset 9, -16
 12054              		.cfi_offset 10, -12
 12055              		.cfi_offset 11, -8
 12056              		.cfi_offset 14, -4
 12057              	.LBB647:
 12058              		.loc 1 1975 3 view .LVU5188
 12059 0004 904D     		ldr	r5, .L573
 12060 0006 2B78     		ldrb	r3, [r5]	@ zero_extendqisi2
 12061              	.LBE647:
1969:Core/Src/SEGGER_RTT.c ****   int                   Status;
 12062              		.loc 1 1969 70 view .LVU5189
 12063 0008 87B0     		sub	sp, sp, #28
 12064              		.cfi_def_cfa_offset 64
1969:Core/Src/SEGGER_RTT.c ****   int                   Status;
 12065              		.loc 1 1969 70 view .LVU5190
 12066 000a 8146     		mov	r9, r0
 12067 000c 8846     		mov	r8, r1
 12068              	.LBB648:
 12069              		.loc 1 1975 3 view .LVU5191
 12070 000e 7BB3     		cbz	r3, .L555
 12071              	.LVL1141:
 12072              	.L450:
 12073              		.loc 1 1975 3 is_stmt 1 discriminator 3 view .LVU5192
 12074              	.LBE648:
 12075              		.loc 1 1975 9 discriminator 3 view .LVU5193
1976:Core/Src/SEGGER_RTT.c ****   //
1977:Core/Src/SEGGER_RTT.c ****   // Validate terminal ID.
1978:Core/Src/SEGGER_RTT.c ****   //
1979:Core/Src/SEGGER_RTT.c ****   if (TerminalId < (char)sizeof(_aTerminalId)) { // We only support a certain number of channels
 12076              		.loc 1 1979 3 discriminator 3 view .LVU5194
 12077              		.loc 1 1979 6 is_stmt 0 discriminator 3 view .LVU5195
 12078 0010 B9F10F0F 		cmp	r9, #15
 12079 0014 00F28582 		bhi	.L511
1980:Core/Src/SEGGER_RTT.c ****     //
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccSC4OZm.s 			page 325


1981:Core/Src/SEGGER_RTT.c ****     // Get "to-host" ring buffer.
1982:Core/Src/SEGGER_RTT.c ****     //
1983:Core/Src/SEGGER_RTT.c ****     pRing = (SEGGER_RTT_BUFFER_UP*)((char*)&_SEGGER_RTT.aUp[0] + SEGGER_RTT_UNCACHED_OFF);  // Acce
 12080              		.loc 1 1983 5 is_stmt 1 view .LVU5196
 12081              	.LVL1142:
1984:Core/Src/SEGGER_RTT.c ****     //
1985:Core/Src/SEGGER_RTT.c ****     // Need to be able to change terminal, write data, change back.
1986:Core/Src/SEGGER_RTT.c ****     // Compute the fixed and variable sizes.
1987:Core/Src/SEGGER_RTT.c ****     //
1988:Core/Src/SEGGER_RTT.c ****     FragLen = STRLEN(s);
 12082              		.loc 1 1988 5 view .LVU5197
 12083              		.loc 1 1988 15 is_stmt 0 view .LVU5198
 12084 0018 4046     		mov	r0, r8
 12085 001a FFF7FEFF 		bl	strlen
 12086              	.LVL1143:
 12087 001e 0746     		mov	r7, r0
 12088              	.LVL1144:
 12089              	.LBB649:
1989:Core/Src/SEGGER_RTT.c ****     //
1990:Core/Src/SEGGER_RTT.c ****     // How we output depends upon the mode...
1991:Core/Src/SEGGER_RTT.c ****     //
1992:Core/Src/SEGGER_RTT.c ****     SEGGER_RTT_LOCK();
 12090              		.loc 1 1992 5 is_stmt 1 view .LVU5199
 12091              		.loc 1 1992 5 view .LVU5200
 12092              		.syntax unified
 12093              	@ 1992 "Core/Src/SEGGER_RTT.c" 1
 12094 0020 EFF31183 		mrs   r3, basepri  
 12095 0024 4FF02001 		mov   r1, #32       
 12096 0028 81F31188 		msr   basepri, r1  
 12097              		
 12098              	@ 0 "" 2
 12099              		.thumb
 12100              		.syntax unified
 12101              	.LBB650:
 12102              	.LBB651:
 535:Core/Src/SEGGER_RTT.c ****   if (RdOff <= WrOff) {
 12103              		.loc 1 535 9 is_stmt 0 view .LVU5201
 12104 002c 6C6A     		ldr	r4, [r5, #36]
 12105              	.LBE651:
 12106              	.LBE650:
 12107              		.loc 1 1992 5 view .LVU5202
 12108 002e 0193     		str	r3, [sp, #4]
 12109              	.LVL1145:
 12110              		.loc 1 1992 22 is_stmt 1 view .LVU5203
1993:Core/Src/SEGGER_RTT.c ****     Avail = _GetAvailWriteSpace(pRing);
 12111              		.loc 1 1993 5 view .LVU5204
 12112              	.LBB660:
 12113              	.LBI650:
 526:Core/Src/SEGGER_RTT.c ****   unsigned RdOff;
 12114              		.loc 1 526 17 view .LVU5205
 12115              	.LBB652:
 527:Core/Src/SEGGER_RTT.c ****   unsigned WrOff;
 12116              		.loc 1 527 3 view .LVU5206
 528:Core/Src/SEGGER_RTT.c ****   unsigned r;
 12117              		.loc 1 528 3 view .LVU5207
 529:Core/Src/SEGGER_RTT.c ****   //
 12118              		.loc 1 529 3 view .LVU5208
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccSC4OZm.s 			page 326


 534:Core/Src/SEGGER_RTT.c ****   WrOff = pRing->WrOff;
 12119              		.loc 1 534 3 view .LVU5209
 534:Core/Src/SEGGER_RTT.c ****   WrOff = pRing->WrOff;
 12120              		.loc 1 534 9 is_stmt 0 view .LVU5210
 12121 0030 AB6A     		ldr	r3, [r5, #40]
 12122              	.LVL1146:
 535:Core/Src/SEGGER_RTT.c ****   if (RdOff <= WrOff) {
 12123              		.loc 1 535 3 is_stmt 1 view .LVU5211
 536:Core/Src/SEGGER_RTT.c ****     r = pRing->SizeOfBuffer - 1u - WrOff + RdOff;
 12124              		.loc 1 536 3 view .LVU5212
 12125              	.LBE652:
 12126              	.LBE660:
1994:Core/Src/SEGGER_RTT.c ****     switch (pRing->Flags & SEGGER_RTT_MODE_MASK) {
 12127              		.loc 1 1994 26 is_stmt 0 view .LVU5213
 12128 0032 EE6A     		ldr	r6, [r5, #44]
 12129              	.LBB661:
 12130              	.LBB653:
 536:Core/Src/SEGGER_RTT.c ****     r = pRing->SizeOfBuffer - 1u - WrOff + RdOff;
 12131              		.loc 1 536 6 view .LVU5214
 12132 0034 A342     		cmp	r3, r4
 537:Core/Src/SEGGER_RTT.c ****   } else {
 12133              		.loc 1 537 5 is_stmt 1 view .LVU5215
 537:Core/Src/SEGGER_RTT.c ****   } else {
 12134              		.loc 1 537 7 is_stmt 0 view .LVU5216
 12135 0036 98BF     		it	ls
 12136 0038 2A6A     		ldrls	r2, [r5, #32]
 12137              	.LBE653:
 12138              	.LBE661:
 12139              		.loc 1 1994 26 view .LVU5217
 12140 003a 06F00306 		and	r6, r6, #3
 12141              	.LBB662:
 12142              	.LBB654:
 537:Core/Src/SEGGER_RTT.c ****   } else {
 12143              		.loc 1 537 7 view .LVU5218
 12144 003e 9ABF     		itte	ls
 12145 0040 03EB020B 		addls	fp, r3, r2
 12146 0044 0BF1FF3B 		addls	fp, fp, #-1
 539:Core/Src/SEGGER_RTT.c ****   }
 12147              		.loc 1 539 5 is_stmt 1 view .LVU5219
 539:Core/Src/SEGGER_RTT.c ****   }
 12148              		.loc 1 539 7 is_stmt 0 view .LVU5220
 12149 0048 03F1FF3B 		addhi	fp, r3, #-1
 12150              	.LBE654:
 12151              	.LBE662:
 12152              		.loc 1 1994 5 view .LVU5221
 12153 004c 012E     		cmp	r6, #1
 12154              	.LBB663:
 12155              	.LBB655:
 539:Core/Src/SEGGER_RTT.c ****   }
 12156              		.loc 1 539 7 view .LVU5222
 12157 004e ABEB040B 		sub	fp, fp, r4
 12158              	.LVL1147:
 541:Core/Src/SEGGER_RTT.c **** }
 12159              		.loc 1 541 3 is_stmt 1 view .LVU5223
 541:Core/Src/SEGGER_RTT.c **** }
 12160              		.loc 1 541 3 is_stmt 0 view .LVU5224
 12161              	.LBE655:
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccSC4OZm.s 			page 327


 12162              	.LBE663:
 12163              		.loc 1 1994 5 is_stmt 1 view .LVU5225
 12164 0052 00F00581 		beq	.L454
 12165 0056 022E     		cmp	r6, #2
 12166 0058 48D0     		beq	.L455
 12167 005a 002E     		cmp	r6, #0
 12168 005c 40D0     		beq	.L556
 12169              	.L517:
1995:Core/Src/SEGGER_RTT.c ****     case SEGGER_RTT_MODE_NO_BLOCK_SKIP:
1996:Core/Src/SEGGER_RTT.c ****       //
1997:Core/Src/SEGGER_RTT.c ****       // If we are in skip mode and there is no space for the whole
1998:Core/Src/SEGGER_RTT.c ****       // of this output, don't bother switching terminals at all.
1999:Core/Src/SEGGER_RTT.c ****       //
2000:Core/Src/SEGGER_RTT.c ****       if (Avail < (FragLen + 4u)) {
2001:Core/Src/SEGGER_RTT.c ****         Status = 0;
2002:Core/Src/SEGGER_RTT.c ****       } else {
2003:Core/Src/SEGGER_RTT.c ****         _PostTerminalSwitch(pRing, TerminalId);
2004:Core/Src/SEGGER_RTT.c ****         Status = (int)_WriteBlocking(pRing, s, FragLen);
2005:Core/Src/SEGGER_RTT.c ****         _PostTerminalSwitch(pRing, _ActiveTerminal);
2006:Core/Src/SEGGER_RTT.c ****       }
2007:Core/Src/SEGGER_RTT.c ****       break;
2008:Core/Src/SEGGER_RTT.c ****     case SEGGER_RTT_MODE_NO_BLOCK_TRIM:
2009:Core/Src/SEGGER_RTT.c ****       //
2010:Core/Src/SEGGER_RTT.c ****       // If we are in trim mode and there is not enough space for everything,
2011:Core/Src/SEGGER_RTT.c ****       // trim the output but always include the terminal switch.  If no room
2012:Core/Src/SEGGER_RTT.c ****       // for terminal switch, skip that totally.
2013:Core/Src/SEGGER_RTT.c ****       //
2014:Core/Src/SEGGER_RTT.c ****       if (Avail < 4u) {
2015:Core/Src/SEGGER_RTT.c ****         Status = -1;
 12170              		.loc 1 2015 16 is_stmt 0 view .LVU5226
 12171 005e 4FF0FF37 		mov	r7, #-1
 12172              	.LVL1148:
 12173              	.L456:
2016:Core/Src/SEGGER_RTT.c ****       } else {
2017:Core/Src/SEGGER_RTT.c ****         _PostTerminalSwitch(pRing, TerminalId);
2018:Core/Src/SEGGER_RTT.c ****         Status = (int)_WriteBlocking(pRing, s, (FragLen < (Avail - 4u)) ? FragLen : (Avail - 4u));
2019:Core/Src/SEGGER_RTT.c ****         _PostTerminalSwitch(pRing, _ActiveTerminal);
2020:Core/Src/SEGGER_RTT.c ****       }
2021:Core/Src/SEGGER_RTT.c ****       break;
2022:Core/Src/SEGGER_RTT.c ****     case SEGGER_RTT_MODE_BLOCK_IF_FIFO_FULL:
2023:Core/Src/SEGGER_RTT.c ****       //
2024:Core/Src/SEGGER_RTT.c ****       // If we are in blocking mode, output everything.
2025:Core/Src/SEGGER_RTT.c ****       //
2026:Core/Src/SEGGER_RTT.c ****       _PostTerminalSwitch(pRing, TerminalId);
2027:Core/Src/SEGGER_RTT.c ****       Status = (int)_WriteBlocking(pRing, s, FragLen);
2028:Core/Src/SEGGER_RTT.c ****       _PostTerminalSwitch(pRing, _ActiveTerminal);
2029:Core/Src/SEGGER_RTT.c ****       break;
2030:Core/Src/SEGGER_RTT.c ****     default:
2031:Core/Src/SEGGER_RTT.c ****       Status = -1;
2032:Core/Src/SEGGER_RTT.c ****       break;
2033:Core/Src/SEGGER_RTT.c ****     }
2034:Core/Src/SEGGER_RTT.c ****     //
2035:Core/Src/SEGGER_RTT.c ****     // Finish up.
2036:Core/Src/SEGGER_RTT.c ****     //
2037:Core/Src/SEGGER_RTT.c ****     SEGGER_RTT_UNLOCK();
 12174              		.loc 1 2037 5 is_stmt 1 view .LVU5227
 12175 0062 019B     		ldr	r3, [sp, #4]
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccSC4OZm.s 			page 328


 12176              		.syntax unified
 12177              	@ 2037 "Core/Src/SEGGER_RTT.c" 1
 12178 0064 83F31188 		msr   basepri, r3  
 12179              		
 12180              	@ 0 "" 2
 12181              		.thumb
 12182              		.syntax unified
 12183              	.LBE649:
 12184              		.loc 1 2037 24 view .LVU5228
 12185              	.LVL1149:
 12186              	.L449:
2038:Core/Src/SEGGER_RTT.c ****   } else {
2039:Core/Src/SEGGER_RTT.c ****     Status = -1;
2040:Core/Src/SEGGER_RTT.c ****   }
2041:Core/Src/SEGGER_RTT.c ****   return Status;
2042:Core/Src/SEGGER_RTT.c **** }
 12187              		.loc 1 2042 1 is_stmt 0 view .LVU5229
 12188 0068 3846     		mov	r0, r7
 12189 006a 07B0     		add	sp, sp, #28
 12190              		.cfi_remember_state
 12191              		.cfi_def_cfa_offset 36
 12192              		@ sp needed
 12193 006c BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 12194              	.LVL1150:
 12195              	.L555:
 12196              		.cfi_restore_state
 12197              		.loc 1 2042 1 view .LVU5230
 12198 0070 03F0FF04 		and	r4, r3, #255
 12199              	.LBB776:
1975:Core/Src/SEGGER_RTT.c ****   //
 12200              		.loc 1 1975 3 is_stmt 1 view .LVU5231
 12201              	.LBB645:
 12202              	.LBI645:
 314:Core/Src/SEGGER_RTT.c ****   volatile SEGGER_RTT_CB* p;   // Volatile to make sure that compiler cannot change the order of ac
 12203              		.loc 1 314 13 view .LVU5232
 12204              	.LBB646:
 315:Core/Src/SEGGER_RTT.c ****   static const char _aInitStr[] = "\0\0\0\0\0\0TTR REGGES";  // Init complete ID string to make sur
 12205              		.loc 1 315 3 view .LVU5233
 316:Core/Src/SEGGER_RTT.c ****   unsigned i;
 12206              		.loc 1 316 3 view .LVU5234
 317:Core/Src/SEGGER_RTT.c ****   //
 12207              		.loc 1 317 3 view .LVU5235
 321:Core/Src/SEGGER_RTT.c ****   memset((SEGGER_RTT_CB*)p, 0, sizeof(_SEGGER_RTT));         // Make sure that the RTT CB is always
 12208              		.loc 1 321 3 view .LVU5236
 12209              	.LVL1151:
 322:Core/Src/SEGGER_RTT.c ****   p->MaxNumUpBuffers    = SEGGER_RTT_MAX_NUM_UP_BUFFERS;
 12210              		.loc 1 322 3 view .LVU5237
 12211 0074 2146     		mov	r1, r4
 12212              	.LVL1152:
 322:Core/Src/SEGGER_RTT.c ****   p->MaxNumUpBuffers    = SEGGER_RTT_MAX_NUM_UP_BUFFERS;
 12213              		.loc 1 322 3 is_stmt 0 view .LVU5238
 12214 0076 7822     		movs	r2, #120
 12215 0078 05F13000 		add	r0, r5, #48
 12216              	.LVL1153:
 322:Core/Src/SEGGER_RTT.c ****   p->MaxNumUpBuffers    = SEGGER_RTT_MAX_NUM_UP_BUFFERS;
 12217              		.loc 1 322 3 view .LVU5239
 12218 007c FFF7FEFF 		bl	memset
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccSC4OZm.s 			page 329


 12219              	.LVL1154:
 323:Core/Src/SEGGER_RTT.c ****   p->MaxNumDownBuffers  = SEGGER_RTT_MAX_NUM_DOWN_BUFFERS;
 12220              		.loc 1 323 3 is_stmt 1 view .LVU5240
 323:Core/Src/SEGGER_RTT.c ****   p->MaxNumDownBuffers  = SEGGER_RTT_MAX_NUM_DOWN_BUFFERS;
 12221              		.loc 1 323 25 is_stmt 0 view .LVU5241
 12222 0080 0323     		movs	r3, #3
 12223 0082 2B61     		str	r3, [r5, #16]
 324:Core/Src/SEGGER_RTT.c ****   //
 12224              		.loc 1 324 3 is_stmt 1 view .LVU5242
 329:Core/Src/SEGGER_RTT.c ****   p->aUp[0].SizeOfBuffer  = BUFFER_SIZE_UP;
 12225              		.loc 1 329 27 is_stmt 0 view .LVU5243
 12226 0084 714A     		ldr	r2, .L573+4
 324:Core/Src/SEGGER_RTT.c ****   //
 12227              		.loc 1 324 25 view .LVU5244
 12228 0086 6B61     		str	r3, [r5, #20]
 328:Core/Src/SEGGER_RTT.c ****   p->aUp[0].pBuffer       = _acUpBuffer;
 12229              		.loc 1 328 3 is_stmt 1 view .LVU5245
 330:Core/Src/SEGGER_RTT.c ****   p->aUp[0].RdOff         = 0u;
 12230              		.loc 1 330 27 is_stmt 0 view .LVU5246
 12231 0088 4FF48061 		mov	r1, #1024
 328:Core/Src/SEGGER_RTT.c ****   p->aUp[0].pBuffer       = _acUpBuffer;
 12232              		.loc 1 328 27 view .LVU5247
 12233 008c 704B     		ldr	r3, .L573+8
 12234 008e AB61     		str	r3, [r5, #24]
 329:Core/Src/SEGGER_RTT.c ****   p->aUp[0].SizeOfBuffer  = BUFFER_SIZE_UP;
 12235              		.loc 1 329 3 is_stmt 1 view .LVU5248
 329:Core/Src/SEGGER_RTT.c ****   p->aUp[0].SizeOfBuffer  = BUFFER_SIZE_UP;
 12236              		.loc 1 329 27 is_stmt 0 view .LVU5249
 12237 0090 EA61     		str	r2, [r5, #28]
 330:Core/Src/SEGGER_RTT.c ****   p->aUp[0].RdOff         = 0u;
 12238              		.loc 1 330 3 is_stmt 1 view .LVU5250
 330:Core/Src/SEGGER_RTT.c ****   p->aUp[0].RdOff         = 0u;
 12239              		.loc 1 330 27 is_stmt 0 view .LVU5251
 12240 0092 2962     		str	r1, [r5, #32]
 331:Core/Src/SEGGER_RTT.c ****   p->aUp[0].WrOff         = 0u;
 12241              		.loc 1 331 3 is_stmt 1 view .LVU5252
 338:Core/Src/SEGGER_RTT.c ****   p->aDown[0].SizeOfBuffer  = BUFFER_SIZE_DOWN;
 12242              		.loc 1 338 29 is_stmt 0 view .LVU5253
 12243 0094 6F4A     		ldr	r2, .L573+12
 331:Core/Src/SEGGER_RTT.c ****   p->aUp[0].WrOff         = 0u;
 12244              		.loc 1 331 27 view .LVU5254
 12245 0096 AC62     		str	r4, [r5, #40]
 332:Core/Src/SEGGER_RTT.c ****   p->aUp[0].Flags         = SEGGER_RTT_MODE_DEFAULT;
 12246              		.loc 1 332 3 is_stmt 1 view .LVU5255
 332:Core/Src/SEGGER_RTT.c ****   p->aUp[0].Flags         = SEGGER_RTT_MODE_DEFAULT;
 12247              		.loc 1 332 27 is_stmt 0 view .LVU5256
 12248 0098 6C62     		str	r4, [r5, #36]
 333:Core/Src/SEGGER_RTT.c ****   //
 12249              		.loc 1 333 3 is_stmt 1 view .LVU5257
 333:Core/Src/SEGGER_RTT.c ****   //
 12250              		.loc 1 333 27 is_stmt 0 view .LVU5258
 12251 009a EC62     		str	r4, [r5, #44]
 337:Core/Src/SEGGER_RTT.c ****   p->aDown[0].pBuffer       = _acDownBuffer;
 12252              		.loc 1 337 3 is_stmt 1 view .LVU5259
 337:Core/Src/SEGGER_RTT.c ****   p->aDown[0].pBuffer       = _acDownBuffer;
 12253              		.loc 1 337 29 is_stmt 0 view .LVU5260
 12254 009c 2B66     		str	r3, [r5, #96]
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccSC4OZm.s 			page 330


 338:Core/Src/SEGGER_RTT.c ****   p->aDown[0].SizeOfBuffer  = BUFFER_SIZE_DOWN;
 12255              		.loc 1 338 3 is_stmt 1 view .LVU5261
 339:Core/Src/SEGGER_RTT.c ****   p->aDown[0].RdOff         = 0u;
 12256              		.loc 1 339 29 is_stmt 0 view .LVU5262
 12257 009e 1023     		movs	r3, #16
 338:Core/Src/SEGGER_RTT.c ****   p->aDown[0].SizeOfBuffer  = BUFFER_SIZE_DOWN;
 12258              		.loc 1 338 29 view .LVU5263
 12259 00a0 6A66     		str	r2, [r5, #100]
 339:Core/Src/SEGGER_RTT.c ****   p->aDown[0].RdOff         = 0u;
 12260              		.loc 1 339 3 is_stmt 1 view .LVU5264
 339:Core/Src/SEGGER_RTT.c ****   p->aDown[0].RdOff         = 0u;
 12261              		.loc 1 339 29 is_stmt 0 view .LVU5265
 12262 00a2 AB66     		str	r3, [r5, #104]
 340:Core/Src/SEGGER_RTT.c ****   p->aDown[0].WrOff         = 0u;
 12263              		.loc 1 340 3 is_stmt 1 view .LVU5266
 340:Core/Src/SEGGER_RTT.c ****   p->aDown[0].WrOff         = 0u;
 12264              		.loc 1 340 29 is_stmt 0 view .LVU5267
 12265 00a4 2C67     		str	r4, [r5, #112]
 341:Core/Src/SEGGER_RTT.c ****   p->aDown[0].Flags         = SEGGER_RTT_MODE_DEFAULT;
 12266              		.loc 1 341 3 is_stmt 1 view .LVU5268
 341:Core/Src/SEGGER_RTT.c ****   p->aDown[0].Flags         = SEGGER_RTT_MODE_DEFAULT;
 12267              		.loc 1 341 29 is_stmt 0 view .LVU5269
 12268 00a6 EC66     		str	r4, [r5, #108]
 342:Core/Src/SEGGER_RTT.c ****   //
 12269              		.loc 1 342 3 is_stmt 1 view .LVU5270
 342:Core/Src/SEGGER_RTT.c ****   //
 12270              		.loc 1 342 29 is_stmt 0 view .LVU5271
 12271 00a8 6C67     		str	r4, [r5, #116]
 348:Core/Src/SEGGER_RTT.c ****   for (i = 0; i < sizeof(_aInitStr) - 1; ++i) {
 12272              		.loc 1 348 3 is_stmt 1 view .LVU5272
 12273              		.syntax unified
 12274              	@ 348 "Core/Src/SEGGER_RTT.c" 1
 12275 00aa BFF35F8F 		dmb
 12276              	
 12277              	@ 0 "" 2
 348:Core/Src/SEGGER_RTT.c ****   for (i = 0; i < sizeof(_aInitStr) - 1; ++i) {
 12278              		.loc 1 348 13 view .LVU5273
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 12279              		.loc 1 349 3 view .LVU5274
 12280              	.LVL1155:
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 12281              		.loc 1 349 17 view .LVU5275
 350:Core/Src/SEGGER_RTT.c ****   }
 12282              		.loc 1 350 5 view .LVU5276
 350:Core/Src/SEGGER_RTT.c ****   }
 12283              		.loc 1 350 16 is_stmt 0 view .LVU5277
 12284              		.thumb
 12285              		.syntax unified
 12286 00ae 5323     		movs	r3, #83
 12287 00b0 2B70     		strb	r3, [r5]
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 12288              		.loc 1 349 42 is_stmt 1 view .LVU5278
 12289              	.LVL1156:
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 12290              		.loc 1 349 17 view .LVU5279
 350:Core/Src/SEGGER_RTT.c ****   }
 12291              		.loc 1 350 5 view .LVU5280
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccSC4OZm.s 			page 331


 350:Core/Src/SEGGER_RTT.c ****   }
 12292              		.loc 1 350 16 is_stmt 0 view .LVU5281
 12293 00b2 4722     		movs	r2, #71
 12294 00b4 4523     		movs	r3, #69
 12295 00b6 6B70     		strb	r3, [r5, #1]
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 12296              		.loc 1 349 42 is_stmt 1 view .LVU5282
 12297              	.LVL1157:
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 12298              		.loc 1 349 17 view .LVU5283
 350:Core/Src/SEGGER_RTT.c ****   }
 12299              		.loc 1 350 5 view .LVU5284
 350:Core/Src/SEGGER_RTT.c ****   }
 12300              		.loc 1 350 16 is_stmt 0 view .LVU5285
 12301 00b8 2021     		movs	r1, #32
 12302 00ba AA70     		strb	r2, [r5, #2]
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 12303              		.loc 1 349 42 is_stmt 1 view .LVU5286
 12304              	.LVL1158:
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 12305              		.loc 1 349 17 view .LVU5287
 350:Core/Src/SEGGER_RTT.c ****   }
 12306              		.loc 1 350 5 view .LVU5288
 350:Core/Src/SEGGER_RTT.c ****   }
 12307              		.loc 1 350 16 is_stmt 0 view .LVU5289
 12308 00bc EA70     		strb	r2, [r5, #3]
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 12309              		.loc 1 349 42 is_stmt 1 view .LVU5290
 12310              	.LVL1159:
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 12311              		.loc 1 349 17 view .LVU5291
 350:Core/Src/SEGGER_RTT.c ****   }
 12312              		.loc 1 350 5 view .LVU5292
 350:Core/Src/SEGGER_RTT.c ****   }
 12313              		.loc 1 350 16 is_stmt 0 view .LVU5293
 12314 00be 2B71     		strb	r3, [r5, #4]
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 12315              		.loc 1 349 42 is_stmt 1 view .LVU5294
 12316              	.LVL1160:
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 12317              		.loc 1 349 17 view .LVU5295
 350:Core/Src/SEGGER_RTT.c ****   }
 12318              		.loc 1 350 5 view .LVU5296
 350:Core/Src/SEGGER_RTT.c ****   }
 12319              		.loc 1 350 16 is_stmt 0 view .LVU5297
 12320 00c0 5222     		movs	r2, #82
 12321 00c2 5423     		movs	r3, #84
 12322 00c4 6A71     		strb	r2, [r5, #5]
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 12323              		.loc 1 349 42 is_stmt 1 view .LVU5298
 12324              	.LVL1161:
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 12325              		.loc 1 349 17 view .LVU5299
 350:Core/Src/SEGGER_RTT.c ****   }
 12326              		.loc 1 350 5 view .LVU5300
 350:Core/Src/SEGGER_RTT.c ****   }
 12327              		.loc 1 350 16 is_stmt 0 view .LVU5301
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccSC4OZm.s 			page 332


 12328 00c6 A971     		strb	r1, [r5, #6]
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 12329              		.loc 1 349 42 is_stmt 1 view .LVU5302
 12330              	.LVL1162:
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 12331              		.loc 1 349 17 view .LVU5303
 350:Core/Src/SEGGER_RTT.c ****   }
 12332              		.loc 1 350 5 view .LVU5304
 350:Core/Src/SEGGER_RTT.c ****   }
 12333              		.loc 1 350 16 is_stmt 0 view .LVU5305
 12334 00c8 EA71     		strb	r2, [r5, #7]
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 12335              		.loc 1 349 42 is_stmt 1 view .LVU5306
 12336              	.LVL1163:
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 12337              		.loc 1 349 17 view .LVU5307
 350:Core/Src/SEGGER_RTT.c ****   }
 12338              		.loc 1 350 5 view .LVU5308
 350:Core/Src/SEGGER_RTT.c ****   }
 12339              		.loc 1 350 16 is_stmt 0 view .LVU5309
 12340 00ca 2B72     		strb	r3, [r5, #8]
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 12341              		.loc 1 349 42 is_stmt 1 view .LVU5310
 12342              	.LVL1164:
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 12343              		.loc 1 349 17 view .LVU5311
 350:Core/Src/SEGGER_RTT.c ****   }
 12344              		.loc 1 350 5 view .LVU5312
 350:Core/Src/SEGGER_RTT.c ****   }
 12345              		.loc 1 350 16 is_stmt 0 view .LVU5313
 12346 00cc 6B72     		strb	r3, [r5, #9]
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 12347              		.loc 1 349 42 is_stmt 1 view .LVU5314
 12348              	.LVL1165:
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 12349              		.loc 1 349 17 view .LVU5315
 350:Core/Src/SEGGER_RTT.c ****   }
 12350              		.loc 1 350 5 view .LVU5316
 350:Core/Src/SEGGER_RTT.c ****   }
 12351              		.loc 1 350 16 is_stmt 0 view .LVU5317
 12352 00ce AC72     		strb	r4, [r5, #10]
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 12353              		.loc 1 349 42 is_stmt 1 view .LVU5318
 12354              	.LVL1166:
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 12355              		.loc 1 349 17 view .LVU5319
 350:Core/Src/SEGGER_RTT.c ****   }
 12356              		.loc 1 350 5 view .LVU5320
 350:Core/Src/SEGGER_RTT.c ****   }
 12357              		.loc 1 350 16 is_stmt 0 view .LVU5321
 12358 00d0 EC72     		strb	r4, [r5, #11]
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 12359              		.loc 1 349 42 is_stmt 1 view .LVU5322
 12360              	.LVL1167:
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 12361              		.loc 1 349 17 view .LVU5323
 350:Core/Src/SEGGER_RTT.c ****   }
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccSC4OZm.s 			page 333


 12362              		.loc 1 350 5 view .LVU5324
 350:Core/Src/SEGGER_RTT.c ****   }
 12363              		.loc 1 350 16 is_stmt 0 view .LVU5325
 12364 00d2 2C73     		strb	r4, [r5, #12]
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 12365              		.loc 1 349 42 is_stmt 1 view .LVU5326
 12366              	.LVL1168:
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 12367              		.loc 1 349 17 view .LVU5327
 350:Core/Src/SEGGER_RTT.c ****   }
 12368              		.loc 1 350 5 view .LVU5328
 350:Core/Src/SEGGER_RTT.c ****   }
 12369              		.loc 1 350 16 is_stmt 0 view .LVU5329
 12370 00d4 6C73     		strb	r4, [r5, #13]
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 12371              		.loc 1 349 42 is_stmt 1 view .LVU5330
 12372              	.LVL1169:
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 12373              		.loc 1 349 17 view .LVU5331
 350:Core/Src/SEGGER_RTT.c ****   }
 12374              		.loc 1 350 5 view .LVU5332
 350:Core/Src/SEGGER_RTT.c ****   }
 12375              		.loc 1 350 16 is_stmt 0 view .LVU5333
 12376 00d6 AC73     		strb	r4, [r5, #14]
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 12377              		.loc 1 349 42 is_stmt 1 view .LVU5334
 12378              	.LVL1170:
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 12379              		.loc 1 349 17 view .LVU5335
 350:Core/Src/SEGGER_RTT.c ****   }
 12380              		.loc 1 350 5 view .LVU5336
 350:Core/Src/SEGGER_RTT.c ****   }
 12381              		.loc 1 350 16 is_stmt 0 view .LVU5337
 12382 00d8 EC73     		strb	r4, [r5, #15]
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 12383              		.loc 1 349 42 is_stmt 1 view .LVU5338
 12384              	.LVL1171:
 349:Core/Src/SEGGER_RTT.c ****     p->acID[i] = _aInitStr[sizeof(_aInitStr) - 2 - i];  // Skip terminating \0 at the end of the ar
 12385              		.loc 1 349 17 view .LVU5339
 352:Core/Src/SEGGER_RTT.c **** }
 12386              		.loc 1 352 3 view .LVU5340
 12387              		.syntax unified
 12388              	@ 352 "Core/Src/SEGGER_RTT.c" 1
 12389 00da BFF35F8F 		dmb
 12390              	
 12391              	@ 0 "" 2
 352:Core/Src/SEGGER_RTT.c **** }
 12392              		.loc 1 352 13 view .LVU5341
 353:Core/Src/SEGGER_RTT.c **** 
 12393              		.loc 1 353 1 is_stmt 0 view .LVU5342
 12394              		.thumb
 12395              		.syntax unified
 12396 00de 97E7     		b	.L450
 12397              	.LVL1172:
 12398              	.L556:
 353:Core/Src/SEGGER_RTT.c **** 
 12399              		.loc 1 353 1 view .LVU5343
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccSC4OZm.s 			page 334


 12400              	.LBE646:
 12401              	.LBE645:
 12402              	.LBE776:
 12403              	.LBB777:
2000:Core/Src/SEGGER_RTT.c ****         Status = 0;
 12404              		.loc 1 2000 7 is_stmt 1 view .LVU5344
2000:Core/Src/SEGGER_RTT.c ****         Status = 0;
 12405              		.loc 1 2000 28 is_stmt 0 view .LVU5345
 12406 00e0 031D     		adds	r3, r0, #4
2000:Core/Src/SEGGER_RTT.c ****         Status = 0;
 12407              		.loc 1 2000 10 view .LVU5346
 12408 00e2 5B45     		cmp	r3, fp
 12409 00e4 40F25781 		bls	.L557
2001:Core/Src/SEGGER_RTT.c ****       } else {
 12410              		.loc 1 2001 16 view .LVU5347
 12411 00e8 3746     		mov	r7, r6
 12412 00ea BAE7     		b	.L456
 12413              	.L455:
2026:Core/Src/SEGGER_RTT.c ****       Status = (int)_WriteBlocking(pRing, s, FragLen);
 12414              		.loc 1 2026 7 is_stmt 1 view .LVU5348
 12415              	.LVL1173:
 12416              	.LBB664:
 12417              	.LBI664:
 504:Core/Src/SEGGER_RTT.c ****   unsigned char ac[2];
 12418              		.loc 1 504 13 view .LVU5349
 12419              	.LBB665:
 505:Core/Src/SEGGER_RTT.c **** 
 12420              		.loc 1 505 3 view .LVU5350
 507:Core/Src/SEGGER_RTT.c ****   ac[1] = _aTerminalId[TerminalId];  // Caller made already sure that TerminalId does not exceed ou
 12421              		.loc 1 507 3 view .LVU5351
 508:Core/Src/SEGGER_RTT.c ****   _WriteBlocking(pRing, (const char*)ac, 2u);
 12422              		.loc 1 508 23 is_stmt 0 view .LVU5352
 12423 00ec 5A4B     		ldr	r3, .L573+16
 12424 00ee 0293     		str	r3, [sp, #8]
 508:Core/Src/SEGGER_RTT.c ****   _WriteBlocking(pRing, (const char*)ac, 2u);
 12425              		.loc 1 508 9 view .LVU5353
 12426 00f0 13F80930 		ldrb	r3, [r3, r9]	@ zero_extendqisi2
 12427 00f4 8DF81530 		strb	r3, [sp, #21]
 507:Core/Src/SEGGER_RTT.c ****   ac[1] = _aTerminalId[TerminalId];  // Caller made already sure that TerminalId does not exceed ou
 12428              		.loc 1 507 9 view .LVU5354
 12429 00f8 FF23     		movs	r3, #255
 12430 00fa 8DF81430 		strb	r3, [sp, #20]
 508:Core/Src/SEGGER_RTT.c ****   _WriteBlocking(pRing, (const char*)ac, 2u);
 12431              		.loc 1 508 3 is_stmt 1 view .LVU5355
 509:Core/Src/SEGGER_RTT.c **** }
 12432              		.loc 1 509 3 view .LVU5356
 12433              	.LVL1174:
 12434              	.LBB666:
 12435              	.LBI666:
 374:Core/Src/SEGGER_RTT.c ****   unsigned NumBytesToWrite;
 12436              		.loc 1 374 17 view .LVU5357
 12437              	.LBB667:
 375:Core/Src/SEGGER_RTT.c ****   unsigned NumBytesWritten;
 12438              		.loc 1 375 3 view .LVU5358
 376:Core/Src/SEGGER_RTT.c ****   unsigned RdOff;
 12439              		.loc 1 376 3 view .LVU5359
 377:Core/Src/SEGGER_RTT.c ****   unsigned WrOff;
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccSC4OZm.s 			page 335


 12440              		.loc 1 377 3 view .LVU5360
 378:Core/Src/SEGGER_RTT.c ****   volatile char* pDst;
 12441              		.loc 1 378 3 view .LVU5361
 379:Core/Src/SEGGER_RTT.c ****   //
 12442              		.loc 1 379 3 view .LVU5362
 383:Core/Src/SEGGER_RTT.c ****   WrOff = pRing->WrOff;
 12443              		.loc 1 383 3 view .LVU5363
 384:Core/Src/SEGGER_RTT.c ****   do {
 12444              		.loc 1 384 3 view .LVU5364
 384:Core/Src/SEGGER_RTT.c ****   do {
 12445              		.loc 1 384 3 is_stmt 0 view .LVU5365
 12446              	.LBE667:
 12447              	.LBE666:
 12448              	.LBE665:
 12449              	.LBE664:
 12450              	.LBB677:
 12451              	.LBB656:
 537:Core/Src/SEGGER_RTT.c ****   } else {
 12452              		.loc 1 537 14 view .LVU5366
 12453 00fe 286A     		ldr	r0, [r5, #32]
 12454              	.LVL1175:
 537:Core/Src/SEGGER_RTT.c ****   } else {
 12455              		.loc 1 537 14 view .LVU5367
 12456 0100 05AB     		add	r3, sp, #20
 12457              	.LVL1176:
 537:Core/Src/SEGGER_RTT.c ****   } else {
 12458              		.loc 1 537 14 view .LVU5368
 12459 0102 0393     		str	r3, [sp, #12]
 12460 0104 B346     		mov	fp, r6
 12461              	.LVL1177:
 537:Core/Src/SEGGER_RTT.c ****   } else {
 12462              		.loc 1 537 14 view .LVU5369
 12463 0106 9946     		mov	r9, r3
 12464              	.LVL1178:
 12465              	.L498:
 537:Core/Src/SEGGER_RTT.c ****   } else {
 12466              		.loc 1 537 14 view .LVU5370
 12467              	.LBE656:
 12468              	.LBE677:
 12469              	.LBB678:
 12470              	.LBB674:
 12471              	.LBB671:
 12472              	.LBB668:
 385:Core/Src/SEGGER_RTT.c ****     RdOff = pRing->RdOff;                         // May be changed by host (debug probe) in the me
 12473              		.loc 1 385 3 is_stmt 1 view .LVU5371
 386:Core/Src/SEGGER_RTT.c ****     if (RdOff > WrOff) {
 12474              		.loc 1 386 5 view .LVU5372
 388:Core/Src/SEGGER_RTT.c ****     } else {
 12475              		.loc 1 388 7 view .LVU5373
 390:Core/Src/SEGGER_RTT.c ****     }
 12476              		.loc 1 390 7 view .LVU5374
 386:Core/Src/SEGGER_RTT.c ****     if (RdOff > WrOff) {
 12477              		.loc 1 386 11 is_stmt 0 view .LVU5375
 12478 0108 AB6A     		ldr	r3, [r5, #40]
 12479              	.LVL1179:
 387:Core/Src/SEGGER_RTT.c ****       NumBytesToWrite = RdOff - WrOff - 1u;
 12480              		.loc 1 387 5 is_stmt 1 view .LVU5376
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccSC4OZm.s 			page 336


 387:Core/Src/SEGGER_RTT.c ****       NumBytesToWrite = RdOff - WrOff - 1u;
 12481              		.loc 1 387 8 is_stmt 0 view .LVU5377
 12482 010a A342     		cmp	r3, r4
 388:Core/Src/SEGGER_RTT.c ****     } else {
 12483              		.loc 1 388 23 view .LVU5378
 12484 010c 03F1FF32 		add	r2, r3, #-1
 390:Core/Src/SEGGER_RTT.c ****     }
 12485              		.loc 1 390 23 view .LVU5379
 12486 0110 98BF     		it	ls
 12487 0112 03F1FF33 		addls	r3, r3, #-1
 12488              	.LVL1180:
 392:Core/Src/SEGGER_RTT.c ****     NumBytesToWrite = MIN(NumBytesToWrite, NumBytes);
 12489              		.loc 1 392 23 view .LVU5380
 12490 0116 A0EB040A 		sub	r10, r0, r4
 390:Core/Src/SEGGER_RTT.c ****     }
 12491              		.loc 1 390 23 view .LVU5381
 12492 011a 96BF     		itet	ls
 12493 011c 1B18     		addls	r3, r3, r0
 388:Core/Src/SEGGER_RTT.c ****     } else {
 12494              		.loc 1 388 23 view .LVU5382
 12495 011e 131B     		subhi	r3, r2, r4
 390:Core/Src/SEGGER_RTT.c ****     }
 12496              		.loc 1 390 23 view .LVU5383
 12497 0120 1B1B     		subls	r3, r3, r4
 12498              	.LVL1181:
 392:Core/Src/SEGGER_RTT.c ****     NumBytesToWrite = MIN(NumBytesToWrite, NumBytes);
 12499              		.loc 1 392 5 is_stmt 1 view .LVU5384
 393:Core/Src/SEGGER_RTT.c ****     pDst = (pRing->pBuffer + WrOff) + SEGGER_RTT_UNCACHED_OFF;
 12500              		.loc 1 393 5 view .LVU5385
 393:Core/Src/SEGGER_RTT.c ****     pDst = (pRing->pBuffer + WrOff) + SEGGER_RTT_UNCACHED_OFF;
 12501              		.loc 1 393 21 is_stmt 0 view .LVU5386
 12502 0122 DA45     		cmp	r10, fp
 12503 0124 28BF     		it	cs
 12504 0126 DA46     		movcs	r10, fp
 12505              	.LVL1182:
 393:Core/Src/SEGGER_RTT.c ****     pDst = (pRing->pBuffer + WrOff) + SEGGER_RTT_UNCACHED_OFF;
 12506              		.loc 1 393 21 view .LVU5387
 12507 0128 9A45     		cmp	r10, r3
 394:Core/Src/SEGGER_RTT.c **** #if SEGGER_RTT_MEMCPY_USE_BYTELOOP
 12508              		.loc 1 394 10 view .LVU5388
 12509 012a E869     		ldr	r0, [r5, #28]
 12510              	.LVL1183:
 393:Core/Src/SEGGER_RTT.c ****     pDst = (pRing->pBuffer + WrOff) + SEGGER_RTT_UNCACHED_OFF;
 12511              		.loc 1 393 21 view .LVU5389
 12512 012c 28BF     		it	cs
 12513 012e 9A46     		movcs	r10, r3
 12514              	.LVL1184:
 394:Core/Src/SEGGER_RTT.c **** #if SEGGER_RTT_MEMCPY_USE_BYTELOOP
 12515              		.loc 1 394 5 is_stmt 1 view .LVU5390
 403:Core/Src/SEGGER_RTT.c ****     NumBytesWritten += NumBytesToWrite;
 12516              		.loc 1 403 5 view .LVU5391
 12517 0130 4946     		mov	r1, r9
 12518 0132 2044     		add	r0, r0, r4
 12519              	.LVL1185:
 403:Core/Src/SEGGER_RTT.c ****     NumBytesWritten += NumBytesToWrite;
 12520              		.loc 1 403 5 is_stmt 0 view .LVU5392
 12521 0134 5246     		mov	r2, r10
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccSC4OZm.s 			page 337


 12522 0136 FFF7FEFF 		bl	memcpy
 12523              	.LVL1186:
 404:Core/Src/SEGGER_RTT.c ****     pBuffer         += NumBytesToWrite;
 12524              		.loc 1 404 5 is_stmt 1 view .LVU5393
 405:Core/Src/SEGGER_RTT.c ****     NumBytes        -= NumBytesToWrite;
 12525              		.loc 1 405 5 view .LVU5394
 409:Core/Src/SEGGER_RTT.c ****       WrOff = 0u;
 12526              		.loc 1 409 23 is_stmt 0 view .LVU5395
 12527 013a 286A     		ldr	r0, [r5, #32]
 407:Core/Src/SEGGER_RTT.c **** #endif
 12528              		.loc 1 407 21 view .LVU5396
 12529 013c 5444     		add	r4, r4, r10
 12530              	.LVL1187:
 412:Core/Src/SEGGER_RTT.c ****     pRing->WrOff = WrOff;
 12531              		.loc 1 412 5 is_stmt 1 view .LVU5397
 409:Core/Src/SEGGER_RTT.c ****       WrOff = 0u;
 12532              		.loc 1 409 8 is_stmt 0 view .LVU5398
 12533 013e 8442     		cmp	r4, r0
 405:Core/Src/SEGGER_RTT.c ****     NumBytes        -= NumBytesToWrite;
 12534              		.loc 1 405 21 view .LVU5399
 12535 0140 D144     		add	r9, r9, r10
 12536              	.LVL1188:
 406:Core/Src/SEGGER_RTT.c ****     WrOff           += NumBytesToWrite;
 12537              		.loc 1 406 5 is_stmt 1 view .LVU5400
 406:Core/Src/SEGGER_RTT.c ****     WrOff           += NumBytesToWrite;
 12538              		.loc 1 406 21 is_stmt 0 view .LVU5401
 12539 0142 ABEB0A0B 		sub	fp, fp, r10
 12540              	.LVL1189:
 407:Core/Src/SEGGER_RTT.c **** #endif
 12541              		.loc 1 407 5 is_stmt 1 view .LVU5402
 409:Core/Src/SEGGER_RTT.c ****       WrOff = 0u;
 12542              		.loc 1 409 5 view .LVU5403
 409:Core/Src/SEGGER_RTT.c ****       WrOff = 0u;
 12543              		.loc 1 409 8 is_stmt 0 view .LVU5404
 12544 0146 6BD0     		beq	.L558
 412:Core/Src/SEGGER_RTT.c ****     pRing->WrOff = WrOff;
 12545              		.loc 1 412 5 view .LVU5405
 12546              		.syntax unified
 12547              	@ 412 "Core/Src/SEGGER_RTT.c" 1
 12548 0148 BFF35F8F 		dmb
 12549              	
 12550              	@ 0 "" 2
 412:Core/Src/SEGGER_RTT.c ****     pRing->WrOff = WrOff;
 12551              		.loc 1 412 15 is_stmt 1 view .LVU5406
 413:Core/Src/SEGGER_RTT.c ****   } while (NumBytes);
 12552              		.loc 1 413 5 view .LVU5407
 413:Core/Src/SEGGER_RTT.c ****   } while (NumBytes);
 12553              		.loc 1 413 18 is_stmt 0 view .LVU5408
 12554              		.thumb
 12555              		.syntax unified
 12556 014c 6C62     		str	r4, [r5, #36]
 414:Core/Src/SEGGER_RTT.c ****   return NumBytesWritten;
 12557              		.loc 1 414 12 is_stmt 1 view .LVU5409
 12558 014e BBF1000F 		cmp	fp, #0
 12559 0152 D9D1     		bne	.L498
 12560              	.LVL1190:
 12561              	.L497:
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccSC4OZm.s 			page 338


 415:Core/Src/SEGGER_RTT.c **** }
 12562              		.loc 1 415 3 view .LVU5410
 415:Core/Src/SEGGER_RTT.c **** }
 12563              		.loc 1 415 3 is_stmt 0 view .LVU5411
 12564              	.LBE668:
 12565              	.LBE671:
 12566              	.LBE674:
 12567              	.LBE678:
2027:Core/Src/SEGGER_RTT.c ****       _PostTerminalSwitch(pRing, _ActiveTerminal);
 12568              		.loc 1 2027 7 is_stmt 1 view .LVU5412
 12569              	.LBB679:
 12570              	.LBI679:
 374:Core/Src/SEGGER_RTT.c ****   unsigned NumBytesToWrite;
 12571              		.loc 1 374 17 view .LVU5413
 12572              	.LBB680:
 375:Core/Src/SEGGER_RTT.c ****   unsigned NumBytesWritten;
 12573              		.loc 1 375 3 view .LVU5414
 376:Core/Src/SEGGER_RTT.c ****   unsigned RdOff;
 12574              		.loc 1 376 3 view .LVU5415
 377:Core/Src/SEGGER_RTT.c ****   unsigned WrOff;
 12575              		.loc 1 377 3 view .LVU5416
 378:Core/Src/SEGGER_RTT.c ****   volatile char* pDst;
 12576              		.loc 1 378 3 view .LVU5417
 379:Core/Src/SEGGER_RTT.c ****   //
 12577              		.loc 1 379 3 view .LVU5418
 383:Core/Src/SEGGER_RTT.c ****   WrOff = pRing->WrOff;
 12578              		.loc 1 383 3 view .LVU5419
 384:Core/Src/SEGGER_RTT.c ****   do {
 12579              		.loc 1 384 3 view .LVU5420
 383:Core/Src/SEGGER_RTT.c ****   WrOff = pRing->WrOff;
 12580              		.loc 1 383 19 is_stmt 0 view .LVU5421
 12581 0154 4FF0000B 		mov	fp, #0
 413:Core/Src/SEGGER_RTT.c ****   } while (NumBytes);
 12582              		.loc 1 413 18 view .LVU5422
 12583 0158 DA46     		mov	r10, fp
 12584              	.LVL1191:
 12585              	.L504:
 385:Core/Src/SEGGER_RTT.c ****     RdOff = pRing->RdOff;                         // May be changed by host (debug probe) in the me
 12586              		.loc 1 385 3 is_stmt 1 view .LVU5423
 386:Core/Src/SEGGER_RTT.c ****     if (RdOff > WrOff) {
 12587              		.loc 1 386 5 view .LVU5424
 388:Core/Src/SEGGER_RTT.c ****     } else {
 12588              		.loc 1 388 7 view .LVU5425
 390:Core/Src/SEGGER_RTT.c ****     }
 12589              		.loc 1 390 7 view .LVU5426
 386:Core/Src/SEGGER_RTT.c ****     if (RdOff > WrOff) {
 12590              		.loc 1 386 11 is_stmt 0 view .LVU5427
 12591 015a AB6A     		ldr	r3, [r5, #40]
 12592              	.LVL1192:
 387:Core/Src/SEGGER_RTT.c ****       NumBytesToWrite = RdOff - WrOff - 1u;
 12593              		.loc 1 387 5 is_stmt 1 view .LVU5428
 387:Core/Src/SEGGER_RTT.c ****       NumBytesToWrite = RdOff - WrOff - 1u;
 12594              		.loc 1 387 8 is_stmt 0 view .LVU5429
 12595 015c A342     		cmp	r3, r4
 388:Core/Src/SEGGER_RTT.c ****     } else {
 12596              		.loc 1 388 23 view .LVU5430
 12597 015e 03F1FF32 		add	r2, r3, #-1
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccSC4OZm.s 			page 339


 390:Core/Src/SEGGER_RTT.c ****     }
 12598              		.loc 1 390 23 view .LVU5431
 12599 0162 98BF     		it	ls
 12600 0164 03F1FF33 		addls	r3, r3, #-1
 12601              	.LVL1193:
 392:Core/Src/SEGGER_RTT.c ****     NumBytesToWrite = MIN(NumBytesToWrite, NumBytes);
 12602              		.loc 1 392 23 view .LVU5432
 12603 0168 A0EB0409 		sub	r9, r0, r4
 390:Core/Src/SEGGER_RTT.c ****     }
 12604              		.loc 1 390 23 view .LVU5433
 12605 016c 96BF     		itet	ls
 12606 016e 1B18     		addls	r3, r3, r0
 388:Core/Src/SEGGER_RTT.c ****     } else {
 12607              		.loc 1 388 23 view .LVU5434
 12608 0170 131B     		subhi	r3, r2, r4
 390:Core/Src/SEGGER_RTT.c ****     }
 12609              		.loc 1 390 23 view .LVU5435
 12610 0172 1B1B     		subls	r3, r3, r4
 12611              	.LVL1194:
 392:Core/Src/SEGGER_RTT.c ****     NumBytesToWrite = MIN(NumBytesToWrite, NumBytes);
 12612              		.loc 1 392 5 is_stmt 1 view .LVU5436
 393:Core/Src/SEGGER_RTT.c ****     pDst = (pRing->pBuffer + WrOff) + SEGGER_RTT_UNCACHED_OFF;
 12613              		.loc 1 393 5 view .LVU5437
 393:Core/Src/SEGGER_RTT.c ****     pDst = (pRing->pBuffer + WrOff) + SEGGER_RTT_UNCACHED_OFF;
 12614              		.loc 1 393 21 is_stmt 0 view .LVU5438
 12615 0174 B945     		cmp	r9, r7
 12616 0176 28BF     		it	cs
 12617 0178 B946     		movcs	r9, r7
 12618              	.LVL1195:
 393:Core/Src/SEGGER_RTT.c ****     pDst = (pRing->pBuffer + WrOff) + SEGGER_RTT_UNCACHED_OFF;
 12619              		.loc 1 393 21 view .LVU5439
 12620 017a 9945     		cmp	r9, r3
 394:Core/Src/SEGGER_RTT.c **** #if SEGGER_RTT_MEMCPY_USE_BYTELOOP
 12621              		.loc 1 394 10 view .LVU5440
 12622 017c E869     		ldr	r0, [r5, #28]
 12623              	.LVL1196:
 393:Core/Src/SEGGER_RTT.c ****     pDst = (pRing->pBuffer + WrOff) + SEGGER_RTT_UNCACHED_OFF;
 12624              		.loc 1 393 21 view .LVU5441
 12625 017e 28BF     		it	cs
 12626 0180 9946     		movcs	r9, r3
 12627              	.LVL1197:
 394:Core/Src/SEGGER_RTT.c **** #if SEGGER_RTT_MEMCPY_USE_BYTELOOP
 12628              		.loc 1 394 5 is_stmt 1 view .LVU5442
 403:Core/Src/SEGGER_RTT.c ****     NumBytesWritten += NumBytesToWrite;
 12629              		.loc 1 403 5 view .LVU5443
 12630 0182 4146     		mov	r1, r8
 12631 0184 2044     		add	r0, r0, r4
 12632              	.LVL1198:
 403:Core/Src/SEGGER_RTT.c ****     NumBytesWritten += NumBytesToWrite;
 12633              		.loc 1 403 5 is_stmt 0 view .LVU5444
 12634 0186 4A46     		mov	r2, r9
 12635 0188 FFF7FEFF 		bl	memcpy
 12636              	.LVL1199:
 404:Core/Src/SEGGER_RTT.c ****     pBuffer         += NumBytesToWrite;
 12637              		.loc 1 404 5 is_stmt 1 view .LVU5445
 409:Core/Src/SEGGER_RTT.c ****       WrOff = 0u;
 12638              		.loc 1 409 23 is_stmt 0 view .LVU5446
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccSC4OZm.s 			page 340


 12639 018c 286A     		ldr	r0, [r5, #32]
 407:Core/Src/SEGGER_RTT.c **** #endif
 12640              		.loc 1 407 21 view .LVU5447
 12641 018e 4C44     		add	r4, r4, r9
 12642              	.LVL1200:
 412:Core/Src/SEGGER_RTT.c ****     pRing->WrOff = WrOff;
 12643              		.loc 1 412 5 is_stmt 1 view .LVU5448
 409:Core/Src/SEGGER_RTT.c ****       WrOff = 0u;
 12644              		.loc 1 409 8 is_stmt 0 view .LVU5449
 12645 0190 8442     		cmp	r4, r0
 404:Core/Src/SEGGER_RTT.c ****     pBuffer         += NumBytesToWrite;
 12646              		.loc 1 404 21 view .LVU5450
 12647 0192 CB44     		add	fp, fp, r9
 12648              	.LVL1201:
 405:Core/Src/SEGGER_RTT.c ****     NumBytes        -= NumBytesToWrite;
 12649              		.loc 1 405 5 is_stmt 1 view .LVU5451
 405:Core/Src/SEGGER_RTT.c ****     NumBytes        -= NumBytesToWrite;
 12650              		.loc 1 405 21 is_stmt 0 view .LVU5452
 12651 0194 C844     		add	r8, r8, r9
 12652              	.LVL1202:
 406:Core/Src/SEGGER_RTT.c ****     WrOff           += NumBytesToWrite;
 12653              		.loc 1 406 5 is_stmt 1 view .LVU5453
 406:Core/Src/SEGGER_RTT.c ****     WrOff           += NumBytesToWrite;
 12654              		.loc 1 406 21 is_stmt 0 view .LVU5454
 12655 0196 A7EB0907 		sub	r7, r7, r9
 12656              	.LVL1203:
 407:Core/Src/SEGGER_RTT.c **** #endif
 12657              		.loc 1 407 5 is_stmt 1 view .LVU5455
 409:Core/Src/SEGGER_RTT.c ****       WrOff = 0u;
 12658              		.loc 1 409 5 view .LVU5456
 409:Core/Src/SEGGER_RTT.c ****       WrOff = 0u;
 12659              		.loc 1 409 8 is_stmt 0 view .LVU5457
 12660 019a 38D0     		beq	.L559
 412:Core/Src/SEGGER_RTT.c ****     pRing->WrOff = WrOff;
 12661              		.loc 1 412 5 view .LVU5458
 12662              		.syntax unified
 12663              	@ 412 "Core/Src/SEGGER_RTT.c" 1
 12664 019c BFF35F8F 		dmb
 12665              	
 12666              	@ 0 "" 2
 412:Core/Src/SEGGER_RTT.c ****     pRing->WrOff = WrOff;
 12667              		.loc 1 412 15 is_stmt 1 view .LVU5459
 413:Core/Src/SEGGER_RTT.c ****   } while (NumBytes);
 12668              		.loc 1 413 5 view .LVU5460
 413:Core/Src/SEGGER_RTT.c ****   } while (NumBytes);
 12669              		.loc 1 413 18 is_stmt 0 view .LVU5461
 12670              		.thumb
 12671              		.syntax unified
 12672 01a0 6C62     		str	r4, [r5, #36]
 414:Core/Src/SEGGER_RTT.c ****   return NumBytesWritten;
 12673              		.loc 1 414 12 is_stmt 1 view .LVU5462
 12674 01a2 002F     		cmp	r7, #0
 12675 01a4 D9D1     		bne	.L504
 12676              	.LVL1204:
 12677              	.L503:
 415:Core/Src/SEGGER_RTT.c **** }
 12678              		.loc 1 415 3 view .LVU5463
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccSC4OZm.s 			page 341


 415:Core/Src/SEGGER_RTT.c **** }
 12679              		.loc 1 415 3 is_stmt 0 view .LVU5464
 12680              	.LBE680:
 12681              	.LBE679:
2028:Core/Src/SEGGER_RTT.c ****       break;
 12682              		.loc 1 2028 7 view .LVU5465
 12683 01a6 2D4B     		ldr	r3, .L573+20
 12684              	.LBB683:
 12685              	.LBB684:
 508:Core/Src/SEGGER_RTT.c ****   _WriteBlocking(pRing, (const char*)ac, 2u);
 12686              		.loc 1 508 9 view .LVU5466
 12687 01a8 029A     		ldr	r2, [sp, #8]
 12688              	.LBE684:
 12689              	.LBE683:
2028:Core/Src/SEGGER_RTT.c ****       break;
 12690              		.loc 1 2028 7 view .LVU5467
 12691 01aa 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 12692              	.LBB692:
 12693              	.LBB689:
 508:Core/Src/SEGGER_RTT.c ****   _WriteBlocking(pRing, (const char*)ac, 2u);
 12694              		.loc 1 508 9 view .LVU5468
 12695 01ac DDF80C90 		ldr	r9, [sp, #12]
 12696 01b0 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 12697 01b2 8DF81530 		strb	r3, [sp, #21]
 507:Core/Src/SEGGER_RTT.c ****   ac[1] = _aTerminalId[TerminalId];  // Caller made already sure that TerminalId does not exceed ou
 12698              		.loc 1 507 9 view .LVU5469
 12699 01b6 FF23     		movs	r3, #255
 12700              	.LBE689:
 12701              	.LBE692:
2027:Core/Src/SEGGER_RTT.c ****       _PostTerminalSwitch(pRing, _ActiveTerminal);
 12702              		.loc 1 2027 14 view .LVU5470
 12703 01b8 5F46     		mov	r7, fp
 12704              	.LVL1205:
2028:Core/Src/SEGGER_RTT.c ****       break;
 12705              		.loc 1 2028 7 is_stmt 1 view .LVU5471
 12706              	.LBB693:
 12707              	.LBI683:
 504:Core/Src/SEGGER_RTT.c ****   unsigned char ac[2];
 12708              		.loc 1 504 13 view .LVU5472
 12709              	.LBB690:
 505:Core/Src/SEGGER_RTT.c **** 
 12710              		.loc 1 505 3 view .LVU5473
 507:Core/Src/SEGGER_RTT.c ****   ac[1] = _aTerminalId[TerminalId];  // Caller made already sure that TerminalId does not exceed ou
 12711              		.loc 1 507 3 view .LVU5474
 507:Core/Src/SEGGER_RTT.c ****   ac[1] = _aTerminalId[TerminalId];  // Caller made already sure that TerminalId does not exceed ou
 12712              		.loc 1 507 9 is_stmt 0 view .LVU5475
 12713 01ba 8DF81430 		strb	r3, [sp, #20]
 508:Core/Src/SEGGER_RTT.c ****   _WriteBlocking(pRing, (const char*)ac, 2u);
 12714              		.loc 1 508 3 is_stmt 1 view .LVU5476
 509:Core/Src/SEGGER_RTT.c **** }
 12715              		.loc 1 509 3 view .LVU5477
 12716              	.LVL1206:
 12717              	.LBB685:
 12718              	.LBI685:
 374:Core/Src/SEGGER_RTT.c ****   unsigned NumBytesToWrite;
 12719              		.loc 1 374 17 view .LVU5478
 12720              	.LBB686:
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccSC4OZm.s 			page 342


 375:Core/Src/SEGGER_RTT.c ****   unsigned NumBytesWritten;
 12721              		.loc 1 375 3 view .LVU5479
 376:Core/Src/SEGGER_RTT.c ****   unsigned RdOff;
 12722              		.loc 1 376 3 view .LVU5480
 377:Core/Src/SEGGER_RTT.c ****   unsigned WrOff;
 12723              		.loc 1 377 3 view .LVU5481
 378:Core/Src/SEGGER_RTT.c ****   volatile char* pDst;
 12724              		.loc 1 378 3 view .LVU5482
 379:Core/Src/SEGGER_RTT.c ****   //
 12725              		.loc 1 379 3 view .LVU5483
 383:Core/Src/SEGGER_RTT.c ****   WrOff = pRing->WrOff;
 12726              		.loc 1 383 3 view .LVU5484
 384:Core/Src/SEGGER_RTT.c ****   do {
 12727              		.loc 1 384 3 view .LVU5485
 413:Core/Src/SEGGER_RTT.c ****   } while (NumBytes);
 12728              		.loc 1 413 18 is_stmt 0 view .LVU5486
 12729 01be 4FF00008 		mov	r8, #0
 12730              	.LVL1207:
 12731              	.L510:
 385:Core/Src/SEGGER_RTT.c ****     RdOff = pRing->RdOff;                         // May be changed by host (debug probe) in the me
 12732              		.loc 1 385 3 is_stmt 1 view .LVU5487
 386:Core/Src/SEGGER_RTT.c ****     if (RdOff > WrOff) {
 12733              		.loc 1 386 5 view .LVU5488
 388:Core/Src/SEGGER_RTT.c ****     } else {
 12734              		.loc 1 388 7 view .LVU5489
 390:Core/Src/SEGGER_RTT.c ****     }
 12735              		.loc 1 390 7 view .LVU5490
 386:Core/Src/SEGGER_RTT.c ****     if (RdOff > WrOff) {
 12736              		.loc 1 386 11 is_stmt 0 view .LVU5491
 12737 01c2 AB6A     		ldr	r3, [r5, #40]
 12738              	.LVL1208:
 387:Core/Src/SEGGER_RTT.c ****       NumBytesToWrite = RdOff - WrOff - 1u;
 12739              		.loc 1 387 5 is_stmt 1 view .LVU5492
 387:Core/Src/SEGGER_RTT.c ****       NumBytesToWrite = RdOff - WrOff - 1u;
 12740              		.loc 1 387 8 is_stmt 0 view .LVU5493
 12741 01c4 A342     		cmp	r3, r4
 388:Core/Src/SEGGER_RTT.c ****     } else {
 12742              		.loc 1 388 23 view .LVU5494
 12743 01c6 03F1FF32 		add	r2, r3, #-1
 390:Core/Src/SEGGER_RTT.c ****     }
 12744              		.loc 1 390 23 view .LVU5495
 12745 01ca 98BF     		it	ls
 12746 01cc 03F1FF33 		addls	r3, r3, #-1
 12747              	.LVL1209:
 392:Core/Src/SEGGER_RTT.c ****     NumBytesToWrite = MIN(NumBytesToWrite, NumBytes);
 12748              		.loc 1 392 23 view .LVU5496
 12749 01d0 A0EB040A 		sub	r10, r0, r4
 390:Core/Src/SEGGER_RTT.c ****     }
 12750              		.loc 1 390 23 view .LVU5497
 12751 01d4 96BF     		itet	ls
 12752 01d6 1B18     		addls	r3, r3, r0
 388:Core/Src/SEGGER_RTT.c ****     } else {
 12753              		.loc 1 388 23 view .LVU5498
 12754 01d8 131B     		subhi	r3, r2, r4
 390:Core/Src/SEGGER_RTT.c ****     }
 12755              		.loc 1 390 23 view .LVU5499
 12756 01da 1B1B     		subls	r3, r3, r4
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccSC4OZm.s 			page 343


 12757              	.LVL1210:
 392:Core/Src/SEGGER_RTT.c ****     NumBytesToWrite = MIN(NumBytesToWrite, NumBytes);
 12758              		.loc 1 392 5 is_stmt 1 view .LVU5500
 393:Core/Src/SEGGER_RTT.c ****     pDst = (pRing->pBuffer + WrOff) + SEGGER_RTT_UNCACHED_OFF;
 12759              		.loc 1 393 5 view .LVU5501
 393:Core/Src/SEGGER_RTT.c ****     pDst = (pRing->pBuffer + WrOff) + SEGGER_RTT_UNCACHED_OFF;
 12760              		.loc 1 393 21 is_stmt 0 view .LVU5502
 12761 01dc B245     		cmp	r10, r6
 12762 01de 28BF     		it	cs
 12763 01e0 B246     		movcs	r10, r6
 12764              	.LVL1211:
 393:Core/Src/SEGGER_RTT.c ****     pDst = (pRing->pBuffer + WrOff) + SEGGER_RTT_UNCACHED_OFF;
 12765              		.loc 1 393 21 view .LVU5503
 12766 01e2 9A45     		cmp	r10, r3
 394:Core/Src/SEGGER_RTT.c **** #if SEGGER_RTT_MEMCPY_USE_BYTELOOP
 12767              		.loc 1 394 10 view .LVU5504
 12768 01e4 E869     		ldr	r0, [r5, #28]
 12769              	.LVL1212:
 393:Core/Src/SEGGER_RTT.c ****     pDst = (pRing->pBuffer + WrOff) + SEGGER_RTT_UNCACHED_OFF;
 12770              		.loc 1 393 21 view .LVU5505
 12771 01e6 28BF     		it	cs
 12772 01e8 9A46     		movcs	r10, r3
 12773              	.LVL1213:
 394:Core/Src/SEGGER_RTT.c **** #if SEGGER_RTT_MEMCPY_USE_BYTELOOP
 12774              		.loc 1 394 5 is_stmt 1 view .LVU5506
 403:Core/Src/SEGGER_RTT.c ****     NumBytesWritten += NumBytesToWrite;
 12775              		.loc 1 403 5 view .LVU5507
 12776 01ea 4946     		mov	r1, r9
 12777 01ec 2044     		add	r0, r0, r4
 12778              	.LVL1214:
 403:Core/Src/SEGGER_RTT.c ****     NumBytesWritten += NumBytesToWrite;
 12779              		.loc 1 403 5 is_stmt 0 view .LVU5508
 12780 01ee 5246     		mov	r2, r10
 12781 01f0 FFF7FEFF 		bl	memcpy
 12782              	.LVL1215:
 404:Core/Src/SEGGER_RTT.c ****     pBuffer         += NumBytesToWrite;
 12783              		.loc 1 404 5 is_stmt 1 view .LVU5509
 405:Core/Src/SEGGER_RTT.c ****     NumBytes        -= NumBytesToWrite;
 12784              		.loc 1 405 5 view .LVU5510
 409:Core/Src/SEGGER_RTT.c ****       WrOff = 0u;
 12785              		.loc 1 409 23 is_stmt 0 view .LVU5511
 12786 01f4 286A     		ldr	r0, [r5, #32]
 407:Core/Src/SEGGER_RTT.c **** #endif
 12787              		.loc 1 407 21 view .LVU5512
 12788 01f6 5444     		add	r4, r4, r10
 12789              	.LVL1216:
 412:Core/Src/SEGGER_RTT.c ****     pRing->WrOff = WrOff;
 12790              		.loc 1 412 5 is_stmt 1 view .LVU5513
 409:Core/Src/SEGGER_RTT.c ****       WrOff = 0u;
 12791              		.loc 1 409 8 is_stmt 0 view .LVU5514
 12792 01f8 8442     		cmp	r4, r0
 405:Core/Src/SEGGER_RTT.c ****     NumBytes        -= NumBytesToWrite;
 12793              		.loc 1 405 21 view .LVU5515
 12794 01fa D144     		add	r9, r9, r10
 12795              	.LVL1217:
 406:Core/Src/SEGGER_RTT.c ****     WrOff           += NumBytesToWrite;
 12796              		.loc 1 406 5 is_stmt 1 view .LVU5516
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccSC4OZm.s 			page 344


 406:Core/Src/SEGGER_RTT.c ****     WrOff           += NumBytesToWrite;
 12797              		.loc 1 406 21 is_stmt 0 view .LVU5517
 12798 01fc A6EB0A06 		sub	r6, r6, r10
 12799              	.LVL1218:
 407:Core/Src/SEGGER_RTT.c **** #endif
 12800              		.loc 1 407 5 is_stmt 1 view .LVU5518
 409:Core/Src/SEGGER_RTT.c ****       WrOff = 0u;
 12801              		.loc 1 409 5 view .LVU5519
 409:Core/Src/SEGGER_RTT.c ****       WrOff = 0u;
 12802              		.loc 1 409 8 is_stmt 0 view .LVU5520
 12803 0200 18D0     		beq	.L560
 412:Core/Src/SEGGER_RTT.c ****     pRing->WrOff = WrOff;
 12804              		.loc 1 412 5 view .LVU5521
 12805              		.syntax unified
 12806              	@ 412 "Core/Src/SEGGER_RTT.c" 1
 12807 0202 BFF35F8F 		dmb
 12808              	
 12809              	@ 0 "" 2
 412:Core/Src/SEGGER_RTT.c ****     pRing->WrOff = WrOff;
 12810              		.loc 1 412 15 is_stmt 1 view .LVU5522
 413:Core/Src/SEGGER_RTT.c ****   } while (NumBytes);
 12811              		.loc 1 413 5 view .LVU5523
 413:Core/Src/SEGGER_RTT.c ****   } while (NumBytes);
 12812              		.loc 1 413 18 is_stmt 0 view .LVU5524
 12813              		.thumb
 12814              		.syntax unified
 12815 0206 6C62     		str	r4, [r5, #36]
 414:Core/Src/SEGGER_RTT.c ****   return NumBytesWritten;
 12816              		.loc 1 414 12 is_stmt 1 view .LVU5525
 12817 0208 002E     		cmp	r6, #0
 12818 020a DAD1     		bne	.L510
 12819 020c 29E7     		b	.L456
 12820              	.LVL1219:
 12821              	.L559:
 414:Core/Src/SEGGER_RTT.c ****   return NumBytesWritten;
 12822              		.loc 1 414 12 is_stmt 0 view .LVU5526
 12823              	.LBE686:
 12824              	.LBE685:
 12825              	.LBE690:
 12826              	.LBE693:
 12827              	.LBB694:
 12828              	.LBB681:
 412:Core/Src/SEGGER_RTT.c ****     pRing->WrOff = WrOff;
 12829              		.loc 1 412 5 is_stmt 1 view .LVU5527
 12830              		.syntax unified
 12831              	@ 412 "Core/Src/SEGGER_RTT.c" 1
 12832 020e BFF35F8F 		dmb
 12833              	
 12834              	@ 0 "" 2
 412:Core/Src/SEGGER_RTT.c ****     pRing->WrOff = WrOff;
 12835              		.loc 1 412 15 view .LVU5528
 413:Core/Src/SEGGER_RTT.c ****   } while (NumBytes);
 12836              		.loc 1 413 5 view .LVU5529
 413:Core/Src/SEGGER_RTT.c ****   } while (NumBytes);
 12837              		.loc 1 413 18 is_stmt 0 view .LVU5530
 12838              		.thumb
 12839              		.syntax unified
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccSC4OZm.s 			page 345


 12840 0212 C5F824A0 		str	r10, [r5, #36]
 414:Core/Src/SEGGER_RTT.c ****   return NumBytesWritten;
 12841              		.loc 1 414 12 is_stmt 1 view .LVU5531
 12842 0216 002F     		cmp	r7, #0
 12843 0218 00F07781 		beq	.L561
 410:Core/Src/SEGGER_RTT.c ****     }
 12844              		.loc 1 410 13 is_stmt 0 view .LVU5532
 12845 021c 0024     		movs	r4, #0
 12846 021e 9CE7     		b	.L504
 12847              	.LVL1220:
 12848              	.L558:
 410:Core/Src/SEGGER_RTT.c ****     }
 12849              		.loc 1 410 13 view .LVU5533
 12850              	.LBE681:
 12851              	.LBE694:
 12852              	.LBB695:
 12853              	.LBB675:
 12854              	.LBB672:
 12855              	.LBB669:
 412:Core/Src/SEGGER_RTT.c ****     pRing->WrOff = WrOff;
 12856              		.loc 1 412 5 is_stmt 1 view .LVU5534
 12857              		.syntax unified
 12858              	@ 412 "Core/Src/SEGGER_RTT.c" 1
 12859 0220 BFF35F8F 		dmb
 12860              	
 12861              	@ 0 "" 2
 412:Core/Src/SEGGER_RTT.c ****     pRing->WrOff = WrOff;
 12862              		.loc 1 412 15 view .LVU5535
 413:Core/Src/SEGGER_RTT.c ****   } while (NumBytes);
 12863              		.loc 1 413 5 view .LVU5536
 413:Core/Src/SEGGER_RTT.c ****   } while (NumBytes);
 12864              		.loc 1 413 18 is_stmt 0 view .LVU5537
 12865              		.thumb
 12866              		.syntax unified
 12867 0224 0023     		movs	r3, #0
 12868 0226 6B62     		str	r3, [r5, #36]
 414:Core/Src/SEGGER_RTT.c ****   return NumBytesWritten;
 12869              		.loc 1 414 12 is_stmt 1 view .LVU5538
 12870 0228 BBF1000F 		cmp	fp, #0
 12871 022c 00F06F81 		beq	.L562
 410:Core/Src/SEGGER_RTT.c ****     }
 12872              		.loc 1 410 13 is_stmt 0 view .LVU5539
 12873 0230 0024     		movs	r4, #0
 12874 0232 69E7     		b	.L498
 12875              	.LVL1221:
 12876              	.L560:
 410:Core/Src/SEGGER_RTT.c ****     }
 12877              		.loc 1 410 13 view .LVU5540
 12878              	.LBE669:
 12879              	.LBE672:
 12880              	.LBE675:
 12881              	.LBE695:
 12882              	.LBB696:
 12883              	.LBB691:
 12884              	.LBB688:
 12885              	.LBB687:
 412:Core/Src/SEGGER_RTT.c ****     pRing->WrOff = WrOff;
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccSC4OZm.s 			page 346


 12886              		.loc 1 412 5 is_stmt 1 view .LVU5541
 12887              		.syntax unified
 12888              	@ 412 "Core/Src/SEGGER_RTT.c" 1
 12889 0234 BFF35F8F 		dmb
 12890              	
 12891              	@ 0 "" 2
 412:Core/Src/SEGGER_RTT.c ****     pRing->WrOff = WrOff;
 12892              		.loc 1 412 15 view .LVU5542
 413:Core/Src/SEGGER_RTT.c ****   } while (NumBytes);
 12893              		.loc 1 413 5 view .LVU5543
 413:Core/Src/SEGGER_RTT.c ****   } while (NumBytes);
 12894              		.loc 1 413 18 is_stmt 0 view .LVU5544
 12895              		.thumb
 12896              		.syntax unified
 12897 0238 C5F82480 		str	r8, [r5, #36]
 414:Core/Src/SEGGER_RTT.c ****   return NumBytesWritten;
 12898              		.loc 1 414 12 is_stmt 1 view .LVU5545
 12899 023c 002E     		cmp	r6, #0
 12900 023e 3FF410AF 		beq	.L456
 410:Core/Src/SEGGER_RTT.c ****     }
 12901              		.loc 1 410 13 is_stmt 0 view .LVU5546
 12902 0242 0024     		movs	r4, #0
 12903 0244 BDE7     		b	.L510
 12904              	.L574:
 12905 0246 00BF     		.align	2
 12906              	.L573:
 12907 0248 00000000 		.word	.LANCHOR0
 12908 024c 00000000 		.word	.LANCHOR1
 12909 0250 00000000 		.word	.LC0
 12910 0254 00000000 		.word	.LANCHOR2
 12911 0258 00000000 		.word	.LANCHOR3
 12912 025c 00000000 		.word	.LANCHOR4
 12913              	.LVL1222:
 12914              	.L454:
 410:Core/Src/SEGGER_RTT.c ****     }
 12915              		.loc 1 410 13 view .LVU5547
 12916              	.LBE687:
 12917              	.LBE688:
 12918              	.LBE691:
 12919              	.LBE696:
2014:Core/Src/SEGGER_RTT.c ****         Status = -1;
 12920              		.loc 1 2014 7 is_stmt 1 view .LVU5548
2014:Core/Src/SEGGER_RTT.c ****         Status = -1;
 12921              		.loc 1 2014 10 is_stmt 0 view .LVU5549
 12922 0260 BBF1030F 		cmp	fp, #3
 12923 0264 7FF6FBAE 		bls	.L517
2017:Core/Src/SEGGER_RTT.c ****         Status = (int)_WriteBlocking(pRing, s, (FragLen < (Avail - 4u)) ? FragLen : (Avail - 4u));
 12924              		.loc 1 2017 9 is_stmt 1 view .LVU5550
 12925              	.LVL1223:
 12926              	.LBB697:
 12927              	.LBI697:
 504:Core/Src/SEGGER_RTT.c ****   unsigned char ac[2];
 12928              		.loc 1 504 13 view .LVU5551
 12929              	.LBB698:
 505:Core/Src/SEGGER_RTT.c **** 
 12930              		.loc 1 505 3 view .LVU5552
 507:Core/Src/SEGGER_RTT.c ****   ac[1] = _aTerminalId[TerminalId];  // Caller made already sure that TerminalId does not exceed ou
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccSC4OZm.s 			page 347


 12931              		.loc 1 507 3 view .LVU5553
 508:Core/Src/SEGGER_RTT.c ****   _WriteBlocking(pRing, (const char*)ac, 2u);
 12932              		.loc 1 508 23 is_stmt 0 view .LVU5554
 12933 0268 AF4B     		ldr	r3, .L575
 12934 026a 0293     		str	r3, [sp, #8]
 508:Core/Src/SEGGER_RTT.c ****   _WriteBlocking(pRing, (const char*)ac, 2u);
 12935              		.loc 1 508 9 view .LVU5555
 12936 026c 13F80930 		ldrb	r3, [r3, r9]	@ zero_extendqisi2
 12937 0270 8DF81530 		strb	r3, [sp, #21]
 507:Core/Src/SEGGER_RTT.c ****   ac[1] = _aTerminalId[TerminalId];  // Caller made already sure that TerminalId does not exceed ou
 12938              		.loc 1 507 9 view .LVU5556
 12939 0274 FF23     		movs	r3, #255
 12940 0276 8DF81430 		strb	r3, [sp, #20]
 508:Core/Src/SEGGER_RTT.c ****   _WriteBlocking(pRing, (const char*)ac, 2u);
 12941              		.loc 1 508 3 is_stmt 1 view .LVU5557
 509:Core/Src/SEGGER_RTT.c **** }
 12942              		.loc 1 509 3 view .LVU5558
 12943              	.LVL1224:
 12944              	.LBB699:
 12945              	.LBI699:
 374:Core/Src/SEGGER_RTT.c ****   unsigned NumBytesToWrite;
 12946              		.loc 1 374 17 view .LVU5559
 12947              	.LBB700:
 375:Core/Src/SEGGER_RTT.c ****   unsigned NumBytesWritten;
 12948              		.loc 1 375 3 view .LVU5560
 376:Core/Src/SEGGER_RTT.c ****   unsigned RdOff;
 12949              		.loc 1 376 3 view .LVU5561
 377:Core/Src/SEGGER_RTT.c ****   unsigned WrOff;
 12950              		.loc 1 377 3 view .LVU5562
 378:Core/Src/SEGGER_RTT.c ****   volatile char* pDst;
 12951              		.loc 1 378 3 view .LVU5563
 379:Core/Src/SEGGER_RTT.c ****   //
 12952              		.loc 1 379 3 view .LVU5564
 383:Core/Src/SEGGER_RTT.c ****   WrOff = pRing->WrOff;
 12953              		.loc 1 383 3 view .LVU5565
 384:Core/Src/SEGGER_RTT.c ****   do {
 12954              		.loc 1 384 3 view .LVU5566
 384:Core/Src/SEGGER_RTT.c ****   do {
 12955              		.loc 1 384 3 is_stmt 0 view .LVU5567
 12956              	.LBE700:
 12957              	.LBE699:
 12958              	.LBE698:
 12959              	.LBE697:
 12960              	.LBB710:
 12961              	.LBB657:
 537:Core/Src/SEGGER_RTT.c ****   } else {
 12962              		.loc 1 537 14 view .LVU5568
 12963 027a 296A     		ldr	r1, [r5, #32]
 12964 027c 05AB     		add	r3, sp, #20
 12965              	.LVL1225:
 537:Core/Src/SEGGER_RTT.c ****   } else {
 12966              		.loc 1 537 14 view .LVU5569
 12967 027e 0393     		str	r3, [sp, #12]
 12968 0280 0226     		movs	r6, #2
 12969 0282 9946     		mov	r9, r3
 12970              	.LVL1226:
 537:Core/Src/SEGGER_RTT.c ****   } else {
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccSC4OZm.s 			page 348


 12971              		.loc 1 537 14 view .LVU5570
 12972              	.LBE657:
 12973              	.LBE710:
 12974              	.LBB711:
 12975              	.LBB707:
 12976              	.LBB704:
 12977              	.LBB701:
 413:Core/Src/SEGGER_RTT.c ****   } while (NumBytes);
 12978              		.loc 1 413 18 view .LVU5571
 12979 0284 4FF0000A 		mov	r10, #0
 12980              	.LVL1227:
 12981              	.L480:
 385:Core/Src/SEGGER_RTT.c ****     RdOff = pRing->RdOff;                         // May be changed by host (debug probe) in the me
 12982              		.loc 1 385 3 is_stmt 1 view .LVU5572
 386:Core/Src/SEGGER_RTT.c ****     if (RdOff > WrOff) {
 12983              		.loc 1 386 5 view .LVU5573
 388:Core/Src/SEGGER_RTT.c ****     } else {
 12984              		.loc 1 388 7 view .LVU5574
 390:Core/Src/SEGGER_RTT.c ****     }
 12985              		.loc 1 390 7 view .LVU5575
 386:Core/Src/SEGGER_RTT.c ****     if (RdOff > WrOff) {
 12986              		.loc 1 386 11 is_stmt 0 view .LVU5576
 12987 0288 AB6A     		ldr	r3, [r5, #40]
 12988              	.LVL1228:
 387:Core/Src/SEGGER_RTT.c ****       NumBytesToWrite = RdOff - WrOff - 1u;
 12989              		.loc 1 387 5 is_stmt 1 view .LVU5577
 394:Core/Src/SEGGER_RTT.c **** #if SEGGER_RTT_MEMCPY_USE_BYTELOOP
 12990              		.loc 1 394 10 is_stmt 0 view .LVU5578
 12991 028a E869     		ldr	r0, [r5, #28]
 387:Core/Src/SEGGER_RTT.c ****       NumBytesToWrite = RdOff - WrOff - 1u;
 12992              		.loc 1 387 8 view .LVU5579
 12993 028c A342     		cmp	r3, r4
 388:Core/Src/SEGGER_RTT.c ****     } else {
 12994              		.loc 1 388 23 view .LVU5580
 12995 028e 03F1FF32 		add	r2, r3, #-1
 390:Core/Src/SEGGER_RTT.c ****     }
 12996              		.loc 1 390 23 view .LVU5581
 12997 0292 96BF     		itet	ls
 12998 0294 03F1FF33 		addls	r3, r3, #-1
 12999              	.LVL1229:
 388:Core/Src/SEGGER_RTT.c ****     } else {
 13000              		.loc 1 388 23 view .LVU5582
 13001 0298 131B     		subhi	r3, r2, r4
 390:Core/Src/SEGGER_RTT.c ****     }
 13002              		.loc 1 390 23 view .LVU5583
 13003 029a 5B18     		addls	r3, r3, r1
 392:Core/Src/SEGGER_RTT.c ****     NumBytesToWrite = MIN(NumBytesToWrite, NumBytes);
 13004              		.loc 1 392 23 view .LVU5584
 13005 029c A1EB0402 		sub	r2, r1, r4
 390:Core/Src/SEGGER_RTT.c ****     }
 13006              		.loc 1 390 23 view .LVU5585
 13007 02a0 98BF     		it	ls
 13008 02a2 1B1B     		subls	r3, r3, r4
 13009              	.LVL1230:
 392:Core/Src/SEGGER_RTT.c ****     NumBytesToWrite = MIN(NumBytesToWrite, NumBytes);
 13010              		.loc 1 392 5 is_stmt 1 view .LVU5586
 393:Core/Src/SEGGER_RTT.c ****     pDst = (pRing->pBuffer + WrOff) + SEGGER_RTT_UNCACHED_OFF;
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccSC4OZm.s 			page 349


 13011              		.loc 1 393 5 view .LVU5587
 393:Core/Src/SEGGER_RTT.c ****     pDst = (pRing->pBuffer + WrOff) + SEGGER_RTT_UNCACHED_OFF;
 13012              		.loc 1 393 21 is_stmt 0 view .LVU5588
 13013 02a4 B242     		cmp	r2, r6
 13014 02a6 28BF     		it	cs
 13015 02a8 3246     		movcs	r2, r6
 13016              	.LVL1231:
 393:Core/Src/SEGGER_RTT.c ****     pDst = (pRing->pBuffer + WrOff) + SEGGER_RTT_UNCACHED_OFF;
 13017              		.loc 1 393 21 view .LVU5589
 13018 02aa 9A42     		cmp	r2, r3
 13019 02ac 28BF     		it	cs
 13020 02ae 1A46     		movcs	r2, r3
 13021              	.LVL1232:
 394:Core/Src/SEGGER_RTT.c **** #if SEGGER_RTT_MEMCPY_USE_BYTELOOP
 13022              		.loc 1 394 5 is_stmt 1 view .LVU5590
 403:Core/Src/SEGGER_RTT.c ****     NumBytesWritten += NumBytesToWrite;
 13023              		.loc 1 403 5 view .LVU5591
 13024 02b0 4946     		mov	r1, r9
 13025 02b2 2044     		add	r0, r0, r4
 13026              	.LVL1233:
 406:Core/Src/SEGGER_RTT.c ****     WrOff           += NumBytesToWrite;
 13027              		.loc 1 406 21 is_stmt 0 view .LVU5592
 13028 02b4 B61A     		subs	r6, r6, r2
 13029              	.LVL1234:
 407:Core/Src/SEGGER_RTT.c **** #endif
 13030              		.loc 1 407 21 view .LVU5593
 13031 02b6 1444     		add	r4, r4, r2
 13032              	.LVL1235:
 405:Core/Src/SEGGER_RTT.c ****     NumBytes        -= NumBytesToWrite;
 13033              		.loc 1 405 21 view .LVU5594
 13034 02b8 9144     		add	r9, r9, r2
 13035              	.LVL1236:
 403:Core/Src/SEGGER_RTT.c ****     NumBytesWritten += NumBytesToWrite;
 13036              		.loc 1 403 5 view .LVU5595
 13037 02ba FFF7FEFF 		bl	memcpy
 13038              	.LVL1237:
 404:Core/Src/SEGGER_RTT.c ****     pBuffer         += NumBytesToWrite;
 13039              		.loc 1 404 5 is_stmt 1 view .LVU5596
 405:Core/Src/SEGGER_RTT.c ****     NumBytes        -= NumBytesToWrite;
 13040              		.loc 1 405 5 view .LVU5597
 406:Core/Src/SEGGER_RTT.c ****     WrOff           += NumBytesToWrite;
 13041              		.loc 1 406 5 view .LVU5598
 407:Core/Src/SEGGER_RTT.c **** #endif
 13042              		.loc 1 407 5 view .LVU5599
 409:Core/Src/SEGGER_RTT.c ****       WrOff = 0u;
 13043              		.loc 1 409 5 view .LVU5600
 412:Core/Src/SEGGER_RTT.c ****     pRing->WrOff = WrOff;
 13044              		.loc 1 412 5 view .LVU5601
 409:Core/Src/SEGGER_RTT.c ****       WrOff = 0u;
 13045              		.loc 1 409 23 is_stmt 0 view .LVU5602
 13046 02be 296A     		ldr	r1, [r5, #32]
 409:Core/Src/SEGGER_RTT.c ****       WrOff = 0u;
 13047              		.loc 1 409 8 view .LVU5603
 13048 02c0 8C42     		cmp	r4, r1
 13049 02c2 00F0FC80 		beq	.L563
 412:Core/Src/SEGGER_RTT.c ****     pRing->WrOff = WrOff;
 13050              		.loc 1 412 5 view .LVU5604
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccSC4OZm.s 			page 350


 13051              		.syntax unified
 13052              	@ 412 "Core/Src/SEGGER_RTT.c" 1
 13053 02c6 BFF35F8F 		dmb
 13054              	
 13055              	@ 0 "" 2
 412:Core/Src/SEGGER_RTT.c ****     pRing->WrOff = WrOff;
 13056              		.loc 1 412 15 is_stmt 1 view .LVU5605
 413:Core/Src/SEGGER_RTT.c ****   } while (NumBytes);
 13057              		.loc 1 413 5 view .LVU5606
 413:Core/Src/SEGGER_RTT.c ****   } while (NumBytes);
 13058              		.loc 1 413 18 is_stmt 0 view .LVU5607
 13059              		.thumb
 13060              		.syntax unified
 13061 02ca 6C62     		str	r4, [r5, #36]
 414:Core/Src/SEGGER_RTT.c ****   return NumBytesWritten;
 13062              		.loc 1 414 12 is_stmt 1 view .LVU5608
 13063 02cc 002E     		cmp	r6, #0
 13064 02ce DBD1     		bne	.L480
 13065              	.LVL1238:
 13066              	.L479:
 415:Core/Src/SEGGER_RTT.c **** }
 13067              		.loc 1 415 3 view .LVU5609
 415:Core/Src/SEGGER_RTT.c **** }
 13068              		.loc 1 415 3 is_stmt 0 view .LVU5610
 13069              	.LBE701:
 13070              	.LBE704:
 13071              	.LBE707:
 13072              	.LBE711:
2018:Core/Src/SEGGER_RTT.c ****         _PostTerminalSwitch(pRing, _ActiveTerminal);
 13073              		.loc 1 2018 9 is_stmt 1 view .LVU5611
2018:Core/Src/SEGGER_RTT.c ****         _PostTerminalSwitch(pRing, _ActiveTerminal);
 13074              		.loc 1 2018 66 is_stmt 0 view .LVU5612
 13075 02d0 ABF1040B 		sub	fp, fp, #4
 13076              	.LVL1239:
2018:Core/Src/SEGGER_RTT.c ****         _PostTerminalSwitch(pRing, _ActiveTerminal);
 13077              		.loc 1 2018 23 view .LVU5613
 13078 02d4 BB45     		cmp	fp, r7
 13079 02d6 28BF     		it	cs
 13080 02d8 BB46     		movcs	fp, r7
 13081              	.LVL1240:
 13082              	.LBB712:
 13083              	.LBI712:
 374:Core/Src/SEGGER_RTT.c ****   unsigned NumBytesToWrite;
 13084              		.loc 1 374 17 is_stmt 1 view .LVU5614
 13085              	.LBB713:
 375:Core/Src/SEGGER_RTT.c ****   unsigned NumBytesWritten;
 13086              		.loc 1 375 3 view .LVU5615
 376:Core/Src/SEGGER_RTT.c ****   unsigned RdOff;
 13087              		.loc 1 376 3 view .LVU5616
 377:Core/Src/SEGGER_RTT.c ****   unsigned WrOff;
 13088              		.loc 1 377 3 view .LVU5617
 378:Core/Src/SEGGER_RTT.c ****   volatile char* pDst;
 13089              		.loc 1 378 3 view .LVU5618
 379:Core/Src/SEGGER_RTT.c ****   //
 13090              		.loc 1 379 3 view .LVU5619
 383:Core/Src/SEGGER_RTT.c ****   WrOff = pRing->WrOff;
 13091              		.loc 1 383 3 view .LVU5620
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccSC4OZm.s 			page 351


 384:Core/Src/SEGGER_RTT.c ****   do {
 13092              		.loc 1 384 3 view .LVU5621
 383:Core/Src/SEGGER_RTT.c ****   WrOff = pRing->WrOff;
 13093              		.loc 1 383 19 is_stmt 0 view .LVU5622
 13094 02da 0027     		movs	r7, #0
 13095              	.LVL1241:
 413:Core/Src/SEGGER_RTT.c ****   } while (NumBytes);
 13096              		.loc 1 413 18 view .LVU5623
 13097 02dc 3E46     		mov	r6, r7
 13098              	.LVL1242:
 13099              	.L486:
 385:Core/Src/SEGGER_RTT.c ****     RdOff = pRing->RdOff;                         // May be changed by host (debug probe) in the me
 13100              		.loc 1 385 3 is_stmt 1 view .LVU5624
 386:Core/Src/SEGGER_RTT.c ****     if (RdOff > WrOff) {
 13101              		.loc 1 386 5 view .LVU5625
 388:Core/Src/SEGGER_RTT.c ****     } else {
 13102              		.loc 1 388 7 view .LVU5626
 390:Core/Src/SEGGER_RTT.c ****     }
 13103              		.loc 1 390 7 view .LVU5627
 386:Core/Src/SEGGER_RTT.c ****     if (RdOff > WrOff) {
 13104              		.loc 1 386 11 is_stmt 0 view .LVU5628
 13105 02de AB6A     		ldr	r3, [r5, #40]
 13106              	.LVL1243:
 387:Core/Src/SEGGER_RTT.c ****       NumBytesToWrite = RdOff - WrOff - 1u;
 13107              		.loc 1 387 5 is_stmt 1 view .LVU5629
 394:Core/Src/SEGGER_RTT.c **** #if SEGGER_RTT_MEMCPY_USE_BYTELOOP
 13108              		.loc 1 394 10 is_stmt 0 view .LVU5630
 13109 02e0 E869     		ldr	r0, [r5, #28]
 387:Core/Src/SEGGER_RTT.c ****       NumBytesToWrite = RdOff - WrOff - 1u;
 13110              		.loc 1 387 8 view .LVU5631
 13111 02e2 A342     		cmp	r3, r4
 388:Core/Src/SEGGER_RTT.c ****     } else {
 13112              		.loc 1 388 23 view .LVU5632
 13113 02e4 03F1FF32 		add	r2, r3, #-1
 390:Core/Src/SEGGER_RTT.c ****     }
 13114              		.loc 1 390 23 view .LVU5633
 13115 02e8 96BF     		itet	ls
 13116 02ea 03F1FF33 		addls	r3, r3, #-1
 13117              	.LVL1244:
 388:Core/Src/SEGGER_RTT.c ****     } else {
 13118              		.loc 1 388 23 view .LVU5634
 13119 02ee 131B     		subhi	r3, r2, r4
 390:Core/Src/SEGGER_RTT.c ****     }
 13120              		.loc 1 390 23 view .LVU5635
 13121 02f0 5B18     		addls	r3, r3, r1
 392:Core/Src/SEGGER_RTT.c ****     NumBytesToWrite = MIN(NumBytesToWrite, NumBytes);
 13122              		.loc 1 392 23 view .LVU5636
 13123 02f2 A1EB0402 		sub	r2, r1, r4
 390:Core/Src/SEGGER_RTT.c ****     }
 13124              		.loc 1 390 23 view .LVU5637
 13125 02f6 98BF     		it	ls
 13126 02f8 1B1B     		subls	r3, r3, r4
 13127              	.LVL1245:
 392:Core/Src/SEGGER_RTT.c ****     NumBytesToWrite = MIN(NumBytesToWrite, NumBytes);
 13128              		.loc 1 392 5 is_stmt 1 view .LVU5638
 393:Core/Src/SEGGER_RTT.c ****     pDst = (pRing->pBuffer + WrOff) + SEGGER_RTT_UNCACHED_OFF;
 13129              		.loc 1 393 5 view .LVU5639
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccSC4OZm.s 			page 352


 393:Core/Src/SEGGER_RTT.c ****     pDst = (pRing->pBuffer + WrOff) + SEGGER_RTT_UNCACHED_OFF;
 13130              		.loc 1 393 21 is_stmt 0 view .LVU5640
 13131 02fa 5A45     		cmp	r2, fp
 13132 02fc 28BF     		it	cs
 13133 02fe 5A46     		movcs	r2, fp
 13134              	.LVL1246:
 393:Core/Src/SEGGER_RTT.c ****     pDst = (pRing->pBuffer + WrOff) + SEGGER_RTT_UNCACHED_OFF;
 13135              		.loc 1 393 21 view .LVU5641
 13136 0300 9A42     		cmp	r2, r3
 13137 0302 28BF     		it	cs
 13138 0304 1A46     		movcs	r2, r3
 13139              	.LVL1247:
 394:Core/Src/SEGGER_RTT.c **** #if SEGGER_RTT_MEMCPY_USE_BYTELOOP
 13140              		.loc 1 394 5 is_stmt 1 view .LVU5642
 403:Core/Src/SEGGER_RTT.c ****     NumBytesWritten += NumBytesToWrite;
 13141              		.loc 1 403 5 view .LVU5643
 13142 0306 4146     		mov	r1, r8
 13143 0308 2044     		add	r0, r0, r4
 13144              	.LVL1248:
 404:Core/Src/SEGGER_RTT.c ****     pBuffer         += NumBytesToWrite;
 13145              		.loc 1 404 21 is_stmt 0 view .LVU5644
 13146 030a 1744     		add	r7, r7, r2
 407:Core/Src/SEGGER_RTT.c **** #endif
 13147              		.loc 1 407 21 view .LVU5645
 13148 030c 1444     		add	r4, r4, r2
 13149              	.LVL1249:
 406:Core/Src/SEGGER_RTT.c ****     WrOff           += NumBytesToWrite;
 13150              		.loc 1 406 21 view .LVU5646
 13151 030e ABEB020B 		sub	fp, fp, r2
 13152              	.LVL1250:
 405:Core/Src/SEGGER_RTT.c ****     NumBytes        -= NumBytesToWrite;
 13153              		.loc 1 405 21 view .LVU5647
 13154 0312 9044     		add	r8, r8, r2
 13155              	.LVL1251:
 403:Core/Src/SEGGER_RTT.c ****     NumBytesWritten += NumBytesToWrite;
 13156              		.loc 1 403 5 view .LVU5648
 13157 0314 FFF7FEFF 		bl	memcpy
 13158              	.LVL1252:
 404:Core/Src/SEGGER_RTT.c ****     pBuffer         += NumBytesToWrite;
 13159              		.loc 1 404 5 is_stmt 1 view .LVU5649
 405:Core/Src/SEGGER_RTT.c ****     NumBytes        -= NumBytesToWrite;
 13160              		.loc 1 405 5 view .LVU5650
 406:Core/Src/SEGGER_RTT.c ****     WrOff           += NumBytesToWrite;
 13161              		.loc 1 406 5 view .LVU5651
 407:Core/Src/SEGGER_RTT.c **** #endif
 13162              		.loc 1 407 5 view .LVU5652
 409:Core/Src/SEGGER_RTT.c ****       WrOff = 0u;
 13163              		.loc 1 409 5 view .LVU5653
 412:Core/Src/SEGGER_RTT.c ****     pRing->WrOff = WrOff;
 13164              		.loc 1 412 5 view .LVU5654
 409:Core/Src/SEGGER_RTT.c ****       WrOff = 0u;
 13165              		.loc 1 409 23 is_stmt 0 view .LVU5655
 13166 0318 296A     		ldr	r1, [r5, #32]
 409:Core/Src/SEGGER_RTT.c ****       WrOff = 0u;
 13167              		.loc 1 409 8 view .LVU5656
 13168 031a 8C42     		cmp	r4, r1
 13169 031c 00F0C780 		beq	.L564
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccSC4OZm.s 			page 353


 412:Core/Src/SEGGER_RTT.c ****     pRing->WrOff = WrOff;
 13170              		.loc 1 412 5 view .LVU5657
 13171              		.syntax unified
 13172              	@ 412 "Core/Src/SEGGER_RTT.c" 1
 13173 0320 BFF35F8F 		dmb
 13174              	
 13175              	@ 0 "" 2
 412:Core/Src/SEGGER_RTT.c ****     pRing->WrOff = WrOff;
 13176              		.loc 1 412 15 is_stmt 1 view .LVU5658
 413:Core/Src/SEGGER_RTT.c ****   } while (NumBytes);
 13177              		.loc 1 413 5 view .LVU5659
 413:Core/Src/SEGGER_RTT.c ****   } while (NumBytes);
 13178              		.loc 1 413 18 is_stmt 0 view .LVU5660
 13179              		.thumb
 13180              		.syntax unified
 13181 0324 6C62     		str	r4, [r5, #36]
 414:Core/Src/SEGGER_RTT.c ****   return NumBytesWritten;
 13182              		.loc 1 414 12 is_stmt 1 view .LVU5661
 13183 0326 BBF1000F 		cmp	fp, #0
 13184 032a D8D1     		bne	.L486
 13185              	.LVL1253:
 13186              	.L485:
 415:Core/Src/SEGGER_RTT.c **** }
 13187              		.loc 1 415 3 view .LVU5662
 415:Core/Src/SEGGER_RTT.c **** }
 13188              		.loc 1 415 3 is_stmt 0 view .LVU5663
 13189              	.LBE713:
 13190              	.LBE712:
2019:Core/Src/SEGGER_RTT.c ****       }
 13191              		.loc 1 2019 9 is_stmt 1 view .LVU5664
 13192 032c 7F4B     		ldr	r3, .L575+4
 13193              	.LBB716:
 13194              	.LBB717:
 508:Core/Src/SEGGER_RTT.c ****   _WriteBlocking(pRing, (const char*)ac, 2u);
 13195              		.loc 1 508 9 is_stmt 0 view .LVU5665
 13196 032e 029A     		ldr	r2, [sp, #8]
 13197              	.LBE717:
 13198              	.LBE716:
2019:Core/Src/SEGGER_RTT.c ****       }
 13199              		.loc 1 2019 9 view .LVU5666
 13200 0330 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 13201              	.LVL1254:
 13202              	.LBB726:
 13203              	.LBI716:
 504:Core/Src/SEGGER_RTT.c ****   unsigned char ac[2];
 13204              		.loc 1 504 13 is_stmt 1 view .LVU5667
 13205              	.LBB724:
 505:Core/Src/SEGGER_RTT.c **** 
 13206              		.loc 1 505 3 view .LVU5668
 507:Core/Src/SEGGER_RTT.c ****   ac[1] = _aTerminalId[TerminalId];  // Caller made already sure that TerminalId does not exceed ou
 13207              		.loc 1 507 3 view .LVU5669
 508:Core/Src/SEGGER_RTT.c ****   _WriteBlocking(pRing, (const char*)ac, 2u);
 13208              		.loc 1 508 9 is_stmt 0 view .LVU5670
 13209 0332 DDF80C90 		ldr	r9, [sp, #12]
 13210 0336 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 13211 0338 8DF81530 		strb	r3, [sp, #21]
 507:Core/Src/SEGGER_RTT.c ****   ac[1] = _aTerminalId[TerminalId];  // Caller made already sure that TerminalId does not exceed ou
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccSC4OZm.s 			page 354


 13212              		.loc 1 507 9 view .LVU5671
 13213 033c FF23     		movs	r3, #255
 13214 033e 8DF81430 		strb	r3, [sp, #20]
 508:Core/Src/SEGGER_RTT.c ****   _WriteBlocking(pRing, (const char*)ac, 2u);
 13215              		.loc 1 508 3 is_stmt 1 view .LVU5672
 509:Core/Src/SEGGER_RTT.c **** }
 13216              		.loc 1 509 3 view .LVU5673
 13217              	.LVL1255:
 13218              	.LBB718:
 13219              	.LBI718:
 374:Core/Src/SEGGER_RTT.c ****   unsigned NumBytesToWrite;
 13220              		.loc 1 374 17 view .LVU5674
 13221              	.LBB719:
 375:Core/Src/SEGGER_RTT.c ****   unsigned NumBytesWritten;
 13222              		.loc 1 375 3 view .LVU5675
 376:Core/Src/SEGGER_RTT.c ****   unsigned RdOff;
 13223              		.loc 1 376 3 view .LVU5676
 377:Core/Src/SEGGER_RTT.c ****   unsigned WrOff;
 13224              		.loc 1 377 3 view .LVU5677
 378:Core/Src/SEGGER_RTT.c ****   volatile char* pDst;
 13225              		.loc 1 378 3 view .LVU5678
 379:Core/Src/SEGGER_RTT.c ****   //
 13226              		.loc 1 379 3 view .LVU5679
 383:Core/Src/SEGGER_RTT.c ****   WrOff = pRing->WrOff;
 13227              		.loc 1 383 3 view .LVU5680
 384:Core/Src/SEGGER_RTT.c ****   do {
 13228              		.loc 1 384 3 view .LVU5681
 384:Core/Src/SEGGER_RTT.c ****   do {
 13229              		.loc 1 384 3 is_stmt 0 view .LVU5682
 13230              	.LBE719:
 13231              	.LBE718:
 508:Core/Src/SEGGER_RTT.c ****   _WriteBlocking(pRing, (const char*)ac, 2u);
 13232              		.loc 1 508 9 view .LVU5683
 13233 0342 4FF00208 		mov	r8, #2
 13234              	.LBB722:
 13235              	.LBB720:
 413:Core/Src/SEGGER_RTT.c ****   } while (NumBytes);
 13236              		.loc 1 413 18 view .LVU5684
 13237 0346 0026     		movs	r6, #0
 13238              	.LVL1256:
 13239              	.L492:
 385:Core/Src/SEGGER_RTT.c ****     RdOff = pRing->RdOff;                         // May be changed by host (debug probe) in the me
 13240              		.loc 1 385 3 is_stmt 1 view .LVU5685
 386:Core/Src/SEGGER_RTT.c ****     if (RdOff > WrOff) {
 13241              		.loc 1 386 5 view .LVU5686
 388:Core/Src/SEGGER_RTT.c ****     } else {
 13242              		.loc 1 388 7 view .LVU5687
 390:Core/Src/SEGGER_RTT.c ****     }
 13243              		.loc 1 390 7 view .LVU5688
 386:Core/Src/SEGGER_RTT.c ****     if (RdOff > WrOff) {
 13244              		.loc 1 386 11 is_stmt 0 view .LVU5689
 13245 0348 AB6A     		ldr	r3, [r5, #40]
 13246              	.LVL1257:
 387:Core/Src/SEGGER_RTT.c ****       NumBytesToWrite = RdOff - WrOff - 1u;
 13247              		.loc 1 387 5 is_stmt 1 view .LVU5690
 394:Core/Src/SEGGER_RTT.c **** #if SEGGER_RTT_MEMCPY_USE_BYTELOOP
 13248              		.loc 1 394 10 is_stmt 0 view .LVU5691
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccSC4OZm.s 			page 355


 13249 034a E869     		ldr	r0, [r5, #28]
 387:Core/Src/SEGGER_RTT.c ****       NumBytesToWrite = RdOff - WrOff - 1u;
 13250              		.loc 1 387 8 view .LVU5692
 13251 034c A342     		cmp	r3, r4
 388:Core/Src/SEGGER_RTT.c ****     } else {
 13252              		.loc 1 388 23 view .LVU5693
 13253 034e 03F1FF32 		add	r2, r3, #-1
 390:Core/Src/SEGGER_RTT.c ****     }
 13254              		.loc 1 390 23 view .LVU5694
 13255 0352 96BF     		itet	ls
 13256 0354 03F1FF33 		addls	r3, r3, #-1
 13257              	.LVL1258:
 388:Core/Src/SEGGER_RTT.c ****     } else {
 13258              		.loc 1 388 23 view .LVU5695
 13259 0358 131B     		subhi	r3, r2, r4
 390:Core/Src/SEGGER_RTT.c ****     }
 13260              		.loc 1 390 23 view .LVU5696
 13261 035a 5B18     		addls	r3, r3, r1
 392:Core/Src/SEGGER_RTT.c ****     NumBytesToWrite = MIN(NumBytesToWrite, NumBytes);
 13262              		.loc 1 392 23 view .LVU5697
 13263 035c A1EB0402 		sub	r2, r1, r4
 390:Core/Src/SEGGER_RTT.c ****     }
 13264              		.loc 1 390 23 view .LVU5698
 13265 0360 98BF     		it	ls
 13266 0362 1B1B     		subls	r3, r3, r4
 13267              	.LVL1259:
 392:Core/Src/SEGGER_RTT.c ****     NumBytesToWrite = MIN(NumBytesToWrite, NumBytes);
 13268              		.loc 1 392 5 is_stmt 1 view .LVU5699
 393:Core/Src/SEGGER_RTT.c ****     pDst = (pRing->pBuffer + WrOff) + SEGGER_RTT_UNCACHED_OFF;
 13269              		.loc 1 393 5 view .LVU5700
 393:Core/Src/SEGGER_RTT.c ****     pDst = (pRing->pBuffer + WrOff) + SEGGER_RTT_UNCACHED_OFF;
 13270              		.loc 1 393 21 is_stmt 0 view .LVU5701
 13271 0364 4245     		cmp	r2, r8
 13272 0366 28BF     		it	cs
 13273 0368 4246     		movcs	r2, r8
 13274              	.LVL1260:
 393:Core/Src/SEGGER_RTT.c ****     pDst = (pRing->pBuffer + WrOff) + SEGGER_RTT_UNCACHED_OFF;
 13275              		.loc 1 393 21 view .LVU5702
 13276 036a 9A42     		cmp	r2, r3
 13277 036c 28BF     		it	cs
 13278 036e 1A46     		movcs	r2, r3
 13279              	.LVL1261:
 394:Core/Src/SEGGER_RTT.c **** #if SEGGER_RTT_MEMCPY_USE_BYTELOOP
 13280              		.loc 1 394 5 is_stmt 1 view .LVU5703
 403:Core/Src/SEGGER_RTT.c ****     NumBytesWritten += NumBytesToWrite;
 13281              		.loc 1 403 5 view .LVU5704
 13282 0370 4946     		mov	r1, r9
 13283 0372 2044     		add	r0, r0, r4
 13284              	.LVL1262:
 406:Core/Src/SEGGER_RTT.c ****     WrOff           += NumBytesToWrite;
 13285              		.loc 1 406 21 is_stmt 0 view .LVU5705
 13286 0374 A8EB0208 		sub	r8, r8, r2
 13287              	.LVL1263:
 407:Core/Src/SEGGER_RTT.c **** #endif
 13288              		.loc 1 407 21 view .LVU5706
 13289 0378 1444     		add	r4, r4, r2
 13290              	.LVL1264:
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccSC4OZm.s 			page 356


 405:Core/Src/SEGGER_RTT.c ****     NumBytes        -= NumBytesToWrite;
 13291              		.loc 1 405 21 view .LVU5707
 13292 037a 9144     		add	r9, r9, r2
 13293              	.LVL1265:
 403:Core/Src/SEGGER_RTT.c ****     NumBytesWritten += NumBytesToWrite;
 13294              		.loc 1 403 5 view .LVU5708
 13295 037c FFF7FEFF 		bl	memcpy
 13296              	.LVL1266:
 404:Core/Src/SEGGER_RTT.c ****     pBuffer         += NumBytesToWrite;
 13297              		.loc 1 404 5 is_stmt 1 view .LVU5709
 405:Core/Src/SEGGER_RTT.c ****     NumBytes        -= NumBytesToWrite;
 13298              		.loc 1 405 5 view .LVU5710
 406:Core/Src/SEGGER_RTT.c ****     WrOff           += NumBytesToWrite;
 13299              		.loc 1 406 5 view .LVU5711
 407:Core/Src/SEGGER_RTT.c **** #endif
 13300              		.loc 1 407 5 view .LVU5712
 409:Core/Src/SEGGER_RTT.c ****       WrOff = 0u;
 13301              		.loc 1 409 5 view .LVU5713
 412:Core/Src/SEGGER_RTT.c ****     pRing->WrOff = WrOff;
 13302              		.loc 1 412 5 view .LVU5714
 409:Core/Src/SEGGER_RTT.c ****       WrOff = 0u;
 13303              		.loc 1 409 23 is_stmt 0 view .LVU5715
 13304 0380 296A     		ldr	r1, [r5, #32]
 409:Core/Src/SEGGER_RTT.c ****       WrOff = 0u;
 13305              		.loc 1 409 8 view .LVU5716
 13306 0382 8C42     		cmp	r4, r1
 13307 0384 00F0B880 		beq	.L565
 412:Core/Src/SEGGER_RTT.c ****     pRing->WrOff = WrOff;
 13308              		.loc 1 412 5 view .LVU5717
 13309              		.syntax unified
 13310              	@ 412 "Core/Src/SEGGER_RTT.c" 1
 13311 0388 BFF35F8F 		dmb
 13312              	
 13313              	@ 0 "" 2
 412:Core/Src/SEGGER_RTT.c ****     pRing->WrOff = WrOff;
 13314              		.loc 1 412 15 is_stmt 1 view .LVU5718
 413:Core/Src/SEGGER_RTT.c ****   } while (NumBytes);
 13315              		.loc 1 413 5 view .LVU5719
 413:Core/Src/SEGGER_RTT.c ****   } while (NumBytes);
 13316              		.loc 1 413 18 is_stmt 0 view .LVU5720
 13317              		.thumb
 13318              		.syntax unified
 13319 038c 6C62     		str	r4, [r5, #36]
 414:Core/Src/SEGGER_RTT.c ****   return NumBytesWritten;
 13320              		.loc 1 414 12 is_stmt 1 view .LVU5721
 13321 038e B8F1000F 		cmp	r8, #0
 13322 0392 D9D1     		bne	.L492
 13323 0394 65E6     		b	.L456
 13324              	.LVL1267:
 13325              	.L557:
 414:Core/Src/SEGGER_RTT.c ****   return NumBytesWritten;
 13326              		.loc 1 414 12 is_stmt 0 view .LVU5722
 13327              	.LBE720:
 13328              	.LBE722:
 13329              	.LBE724:
 13330              	.LBE726:
2003:Core/Src/SEGGER_RTT.c ****         Status = (int)_WriteBlocking(pRing, s, FragLen);
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccSC4OZm.s 			page 357


 13331              		.loc 1 2003 9 is_stmt 1 view .LVU5723
 13332              	.LBB727:
 13333              	.LBI727:
 504:Core/Src/SEGGER_RTT.c ****   unsigned char ac[2];
 13334              		.loc 1 504 13 view .LVU5724
 13335              	.LBB728:
 505:Core/Src/SEGGER_RTT.c **** 
 13336              		.loc 1 505 3 view .LVU5725
 507:Core/Src/SEGGER_RTT.c ****   ac[1] = _aTerminalId[TerminalId];  // Caller made already sure that TerminalId does not exceed ou
 13337              		.loc 1 507 3 view .LVU5726
 508:Core/Src/SEGGER_RTT.c ****   _WriteBlocking(pRing, (const char*)ac, 2u);
 13338              		.loc 1 508 23 is_stmt 0 view .LVU5727
 13339 0396 644B     		ldr	r3, .L575
 13340 0398 0293     		str	r3, [sp, #8]
 508:Core/Src/SEGGER_RTT.c ****   _WriteBlocking(pRing, (const char*)ac, 2u);
 13341              		.loc 1 508 9 view .LVU5728
 13342 039a 13F80930 		ldrb	r3, [r3, r9]	@ zero_extendqisi2
 13343 039e 8DF81530 		strb	r3, [sp, #21]
 507:Core/Src/SEGGER_RTT.c ****   ac[1] = _aTerminalId[TerminalId];  // Caller made already sure that TerminalId does not exceed ou
 13344              		.loc 1 507 9 view .LVU5729
 13345 03a2 FF23     		movs	r3, #255
 13346 03a4 8DF81430 		strb	r3, [sp, #20]
 508:Core/Src/SEGGER_RTT.c ****   _WriteBlocking(pRing, (const char*)ac, 2u);
 13347              		.loc 1 508 3 is_stmt 1 view .LVU5730
 509:Core/Src/SEGGER_RTT.c **** }
 13348              		.loc 1 509 3 view .LVU5731
 13349              	.LVL1268:
 13350              	.LBB729:
 13351              	.LBI729:
 374:Core/Src/SEGGER_RTT.c ****   unsigned NumBytesToWrite;
 13352              		.loc 1 374 17 view .LVU5732
 13353              	.LBB730:
 375:Core/Src/SEGGER_RTT.c ****   unsigned NumBytesWritten;
 13354              		.loc 1 375 3 view .LVU5733
 376:Core/Src/SEGGER_RTT.c ****   unsigned RdOff;
 13355              		.loc 1 376 3 view .LVU5734
 377:Core/Src/SEGGER_RTT.c ****   unsigned WrOff;
 13356              		.loc 1 377 3 view .LVU5735
 378:Core/Src/SEGGER_RTT.c ****   volatile char* pDst;
 13357              		.loc 1 378 3 view .LVU5736
 379:Core/Src/SEGGER_RTT.c ****   //
 13358              		.loc 1 379 3 view .LVU5737
 383:Core/Src/SEGGER_RTT.c ****   WrOff = pRing->WrOff;
 13359              		.loc 1 383 3 view .LVU5738
 384:Core/Src/SEGGER_RTT.c ****   do {
 13360              		.loc 1 384 3 view .LVU5739
 384:Core/Src/SEGGER_RTT.c ****   do {
 13361              		.loc 1 384 3 is_stmt 0 view .LVU5740
 13362              	.LBE730:
 13363              	.LBE729:
 13364              	.LBE728:
 13365              	.LBE727:
 13366              	.LBB743:
 13367              	.LBB658:
 537:Core/Src/SEGGER_RTT.c ****   } else {
 13368              		.loc 1 537 14 view .LVU5741
 13369 03a8 05AB     		add	r3, sp, #20
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccSC4OZm.s 			page 358


 13370              	.LVL1269:
 537:Core/Src/SEGGER_RTT.c ****   } else {
 13371              		.loc 1 537 14 view .LVU5742
 13372 03aa 1A46     		mov	r2, r3
 13373 03ac 0393     		str	r3, [sp, #12]
 13374 03ae 2B6A     		ldr	r3, [r5, #32]
 13375              	.LVL1270:
 537:Core/Src/SEGGER_RTT.c ****   } else {
 13376              		.loc 1 537 14 view .LVU5743
 13377              	.LBE658:
 13378              	.LBE743:
 13379              	.LBB744:
 13380              	.LBB739:
 13381              	.LBB735:
 13382              	.LBB731:
 413:Core/Src/SEGGER_RTT.c ****   } while (NumBytes);
 13383              		.loc 1 413 18 view .LVU5744
 13384 03b0 B246     		mov	r10, r6
 13385              	.LBE731:
 13386              	.LBE735:
 13387              	.LBE739:
 13388              	.LBE744:
 13389              	.LBB745:
 13390              	.LBB659:
 537:Core/Src/SEGGER_RTT.c ****   } else {
 13391              		.loc 1 537 14 view .LVU5745
 13392 03b2 9346     		mov	fp, r2
 13393              	.LVL1271:
 537:Core/Src/SEGGER_RTT.c ****   } else {
 13394              		.loc 1 537 14 view .LVU5746
 13395 03b4 0226     		movs	r6, #2
 13396              	.LVL1272:
 13397              	.L462:
 537:Core/Src/SEGGER_RTT.c ****   } else {
 13398              		.loc 1 537 14 view .LVU5747
 13399              	.LBE659:
 13400              	.LBE745:
 13401              	.LBB746:
 13402              	.LBB740:
 13403              	.LBB736:
 13404              	.LBB732:
 385:Core/Src/SEGGER_RTT.c ****     RdOff = pRing->RdOff;                         // May be changed by host (debug probe) in the me
 13405              		.loc 1 385 3 is_stmt 1 view .LVU5748
 386:Core/Src/SEGGER_RTT.c ****     if (RdOff > WrOff) {
 13406              		.loc 1 386 5 view .LVU5749
 388:Core/Src/SEGGER_RTT.c ****     } else {
 13407              		.loc 1 388 7 view .LVU5750
 390:Core/Src/SEGGER_RTT.c ****     }
 13408              		.loc 1 390 7 view .LVU5751
 386:Core/Src/SEGGER_RTT.c ****     if (RdOff > WrOff) {
 13409              		.loc 1 386 11 is_stmt 0 view .LVU5752
 13410 03b6 AA6A     		ldr	r2, [r5, #40]
 13411              	.LVL1273:
 387:Core/Src/SEGGER_RTT.c ****       NumBytesToWrite = RdOff - WrOff - 1u;
 13412              		.loc 1 387 5 is_stmt 1 view .LVU5753
 394:Core/Src/SEGGER_RTT.c **** #if SEGGER_RTT_MEMCPY_USE_BYTELOOP
 13413              		.loc 1 394 10 is_stmt 0 view .LVU5754
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccSC4OZm.s 			page 359


 13414 03b8 E869     		ldr	r0, [r5, #28]
 387:Core/Src/SEGGER_RTT.c ****       NumBytesToWrite = RdOff - WrOff - 1u;
 13415              		.loc 1 387 8 view .LVU5755
 13416 03ba A242     		cmp	r2, r4
 388:Core/Src/SEGGER_RTT.c ****     } else {
 13417              		.loc 1 388 23 view .LVU5756
 13418 03bc 02F1FF31 		add	r1, r2, #-1
 390:Core/Src/SEGGER_RTT.c ****     }
 13419              		.loc 1 390 23 view .LVU5757
 13420 03c0 98BF     		it	ls
 13421 03c2 02F1FF31 		addls	r1, r2, #-1
 392:Core/Src/SEGGER_RTT.c ****     NumBytesToWrite = MIN(NumBytesToWrite, NumBytes);
 13422              		.loc 1 392 23 view .LVU5758
 13423 03c6 A3EB0402 		sub	r2, r3, r4
 13424              	.LVL1274:
 390:Core/Src/SEGGER_RTT.c ****     }
 13425              		.loc 1 390 23 view .LVU5759
 13426 03ca 98BF     		it	ls
 13427 03cc C918     		addls	r1, r1, r3
 393:Core/Src/SEGGER_RTT.c ****     pDst = (pRing->pBuffer + WrOff) + SEGGER_RTT_UNCACHED_OFF;
 13428              		.loc 1 393 21 view .LVU5760
 13429 03ce B242     		cmp	r2, r6
 13430 03d0 28BF     		it	cs
 13431 03d2 3246     		movcs	r2, r6
 390:Core/Src/SEGGER_RTT.c ****     }
 13432              		.loc 1 390 23 view .LVU5761
 13433 03d4 091B     		subs	r1, r1, r4
 13434              	.LVL1275:
 392:Core/Src/SEGGER_RTT.c ****     NumBytesToWrite = MIN(NumBytesToWrite, NumBytes);
 13435              		.loc 1 392 5 is_stmt 1 view .LVU5762
 393:Core/Src/SEGGER_RTT.c ****     pDst = (pRing->pBuffer + WrOff) + SEGGER_RTT_UNCACHED_OFF;
 13436              		.loc 1 393 5 view .LVU5763
 393:Core/Src/SEGGER_RTT.c ****     pDst = (pRing->pBuffer + WrOff) + SEGGER_RTT_UNCACHED_OFF;
 13437              		.loc 1 393 21 is_stmt 0 view .LVU5764
 13438 03d6 8A42     		cmp	r2, r1
 13439 03d8 28BF     		it	cs
 13440 03da 0A46     		movcs	r2, r1
 13441              	.LVL1276:
 394:Core/Src/SEGGER_RTT.c **** #if SEGGER_RTT_MEMCPY_USE_BYTELOOP
 13442              		.loc 1 394 5 is_stmt 1 view .LVU5765
 403:Core/Src/SEGGER_RTT.c ****     NumBytesWritten += NumBytesToWrite;
 13443              		.loc 1 403 5 view .LVU5766
 13444 03dc 2044     		add	r0, r0, r4
 13445              	.LVL1277:
 403:Core/Src/SEGGER_RTT.c ****     NumBytesWritten += NumBytesToWrite;
 13446              		.loc 1 403 5 is_stmt 0 view .LVU5767
 13447 03de 5946     		mov	r1, fp
 407:Core/Src/SEGGER_RTT.c **** #endif
 13448              		.loc 1 407 21 view .LVU5768
 13449 03e0 1444     		add	r4, r4, r2
 13450              	.LVL1278:
 406:Core/Src/SEGGER_RTT.c ****     WrOff           += NumBytesToWrite;
 13451              		.loc 1 406 21 view .LVU5769
 13452 03e2 B61A     		subs	r6, r6, r2
 13453              	.LVL1279:
 405:Core/Src/SEGGER_RTT.c ****     NumBytes        -= NumBytesToWrite;
 13454              		.loc 1 405 21 view .LVU5770
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccSC4OZm.s 			page 360


 13455 03e4 9344     		add	fp, fp, r2
 13456              	.LVL1280:
 403:Core/Src/SEGGER_RTT.c ****     NumBytesWritten += NumBytesToWrite;
 13457              		.loc 1 403 5 view .LVU5771
 13458 03e6 FFF7FEFF 		bl	memcpy
 13459              	.LVL1281:
 404:Core/Src/SEGGER_RTT.c ****     pBuffer         += NumBytesToWrite;
 13460              		.loc 1 404 5 is_stmt 1 view .LVU5772
 405:Core/Src/SEGGER_RTT.c ****     NumBytes        -= NumBytesToWrite;
 13461              		.loc 1 405 5 view .LVU5773
 406:Core/Src/SEGGER_RTT.c ****     WrOff           += NumBytesToWrite;
 13462              		.loc 1 406 5 view .LVU5774
 407:Core/Src/SEGGER_RTT.c **** #endif
 13463              		.loc 1 407 5 view .LVU5775
 409:Core/Src/SEGGER_RTT.c ****       WrOff = 0u;
 13464              		.loc 1 409 5 view .LVU5776
 412:Core/Src/SEGGER_RTT.c ****     pRing->WrOff = WrOff;
 13465              		.loc 1 412 5 view .LVU5777
 409:Core/Src/SEGGER_RTT.c ****       WrOff = 0u;
 13466              		.loc 1 409 23 is_stmt 0 view .LVU5778
 13467 03ea 2B6A     		ldr	r3, [r5, #32]
 409:Core/Src/SEGGER_RTT.c ****       WrOff = 0u;
 13468              		.loc 1 409 8 view .LVU5779
 13469 03ec 9C42     		cmp	r4, r3
 13470 03ee 76D0     		beq	.L566
 412:Core/Src/SEGGER_RTT.c ****     pRing->WrOff = WrOff;
 13471              		.loc 1 412 5 view .LVU5780
 13472              		.syntax unified
 13473              	@ 412 "Core/Src/SEGGER_RTT.c" 1
 13474 03f0 BFF35F8F 		dmb
 13475              	
 13476              	@ 0 "" 2
 412:Core/Src/SEGGER_RTT.c ****     pRing->WrOff = WrOff;
 13477              		.loc 1 412 15 is_stmt 1 view .LVU5781
 413:Core/Src/SEGGER_RTT.c ****   } while (NumBytes);
 13478              		.loc 1 413 5 view .LVU5782
 413:Core/Src/SEGGER_RTT.c ****   } while (NumBytes);
 13479              		.loc 1 413 18 is_stmt 0 view .LVU5783
 13480              		.thumb
 13481              		.syntax unified
 13482 03f4 6C62     		str	r4, [r5, #36]
 414:Core/Src/SEGGER_RTT.c ****   return NumBytesWritten;
 13483              		.loc 1 414 12 is_stmt 1 view .LVU5784
 13484 03f6 002E     		cmp	r6, #0
 13485 03f8 DDD1     		bne	.L462
 13486              	.LVL1282:
 13487              	.L461:
 415:Core/Src/SEGGER_RTT.c **** }
 13488              		.loc 1 415 3 view .LVU5785
 415:Core/Src/SEGGER_RTT.c **** }
 13489              		.loc 1 415 3 is_stmt 0 view .LVU5786
 13490              	.LBE732:
 13491              	.LBE736:
 13492              	.LBE740:
 13493              	.LBE746:
2004:Core/Src/SEGGER_RTT.c ****         _PostTerminalSwitch(pRing, _ActiveTerminal);
 13494              		.loc 1 2004 9 is_stmt 1 view .LVU5787
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccSC4OZm.s 			page 361


 13495              	.LBB747:
 13496              	.LBI747:
 374:Core/Src/SEGGER_RTT.c ****   unsigned NumBytesToWrite;
 13497              		.loc 1 374 17 view .LVU5788
 13498              	.LBB748:
 375:Core/Src/SEGGER_RTT.c ****   unsigned NumBytesWritten;
 13499              		.loc 1 375 3 view .LVU5789
 376:Core/Src/SEGGER_RTT.c ****   unsigned RdOff;
 13500              		.loc 1 376 3 view .LVU5790
 377:Core/Src/SEGGER_RTT.c ****   unsigned WrOff;
 13501              		.loc 1 377 3 view .LVU5791
 378:Core/Src/SEGGER_RTT.c ****   volatile char* pDst;
 13502              		.loc 1 378 3 view .LVU5792
 379:Core/Src/SEGGER_RTT.c ****   //
 13503              		.loc 1 379 3 view .LVU5793
 383:Core/Src/SEGGER_RTT.c ****   WrOff = pRing->WrOff;
 13504              		.loc 1 383 3 view .LVU5794
 384:Core/Src/SEGGER_RTT.c ****   do {
 13505              		.loc 1 384 3 view .LVU5795
 383:Core/Src/SEGGER_RTT.c ****   WrOff = pRing->WrOff;
 13506              		.loc 1 383 19 is_stmt 0 view .LVU5796
 13507 03fa 4FF0000B 		mov	fp, #0
 413:Core/Src/SEGGER_RTT.c ****   } while (NumBytes);
 13508              		.loc 1 413 18 view .LVU5797
 13509 03fe 5E46     		mov	r6, fp
 13510              	.LVL1283:
 13511              	.L468:
 385:Core/Src/SEGGER_RTT.c ****     RdOff = pRing->RdOff;                         // May be changed by host (debug probe) in the me
 13512              		.loc 1 385 3 is_stmt 1 view .LVU5798
 386:Core/Src/SEGGER_RTT.c ****     if (RdOff > WrOff) {
 13513              		.loc 1 386 5 view .LVU5799
 388:Core/Src/SEGGER_RTT.c ****     } else {
 13514              		.loc 1 388 7 view .LVU5800
 390:Core/Src/SEGGER_RTT.c ****     }
 13515              		.loc 1 390 7 view .LVU5801
 386:Core/Src/SEGGER_RTT.c ****     if (RdOff > WrOff) {
 13516              		.loc 1 386 11 is_stmt 0 view .LVU5802
 13517 0400 AA6A     		ldr	r2, [r5, #40]
 13518              	.LVL1284:
 387:Core/Src/SEGGER_RTT.c ****       NumBytesToWrite = RdOff - WrOff - 1u;
 13519              		.loc 1 387 5 is_stmt 1 view .LVU5803
 394:Core/Src/SEGGER_RTT.c **** #if SEGGER_RTT_MEMCPY_USE_BYTELOOP
 13520              		.loc 1 394 10 is_stmt 0 view .LVU5804
 13521 0402 E869     		ldr	r0, [r5, #28]
 387:Core/Src/SEGGER_RTT.c ****       NumBytesToWrite = RdOff - WrOff - 1u;
 13522              		.loc 1 387 8 view .LVU5805
 13523 0404 A242     		cmp	r2, r4
 388:Core/Src/SEGGER_RTT.c ****     } else {
 13524              		.loc 1 388 23 view .LVU5806
 13525 0406 02F1FF31 		add	r1, r2, #-1
 390:Core/Src/SEGGER_RTT.c ****     }
 13526              		.loc 1 390 23 view .LVU5807
 13527 040a 98BF     		it	ls
 13528 040c 02F1FF31 		addls	r1, r2, #-1
 392:Core/Src/SEGGER_RTT.c ****     NumBytesToWrite = MIN(NumBytesToWrite, NumBytes);
 13529              		.loc 1 392 23 view .LVU5808
 13530 0410 A3EB0402 		sub	r2, r3, r4
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccSC4OZm.s 			page 362


 13531              	.LVL1285:
 390:Core/Src/SEGGER_RTT.c ****     }
 13532              		.loc 1 390 23 view .LVU5809
 13533 0414 98BF     		it	ls
 13534 0416 C918     		addls	r1, r1, r3
 393:Core/Src/SEGGER_RTT.c ****     pDst = (pRing->pBuffer + WrOff) + SEGGER_RTT_UNCACHED_OFF;
 13535              		.loc 1 393 21 view .LVU5810
 13536 0418 BA42     		cmp	r2, r7
 13537 041a 28BF     		it	cs
 13538 041c 3A46     		movcs	r2, r7
 390:Core/Src/SEGGER_RTT.c ****     }
 13539              		.loc 1 390 23 view .LVU5811
 13540 041e 091B     		subs	r1, r1, r4
 13541              	.LVL1286:
 392:Core/Src/SEGGER_RTT.c ****     NumBytesToWrite = MIN(NumBytesToWrite, NumBytes);
 13542              		.loc 1 392 5 is_stmt 1 view .LVU5812
 393:Core/Src/SEGGER_RTT.c ****     pDst = (pRing->pBuffer + WrOff) + SEGGER_RTT_UNCACHED_OFF;
 13543              		.loc 1 393 5 view .LVU5813
 393:Core/Src/SEGGER_RTT.c ****     pDst = (pRing->pBuffer + WrOff) + SEGGER_RTT_UNCACHED_OFF;
 13544              		.loc 1 393 21 is_stmt 0 view .LVU5814
 13545 0420 8A42     		cmp	r2, r1
 13546 0422 28BF     		it	cs
 13547 0424 0A46     		movcs	r2, r1
 13548              	.LVL1287:
 394:Core/Src/SEGGER_RTT.c **** #if SEGGER_RTT_MEMCPY_USE_BYTELOOP
 13549              		.loc 1 394 5 is_stmt 1 view .LVU5815
 403:Core/Src/SEGGER_RTT.c ****     NumBytesWritten += NumBytesToWrite;
 13550              		.loc 1 403 5 view .LVU5816
 13551 0426 2044     		add	r0, r0, r4
 13552              	.LVL1288:
 403:Core/Src/SEGGER_RTT.c ****     NumBytesWritten += NumBytesToWrite;
 13553              		.loc 1 403 5 is_stmt 0 view .LVU5817
 13554 0428 4146     		mov	r1, r8
 407:Core/Src/SEGGER_RTT.c **** #endif
 13555              		.loc 1 407 21 view .LVU5818
 13556 042a 1444     		add	r4, r4, r2
 13557              	.LVL1289:
 404:Core/Src/SEGGER_RTT.c ****     pBuffer         += NumBytesToWrite;
 13558              		.loc 1 404 21 view .LVU5819
 13559 042c 9344     		add	fp, fp, r2
 406:Core/Src/SEGGER_RTT.c ****     WrOff           += NumBytesToWrite;
 13560              		.loc 1 406 21 view .LVU5820
 13561 042e BF1A     		subs	r7, r7, r2
 13562              	.LVL1290:
 405:Core/Src/SEGGER_RTT.c ****     NumBytes        -= NumBytesToWrite;
 13563              		.loc 1 405 21 view .LVU5821
 13564 0430 9044     		add	r8, r8, r2
 13565              	.LVL1291:
 403:Core/Src/SEGGER_RTT.c ****     NumBytesWritten += NumBytesToWrite;
 13566              		.loc 1 403 5 view .LVU5822
 13567 0432 FFF7FEFF 		bl	memcpy
 13568              	.LVL1292:
 404:Core/Src/SEGGER_RTT.c ****     pBuffer         += NumBytesToWrite;
 13569              		.loc 1 404 5 is_stmt 1 view .LVU5823
 405:Core/Src/SEGGER_RTT.c ****     NumBytes        -= NumBytesToWrite;
 13570              		.loc 1 405 5 view .LVU5824
 406:Core/Src/SEGGER_RTT.c ****     WrOff           += NumBytesToWrite;
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccSC4OZm.s 			page 363


 13571              		.loc 1 406 5 view .LVU5825
 407:Core/Src/SEGGER_RTT.c **** #endif
 13572              		.loc 1 407 5 view .LVU5826
 409:Core/Src/SEGGER_RTT.c ****       WrOff = 0u;
 13573              		.loc 1 409 5 view .LVU5827
 412:Core/Src/SEGGER_RTT.c ****     pRing->WrOff = WrOff;
 13574              		.loc 1 412 5 view .LVU5828
 409:Core/Src/SEGGER_RTT.c ****       WrOff = 0u;
 13575              		.loc 1 409 23 is_stmt 0 view .LVU5829
 13576 0436 2B6A     		ldr	r3, [r5, #32]
 409:Core/Src/SEGGER_RTT.c ****       WrOff = 0u;
 13577              		.loc 1 409 8 view .LVU5830
 13578 0438 9C42     		cmp	r4, r3
 13579 043a 57D0     		beq	.L567
 412:Core/Src/SEGGER_RTT.c ****     pRing->WrOff = WrOff;
 13580              		.loc 1 412 5 view .LVU5831
 13581              		.syntax unified
 13582              	@ 412 "Core/Src/SEGGER_RTT.c" 1
 13583 043c BFF35F8F 		dmb
 13584              	
 13585              	@ 0 "" 2
 412:Core/Src/SEGGER_RTT.c ****     pRing->WrOff = WrOff;
 13586              		.loc 1 412 15 is_stmt 1 view .LVU5832
 413:Core/Src/SEGGER_RTT.c ****   } while (NumBytes);
 13587              		.loc 1 413 5 view .LVU5833
 413:Core/Src/SEGGER_RTT.c ****   } while (NumBytes);
 13588              		.loc 1 413 18 is_stmt 0 view .LVU5834
 13589              		.thumb
 13590              		.syntax unified
 13591 0440 6C62     		str	r4, [r5, #36]
 414:Core/Src/SEGGER_RTT.c ****   return NumBytesWritten;
 13592              		.loc 1 414 12 is_stmt 1 view .LVU5835
 13593 0442 002F     		cmp	r7, #0
 13594 0444 DCD1     		bne	.L468
 13595              	.LVL1293:
 13596              	.L467:
 415:Core/Src/SEGGER_RTT.c **** }
 13597              		.loc 1 415 3 view .LVU5836
 415:Core/Src/SEGGER_RTT.c **** }
 13598              		.loc 1 415 3 is_stmt 0 view .LVU5837
 13599              	.LBE748:
 13600              	.LBE747:
2005:Core/Src/SEGGER_RTT.c ****       }
 13601              		.loc 1 2005 9 view .LVU5838
 13602 0446 394A     		ldr	r2, .L575+4
 13603              	.LBB751:
 13604              	.LBB752:
 508:Core/Src/SEGGER_RTT.c ****   _WriteBlocking(pRing, (const char*)ac, 2u);
 13605              		.loc 1 508 9 view .LVU5839
 13606 0448 0299     		ldr	r1, [sp, #8]
 13607              	.LBE752:
 13608              	.LBE751:
2005:Core/Src/SEGGER_RTT.c ****       }
 13609              		.loc 1 2005 9 view .LVU5840
 13610 044a 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 13611              	.LBB762:
 13612              	.LBB759:
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccSC4OZm.s 			page 364


 508:Core/Src/SEGGER_RTT.c ****   _WriteBlocking(pRing, (const char*)ac, 2u);
 13613              		.loc 1 508 9 view .LVU5841
 13614 044c DDF80C90 		ldr	r9, [sp, #12]
 13615 0450 8A5C     		ldrb	r2, [r1, r2]	@ zero_extendqisi2
 13616 0452 8DF81520 		strb	r2, [sp, #21]
 507:Core/Src/SEGGER_RTT.c ****   ac[1] = _aTerminalId[TerminalId];  // Caller made already sure that TerminalId does not exceed ou
 13617              		.loc 1 507 9 view .LVU5842
 13618 0456 FF22     		movs	r2, #255
 13619              	.LBE759:
 13620              	.LBE762:
2004:Core/Src/SEGGER_RTT.c ****         _PostTerminalSwitch(pRing, _ActiveTerminal);
 13621              		.loc 1 2004 16 view .LVU5843
 13622 0458 5F46     		mov	r7, fp
2005:Core/Src/SEGGER_RTT.c ****       }
 13623              		.loc 1 2005 9 is_stmt 1 view .LVU5844
 13624              	.LVL1294:
 13625              	.LBB763:
 13626              	.LBI751:
 504:Core/Src/SEGGER_RTT.c ****   unsigned char ac[2];
 13627              		.loc 1 504 13 view .LVU5845
 13628              	.LBB760:
 505:Core/Src/SEGGER_RTT.c **** 
 13629              		.loc 1 505 3 view .LVU5846
 507:Core/Src/SEGGER_RTT.c ****   ac[1] = _aTerminalId[TerminalId];  // Caller made already sure that TerminalId does not exceed ou
 13630              		.loc 1 507 3 view .LVU5847
 507:Core/Src/SEGGER_RTT.c ****   ac[1] = _aTerminalId[TerminalId];  // Caller made already sure that TerminalId does not exceed ou
 13631              		.loc 1 507 9 is_stmt 0 view .LVU5848
 13632 045a 8DF81420 		strb	r2, [sp, #20]
 508:Core/Src/SEGGER_RTT.c ****   _WriteBlocking(pRing, (const char*)ac, 2u);
 13633              		.loc 1 508 3 is_stmt 1 view .LVU5849
 509:Core/Src/SEGGER_RTT.c **** }
 13634              		.loc 1 509 3 view .LVU5850
 13635              	.LVL1295:
 13636              	.LBB753:
 13637              	.LBI753:
 374:Core/Src/SEGGER_RTT.c ****   unsigned NumBytesToWrite;
 13638              		.loc 1 374 17 view .LVU5851
 13639              	.LBB754:
 375:Core/Src/SEGGER_RTT.c ****   unsigned NumBytesWritten;
 13640              		.loc 1 375 3 view .LVU5852
 376:Core/Src/SEGGER_RTT.c ****   unsigned RdOff;
 13641              		.loc 1 376 3 view .LVU5853
 377:Core/Src/SEGGER_RTT.c ****   unsigned WrOff;
 13642              		.loc 1 377 3 view .LVU5854
 378:Core/Src/SEGGER_RTT.c ****   volatile char* pDst;
 13643              		.loc 1 378 3 view .LVU5855
 379:Core/Src/SEGGER_RTT.c ****   //
 13644              		.loc 1 379 3 view .LVU5856
 383:Core/Src/SEGGER_RTT.c ****   WrOff = pRing->WrOff;
 13645              		.loc 1 383 3 view .LVU5857
 384:Core/Src/SEGGER_RTT.c ****   do {
 13646              		.loc 1 384 3 view .LVU5858
 384:Core/Src/SEGGER_RTT.c ****   do {
 13647              		.loc 1 384 3 is_stmt 0 view .LVU5859
 13648              	.LBE754:
 13649              	.LBE753:
 508:Core/Src/SEGGER_RTT.c ****   _WriteBlocking(pRing, (const char*)ac, 2u);
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccSC4OZm.s 			page 365


 13650              		.loc 1 508 9 view .LVU5860
 13651 045e 4FF00208 		mov	r8, #2
 13652              	.LBB757:
 13653              	.LBB755:
 413:Core/Src/SEGGER_RTT.c ****   } while (NumBytes);
 13654              		.loc 1 413 18 view .LVU5861
 13655 0462 0026     		movs	r6, #0
 13656              	.LVL1296:
 13657              	.L474:
 385:Core/Src/SEGGER_RTT.c ****     RdOff = pRing->RdOff;                         // May be changed by host (debug probe) in the me
 13658              		.loc 1 385 3 is_stmt 1 view .LVU5862
 386:Core/Src/SEGGER_RTT.c ****     if (RdOff > WrOff) {
 13659              		.loc 1 386 5 view .LVU5863
 388:Core/Src/SEGGER_RTT.c ****     } else {
 13660              		.loc 1 388 7 view .LVU5864
 390:Core/Src/SEGGER_RTT.c ****     }
 13661              		.loc 1 390 7 view .LVU5865
 386:Core/Src/SEGGER_RTT.c ****     if (RdOff > WrOff) {
 13662              		.loc 1 386 11 is_stmt 0 view .LVU5866
 13663 0464 AA6A     		ldr	r2, [r5, #40]
 13664              	.LVL1297:
 387:Core/Src/SEGGER_RTT.c ****       NumBytesToWrite = RdOff - WrOff - 1u;
 13665              		.loc 1 387 5 is_stmt 1 view .LVU5867
 394:Core/Src/SEGGER_RTT.c **** #if SEGGER_RTT_MEMCPY_USE_BYTELOOP
 13666              		.loc 1 394 10 is_stmt 0 view .LVU5868
 13667 0466 E869     		ldr	r0, [r5, #28]
 387:Core/Src/SEGGER_RTT.c ****       NumBytesToWrite = RdOff - WrOff - 1u;
 13668              		.loc 1 387 8 view .LVU5869
 13669 0468 A242     		cmp	r2, r4
 388:Core/Src/SEGGER_RTT.c ****     } else {
 13670              		.loc 1 388 23 view .LVU5870
 13671 046a 02F1FF31 		add	r1, r2, #-1
 390:Core/Src/SEGGER_RTT.c ****     }
 13672              		.loc 1 390 23 view .LVU5871
 13673 046e 98BF     		it	ls
 13674 0470 02F1FF31 		addls	r1, r2, #-1
 392:Core/Src/SEGGER_RTT.c ****     NumBytesToWrite = MIN(NumBytesToWrite, NumBytes);
 13675              		.loc 1 392 23 view .LVU5872
 13676 0474 A3EB0402 		sub	r2, r3, r4
 13677              	.LVL1298:
 390:Core/Src/SEGGER_RTT.c ****     }
 13678              		.loc 1 390 23 view .LVU5873
 13679 0478 98BF     		it	ls
 13680 047a C918     		addls	r1, r1, r3
 393:Core/Src/SEGGER_RTT.c ****     pDst = (pRing->pBuffer + WrOff) + SEGGER_RTT_UNCACHED_OFF;
 13681              		.loc 1 393 21 view .LVU5874
 13682 047c 4245     		cmp	r2, r8
 13683 047e 28BF     		it	cs
 13684 0480 4246     		movcs	r2, r8
 390:Core/Src/SEGGER_RTT.c ****     }
 13685              		.loc 1 390 23 view .LVU5875
 13686 0482 091B     		subs	r1, r1, r4
 13687              	.LVL1299:
 392:Core/Src/SEGGER_RTT.c ****     NumBytesToWrite = MIN(NumBytesToWrite, NumBytes);
 13688              		.loc 1 392 5 is_stmt 1 view .LVU5876
 393:Core/Src/SEGGER_RTT.c ****     pDst = (pRing->pBuffer + WrOff) + SEGGER_RTT_UNCACHED_OFF;
 13689              		.loc 1 393 5 view .LVU5877
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccSC4OZm.s 			page 366


 393:Core/Src/SEGGER_RTT.c ****     pDst = (pRing->pBuffer + WrOff) + SEGGER_RTT_UNCACHED_OFF;
 13690              		.loc 1 393 21 is_stmt 0 view .LVU5878
 13691 0484 8A42     		cmp	r2, r1
 13692 0486 28BF     		it	cs
 13693 0488 0A46     		movcs	r2, r1
 13694              	.LVL1300:
 394:Core/Src/SEGGER_RTT.c **** #if SEGGER_RTT_MEMCPY_USE_BYTELOOP
 13695              		.loc 1 394 5 is_stmt 1 view .LVU5879
 403:Core/Src/SEGGER_RTT.c ****     NumBytesWritten += NumBytesToWrite;
 13696              		.loc 1 403 5 view .LVU5880
 13697 048a 2044     		add	r0, r0, r4
 13698              	.LVL1301:
 403:Core/Src/SEGGER_RTT.c ****     NumBytesWritten += NumBytesToWrite;
 13699              		.loc 1 403 5 is_stmt 0 view .LVU5881
 13700 048c 4946     		mov	r1, r9
 407:Core/Src/SEGGER_RTT.c **** #endif
 13701              		.loc 1 407 21 view .LVU5882
 13702 048e 1444     		add	r4, r4, r2
 13703              	.LVL1302:
 406:Core/Src/SEGGER_RTT.c ****     WrOff           += NumBytesToWrite;
 13704              		.loc 1 406 21 view .LVU5883
 13705 0490 A8EB0208 		sub	r8, r8, r2
 13706              	.LVL1303:
 405:Core/Src/SEGGER_RTT.c ****     NumBytes        -= NumBytesToWrite;
 13707              		.loc 1 405 21 view .LVU5884
 13708 0494 9144     		add	r9, r9, r2
 13709              	.LVL1304:
 403:Core/Src/SEGGER_RTT.c ****     NumBytesWritten += NumBytesToWrite;
 13710              		.loc 1 403 5 view .LVU5885
 13711 0496 FFF7FEFF 		bl	memcpy
 13712              	.LVL1305:
 404:Core/Src/SEGGER_RTT.c ****     pBuffer         += NumBytesToWrite;
 13713              		.loc 1 404 5 is_stmt 1 view .LVU5886
 405:Core/Src/SEGGER_RTT.c ****     NumBytes        -= NumBytesToWrite;
 13714              		.loc 1 405 5 view .LVU5887
 406:Core/Src/SEGGER_RTT.c ****     WrOff           += NumBytesToWrite;
 13715              		.loc 1 406 5 view .LVU5888
 407:Core/Src/SEGGER_RTT.c **** #endif
 13716              		.loc 1 407 5 view .LVU5889
 409:Core/Src/SEGGER_RTT.c ****       WrOff = 0u;
 13717              		.loc 1 409 5 view .LVU5890
 412:Core/Src/SEGGER_RTT.c ****     pRing->WrOff = WrOff;
 13718              		.loc 1 412 5 view .LVU5891
 409:Core/Src/SEGGER_RTT.c ****       WrOff = 0u;
 13719              		.loc 1 409 23 is_stmt 0 view .LVU5892
 13720 049a 2B6A     		ldr	r3, [r5, #32]
 409:Core/Src/SEGGER_RTT.c ****       WrOff = 0u;
 13721              		.loc 1 409 8 view .LVU5893
 13722 049c 9C42     		cmp	r4, r3
 13723 049e 15D0     		beq	.L568
 412:Core/Src/SEGGER_RTT.c ****     pRing->WrOff = WrOff;
 13724              		.loc 1 412 5 view .LVU5894
 13725              		.syntax unified
 13726              	@ 412 "Core/Src/SEGGER_RTT.c" 1
 13727 04a0 BFF35F8F 		dmb
 13728              	
 13729              	@ 0 "" 2
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccSC4OZm.s 			page 367


 412:Core/Src/SEGGER_RTT.c ****     pRing->WrOff = WrOff;
 13730              		.loc 1 412 15 is_stmt 1 view .LVU5895
 413:Core/Src/SEGGER_RTT.c ****   } while (NumBytes);
 13731              		.loc 1 413 5 view .LVU5896
 413:Core/Src/SEGGER_RTT.c ****   } while (NumBytes);
 13732              		.loc 1 413 18 is_stmt 0 view .LVU5897
 13733              		.thumb
 13734              		.syntax unified
 13735 04a4 6C62     		str	r4, [r5, #36]
 414:Core/Src/SEGGER_RTT.c ****   return NumBytesWritten;
 13736              		.loc 1 414 12 is_stmt 1 view .LVU5898
 13737 04a6 B8F1000F 		cmp	r8, #0
 13738 04aa DBD1     		bne	.L474
 13739 04ac D9E5     		b	.L456
 13740              	.LVL1306:
 13741              	.L564:
 414:Core/Src/SEGGER_RTT.c ****   return NumBytesWritten;
 13742              		.loc 1 414 12 is_stmt 0 view .LVU5899
 13743              	.LBE755:
 13744              	.LBE757:
 13745              	.LBE760:
 13746              	.LBE763:
 13747              	.LBB764:
 13748              	.LBB714:
 412:Core/Src/SEGGER_RTT.c ****     pRing->WrOff = WrOff;
 13749              		.loc 1 412 5 is_stmt 1 view .LVU5900
 13750              		.syntax unified
 13751              	@ 412 "Core/Src/SEGGER_RTT.c" 1
 13752 04ae BFF35F8F 		dmb
 13753              	
 13754              	@ 0 "" 2
 412:Core/Src/SEGGER_RTT.c ****     pRing->WrOff = WrOff;
 13755              		.loc 1 412 15 view .LVU5901
 413:Core/Src/SEGGER_RTT.c ****   } while (NumBytes);
 13756              		.loc 1 413 5 view .LVU5902
 413:Core/Src/SEGGER_RTT.c ****   } while (NumBytes);
 13757              		.loc 1 413 18 is_stmt 0 view .LVU5903
 13758              		.thumb
 13759              		.syntax unified
 13760 04b2 6E62     		str	r6, [r5, #36]
 414:Core/Src/SEGGER_RTT.c ****   return NumBytesWritten;
 13761              		.loc 1 414 12 is_stmt 1 view .LVU5904
 13762 04b4 BBF1000F 		cmp	fp, #0
 13763 04b8 2BD0     		beq	.L569
 410:Core/Src/SEGGER_RTT.c ****     }
 13764              		.loc 1 410 13 is_stmt 0 view .LVU5905
 13765 04ba 0024     		movs	r4, #0
 13766 04bc 0FE7     		b	.L486
 13767              	.LVL1307:
 13768              	.L563:
 410:Core/Src/SEGGER_RTT.c ****     }
 13769              		.loc 1 410 13 view .LVU5906
 13770              	.LBE714:
 13771              	.LBE764:
 13772              	.LBB765:
 13773              	.LBB708:
 13774              	.LBB705:
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccSC4OZm.s 			page 368


 13775              	.LBB702:
 412:Core/Src/SEGGER_RTT.c ****     pRing->WrOff = WrOff;
 13776              		.loc 1 412 5 is_stmt 1 view .LVU5907
 13777              		.syntax unified
 13778              	@ 412 "Core/Src/SEGGER_RTT.c" 1
 13779 04be BFF35F8F 		dmb
 13780              	
 13781              	@ 0 "" 2
 412:Core/Src/SEGGER_RTT.c ****     pRing->WrOff = WrOff;
 13782              		.loc 1 412 15 view .LVU5908
 413:Core/Src/SEGGER_RTT.c ****   } while (NumBytes);
 13783              		.loc 1 413 5 view .LVU5909
 413:Core/Src/SEGGER_RTT.c ****   } while (NumBytes);
 13784              		.loc 1 413 18 is_stmt 0 view .LVU5910
 13785              		.thumb
 13786              		.syntax unified
 13787 04c2 C5F824A0 		str	r10, [r5, #36]
 414:Core/Src/SEGGER_RTT.c ****   return NumBytesWritten;
 13788              		.loc 1 414 12 is_stmt 1 view .LVU5911
 13789 04c6 56B3     		cbz	r6, .L570
 410:Core/Src/SEGGER_RTT.c ****     }
 13790              		.loc 1 410 13 is_stmt 0 view .LVU5912
 13791 04c8 0024     		movs	r4, #0
 13792 04ca DDE6     		b	.L480
 13793              	.LVL1308:
 13794              	.L568:
 410:Core/Src/SEGGER_RTT.c ****     }
 13795              		.loc 1 410 13 view .LVU5913
 13796              	.LBE702:
 13797              	.LBE705:
 13798              	.LBE708:
 13799              	.LBE765:
 13800              	.LBB766:
 13801              	.LBB761:
 13802              	.LBB758:
 13803              	.LBB756:
 412:Core/Src/SEGGER_RTT.c ****     pRing->WrOff = WrOff;
 13804              		.loc 1 412 5 is_stmt 1 view .LVU5914
 13805              		.syntax unified
 13806              	@ 412 "Core/Src/SEGGER_RTT.c" 1
 13807 04cc BFF35F8F 		dmb
 13808              	
 13809              	@ 0 "" 2
 412:Core/Src/SEGGER_RTT.c ****     pRing->WrOff = WrOff;
 13810              		.loc 1 412 15 view .LVU5915
 413:Core/Src/SEGGER_RTT.c ****   } while (NumBytes);
 13811              		.loc 1 413 5 view .LVU5916
 413:Core/Src/SEGGER_RTT.c ****   } while (NumBytes);
 13812              		.loc 1 413 18 is_stmt 0 view .LVU5917
 13813              		.thumb
 13814              		.syntax unified
 13815 04d0 6E62     		str	r6, [r5, #36]
 414:Core/Src/SEGGER_RTT.c ****   return NumBytesWritten;
 13816              		.loc 1 414 12 is_stmt 1 view .LVU5918
 13817 04d2 B8F1000F 		cmp	r8, #0
 13818 04d6 3FF4C4AD 		beq	.L456
 410:Core/Src/SEGGER_RTT.c ****     }
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccSC4OZm.s 			page 369


 13819              		.loc 1 410 13 is_stmt 0 view .LVU5919
 13820 04da 0024     		movs	r4, #0
 13821 04dc C2E7     		b	.L474
 13822              	.LVL1309:
 13823              	.L566:
 410:Core/Src/SEGGER_RTT.c ****     }
 13824              		.loc 1 410 13 view .LVU5920
 13825              	.LBE756:
 13826              	.LBE758:
 13827              	.LBE761:
 13828              	.LBE766:
 13829              	.LBB767:
 13830              	.LBB741:
 13831              	.LBB737:
 13832              	.LBB733:
 412:Core/Src/SEGGER_RTT.c ****     pRing->WrOff = WrOff;
 13833              		.loc 1 412 5 is_stmt 1 view .LVU5921
 13834              		.syntax unified
 13835              	@ 412 "Core/Src/SEGGER_RTT.c" 1
 13836 04de BFF35F8F 		dmb
 13837              	
 13838              	@ 0 "" 2
 412:Core/Src/SEGGER_RTT.c ****     pRing->WrOff = WrOff;
 13839              		.loc 1 412 15 view .LVU5922
 413:Core/Src/SEGGER_RTT.c ****   } while (NumBytes);
 13840              		.loc 1 413 5 view .LVU5923
 413:Core/Src/SEGGER_RTT.c ****   } while (NumBytes);
 13841              		.loc 1 413 18 is_stmt 0 view .LVU5924
 13842              		.thumb
 13843              		.syntax unified
 13844 04e2 C5F824A0 		str	r10, [r5, #36]
 414:Core/Src/SEGGER_RTT.c ****   return NumBytesWritten;
 13845              		.loc 1 414 12 is_stmt 1 view .LVU5925
 13846 04e6 C6B1     		cbz	r6, .L571
 410:Core/Src/SEGGER_RTT.c ****     }
 13847              		.loc 1 410 13 is_stmt 0 view .LVU5926
 13848 04e8 0024     		movs	r4, #0
 13849 04ea 64E7     		b	.L462
 13850              	.LVL1310:
 13851              	.L567:
 410:Core/Src/SEGGER_RTT.c ****     }
 13852              		.loc 1 410 13 view .LVU5927
 13853              	.LBE733:
 13854              	.LBE737:
 13855              	.LBE741:
 13856              	.LBE767:
 13857              	.LBB768:
 13858              	.LBB749:
 412:Core/Src/SEGGER_RTT.c ****     pRing->WrOff = WrOff;
 13859              		.loc 1 412 5 is_stmt 1 view .LVU5928
 13860              		.syntax unified
 13861              	@ 412 "Core/Src/SEGGER_RTT.c" 1
 13862 04ec BFF35F8F 		dmb
 13863              	
 13864              	@ 0 "" 2
 412:Core/Src/SEGGER_RTT.c ****     pRing->WrOff = WrOff;
 13865              		.loc 1 412 15 view .LVU5929
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccSC4OZm.s 			page 370


 413:Core/Src/SEGGER_RTT.c ****   } while (NumBytes);
 13866              		.loc 1 413 5 view .LVU5930
 413:Core/Src/SEGGER_RTT.c ****   } while (NumBytes);
 13867              		.loc 1 413 18 is_stmt 0 view .LVU5931
 13868              		.thumb
 13869              		.syntax unified
 13870 04f0 6E62     		str	r6, [r5, #36]
 414:Core/Src/SEGGER_RTT.c ****   return NumBytesWritten;
 13871              		.loc 1 414 12 is_stmt 1 view .LVU5932
 13872 04f2 87B1     		cbz	r7, .L572
 410:Core/Src/SEGGER_RTT.c ****     }
 13873              		.loc 1 410 13 is_stmt 0 view .LVU5933
 13874 04f4 0024     		movs	r4, #0
 13875 04f6 83E7     		b	.L468
 13876              	.LVL1311:
 13877              	.L565:
 410:Core/Src/SEGGER_RTT.c ****     }
 13878              		.loc 1 410 13 view .LVU5934
 13879              	.LBE749:
 13880              	.LBE768:
 13881              	.LBB769:
 13882              	.LBB725:
 13883              	.LBB723:
 13884              	.LBB721:
 412:Core/Src/SEGGER_RTT.c ****     pRing->WrOff = WrOff;
 13885              		.loc 1 412 5 is_stmt 1 view .LVU5935
 13886              		.syntax unified
 13887              	@ 412 "Core/Src/SEGGER_RTT.c" 1
 13888 04f8 BFF35F8F 		dmb
 13889              	
 13890              	@ 0 "" 2
 412:Core/Src/SEGGER_RTT.c ****     pRing->WrOff = WrOff;
 13891              		.loc 1 412 15 view .LVU5936
 413:Core/Src/SEGGER_RTT.c ****   } while (NumBytes);
 13892              		.loc 1 413 5 view .LVU5937
 413:Core/Src/SEGGER_RTT.c ****   } while (NumBytes);
 13893              		.loc 1 413 18 is_stmt 0 view .LVU5938
 13894              		.thumb
 13895              		.syntax unified
 13896 04fc 6E62     		str	r6, [r5, #36]
 414:Core/Src/SEGGER_RTT.c ****   return NumBytesWritten;
 13897              		.loc 1 414 12 is_stmt 1 view .LVU5939
 13898 04fe B8F1000F 		cmp	r8, #0
 13899 0502 3FF4AEAD 		beq	.L456
 410:Core/Src/SEGGER_RTT.c ****     }
 13900              		.loc 1 410 13 is_stmt 0 view .LVU5940
 13901 0506 0024     		movs	r4, #0
 13902 0508 1EE7     		b	.L492
 13903              	.LVL1312:
 13904              	.L561:
 410:Core/Src/SEGGER_RTT.c ****     }
 13905              		.loc 1 410 13 view .LVU5941
 13906              	.LBE721:
 13907              	.LBE723:
 13908              	.LBE725:
 13909              	.LBE769:
 13910              	.LBB770:
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccSC4OZm.s 			page 371


 13911              	.LBB682:
 13912 050a 3C46     		mov	r4, r7
 13913 050c 4BE6     		b	.L503
 13914              	.LVL1313:
 13915              	.L562:
 410:Core/Src/SEGGER_RTT.c ****     }
 13916              		.loc 1 410 13 view .LVU5942
 13917              	.LBE682:
 13918              	.LBE770:
 13919              	.LBB771:
 13920              	.LBB676:
 13921              	.LBB673:
 13922              	.LBB670:
 13923 050e 5C46     		mov	r4, fp
 13924 0510 20E6     		b	.L497
 13925              	.LVL1314:
 13926              	.L569:
 410:Core/Src/SEGGER_RTT.c ****     }
 13927              		.loc 1 410 13 view .LVU5943
 13928              	.LBE670:
 13929              	.LBE673:
 13930              	.LBE676:
 13931              	.LBE771:
 13932              	.LBB772:
 13933              	.LBB715:
 13934 0512 5C46     		mov	r4, fp
 13935 0514 0AE7     		b	.L485
 13936              	.LVL1315:
 13937              	.L572:
 410:Core/Src/SEGGER_RTT.c ****     }
 13938              		.loc 1 410 13 view .LVU5944
 13939              	.LBE715:
 13940              	.LBE772:
 13941              	.LBB773:
 13942              	.LBB750:
 13943 0516 3C46     		mov	r4, r7
 13944 0518 95E7     		b	.L467
 13945              	.LVL1316:
 13946              	.L571:
 410:Core/Src/SEGGER_RTT.c ****     }
 13947              		.loc 1 410 13 view .LVU5945
 13948              	.LBE750:
 13949              	.LBE773:
 13950              	.LBB774:
 13951              	.LBB742:
 13952              	.LBB738:
 13953              	.LBB734:
 13954 051a 3446     		mov	r4, r6
 13955 051c 6DE7     		b	.L461
 13956              	.LVL1317:
 13957              	.L570:
 410:Core/Src/SEGGER_RTT.c ****     }
 13958              		.loc 1 410 13 view .LVU5946
 13959              	.LBE734:
 13960              	.LBE738:
 13961              	.LBE742:
 13962              	.LBE774:
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccSC4OZm.s 			page 372


 13963              	.LBB775:
 13964              	.LBB709:
 13965              	.LBB706:
 13966              	.LBB703:
 13967 051e 3446     		mov	r4, r6
 13968 0520 D6E6     		b	.L479
 13969              	.LVL1318:
 13970              	.L511:
 410:Core/Src/SEGGER_RTT.c ****     }
 13971              		.loc 1 410 13 view .LVU5947
 13972              	.LBE703:
 13973              	.LBE706:
 13974              	.LBE709:
 13975              	.LBE775:
 13976              	.LBE777:
2039:Core/Src/SEGGER_RTT.c ****   }
 13977              		.loc 1 2039 12 view .LVU5948
 13978 0522 4FF0FF37 		mov	r7, #-1
 13979              	.LVL1319:
2041:Core/Src/SEGGER_RTT.c **** }
 13980              		.loc 1 2041 3 is_stmt 1 view .LVU5949
2041:Core/Src/SEGGER_RTT.c **** }
 13981              		.loc 1 2041 10 is_stmt 0 view .LVU5950
 13982 0526 9FE5     		b	.L449
 13983              	.L576:
 13984              		.align	2
 13985              	.L575:
 13986 0528 00000000 		.word	.LANCHOR3
 13987 052c 00000000 		.word	.LANCHOR4
 13988              		.cfi_endproc
 13989              	.LFE33:
 13991              		.section	.text.SEGGER_RTT_GetAvailWriteSpace,"ax",%progbits
 13992              		.align	1
 13993              		.p2align 2,,3
 13994              		.global	SEGGER_RTT_GetAvailWriteSpace
 13995              		.syntax unified
 13996              		.thumb
 13997              		.thumb_func
 13999              	SEGGER_RTT_GetAvailWriteSpace:
 14000              	.LVL1320:
 14001              	.LFB34:
2043:Core/Src/SEGGER_RTT.c **** 
2044:Core/Src/SEGGER_RTT.c **** /*********************************************************************
2045:Core/Src/SEGGER_RTT.c **** *
2046:Core/Src/SEGGER_RTT.c **** *       SEGGER_RTT_GetAvailWriteSpace
2047:Core/Src/SEGGER_RTT.c **** *
2048:Core/Src/SEGGER_RTT.c **** *  Function description
2049:Core/Src/SEGGER_RTT.c **** *    Returns the number of bytes available in the ring buffer.
2050:Core/Src/SEGGER_RTT.c **** *
2051:Core/Src/SEGGER_RTT.c **** *  Parameters
2052:Core/Src/SEGGER_RTT.c **** *    BufferIndex  Index of the up buffer.
2053:Core/Src/SEGGER_RTT.c **** *
2054:Core/Src/SEGGER_RTT.c **** *  Return value
2055:Core/Src/SEGGER_RTT.c **** *    Number of bytes that are free in the selected up buffer.
2056:Core/Src/SEGGER_RTT.c **** */
2057:Core/Src/SEGGER_RTT.c **** unsigned SEGGER_RTT_GetAvailWriteSpace (unsigned BufferIndex) {
 14002              		.loc 1 2057 63 is_stmt 1 view -0
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccSC4OZm.s 			page 373


 14003              		.cfi_startproc
 14004              		@ args = 0, pretend = 0, frame = 0
 14005              		@ frame_needed = 0, uses_anonymous_args = 0
 14006              		@ link register save eliminated.
2058:Core/Src/SEGGER_RTT.c ****   SEGGER_RTT_BUFFER_UP* pRing;
 14007              		.loc 1 2058 3 view .LVU5952
2059:Core/Src/SEGGER_RTT.c **** 
2060:Core/Src/SEGGER_RTT.c ****   pRing = (SEGGER_RTT_BUFFER_UP*)((char*)&_SEGGER_RTT.aUp[BufferIndex] + SEGGER_RTT_UNCACHED_OFF); 
 14008              		.loc 1 2060 3 view .LVU5953
 14009              	.LBB778:
 14010              	.LBB779:
 534:Core/Src/SEGGER_RTT.c ****   WrOff = pRing->WrOff;
 14011              		.loc 1 534 9 is_stmt 0 view .LVU5954
 14012 0000 064A     		ldr	r2, .L580
 14013              	.LVL1321:
 534:Core/Src/SEGGER_RTT.c ****   WrOff = pRing->WrOff;
 14014              		.loc 1 534 9 view .LVU5955
 14015              	.LBE779:
 14016              	.LBE778:
2061:Core/Src/SEGGER_RTT.c ****   return _GetAvailWriteSpace(pRing);
 14017              		.loc 1 2061 3 is_stmt 1 view .LVU5956
 14018              	.LBB781:
 14019              	.LBI778:
 526:Core/Src/SEGGER_RTT.c ****   unsigned RdOff;
 14020              		.loc 1 526 17 view .LVU5957
 14021              	.LBB780:
 527:Core/Src/SEGGER_RTT.c ****   unsigned WrOff;
 14022              		.loc 1 527 3 view .LVU5958
 528:Core/Src/SEGGER_RTT.c ****   unsigned r;
 14023              		.loc 1 528 3 view .LVU5959
 529:Core/Src/SEGGER_RTT.c ****   //
 14024              		.loc 1 529 3 view .LVU5960
 534:Core/Src/SEGGER_RTT.c ****   WrOff = pRing->WrOff;
 14025              		.loc 1 534 3 view .LVU5961
 534:Core/Src/SEGGER_RTT.c ****   WrOff = pRing->WrOff;
 14026              		.loc 1 534 9 is_stmt 0 view .LVU5962
 14027 0002 00EB4000 		add	r0, r0, r0, lsl #1
 14028              	.LVL1322:
 534:Core/Src/SEGGER_RTT.c ****   WrOff = pRing->WrOff;
 14029              		.loc 1 534 9 view .LVU5963
 14030 0006 02EBC002 		add	r2, r2, r0, lsl #3
 14031 000a 936A     		ldr	r3, [r2, #40]
 14032              	.LVL1323:
 535:Core/Src/SEGGER_RTT.c ****   if (RdOff <= WrOff) {
 14033              		.loc 1 535 3 is_stmt 1 view .LVU5964
 535:Core/Src/SEGGER_RTT.c ****   if (RdOff <= WrOff) {
 14034              		.loc 1 535 9 is_stmt 0 view .LVU5965
 14035 000c 506A     		ldr	r0, [r2, #36]
 14036              	.LVL1324:
 536:Core/Src/SEGGER_RTT.c ****     r = pRing->SizeOfBuffer - 1u - WrOff + RdOff;
 14037              		.loc 1 536 3 is_stmt 1 view .LVU5966
 536:Core/Src/SEGGER_RTT.c ****     r = pRing->SizeOfBuffer - 1u - WrOff + RdOff;
 14038              		.loc 1 536 6 is_stmt 0 view .LVU5967
 14039 000e 8342     		cmp	r3, r0
 537:Core/Src/SEGGER_RTT.c ****   } else {
 14040              		.loc 1 537 5 is_stmt 1 view .LVU5968
 537:Core/Src/SEGGER_RTT.c ****   } else {
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccSC4OZm.s 			page 374


 14041              		.loc 1 537 7 is_stmt 0 view .LVU5969
 14042 0010 9CBF     		itt	ls
 14043 0012 126A     		ldrls	r2, [r2, #32]
 14044 0014 9B18     		addls	r3, r3, r2
 14045              	.LVL1325:
 539:Core/Src/SEGGER_RTT.c ****   }
 14046              		.loc 1 539 5 is_stmt 1 view .LVU5970
 539:Core/Src/SEGGER_RTT.c ****   }
 14047              		.loc 1 539 7 is_stmt 0 view .LVU5971
 14048 0016 013B     		subs	r3, r3, #1
 14049 0018 181A     		subs	r0, r3, r0
 14050              	.LVL1326:
 541:Core/Src/SEGGER_RTT.c **** }
 14051              		.loc 1 541 3 is_stmt 1 view .LVU5972
 541:Core/Src/SEGGER_RTT.c **** }
 14052              		.loc 1 541 3 is_stmt 0 view .LVU5973
 14053              	.LBE780:
 14054              	.LBE781:
2062:Core/Src/SEGGER_RTT.c **** }
 14055              		.loc 1 2062 1 view .LVU5974
 14056 001a 7047     		bx	lr
 14057              	.L581:
 14058              		.align	2
 14059              	.L580:
 14060 001c 00000000 		.word	.LANCHOR0
 14061              		.cfi_endproc
 14062              	.LFE34:
 14064              		.section	.text.SEGGER_RTT_GetBytesInBuffer,"ax",%progbits
 14065              		.align	1
 14066              		.p2align 2,,3
 14067              		.global	SEGGER_RTT_GetBytesInBuffer
 14068              		.syntax unified
 14069              		.thumb
 14070              		.thumb_func
 14072              	SEGGER_RTT_GetBytesInBuffer:
 14073              	.LVL1327:
 14074              	.LFB35:
2063:Core/Src/SEGGER_RTT.c **** 
2064:Core/Src/SEGGER_RTT.c **** 
2065:Core/Src/SEGGER_RTT.c **** /*********************************************************************
2066:Core/Src/SEGGER_RTT.c **** *
2067:Core/Src/SEGGER_RTT.c **** *       SEGGER_RTT_GetBytesInBuffer()
2068:Core/Src/SEGGER_RTT.c **** *
2069:Core/Src/SEGGER_RTT.c **** *  Function description
2070:Core/Src/SEGGER_RTT.c **** *    Returns the number of bytes currently used in the up buffer.
2071:Core/Src/SEGGER_RTT.c **** *
2072:Core/Src/SEGGER_RTT.c **** *  Parameters
2073:Core/Src/SEGGER_RTT.c **** *    BufferIndex  Index of the up buffer.
2074:Core/Src/SEGGER_RTT.c **** *
2075:Core/Src/SEGGER_RTT.c **** *  Return value
2076:Core/Src/SEGGER_RTT.c **** *    Number of bytes that are used in the buffer.
2077:Core/Src/SEGGER_RTT.c **** */
2078:Core/Src/SEGGER_RTT.c **** unsigned SEGGER_RTT_GetBytesInBuffer(unsigned BufferIndex) {
 14075              		.loc 1 2078 60 is_stmt 1 view -0
 14076              		.cfi_startproc
 14077              		@ args = 0, pretend = 0, frame = 0
 14078              		@ frame_needed = 0, uses_anonymous_args = 0
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccSC4OZm.s 			page 375


 14079              		@ link register save eliminated.
2079:Core/Src/SEGGER_RTT.c ****   unsigned RdOff;
 14080              		.loc 1 2079 3 view .LVU5976
2080:Core/Src/SEGGER_RTT.c ****   unsigned WrOff;
 14081              		.loc 1 2080 3 view .LVU5977
2081:Core/Src/SEGGER_RTT.c ****   unsigned r;
 14082              		.loc 1 2081 3 view .LVU5978
2082:Core/Src/SEGGER_RTT.c ****   volatile SEGGER_RTT_CB* pRTTCB;
 14083              		.loc 1 2082 3 view .LVU5979
2083:Core/Src/SEGGER_RTT.c ****   //
2084:Core/Src/SEGGER_RTT.c ****   // Avoid warnings regarding volatile access order.  It's not a problem
2085:Core/Src/SEGGER_RTT.c ****   // in this case, but dampen compiler enthusiasm.
2086:Core/Src/SEGGER_RTT.c ****   //
2087:Core/Src/SEGGER_RTT.c ****   pRTTCB = (volatile SEGGER_RTT_CB*)((unsigned char*)&_SEGGER_RTT + SEGGER_RTT_UNCACHED_OFF);  // A
 14084              		.loc 1 2087 3 view .LVU5980
2088:Core/Src/SEGGER_RTT.c ****   RdOff = pRTTCB->aUp[BufferIndex].RdOff;
 14085              		.loc 1 2088 3 view .LVU5981
 14086              		.loc 1 2088 9 is_stmt 0 view .LVU5982
 14087 0000 064B     		ldr	r3, .L585
 14088 0002 00EB4000 		add	r0, r0, r0, lsl #1
 14089              	.LVL1328:
 14090              		.loc 1 2088 9 view .LVU5983
 14091 0006 03EBC003 		add	r3, r3, r0, lsl #3
 14092 000a 9A6A     		ldr	r2, [r3, #40]
 14093              	.LVL1329:
2089:Core/Src/SEGGER_RTT.c ****   WrOff = pRTTCB->aUp[BufferIndex].WrOff;
 14094              		.loc 1 2089 3 is_stmt 1 view .LVU5984
 14095              		.loc 1 2089 9 is_stmt 0 view .LVU5985
 14096 000c 586A     		ldr	r0, [r3, #36]
 14097              	.LVL1330:
2090:Core/Src/SEGGER_RTT.c ****   if (RdOff <= WrOff) {
 14098              		.loc 1 2090 3 is_stmt 1 view .LVU5986
 14099              		.loc 1 2090 6 is_stmt 0 view .LVU5987
 14100 000e 8242     		cmp	r2, r0
2091:Core/Src/SEGGER_RTT.c ****     r = WrOff - RdOff;
 14101              		.loc 1 2091 5 is_stmt 1 view .LVU5988
2092:Core/Src/SEGGER_RTT.c ****   } else {
2093:Core/Src/SEGGER_RTT.c ****     r = pRTTCB->aUp[BufferIndex].SizeOfBuffer - (WrOff - RdOff);
 14102              		.loc 1 2093 33 is_stmt 0 view .LVU5989
 14103 0010 85BF     		ittet	hi
 14104 0012 1B6A     		ldrhi	r3, [r3, #32]
 14105              		.loc 1 2093 7 view .LVU5990
 14106 0014 9B18     		addhi	r3, r3, r2
2091:Core/Src/SEGGER_RTT.c ****     r = WrOff - RdOff;
 14107              		.loc 1 2091 7 view .LVU5991
 14108 0016 801A     		subls	r0, r0, r2
 14109              	.LVL1331:
 14110              		.loc 1 2093 5 is_stmt 1 view .LVU5992
 14111              		.loc 1 2093 7 is_stmt 0 view .LVU5993
 14112 0018 181A     		subhi	r0, r3, r0
 14113              	.LVL1332:
2094:Core/Src/SEGGER_RTT.c ****   }
2095:Core/Src/SEGGER_RTT.c ****   return r;
 14114              		.loc 1 2095 3 is_stmt 1 view .LVU5994
2096:Core/Src/SEGGER_RTT.c **** }
 14115              		.loc 1 2096 1 is_stmt 0 view .LVU5995
 14116 001a 7047     		bx	lr
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccSC4OZm.s 			page 376


 14117              	.L586:
 14118              		.align	2
 14119              	.L585:
 14120 001c 00000000 		.word	.LANCHOR0
 14121              		.cfi_endproc
 14122              	.LFE35:
 14124              		.global	_SEGGER_RTT
 14125              		.section	.bss._ActiveTerminal,"aw",%nobits
 14126              		.set	.LANCHOR4,. + 0
 14129              	_ActiveTerminal:
 14130 0000 00       		.space	1
 14131              		.section	.bss._SEGGER_RTT,"aw",%nobits
 14132              		.align	2
 14133              		.set	.LANCHOR0,. + 0
 14136              	_SEGGER_RTT:
 14137 0000 00000000 		.space	168
 14137      00000000 
 14137      00000000 
 14137      00000000 
 14137      00000000 
 14138              		.section	.bss._acDownBuffer,"aw",%nobits
 14139              		.align	2
 14140              		.set	.LANCHOR2,. + 0
 14143              	_acDownBuffer:
 14144 0000 00000000 		.space	16
 14144      00000000 
 14144      00000000 
 14144      00000000 
 14145              		.section	.bss._acUpBuffer,"aw",%nobits
 14146              		.align	2
 14147              		.set	.LANCHOR1,. + 0
 14150              	_acUpBuffer:
 14151 0000 00000000 		.space	1024
 14151      00000000 
 14151      00000000 
 14151      00000000 
 14151      00000000 
 14152              		.section	.rodata._aTerminalId,"a"
 14153              		.align	2
 14154              		.set	.LANCHOR3,. + 0
 14157              	_aTerminalId:
 14158 0000 30313233 		.ascii	"0123456789ABCDEF"
 14158      34353637 
 14158      38394142 
 14158      43444546 
 14159              		.text
 14160              	.Letext0:
 14161              		.file 2 "Core/Inc/SEGGER_RTT.h"
 14162              		.file 3 "/Users/johannes/Library/Application Support/Code/User/globalStorage/bmd.stm32-for-vscode/
 14163              		.file 4 "/Users/johannes/Library/Application Support/Code/User/globalStorage/bmd.stm32-for-vscode/
 14164              		.file 5 "<built-in>"
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccSC4OZm.s 			page 377


DEFINED SYMBOLS
                            *ABS*:0000000000000000 SEGGER_RTT.c
/var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccSC4OZm.s:20     .rodata.SEGGER_RTT_ReadUpBufferNoLock.str1.4:0000000000000000 $d
/var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccSC4OZm.s:24     .text.SEGGER_RTT_ReadUpBufferNoLock:0000000000000000 $t
/var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccSC4OZm.s:31     .text.SEGGER_RTT_ReadUpBufferNoLock:0000000000000000 SEGGER_RTT_ReadUpBufferNoLock
/var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccSC4OZm.s:467    .text.SEGGER_RTT_ReadUpBufferNoLock:0000000000000138 $d
/var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccSC4OZm.s:478    .text.SEGGER_RTT_ReadNoLock:0000000000000000 $t
/var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccSC4OZm.s:485    .text.SEGGER_RTT_ReadNoLock:0000000000000000 SEGGER_RTT_ReadNoLock
/var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccSC4OZm.s:909    .text.SEGGER_RTT_ReadNoLock:0000000000000124 $d
/var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccSC4OZm.s:920    .text.SEGGER_RTT_ReadUpBuffer:0000000000000000 $t
/var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccSC4OZm.s:927    .text.SEGGER_RTT_ReadUpBuffer:0000000000000000 SEGGER_RTT_ReadUpBuffer
/var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccSC4OZm.s:1395   .text.SEGGER_RTT_ReadUpBuffer:0000000000000150 $d
/var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccSC4OZm.s:1409   .text.SEGGER_RTT_Read:0000000000000000 $t
/var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccSC4OZm.s:1416   .text.SEGGER_RTT_Read:0000000000000000 SEGGER_RTT_Read
/var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccSC4OZm.s:1871   .text.SEGGER_RTT_Read:0000000000000134 $d
/var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccSC4OZm.s:1885   .text.SEGGER_RTT_WriteWithOverwriteNoLock:0000000000000000 $t
/var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccSC4OZm.s:1892   .text.SEGGER_RTT_WriteWithOverwriteNoLock:0000000000000000 SEGGER_RTT_WriteWithOverwriteNoLock
/var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccSC4OZm.s:2120   .text.SEGGER_RTT_WriteWithOverwriteNoLock:00000000000000d8 $d
/var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccSC4OZm.s:2125   .text.SEGGER_RTT_WriteDownBufferNoLock:0000000000000000 $t
/var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccSC4OZm.s:2132   .text.SEGGER_RTT_WriteDownBufferNoLock:0000000000000000 SEGGER_RTT_WriteDownBufferNoLock
/var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccSC4OZm.s:2641   .text.SEGGER_RTT_WriteDownBufferNoLock:000000000000014c $d
/var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccSC4OZm.s:2648   .text.SEGGER_RTT_WriteNoLock:0000000000000000 $t
/var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccSC4OZm.s:2655   .text.SEGGER_RTT_WriteNoLock:0000000000000000 SEGGER_RTT_WriteNoLock
/var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccSC4OZm.s:3256   .text.SEGGER_RTT_WriteNoLock:00000000000001c4 $d
/var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccSC4OZm.s:3263   .text.SEGGER_RTT_WriteDownBuffer:0000000000000000 $t
/var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccSC4OZm.s:3270   .text.SEGGER_RTT_WriteDownBuffer:0000000000000000 SEGGER_RTT_WriteDownBuffer
/var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccSC4OZm.s:4110   .text.SEGGER_RTT_WriteDownBuffer:00000000000001f4 $d
/var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccSC4OZm.s:4123   .text.SEGGER_RTT_Write:0000000000000000 $t
/var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccSC4OZm.s:4130   .text.SEGGER_RTT_Write:0000000000000000 SEGGER_RTT_Write
/var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccSC4OZm.s:4980   .text.SEGGER_RTT_Write:0000000000000268 $d
/var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccSC4OZm.s:4993   .text.SEGGER_RTT_WriteString:0000000000000000 $t
/var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccSC4OZm.s:5000   .text.SEGGER_RTT_WriteString:0000000000000000 SEGGER_RTT_WriteString
/var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccSC4OZm.s:5873   .text.SEGGER_RTT_WriteString:0000000000000270 $d
/var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccSC4OZm.s:5888   .text.SEGGER_RTT_PutCharSkipNoLock:0000000000000000 $t
/var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccSC4OZm.s:5895   .text.SEGGER_RTT_PutCharSkipNoLock:0000000000000000 SEGGER_RTT_PutCharSkipNoLock
/var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccSC4OZm.s:6000   .text.SEGGER_RTT_PutCharSkipNoLock:0000000000000040 $d
/var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccSC4OZm.s:6005   .text.SEGGER_RTT_PutCharSkip:0000000000000000 $t
/var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccSC4OZm.s:6012   .text.SEGGER_RTT_PutCharSkip:0000000000000000 SEGGER_RTT_PutCharSkip
/var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccSC4OZm.s:6360   .text.SEGGER_RTT_PutCharSkip:00000000000000d0 $d
/var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccSC4OZm.s:6371   .text.SEGGER_RTT_PutChar:0000000000000000 $t
/var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccSC4OZm.s:6378   .text.SEGGER_RTT_PutChar:0000000000000000 SEGGER_RTT_PutChar
/var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccSC4OZm.s:6753   .text.SEGGER_RTT_PutChar:00000000000000e8 $d
/var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccSC4OZm.s:6764   .text.SEGGER_RTT_GetKey:0000000000000000 $t
/var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccSC4OZm.s:6771   .text.SEGGER_RTT_GetKey:0000000000000000 SEGGER_RTT_GetKey
/var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccSC4OZm.s:7295   .text.SEGGER_RTT_GetKey:000000000000011c $d
/var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccSC4OZm.s:7308   .text.SEGGER_RTT_WaitKey:0000000000000000 $t
/var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccSC4OZm.s:7315   .text.SEGGER_RTT_WaitKey:0000000000000000 SEGGER_RTT_WaitKey
/var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccSC4OZm.s:7900   .text.SEGGER_RTT_WaitKey:0000000000000128 $d
/var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccSC4OZm.s:7915   .text.SEGGER_RTT_HasKey:0000000000000000 $t
/var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccSC4OZm.s:7922   .text.SEGGER_RTT_HasKey:0000000000000000 SEGGER_RTT_HasKey
/var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccSC4OZm.s:8193   .text.SEGGER_RTT_HasKey:000000000000008c $d
/var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccSC4OZm.s:8201   .text.SEGGER_RTT_HasData:0000000000000000 $t
/var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccSC4OZm.s:8208   .text.SEGGER_RTT_HasData:0000000000000000 SEGGER_RTT_HasData
/var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccSC4OZm.s:8239   .text.SEGGER_RTT_HasData:0000000000000014 $d
/var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccSC4OZm.s:8244   .text.SEGGER_RTT_HasDataUp:0000000000000000 $t
/var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccSC4OZm.s:8251   .text.SEGGER_RTT_HasDataUp:0000000000000000 SEGGER_RTT_HasDataUp
/var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccSC4OZm.s:8280   .text.SEGGER_RTT_HasDataUp:0000000000000014 $d
ARM GAS  /var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccSC4OZm.s 			page 378


/var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccSC4OZm.s:8285   .text.SEGGER_RTT_AllocDownBuffer:0000000000000000 $t
/var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccSC4OZm.s:8292   .text.SEGGER_RTT_AllocDownBuffer:0000000000000000 SEGGER_RTT_AllocDownBuffer
/var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccSC4OZm.s:8687   .text.SEGGER_RTT_AllocDownBuffer:00000000000000f0 $d
/var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccSC4OZm.s:8696   .text.SEGGER_RTT_AllocUpBuffer:0000000000000000 $t
/var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccSC4OZm.s:8703   .text.SEGGER_RTT_AllocUpBuffer:0000000000000000 SEGGER_RTT_AllocUpBuffer
/var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccSC4OZm.s:9105   .text.SEGGER_RTT_AllocUpBuffer:0000000000000114 $d
/var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccSC4OZm.s:9114   .text.SEGGER_RTT_ConfigUpBuffer:0000000000000000 $t
/var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccSC4OZm.s:9121   .text.SEGGER_RTT_ConfigUpBuffer:0000000000000000 SEGGER_RTT_ConfigUpBuffer
/var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccSC4OZm.s:9474   .text.SEGGER_RTT_ConfigUpBuffer:00000000000000dc $d
/var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccSC4OZm.s:9482   .text.SEGGER_RTT_ConfigDownBuffer:0000000000000000 $t
/var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccSC4OZm.s:9489   .text.SEGGER_RTT_ConfigDownBuffer:0000000000000000 SEGGER_RTT_ConfigDownBuffer
/var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccSC4OZm.s:9840   .text.SEGGER_RTT_ConfigDownBuffer:00000000000000d4 $d
/var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccSC4OZm.s:9848   .text.SEGGER_RTT_SetNameUpBuffer:0000000000000000 $t
/var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccSC4OZm.s:9855   .text.SEGGER_RTT_SetNameUpBuffer:0000000000000000 SEGGER_RTT_SetNameUpBuffer
/var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccSC4OZm.s:10161  .text.SEGGER_RTT_SetNameUpBuffer:00000000000000a4 $d
/var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccSC4OZm.s:10169  .text.SEGGER_RTT_SetNameDownBuffer:0000000000000000 $t
/var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccSC4OZm.s:10176  .text.SEGGER_RTT_SetNameDownBuffer:0000000000000000 SEGGER_RTT_SetNameDownBuffer
/var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccSC4OZm.s:10479  .text.SEGGER_RTT_SetNameDownBuffer:00000000000000a4 $d
/var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccSC4OZm.s:10487  .text.SEGGER_RTT_SetFlagsUpBuffer:0000000000000000 $t
/var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccSC4OZm.s:10494  .text.SEGGER_RTT_SetFlagsUpBuffer:0000000000000000 SEGGER_RTT_SetFlagsUpBuffer
/var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccSC4OZm.s:10797  .text.SEGGER_RTT_SetFlagsUpBuffer:00000000000000a4 $d
/var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccSC4OZm.s:10805  .text.SEGGER_RTT_SetFlagsDownBuffer:0000000000000000 $t
/var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccSC4OZm.s:10812  .text.SEGGER_RTT_SetFlagsDownBuffer:0000000000000000 SEGGER_RTT_SetFlagsDownBuffer
/var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccSC4OZm.s:11115  .text.SEGGER_RTT_SetFlagsDownBuffer:00000000000000a4 $d
/var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccSC4OZm.s:11123  .text.SEGGER_RTT_Init:0000000000000000 $t
/var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccSC4OZm.s:11130  .text.SEGGER_RTT_Init:0000000000000000 SEGGER_RTT_Init
/var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccSC4OZm.s:11350  .text.SEGGER_RTT_Init:000000000000007c $d
/var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccSC4OZm.s:11358  .text.SEGGER_RTT_SetTerminal:0000000000000000 $t
/var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccSC4OZm.s:11365  .text.SEGGER_RTT_SetTerminal:0000000000000000 SEGGER_RTT_SetTerminal
/var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccSC4OZm.s:12011  .text.SEGGER_RTT_SetTerminal:0000000000000190 $d
/var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccSC4OZm.s:12021  .text.SEGGER_RTT_TerminalOut:0000000000000000 $t
/var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccSC4OZm.s:12028  .text.SEGGER_RTT_TerminalOut:0000000000000000 SEGGER_RTT_TerminalOut
/var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccSC4OZm.s:12907  .text.SEGGER_RTT_TerminalOut:0000000000000248 $d
/var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccSC4OZm.s:12922  .text.SEGGER_RTT_TerminalOut:0000000000000260 $t
/var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccSC4OZm.s:13986  .text.SEGGER_RTT_TerminalOut:0000000000000528 $d
/var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccSC4OZm.s:13992  .text.SEGGER_RTT_GetAvailWriteSpace:0000000000000000 $t
/var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccSC4OZm.s:13999  .text.SEGGER_RTT_GetAvailWriteSpace:0000000000000000 SEGGER_RTT_GetAvailWriteSpace
/var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccSC4OZm.s:14060  .text.SEGGER_RTT_GetAvailWriteSpace:000000000000001c $d
/var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccSC4OZm.s:14065  .text.SEGGER_RTT_GetBytesInBuffer:0000000000000000 $t
/var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccSC4OZm.s:14072  .text.SEGGER_RTT_GetBytesInBuffer:0000000000000000 SEGGER_RTT_GetBytesInBuffer
/var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccSC4OZm.s:14120  .text.SEGGER_RTT_GetBytesInBuffer:000000000000001c $d
/var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccSC4OZm.s:14136  .bss._SEGGER_RTT:0000000000000000 _SEGGER_RTT
/var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccSC4OZm.s:14129  .bss._ActiveTerminal:0000000000000000 _ActiveTerminal
/var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccSC4OZm.s:14130  .bss._ActiveTerminal:0000000000000000 $d
/var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccSC4OZm.s:14132  .bss._SEGGER_RTT:0000000000000000 $d
/var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccSC4OZm.s:14139  .bss._acDownBuffer:0000000000000000 $d
/var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccSC4OZm.s:14143  .bss._acDownBuffer:0000000000000000 _acDownBuffer
/var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccSC4OZm.s:14146  .bss._acUpBuffer:0000000000000000 $d
/var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccSC4OZm.s:14150  .bss._acUpBuffer:0000000000000000 _acUpBuffer
/var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccSC4OZm.s:14153  .rodata._aTerminalId:0000000000000000 $d
/var/folders/0z/tsy30v1j4xl4_7kw94k978ww0000gn/T//ccSC4OZm.s:14157  .rodata._aTerminalId:0000000000000000 _aTerminalId

UNDEFINED SYMBOLS
memcpy
memset
strlen
